var {:scalar} alloc: int;

var {:scalar} start_irql: int;

var {:scalar} yogi_error: int;

var {:scalar} sdv_irql_previous_5: int;

var {:scalar} sdv_irql_previous_2: int;

var {:scalar} sdv_irql_current: int;

var {:scalar} sdv_irql_previous: int;

var {:scalar} sdv_irql_previous_4: int;

var {:scalar} sdv_irql_previous_3: int;

var {:scalar} Mem_T.CancelIrql__IRP: [int]int;

var {:scalar} Mem_T.CancelRoutine__IRP: [int]int;

var {:scalar} Mem_T.INT4: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const SerialPortNameGuid: int;

const SerailPortPerfGuid: int;

const SerialPortPropertiesGuid: int;

const SerialPortHWGuid: int;

const CyzGlobals: int;

const SerialPortCommGuid: int;

const CyzPhysicalZero: int;

const KeTickCount: int;

const CyzPhysicalZero_1: int;

const driverDefaults: int;

const CyzPhysicalZero_2: int;

const currentInstance_sdv_static_local_variable_117: int;

const GUID_DEVINTERFACE_COMPORT: int;

const sdv_cancelFptr: int;

const CyzPhysicalZero_3: int;

const CyzPhysicalZero_4: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv1: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_kdpc: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_pIoDpcContext: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_io_create_device_called: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_20: int, actual_sdv_21: int) returns (Tmp_18: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_20: int, actual_sdv_21: int) returns (Tmp_18: int)
{
  var {:scalar} sdv_22: int;

  anon0:
    call {:si_unique_call 0} Tmp_18 := __HAVOC_malloc(4);
    call {:si_unique_call 1} sdv_22 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    assume {:nonnull} sdv_22 != 0;
    assume sdv_22 > 0;
    Mem_T.INT4[Tmp_18] := Mem_T.INT4[sdv_22];
    return;
}



procedure {:origName "CyzFlush"} CyzFlush(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_28: int);
  modifies alloc, start_irql, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFlush"} CyzFlush(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_28: int)
{
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} Tmp_31: int;
  var {:pointer} Tmp_32: int;
  var {:pointer} Extension: int;
  var {:scalar} sdv_38: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Tmp_35: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    Irp := actual_Irp;
    call {:si_unique_call 2} Tmp_29 := __HAVOC_malloc(72);
    call {:si_unique_call 3} Tmp_30 := __HAVOC_malloc(72);
    call {:si_unique_call 4} Tmp_31 := __HAVOC_malloc(72);
    call {:si_unique_call 5} Tmp_32 := __HAVOC_malloc(76);
    call {:si_unique_call 6} Tmp_33 := __HAVOC_malloc(96);
    call {:si_unique_call 7} Tmp_35 := __HAVOC_malloc(72);
    call {:si_unique_call 8} SLIC_CyzFlush_entry(0);
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc Extension;
    call {:si_unique_call 9} sdv_do_paged_code_check();
    Tmp_33 := strConst__li2bpl1;
    call {:si_unique_call 10} vslice_dummy_var_0 := CyzDbgPrintEx(9, Tmp_33);
    Tmp_32 := strConst__li2bpl2;
    call {:si_unique_call 11} vslice_dummy_var_1 := CyzDbgPrintEx(2, Tmp_32);
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    call {:si_unique_call 12} status := CyzIRPPrologue(Irp, Extension);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status != 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status >= 0;
    goto L29;

  L29:
    Tmp_29 := strConst__li2bpl4;
    call {:si_unique_call 13} vslice_dummy_var_2 := CyzDbgPrintEx(2, Tmp_29);
    Tmp_28 := status;
    goto L1;

  L1:
    call {:si_unique_call 14} SLIC_CyzFlush_exit(strConst__li2bpl0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 > status;
    Tmp_31 := strConst__li2bpl3;
    call {:si_unique_call 15} vslice_dummy_var_3 := CyzDbgPrintEx(9, Tmp_31);
    call {:si_unique_call 16} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 17} CyzIRPEpilogue(Extension);
    goto L29;

  anon9_Then:
    assume {:partition} status == 0;
    call {:si_unique_call 18} sdv_38 := CyzCompleteIfError(DeviceObject, Irp);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_38 != 0;
    Tmp_35 := strConst__li2bpl5;
    call {:si_unique_call 19} vslice_dummy_var_4 := CyzDbgPrintEx(2, Tmp_35);
    Tmp_28 := -1073741536;
    goto L1;

  anon10_Then:
    assume {:partition} sdv_38 == 0;
    assume {:nonnull} Extension != 0;
    assume Extension > 0;
    call {:si_unique_call 20} status := CyzStartOrQueue(Extension, Irp, WriteQueue__CYZ_DEVICE_EXTENSION(Extension), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension), li2bplFunctionConstant131);
    Tmp_30 := strConst__li2bpl6;
    call {:si_unique_call 21} vslice_dummy_var_5 := CyzDbgPrintEx(2, Tmp_30);
    Tmp_28 := status;
    goto L1;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 22} vslice_dummy_var_6 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartFlush"} CyzStartFlush(actual_Extension_1: int) returns (Tmp_38: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} Tmp_38 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartFlush"} CyzStartFlush(actual_Extension_1: int) returns (Tmp_38: int)
{
  var {:pointer} NewIrp: int;
  var {:pointer} Tmp_39: int;
  var {:pointer} Extension_1: int;
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 23} NewIrp := __HAVOC_malloc(4);
    Extension_1 := actual_Extension_1;
    call {:si_unique_call 24} sdv_do_paged_code_check();
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_39;
    assume {:nonnull} Tmp_39 != 0;
    assume Tmp_39 > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 25} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_1), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_1), NewIrp, 1, Extension_1);
    assume {:nonnull} NewIrp != 0;
    assume NewIrp > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 26} vslice_dummy_var_7 := CyzStartWrite#1(Extension_1);
    goto L12;

  L12:
    Tmp_38 := 0;
    return;

  anon3_Then:
    goto L12;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 27} vslice_dummy_var_8 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyzGetRegistryKeyValueLength"} CyzGetRegistryKeyValueLength(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int) returns (Tmp_43: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetRegistryKeyValueLength"} CyzGetRegistryKeyValueLength(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int) returns (Tmp_43: int)
{
  var {:pointer} fullInfo: int;
  var {:scalar} length: int;
  var {:pointer} sdv_41: int;
  var {:scalar} keyName: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} KeyNameString: int;
  var {:scalar} KeyNameStringLength: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 28} keyName := __HAVOC_malloc(12);
    KeyNameString := actual_KeyNameString;
    KeyNameStringLength := actual_KeyNameStringLength;
    call {:si_unique_call 29} sdv_do_paged_code_check();
    call {:si_unique_call 30} RtlInitUnicodeString(keyName, KeyNameString);
    length := 24 + KeyNameStringLength;
    call {:si_unique_call 31} sdv_41 := ExAllocatePoolWithTag(1, length, -797279933);
    fullInfo := sdv_41;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} fullInfo != 0;
    call {:si_unique_call 32} Tmp_44 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    Mem_T.INT4[Tmp_44] := length;
    call {:si_unique_call 33} vslice_dummy_var_9 := ZwQueryValueKey(0, 0, 1, 0, length, Tmp_44);
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    length := Mem_T.INT4[Tmp_44];
    call {:si_unique_call 34} sdv_ExFreePool(0);
    goto L18;

  L18:
    Tmp_43 := length;
    return;

  anon3_Then:
    assume {:partition} fullInfo == 0;
    goto L18;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 35} vslice_dummy_var_10 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGetRegistryKeyValue"} CyzGetRegistryKeyValue(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int, actual_Data: int, actual_DataLength: int) returns (Tmp_47: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_47 == -1073741811 || Tmp_47 == -1073741823 || Tmp_47 == 0 || Tmp_47 == 5 || Tmp_47 == -1073741789 || Tmp_47 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetRegistryKeyValue"} CyzGetRegistryKeyValue(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int, actual_Data: int, actual_DataLength: int) returns (Tmp_47: int)
{
  var {:pointer} fullInfo_1: int;
  var {:pointer} Tmp_48: int;
  var {:scalar} length_1: int;
  var {:pointer} Tmp_49: int;
  var {:pointer} sdv_44: int;
  var {:scalar} ntStatus: int;
  var {:scalar} keyName_1: int;
  var {:pointer} Tmp_50: int;
  var {:pointer} KeyNameString_1: int;
  var {:scalar} KeyNameStringLength_1: int;
  var {:scalar} DataLength: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_711: int;

  anon0:
    call {:si_unique_call 36} keyName_1 := __HAVOC_malloc(12);
    KeyNameString_1 := actual_KeyNameString_1;
    KeyNameStringLength_1 := actual_KeyNameStringLength_1;
    DataLength := actual_DataLength;
    call {:si_unique_call 37} Tmp_48 := __HAVOC_malloc(120);
    call {:si_unique_call 38} Tmp_49 := __HAVOC_malloc(112);
    ntStatus := -1073741670;
    call {:si_unique_call 39} sdv_do_paged_code_check();
    Tmp_48 := strConst__li2bpl8;
    call {:si_unique_call 40} vslice_dummy_var_11 := CyzDbgPrintEx(2, Tmp_48);
    call {:si_unique_call 41} RtlInitUnicodeString(keyName_1, KeyNameString_1);
    length_1 := 24 + KeyNameStringLength_1 + DataLength;
    call {:si_unique_call 42} sdv_44 := ExAllocatePoolWithTag(1, length_1, -797279933);
    fullInfo_1 := sdv_44;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fullInfo_1 != 0;
    call {:si_unique_call 43} Tmp_50 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    Mem_T.INT4[Tmp_50] := length_1;
    call {:si_unique_call 44} ntStatus := ZwQueryValueKey(0, 0, 1, 0, length_1, Tmp_50);
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    length_1 := Mem_T.INT4[Tmp_50];
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} fullInfo_1 != 0;
    assume fullInfo_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} fullInfo_1 != 0;
    assume fullInfo_1 > 0;
    havoc vslice_dummy_var_711;
    call {:si_unique_call 45} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_711);
    goto L31;

  L31:
    call {:si_unique_call 46} sdv_ExFreePool(0);
    goto L23;

  L23:
    Tmp_49 := strConst__li2bpl9;
    call {:si_unique_call 47} vslice_dummy_var_12 := CyzDbgPrintEx(2, Tmp_49);
    Tmp_47 := ntStatus;
    return;

  anon8_Then:
    goto L31;

  anon7_Then:
    assume {:partition} 0 > ntStatus;
    goto L31;

  anon9_Then:
    assume {:partition} fullInfo_1 == 0;
    goto L23;
}



procedure {:origName "CyzSetMCRContents"} CyzSetMCRContents(actual_Context: int) returns (Tmp_52: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_52 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetMCRContents"} CyzSetMCRContents(actual_Context: int) returns (Tmp_52: int)
{
  var {:scalar} op: int;
  var {:scalar} Tmp_54: int;
  var {:pointer} Extension_2: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:pointer} Result: int;
  var {:scalar} rs: int;
  var {:pointer} Context: int;

  anon0:
    Context := actual_Context;
    Tmp_55 := Context;
    assume {:nonnull} Tmp_55 != 0;
    assume Tmp_55 > 0;
    havoc Extension_2;
    Tmp_56 := Context;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc Result;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    call {:si_unique_call 48} rs := corral_nondet();
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(Mem_T.INT4[Result], 1) != 0;
    rs := BOR(rs, 4);
    goto L18;

  L18:
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} BAND(Mem_T.INT4[Result], 2) != 0;
    rs := BOR(rs, 1);
    goto L21;

  L21:
    Tmp_54 := BOR(rs, 0);
    call {:si_unique_call 49} CyzIssueCmd(Extension_2, 4, Tmp_54, 0);
    call {:si_unique_call 50} op := corral_nondet();
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mem_T.INT4[Result], 16) != 0;
    op := BOR(op, 4);
    goto L35;

  L35:
    call {:si_unique_call 51} CyzIssueCmd(Extension_2, 2, 0, 0);
    Tmp_52 := 0;
    return;

  anon9_Then:
    assume {:partition} BAND(Mem_T.INT4[Result], 16) == 0;
    op := BAND(op, BNOT(4));
    goto L35;

  anon8_Then:
    assume {:partition} BAND(Mem_T.INT4[Result], 2) == 0;
    rs := BAND(rs, BNOT(1));
    goto L21;

  anon7_Then:
    assume {:partition} BAND(Mem_T.INT4[Result], 1) == 0;
    rs := BAND(rs, BNOT(4));
    goto L18;
}



procedure {:origName "CyzGetProperties"} CyzGetProperties(actual_Extension_3: int, actual_Properties: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetProperties"} CyzGetProperties(actual_Extension_3: int, actual_Properties: int)
{
  var {:pointer} Extension_3: int;
  var {:pointer} Properties: int;
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 52} vslice_dummy_var_13 := __HAVOC_malloc(4);
    Extension_3 := actual_Extension_3;
    Properties := actual_Properties;
    call {:si_unique_call 53} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    return;
}



procedure {:origName "CyzGetStats"} CyzGetStats(actual_Context_1: int) returns (Tmp_59: int);
  free ensures {:va_keep} Tmp_59 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetStats"} CyzGetStats(actual_Context_1: int) returns (Tmp_59: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} Tmp_60: int;
  var {:pointer} Tmp_61: int;
  var {:pointer} sp: int;
  var {:pointer} extension: int;
  var {:pointer} Context_1: int;

  anon0:
    Context_1 := actual_Context_1;
    call {:si_unique_call 54} irpSp := sdv_IoGetCurrentIrpStackLocation(Context_1);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    havoc Tmp_60;
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    havoc extension;
    Tmp_61 := Context_1;
    assume {:nonnull} Tmp_61 != 0;
    assume Tmp_61 > 0;
    havoc sp;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    Tmp_59 := 0;
    return;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 55} vslice_dummy_var_14 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzIoControl"} CyzIoControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_65: int);
  modifies alloc, Mem_T.INT4, start_irql, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIoControl"} CyzIoControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_65: int)
{
  var {:scalar} OldIrql: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} NewChars: int;
  var {:scalar} Tmp_68: int;
  var {:pointer} NewTimeouts: int;
  var {:scalar} Tmp_69: int;
  var {:scalar} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} escapeChar: int;
  var {:scalar} Mask: int;
  var {:scalar} S: int;
  var {:pointer} Lc: int;
  var {:scalar} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:scalar} Status: int;
  var {:scalar} prologueStatus: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:scalar} S_1: int;
  var {:pointer} Rs: int;
  var {:pointer} Br: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_80: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} IrpSp: int;
  var {:scalar} S_2: int;
  var {:scalar} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} HandFlow: int;
  var {:scalar} OldIrql_1: int;
  var {:scalar} LData: int;
  var {:scalar} S_3: int;
  var {:pointer} Extension_4: int;
  var {:scalar} LParity: int;
  var {:scalar} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:scalar} Tmp_86: int;
  var {:scalar} Tmp_87: int;
  var {:scalar} sdv_80: int;
  var {:pointer} Tmp_88: int;
  var {:scalar} S_4: int;
  var {:pointer} Tmp_89: int;
  var {:scalar} Mask_1: int;
  var {:scalar} ModemControl: int;
  var {:scalar} NewMask: int;
  var {:pointer} Xc: int;
  var {:pointer} Tmp_90: int;
  var {:scalar} LStop: int;
  var {:pointer} Tmp_91: int;
  var {:scalar} S_5: int;
  var {:scalar} rs_1: int;
  var {:scalar} BaudRate: int;
  var {:scalar} S_6: int;
  var {:scalar} S_7: int;
  var {:scalar} Tmp_92: int;
  var {:scalar} pollIrql: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} Lc_1: int;
  var {:pointer} Tmp_94: int;
  var {:scalar} S_8: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_712: int;
  var vslice_dummy_var_713: int;
  var vslice_dummy_var_714: int;
  var vslice_dummy_var_715: int;
  var vslice_dummy_var_716: int;
  var vslice_dummy_var_717: int;
  var vslice_dummy_var_718: int;
  var vslice_dummy_var_719: int;
  var vslice_dummy_var_720: int;
  var vslice_dummy_var_721: int;
  var vslice_dummy_var_722: int;

  anon0:
    call {:si_unique_call 56} S := __HAVOC_malloc(8);
    call {:si_unique_call 57} S_1 := __HAVOC_malloc(8);
    call {:si_unique_call 58} S_2 := __HAVOC_malloc(8);
    call {:si_unique_call 59} S_3 := __HAVOC_malloc(8);
    call {:si_unique_call 60} S_4 := __HAVOC_malloc(8);
    call {:si_unique_call 61} S_5 := __HAVOC_malloc(8);
    call {:si_unique_call 62} S_6 := __HAVOC_malloc(8);
    call {:si_unique_call 63} S_7 := __HAVOC_malloc(8);
    call {:si_unique_call 64} S_8 := __HAVOC_malloc(8);
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    call {:si_unique_call 65} Tmp_66 := __HAVOC_malloc(124);
    call {:si_unique_call 66} Tmp_71 := __HAVOC_malloc(72);
    call {:si_unique_call 67} Tmp_73 := __HAVOC_malloc(96);
    call {:si_unique_call 68} Tmp_76 := __HAVOC_malloc(148);
    call {:si_unique_call 69} Tmp_79 := __HAVOC_malloc(128);
    call {:si_unique_call 70} Tmp_80 := __HAVOC_malloc(136);
    call {:si_unique_call 71} Tmp_90 := __HAVOC_malloc(140);
    call {:si_unique_call 72} Tmp_91 := __HAVOC_malloc(68);
    call {:si_unique_call 73} Tmp_94 := __HAVOC_malloc(148);
    call {:si_unique_call 74} Tmp_95 := __HAVOC_malloc(72);
    call {:si_unique_call 75} SLIC_CyzIoControl_entry(0);
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc Extension_4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 76} sdv_IoCompleteRequest(0, 0);
    Tmp_65 := -1073741808;
    goto L1;

  L1:
    call {:si_unique_call 77} SLIC_CyzIoControl_exit(strConst__li2bpl0);
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon415_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon414_Then:
    call {:si_unique_call 78} prologueStatus := CyzIRPPrologue(Irp_1, Extension_4);
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} prologueStatus != 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:partition} prologueStatus != 259;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_71 := strConst__li2bpl3;
    call {:si_unique_call 79} vslice_dummy_var_35 := CyzDbgPrintEx(9, Tmp_71);
    call {:si_unique_call 80} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 81} CyzIRPEpilogue(Extension_4);
    goto L25;

  L25:
    Tmp_65 := prologueStatus;
    goto L1;

  anon296_Then:
    assume {:partition} prologueStatus == 259;
    goto L25;

  anon295_Then:
    assume {:partition} prologueStatus == 0;
    Tmp_73 := strConst__li2bpl1;
    call {:si_unique_call 82} vslice_dummy_var_36 := CyzDbgPrintEx(9, Tmp_73);
    call {:si_unique_call 83} sdv_80 := CyzCompleteIfError(DeviceObject_1, Irp_1);
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} sdv_80 != 0;
    Tmp_65 := -1073741536;
    goto L1;

  anon297_Then:
    assume {:partition} sdv_80 == 0;
    call {:si_unique_call 84} IrpSp := sdv_IoGetCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Status := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    Status := -1073741789;
    goto L96;

  L96:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_95 := strConst__li2bpl3;
    call {:si_unique_call 85} vslice_dummy_var_37 := CyzDbgPrintEx(9, Tmp_95);
    call {:si_unique_call 86} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 87} CyzIRPEpilogue(Extension_4);
    Tmp_65 := Status;
    goto L1;

  anon309_Then:
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_712;
    call {:si_unique_call 88} Status := CyzGotoPowerState(vslice_dummy_var_712, Extension_4, 1);
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Status >= 0;
    goto L109;

  L109:
    call {:si_unique_call 89} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 90} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 91} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 92} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 93} vslice_dummy_var_15 := CyzSetFCRContents(S_1);
    call {:si_unique_call 94} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 95} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon310_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon441_Then:
    goto L109;

  anon369_Then:
    Status := -1073741811;
    goto L96;

  anon370_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    Status := -1073741789;
    goto L96;

  anon311_Then:
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_713;
    call {:si_unique_call 96} Status := CyzGotoPowerState(vslice_dummy_var_713, Extension_4, 1);
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:partition} Status >= 0;
    goto L137;

  L137:
    call {:si_unique_call 97} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 98} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 99} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 100} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 101} vslice_dummy_var_16 := CyzSetMCRContents(S);
    call {:si_unique_call 102} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 103} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon312_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon440_Then:
    goto L137;

  anon371_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    Status := -1073741789;
    goto L96;

  anon313_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    call {:si_unique_call 104} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 105} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 106} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 107} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 108} vslice_dummy_var_17 := CyzGetMCRContents(S_6);
    call {:si_unique_call 109} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 110} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon372_Then:
    call {:si_unique_call 111} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 112} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 113} vslice_dummy_var_18 := CyzClearStats(Extension_4);
    call {:si_unique_call 114} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon373_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    Status := -1073741789;
    goto L96;

  anon308_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 115} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 116} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 117} vslice_dummy_var_19 := CyzGetStats(Irp_1);
    call {:si_unique_call 118} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon374_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    Status := -1073741789;
    goto L96;

  anon307_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_81;
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    Mem_T.INT4[Tmp_81] := 0;
    goto L96;

  anon375_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc escapeChar;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    Status := -1073741789;
    goto L96;

  anon439_Then:
    call {:si_unique_call 119} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 120} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} Mem_T.INT4[escapeChar] != 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto L220;

  L220:
    Status := -1073741811;
    call {:si_unique_call 121} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon315_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto L220;

  anon317_Then:
    goto L217;

  L217:
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    call {:si_unique_call 122} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 123} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 124} vslice_dummy_var_20 := CyzSetEscapeChar(Irp_1);
    call {:si_unique_call 125} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 126} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon316_Then:
    goto L220;

  anon314_Then:
    assume {:partition} Mem_T.INT4[escapeChar] == 0;
    goto L217;

  anon376_Then:
    ModemControl := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    Status := -1073741789;
    goto L96;

  anon438_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 127} rs_1 := corral_nondet();
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} BAND(rs_1, 4) != 0;
    ModemControl := BOR(ModemControl, 1);
    goto L254;

  L254:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} BAND(rs_1, 1) != 0;
    ModemControl := BOR(ModemControl, 2);
    goto L256;

  L256:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    Mem_T.INT4[Tmp_75] := ModemControl;
    goto L96;

  anon319_Then:
    assume {:partition} BAND(rs_1, 1) == 0;
    goto L256;

  anon318_Then:
    assume {:partition} BAND(rs_1, 4) == 0;
    goto L254;

  anon377_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    Status := -1073741789;
    goto L96;

  anon306_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_88 := AssociatedIrp__IRP(Irp_1);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc vslice_dummy_var_714;
    call {:si_unique_call 128} CyzGetProperties(Extension_4, vslice_dummy_var_714);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto L96;

  anon378_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Xc;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    Status := -1073741789;
    goto L96;

  anon437_Then:
    assume {:nonnull} Xc != 0;
    assume Xc > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    Status := -1073741811;
    goto L96;

  anon320_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 129} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant194);
    goto L1;

  anon379_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    Status := -1073741789;
    goto L96;

  anon321_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    call {:si_unique_call 130} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 131} IoAcquireCancelSpinLock(Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 132} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 133} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 134} vslice_dummy_var_21 := CyzGetCommStatus(S_8);
    call {:si_unique_call 135} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 136} IoReleaseCancelSpinLock(OldIrql_1);
    goto L96;

  anon380_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    Status := -1073741789;
    goto L96;

  anon322_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    call {:si_unique_call 137} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 138} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 139} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 140} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 141} vslice_dummy_var_22 := CyzGetModemUpdate(S_7);
    call {:si_unique_call 142} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 143} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon381_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc HandFlow;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    Status := -1073741789;
    goto L96;

  anon435_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    Status := -1073741811;
    goto L96;

  anon323_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    Status := -1073741811;
    goto L96;

  anon324_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    havoc Tmp_70;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} Tmp_70 == 3;
    Status := -1073741811;
    goto L96;

  anon436_Then:
    assume {:partition} Tmp_70 != 3;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    goto L341;

  L341:
    Status := -1073741811;
    goto L96;

  anon325_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    goto L345;

  L345:
    Status := -1073741811;
    goto L96;

  anon327_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    call {:si_unique_call 144} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 145} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    Status := -1073741811;
    call {:si_unique_call 146} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon330_Then:
    goto L353;

  L353:
    call {:si_unique_call 147} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 148} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 149} vslice_dummy_var_23 := CyzSetHandFlow(S_5);
    call {:si_unique_call 150} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 151} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon329_Then:
    goto L353;

  anon328_Then:
    goto L345;

  anon326_Then:
    goto L341;

  anon382_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    Status := -1073741789;
    goto L96;

  anon305_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 152} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 153} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_93;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    call {:si_unique_call 154} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon383_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc NewChars;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    Status := -1073741789;
    goto L96;

  anon434_Then:
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    call {:si_unique_call 155} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 156} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L397;

  L397:
    Status := -1073741811;
    call {:si_unique_call 157} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon332_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L397;

  anon333_Then:
    goto L394;

  L394:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    call {:si_unique_call 158} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 159} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 160} vslice_dummy_var_24 := CyzSetChars(S_3);
    call {:si_unique_call 161} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 162} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon331_Then:
    goto L394;

  anon384_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    Status := -1073741789;
    goto L96;

  anon304_Then:
    call {:si_unique_call 163} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 164} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_83;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 165} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon385_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Lc_1;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    Status := -1073741789;
    goto L96;

  anon428_Then:
    call {:si_unique_call 166} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 167} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_82;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} Tmp_82 == 1;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  L438:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  L443:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_72;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} Tmp_72 == 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  L449:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 168} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon337_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  anon430_Then:
    assume {:partition} Tmp_72 != 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  anon335_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon336_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon338_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon339_Then:
    goto L443;

  anon334_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon429_Then:
    assume {:partition} Tmp_82 != 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_92;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} Tmp_92 == 2;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon431_Then:
    assume {:partition} Tmp_92 != 2;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_87;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} Tmp_87 == 4;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon432_Then:
    assume {:partition} Tmp_87 != 4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_69;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:partition} Tmp_69 == 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon433_Then:
    assume {:partition} Tmp_69 != 8;
    goto L438;

  anon386_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Br;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    Status := -1073741789;
    goto L96;

  anon427_Then:
    call {:si_unique_call 169} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 170} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Br != 0;
    assume Br > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 171} sdv_KeReleaseSpinLock(0, OldIrql_1);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto L96;

  anon387_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    Status := -1073741789;
    goto L96;

  anon340_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    Mask := Mem_T.INT4[Tmp_74];
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} Mask != 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} BAND(Mask, -16) == 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 172} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, PurgeQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant380);
    goto L1;

  anon341_Then:
    assume {:partition} BAND(Mask, -16) != 0;
    goto L485;

  L485:
    Status := -1073741811;
    goto L96;

  anon426_Then:
    assume {:partition} Mask == 0;
    goto L485;

  anon388_Then:
    Tmp_90 := strConst__li2bpl10;
    call {:si_unique_call 173} vslice_dummy_var_42 := CyzDbgPrintEx(9, Tmp_90);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    Tmp_79 := strConst__li2bpl12;
    call {:si_unique_call 174} vslice_dummy_var_43 := CyzDbgPrintEx(6, Tmp_79);
    Status := -1073741789;
    goto L96;

  anon342_Then:
    Tmp_94 := strConst__li2bpl11;
    call {:si_unique_call 175} vslice_dummy_var_44 := CyzDbgPrintEx(9, Tmp_94);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 176} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, MaskQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant177);
    goto L1;

  anon389_Then:
    Tmp_80 := strConst__li2bpl13;
    call {:si_unique_call 177} vslice_dummy_var_38 := CyzDbgPrintEx(9, Tmp_80);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    Tmp_66 := strConst__li2bpl14;
    call {:si_unique_call 178} vslice_dummy_var_39 := CyzDbgPrintEx(6, Tmp_66);
    Status := -1073741789;
    goto L96;

  anon343_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    NewMask := Mem_T.INT4[Tmp_67];
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} BAND(NewMask, -8192) != 0;
    Tmp_91 := strConst__li2bpl16;
    call {:si_unique_call 179} vslice_dummy_var_40 := CyzDbgPrintEx(6, Tmp_91);
    Status := -1073741811;
    goto L96;

  anon425_Then:
    assume {:partition} BAND(NewMask, -8192) == 0;
    Tmp_76 := strConst__li2bpl15;
    call {:si_unique_call 180} vslice_dummy_var_41 := CyzDbgPrintEx(9, Tmp_76);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 181} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, MaskQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant177);
    goto L1;

  anon390_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    Status := -1073741789;
    goto L96;

  anon303_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_85;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    havoc vslice_dummy_var_715;
    Mem_T.INT4[Tmp_85] := vslice_dummy_var_715;
    goto L96;

  anon391_Then:
    call {:si_unique_call 182} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 183} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 184} vslice_dummy_var_25 := CyzPretendXon(Extension_4);
    call {:si_unique_call 185} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon392_Then:
    call {:si_unique_call 186} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 187} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 188} vslice_dummy_var_26 := CyzPretendXoff(Extension_4);
    call {:si_unique_call 189} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon393_Then:
    goto L59;

  L59:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_716;
    call {:si_unique_call 190} Status := CyzGotoPowerState(vslice_dummy_var_716, Extension_4, 1);
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Status >= 0;
    goto L547;

  L547:
    call {:si_unique_call 191} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 192} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_86;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} Tmp_86 == 128;
    goto L559;

  L559:
    Status := -1073741811;
    goto L560;

  L560:
    call {:si_unique_call 193} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon423_Then:
    assume {:partition} Tmp_86 != 128;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_84;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} Tmp_84 != 192;
    call {:si_unique_call 194} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 195} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    call {:si_unique_call 196} vslice_dummy_var_28 := CyzSetRTS(Extension_4);
    goto L575;

  L575:
    call {:si_unique_call 197} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L560;

  anon345_Then:
    call {:si_unique_call 198} vslice_dummy_var_27 := CyzClrRTS(Extension_4);
    goto L575;

  anon424_Then:
    assume {:partition} Tmp_84 == 192;
    goto L559;

  anon344_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon302_Then:
    goto L547;

  anon394_Then:
    goto L59;

  anon395_Then:
    goto L96;

  anon396_Then:
    goto L57;

  L57:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_717;
    call {:si_unique_call 199} Status := CyzGotoPowerState(vslice_dummy_var_717, Extension_4, 1);
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Status >= 0;
    goto L578;

  L578:
    call {:si_unique_call 200} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 201} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_68;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} Tmp_68 == 2;
    Status := -1073741811;
    goto L593;

  L593:
    call {:si_unique_call 202} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon422_Then:
    assume {:partition} Tmp_68 != 2;
    call {:si_unique_call 203} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 204} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    call {:si_unique_call 205} vslice_dummy_var_30 := CyzSetDTR(Extension_4);
    goto L604;

  L604:
    call {:si_unique_call 206} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L593;

  anon347_Then:
    call {:si_unique_call 207} vslice_dummy_var_29 := CyzClrDTR(Extension_4);
    goto L604;

  anon346_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon301_Then:
    goto L578;

  anon397_Then:
    goto L57;

  anon398_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    Status := -1073741789;
    goto L96;

  anon300_Then:
    call {:si_unique_call 208} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 209} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_89;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 210} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon399_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc NewTimeouts;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    Status := -1073741789;
    goto L96;

  anon421_Then:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    Status := -1073741811;
    goto L96;

  anon350_Then:
    goto L623;

  L623:
    call {:si_unique_call 211} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 212} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    call {:si_unique_call 213} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon349_Then:
    goto L623;

  anon348_Then:
    goto L623;

  anon400_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    Status := -1073741789;
    goto L96;

  anon351_Then:
    call {:si_unique_call 214} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql;
    call {:si_unique_call 215} IoAcquireCancelSpinLock(Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    Status := -1073741811;
    call {:si_unique_call 216} IoReleaseCancelSpinLock(OldIrql);
    goto L96;

  anon352_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    call {:si_unique_call 217} IoReleaseCancelSpinLock(OldIrql);
    Status := -1073741536;
    goto L96;

  anon353_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 218} IoReleaseCancelSpinLock(OldIrql);
    call {:si_unique_call 219} CyzStartImmediate(Extension_4);
    Tmp_65 := 259;
    goto L1;

  anon401_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_718;
    call {:si_unique_call 220} Status := CyzGotoPowerState(vslice_dummy_var_718, Extension_4, 1);
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:partition} Status >= 0;
    goto L665;

  L665:
    call {:si_unique_call 221} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 222} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 223} vslice_dummy_var_31 := CyzTurnOffBreak(Extension_4);
    call {:si_unique_call 224} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon354_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon299_Then:
    goto L665;

  anon402_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_719;
    call {:si_unique_call 225} Status := CyzGotoPowerState(vslice_dummy_var_719, Extension_4, 1);
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} Status >= 0;
    goto L681;

  L681:
    call {:si_unique_call 226} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 227} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 228} vslice_dummy_var_32 := CyzTurnOnBreak(Extension_4);
    call {:si_unique_call 229} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon355_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon298_Then:
    goto L681;

  anon403_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Lc;
    Mask_1 := 255;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    Status := -1073741789;
    goto L96;

  anon419_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_720;
    call {:si_unique_call 230} Status := CyzGotoPowerState(vslice_dummy_var_720, Extension_4, 1);
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:partition} Status >= 0;
    goto L707;

  L707:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    LData := 8;
    Mask_1 := 255;
    goto L721;

  L721:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 8;
    goto L731;

  L731:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} LData == 1;
    Status := -1073741811;
    goto L96;

  anon361_Then:
    assume {:partition} LData != 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 64;
    goto L741;

  L741:
    call {:si_unique_call 231} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 232} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 233} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 234} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 235} vslice_dummy_var_33 := CyzSetLineControl(Extension_4);
    call {:si_unique_call 236} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 237} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon412_Then:
    Status := -1073741811;
    goto L96;

  anon413_Then:
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} LData != 1;
    Status := -1073741811;
    goto L96;

  anon360_Then:
    assume {:partition} LData == 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 32;
    goto L741;

  anon359_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 16;
    goto L741;

  anon408_Then:
    Status := -1073741811;
    goto L96;

  anon409_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 4;
    goto L731;

  anon410_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 2;
    goto L731;

  anon411_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 1;
    goto L731;

  anon420_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 0;
    goto L731;

  anon405_Then:
    Status := -1073741811;
    goto L96;

  anon406_Then:
    LData := 4;
    Mask_1 := 127;
    goto L721;

  anon407_Then:
    LData := 2;
    Mask_1 := 63;
    goto L721;

  anon357_Then:
    LData := 1;
    Mask_1 := 31;
    goto L721;

  anon358_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon356_Then:
    goto L707;

  anon404_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Rs;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    Status := -1073741789;
    goto L96;

  anon418_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    Status := 0;
    goto L96;

  anon362_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    havoc vslice_dummy_var_721;
    call {:si_unique_call 238} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, vslice_dummy_var_721, -797279933);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 239} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant381);
    goto L1;

  anon363_Then:
    goto L96;

  anon416_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    Status := -1073741789;
    goto L96;

  anon364_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    havoc BaudRate;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:partition} BaudRate != 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} Status >= 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_722;
    call {:si_unique_call 240} Status := CyzGotoPowerState(vslice_dummy_var_722, Extension_4, 1);
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} Status >= 0;
    goto L814;

  L814:
    call {:si_unique_call 241} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 242} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} Status >= 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    call {:si_unique_call 243} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 244} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 245} vslice_dummy_var_34 := CyzSetBaud(S_2);
    call {:si_unique_call 246} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L825;

  L825:
    call {:si_unique_call 247} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon368_Then:
    assume {:partition} 0 > Status;
    goto L825;

  anon367_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon366_Then:
    goto L814;

  anon365_Then:
    assume {:partition} 0 > Status;
    goto L814;

  anon417_Then:
    assume {:partition} BaudRate == 0;
    Status := -1073741811;
    goto L96;
}



procedure {:origName "CyzClearStats"} CyzClearStats(actual_Context_2: int) returns (Tmp_96: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_96 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClearStats"} CyzClearStats(actual_Context_2: int) returns (Tmp_96: int)
{
  var {:pointer} Tmp_98: int;
  var {:pointer} Tmp_100: int;
  var {:pointer} Context_2: int;

  anon0:
    Context_2 := actual_Context_2;
    Tmp_100 := Context_2;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    call {:si_unique_call 248} sdv_RtlZeroMemory(0, 24);
    Tmp_98 := Context_2;
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    call {:si_unique_call 249} sdv_RtlZeroMemory(0, 24);
    Tmp_96 := 0;
    return;
}



procedure {:origName "CyzSetEscapeChar"} CyzSetEscapeChar(actual_Context_3: int) returns (Tmp_102: int);
  free ensures {:va_keep} Tmp_102 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetEscapeChar"} CyzSetEscapeChar(actual_Context_3: int) returns (Tmp_102: int)
{
  var {:pointer} Tmp_103: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} sdv_99: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} extension_1: int;
  var {:pointer} Context_3: int;

  anon0:
    Context_3 := actual_Context_3;
    call {:si_unique_call 250} sdv_99 := sdv_IoGetCurrentIrpStackLocation(Context_3);
    assume {:nonnull} sdv_99 != 0;
    assume sdv_99 > 0;
    havoc Tmp_106;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    havoc extension_1;
    Tmp_104 := Context_3;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    havoc Tmp_103;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    assume {:nonnull} extension_1 != 0;
    assume extension_1 > 0;
    Tmp_102 := 0;
    return;
}



procedure {:origName "CyzGetCommStatus"} CyzGetCommStatus(actual_Context_4: int) returns (Tmp_107: int);
  free ensures {:va_keep} Tmp_107 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetCommStatus"} CyzGetCommStatus(actual_Context_4: int) returns (Tmp_107: int)
{
  var {:pointer} Stat: int;
  var {:pointer} sdv_100: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Extension_5: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Context_4: int;
  var vslice_dummy_var_723: int;

  anon0:
    Context_4 := actual_Context_4;
    Tmp_108 := Context_4;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    havoc Extension_5;
    Tmp_110 := Context_4;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    havoc Stat;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    havoc vslice_dummy_var_723;
    call {:si_unique_call 251} sdv_100 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_723);
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} sdv_100 != 0;
    assume sdv_100 > 0;
    goto L13;

  L13:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L22;

  L22:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L24;

  L24:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L26;

  L26:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L28;

  L28:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L20;

  L20:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L33;

  L33:
    Tmp_107 := 0;
    return;

  anon25_Then:
    goto L33;

  anon19_Then:
    goto L31;

  anon24_Then:
    goto L20;

  anon23_Then:
    goto L28;

  anon22_Then:
    goto L26;

  anon21_Then:
    goto L24;

  anon20_Then:
    goto L22;

  anon27_Then:
    goto L20;

  anon26_Then:
    goto L13;
}



procedure {:origName "CyzIssueCmd"} CyzIssueCmd(actual_Extension_6: int, actual_cmd: int, actual_param: int, actual_wait: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIssueCmd"} CyzIssueCmd(actual_Extension_6: int, actual_cmd: int, actual_param: int, actual_wait: int)
{
  var {:scalar} interval100ms: int;
  var {:scalar} Tmp_111: int;
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:pointer} Tmp_112: int;
  var {:pointer} Tmp_113: int;
  var {:scalar} Tmp_114: int;
  var {:scalar} sdv_101: int;
  var {:pointer} Tmp_115: int;
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:scalar} OldIrql_2: int;
  var {:scalar} sdv_102: int;
  var {:pointer} s_p_e_c_i_a_l_2: int;
  var {:scalar} sdv_103: int;
  var {:scalar} sdv_104: int;
  var {:scalar} difference: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:scalar} Tmp_120: int;
  var {:pointer} s_p_e_c_i_a_l_4: int;
  var {:pointer} Tmp_121: int;
  var {:scalar} startOfSpin: int;
  var {:scalar} nextQuery: int;
  var {:pointer} Tmp_122: int;
  var {:scalar} Tmp_123: int;
  var {:pointer} Extension_6: int;
  var {:scalar} wait: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_724: int;
  var vslice_dummy_var_725: int;
  var vslice_dummy_var_726: int;
  var vslice_dummy_var_727: int;

  anon0:
    call {:si_unique_call 252} interval100ms := __HAVOC_malloc(20);
    call {:si_unique_call 253} Tmp_114 := __HAVOC_malloc(20);
    call {:si_unique_call 254} vslice_dummy_var_45 := __HAVOC_malloc(4);
    call {:si_unique_call 255} difference := __HAVOC_malloc(20);
    call {:si_unique_call 256} startOfSpin := __HAVOC_malloc(20);
    call {:si_unique_call 257} nextQuery := __HAVOC_malloc(20);
    call {:si_unique_call 258} Tmp_123 := __HAVOC_malloc(20);
    Extension_6 := actual_Extension_6;
    wait := actual_wait;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    call {:si_unique_call 259} Tmp_122 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    Mem_T.INT4[Tmp_122] := OldIrql_2;
    call {:si_unique_call 260} sdv_KeAcquireSpinLock(0, Tmp_122);
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    OldIrql_2 := Mem_T.INT4[Tmp_122];
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_116;
    assume {:nonnull} Tmp_116 != 0;
    assume Tmp_116 > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    Tmp_121 := KeTickCount;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc s_p_e_c_i_a_l_1;
    goto L20;

  L20:
    call {:si_unique_call 261} CyzIssueCmd_loop_L20(s_p_e_c_i_a_l_1, startOfSpin);
    goto L20_last;

  L20_last:
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L27;

  L27:
    call {:si_unique_call 262} sdv_101, Tmp_117, sdv_102, s_p_e_c_i_a_l_2 := CyzIssueCmd_loop_L27(interval100ms, sdv_101, Tmp_117, sdv_102, s_p_e_c_i_a_l_2, difference, startOfSpin, nextQuery);
    goto L27_last;

  L27_last:
    call {:si_unique_call 275} sdv_101 := corral_nondet();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(sdv_101, 255) != 0;
    Tmp_117 := KeTickCount;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    havoc s_p_e_c_i_a_l_2;
    goto L35;

  L35:
    call {:si_unique_call 263} CyzIssueCmd_loop_L35(s_p_e_c_i_a_l_2, nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 264} sdv_102 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L49;

  L49:
    call {:si_unique_call 265} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_112;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    havoc vslice_dummy_var_724;
    havoc vslice_dummy_var_725;
    call {:si_unique_call 266} CyzLogError(vslice_dummy_var_724, 0, vslice_dummy_var_725, Tmp_123, 0, 0, 0, Tmp_111, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto L49;

  anon24_Then:
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon31_Then:
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} BAND(sdv_101, 255) == 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} wait != 0;
    Tmp_119 := KeTickCount;
    assume {:nonnull} Tmp_119 != 0;
    assume Tmp_119 > 0;
    havoc s_p_e_c_i_a_l_3;
    goto L74;

  L74:
    call {:si_unique_call 267} CyzIssueCmd_loop_L74(s_p_e_c_i_a_l_3, startOfSpin);
    goto L74_last;

  L74_last:
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L81;

  L81:
    call {:si_unique_call 268} Tmp_113, sdv_103, sdv_104, s_p_e_c_i_a_l_4 := CyzIssueCmd_loop_L81(interval100ms, Tmp_113, sdv_103, sdv_104, difference, s_p_e_c_i_a_l_4, startOfSpin, nextQuery);
    goto L81_last;

  L81_last:
    call {:si_unique_call 274} sdv_103 := corral_nondet();
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} BAND(sdv_103, 255) != 0;
    Tmp_113 := KeTickCount;
    assume {:nonnull} Tmp_113 != 0;
    assume Tmp_113 > 0;
    havoc s_p_e_c_i_a_l_4;
    goto L88;

  L88:
    call {:si_unique_call 269} CyzIssueCmd_loop_L88(s_p_e_c_i_a_l_4, nextQuery);
    goto L88_last;

  L88_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 270} sdv_104 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L102;

  L102:
    call {:si_unique_call 271} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L1;

  anon29_Then:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_115;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    havoc vslice_dummy_var_726;
    havoc vslice_dummy_var_727;
    call {:si_unique_call 272} CyzLogError(vslice_dummy_var_726, 0, vslice_dummy_var_727, Tmp_114, 0, 0, 0, Tmp_120, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto L102;

  anon28_Then:
    goto anon28_Then_dummy;

  anon28_Then_dummy:
    assume false;
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} BAND(sdv_103, 255) == 0;
    goto L68;

  L68:
    call {:si_unique_call 273} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L1;

  anon32_Then:
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    assume false;
    return;

  anon26_Then:
    assume {:partition} wait == 0;
    goto L68;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;
}



procedure {:origName "CyzSetFCRContents"} CyzSetFCRContents(actual_Context_5: int) returns (Tmp_124: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_124 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetFCRContents"} CyzSetFCRContents(actual_Context_5: int) returns (Tmp_124: int)
{
  var {:pointer} Tmp_126: int;
  var {:pointer} Extension_7: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Result_1: int;
  var {:pointer} Context_5: int;

  anon0:
    Context_5 := actual_Context_5;
    Tmp_127 := Context_5;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc Extension_7;
    Tmp_126 := Context_5;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    havoc Result_1;
    assume {:nonnull} Result_1 != 0;
    assume Result_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 4) != 0;
    call {:si_unique_call 276} CyzIssueCmd(Extension_7, 87, 0, 0);
    goto L8;

  L8:
    assume {:nonnull} Result_1 != 0;
    assume Result_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 2) != 0;
    call {:si_unique_call 277} CyzIssueCmd(Extension_7, 86, 0, 0);
    goto L12;

  L12:
    Tmp_124 := 0;
    return;

  anon5_Then:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 2) == 0;
    goto L12;

  anon6_Then:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 4) == 0;
    goto L8;
}



procedure {:origName "CyzGetMCRContents"} CyzGetMCRContents(actual_Context_6: int) returns (Tmp_128: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_128 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetMCRContents"} CyzGetMCRContents(actual_Context_6: int) returns (Tmp_128: int)
{
  var {:pointer} Tmp_129: int;
  var {:scalar} op_1: int;
  var {:pointer} Extension_8: int;
  var {:pointer} Tmp_131: int;
  var {:pointer} Result_2: int;
  var {:scalar} rs_2: int;
  var {:pointer} Context_6: int;

  anon0:
    Context_6 := actual_Context_6;
    Tmp_131 := Context_6;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    havoc Extension_8;
    Tmp_129 := Context_6;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc Result_2;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    call {:si_unique_call 278} rs_2 := corral_nondet();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(rs_2, 4) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := BOR(Mem_T.INT4[Result_2], 1);
    goto L17;

  L17:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} BAND(rs_2, 1) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := BOR(Mem_T.INT4[Result_2], 2);
    goto L19;

  L19:
    call {:si_unique_call 279} op_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(op_1, 4) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := BOR(Mem_T.INT4[Result_2], 16);
    goto L25;

  L25:
    Tmp_128 := 0;
    return;

  anon9_Then:
    assume {:partition} BAND(op_1, 4) == 0;
    goto L25;

  anon8_Then:
    assume {:partition} BAND(rs_2, 1) == 0;
    goto L19;

  anon7_Then:
    assume {:partition} BAND(rs_2, 4) == 0;
    goto L17;
}



procedure {:origName "CyzGetModemUpdate"} CyzGetModemUpdate(actual_Context_7: int) returns (Tmp_132: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_132 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetModemUpdate"} CyzGetModemUpdate(actual_Context_7: int) returns (Tmp_132: int)
{
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Extension_9: int;
  var {:pointer} Result_3: int;
  var {:pointer} Context_7: int;
  var boogieTmp: int;

  anon0:
    Context_7 := actual_Context_7;
    Tmp_135 := Context_7;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc Extension_9;
    Tmp_133 := Context_7;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc Result_3;
    assume {:nonnull} Result_3 != 0;
    assume Result_3 > 0;
    call {:si_unique_call 280} boogieTmp := CyzHandleModemUpdate#1(Extension_9, 0, 0);
    Mem_T.INT4[Result_3] := boogieTmp;
    Tmp_132 := 0;
    return;
}



procedure {:origName "CyzSetChars"} CyzSetChars(actual_Context_8: int) returns (Tmp_136: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_136 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetChars"} CyzSetChars(actual_Context_8: int) returns (Tmp_136: int)
{
  var {:pointer} Tmp_137: int;
  var {:pointer} Extension_10: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Context_8: int;

  anon0:
    Context_8 := actual_Context_8;
    Tmp_137 := Context_8;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    havoc Extension_10;
    Tmp_140 := Context_8;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    havoc Tmp_142;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    call {:si_unique_call 281} CyzIssueCmd(Extension_10, 3, 0, 0);
    Tmp_136 := 0;
    return;
}



procedure {:origName "CyzSetBaud"} CyzSetBaud(actual_Context_9: int) returns (Tmp_143: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_143 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetBaud"} CyzSetBaud(actual_Context_9: int) returns (Tmp_143: int)
{
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} Extension_11: int;
  var {:pointer} Context_9: int;

  anon0:
    Context_9 := actual_Context_9;
    Tmp_146 := Context_9;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    havoc Extension_11;
    Tmp_145 := Context_9;
    assume {:nonnull} Tmp_145 != 0;
    assume Tmp_145 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    call {:si_unique_call 282} CyzIssueCmd(Extension_11, 3, 0, 0);
    Tmp_143 := 0;
    return;
}



procedure {:origName "CyzSetLineControl"} CyzSetLineControl(actual_Context_10: int) returns (Tmp_147: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_147 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetLineControl"} CyzSetLineControl(actual_Context_10: int) returns (Tmp_147: int)
{
  var {:pointer} Extension_12: int;
  var {:pointer} Context_10: int;

  anon0:
    Context_10 := actual_Context_10;
    Extension_12 := Context_10;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 283} CyzIssueCmd(Extension_12, 3, 0, 0);
    Tmp_147 := 0;
    return;
}



procedure {:origName "CyzCleanLists"} CyzCleanLists(actual_Context_11: int) returns (Tmp_149: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_149 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCleanLists"} CyzCleanLists(actual_Context_11: int) returns (Tmp_149: int)
{
  var {:scalar} i: int;
  var {:scalar} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} pDevExt: int;
  var {:scalar} cancelled: int;
  var {:scalar} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} pDispatch_1: int;
  var {:pointer} Context_11: int;
  var vslice_dummy_var_46: int;

  anon0:
    Context_11 := actual_Context_11;
    call {:si_unique_call 284} Tmp_151 := __HAVOC_malloc(256);
    call {:si_unique_call 285} Tmp_154 := __HAVOC_malloc(256);
    call {:si_unique_call 286} Tmp_155 := __HAVOC_malloc(140);
    pDevExt := Context_11;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc pDispatch_1;
    Tmp_155 := strConst__li2bpl17;
    call {:si_unique_call 287} vslice_dummy_var_46 := CyzDbgPrintEx(12, Tmp_155);
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc Tmp_152;
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    i := 0;
    goto L15;

  L15:
    call {:si_unique_call 288} i, Tmp_150, Tmp_153, Tmp_154 := CyzCleanLists_loop_L15(i, Tmp_150, pDevExt, Tmp_153, Tmp_154, pDispatch_1);
    goto L15_last;

  L15_last:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Tmp_150 := i;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    havoc Tmp_154;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L18;

  L18:
    i := i + 1;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon18_Then:
    goto L16;

  L16:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    call {:si_unique_call 289} cancelled := KeCancelTimer(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} cancelled != 0;
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto L12;

  L12:
    Tmp_149 := 1;
    return;

  anon17_Then:
    assume {:partition} cancelled == 0;
    goto L12;

  anon15_Then:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto L12;

  anon16_Then:
    goto L18;

  anon14_Then:
    goto L16;

  anon13_Then:
    goto L12;
}



procedure {:origName "CyzDoesPortExist"} CyzDoesPortExist(actual_Extension_13: int, actual_InsertString: int) returns (Tmp_157: int);
  free ensures {:va_keep} Tmp_157 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDoesPortExist"} CyzDoesPortExist(actual_Extension_13: int, actual_InsertString: int) returns (Tmp_157: int)
{

  anon0:
    Tmp_157 := 1;
    return;
}



procedure {:origName "CyzMemCompare"} CyzMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_159: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_159 == 0 || Tmp_159 == 2 || Tmp_159 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMemCompare"} CyzMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_159: int)
{
  var {:scalar} A: int;
  var {:scalar} B: int;
  var {:scalar} b: int;
  var {:scalar} higher: int;
  var {:scalar} lowerSpan: int;
  var {:scalar} lower: int;
  var {:scalar} a: int;
  var {:pointer} structPtr888A: int;
  var {:scalar} SpanOfA: int;
  var {:pointer} structPtr888B: int;
  var {:scalar} SpanOfB: int;

  anon0:
    call {:si_unique_call 290} A := __HAVOC_malloc(20);
    call {:si_unique_call 291} B := __HAVOC_malloc(20);
    call {:si_unique_call 292} b := __HAVOC_malloc(20);
    call {:si_unique_call 293} higher := __HAVOC_malloc(20);
    call {:si_unique_call 294} lower := __HAVOC_malloc(20);
    call {:si_unique_call 295} a := __HAVOC_malloc(20);
    structPtr888A := actual_structPtr888A;
    SpanOfA := actual_SpanOfA;
    structPtr888B := actual_structPtr888B;
    SpanOfB := actual_SpanOfB;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_159 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfB;
    goto L17;

  L17:
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_159 := 2;
    goto L1;

  anon8_Then:
    Tmp_159 := 1;
    goto L1;

  anon7_Then:
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfA;
    goto L17;
}



procedure {:origName "CyzReset"} CyzReset(actual_Context_12: int) returns (Tmp_161: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_161 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReset"} CyzReset(actual_Context_12: int) returns (Tmp_161: int)
{
  var {:scalar} s: int;
  var {:pointer} extension_2: int;
  var {:pointer} Context_12: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 296} s := __HAVOC_malloc(8);
    Context_12 := actual_Context_12;
    extension_2 := Context_12;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 297} vslice_dummy_var_49 := CyzSetLineControl(extension_2);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 298} vslice_dummy_var_47 := CyzSetupNewHandFlow(extension_2, HandFlow__CYZ_DEVICE_EXTENSION(extension_2));
    call {:si_unique_call 299} vslice_dummy_var_48 := CyzHandleModemUpdate#1(extension_2, 0, 0);
    assume {:nonnull} s != 0;
    assume s > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} s != 0;
    assume s > 0;
    call {:si_unique_call 300} vslice_dummy_var_50 := CyzSetBaud(s);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 301} CyzIssueCmd(extension_2, 3, 0, 0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Tmp_161 := 0;
    return;
}



procedure {:origName "CyzRemoveDevObj"} CyzRemoveDevObj(actual_PDevObj: int) returns (Tmp_163: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_163 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRemoveDevObj"} CyzRemoveDevObj(actual_PDevObj: int) returns (Tmp_163: int)
{
  var {:pointer} pDevExt_1: int;
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} PDevObj: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;

  anon0:
    PDevObj := actual_PDevObj;
    call {:si_unique_call 302} Tmp_169 := __HAVOC_malloc(84);
    call {:si_unique_call 303} Tmp_170 := __HAVOC_malloc(88);
    assume {:nonnull} PDevObj != 0;
    assume PDevObj > 0;
    havoc pDevExt_1;
    call {:si_unique_call 304} sdv_do_paged_code_check();
    Tmp_170 := strConst__li2bpl18;
    call {:si_unique_call 305} vslice_dummy_var_51 := CyzDbgPrintEx(2, Tmp_170);
    call {:si_unique_call 306} IoDetachDevice(0);
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 307} sdv_ExFreePool(0);
    goto L15;

  L15:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 308} sdv_ExFreePool(0);
    goto L19;

  L19:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 309} sdv_ExFreePool(0);
    goto L23;

  L23:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 310} sdv_ExFreePool(0);
    goto L27;

  L27:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 311} sdv_ExFreePool(0);
    goto L31;

  L31:
    call {:si_unique_call 312} IoDeleteDevice(0);
    Tmp_169 := strConst__li2bpl19;
    call {:si_unique_call 313} vslice_dummy_var_52 := CyzDbgPrintEx(2, Tmp_169);
    Tmp_163 := 0;
    return;

  anon15_Then:
    goto L31;

  anon14_Then:
    goto L27;

  anon13_Then:
    goto L23;

  anon12_Then:
    goto L19;

  anon11_Then:
    goto L15;
}



procedure {:origName "CyzFindInitController"} CyzFindInitController(actual_PDevObj_1: int, actual_PConfig: int) returns (Tmp_172: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_172 == -1073741810 || Tmp_172 == 0 || Tmp_172 == -1073741709 || Tmp_172 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFindInitController"} CyzFindInitController(actual_PDevObj_1: int, actual_PConfig: int) returns (Tmp_172: int)
{
  var {:pointer} Tmp_173: int;
  var {:scalar} Tmp_174: int;
  var {:scalar} Tmp_175: int;
  var {:scalar} Tmp_176: int;
  var {:scalar} sdv_116: int;
  var {:scalar} sdv_118: int;
  var {:scalar} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} pCurDevObj: int;
  var {:pointer} Tmp_179: int;
  var {:scalar} Tmp_180: int;
  var {:pointer} pDevExt_2: int;
  var {:pointer} sdv_120: int;
  var {:scalar} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:scalar} Tmp_183: int;
  var {:pointer} sdv_122: int;
  var {:pointer} Tmp_184: int;
  var {:scalar} sdv_124: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} pExtension: int;
  var {:scalar} oldIrql: int;
  var {:scalar} sdv_128: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:scalar} sdv_129: int;
  var {:scalar} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} sdv_133: int;
  var {:scalar} status_1: int;
  var {:scalar} serialPhysicalMax: int;
  var {:pointer} Tmp_192: int;
  var {:scalar} sdv_135: int;
  var {:scalar} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:pointer} PDevObj_1: int;
  var {:pointer} PConfig: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_728: int;
  var vslice_dummy_var_729: int;
  var vslice_dummy_var_730: int;
  var vslice_dummy_var_731: int;
  var vslice_dummy_var_732: int;
  var vslice_dummy_var_733: int;
  var vslice_dummy_var_734: int;
  var vslice_dummy_var_735: int;
  var vslice_dummy_var_736: int;
  var vslice_dummy_var_737: int;
  var vslice_dummy_var_738: int;
  var vslice_dummy_var_739: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_752: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;

  anon0:
    call {:si_unique_call 314} Tmp_177 := __HAVOC_malloc(20);
    call {:si_unique_call 315} Tmp_180 := __HAVOC_malloc(20);
    call {:si_unique_call 316} Tmp_189 := __HAVOC_malloc(20);
    call {:si_unique_call 317} serialPhysicalMax := __HAVOC_malloc(20);
    PDevObj_1 := actual_PDevObj_1;
    PConfig := actual_PConfig;
    call {:si_unique_call 318} Tmp_173 := __HAVOC_malloc(104);
    call {:si_unique_call 319} Tmp_178 := __HAVOC_malloc(116);
    call {:si_unique_call 320} Tmp_179 := __HAVOC_malloc(60);
    call {:si_unique_call 321} Tmp_184 := __HAVOC_malloc(328);
    call {:si_unique_call 322} Tmp_185 := __HAVOC_malloc(328);
    call {:si_unique_call 323} Tmp_186 := __HAVOC_malloc(336);
    call {:si_unique_call 324} Tmp_187 := __HAVOC_malloc(324);
    call {:si_unique_call 325} Tmp_188 := __HAVOC_malloc(128);
    call {:si_unique_call 326} Tmp_192 := __HAVOC_malloc(776);
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    havoc pDevExt_2;
    Tmp_188 := strConst__li2bpl27;
    call {:si_unique_call 327} vslice_dummy_var_53 := CyzDbgPrintEx(2, Tmp_188);
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    Tmp_192 := strConst__li2bpl28;
    call {:si_unique_call 328} vslice_dummy_var_54 := CyzDbgPrintEx(4, Tmp_192);
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_728;
    havoc vslice_dummy_var_729;
    call {:si_unique_call 329} sdv_128 := CyzMemCompare(vslice_dummy_var_728, vslice_dummy_var_729, serialPhysicalMax, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_128 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_190;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_191 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_730;
    havoc vslice_dummy_var_731;
    havoc vslice_dummy_var_732;
    call {:si_unique_call 330} CyzLogError(vslice_dummy_var_730, 0, vslice_dummy_var_731, Tmp_189, 0, 0, 0, Tmp_191, 0, -1073475558, Tmp_190, vslice_dummy_var_732, 0, 0);
    Tmp_186 := strConst__li2bpl20;
    call {:si_unique_call 331} vslice_dummy_var_55 := CyzDbgPrintEx(1, Tmp_186);
    Tmp_172 := -1073741810;
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:partition} sdv_128 == 2;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_733;
    havoc vslice_dummy_var_734;
    call {:si_unique_call 332} sdv_129 := CyzMemCompare(vslice_dummy_var_733, vslice_dummy_var_734, serialPhysicalMax, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_129 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_174;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_175 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_735;
    havoc vslice_dummy_var_736;
    havoc vslice_dummy_var_737;
    call {:si_unique_call 333} CyzLogError(vslice_dummy_var_735, 0, vslice_dummy_var_736, Tmp_177, 0, 0, 0, Tmp_175, 0, -1073475557, Tmp_174, vslice_dummy_var_737, 0, 0);
    Tmp_184 := strConst__li2bpl21;
    call {:si_unique_call 334} vslice_dummy_var_56 := CyzDbgPrintEx(1, Tmp_184);
    Tmp_172 := -1073741810;
    goto L1;

  anon32_Then:
    assume {:partition} sdv_129 == 2;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_738;
    havoc vslice_dummy_var_739;
    call {:si_unique_call 335} sdv_133 := CyzMemCompare(vslice_dummy_var_738, vslice_dummy_var_739, Tmp_180, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_133 != 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_740;
    havoc vslice_dummy_var_741;
    havoc vslice_dummy_var_742;
    havoc vslice_dummy_var_743;
    call {:si_unique_call 336} sdv_124 := CyzMemCompare(vslice_dummy_var_740, vslice_dummy_var_741, vslice_dummy_var_742, vslice_dummy_var_743);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_124 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_193;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_176 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_744;
    havoc vslice_dummy_var_745;
    havoc vslice_dummy_var_746;
    havoc vslice_dummy_var_747;
    call {:si_unique_call 337} CyzLogError(vslice_dummy_var_744, 0, vslice_dummy_var_745, vslice_dummy_var_746, 0, 0, 0, Tmp_176, 0, -1073475556, Tmp_193, vslice_dummy_var_747, 0, 0);
    Tmp_187 := strConst__li2bpl22;
    call {:si_unique_call 338} vslice_dummy_var_57 := CyzDbgPrintEx(1, Tmp_187);
    Tmp_172 := -1073741810;
    goto L1;

  anon34_Then:
    assume {:partition} sdv_124 == 2;
    goto L52;

  L52:
    call {:si_unique_call 339} Tmp_182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    Mem_T.INT4[Tmp_182] := oldIrql;
    call {:si_unique_call 340} sdv_KeAcquireSpinLock(0, Tmp_182);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    oldIrql := Mem_T.INT4[Tmp_182];
    call {:si_unique_call 341} sdv_135 := sdv_IsListEmpty(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_135 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L75;

  L75:
    call {:si_unique_call 342} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L82;

  L82:
    call {:si_unique_call 343} sdv_116, pCurDevObj, sdv_120, Tmp_182, pExtension, oldIrql := CyzFindInitController_loop_L82(sdv_116, pCurDevObj, sdv_120, Tmp_182, pExtension, oldIrql, PConfig);
    goto L82_last;

  L82_last:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_748;
    havoc vslice_dummy_var_749;
    havoc vslice_dummy_var_750;
    havoc vslice_dummy_var_751;
    call {:si_unique_call 344} sdv_116 := CyzMemCompare(vslice_dummy_var_748, vslice_dummy_var_749, vslice_dummy_var_750, vslice_dummy_var_751);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_116 == 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_752;
    havoc vslice_dummy_var_753;
    havoc vslice_dummy_var_754;
    havoc vslice_dummy_var_755;
    call {:si_unique_call 345} sdv_118 := CyzMemCompare(vslice_dummy_var_752, vslice_dummy_var_753, vslice_dummy_var_754, vslice_dummy_var_755);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_194;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_181;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_183 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_756;
    havoc vslice_dummy_var_757;
    havoc vslice_dummy_var_758;
    havoc vslice_dummy_var_759;
    havoc vslice_dummy_var_760;
    call {:si_unique_call 346} CyzLogError(vslice_dummy_var_756, 0, vslice_dummy_var_757, vslice_dummy_var_758, 0, 0, 0, Tmp_183, 0, -1073475550, Tmp_181, vslice_dummy_var_759, Tmp_194, vslice_dummy_var_760);
    Tmp_185 := strConst__li2bpl25;
    call {:si_unique_call 347} vslice_dummy_var_59 := CyzDbgPrintEx(1, Tmp_185);
    Tmp_172 := -1073741810;
    goto L1;

  anon41_Then:
    assume {:partition} sdv_118 == 0;
    Tmp_178 := strConst__li2bpl24;
    call {:si_unique_call 348} vslice_dummy_var_60 := CyzDbgPrintEx(4, Tmp_178);
    Tmp_179 := strConst__li2bpl26;
    call {:si_unique_call 349} vslice_dummy_var_61 := CyzDbgPrintEx(4, Tmp_179);
    call {:si_unique_call 350} status_1 := CyzInitMultiPort(pExtension, PConfig, PDevObj_1);
    Tmp_172 := status_1;
    goto L1;

  anon40_Then:
    assume {:partition} sdv_116 != 0;
    goto L83;

  L83:
    call {:si_unique_call 351} Tmp_182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    Mem_T.INT4[Tmp_182] := oldIrql;
    call {:si_unique_call 352} sdv_KeAcquireSpinLock(0, Tmp_182);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    oldIrql := Mem_T.INT4[Tmp_182];
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 353} sdv_120 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_120;
    goto L119;

  L119:
    call {:si_unique_call 354} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    assume false;
    return;

  anon43_Then:
    goto L79;

  L79:
    Tmp_173 := strConst__li2bpl23;
    call {:si_unique_call 355} vslice_dummy_var_58 := CyzDbgPrintEx(4, Tmp_173);
    call {:si_unique_call 356} status_1 := CyzInitController(PDevObj_1, PConfig);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_1 >= 0;
    Tmp_172 := 0;
    goto L1;

  anon44_Then:
    assume {:partition} 0 > status_1;
    Tmp_172 := status_1;
    goto L1;

  anon42_Then:
    goto L79;

  anon45_Then:
    goto L119;

  anon39_Then:
    goto L83;

  anon38_Then:
    goto L83;

  anon37_Then:
    goto L83;

  anon36_Then:
    goto L79;

  anon35_Then:
    assume {:partition} sdv_135 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 357} sdv_122 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_122;
    goto L75;

  anon33_Then:
    assume {:partition} sdv_133 == 0;
    goto L52;
}



procedure {:origName "CyzDisableInterfacesResources"} CyzDisableInterfacesResources(actual_PDevObj_2: int, actual_DisableUART: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDisableInterfacesResources"} CyzDisableInterfacesResources(actual_PDevObj_2: int, actual_DisableUART: int)
{
  var {:pointer} Tmp_197: int;
  var {:pointer} pDevExt_3: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:pointer} PDevObj_2: int;
  var {:scalar} DisableUART: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 358} vslice_dummy_var_62 := __HAVOC_malloc(4);
    PDevObj_2 := actual_PDevObj_2;
    DisableUART := actual_DisableUART;
    call {:si_unique_call 359} Tmp_197 := __HAVOC_malloc(124);
    call {:si_unique_call 360} Tmp_198 := __HAVOC_malloc(92);
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    havoc pDevExt_3;
    call {:si_unique_call 361} sdv_do_paged_code_check();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} DisableUART != 0;
    Tmp_199 := strConst__li2bpl30;
    goto L11;

  L11:
    Tmp_197 := strConst__li2bpl31;
    call {:si_unique_call 362} vslice_dummy_var_64 := CyzDbgPrintEx(2, Tmp_197);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 1) != 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 2) != 0;
    goto L20;

  L20:
    call {:si_unique_call 363} vslice_dummy_var_63 := IoWMIRegistrationControl(0, 2);
    goto L15;

  L15:
    call {:si_unique_call 364} CyzUndoExternalNaming(pDevExt_3);
    Tmp_198 := strConst__li2bpl32;
    call {:si_unique_call 365} vslice_dummy_var_65 := CyzDbgPrintEx(2, Tmp_198);
    return;

  anon9_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 2) == 0;
    call {:si_unique_call 366} CyzReleaseResources(pDevExt_3);
    goto L20;

  anon8_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 1) == 0;
    goto L15;

  anon7_Then:
    assume {:partition} DisableUART == 0;
    Tmp_199 := strConst__li2bpl29;
    goto L11;
}



procedure {:origName "CyzKillPendingIrps"} CyzKillPendingIrps(actual_PDevObj_3: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillPendingIrps"} CyzKillPendingIrps(actual_PDevObj_3: int)
{
  var {:pointer} pDevExt_4: int;
  var {:pointer} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:scalar} cancelRoutine: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} PDevObj_3: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_762: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;

  anon0:
    call {:si_unique_call 367} vslice_dummy_var_66 := __HAVOC_malloc(4);
    PDevObj_3 := actual_PDevObj_3;
    call {:si_unique_call 368} Tmp_203 := __HAVOC_malloc(100);
    call {:si_unique_call 369} Tmp_205 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_3 != 0;
    assume PDevObj_3 > 0;
    havoc pDevExt_4;
    Tmp_203 := strConst__li2bpl34;
    call {:si_unique_call 370} vslice_dummy_var_68 := CyzDbgPrintEx(2, Tmp_203);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 371} CyzKillAllReadsOrWrites(PDevObj_3, WriteQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 372} CyzKillAllReadsOrWrites(PDevObj_3, ReadQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentReadIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 373} CyzKillAllReadsOrWrites(PDevObj_3, PurgeQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 374} CyzKillAllReadsOrWrites(PDevObj_3, MaskQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    call {:si_unique_call 375} Tmp_207 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    Mem_T.INT4[Tmp_207] := oldIrql_1;
    call {:si_unique_call 376} IoAcquireCancelSpinLock(Tmp_207);
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    oldIrql_1 := Mem_T.INT4[Tmp_207];
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    cancelRoutine := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_201)];
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} cancelRoutine != 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_200;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_200)] := oldIrql_1;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_204;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_204)] := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant456;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_761;
    call {:si_unique_call 377} CyzCancelCurrentRead(PDevObj_3, vslice_dummy_var_761);
    goto L40;

  L40:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 378} vslice_dummy_var_67 := IoCancelIrp(0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto L41;

  L41:
    call {:si_unique_call 379} CyzKillAllStalled(PDevObj_3);
    Tmp_205 := strConst__li2bpl33;
    call {:si_unique_call 380} vslice_dummy_var_69 := CyzDbgPrintEx(2, Tmp_205);
    return;

  anon20_Then:
    goto L41;

  anon25_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant196;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_762;
    call {:si_unique_call 381} CyzCancelCurrentWrite(PDevObj_3, vslice_dummy_var_762);
    goto L40;

  anon24_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant198;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_763;
    call {:si_unique_call 382} CyzCancelCurrentXoff(PDevObj_3, vslice_dummy_var_763);
    goto L40;

  anon23_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant312;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_764;
    call {:si_unique_call 383} CyzCancelImmediate(PDevObj_3, vslice_dummy_var_764);
    goto L40;

  anon22_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant149;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_765;
    call {:si_unique_call 384} CyzCancelQueued(PDevObj_3, vslice_dummy_var_765);
    goto L40;

  anon21_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant178;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_766;
    call {:si_unique_call 385} CyzCancelWait(PDevObj_3, vslice_dummy_var_766);
    goto L40;

  anon27_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant151;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_767;
    call {:si_unique_call 386} CyzFilterCancelQueued(PDevObj_3, vslice_dummy_var_767);
    goto L40;

  anon26_Then:
    assume {:partition} cancelRoutine == 0;
    call {:si_unique_call 387} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon19_Then:
    call {:si_unique_call 388} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 389} vslice_dummy_var_70 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzReleaseResources"} CyzReleaseResources(actual_PDevExt: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReleaseResources"} CyzReleaseResources(actual_PDevExt: int)
{
  var {:scalar} sdv_145: int;
  var {:scalar} sdv_147: int;
  var {:scalar} sdv_148: int;
  var {:scalar} sdv_149: int;
  var {:scalar} sdv_150: int;
  var {:scalar} sdv_152: int;
  var {:scalar} sdv_153: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:scalar} sdv_158: int;
  var {:pointer} Tmp_213: int;
  var {:scalar} sdv_163: int;
  var {:scalar} sdv_165: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_171: int;
  var {:scalar} sdv_173: int;
  var {:scalar} pollCount: int;
  var {:scalar} timerStarted: int;
  var {:scalar} sdv_176: int;
  var {:scalar} timerDrained: int;
  var {:pointer} pDispatch_2: int;
  var {:scalar} pollIrql_1: int;
  var {:scalar} sdv_179: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} PDevExt: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;

  anon0:
    call {:si_unique_call 390} vslice_dummy_var_71 := __HAVOC_malloc(4);
    PDevExt := actual_PDevExt;
    call {:si_unique_call 391} Tmp_210 := __HAVOC_malloc(104);
    call {:si_unique_call 392} Tmp_213 := __HAVOC_malloc(132);
    call {:si_unique_call 393} Tmp_214 := __HAVOC_malloc(88);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc pDispatch_2;
    Tmp_210 := strConst__li2bpl37;
    call {:si_unique_call 394} vslice_dummy_var_81 := CyzDbgPrintEx(2, Tmp_210);
    call {:si_unique_call 395} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    Mem_T.INT4[Tmp_211] := oldIrql_2;
    call {:si_unique_call 396} sdv_KeAcquireSpinLock(0, Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    oldIrql_2 := Mem_T.INT4[Tmp_211];
    call {:si_unique_call 397} vslice_dummy_var_72 := sdv_RemoveEntryList(0);
    call {:si_unique_call 398} sdv_KeReleaseSpinLock(0, oldIrql_2);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 399} InitializeListHead(AllDevObjs__CYZ_DEVICE_EXTENSION(PDevExt));
    call {:si_unique_call 400} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    Mem_T.INT4[Tmp_211] := pollIrql_1;
    call {:si_unique_call 401} sdv_KeAcquireSpinLock(0, Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    pollIrql_1 := Mem_T.INT4[Tmp_211];
    call {:si_unique_call 402} vslice_dummy_var_73 := CyzCleanLists(PDevExt);
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc timerStarted;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc timerDrained;
    call {:si_unique_call 403} sdv_KeReleaseSpinLock(0, pollIrql_1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} timerStarted != 0;
    goto L38;

  L38:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 404} vslice_dummy_var_74 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 405} vslice_dummy_var_75 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 406} vslice_dummy_var_76 := CyzCancelTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 407} vslice_dummy_var_77 := CyzCancelTimer(ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 408} vslice_dummy_var_78 := CyzCancelTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 409} vslice_dummy_var_79 := CyzCancelTimer(LowerRTSTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    call {:si_unique_call 410} sdv_179 := KeRemoveQueueDpc(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_179 != 0;
    call {:si_unique_call 411} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_768;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_768;
    call {:si_unique_call 412} vslice_dummy_var_82 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L60;

  L60:
    call {:si_unique_call 413} sdv_163 := KeRemoveQueueDpc(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_163 != 0;
    call {:si_unique_call 414} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_769;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_769;
    call {:si_unique_call 415} vslice_dummy_var_83 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L67;

  L67:
    call {:si_unique_call 416} sdv_150 := KeRemoveQueueDpc(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_150 != 0;
    call {:si_unique_call 417} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_770;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_770;
    call {:si_unique_call 418} vslice_dummy_var_84 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L74;

  L74:
    call {:si_unique_call 419} sdv_173 := KeRemoveQueueDpc(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_173 != 0;
    call {:si_unique_call 420} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_771;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_771;
    call {:si_unique_call 421} vslice_dummy_var_85 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L81;

  L81:
    call {:si_unique_call 422} sdv_147 := KeRemoveQueueDpc(0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_147 != 0;
    call {:si_unique_call 423} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_772;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_772;
    call {:si_unique_call 424} vslice_dummy_var_86 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L88;

  L88:
    call {:si_unique_call 425} sdv_165 := KeRemoveQueueDpc(0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_165 != 0;
    call {:si_unique_call 426} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_773;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_773;
    call {:si_unique_call 427} vslice_dummy_var_87 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L95;

  L95:
    call {:si_unique_call 428} sdv_152 := KeRemoveQueueDpc(0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_152 != 0;
    call {:si_unique_call 429} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_774;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_774;
    call {:si_unique_call 430} vslice_dummy_var_88 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L102;

  L102:
    call {:si_unique_call 431} sdv_153 := KeRemoveQueueDpc(0);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_153 != 0;
    call {:si_unique_call 432} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_775;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_775;
    call {:si_unique_call 433} vslice_dummy_var_89 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L109;

  L109:
    call {:si_unique_call 434} sdv_149 := KeRemoveQueueDpc(0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_149 != 0;
    call {:si_unique_call 435} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_776;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_776;
    call {:si_unique_call 436} vslice_dummy_var_90 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L116;

  L116:
    call {:si_unique_call 437} sdv_176 := KeRemoveQueueDpc(0);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_176 != 0;
    call {:si_unique_call 438} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_777;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_777;
    call {:si_unique_call 439} vslice_dummy_var_91 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L123;

  L123:
    call {:si_unique_call 440} sdv_158 := KeRemoveQueueDpc(0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_158 != 0;
    call {:si_unique_call 441} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_778;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_778;
    call {:si_unique_call 442} vslice_dummy_var_92 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L130;

  L130:
    call {:si_unique_call 443} sdv_145 := KeRemoveQueueDpc(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_145 != 0;
    call {:si_unique_call 444} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_779;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_779;
    call {:si_unique_call 445} vslice_dummy_var_93 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L137;

  L137:
    call {:si_unique_call 446} sdv_171 := KeRemoveQueueDpc(0);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_171 != 0;
    call {:si_unique_call 447} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_780;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_780;
    call {:si_unique_call 448} vslice_dummy_var_94 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L144;

  L144:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 449} MmUnmapIoSpace(0, 64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L148;

  L148:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 450} MmUnmapIoSpace(0, 96);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L153;

  L153:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 451} MmUnmapIoSpace(0, 64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L158;

  L158:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_781;
    call {:si_unique_call 452} MmUnmapIoSpace(0, vslice_dummy_var_781);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L163;

  L163:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_782;
    call {:si_unique_call 453} MmUnmapIoSpace(0, vslice_dummy_var_782);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L168;

  L168:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 454} MmUnmapIoSpace(0, 5768);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_783;
    call {:si_unique_call 455} MmUnmapIoSpace(0, vslice_dummy_var_783);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L178;

  L178:
    Tmp_214 := strConst__li2bpl35;
    call {:si_unique_call 456} vslice_dummy_var_95 := CyzDbgPrintEx(2, Tmp_214);
    return;

  anon70_Then:
    goto L178;

  anon69_Then:
    goto L173;

  anon68_Then:
    goto L168;

  anon67_Then:
    goto L163;

  anon66_Then:
    goto L158;

  anon65_Then:
    goto L153;

  anon64_Then:
    goto L148;

  anon63_Then:
    assume {:partition} sdv_171 == 0;
    goto L144;

  anon62_Then:
    assume {:partition} sdv_145 == 0;
    goto L137;

  anon61_Then:
    assume {:partition} sdv_158 == 0;
    goto L130;

  anon60_Then:
    assume {:partition} sdv_176 == 0;
    goto L123;

  anon59_Then:
    assume {:partition} sdv_149 == 0;
    goto L116;

  anon58_Then:
    assume {:partition} sdv_153 == 0;
    goto L109;

  anon57_Then:
    assume {:partition} sdv_152 == 0;
    goto L102;

  anon56_Then:
    assume {:partition} sdv_165 == 0;
    goto L95;

  anon55_Then:
    assume {:partition} sdv_147 == 0;
    goto L88;

  anon54_Then:
    assume {:partition} sdv_173 == 0;
    goto L81;

  anon53_Then:
    assume {:partition} sdv_150 == 0;
    goto L74;

  anon52_Then:
    assume {:partition} sdv_163 == 0;
    goto L67;

  anon51_Then:
    assume {:partition} sdv_179 == 0;
    goto L60;

  anon49_Then:
    assume {:partition} timerStarted == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} timerDrained != 0;
    goto L188;

  L188:
    call {:si_unique_call 457} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    Mem_T.INT4[Tmp_211] := pollIrql_1;
    call {:si_unique_call 458} sdv_KeAcquireSpinLock(0, Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    pollIrql_1 := Mem_T.INT4[Tmp_211];
    call {:si_unique_call 459} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc vslice_dummy_var_784;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_784;
    call {:si_unique_call 460} sdv_148 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    pollCount := sdv_148;
    call {:si_unique_call 461} sdv_KeReleaseSpinLock(0, pollIrql_1);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} pollCount == 0;
    Tmp_213 := strConst__li2bpl36;
    call {:si_unique_call 462} vslice_dummy_var_96 := CyzDbgPrintEx(12, Tmp_213);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 463} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L38;

  anon72_Then:
    goto L38;

  anon71_Then:
    assume {:partition} pollCount != 0;
    goto L38;

  anon50_Then:
    assume {:partition} timerDrained == 0;
    call {:si_unique_call 464} vslice_dummy_var_80 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L188;
}



procedure {:origName "CyzInitController"} CyzInitController(actual_PDevObj_4: int, actual_PConfigData: int) returns (Tmp_215: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_215 == 0 || Tmp_215 == -1073741810 || Tmp_215 == -1073741709 || Tmp_215 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInitController"} CyzInitController(actual_PDevObj_4: int, actual_PConfigData: int) returns (Tmp_215: int)
{
  var {:scalar} Tmp_216: int;
  var {:scalar} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} rx: int;
  var {:pointer} Tmp_219: int;
  var {:scalar} Tmp_220: int;
  var {:pointer} sdv_185: int;
  var {:scalar} firstTimeThisBoard: int;
  var {:scalar} Tmp_221: int;
  var {:scalar} Tmp_222: int;
  var {:scalar} Tmp_223: int;
  var {:scalar} Tmp_224: int;
  var {:scalar} Tmp_225: int;
  var {:pointer} sdv_191: int;
  var {:scalar} Tmp_226: int;
  var {:scalar} sdv_193: int;
  var {:pointer} Tmp_227: int;
  var {:scalar} incPoll: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} Tmp_229: int;
  var {:scalar} Tmp_230: int;
  var {:pointer} pDevExt_5: int;
  var {:scalar} Tmp_231: int;
  var {:scalar} zf_1: int;
  var {:scalar} Tmp_232: int;
  var {:pointer} BoardMemory: int;
  var {:scalar} Tmp_233: int;
  var {:scalar} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:scalar} Tmp_236: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} sdv_198: int;
  var {:scalar} Tmp_240: int;
  var {:scalar} Tmp_241: int;
  var {:pointer} Tmp_242: int;
  var {:scalar} Tmp_243: int;
  var {:scalar} allocedDispatch: int;
  var {:scalar} Tmp_244: int;
  var {:scalar} Tmp_245: int;
  var {:scalar} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} sdv_205: int;
  var {:scalar} Tmp_249: int;
  var {:scalar} Tmp_250: int;
  var {:pointer} sdv_206: int;
  var {:scalar} buf_2: int;
  var {:scalar} Tmp_251: int;
  var {:scalar} Tmp_252: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} sdv_211: int;
  var {:scalar} Tmp_254: int;
  var {:scalar} Tmp_255: int;
  var {:pointer} zfw: int;
  var {:scalar} Tmp_256: int;
  var {:scalar} Tmp_257: int;
  var {:scalar} board_2: int;
  var {:pointer} sdv_214: int;
  var {:scalar} status_2: int;
  var {:scalar} tx_1: int;
  var {:pointer} sdv_216: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:scalar} pollingCycle: int;
  var {:pointer} pDispatch_3: int;
  var {:scalar} ch_8: int;
  var {:scalar} Tmp_260: int;
  var {:scalar} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} Tmp_265: int;
  var {:scalar} intr: int;
  var {:pointer} Tmp_266: int;
  var {:pointer} PDevObj_4: int;
  var {:pointer} PConfigData: int;
  var boogieTmp: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_800: int;
  var vslice_dummy_var_801: int;
  var vslice_dummy_var_802: int;
  var vslice_dummy_var_803: int;
  var vslice_dummy_var_804: int;
  var vslice_dummy_var_805: int;
  var vslice_dummy_var_806: int;
  var vslice_dummy_var_807: int;
  var vslice_dummy_var_808: int;
  var vslice_dummy_var_809: int;
  var vslice_dummy_var_810: int;
  var vslice_dummy_var_811: int;
  var vslice_dummy_var_812: int;
  var vslice_dummy_var_813: int;
  var vslice_dummy_var_814: int;
  var vslice_dummy_var_815: int;
  var vslice_dummy_var_816: int;
  var vslice_dummy_var_817: int;
  var vslice_dummy_var_818: int;
  var vslice_dummy_var_819: int;
  var vslice_dummy_var_820: int;
  var vslice_dummy_var_821: int;
  var vslice_dummy_var_822: int;
  var vslice_dummy_var_823: int;
  var vslice_dummy_var_824: int;
  var vslice_dummy_var_825: int;
  var vslice_dummy_var_826: int;
  var vslice_dummy_var_827: int;
  var vslice_dummy_var_828: int;

  anon0:
    call {:si_unique_call 465} Tmp_216 := __HAVOC_malloc(20);
    call {:si_unique_call 466} rx := __HAVOC_malloc(20);
    call {:si_unique_call 467} Tmp_220 := __HAVOC_malloc(20);
    call {:si_unique_call 468} vslice_dummy_var_97 := __HAVOC_malloc(20);
    call {:si_unique_call 469} vslice_dummy_var_98 := __HAVOC_malloc(20);
    call {:si_unique_call 470} Tmp_222 := __HAVOC_malloc(20);
    call {:si_unique_call 471} Tmp_223 := __HAVOC_malloc(20);
    call {:si_unique_call 472} Tmp_224 := __HAVOC_malloc(20);
    call {:si_unique_call 473} Tmp_225 := __HAVOC_malloc(20);
    call {:si_unique_call 474} Tmp_231 := __HAVOC_malloc(20);
    call {:si_unique_call 475} zf_1 := __HAVOC_malloc(20);
    call {:si_unique_call 476} Tmp_236 := __HAVOC_malloc(20);
    call {:si_unique_call 477} Tmp_240 := __HAVOC_malloc(20);
    call {:si_unique_call 478} vslice_dummy_var_99 := __HAVOC_malloc(20);
    call {:si_unique_call 479} Tmp_243 := __HAVOC_malloc(20);
    call {:si_unique_call 480} vslice_dummy_var_100 := __HAVOC_malloc(20);
    call {:si_unique_call 481} Tmp_245 := __HAVOC_malloc(20);
    call {:si_unique_call 482} buf_2 := __HAVOC_malloc(20);
    call {:si_unique_call 483} Tmp_251 := __HAVOC_malloc(20);
    call {:si_unique_call 484} vslice_dummy_var_101 := __HAVOC_malloc(20);
    call {:si_unique_call 485} Tmp_254 := __HAVOC_malloc(20);
    call {:si_unique_call 486} Tmp_255 := __HAVOC_malloc(20);
    call {:si_unique_call 487} board_2 := __HAVOC_malloc(20);
    call {:si_unique_call 488} vslice_dummy_var_102 := __HAVOC_malloc(20);
    call {:si_unique_call 489} tx_1 := __HAVOC_malloc(20);
    call {:si_unique_call 490} ch_8 := __HAVOC_malloc(20);
    call {:si_unique_call 491} Tmp_261 := __HAVOC_malloc(20);
    call {:si_unique_call 492} vslice_dummy_var_103 := __HAVOC_malloc(20);
    call {:si_unique_call 493} Tmp_264 := __HAVOC_malloc(20);
    PDevObj_4 := actual_PDevObj_4;
    PConfigData := actual_PConfigData;
    call {:si_unique_call 494} Tmp_218 := __HAVOC_malloc(4096);
    call {:si_unique_call 495} Tmp_219 := __HAVOC_malloc(132);
    call {:si_unique_call 496} Tmp_227 := __HAVOC_malloc(184);
    call {:si_unique_call 497} Tmp_229 := __HAVOC_malloc(236);
    call {:si_unique_call 498} Tmp_235 := __HAVOC_malloc(180);
    call {:si_unique_call 499} Tmp_238 := __HAVOC_malloc(840);
    call {:si_unique_call 500} Tmp_242 := __HAVOC_malloc(140);
    call {:si_unique_call 501} Tmp_247 := __HAVOC_malloc(172);
    call {:si_unique_call 502} Tmp_248 := __HAVOC_malloc(168);
    call {:si_unique_call 503} Tmp_258 := __HAVOC_malloc(228);
    call {:si_unique_call 504} Tmp_259 := __HAVOC_malloc(176);
    call {:si_unique_call 505} Tmp_262 := __HAVOC_malloc(168);
    call {:si_unique_call 506} Tmp_266 := __HAVOC_malloc(6144);
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    havoc pDevExt_5;
    status_2 := 0;
    allocedDispatch := 0;
    pDispatch_3 := 0;
    incPoll := 0;
    call {:si_unique_call 507} sdv_do_paged_code_check();
    Tmp_227 := strConst__li2bpl38;
    call {:si_unique_call 508} vslice_dummy_var_104 := CyzDbgPrintEx(4, Tmp_227);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    firstTimeThisBoard := 0;
    goto L40;

  L40:
    call {:si_unique_call 509} KeInitializeTimer(0);
    call {:si_unique_call 510} KeInitializeTimer(0);
    call {:si_unique_call 511} KeInitializeTimer(0);
    call {:si_unique_call 512} KeInitializeTimer(0);
    call {:si_unique_call 513} KeInitializeTimer(0);
    call {:si_unique_call 514} KeInitializeTimer(0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 515} KeInitializeDpc(CompleteWriteDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant199, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 516} KeInitializeDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant347, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 517} KeInitializeDpc(TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant348, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 518} KeInitializeDpc(IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant349, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 519} KeInitializeDpc(TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant203, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 520} KeInitializeDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant350, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 521} KeInitializeDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant313, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 522} KeInitializeDpc(TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant315, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 523} KeInitializeDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant182, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 524} KeInitializeDpc(XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant205, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 525} KeInitializeDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant204, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 526} KeInitializeDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant351, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 527} KeInitializeDpc(PerhapsLowerRTSDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant352, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 528} KeInitializeDpc(IsrUnlockPagesDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant161, 0);
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_785;
    call {:si_unique_call 529} sdv_205 := MmMapIoSpace(Tmp_251, vslice_dummy_var_785, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_786;
    call {:si_unique_call 530} sdv_206 := MmMapIoSpace(Tmp_255, vslice_dummy_var_786, 0);
    BoardMemory := sdv_206;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BoardMemory != 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  L132:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L134;

  L134:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L135;

  L135:
    call {:si_unique_call 531} vslice_dummy_var_105 := corral_nondet();
    zfw := BoardMemory;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_241;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    havoc Tmp_266;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_226;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    havoc Tmp_218;
    call {:si_unique_call 532} vslice_dummy_var_106 := corral_nondet();
    call {:si_unique_call 533} vslice_dummy_var_107 := corral_nondet();
    call {:si_unique_call 534} vslice_dummy_var_108 := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 535} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 536} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 537} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 538} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 539} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 540} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 541} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 542} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 543} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 544} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 545} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 546} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 547} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 548} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 549} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 550} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 551} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 552} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 553} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 554} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 555} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 556} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 557} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 558} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 559} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 560} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 561} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 562} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 563} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 564} boogieTmp := corral_nondet();
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_787;
    call {:si_unique_call 565} MmUnmapIoSpace(0, vslice_dummy_var_787);
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 566} sdv_211 := MmMapIoSpace(Tmp_222, 64, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 567} sdv_214 := MmMapIoSpace(Tmp_223, 96, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 568} sdv_185 := MmMapIoSpace(Tmp_245, 64, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 569} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 570} boogieTmp := corral_nondet();
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_788;
    call {:si_unique_call 571} sdv_198 := MmMapIoSpace(Tmp_224, vslice_dummy_var_788, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_789;
    call {:si_unique_call 572} sdv_191 := MmMapIoSpace(Tmp_231, vslice_dummy_var_789, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 573} sdv_216 := MmMapIoSpace(Tmp_225, 5768, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 574} sdv_193 := CyzDoesPortExist(pDevExt_5, DeviceName__CYZ_DEVICE_EXTENSION(pDevExt_5));
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_193 != 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 575} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 576} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 577} boogieTmp := corral_nondet();
    Tmp_238 := strConst__li2bpl48;
    call {:si_unique_call 578} vslice_dummy_var_109 := CyzDbgPrintEx(4, Tmp_238);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc pDispatch_3;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} firstTimeThisBoard != 0;
    pollingCycle := 10;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_790;
    call {:si_unique_call 579} boogieTmp := RtlLargeIntegerNegate(vslice_dummy_var_790);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 580} Tmp_228 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_791;
    Mem_T.INT4[Tmp_228] := vslice_dummy_var_791;
    call {:si_unique_call 581} sdv_KeInitializeSpinLock(Tmp_228);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 582} KeInitializeTimer(0);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 583} KeInitializeDpc(PollingDpc__CYZ_DISPATCH(pDispatch_3), li2bplFunctionConstant113, 0);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 584} KeInitializeEvent(PendingDpcEvent__CYZ_DISPATCH(pDispatch_3), 1, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 585} intr := corral_nondet();
    intr := BOR(intr, BOR(65536, 131072));
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 586} boogieTmp := corral_nondet();
    goto L261;

  L261:
    call {:si_unique_call 587} Tmp_228 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_792;
    Mem_T.INT4[Tmp_228] := vslice_dummy_var_792;
    call {:si_unique_call 588} vslice_dummy_var_110 := sdv_InterlockedIncrement(Tmp_228);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    incPoll := 1;
    goto L299;

  L299:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_2 >= 0;
    goto L301;

  L301:
    Tmp_215 := status_2;
    return;

  anon61_Then:
    assume {:partition} 0 > status_2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} incPoll != 0;
    call {:si_unique_call 589} Tmp_228 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_793;
    Mem_T.INT4[Tmp_228] := vslice_dummy_var_793;
    call {:si_unique_call 590} vslice_dummy_var_111 := sdv_InterlockedDecrement(Tmp_228);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    goto L302;

  L302:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} allocedDispatch != 0;
    call {:si_unique_call 591} sdv_ExFreePool(0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L306;

  L306:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_794;
    call {:si_unique_call 592} MmUnmapIoSpace(0, vslice_dummy_var_794);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L311;

  L311:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 593} MmUnmapIoSpace(0, 64);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L316;

  L316:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 594} MmUnmapIoSpace(0, 96);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L321;

  L321:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 595} MmUnmapIoSpace(0, 64);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L326;

  L326:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_795;
    call {:si_unique_call 596} MmUnmapIoSpace(0, vslice_dummy_var_795);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L331;

  L331:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_796;
    call {:si_unique_call 597} MmUnmapIoSpace(0, vslice_dummy_var_796);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L336;

  L336:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 598} MmUnmapIoSpace(0, 5768);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L301;

  anon70_Then:
    goto L301;

  anon69_Then:
    goto L336;

  anon68_Then:
    goto L331;

  anon67_Then:
    goto L326;

  anon66_Then:
    goto L321;

  anon65_Then:
    goto L316;

  anon64_Then:
    goto L311;

  anon63_Then:
    assume {:partition} allocedDispatch == 0;
    goto L306;

  anon62_Then:
    assume {:partition} incPoll == 0;
    goto L302;

  anon84_Then:
    assume {:partition} firstTimeThisBoard == 0;
    goto L261;

  anon60_Then:
    assume {:partition} sdv_193 == 0;
    Tmp_242 := strConst__li2bpl39;
    call {:si_unique_call 599} vslice_dummy_var_112 := CyzDbgPrintEx(1, Tmp_242);
    status_2 := -1073741810;
    goto L299;

  anon83_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_217;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_253 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_797;
    havoc vslice_dummy_var_798;
    havoc vslice_dummy_var_799;
    havoc vslice_dummy_var_800;
    call {:si_unique_call 600} CyzLogError(vslice_dummy_var_797, vslice_dummy_var_798, vslice_dummy_var_799, Tmp_254, 0, 0, 0, Tmp_253, 0, -1073475524, Tmp_217, vslice_dummy_var_800, 0, 0);
    Tmp_235 := strConst__li2bpl40;
    call {:si_unique_call 601} vslice_dummy_var_113 := CyzDbgPrintEx(1, Tmp_235);
    status_2 := -1073741709;
    goto L299;

  anon82_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_260;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_256 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_801;
    havoc vslice_dummy_var_802;
    havoc vslice_dummy_var_803;
    havoc vslice_dummy_var_804;
    call {:si_unique_call 602} CyzLogError(vslice_dummy_var_801, vslice_dummy_var_802, vslice_dummy_var_803, Tmp_264, 0, 0, 0, Tmp_256, 0, -1073475525, Tmp_260, vslice_dummy_var_804, 0, 0);
    Tmp_262 := strConst__li2bpl41;
    call {:si_unique_call 603} vslice_dummy_var_114 := CyzDbgPrintEx(1, Tmp_262);
    status_2 := -1073741709;
    goto L299;

  anon81_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_233;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_221 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_805;
    havoc vslice_dummy_var_806;
    havoc vslice_dummy_var_807;
    havoc vslice_dummy_var_808;
    call {:si_unique_call 604} CyzLogError(vslice_dummy_var_805, vslice_dummy_var_806, vslice_dummy_var_807, Tmp_240, 0, 0, 0, Tmp_221, 0, -1073475526, Tmp_233, vslice_dummy_var_808, 0, 0);
    Tmp_248 := strConst__li2bpl42;
    call {:si_unique_call 605} vslice_dummy_var_115 := CyzDbgPrintEx(1, Tmp_248);
    status_2 := -1073741709;
    goto L299;

  anon80_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_230;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_265 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_809;
    havoc vslice_dummy_var_810;
    havoc vslice_dummy_var_811;
    havoc vslice_dummy_var_812;
    call {:si_unique_call 606} CyzLogError(vslice_dummy_var_809, vslice_dummy_var_810, vslice_dummy_var_811, Tmp_216, 0, 0, 0, Tmp_265, 0, -1073475527, Tmp_230, vslice_dummy_var_812, 0, 0);
    Tmp_259 := strConst__li2bpl43;
    call {:si_unique_call 607} vslice_dummy_var_116 := CyzDbgPrintEx(1, Tmp_259);
    status_2 := -1073741709;
    goto L299;

  anon79_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_234;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_250 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_813;
    havoc vslice_dummy_var_814;
    havoc vslice_dummy_var_815;
    havoc vslice_dummy_var_816;
    call {:si_unique_call 608} CyzLogError(vslice_dummy_var_813, vslice_dummy_var_814, vslice_dummy_var_815, Tmp_243, 0, 0, 0, Tmp_250, 0, -1073475528, Tmp_234, vslice_dummy_var_816, 0, 0);
    Tmp_247 := strConst__li2bpl44;
    call {:si_unique_call 609} vslice_dummy_var_117 := CyzDbgPrintEx(1, Tmp_247);
    status_2 := -1073741709;
    goto L299;

  anon78_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_249;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_252 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_817;
    havoc vslice_dummy_var_818;
    havoc vslice_dummy_var_819;
    havoc vslice_dummy_var_820;
    call {:si_unique_call 610} CyzLogError(vslice_dummy_var_817, vslice_dummy_var_818, vslice_dummy_var_819, Tmp_220, 0, 0, 0, Tmp_252, 0, -1073475529, Tmp_249, vslice_dummy_var_820, 0, 0);
    Tmp_219 := strConst__li2bpl45;
    call {:si_unique_call 611} vslice_dummy_var_118 := CyzDbgPrintEx(1, Tmp_219);
    status_2 := -1073741709;
    goto L299;

  anon58_Then:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L135;

  anon59_Then:
    goto L134;

  anon72_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon73_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon74_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon77_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon76_Then:
    assume {:partition} BoardMemory == 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_246;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_232 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_821;
    havoc vslice_dummy_var_822;
    havoc vslice_dummy_var_823;
    havoc vslice_dummy_var_824;
    call {:si_unique_call 612} CyzLogError(vslice_dummy_var_821, vslice_dummy_var_822, vslice_dummy_var_823, Tmp_261, 0, 0, 0, Tmp_232, 0, -1073475574, Tmp_246, vslice_dummy_var_824, 0, 0);
    Tmp_258 := strConst__li2bpl46;
    call {:si_unique_call 613} vslice_dummy_var_119 := CyzDbgPrintEx(1, Tmp_258);
    status_2 := -1073741709;
    goto L299;

  anon75_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_257;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_244 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_825;
    havoc vslice_dummy_var_826;
    havoc vslice_dummy_var_827;
    havoc vslice_dummy_var_828;
    call {:si_unique_call 614} CyzLogError(vslice_dummy_var_825, vslice_dummy_var_826, vslice_dummy_var_827, Tmp_236, 0, 0, 0, Tmp_244, 0, -1073475573, Tmp_257, vslice_dummy_var_828, 0, 0);
    Tmp_229 := strConst__li2bpl47;
    call {:si_unique_call 615} vslice_dummy_var_120 := CyzDbgPrintEx(1, Tmp_229);
    status_2 := -1073741709;
    goto L299;

  anon57_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 616} boogieTmp := ExAllocatePoolWithTag(0, 384, -797279933);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 617} sdv_RtlZeroMemory(0, 384);
    allocedDispatch := 1;
    firstTimeThisBoard := 1;
    goto L40;

  anon71_Then:
    status_2 := -1073741670;
    goto L299;
}



procedure {:origName "CyzCommError"} CyzCommError(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCommError"} CyzCommError(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int)
{
  var {:pointer} Tmp_267: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Extension_14: int;
  var {:pointer} Dpc: int;
  var {:pointer} DeferredContext: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_829: int;
  var vslice_dummy_var_830: int;

  anon0:
    call {:si_unique_call 618} vslice_dummy_var_121 := __HAVOC_malloc(4);
    Dpc := actual_Dpc;
    DeferredContext := actual_DeferredContext;
    call {:si_unique_call 619} Tmp_267 := __HAVOC_malloc(76);
    call {:si_unique_call 620} Tmp_269 := __HAVOC_malloc(60);
    Extension_14 := DeferredContext;
    Tmp_267 := strConst__li2bpl50;
    call {:si_unique_call 621} vslice_dummy_var_122 := CyzDbgPrintEx(2, Tmp_267);
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc vslice_dummy_var_829;
    call {:si_unique_call 622} CyzKillAllReadsOrWrites(vslice_dummy_var_829, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_14), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_14));
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc vslice_dummy_var_830;
    call {:si_unique_call 623} CyzKillAllReadsOrWrites(vslice_dummy_var_830, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_14), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_14));
    call {:si_unique_call 624} CyzDpcEpilogue(Extension_14, Dpc);
    Tmp_269 := strConst__li2bpl49;
    call {:si_unique_call 625} vslice_dummy_var_123 := CyzDbgPrintEx(2, Tmp_269);
    return;
}



procedure {:origName "CyzInitMultiPort"} CyzInitMultiPort(actual_PDevExt_1: int, actual_PConfigData_1: int, actual_PDevObj_5: int) returns (Tmp_271: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_271 == 0 || Tmp_271 == -1073741810 || Tmp_271 == -1073741709 || Tmp_271 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInitMultiPort"} CyzInitMultiPort(actual_PDevExt_1: int, actual_PConfigData_1: int, actual_PDevObj_5: int) returns (Tmp_271: int)
{
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:pointer} pNewExt: int;
  var {:scalar} status_3: int;
  var {:pointer} PDevExt_1: int;
  var {:pointer} PConfigData_1: int;
  var {:pointer} PDevObj_5: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;

  anon0:
    PDevExt_1 := actual_PDevExt_1;
    PConfigData_1 := actual_PConfigData_1;
    PDevObj_5 := actual_PDevObj_5;
    call {:si_unique_call 626} Tmp_272 := __HAVOC_malloc(104);
    call {:si_unique_call 627} Tmp_273 := __HAVOC_malloc(104);
    call {:si_unique_call 628} Tmp_274 := __HAVOC_malloc(124);
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    havoc pNewExt;
    call {:si_unique_call 629} sdv_do_paged_code_check();
    Tmp_274 := strConst__li2bpl51;
    call {:si_unique_call 630} vslice_dummy_var_124 := CyzDbgPrintEx(2, Tmp_274);
    assume {:nonnull} PDevExt_1 != 0;
    assume PDevExt_1 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    call {:si_unique_call 631} status_3 := CyzInitController(PDevObj_5, PConfigData_1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_3 >= 0;
    Tmp_273 := strConst__li2bpl53;
    call {:si_unique_call 632} vslice_dummy_var_125 := CyzDbgPrintEx(2, Tmp_273);
    Tmp_271 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 0 > status_3;
    Tmp_272 := strConst__li2bpl52;
    call {:si_unique_call 633} vslice_dummy_var_126 := CyzDbgPrintEx(2, Tmp_272);
    Tmp_271 := status_3;
    goto L1;
}



procedure {:origName "CyzSetPowerD3"} CyzSetPowerD3(actual_PDevObj_6: int, actual_PIrp: int) returns (Tmp_276: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_276 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetPowerD3"} CyzSetPowerD3(actual_PDevObj_6: int, actual_PIrp: int) returns (Tmp_276: int)
{
  var {:pointer} SD2: int;
  var {:pointer} Tmp_277: int;
  var {:pointer} pDevExt_6: int;
  var {:scalar} sdv_2: int;
  var {:pointer} pIrpStack: int;
  var {:pointer} PDevObj_6: int;
  var {:pointer} PIrp: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_831: int;
  var vslice_dummy_var_832: int;
  var vslice_dummy_var_833: int;

  anon0:
    call {:si_unique_call 634} sdv_2 := __HAVOC_malloc(8);
    PDevObj_6 := actual_PDevObj_6;
    PIrp := actual_PIrp;
    call {:si_unique_call 635} Tmp_277 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    havoc pDevExt_6;
    call {:si_unique_call 636} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 637} sdv_do_paged_code_check();
    Tmp_277 := strConst__li2bpl54;
    call {:si_unique_call 638} vslice_dummy_var_128 := CyzDbgPrintEx(6, Tmp_277);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 639} vslice_dummy_var_127 := CyzSendWaitWake(pDevExt_6);
    goto L19;

  L19:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    havoc vslice_dummy_var_831;
    havoc vslice_dummy_var_832;
    call {:si_unique_call 640} SD2 := PoSetPowerState(0, vslice_dummy_var_831, vslice_dummy_var_832);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 641} vslice_dummy_var_129 := CyzTryToDisableTimer(pDevExt_6);
    call {:si_unique_call 642} CyzSaveDeviceState(pDevExt_6);
    goto L26;

  L26:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 643} PoStartNextPowerIrp(0);
    call {:si_unique_call 644} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_833;
    call {:si_unique_call 645} Tmp_276 := CyzPoCallDriver(pDevExt_6, vslice_dummy_var_833, PIrp);
    return;

  anon6_Then:
    goto L26;

  anon5_Then:
    goto L19;
}



procedure {:origName "CyzRestoreDeviceState"} CyzRestoreDeviceState(actual_PDevExt_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRestoreDeviceState"} CyzRestoreDeviceState(actual_PDevExt_2: int)
{
  var {:pointer} Tmp_280: int;
  var {:scalar} Tmp_281: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} Tmp_283: int;
  var {:pointer} Tmp_284: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} pDispatch_4: int;
  var {:pointer} PDevExt_2: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_834: int;
  var vslice_dummy_var_835: int;

  anon0:
    call {:si_unique_call 646} vslice_dummy_var_130 := __HAVOC_malloc(4);
    PDevExt_2 := actual_PDevExt_2;
    call {:si_unique_call 647} Tmp_280 := __HAVOC_malloc(256);
    call {:si_unique_call 648} Tmp_282 := __HAVOC_malloc(116);
    call {:si_unique_call 649} Tmp_283 := __HAVOC_malloc(72);
    call {:si_unique_call 650} Tmp_285 := __HAVOC_malloc(52);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    call {:si_unique_call 651} sdv_do_paged_code_check();
    Tmp_282 := strConst__li2bpl55;
    call {:si_unique_call 652} vslice_dummy_var_133 := CyzDbgPrintEx(11, Tmp_282);
    Tmp_285 := strConst__li2bpl56;
    call {:si_unique_call 653} vslice_dummy_var_134 := CyzDbgPrintEx(11, Tmp_285);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_283 := strConst__li2bpl57;
    call {:si_unique_call 654} vslice_dummy_var_135 := CyzDbgPrintEx(12, Tmp_283);
    call {:si_unique_call 655} vslice_dummy_var_131 := CyzReset(PDevExt_2);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    havoc pDispatch_4;
    call {:si_unique_call 656} Tmp_284 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    Mem_T.INT4[Tmp_284] := oldIrql_3;
    call {:si_unique_call 657} sdv_KeAcquireSpinLock(0, Tmp_284);
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_284];
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    havoc Tmp_281;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    havoc Tmp_280;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L35;

  L35:
    call {:si_unique_call 658} sdv_KeReleaseSpinLock(0, oldIrql_3);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    havoc vslice_dummy_var_834;
    havoc vslice_dummy_var_835;
    call {:si_unique_call 659} vslice_dummy_var_132 := KeSetTimerEx(0, vslice_dummy_var_834, vslice_dummy_var_835, 0);
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    goto L35;

  anon5_Then:
    goto L1;
}



procedure {:origName "CyzDevicePowerComplete"} CyzDevicePowerComplete(actual_DeviceObject_2: int, actual_Irp_2: int, actual_Context_13: int) returns (Tmp_286: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_286 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDevicePowerComplete"} CyzDevicePowerComplete(actual_DeviceObject_2: int, actual_Irp_2: int, actual_Context_13: int) returns (Tmp_286: int)
{
  var {:pointer} SD1: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} pDevExt_7: int;
  var {:scalar} powerState: int;
  var {:scalar} sdv_1: int;
  var {:pointer} stack: int;
  var {:scalar} powerType: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var vslice_dummy_var_136: int;

  anon0:
    call {:si_unique_call 660} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 661} sdv_1 := __HAVOC_malloc(8);
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 662} Tmp_287 := __HAVOC_malloc(72);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 663} sdv_IoMarkIrpPending(0);
    goto L8;

  L8:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc pDevExt_7;
    call {:si_unique_call 664} stack := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} stack != 0;
    assume stack > 0;
    havoc powerType;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    assume {:nonnull} stack != 0;
    assume stack > 0;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    assume {:nonnull} stack != 0;
    assume stack > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 665} CyzRestoreDeviceState(pDevExt_7);
    goto L20;

  L20:
    call {:si_unique_call 666} SD1 := PoSetPowerState(0, powerType, powerState);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    call {:si_unique_call 667} PoStartNextPowerIrp(0);
    Tmp_287 := strConst__li2bpl3;
    call {:si_unique_call 668} vslice_dummy_var_136 := CyzDbgPrintEx(9, Tmp_287);
    call {:si_unique_call 669} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 670} CyzIRPEpilogue(pDevExt_7);
    Tmp_286 := -1073741802;
    return;

  anon6_Then:
    goto L20;

  anon5_Then:
    goto L8;
}



procedure {:origName "CyzSendWaitWake"} CyzSendWaitWake(actual_PDevExt_3: int) returns (Tmp_289: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_289 == -1073741436 || Tmp_289 == 0 || Tmp_289 == -1073741584 || Tmp_289 == 259 || Tmp_289 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSendWaitWake"} CyzSendWaitWake(actual_PDevExt_3: int) returns (Tmp_289: int)
{
  var {:scalar} powerState_1: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} PDevExt_3: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_836: int;

  anon0:
    call {:si_unique_call 671} powerState_1 := __HAVOC_malloc(8);
    PDevExt_3 := actual_PDevExt_3;
    call {:si_unique_call 672} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_289 := -1073741436;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_289 := -1073741436;
    goto L1;

  anon12_Then:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 673} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc vslice_dummy_var_836;
    Mem_T.INT4[Tmp_290] := vslice_dummy_var_836;
    call {:si_unique_call 674} vslice_dummy_var_137 := sdv_InterlockedIncrement(Tmp_290);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    call {:si_unique_call 675} status_5 := PoRequestPowerIrp(0, 0, powerState_1, li2bplFunctionConstant290, 0, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_5 == 259;
    status_5 := 0;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L27;

  L27:
    Tmp_289 := status_5;
    goto L1;

  anon14_Then:
    assume {:partition} status_5 != 259;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_5 < 0;
    call {:si_unique_call 676} CyzIRPEpilogue(PDevExt_3);
    goto L27;

  anon15_Then:
    assume {:partition} 0 <= status_5;
    goto L27;

  anon13_Then:
    Tmp_289 := -1073741436;
    goto L1;
}



procedure {:origName "CyzPowerDispatch"} CyzPowerDispatch(actual_PDevObj_7: int, actual_PIrp_1: int) returns (Tmp_291: int);
  modifies alloc, start_irql, Mem_T.INT4, yogi_error, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPowerDispatch"} CyzPowerDispatch(actual_PDevObj_7: int, actual_PIrp_1: int) returns (Tmp_291: int)
{
  var {:pointer} Tmp_292: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} pDevExt_8: int;
  var {:pointer} Tmp_295: int;
  var {:pointer} Tmp_296: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:pointer} Tmp_299: int;
  var {:pointer} pIrpStack_1: int;
  var {:pointer} Tmp_300: int;
  var {:pointer} Tmp_301: int;
  var {:pointer} pLowerDevObj: int;
  var {:pointer} Tmp_302: int;
  var {:scalar} status_6: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} PDevObj_7: int;
  var {:pointer} PIrp_1: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;

  anon0:
    PDevObj_7 := actual_PDevObj_7;
    PIrp_1 := actual_PIrp_1;
    call {:si_unique_call 677} Tmp_292 := __HAVOC_malloc(100);
    call {:si_unique_call 678} Tmp_293 := __HAVOC_malloc(72);
    call {:si_unique_call 679} Tmp_295 := __HAVOC_malloc(136);
    call {:si_unique_call 680} Tmp_296 := __HAVOC_malloc(72);
    call {:si_unique_call 681} Tmp_297 := __HAVOC_malloc(72);
    call {:si_unique_call 682} Tmp_298 := __HAVOC_malloc(124);
    call {:si_unique_call 683} Tmp_299 := __HAVOC_malloc(72);
    call {:si_unique_call 684} Tmp_300 := __HAVOC_malloc(80);
    call {:si_unique_call 685} Tmp_301 := __HAVOC_malloc(100);
    call {:si_unique_call 686} Tmp_302 := __HAVOC_malloc(104);
    call {:si_unique_call 687} Tmp_303 := __HAVOC_malloc(104);
    call {:si_unique_call 688} Tmp_304 := __HAVOC_malloc(112);
    call {:si_unique_call 689} SLIC_CyzPowerDispatch_entry(0);
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    havoc pDevExt_8;
    call {:si_unique_call 690} pIrpStack_1 := sdv_IoGetCurrentIrpStackLocation(PIrp_1);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    havoc pLowerDevObj;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 691} sdv_do_paged_code_check();
    call {:si_unique_call 692} status_6 := CyzIRPPrologue(PIrp_1, pDevExt_8);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_6 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_6 != 259;
    call {:si_unique_call 693} PoStartNextPowerIrp(0);
    Tmp_299 := strConst__li2bpl3;
    call {:si_unique_call 694} vslice_dummy_var_140 := CyzDbgPrintEx(9, Tmp_299);
    call {:si_unique_call 695} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 696} CyzIRPEpilogue(pDevExt_8);
    goto L26;

  L26:
    Tmp_291 := status_6;
    goto L1;

  L1:
    call {:si_unique_call 697} SLIC_CyzPowerDispatch_exit(strConst__li2bpl0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    assume {:partition} status_6 == 259;
    goto L26;

  anon39_Then:
    assume {:partition} status_6 == 0;
    status_6 := 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    Tmp_304 := strConst__li2bpl61;
    call {:si_unique_call 698} vslice_dummy_var_150 := CyzDbgPrintEx(12, Tmp_304);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L57;

  L57:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_6;
    call {:si_unique_call 699} PoStartNextPowerIrp(0);
    Tmp_297 := strConst__li2bpl3;
    call {:si_unique_call 700} vslice_dummy_var_151 := CyzDbgPrintEx(9, Tmp_297);
    call {:si_unique_call 701} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 702} CyzIRPEpilogue(pDevExt_8);
    Tmp_291 := status_6;
    goto L1;

  anon44_Then:
    goto L58;

  L58:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    status_6 := 0;
    call {:si_unique_call 703} PoStartNextPowerIrp(0);
    call {:si_unique_call 704} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 705} Tmp_291 := CyzPoCallDriver(pDevExt_8, pLowerDevObj, PIrp_1);
    goto L1;

  anon43_Then:
    goto L58;

  anon41_Then:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L58;

  anon42_Then:
    goto L57;

  anon48_Then:
    goto L40;

  L40:
    call {:si_unique_call 706} PoStartNextPowerIrp(0);
    call {:si_unique_call 707} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 708} status_6 := CyzPoCallDriver(pDevExt_8, pLowerDevObj, PIrp_1);
    Tmp_291 := status_6;
    goto L1;

  anon49_Then:
    Tmp_302 := strConst__li2bpl60;
    call {:si_unique_call 709} vslice_dummy_var_143 := CyzDbgPrintEx(12, Tmp_302);
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_293 := strConst__li2bpl64;
    call {:si_unique_call 710} vslice_dummy_var_145 := CyzDbgPrintEx(12, Tmp_293);
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_6;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_295 := strConst__li2bpl65;
    call {:si_unique_call 711} vslice_dummy_var_146 := CyzDbgPrintEx(12, Tmp_295);
    goto L40;

  anon57_Then:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L107;

  L107:
    Tmp_292 := strConst__li2bpl66;
    call {:si_unique_call 712} vslice_dummy_var_148 := CyzDbgPrintEx(12, Tmp_292);
    call {:si_unique_call 713} Tmp_291 := CyzSetPowerD3(PDevObj_7, PIrp_1);
    goto L1;

  anon52_Then:
    goto L40;

  anon53_Then:
    goto L107;

  anon54_Then:
    goto L107;

  anon46_Then:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(pDevExt_8)] != 0;
    Tmp_301 := strConst__li2bpl67;
    call {:si_unique_call 714} vslice_dummy_var_147 := CyzDbgPrintEx(12, Tmp_301);
    call {:si_unique_call 715} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 716} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    call {:si_unique_call 717} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant285, 0, 1, 1, 1);
    call {:si_unique_call 718} vslice_dummy_var_138 := PoCallDriver(0, PIrp_1);
    Tmp_291 := 259;
    goto L1;

  anon47_Then:
    assume {:partition} Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(pDevExt_8)] == 0;
    goto L40;

  anon51_Then:
    Tmp_300 := strConst__li2bpl62;
    call {:si_unique_call 719} vslice_dummy_var_149 := CyzDbgPrintEx(12, Tmp_300);
    goto L40;

  anon45_Then:
    Tmp_296 := strConst__li2bpl63;
    call {:si_unique_call 720} vslice_dummy_var_144 := CyzDbgPrintEx(12, Tmp_296);
    call {:si_unique_call 721} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 722} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    call {:si_unique_call 723} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant284, 0, 1, 1, 1);
    call {:si_unique_call 724} vslice_dummy_var_139 := PoCallDriver(0, PIrp_1);
    Tmp_291 := 259;
    goto L1;

  anon50_Then:
    Tmp_298 := strConst__li2bpl59;
    call {:si_unique_call 725} vslice_dummy_var_142 := CyzDbgPrintEx(12, Tmp_298);
    goto L40;

  anon56_Then:
    Tmp_303 := strConst__li2bpl58;
    call {:si_unique_call 726} vslice_dummy_var_141 := CyzDbgPrintEx(12, Tmp_303);
    goto L40;
}



procedure {:origName "CyzSaveDeviceState"} CyzSaveDeviceState(actual_PDevExt_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSaveDeviceState"} CyzSaveDeviceState(actual_PDevExt_4: int)
{
  var {:pointer} Tmp_306: int;
  var {:pointer} Tmp_307: int;
  var {:pointer} PDevExt_4: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;

  anon0:
    call {:si_unique_call 727} vslice_dummy_var_152 := __HAVOC_malloc(4);
    PDevExt_4 := actual_PDevExt_4;
    call {:si_unique_call 728} Tmp_306 := __HAVOC_malloc(116);
    call {:si_unique_call 729} Tmp_307 := __HAVOC_malloc(112);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 730} sdv_do_paged_code_check();
    Tmp_306 := strConst__li2bpl68;
    call {:si_unique_call 731} vslice_dummy_var_153 := CyzDbgPrintEx(11, Tmp_306);
    Tmp_307 := strConst__li2bpl69;
    call {:si_unique_call 732} vslice_dummy_var_154 := CyzDbgPrintEx(11, Tmp_307);
    return;
}



procedure {:origName "CyzWakeCompletion"} CyzWakeCompletion(actual_PDevObj_8: int, actual_MinorFunction: int, actual_SD1_1: int, actual_Context_14: int, actual_IoStatus: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzWakeCompletion"} CyzWakeCompletion(actual_PDevObj_8: int, actual_MinorFunction: int, actual_SD1_1: int, actual_Context_14: int, actual_IoStatus: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} pDevExt_9: int;
  var {:scalar} powerState_2: int;
  var {:scalar} status_7: int;
  var {:pointer} SD1_1: int;
  var {:pointer} Context_14: int;
  var {:pointer} IoStatus: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 733} PowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 734} vslice_dummy_var_155 := __HAVOC_malloc(4);
    call {:si_unique_call 735} powerState_2 := __HAVOC_malloc(8);
    SD1_1 := actual_SD1_1;
    Context_14 := actual_Context_14;
    IoStatus := actual_IoStatus;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    pDevExt_9 := Context_14;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    havoc status_7;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_7 >= 0;
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    call {:si_unique_call 736} vslice_dummy_var_156 := PoRequestPowerIrp(0, 2, powerState_2, 0, 0, 0);
    goto L9;

  L9:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 737} CyzIRPEpilogue(pDevExt_9);
    return;

  anon3_Then:
    assume {:partition} 0 > status_7;
    goto L9;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 738} vslice_dummy_var_157 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGotoPowerState"} CyzGotoPowerState(actual_PDevObj_9: int, actual_PDevExt_5: int, actual_DevPowerState: int) returns (Tmp_313: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_313 == 0 || Tmp_313 == -1073741584 || Tmp_313 == 259 || Tmp_313 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGotoPowerState"} CyzGotoPowerState(actual_PDevObj_9: int, actual_PDevExt_5: int, actual_DevPowerState: int) returns (Tmp_313: int)
{
  var {:scalar} powerState_3: int;
  var {:pointer} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:scalar} gotoPowEvent: int;
  var {:scalar} status_8: int;
  var {:scalar} DevPowerState: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;

  anon0:
    call {:si_unique_call 739} powerState_3 := __HAVOC_malloc(8);
    call {:si_unique_call 740} gotoPowEvent := __HAVOC_malloc(124);
    DevPowerState := actual_DevPowerState;
    call {:si_unique_call 741} Tmp_314 := __HAVOC_malloc(108);
    call {:si_unique_call 742} Tmp_315 := __HAVOC_malloc(88);
    call {:si_unique_call 743} sdv_do_paged_code_check();
    Tmp_315 := strConst__li2bpl70;
    call {:si_unique_call 744} vslice_dummy_var_159 := CyzDbgPrintEx(11, Tmp_315);
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    call {:si_unique_call 745} KeInitializeEvent(gotoPowEvent, 1, 0);
    call {:si_unique_call 746} status_8 := PoRequestPowerIrp(0, 2, powerState_3, li2bplFunctionConstant280, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_8 == 259;
    call {:si_unique_call 747} vslice_dummy_var_158 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    status_8 := 0;
    goto L21;

  L21:
    Tmp_314 := strConst__li2bpl71;
    call {:si_unique_call 748} vslice_dummy_var_160 := CyzDbgPrintEx(11, Tmp_314);
    Tmp_313 := status_8;
    return;

  anon3_Then:
    assume {:partition} status_8 != 259;
    goto L21;
}



procedure {:origName "CyzSystemPowerComplete"} CyzSystemPowerComplete(actual_DeviceObject_3: int, actual_Irp_3: int, actual_Context_15: int) returns (Tmp_317: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_317 == -1073741802 || Tmp_317 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSystemPowerComplete"} CyzSystemPowerComplete(actual_DeviceObject_3: int, actual_Irp_3: int, actual_Context_15: int) returns (Tmp_317: int)
{
  var {:pointer} Tmp_318: int;
  var {:scalar} powerState_4: int;
  var {:pointer} powerContext: int;
  var {:pointer} sdv_266: int;
  var {:scalar} Tmp_319: int;
  var {:pointer} data: int;
  var {:pointer} Tmp_321: int;
  var {:scalar} status_9: int;
  var {:pointer} stack_1: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_161: int;

  anon0:
    call {:si_unique_call 749} powerState_4 := __HAVOC_malloc(8);
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_3 := actual_Irp_3;
    call {:si_unique_call 750} Tmp_318 := __HAVOC_malloc(28);
    call {:si_unique_call 751} Tmp_321 := __HAVOC_malloc(72);
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    havoc status_9;
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc data;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_9 >= 0;
    call {:si_unique_call 752} stack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L24;

  L24:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    havoc Tmp_319;
    assume {:nonnull} data != 0;
    assume data > 0;
    havoc Tmp_318;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  L26:
    call {:si_unique_call 753} sdv_266 := ExAllocatePoolWithTag(0, 8, -797279933);
    powerContext := sdv_266;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} powerContext != 0;
    assume {:nonnull} powerContext != 0;
    assume powerContext > 0;
    assume {:nonnull} powerContext != 0;
    assume powerContext > 0;
    call {:si_unique_call 754} status_9 := PoRequestPowerIrp(0, 2, powerState_4, li2bplFunctionConstant283, 0, 0);
    goto L38;

  L38:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_9 >= 0;
    goto L40;

  L40:
    Tmp_317 := -1073741802;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} 0 > status_9;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} powerContext != 0;
    call {:si_unique_call 755} sdv_ExFreePool(0);
    goto L41;

  L41:
    call {:si_unique_call 756} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    Tmp_321 := strConst__li2bpl3;
    call {:si_unique_call 757} vslice_dummy_var_161 := CyzDbgPrintEx(9, Tmp_321);
    call {:si_unique_call 758} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 759} CyzIRPEpilogue(data);
    goto L40;

  anon26_Then:
    assume {:partition} powerContext == 0;
    goto L41;

  anon36_Then:
    assume {:partition} powerContext == 0;
    status_9 := -1073741670;
    goto L38;

  anon27_Then:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  anon28_Then:
    goto L24;

  anon29_Then:
    goto L24;

  anon30_Then:
    goto L24;

  anon31_Then:
    goto L24;

  anon32_Then:
    goto L24;

  anon33_Then:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  anon35_Then:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  anon34_Then:
    assume {:partition} 0 > status_9;
    call {:si_unique_call 760} PoStartNextPowerIrp(0);
    call {:si_unique_call 761} CyzIRPEpilogue(data);
    Tmp_317 := 0;
    goto L1;
}



procedure {:origName "CyzGiveImmediateToIsr"} CyzGiveImmediateToIsr(actual_Context_16: int) returns (Tmp_322: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_322 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveImmediateToIsr"} CyzGiveImmediateToIsr(actual_Context_16: int) returns (Tmp_322: int)
{
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:pointer} sdv_269: int;
  var {:pointer} Tmp_323: int;
  var {:scalar} s_p_e_c_i_a_l_6: int;
  var {:pointer} Extension_15: int;
  var {:pointer} Tmp_325: int;
  var {:pointer} Context_16: int;
  var vslice_dummy_var_837: int;

  anon0:
    Context_16 := actual_Context_16;
    Extension_15 := Context_16;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_325;
    assume {:nonnull} Tmp_325 != 0;
    assume Tmp_325 > 0;
    havoc Tmp_323;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    s_p_e_c_i_a_l_6 := 1;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_837;
    call {:si_unique_call 762} sdv_269 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_837);
    assume {:nonnull} sdv_269 != 0;
    assume sdv_269 > 0;
    s_p_e_c_i_a_l_5 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_269)));
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_5] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_5], s_p_e_c_i_a_l_6);
    Tmp_322 := 0;
    return;
}



procedure {:origName "CyzCancelImmediate"} CyzCancelImmediate(actual_DeviceObject_4: int, actual_Irp_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelImmediate"} CyzCancelImmediate(actual_DeviceObject_4: int, actual_Irp_4: int)
{
  var {:pointer} Extension_16: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_162: int;

  anon0:
    call {:si_unique_call 763} vslice_dummy_var_162 := __HAVOC_malloc(4);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc Extension_16;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 764} CyzTryToCompleteCurrent#1(Extension_16, li2bplFunctionConstant316, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_4)], -1073741536, CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(Extension_16), 0, 0, ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_16), 0, li2bplFunctionConstant314, 2);
    return;
}



procedure {:origName "CyzGrabImmediateFromIsr"} CyzGrabImmediateFromIsr(actual_Context_17: int) returns (Tmp_328: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_328 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabImmediateFromIsr"} CyzGrabImmediateFromIsr(actual_Context_17: int) returns (Tmp_328: int)
{
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:pointer} sdv_270: int;
  var {:scalar} s_p_e_c_i_a_l_8: int;
  var {:pointer} Extension_17: int;
  var {:pointer} Context_17: int;
  var vslice_dummy_var_838: int;

  anon0:
    Context_17 := actual_Context_17;
    Extension_17 := Context_17;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    s_p_e_c_i_a_l_8 := 1;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_838;
    call {:si_unique_call 765} sdv_270 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_838);
    assume {:nonnull} sdv_270 != 0;
    assume sdv_270 > 0;
    s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_270)));
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_7] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_7], BNOT(s_p_e_c_i_a_l_8));
    goto L6;

  L6:
    Tmp_328 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_163: int;

  anon0:
    call {:si_unique_call 766} vslice_dummy_var_163 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGetNextImmediate"} CyzGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextImmediate"} CyzGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int)
{
  var {:pointer} Tmp_333: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} OldIrp: int;
  var {:pointer} Tmp_334: int;
  var {:scalar} pollIrql_2: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Extension_18: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;

  anon0:
    call {:si_unique_call 767} vslice_dummy_var_164 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp_1 := actual_NewIrp_1;
    Extension_18 := actual_Extension_18;
    call {:si_unique_call 768} Tmp_333 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp;
    call {:si_unique_call 769} Tmp_334 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Mem_T.INT4[Tmp_334] := OldIrql_3;
    call {:si_unique_call 770} IoAcquireCancelSpinLock(Tmp_334);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_334];
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    call {:si_unique_call 771} Tmp_334 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Mem_T.INT4[Tmp_334] := pollIrql_2;
    call {:si_unique_call 772} sdv_KeAcquireSpinLock(0, Tmp_334);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    pollIrql_2 := Mem_T.INT4[Tmp_334];
    call {:si_unique_call 773} vslice_dummy_var_165 := CyzProcessEmptyTransmit(Extension_18);
    call {:si_unique_call 774} sdv_KeReleaseSpinLock(0, pollIrql_2);
    call {:si_unique_call 775} IoReleaseCancelSpinLock(OldIrql_3);
    Tmp_333 := strConst__li2bpl3;
    call {:si_unique_call 776} vslice_dummy_var_166 := CyzDbgPrintEx(9, Tmp_333);
    call {:si_unique_call 777} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 778} CyzIRPEpilogue(Extension_18);
    return;
}



procedure {:origName "CyzStartImmediate"} CyzStartImmediate(actual_Extension_19: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartImmediate"} CyzStartImmediate(actual_Extension_19: int)
{
  var {:pointer} Tmp_335: int;
  var {:pointer} s_p_e_c_i_a_l_9: int;
  var {:pointer} Tmp_336: int;
  var {:scalar} TotalTime: int;
  var {:pointer} sdv_274: int;
  var {:scalar} UseATimer: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} sdv_276: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} sdv_277: int;
  var {:pointer} Tmp_338: int;
  var {:scalar} s_p_e_c_i_a_l_10: int;
  var {:pointer} s_p_e_c_i_a_l_11: int;
  var {:pointer} Tmp_339: int;
  var {:pointer} OldIrp_1: int;
  var {:scalar} s_p_e_c_i_a_l_12: int;
  var {:pointer} Tmp_340: int;
  var {:scalar} Timeouts: int;
  var {:scalar} pollIrql_3: int;
  var {:pointer} Extension_19: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_839: int;
  var vslice_dummy_var_840: int;
  var vslice_dummy_var_841: int;
  var vslice_dummy_var_842: int;

  anon0:
    call {:si_unique_call 779} TotalTime := __HAVOC_malloc(20);
    call {:si_unique_call 780} Timeouts := __HAVOC_malloc(20);
    call {:si_unique_call 781} vslice_dummy_var_167 := __HAVOC_malloc(4);
    Extension_19 := actual_Extension_19;
    call {:si_unique_call 782} Tmp_335 := __HAVOC_malloc(80);
    call {:si_unique_call 783} Tmp_336 := __HAVOC_malloc(96);
    call {:si_unique_call 784} Tmp_337 := __HAVOC_malloc(72);
    Tmp_336 := strConst__li2bpl72;
    call {:si_unique_call 785} vslice_dummy_var_171 := CyzDbgPrintEx(2, Tmp_336);
    UseATimer := 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_338;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    call {:si_unique_call 786} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 787} Tmp_340 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    Mem_T.INT4[Tmp_340] := OldIrql_4;
    call {:si_unique_call 788} sdv_KeAcquireSpinLock(0, Tmp_340);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    OldIrql_4 := Mem_T.INT4[Tmp_340];
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    call {:si_unique_call 789} sdv_KeReleaseSpinLock(0, OldIrql_4);
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L25;

  L25:
    UseATimer := 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    goto L29;

  L29:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_839;
    call {:si_unique_call 790} sdv_277 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_839);
    assume {:nonnull} sdv_277 != 0;
    assume sdv_277 > 0;
    call {:si_unique_call 791} Tmp_340 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    Mem_T.INT4[Tmp_340] := OldIrql_4;
    call {:si_unique_call 792} IoAcquireCancelSpinLock(Tmp_340);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    OldIrql_4 := Mem_T.INT4[Tmp_340];
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_339;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc OldIrp_1;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 793} IoReleaseCancelSpinLock(OldIrql_4);
    assume {:nonnull} OldIrp_1 != 0;
    assume OldIrp_1 > 0;
    assume {:nonnull} OldIrp_1 != 0;
    assume OldIrp_1 > 0;
    Tmp_337 := strConst__li2bpl3;
    call {:si_unique_call 794} vslice_dummy_var_172 := CyzDbgPrintEx(9, Tmp_337);
    call {:si_unique_call 795} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 796} CyzIRPEpilogue(Extension_19);
    goto L57;

  L57:
    Tmp_335 := strConst__li2bpl73;
    call {:si_unique_call 797} vslice_dummy_var_173 := CyzDbgPrintEx(2, Tmp_335);
    return;

  anon11_Then:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_840;
    call {:si_unique_call 798} vslice_dummy_var_168 := sdv_IoSetCancelRoutine(vslice_dummy_var_840, li2bplFunctionConstant312);
    s_p_e_c_i_a_l_10 := 2;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_841;
    call {:si_unique_call 799} sdv_274 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_841);
    assume {:nonnull} sdv_274 != 0;
    assume sdv_274 > 0;
    s_p_e_c_i_a_l_9 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_274)));
    assume {:nonnull} s_p_e_c_i_a_l_9 != 0;
    assume s_p_e_c_i_a_l_9 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_9] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_9], s_p_e_c_i_a_l_10);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} UseATimer != 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 800} vslice_dummy_var_169 := CyzSetTimer(ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_19), TotalTime, TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_19), Extension_19);
    s_p_e_c_i_a_l_12 := 4;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_842;
    call {:si_unique_call 801} sdv_276 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_842);
    assume {:nonnull} sdv_276 != 0;
    assume sdv_276 > 0;
    s_p_e_c_i_a_l_11 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_276)));
    assume {:nonnull} s_p_e_c_i_a_l_11 != 0;
    assume s_p_e_c_i_a_l_11 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_11] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_11], s_p_e_c_i_a_l_12);
    goto L69;

  L69:
    call {:si_unique_call 802} Tmp_340 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    Mem_T.INT4[Tmp_340] := pollIrql_3;
    call {:si_unique_call 803} sdv_KeAcquireSpinLock(0, Tmp_340);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    pollIrql_3 := Mem_T.INT4[Tmp_340];
    call {:si_unique_call 804} vslice_dummy_var_170 := CyzGiveImmediateToIsr(Extension_19);
    call {:si_unique_call 805} sdv_KeReleaseSpinLock(0, pollIrql_3);
    call {:si_unique_call 806} IoReleaseCancelSpinLock(OldIrql_4);
    goto L57;

  anon12_Then:
    assume {:partition} UseATimer == 0;
    goto L69;

  anon9_Then:
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L29;

  anon10_Then:
    goto L25;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_174: int;

  anon0:
    call {:si_unique_call 807} vslice_dummy_var_174 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCreateOpen"} CyzCreateOpen(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_344: int);
  modifies alloc, Mem_T.INT4, start_irql, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCreateOpen"} CyzCreateOpen(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_344: int)
{
  var {:scalar} localStatus: int;
  var {:pointer} sdv_282: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} sdv_284: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} sdv_291: int;
  var {:scalar} sdv_292: int;
  var {:scalar} sdv_293: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} sdv_298: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} pDispatch_5: int;
  var {:pointer} extension_3: int;
  var {:scalar} pollIrql_4: int;
  var {:scalar} pollingIrql: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_843: int;
  var vslice_dummy_var_844: int;
  var vslice_dummy_var_845: int;
  var vslice_dummy_var_846: int;
  var vslice_dummy_var_847: int;

  anon0:
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 808} Tmp_346 := __HAVOC_malloc(72);
    call {:si_unique_call 809} Tmp_347 := __HAVOC_malloc(256);
    call {:si_unique_call 810} Tmp_348 := __HAVOC_malloc(72);
    call {:si_unique_call 811} Tmp_349 := __HAVOC_malloc(72);
    call {:si_unique_call 812} Tmp_350 := __HAVOC_malloc(72);
    call {:si_unique_call 813} Tmp_351 := __HAVOC_malloc(96);
    call {:si_unique_call 814} Tmp_353 := __HAVOC_malloc(72);
    call {:si_unique_call 815} Tmp_354 := __HAVOC_malloc(72);
    call {:si_unique_call 816} SLIC_CyzCreateOpen_entry(0);
    assume {:nonnull} DeviceObject_5 != 0;
    assume DeviceObject_5 > 0;
    havoc extension_3;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc pDispatch_5;
    call {:si_unique_call 817} sdv_do_paged_code_check();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 818} sdv_IoCompleteRequest(0, 0);
    Tmp_344 := -1073741670;
    goto L1;

  L1:
    call {:si_unique_call 819} SLIC_CyzCreateOpen_exit(strConst__li2bpl0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    call {:si_unique_call 820} ExAcquireFastMutex(0);
    call {:si_unique_call 821} localStatus := CyzIRPPrologue(Irp_5, extension_3);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} localStatus != 0;
    call {:si_unique_call 822} ExReleaseFastMutex(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} localStatus != 259;
    Tmp_350 := strConst__li2bpl3;
    call {:si_unique_call 823} vslice_dummy_var_179 := CyzDbgPrintEx(9, Tmp_350);
    call {:si_unique_call 824} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 825} CyzIRPEpilogue(extension_3);
    goto L34;

  L34:
    Tmp_344 := localStatus;
    goto L1;

  anon33_Then:
    assume {:partition} localStatus == 259;
    goto L34;

  anon32_Then:
    assume {:partition} localStatus == 0;
    call {:si_unique_call 826} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 827} sdv_292 := sdv_InterlockedIncrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_292 != 1;
    call {:si_unique_call 828} ExReleaseFastMutex(0);
    call {:si_unique_call 829} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 830} vslice_dummy_var_180 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_346 := strConst__li2bpl3;
    call {:si_unique_call 831} vslice_dummy_var_181 := CyzDbgPrintEx(9, Tmp_346);
    call {:si_unique_call 832} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 833} CyzIRPEpilogue(extension_3);
    Tmp_344 := -1073741790;
    goto L1;

  anon34_Then:
    assume {:partition} sdv_292 == 1;
    Tmp_351 := strConst__li2bpl1;
    call {:si_unique_call 834} vslice_dummy_var_182 := CyzDbgPrintEx(9, Tmp_351);
    Tmp_348 := strConst__li2bpl74;
    call {:si_unique_call 835} vslice_dummy_var_183 := CyzDbgPrintEx(6, Tmp_348);
    call {:si_unique_call 836} sdv_291 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_291 != 0;
    assume sdv_291 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 837} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 838} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 839} vslice_dummy_var_184 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    Tmp_353 := strConst__li2bpl3;
    call {:si_unique_call 840} vslice_dummy_var_185 := CyzDbgPrintEx(9, Tmp_353);
    call {:si_unique_call 841} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 842} CyzIRPEpilogue(extension_3);
    Tmp_344 := -1073741565;
    goto L1;

  anon35_Then:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 843} sdv_293 := corral_nondet();
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_293 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_293 != 1;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_293 == 2;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_843;
    call {:si_unique_call 844} sdv_282 := ExAllocatePoolWithTag(0, vslice_dummy_var_843, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L98;

  L98:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_844;
    call {:si_unique_call 845} sdv_284 := ExAllocatePoolWithTag(0, vslice_dummy_var_844, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L97;

  L97:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_845;
    call {:si_unique_call 846} sdv_298 := ExAllocatePoolWithTag(0, vslice_dummy_var_845, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L96;

  L96:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 847} MmLockPagableSectionByHandle(0);
    call {:si_unique_call 848} vslice_dummy_var_175 := CyzGotoPowerState(DeviceObject_5, extension_3, 1);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 849} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 850} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 851} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 852} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    Mem_T.INT4[Tmp_352] := pollIrql_4;
    call {:si_unique_call 853} sdv_KeAcquireSpinLock(0, Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    pollIrql_4 := Mem_T.INT4[Tmp_352];
    call {:si_unique_call 854} vslice_dummy_var_176 := CyzClearStats(extension_3);
    call {:si_unique_call 855} sdv_KeReleaseSpinLock(0, pollIrql_4);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 856} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    Mem_T.INT4[Tmp_352] := pollIrql_4;
    call {:si_unique_call 857} sdv_KeAcquireSpinLock(0, Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    pollIrql_4 := Mem_T.INT4[Tmp_352];
    call {:si_unique_call 858} vslice_dummy_var_177 := CyzMarkOpen(extension_3);
    call {:si_unique_call 859} sdv_KeReleaseSpinLock(0, pollIrql_4);
    call {:si_unique_call 860} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    Mem_T.INT4[Tmp_352] := pollingIrql;
    call {:si_unique_call 861} sdv_KeAcquireSpinLock(0, Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    pollingIrql := Mem_T.INT4[Tmp_352];
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc Tmp_345;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    havoc Tmp_347;
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L168;

  L168:
    call {:si_unique_call 862} sdv_KeReleaseSpinLock(0, pollingIrql);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 863} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc localStatus;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} localStatus >= 0;
    goto L179;

  L179:
    Tmp_354 := strConst__li2bpl3;
    call {:si_unique_call 864} vslice_dummy_var_186 := CyzDbgPrintEx(9, Tmp_354);
    call {:si_unique_call 865} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 866} CyzIRPEpilogue(extension_3);
    Tmp_344 := localStatus;
    goto L1;

  anon43_Then:
    assume {:partition} 0 > localStatus;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 867} sdv_ExFreePool(0);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L189;

  L189:
    call {:si_unique_call 868} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 869} vslice_dummy_var_187 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    goto L179;

  anon38_Then:
    goto L189;

  anon42_Then:
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    havoc vslice_dummy_var_846;
    havoc vslice_dummy_var_847;
    call {:si_unique_call 870} vslice_dummy_var_178 := KeSetTimerEx(0, vslice_dummy_var_846, vslice_dummy_var_847, 0);
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto L168;

  anon37_Then:
    call {:si_unique_call 871} ExReleaseFastMutex(0);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 872} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 873} vslice_dummy_var_188 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    Tmp_349 := strConst__li2bpl3;
    call {:si_unique_call 874} vslice_dummy_var_189 := CyzDbgPrintEx(9, Tmp_349);
    call {:si_unique_call 875} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 876} CyzIRPEpilogue(extension_3);
    Tmp_344 := -1073741670;
    goto L1;

  anon44_Then:
    goto L96;

  anon45_Then:
    goto L96;

  anon39_Then:
    assume {:partition} sdv_293 != 2;
    goto L96;

  anon40_Then:
    assume {:partition} sdv_293 == 1;
    goto L98;

  anon36_Then:
    assume {:partition} sdv_293 == 0;
    goto L97;
}



procedure {:origName "CyzTryToDisableTimer"} CyzTryToDisableTimer(actual_Context_18: int) returns (Tmp_355: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_355 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTryToDisableTimer"} CyzTryToDisableTimer(actual_Context_18: int) returns (Tmp_355: int)
{
  var {:scalar} Tmp_356: int;
  var {:scalar} channel: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} cancelled_1: int;
  var {:scalar} oldIrql_4: int;
  var {:scalar} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} pDispatch_6: int;
  var {:pointer} extension_4: int;
  var {:pointer} Context_18: int;
  var vslice_dummy_var_190: int;

  anon0:
    Context_18 := actual_Context_18;
    call {:si_unique_call 877} Tmp_358 := __HAVOC_malloc(256);
    call {:si_unique_call 878} Tmp_360 := __HAVOC_malloc(256);
    extension_4 := Context_18;
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    havoc pDispatch_6;
    call {:si_unique_call 879} Tmp_357 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    Mem_T.INT4[Tmp_357] := oldIrql_4;
    call {:si_unique_call 880} sdv_KeAcquireSpinLock(0, Tmp_357);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    oldIrql_4 := Mem_T.INT4[Tmp_357];
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    havoc Tmp_356;
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    havoc Tmp_358;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    channel := 0;
    goto L14;

  L14:
    call {:si_unique_call 881} channel, Tmp_359, Tmp_360 := CyzTryToDisableTimer_loop_L14(channel, Tmp_359, Tmp_360, pDispatch_6);
    goto L14_last;

  L14_last:
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_359 := channel;
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    havoc Tmp_360;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    channel := channel + 1;
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    assume false;
    return;

  anon12_Then:
    goto L15;

  L15:
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    call {:si_unique_call 882} cancelled_1 := KeCancelTimer(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} cancelled_1 != 0;
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    goto L29;

  L29:
    call {:si_unique_call 883} vslice_dummy_var_190 := KeRemoveQueueDpc(0);
    goto L19;

  L19:
    call {:si_unique_call 884} sdv_KeReleaseSpinLock(0, oldIrql_4);
    Tmp_355 := 0;
    return;

  anon11_Then:
    assume {:partition} cancelled_1 == 0;
    goto L29;

  anon10_Then:
    goto L19;

  anon9_Then:
    goto L15;
}



procedure {:origName "CyzClose"} CyzClose(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_361: int);
  modifies alloc, Mem_T.INT4, start_irql, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClose"} CyzClose(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_361: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:pointer} structPtr888d200ms: int;
  var {:pointer} structPtr888d100ms: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:scalar} flushCount: int;
  var {:scalar} sdv: int;
  var {:scalar} charTime: int;
  var {:scalar} waitAmount2: int;
  var {:scalar} pendingDPCs: int;
  var {:scalar} waitAmount1: int;
  var {:scalar} sdv_316: int;
  var {:scalar} S_9: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:scalar} tx_2: int;
  var {:scalar} d200ms: int;
  var {:scalar} tenCharDelay: int;
  var {:pointer} Tmp_366: int;
  var {:pointer} Tmp_367: int;
  var {:scalar} d100ms: int;
  var {:scalar} tx_3: int;
  var {:pointer} Tmp_368: int;
  var {:pointer} Tmp_369: int;
  var {:dopa} {:scalar} txempty: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} tx_4: int;
  var {:scalar} status_10: int;
  var {:pointer} extension_5: int;
  var {:scalar} pollIrql_5: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Tmp_372: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_848: int;
  var vslice_dummy_var_849: int;

  anon0:
    call {:si_unique_call 885} sdv := __HAVOC_malloc(20);
    call {:si_unique_call 886} charTime := __HAVOC_malloc(20);
    call {:si_unique_call 887} vslice_dummy_var_191 := __HAVOC_malloc(20);
    call {:si_unique_call 888} S_9 := __HAVOC_malloc(8);
    call {:si_unique_call 889} d200ms := __HAVOC_malloc(20);
    call {:si_unique_call 890} tenCharDelay := __HAVOC_malloc(20);
    call {:si_unique_call 891} vslice_dummy_var_192 := __HAVOC_malloc(20);
    call {:si_unique_call 892} d100ms := __HAVOC_malloc(20);
    call {:si_unique_call 893} txempty := __HAVOC_malloc(4);
    DeviceObject_6 := actual_DeviceObject_6;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 894} Tmp_362 := __HAVOC_malloc(124);
    call {:si_unique_call 895} Tmp_363 := __HAVOC_malloc(92);
    call {:si_unique_call 896} Tmp_364 := __HAVOC_malloc(76);
    call {:si_unique_call 897} Tmp_365 := __HAVOC_malloc(72);
    call {:si_unique_call 898} Tmp_366 := __HAVOC_malloc(128);
    call {:si_unique_call 899} Tmp_367 := __HAVOC_malloc(96);
    call {:si_unique_call 900} Tmp_368 := __HAVOC_malloc(52);
    call {:si_unique_call 901} Tmp_369 := __HAVOC_malloc(72);
    call {:si_unique_call 902} Tmp_370 := __HAVOC_malloc(72);
    call {:si_unique_call 903} Tmp_372 := __HAVOC_malloc(80);
    call {:si_unique_call 904} SLIC_CyzClose_entry(0);
    call {:si_unique_call 905} structPtr888d200ms := RtlConvertLongToLargeInteger(-2000000);
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    call {:si_unique_call 906} structPtr888d100ms := RtlConvertLongToLargeInteger(-1000000);
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    havoc extension_5;
    call {:si_unique_call 907} ExAcquireFastMutex(0);
    call {:si_unique_call 908} status_10 := CyzIRPPrologue(Irp_6, extension_5);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_10 != 0;
    Tmp_362 := strConst__li2bpl75;
    call {:si_unique_call 909} vslice_dummy_var_206 := CyzDbgPrintEx(3, Tmp_362);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_10 == -1073741738;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 910} sdv_ExFreePool(0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    havoc status_10;
    goto L44;

  L44:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_10 != 259;
    Tmp_369 := strConst__li2bpl3;
    call {:si_unique_call 911} vslice_dummy_var_207 := CyzDbgPrintEx(9, Tmp_369);
    call {:si_unique_call 912} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 913} CyzIRPEpilogue(extension_5);
    call {:si_unique_call 914} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[Tmp_371] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)];
    call {:si_unique_call 915} vslice_dummy_var_208 := sdv_InterlockedDecrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)] := Mem_T.INT4[Tmp_371];
    goto L52;

  L52:
    call {:si_unique_call 916} ExReleaseFastMutex(0);
    Tmp_361 := status_10;
    goto L1;

  L1:
    call {:si_unique_call 917} SLIC_CyzClose_exit(strConst__li2bpl0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} status_10 == 259;
    goto L52;

  anon31_Then:
    assume {:partition} status_10 != -1073741738;
    goto L44;

  anon29_Then:
    assume {:partition} status_10 == 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 1 > Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)];
    Tmp_366 := strConst__li2bpl76;
    call {:si_unique_call 918} vslice_dummy_var_209 := CyzDbgPrintEx(0, Tmp_366);
    Tmp_363 := strConst__li2bpl77;
    call {:si_unique_call 919} vslice_dummy_var_210 := CyzDbgPrintEx(0, Tmp_363);
    call {:si_unique_call 920} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_370 := strConst__li2bpl3;
    call {:si_unique_call 921} vslice_dummy_var_211 := CyzDbgPrintEx(9, Tmp_370);
    call {:si_unique_call 922} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 923} CyzIRPEpilogue(extension_5);
    Tmp_361 := -1073741808;
    goto L1;

  anon30_Then:
    assume {:partition} Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)] >= 1;
    Tmp_367 := strConst__li2bpl1;
    call {:si_unique_call 924} vslice_dummy_var_212 := CyzDbgPrintEx(9, Tmp_367);
    Tmp_368 := strConst__li2bpl78;
    call {:si_unique_call 925} vslice_dummy_var_213 := CyzDbgPrintEx(6, Tmp_368);
    call {:si_unique_call 926} structPtr888sdv := CyzGetCharTime(extension_5);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 927} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 928} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 929} vslice_dummy_var_193 := CyzTurnOffBreak(extension_5);
    call {:si_unique_call 930} sdv_KeReleaseSpinLock(0, pollIrql_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 931} tx_3 := corral_nondet();
    call {:si_unique_call 932} tx_4 := corral_nondet();
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc tx_2;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} tx_3 >= tx_4;
    waitAmount1 := tx_3 - tx_4;
    waitAmount2 := 0;
    goto L123;

  L123:
    flushCount := waitAmount1 + waitAmount2;
    flushCount := flushCount + 74;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    goto L127;

  L127:
    call {:si_unique_call 933} flushCount, pollIrql_5, Tmp_371, vslice_dummy_var_194, vslice_dummy_var_195 := CyzClose_loop_L127(flushCount, S_9, txempty, pollIrql_5, Tmp_371, vslice_dummy_var_194, vslice_dummy_var_195);
    goto L127_last;

  L127_last:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} flushCount != 0;
    call {:si_unique_call 934} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 935} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 936} vslice_dummy_var_194 := CyzCheckIfTxEmpty(S_9);
    call {:si_unique_call 937} sdv_KeReleaseSpinLock(0, pollIrql_5);
    assume {:nonnull} txempty != 0;
    assume txempty > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.INT4[txempty] == 0;
    call {:si_unique_call 938} vslice_dummy_var_195 := KeDelayExecutionThread(0, 0, 0);
    flushCount := flushCount - 1;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} Mem_T.INT4[txempty] != 0;
    goto L128;

  L128:
    call {:si_unique_call 939} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 940} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 941} vslice_dummy_var_196 := CyzMarkClose(extension_5);
    call {:si_unique_call 942} sdv_KeReleaseSpinLock(0, pollIrql_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 943} CyzIssueCmd(extension_5, 17, 0, 0);
    goto L153;

  L153:
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} tenCharDelay != 0;
    assume tenCharDelay > 0;
    call {:si_unique_call 944} vslice_dummy_var_214 := KeDelayExecutionThread(0, 1, 0);
    call {:si_unique_call 945} vslice_dummy_var_197 := CyzClrDTR(extension_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L167;

  L167:
    call {:si_unique_call 946} vslice_dummy_var_198 := CyzClose_loop_L167(extension_5, vslice_dummy_var_198);
    goto L167_last;

  L167_last:
    call {:si_unique_call 977} vslice_dummy_var_198 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 947} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 948} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 949} vslice_dummy_var_199 := CyzNullSynch(0);
    call {:si_unique_call 950} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto L164;

  L164:
    call {:si_unique_call 951} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 952} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 953} vslice_dummy_var_200 := CyzClrRTS(extension_5);
    call {:si_unique_call 954} sdv_KeReleaseSpinLock(0, pollIrql_5);
    call {:si_unique_call 955} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 956} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 957} vslice_dummy_var_201 := CyzDisableHw(extension_5);
    call {:si_unique_call 958} sdv_KeReleaseSpinLock(0, pollIrql_5);
    call {:si_unique_call 959} vslice_dummy_var_202 := CyzTryToDisableTimer(extension_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 960} sdv_ExFreePool(0);
    goto L203;

  L203:
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 961} vslice_dummy_var_204 := IoCancelIrp(0);
    goto L209;

  L209:
    call {:si_unique_call 962} vslice_dummy_var_203 := CyzGotoPowerState(DeviceObject_6, extension_5, 4);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_365 := strConst__li2bpl3;
    call {:si_unique_call 963} vslice_dummy_var_215 := CyzDbgPrintEx(9, Tmp_365);
    call {:si_unique_call 964} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 965} CyzIRPEpilogue(extension_5);
    call {:si_unique_call 966} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc vslice_dummy_var_848;
    Mem_T.INT4[Tmp_371] := vslice_dummy_var_848;
    call {:si_unique_call 967} sdv_316 := sdv_InterlockedDecrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    pendingDPCs := sdv_316;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} pendingDPCs != 0;
    Tmp_372 := strConst__li2bpl80;
    call {:si_unique_call 968} vslice_dummy_var_216 := CyzDbgPrintEx(4, Tmp_372);
    call {:si_unique_call 969} vslice_dummy_var_205 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L231;

  L231:
    Tmp_364 := strConst__li2bpl79;
    call {:si_unique_call 970} vslice_dummy_var_217 := CyzDbgPrintEx(4, Tmp_364);
    call {:si_unique_call 971} ExReleaseFastMutex(0);
    call {:si_unique_call 972} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc vslice_dummy_var_849;
    Mem_T.INT4[Tmp_371] := vslice_dummy_var_849;
    call {:si_unique_call 973} vslice_dummy_var_218 := sdv_InterlockedIncrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 974} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[Tmp_371] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)];
    call {:si_unique_call 975} vslice_dummy_var_219 := sdv_InterlockedDecrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)] := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 976} MmUnlockPagableImageSection(0);
    Tmp_361 := 0;
    goto L1;

  anon42_Then:
    assume {:partition} pendingDPCs == 0;
    goto L231;

  anon41_Then:
    goto L209;

  anon40_Then:
    goto L203;

  anon37_Then:
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon36_Then:
    goto L164;

  anon35_Then:
    goto L153;

  anon33_Then:
    assume {:partition} flushCount == 0;
    goto L128;

  anon39_Then:
    assume {:partition} tx_4 > tx_3;
    waitAmount1 := tx_2 - tx_4;
    waitAmount2 := tx_3;
    goto L123;
}



procedure {:origName "CyzMarkOpen"} CyzMarkOpen(actual_Context_19: int) returns (Tmp_373: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_373 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMarkOpen"} CyzMarkOpen(actual_Context_19: int) returns (Tmp_373: int)
{
  var {:pointer} extension_6: int;
  var {:pointer} Context_19: int;
  var vslice_dummy_var_220: int;

  anon0:
    Context_19 := actual_Context_19;
    extension_6 := Context_19;
    call {:si_unique_call 978} vslice_dummy_var_220 := CyzReset(extension_6);
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    Tmp_373 := 0;
    return;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_221: int;

  anon0:
    call {:si_unique_call 979} vslice_dummy_var_221 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzNullSynch"} CyzNullSynch(actual_Context_20: int) returns (Tmp_377: int);
  free ensures {:va_keep} Tmp_377 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzNullSynch"} CyzNullSynch(actual_Context_20: int) returns (Tmp_377: int)
{

  anon0:
    Tmp_377 := 0;
    return;
}



procedure {:origName "CyzGetCharTime"} CyzGetCharTime(actual_Extension_20: int) returns (SD3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetCharTime"} CyzGetCharTime(actual_Extension_20: int) returns (SD3: int)
{
  var {:scalar} dataSize: int;
  var {:scalar} Tmp_3: int;
  var {:scalar} charTime_1: int;
  var {:scalar} Tmp_379: int;
  var {:scalar} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:scalar} bitTime: int;
  var {:scalar} paritySize: int;
  var {:scalar} Tmp_383: int;
  var {:scalar} tmp: int;
  var {:scalar} stopSize: int;
  var {:pointer} Extension_20: int;

  anon0:
    call {:si_unique_call 980} Tmp_3 := __HAVOC_malloc(20);
    call {:si_unique_call 981} tmp := __HAVOC_malloc(20);
    Extension_20 := actual_Extension_20;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_383;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Tmp_383 == 1;
    dataSize := 5;
    goto L13;

  L13:
    paritySize := 1;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L16;

  L16:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_382;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_382 == 16;
    stopSize := 1;
    goto L20;

  L20:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc bitTime;
    charTime_1 := bitTime + (dataSize + paritySize + stopSize) * bitTime;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    SD3 := Tmp_3;
    return;

  anon13_Then:
    assume {:partition} Tmp_382 != 16;
    stopSize := 2;
    goto L20;

  anon12_Then:
    paritySize := 0;
    goto L16;

  anon11_Then:
    assume {:partition} Tmp_383 != 1;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_381;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Tmp_381 == 2;
    dataSize := 6;
    goto L13;

  anon14_Then:
    assume {:partition} Tmp_381 != 2;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_379;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_379 == 4;
    dataSize := 7;
    goto L13;

  anon15_Then:
    assume {:partition} Tmp_379 != 4;
    dataSize := 8;
    goto L13;
}



procedure {:origName "CyzDisableHw"} CyzDisableHw(actual_Context_21: int) returns (Tmp_384: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_384 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDisableHw"} CyzDisableHw(actual_Context_21: int) returns (Tmp_384: int)
{
  var {:pointer} extension_7: int;
  var {:pointer} Context_21: int;

  anon0:
    Context_21 := actual_Context_21;
    extension_7 := Context_21;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 982} CyzIssueCmd(extension_7, 2, 0, 0);
    call {:si_unique_call 983} CyzIssueCmd(extension_7, 1, 0, 0);
    Tmp_384 := 0;
    return;
}



procedure {:origName "CyzMarkClose"} CyzMarkClose(actual_Context_22: int) returns (Tmp_386: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_386 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMarkClose"} CyzMarkClose(actual_Context_22: int) returns (Tmp_386: int)
{
  var {:pointer} extension_8: int;
  var {:pointer} Context_22: int;

  anon0:
    Context_22 := actual_Context_22;
    extension_8 := Context_22;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    call {:si_unique_call 984} CyzIssueCmd(extension_8, 2, 0, 0);
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    Tmp_386 := 0;
    return;
}



procedure {:origName "CyzCleanup"} CyzCleanup(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_388: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, start_irql, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCleanup"} CyzCleanup(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_388: int)
{
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:scalar} status_11: int;
  var {:pointer} extension_9: int;
  var {:pointer} Tmp_391: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;

  anon0:
    DeviceObject_7 := actual_DeviceObject_7;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 985} Tmp_389 := __HAVOC_malloc(72);
    call {:si_unique_call 986} Tmp_390 := __HAVOC_malloc(96);
    call {:si_unique_call 987} Tmp_391 := __HAVOC_malloc(72);
    call {:si_unique_call 988} SLIC_CyzCleanup_entry(0);
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc extension_9;
    call {:si_unique_call 989} sdv_do_paged_code_check();
    call {:si_unique_call 990} status_11 := CyzIRPPrologue(Irp_7, extension_9);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_11 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_11 == -1073741738;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc status_11;
    goto L18;

  L18:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_11 != 259;
    Tmp_391 := strConst__li2bpl3;
    call {:si_unique_call 991} vslice_dummy_var_222 := CyzDbgPrintEx(9, Tmp_391);
    call {:si_unique_call 992} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 993} CyzIRPEpilogue(extension_9);
    goto L21;

  L21:
    Tmp_388 := status_11;
    goto L1;

  L1:
    call {:si_unique_call 994} SLIC_CyzCleanup_exit(strConst__li2bpl0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} status_11 == 259;
    goto L21;

  anon10_Then:
    assume {:partition} status_11 != -1073741738;
    goto L18;

  anon9_Then:
    assume {:partition} status_11 == 0;
    Tmp_390 := strConst__li2bpl1;
    call {:si_unique_call 995} vslice_dummy_var_223 := CyzDbgPrintEx(9, Tmp_390);
    call {:si_unique_call 996} CyzKillPendingIrps(DeviceObject_7);
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Tmp_389 := strConst__li2bpl3;
    call {:si_unique_call 997} vslice_dummy_var_224 := CyzDbgPrintEx(9, Tmp_389);
    call {:si_unique_call 998} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 999} CyzIRPEpilogue(extension_9);
    Tmp_388 := 0;
    goto L1;
}



procedure {:origName "CyzGetPortInfo"} CyzGetPortInfo(actual_PDevObj_10: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_393: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_393 == -1073741488 || Tmp_393 == -1073741670 || Tmp_393 == 0 || Tmp_393 == -1073741811 || Tmp_393 == -1073741808 || Tmp_393 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetPortInfo"} CyzGetPortInfo(actual_PDevObj_10: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_393: int)
{
  var {:scalar} i_1: int;
  var {:pointer} pPartialResourceList: int;
  var {:pointer} pFullTrResourceDesc: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} count: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} Tmp_399: int;
  var {:pointer} keyHandle: int;
  var {:scalar} Tmp_400: int;
  var {:pointer} Tmp_401: int;
  var {:scalar} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} pPartialTrResourceDesc: int;
  var {:scalar} Tmp_404: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} pDevExt_10: int;
  var {:scalar} Tmp_406: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:scalar} Tmp_411: int;
  var {:pointer} Tmp_412: int;
  var {:dopa} {:scalar} firmwareVersion: int;
  var {:pointer} Tmp_413: int;
  var {:pointer} FwVersionBuffer: int;
  var {:scalar} Tmp_414: int;
  var {:scalar} foundIt: int;
  var {:pointer} Tmp_415: int;
  var {:scalar} Tmp_416: int;
  var {:scalar} Tmp_417: int;
  var {:pointer} pFullResourceDesc: int;
  var {:pointer} Tmp_418: int;
  var {:scalar} Tmp_419: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} Tmp_421: int;
  var {:scalar} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} FwVersion: int;
  var {:pointer} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:pointer} pPartialTrResourceList: int;
  var {:scalar} Tmp_430: int;
  var {:scalar} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} pPartialResourceDesc: int;
  var {:pointer} Tmp_433: int;
  var {:pointer} PDevObj_10: int;
  var {:pointer} PResList: int;
  var {:pointer} PTrResList: int;
  var {:pointer} PConfig_1: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_850: int;
  var vslice_dummy_var_851: int;
  var vslice_dummy_var_852: int;
  var vslice_dummy_var_853: int;
  var vslice_dummy_var_854: int;
  var vslice_dummy_var_855: int;
  var vslice_dummy_var_856: int;
  var vslice_dummy_var_857: int;
  var vslice_dummy_var_858: int;
  var vslice_dummy_var_859: int;
  var vslice_dummy_var_860: int;
  var vslice_dummy_var_861: int;
  var vslice_dummy_var_862: int;
  var vslice_dummy_var_863: int;
  var vslice_dummy_var_864: int;
  var vslice_dummy_var_865: int;
  var vslice_dummy_var_866: int;
  var vslice_dummy_var_867: int;

  anon0:
    call {:si_unique_call 1000} Tmp_399 := __HAVOC_malloc(20);
    call {:si_unique_call 1001} firmwareVersion := __HAVOC_malloc(4);
    call {:si_unique_call 1002} Tmp_414 := __HAVOC_malloc(20);
    call {:si_unique_call 1003} Tmp_416 := __HAVOC_malloc(20);
    call {:si_unique_call 1004} Tmp_419 := __HAVOC_malloc(20);
    call {:si_unique_call 1005} Tmp_421 := __HAVOC_malloc(20);
    call {:si_unique_call 1006} FwVersion := __HAVOC_malloc(12);
    call {:si_unique_call 1007} Tmp_430 := __HAVOC_malloc(20);
    PDevObj_10 := actual_PDevObj_10;
    PResList := actual_PResList;
    PTrResList := actual_PTrResList;
    PConfig_1 := actual_PConfig_1;
    call {:si_unique_call 1008} Tmp_394 := __HAVOC_malloc(92);
    call {:si_unique_call 1009} Tmp_395 := __HAVOC_malloc(64);
    call {:si_unique_call 1010} Tmp_396 := __HAVOC_malloc(104);
    call {:si_unique_call 1011} Tmp_398 := __HAVOC_malloc(264);
    call {:si_unique_call 1012} Tmp_401 := __HAVOC_malloc(104);
    call {:si_unique_call 1013} Tmp_403 := __HAVOC_malloc(96);
    call {:si_unique_call 1014} Tmp_405 := __HAVOC_malloc(208);
    call {:si_unique_call 1015} Tmp_408 := __HAVOC_malloc(232);
    call {:si_unique_call 1016} Tmp_409 := __HAVOC_malloc(108);
    call {:si_unique_call 1017} Tmp_410 := __HAVOC_malloc(56);
    call {:si_unique_call 1018} Tmp_412 := __HAVOC_malloc(92);
    call {:si_unique_call 1019} Tmp_413 := __HAVOC_malloc(112);
    call {:si_unique_call 1020} FwVersionBuffer := __HAVOC_malloc(40);
    call {:si_unique_call 1021} Tmp_415 := __HAVOC_malloc(112);
    call {:si_unique_call 1022} Tmp_418 := __HAVOC_malloc(264);
    call {:si_unique_call 1023} Tmp_420 := __HAVOC_malloc(96);
    call {:si_unique_call 1024} Tmp_423 := __HAVOC_malloc(84);
    call {:si_unique_call 1025} Tmp_424 := __HAVOC_malloc(100);
    call {:si_unique_call 1026} Tmp_425 := __HAVOC_malloc(40);
    call {:si_unique_call 1027} Tmp_426 := __HAVOC_malloc(80);
    call {:si_unique_call 1028} Tmp_427 := __HAVOC_malloc(120);
    call {:si_unique_call 1029} Tmp_428 := __HAVOC_malloc(96);
    call {:si_unique_call 1030} Tmp_429 := __HAVOC_malloc(152);
    call {:si_unique_call 1031} Tmp_433 := __HAVOC_malloc(100);
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    havoc pDevExt_10;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    status_12 := -1073741822;
    pFullResourceDesc := 0;
    pFullTrResourceDesc := 0;
    call {:si_unique_call 1032} sdv_do_paged_code_check();
    Tmp_433 := strConst__li2bpl81;
    call {:si_unique_call 1033} vslice_dummy_var_227 := CyzDbgPrintEx(11, Tmp_433);
    Tmp_428 := strConst__li2bpl82;
    call {:si_unique_call 1034} vslice_dummy_var_228 := CyzDbgPrintEx(12, Tmp_428);
    Tmp_409 := strConst__li2bpl83;
    call {:si_unique_call 1035} vslice_dummy_var_229 := CyzDbgPrintEx(12, Tmp_409);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} PResList != 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} PTrResList != 0;
    assume {:nonnull} PResList != 0;
    assume PResList > 0;
    havoc Tmp_398;
    pFullResourceDesc := Tmp_398;
    assume {:nonnull} PTrResList != 0;
    assume PTrResList > 0;
    havoc Tmp_418;
    pFullTrResourceDesc := Tmp_418;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pFullResourceDesc != 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    pPartialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullResourceDesc);
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc pPartialResourceDesc;
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    i_1 := 0;
    goto L53;

  L53:
    call {:si_unique_call 1036} i_1 := CyzGetPortInfo_loop_L53(i_1, count, pPartialResourceDesc, PConfig_1);
    goto L53_last;

  L53_last:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L62;

  L62:
    i_1 := i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon48_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon46_Then:
    assume {:partition} i_1 >= count;
    goto L46;

  L46:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} pFullTrResourceDesc != 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    pPartialTrResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullTrResourceDesc);
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc pPartialTrResourceDesc;
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    i_1 := 0;
    goto L73;

  L73:
    call {:si_unique_call 1037} i_1 := CyzGetPortInfo_loop_L73(i_1, count, pPartialTrResourceDesc, PConfig_1);
    goto L73_last;

  L73_last:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L81;

  L81:
    i_1 := i_1 + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon50_Then:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L81;

  anon51_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L81;

  anon49_Then:
    assume {:partition} i_1 >= count;
    goto L66;

  L66:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] := 0;
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    Mem_T.INT4[firmwareVersion] := 0;
    call {:si_unique_call 1038} status_12 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_12 >= 0;
    Tmp_425 := strConst__li2bpl85;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 1039} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_425, 20, PortIndex__CONFIG_DATA(PConfig_1), 4);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_12 >= 0;
    goto L99;

  L99:
    Tmp_395 := strConst__li2bpl86;
    call {:si_unique_call 1040} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_395, 32, firmwareVersion, 4);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_12 >= 0;
    goto L105;

  L105:
    Tmp_410 := strConst__li2bpl87;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 1041} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_410, 28, WriteComplete__CONFIG_DATA(PConfig_1), 4);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_12 >= 0;
    goto L111;

  L111:
    call {:si_unique_call 1042} vslice_dummy_var_225 := ZwClose(0);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 803 > Mem_T.INT4[firmwareVersion];
    call {:si_unique_call 1043} RtlInitUnicodeString(FwVersion, 0);
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    call {:si_unique_call 1044} vslice_dummy_var_230 := RtlIntegerToUnicodeString(803, 16, 0);
    Tmp_412 := strConst__li2bpl88;
    call {:si_unique_call 1045} vslice_dummy_var_231 := CyzDbgPrintEx(14, Tmp_412);
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_850;
    havoc vslice_dummy_var_851;
    havoc vslice_dummy_var_852;
    call {:si_unique_call 1046} CyzLogError(vslice_dummy_var_850, 0, vslice_dummy_var_851, Tmp_416, 0, 0, 0, 0, status_12, -1073475530, Tmp_411, vslice_dummy_var_852, 0, 0);
    status_12 := -1073741488;
    goto L140;

  L140:
    Tmp_393 := status_12;
    goto L1;

  L1:
    return;

  anon58_Then:
    assume {:partition} Mem_T.INT4[firmwareVersion] >= 803;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] >= 64;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_422;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_853;
    havoc vslice_dummy_var_854;
    havoc vslice_dummy_var_855;
    call {:si_unique_call 1047} CyzLogError(vslice_dummy_var_853, 0, vslice_dummy_var_854, Tmp_419, 0, 0, 0, Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)], 0, -1073475563, Tmp_422, vslice_dummy_var_855, 0, 0);
    Tmp_424 := strConst__li2bpl89;
    call {:si_unique_call 1048} vslice_dummy_var_232 := CyzDbgPrintEx(14, Tmp_424);
    status_12 := -1073741670;
    goto L140;

  anon59_Then:
    assume {:partition} 64 > Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)];
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_431;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_397 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_856;
    havoc vslice_dummy_var_857;
    havoc vslice_dummy_var_858;
    call {:si_unique_call 1049} CyzLogError(vslice_dummy_var_856, 0, vslice_dummy_var_857, Tmp_414, 0, 0, 0, Tmp_397, 0, -1073475562, Tmp_431, vslice_dummy_var_858, 0, 0);
    Tmp_423 := strConst__li2bpl90;
    call {:si_unique_call 1050} vslice_dummy_var_233 := CyzDbgPrintEx(14, Tmp_423);
    status_12 := -1073741670;
    goto L140;

  anon61_Then:
    call {:si_unique_call 1051} vslice_dummy_var_226 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant232, 0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} foundIt == 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_432;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_406 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_859;
    havoc vslice_dummy_var_860;
    havoc vslice_dummy_var_861;
    call {:si_unique_call 1052} CyzLogError(vslice_dummy_var_859, 0, vslice_dummy_var_860, Tmp_421, 0, 0, 0, Tmp_406, 0, -1073475561, Tmp_432, vslice_dummy_var_861, 0, 0);
    Tmp_408 := strConst__li2bpl91;
    call {:si_unique_call 1053} vslice_dummy_var_241 := CyzDbgPrintEx(14, Tmp_408);
    status_12 := -1073741670;
    goto L140;

  anon62_Then:
    assume {:partition} foundIt != 0;
    goto L152;

  L152:
    status_12 := 0;
    Tmp_415 := strConst__li2bpl100;
    call {:si_unique_call 1054} vslice_dummy_var_234 := CyzDbgPrintEx(4, Tmp_415);
    Tmp_401 := strConst__li2bpl92;
    call {:si_unique_call 1055} vslice_dummy_var_235 := CyzDbgPrintEx(4, Tmp_401);
    Tmp_426 := strConst__li2bpl93;
    call {:si_unique_call 1056} vslice_dummy_var_236 := CyzDbgPrintEx(4, Tmp_426);
    Tmp_403 := strConst__li2bpl94;
    call {:si_unique_call 1057} vslice_dummy_var_237 := CyzDbgPrintEx(4, Tmp_403);
    Tmp_427 := strConst__li2bpl95;
    call {:si_unique_call 1058} vslice_dummy_var_238 := CyzDbgPrintEx(4, Tmp_427);
    Tmp_413 := strConst__li2bpl96;
    call {:si_unique_call 1059} vslice_dummy_var_239 := CyzDbgPrintEx(4, Tmp_413);
    Tmp_394 := strConst__li2bpl97;
    call {:si_unique_call 1060} vslice_dummy_var_240 := CyzDbgPrintEx(4, Tmp_394);
    goto L140;

  anon60_Then:
    goto L152;

  anon57_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_400;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_417 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_862;
    havoc vslice_dummy_var_863;
    havoc vslice_dummy_var_864;
    call {:si_unique_call 1061} CyzLogError(vslice_dummy_var_862, 0, vslice_dummy_var_863, Tmp_399, 0, 0, 0, Tmp_417, 0, -1073475567, Tmp_400, vslice_dummy_var_864, 0, 0);
    Tmp_420 := strConst__li2bpl98;
    call {:si_unique_call 1062} vslice_dummy_var_242 := CyzDbgPrintEx(14, Tmp_420);
    status_12 := -1073741670;
    goto L140;

  anon56_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_402;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_404 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_865;
    havoc vslice_dummy_var_866;
    havoc vslice_dummy_var_867;
    call {:si_unique_call 1063} CyzLogError(vslice_dummy_var_865, 0, vslice_dummy_var_866, Tmp_430, 0, 0, 0, Tmp_404, 0, -1073475568, Tmp_402, vslice_dummy_var_867, 0, 0);
    Tmp_396 := strConst__li2bpl99;
    call {:si_unique_call 1064} vslice_dummy_var_243 := CyzDbgPrintEx(14, Tmp_396);
    status_12 := -1073741670;
    goto L140;

  anon55_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[WriteComplete__CONFIG_DATA(PConfig_1)] := 0;
    goto L111;

  anon54_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    Mem_T.INT4[firmwareVersion] := 0;
    Tmp_405 := strConst__li2bpl101;
    call {:si_unique_call 1065} vslice_dummy_var_244 := CyzDbgPrintEx(14, Tmp_405);
    goto L105;

  anon53_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] := -1;
    goto L99;

  anon52_Then:
    assume {:partition} 0 > status_12;
    Tmp_429 := strConst__li2bpl84;
    call {:si_unique_call 1066} vslice_dummy_var_245 := CyzDbgPrintEx(14, Tmp_429);
    goto L140;

  anon45_Then:
    assume {:partition} pFullTrResourceDesc == 0;
    goto L66;

  anon63_Then:
    assume {:partition} pFullResourceDesc == 0;
    goto L46;

  anon44_Then:
    assume {:partition} PTrResList == 0;
    goto L41;

  L41:
    Tmp_393 := -1073741670;
    goto L1;

  anon43_Then:
    assume {:partition} PResList == 0;
    goto L41;
}



procedure {:origName "CyzSyncCompletion"} CyzSyncCompletion(actual_DeviceObject_8: int, actual_Irp_8: int, actual_CyzSyncEvent: int) returns (Tmp_434: int);
  free ensures {:va_keep} Tmp_434 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSyncCompletion"} CyzSyncCompletion(actual_DeviceObject_8: int, actual_Irp_8: int, actual_CyzSyncEvent: int) returns (Tmp_434: int)
{
  var {:pointer} CyzSyncEvent_1: int;
  var {:pointer} CyzSyncEvent: int;
  var vslice_dummy_var_246: int;

  anon0:
    CyzSyncEvent := actual_CyzSyncEvent;
    CyzSyncEvent_1 := CyzSyncEvent;
    call {:si_unique_call 1067} vslice_dummy_var_246 := KeSetEvent(CyzSyncEvent_1, 0, 0);
    Tmp_434 := -1073741802;
    return;
}



procedure {:origName "CyzFinishStartDevice"} CyzFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_436: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} Tmp_436 == -1073741488 || Tmp_436 == -1073741670 || Tmp_436 == 0 || Tmp_436 == -1073741811 || Tmp_436 == -1073741808 || Tmp_436 == -1073741823 || Tmp_436 == -1073741584 || Tmp_436 == 259 || Tmp_436 == -1073741810 || Tmp_436 == -1073741709 || Tmp_436 == 5 || Tmp_436 == -1073741789 || Tmp_436 == -1073741772 || Tmp_436 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFinishStartDevice"} CyzFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_436: int)
{
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:dopa} {:scalar} powerPolicy: int;
  var {:pointer} pDevExt_11: int;
  var {:pointer} pnpKey: int;
  var {:pointer} pConfig: int;
  var {:pointer} sdv_377: int;
  var {:pointer} sdv_379: int;
  var {:pointer} Tmp_440: int;
  var {:pointer} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:scalar} Tmp_444: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} status_13: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} countSoFar: int;
  var {:scalar} pollIrql_6: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} PDevObj_11: int;
  var {:pointer} PResList_1: int;
  var {:pointer} PTrResList_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_868: int;
  var vslice_dummy_var_869: int;
  var vslice_dummy_var_870: int;
  var vslice_dummy_var_871: int;

  anon0:
    call {:si_unique_call 1068} powerPolicy := __HAVOC_malloc(4);
    call {:si_unique_call 1069} Tmp_444 := __HAVOC_malloc(20);
    call {:si_unique_call 1070} Tmp_446 := __HAVOC_malloc(20);
    PDevObj_11 := actual_PDevObj_11;
    PResList_1 := actual_PResList_1;
    PTrResList_1 := actual_PTrResList_1;
    call {:si_unique_call 1071} Tmp_437 := __HAVOC_malloc(168);
    call {:si_unique_call 1072} Tmp_438 := __HAVOC_malloc(272);
    call {:si_unique_call 1073} Tmp_439 := __HAVOC_malloc(120);
    call {:si_unique_call 1074} Tmp_440 := __HAVOC_malloc(144);
    call {:si_unique_call 1075} Tmp_441 := __HAVOC_malloc(100);
    call {:si_unique_call 1076} Tmp_447 := __HAVOC_malloc(104);
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc pDevExt_11;
    call {:si_unique_call 1077} sdv_do_paged_code_check();
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 2) != 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 1) != 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1078} CyzSetDeviceFlags(pDevExt_11, Flags__CYZ_DEVICE_EXTENSION(pDevExt_11), 2, 0);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L28;

  L28:
    call {:si_unique_call 1079} sdv_379 := ExAllocatePoolWithTag(1, 80, -797279933);
    pConfig := sdv_379;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1080} sdv_RtlZeroMemory(0, 80);
    call {:si_unique_call 1081} status_13 := CyzGetPortInfo(PDevObj_11, PResList_1, PTrResList_1, pConfig);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_13 < 0;
    goto L53;

  L53:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  L59:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_445 := 1;
    goto L70;

  L70:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  L79:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  L85:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_868;
    call {:si_unique_call 1082} boogieTmp := CyzReportMaxBaudRate(vslice_dummy_var_868);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1083} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 1084} sdv_377 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_377 != 0;
    assume sdv_377 > 0;
    countSoFar := SerialCount__CONFIGURATION_INFORMATION(sdv_377);
    assume {:nonnull} countSoFar != 0;
    assume countSoFar > 0;
    Mem_T.INT4[countSoFar] := Mem_T.INT4[countSoFar] + 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1085} vslice_dummy_var_253 := IoWMIRegistrationControl(0, 1);
    goto L113;

  L113:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 1086} CyzUnstallIrps(pDevExt_11);
    goto L114;

  L114:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1087} CyzSetDeviceFlags(pDevExt_11, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_11), -1, 0);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1088} CyzSetDeviceFlags(pDevExt_11, Flags__CYZ_DEVICE_EXTENSION(pDevExt_11), 1, 1);
    goto L124;

  L124:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1089} sdv_ExFreePool(0);
    goto L125;

  L125:
    Tmp_439 := strConst__li2bpl103;
    call {:si_unique_call 1090} vslice_dummy_var_252 := CyzDbgPrintEx(11, Tmp_439);
    Tmp_436 := status_13;
    return;

  anon69_Then:
    assume {:partition} pConfig == 0;
    goto L125;

  anon68_Then:
    goto L114;

  anon67_Then:
    goto L113;

  anon83_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  anon84_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  anon66_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  anon79_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon80_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon81_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon82_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon87_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon65_Then:
    Tmp_445 := 0;
    goto L70;

  anon76_Then:
    goto L59;

  anon77_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  anon78_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  anon86_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  anon64_Then:
    assume {:partition} 0 > status_13;
    Tmp_447 := strConst__li2bpl102;
    call {:si_unique_call 1091} vslice_dummy_var_254 := CyzDbgPrintEx(4, Tmp_447);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 1092} CyzKillPendingIrps(PDevObj_11);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1093} CyzSetDeviceFlags(pDevExt_11, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_11), 1, 1);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1094} CyzSetDeviceFlags(pDevExt_11, Flags__CYZ_DEVICE_EXTENSION(pDevExt_11), 1, 0);
    goto L124;

  anon70_Then:
    goto L124;

  anon61_Then:
    assume {:partition} 0 <= status_13;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_869;
    call {:si_unique_call 1095} status_13 := CyzGotoPowerState(vslice_dummy_var_869, pDevExt_11, 1);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_13 < 0;
    goto L53;

  anon63_Then:
    assume {:partition} 0 <= status_13;
    goto L44;

  L44:
    call {:si_unique_call 1096} status_13 := CyzFindInitController(PDevObj_11, pConfig);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1097} CyzAddToAllDevs(AllDevObjs__CYZ_DEVICE_EXTENSION(pDevExt_11));
    call {:si_unique_call 1098} Tmp_443 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    Mem_T.INT4[Tmp_443] := pollIrql_6;
    call {:si_unique_call 1099} sdv_KeAcquireSpinLock(0, Tmp_443);
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    pollIrql_6 := Mem_T.INT4[Tmp_443];
    call {:si_unique_call 1100} vslice_dummy_var_247 := CyzReset(pDevExt_11);
    call {:si_unique_call 1101} vslice_dummy_var_248 := CyzMarkClose(pDevExt_11);
    call {:si_unique_call 1102} vslice_dummy_var_249 := CyzClrRTS(pDevExt_11);
    call {:si_unique_call 1103} vslice_dummy_var_250 := CyzClrDTR(pDevExt_11);
    call {:si_unique_call 1104} sdv_KeReleaseSpinLock(0, pollIrql_6);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_437 := strConst__li2bpl104;
    call {:si_unique_call 1105} vslice_dummy_var_251 := CyzDbgPrintEx(12, Tmp_437);
    goto L53;

  anon72_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    havoc vslice_dummy_var_870;
    call {:si_unique_call 1106} status_13 := CyzDoExternalNaming(pDevExt_11, vslice_dummy_var_870);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} status_13 < 0;
    Tmp_440 := strConst__li2bpl105;
    call {:si_unique_call 1107} vslice_dummy_var_255 := CyzDbgPrintEx(14, Tmp_440);
    status_13 := 0;
    goto L53;

  anon73_Then:
    assume {:partition} 0 <= status_13;
    goto L53;

  anon71_Then:
    assume {:partition} 0 > status_13;
    goto L53;

  anon62_Then:
    goto L44;

  anon85_Then:
    assume {:partition} pConfig == 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_871;
    call {:si_unique_call 1108} CyzLogError(vslice_dummy_var_871, 0, Tmp_444, Tmp_446, 0, 0, 0, 31, 0, -1073475576, 0, 0, 0, 0);
    Tmp_438 := strConst__li2bpl106;
    call {:si_unique_call 1109} vslice_dummy_var_256 := CyzDbgPrintEx(14, Tmp_438);
    status_13 := -1073741670;
    goto L53;

  anon60_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 1) == 0;
    goto L18;

  L18:
    call {:si_unique_call 1110} status_13 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    Mem_T.INT4[powerPolicy] := 0;
    Tmp_441 := strConst__li2bpl107;
    call {:si_unique_call 1111} vslice_dummy_var_257 := CyzGetRegistryKeyValue(pnpKey, Tmp_441, 50, powerPolicy, 4);
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} Mem_T.INT4[powerPolicy] != 0;
    Tmp_448 := 0;
    goto L222;

  L222:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1112} vslice_dummy_var_258 := ZwClose(0);
    goto L28;

  anon75_Then:
    assume {:partition} Mem_T.INT4[powerPolicy] == 0;
    Tmp_448 := 1;
    goto L222;

  anon74_Then:
    assume {:partition} 0 > status_13;
    goto L28;

  anon59_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 2) == 0;
    goto L18;
}



procedure {:origName "CyzUndoExternalNaming"} CyzUndoExternalNaming(actual_Extension_21: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUndoExternalNaming"} CyzUndoExternalNaming(actual_Extension_21: int)
{
  var {:pointer} Tmp_449: int;
  var {:pointer} keyHandle_1: int;
  var {:pointer} pRegName: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} symLinkName: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_458: int;
  var {:scalar} Tmp_459: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} Extension_21: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_872: int;
  var vslice_dummy_var_873: int;
  var vslice_dummy_var_874: int;
  var vslice_dummy_var_875: int;

  anon0:
    call {:si_unique_call 1113} vslice_dummy_var_259 := __HAVOC_malloc(4);
    call {:si_unique_call 1114} pRegName := __HAVOC_malloc(4);
    call {:si_unique_call 1115} symLinkName := __HAVOC_malloc(12);
    call {:si_unique_call 1116} Tmp_458 := __HAVOC_malloc(20);
    Extension_21 := actual_Extension_21;
    call {:si_unique_call 1117} Tmp_449 := __HAVOC_malloc(76);
    call {:si_unique_call 1118} Tmp_455 := __HAVOC_malloc(132);
    call {:si_unique_call 1119} vslice_dummy_var_262 := __HAVOC_malloc(44);
    call {:si_unique_call 1120} Tmp_460 := __HAVOC_malloc(224);
    call {:si_unique_call 1121} sdv_do_paged_code_check();
    Tmp_460 := strConst__li2bpl108;
    call {:si_unique_call 1122} vslice_dummy_var_263 := CyzDbgPrintEx(6, Tmp_460);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(Extension_21)] == 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 1123} status_14 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1124} sdv_ExFreePool(0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L17;

  L17:
    call {:si_unique_call 1125} status_14 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_14 == 0;
    call {:si_unique_call 1126} RtlInitUnicodeString(symLinkName, 0);
    call {:si_unique_call 1127} status_14 := CyzReadSymName(Extension_21, keyHandle_1, symLinkName, pRegName);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_14 != 0;
    goto L43;

  L43:
    call {:si_unique_call 1128} vslice_dummy_var_260 := ZwClose(0);
    goto L14;

  L14:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1129} sdv_ExFreePool(0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1130} status_14 := RtlDeleteRegistryValue(4, 0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_14 < 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_451;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_456;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    havoc vslice_dummy_var_872;
    havoc vslice_dummy_var_873;
    havoc vslice_dummy_var_874;
    havoc vslice_dummy_var_875;
    call {:si_unique_call 1131} CyzLogError(vslice_dummy_var_872, vslice_dummy_var_873, vslice_dummy_var_874, Tmp_458, 0, 0, 0, Tmp_459, status_14, 266246, Tmp_451, vslice_dummy_var_875, 0, 0);
    Tmp_455 := strConst__li2bpl111;
    call {:si_unique_call 1132} vslice_dummy_var_264 := CyzDbgPrintEx(14, Tmp_455);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} 0 <= status_14;
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L1;

  anon23_Then:
    goto L55;

  anon27_Then:
    assume {:partition} status_14 == 0;
    Tmp_449 := strConst__li2bpl109;
    call {:si_unique_call 1133} vslice_dummy_var_265 := CyzDbgPrintEx(4, Tmp_449);
    call {:si_unique_call 1134} vslice_dummy_var_261 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 1135} sdv_ExFreePool(0);
    call {:si_unique_call 1136} sdv_ExFreePool(0);
    goto L43;

  anon26_Then:
    assume {:partition} status_14 != 0;
    goto L14;

  anon25_Then:
    goto L17;

  anon24_Then:
    goto L14;

  anon22_Then:
    goto L14;

  anon21_Then:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(Extension_21)] != 0;
    goto L1;
}



procedure {:origName "CyzReportMaxBaudRate"} CyzReportMaxBaudRate(actual_Bauds: int) returns (Tmp_462: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_462 == 131072 || Tmp_462 == 115200 || Tmp_462 == 57344 || Tmp_462 == 57600 || Tmp_462 == 38400 || Tmp_462 == 19200 || Tmp_462 == 14400 || Tmp_462 == 9600 || Tmp_462 == 7200 || Tmp_462 == 4800 || Tmp_462 == 2400 || Tmp_462 == 1800 || Tmp_462 == 1200 || Tmp_462 == 600 || Tmp_462 == 300 || Tmp_462 == 150 || Tmp_462 == 135 || Tmp_462 == 110 || Tmp_462 == 75 || Tmp_462 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReportMaxBaudRate"} CyzReportMaxBaudRate(actual_Bauds: int) returns (Tmp_462: int)
{
  var {:scalar} Bauds: int;

  anon0:
    Bauds := actual_Bauds;
    call {:si_unique_call 1137} sdv_do_paged_code_check();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Bauds, 65536) != 0;
    Tmp_462 := 131072;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} BAND(Bauds, 65536) == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(Bauds, 131072) != 0;
    Tmp_462 := 115200;
    goto L1;

  anon40_Then:
    assume {:partition} BAND(Bauds, 131072) == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Bauds, 32768) != 0;
    Tmp_462 := 57344;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(Bauds, 32768) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Bauds, 262144) != 0;
    Tmp_462 := 57600;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(Bauds, 262144) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(Bauds, 16384) != 0;
    Tmp_462 := 38400;
    goto L1;

  anon43_Then:
    assume {:partition} BAND(Bauds, 16384) == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Bauds, 8192) != 0;
    Tmp_462 := 19200;
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Bauds, 8192) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Bauds, 4096) != 0;
    Tmp_462 := 14400;
    goto L1;

  anon45_Then:
    assume {:partition} BAND(Bauds, 4096) == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Bauds, 2048) != 0;
    Tmp_462 := 9600;
    goto L1;

  anon46_Then:
    assume {:partition} BAND(Bauds, 2048) == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Bauds, 1024) != 0;
    Tmp_462 := 7200;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Bauds, 1024) == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Bauds, 512) != 0;
    Tmp_462 := 4800;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Bauds, 512) == 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Bauds, 256) != 0;
    Tmp_462 := 2400;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(Bauds, 256) == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Bauds, 128) != 0;
    Tmp_462 := 1800;
    goto L1;

  anon50_Then:
    assume {:partition} BAND(Bauds, 128) == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Bauds, 64) != 0;
    Tmp_462 := 1200;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(Bauds, 64) == 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Bauds, 32) != 0;
    Tmp_462 := 600;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Bauds, 32) == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Bauds, 16) != 0;
    Tmp_462 := 300;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(Bauds, 16) == 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(Bauds, 8) != 0;
    Tmp_462 := 150;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(Bauds, 8) == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(Bauds, 4) != 0;
    Tmp_462 := 135;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(Bauds, 4) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(Bauds, 2) != 0;
    Tmp_462 := 110;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(Bauds, 2) == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Bauds, 1) != 0;
    Tmp_462 := 75;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(Bauds, 1) == 0;
    Tmp_462 := 0;
    goto L1;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_266: int;

  anon0:
    call {:si_unique_call 1138} vslice_dummy_var_266 := __HAVOC_malloc(4);
    assume currentInstance_sdv_static_local_variable_117 == 0;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyzPnpDispatch"} CyzPnpDispatch(actual_PDevObj_12: int, actual_PIrp_2: int) returns (Tmp_466: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, start_irql, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPnpDispatch"} CyzPnpDispatch(actual_PDevObj_12: int, actual_PIrp_2: int) returns (Tmp_466: int)
{
  var {:pointer} sdv_399: int;
  var {:scalar} pIdBuf: int;
  var {:pointer} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:scalar} sdv_404: int;
  var {:scalar} gotMemory: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} pResList: int;
  var {:dopa} {:scalar} portIndex: int;
  var {:pointer} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:pointer} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} pDevExt_12: int;
  var {:scalar} Tmp_478: int;
  var {:pointer} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:pointer} WideString: int;
  var {:pointer} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:pointer} Tmp_484: int;
  var {:scalar} cap: int;
  var {:pointer} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:scalar} pnpIdStrLen: int;
  var {:pointer} Tmp_487: int;
  var {:scalar} pendingIRPs: int;
  var {:pointer} pQueryCapsEvent: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} pIrpStack_2: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} pLowerDevObj_2: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} sdv_437: int;
  var {:pointer} sdv_440: int;
  var {:pointer} pResDesc: int;
  var {:scalar} allocLen: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} sdv_444: int;
  var {:pointer} Tmp_497: int;
  var {:scalar} listNum: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:scalar} pendingIRPs_1: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} pReqList: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:scalar} pendingIRPs_2: int;
  var {:pointer} Tmp_512: int;
  var {:pointer} Tmp_513: int;
  var {:pointer} Tmp_514: int;
  var {:pointer} Tmp_515: int;
  var {:pointer} Tmp_516: int;
  var {:pointer} Tmp_517: int;
  var {:pointer} Tmp_518: int;
  var {:scalar} j: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} Tmp_520: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:scalar} Tmp_523: int;
  var {:pointer} Tmp_525: int;
  var {:scalar} sdv_465: int;
  var {:pointer} pnpKey_1: int;
  var {:pointer} Tmp_526: int;
  var {:pointer} Tmp_527: int;
  var {:pointer} Tmp_528: int;
  var {:pointer} pResFiltEvent: int;
  var {:pointer} Tmp_529: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:pointer} Tmp_534: int;
  var {:pointer} Tmp_535: int;
  var {:scalar} curStrLen: int;
  var {:pointer} curStr: int;
  var {:scalar} gotRuntime: int;
  var {:scalar} sdv_484: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} pDevCaps: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} status_15: int;
  var {:scalar} sdv_490: int;
  var {:scalar} sdv_491: int;
  var {:pointer} Tmp_541: int;
  var {:pointer} Tmp_542: int;
  var {:scalar} Tmp_543: int;
  var {:pointer} PDevObj_12: int;
  var {:pointer} PIrp_2: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_876: int;
  var vslice_dummy_var_877: int;
  var vslice_dummy_var_878: int;
  var vslice_dummy_var_879: int;
  var vslice_dummy_var_880: int;
  var vslice_dummy_var_881: int;
  var vslice_dummy_var_882: int;
  var vslice_dummy_var_883: int;

  anon0:
    call {:si_unique_call 1139} pIdBuf := __HAVOC_malloc(12);
    call {:si_unique_call 1140} portIndex := __HAVOC_malloc(4);
    PDevObj_12 := actual_PDevObj_12;
    PIrp_2 := actual_PIrp_2;
    call {:si_unique_call 1141} Tmp_467 := __HAVOC_malloc(60);
    call {:si_unique_call 1142} Tmp_469 := __HAVOC_malloc(176);
    call {:si_unique_call 1143} Tmp_470 := __HAVOC_malloc(72);
    call {:si_unique_call 1144} Tmp_471 := __HAVOC_malloc(28);
    call {:si_unique_call 1145} Tmp_472 := __HAVOC_malloc(72);
    call {:si_unique_call 1146} Tmp_473 := __HAVOC_malloc(60);
    call {:si_unique_call 1147} Tmp_474 := __HAVOC_malloc(72);
    call {:si_unique_call 1148} Tmp_475 := __HAVOC_malloc(72);
    call {:si_unique_call 1149} Tmp_476 := __HAVOC_malloc(144);
    call {:si_unique_call 1150} Tmp_477 := __HAVOC_malloc(72);
    call {:si_unique_call 1151} Tmp_479 := __HAVOC_malloc(116);
    call {:si_unique_call 1152} WideString := __HAVOC_malloc(800);
    call {:si_unique_call 1153} Tmp_481 := __HAVOC_malloc(132);
    call {:si_unique_call 1154} Tmp_482 := __HAVOC_malloc(100);
    call {:si_unique_call 1155} Tmp_483 := __HAVOC_malloc(112);
    call {:si_unique_call 1156} Tmp_484 := __HAVOC_malloc(40);
    call {:si_unique_call 1157} Tmp_485 := __HAVOC_malloc(92);
    call {:si_unique_call 1158} Tmp_487 := __HAVOC_malloc(116);
    call {:si_unique_call 1159} Tmp_488 := __HAVOC_malloc(136);
    call {:si_unique_call 1160} Tmp_489 := __HAVOC_malloc(120);
    call {:si_unique_call 1161} Tmp_491 := __HAVOC_malloc(128);
    call {:si_unique_call 1162} Tmp_492 := __HAVOC_malloc(72);
    call {:si_unique_call 1163} Tmp_493 := __HAVOC_malloc(176);
    call {:si_unique_call 1164} Tmp_495 := __HAVOC_malloc(72);
    call {:si_unique_call 1165} vslice_dummy_var_277 := __HAVOC_malloc(20);
    call {:si_unique_call 1166} Tmp_497 := __HAVOC_malloc(60);
    call {:si_unique_call 1167} Tmp_499 := __HAVOC_malloc(60);
    call {:si_unique_call 1168} Tmp_501 := __HAVOC_malloc(120);
    call {:si_unique_call 1169} vslice_dummy_var_278 := __HAVOC_malloc(64);
    call {:si_unique_call 1170} Tmp_503 := __HAVOC_malloc(128);
    call {:si_unique_call 1171} Tmp_504 := __HAVOC_malloc(28);
    call {:si_unique_call 1172} Tmp_505 := __HAVOC_malloc(28);
    call {:si_unique_call 1173} Tmp_506 := __HAVOC_malloc(112);
    call {:si_unique_call 1174} Tmp_507 := __HAVOC_malloc(88);
    call {:si_unique_call 1175} Tmp_508 := __HAVOC_malloc(120);
    call {:si_unique_call 1176} Tmp_510 := __HAVOC_malloc(132);
    call {:si_unique_call 1177} Tmp_511 := __HAVOC_malloc(392);
    call {:si_unique_call 1178} Tmp_512 := __HAVOC_malloc(152);
    call {:si_unique_call 1179} Tmp_513 := __HAVOC_malloc(72);
    call {:si_unique_call 1180} Tmp_514 := __HAVOC_malloc(112);
    call {:si_unique_call 1181} Tmp_515 := __HAVOC_malloc(144);
    call {:si_unique_call 1182} Tmp_516 := __HAVOC_malloc(136);
    call {:si_unique_call 1183} Tmp_517 := __HAVOC_malloc(72);
    call {:si_unique_call 1184} Tmp_518 := __HAVOC_malloc(140);
    call {:si_unique_call 1185} Tmp_519 := __HAVOC_malloc(60);
    call {:si_unique_call 1186} Tmp_520 := __HAVOC_malloc(168);
    call {:si_unique_call 1187} Tmp_521 := __HAVOC_malloc(132);
    call {:si_unique_call 1188} Tmp_522 := __HAVOC_malloc(60);
    call {:si_unique_call 1189} Tmp_525 := __HAVOC_malloc(144);
    call {:si_unique_call 1190} Tmp_526 := __HAVOC_malloc(60);
    call {:si_unique_call 1191} Tmp_527 := __HAVOC_malloc(380);
    call {:si_unique_call 1192} Tmp_528 := __HAVOC_malloc(180);
    call {:si_unique_call 1193} Tmp_529 := __HAVOC_malloc(72);
    call {:si_unique_call 1194} Tmp_530 := __HAVOC_malloc(88);
    call {:si_unique_call 1195} Tmp_531 := __HAVOC_malloc(60);
    call {:si_unique_call 1196} Tmp_532 := __HAVOC_malloc(72);
    call {:si_unique_call 1197} Tmp_533 := __HAVOC_malloc(100);
    call {:si_unique_call 1198} Tmp_534 := __HAVOC_malloc(116);
    call {:si_unique_call 1199} Tmp_535 := __HAVOC_malloc(148);
    call {:si_unique_call 1200} Tmp_536 := __HAVOC_malloc(112);
    call {:si_unique_call 1201} Tmp_537 := __HAVOC_malloc(28);
    call {:si_unique_call 1202} Tmp_538 := __HAVOC_malloc(60);
    call {:si_unique_call 1203} Tmp_539 := __HAVOC_malloc(88);
    call {:si_unique_call 1204} Tmp_540 := __HAVOC_malloc(156);
    call {:si_unique_call 1205} Tmp_541 := __HAVOC_malloc(72);
    call {:si_unique_call 1206} Tmp_542 := __HAVOC_malloc(72);
    call {:si_unique_call 1207} SLIC_CyzPnpDispatch_entry(0);
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    havoc pDevExt_12;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc pLowerDevObj_2;
    call {:si_unique_call 1208} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1209} sdv_do_paged_code_check();
    call {:si_unique_call 1210} status_15 := CyzIRPPrologue(PIrp_2, pDevExt_12);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} status_15 != 0;
    Tmp_513 := strConst__li2bpl3;
    call {:si_unique_call 1211} vslice_dummy_var_279 := CyzDbgPrintEx(9, Tmp_513);
    call {:si_unique_call 1212} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1213} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  L1:
    call {:si_unique_call 1214} SLIC_CyzPnpDispatch_exit(strConst__li2bpl0);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    assume {:partition} status_15 == 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L280;

  L280:
    call {:si_unique_call 1215} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1216} status_15 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    Tmp_466 := status_15;
    goto L1;

  anon148_Then:
    Tmp_521 := strConst__li2bpl121;
    call {:si_unique_call 1217} vslice_dummy_var_336 := CyzDbgPrintEx(12, Tmp_521);
    Tmp_467 := strConst__li2bpl122;
    call {:si_unique_call 1218} vslice_dummy_var_337 := CyzDbgPrintEx(12, Tmp_467);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1219} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 8, 1);
    call {:si_unique_call 1220} CyzKillPendingIrps(PDevObj_12);
    call {:si_unique_call 1221} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_876;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_876;
    call {:si_unique_call 1222} vslice_dummy_var_338 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1223} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_877;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_877;
    call {:si_unique_call 1224} sdv_490 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    pendingIRPs_1 := sdv_490;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} pendingIRPs_1 != 0;
    call {:si_unique_call 1225} vslice_dummy_var_267 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L92;

  L92:
    call {:si_unique_call 1226} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_878;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_878;
    call {:si_unique_call 1227} vslice_dummy_var_339 := sdv_InterlockedIncrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1228} CyzDisableInterfacesResources(PDevObj_12, 0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1229} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1230} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon183_Then:
    assume {:partition} pendingIRPs_1 == 0;
    goto L92;

  anon149_Then:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 4) != 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto L109;

  L109:
    call {:si_unique_call 1231} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1232} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon125_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 4) == 0;
    goto L109;

  anon150_Then:
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    Mem_T.INT4[portIndex] := 0;
    Tmp_482 := strConst__li2bpl146;
    call {:si_unique_call 1233} vslice_dummy_var_330 := CyzDbgPrintEx(12, Tmp_482);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    call {:si_unique_call 1234} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1235} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon128_Then:
    goto L128;

  L128:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1236} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1237} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon127_Then:
    call {:si_unique_call 1238} status_15 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_15 >= 0;
    Tmp_484 := strConst__li2bpl85;
    call {:si_unique_call 1239} status_15 := CyzGetRegistryKeyValue(pnpKey_1, Tmp_484, 20, portIndex, 4);
    call {:si_unique_call 1240} vslice_dummy_var_268 := ZwClose(0);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    call {:si_unique_call 1241} sdv_491 := corral_nondet();
    pnpIdStrLen := sdv_491;
    pnpIdStrLen := pnpIdStrLen * 2 + 2;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    allocLen := 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc curStr;
    goto L179;

  L179:
    call {:si_unique_call 1242} allocLen, curStrLen := CyzPnpDispatch_loop_L179(allocLen, sdv_465, curStrLen, curStr);
    goto L179_last;

  L179_last:
    curStrLen := sdv_465;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} curStrLen != 0;
    allocLen := allocLen + curStrLen * 2 + 2;
    goto anon180_Else_dummy;

  anon180_Else_dummy:
    assume false;
    return;

  anon180_Then:
    assume {:partition} curStrLen == 0;
    allocLen := allocLen + 2;
    Tmp_500 := allocLen + pnpIdStrLen + 2;
    call {:si_unique_call 1243} sdv_437 := ExAllocatePoolWithTag(1, Tmp_500, -797279933);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_480;
    call {:si_unique_call 1244} sdv_RtlZeroMemory(0, Tmp_480);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1245} sdv_RtlCopyMemory(0, 0, allocLen);
    call {:si_unique_call 1246} vslice_dummy_var_269 := corral_nondet();
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1247} sdv_ExFreePool(0);
    goto L208;

  L208:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1248} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1249} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon181_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1250} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_541 := strConst__li2bpl3;
    call {:si_unique_call 1251} vslice_dummy_var_331 := CyzDbgPrintEx(9, Tmp_541);
    call {:si_unique_call 1252} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1253} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon179_Then:
    Tmp_519 := strConst__li2bpl123;
    call {:si_unique_call 1254} vslice_dummy_var_332 := CyzDbgPrintEx(12, Tmp_519);
    Tmp_478 := pnpIdStrLen + 4;
    call {:si_unique_call 1255} sdv_399 := ExAllocatePoolWithTag(1, Tmp_478, -797279933);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_523;
    call {:si_unique_call 1256} sdv_RtlZeroMemory(0, Tmp_523);
    call {:si_unique_call 1257} vslice_dummy_var_270 := corral_nondet();
    goto L208;

  anon182_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_472 := strConst__li2bpl3;
    call {:si_unique_call 1258} vslice_dummy_var_333 := CyzDbgPrintEx(9, Tmp_472);
    call {:si_unique_call 1259} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1260} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon130_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_495 := strConst__li2bpl3;
    call {:si_unique_call 1261} vslice_dummy_var_334 := CyzDbgPrintEx(9, Tmp_495);
    call {:si_unique_call 1262} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1263} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon129_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_542 := strConst__li2bpl3;
    call {:si_unique_call 1264} vslice_dummy_var_335 := CyzDbgPrintEx(9, Tmp_542);
    call {:si_unique_call 1265} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1266} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon126_Then:
    goto L128;

  anon151_Then:
    Tmp_533 := strConst__li2bpl120;
    call {:si_unique_call 1267} vslice_dummy_var_329 := CyzDbgPrintEx(12, Tmp_533);
    goto L280;

  anon152_Then:
    Tmp_530 := strConst__li2bpl119;
    call {:si_unique_call 1268} vslice_dummy_var_328 := CyzDbgPrintEx(12, Tmp_530);
    goto L280;

  anon153_Then:
    Tmp_487 := strConst__li2bpl118;
    call {:si_unique_call 1269} vslice_dummy_var_327 := CyzDbgPrintEx(12, Tmp_487);
    goto L280;

  anon154_Then:
    Tmp_536 := strConst__li2bpl117;
    call {:si_unique_call 1270} vslice_dummy_var_326 := CyzDbgPrintEx(12, Tmp_536);
    goto L280;

  anon155_Then:
    Tmp_528 := strConst__li2bpl140;
    call {:si_unique_call 1271} vslice_dummy_var_314 := CyzDbgPrintEx(12, Tmp_528);
    Tmp_497 := strConst__li2bpl122;
    call {:si_unique_call 1272} vslice_dummy_var_315 := CyzDbgPrintEx(12, Tmp_497);
    call {:si_unique_call 1273} sdv_444 := ExAllocatePoolWithTag(0, 16, -797279933);
    pResFiltEvent := sdv_444;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} pResFiltEvent != 0;
    call {:si_unique_call 1274} KeInitializeEvent(pResFiltEvent, 1, 0);
    call {:si_unique_call 1275} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1276} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant219, pResFiltEvent, 1, 1, 1);
    call {:si_unique_call 1277} status_15 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_15 == 259;
    call {:si_unique_call 1278} vslice_dummy_var_271 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L330;

  L330:
    call {:si_unique_call 1279} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    goto L338;

  L338:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc pReqList;
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    havoc Tmp_511;
    pResList := Tmp_511;
    Tmp_469 := strConst__li2bpl141;
    call {:si_unique_call 1280} vslice_dummy_var_316 := CyzDbgPrintEx(12, Tmp_469);
    listNum := 0;
    goto L344;

  L344:
    call {:si_unique_call 1281} gotMemory, Tmp_479, Tmp_481, Tmp_486, Tmp_488, pResDesc, listNum, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_317, vslice_dummy_var_318, vslice_dummy_var_319, vslice_dummy_var_320, vslice_dummy_var_321 := CyzPnpDispatch_loop_L344(gotMemory, pResList, Tmp_479, Tmp_481, Tmp_486, Tmp_488, pLowerDevObj_2, pResDesc, listNum, pReqList, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_317, vslice_dummy_var_318, vslice_dummy_var_319, vslice_dummy_var_320, vslice_dummy_var_321);
    goto L344_last;

  L344_last:
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    gotRuntime := 0;
    gotMemory := 0;
    Tmp_479 := strConst__li2bpl142;
    call {:si_unique_call 1282} vslice_dummy_var_317 := CyzDbgPrintEx(12, Tmp_479);
    j := 0;
    goto L353;

  L353:
    call {:si_unique_call 1283} gotMemory, Tmp_481, Tmp_486, Tmp_488, pResDesc, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_318, vslice_dummy_var_319, vslice_dummy_var_320, vslice_dummy_var_321 := CyzPnpDispatch_loop_L353(gotMemory, pResList, Tmp_481, Tmp_486, Tmp_488, pLowerDevObj_2, pResDesc, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_318, vslice_dummy_var_319, vslice_dummy_var_320, vslice_dummy_var_321);
    goto L353_last;

  L353_last:
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    Tmp_486 := j;
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    havoc Tmp_527;
    pResDesc := Tmp_527 + Tmp_486 * 380;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto L370;

  L370:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} gotRuntime != 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} gotMemory == 0;
    goto L371;

  L371:
    j := j + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon138_Then:
    assume {:partition} gotMemory != 0;
    goto L354;

  L354:
    listNum := listNum + 1;
    goto L354_dummy;

  L354_dummy:
    assume false;
    return;

  anon137_Then:
    assume {:partition} gotRuntime == 0;
    goto L371;

  anon170_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    gotRuntime := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_512 := strConst__li2bpl144;
    call {:si_unique_call 1284} vslice_dummy_var_320 := CyzDbgPrintEx(12, Tmp_512);
    goto L370;

  anon136_Then:
    gotMemory := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_515 := strConst__li2bpl145;
    call {:si_unique_call 1285} vslice_dummy_var_321 := CyzDbgPrintEx(12, Tmp_515);
    goto L370;

  anon171_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_481 := strConst__li2bpl143;
    call {:si_unique_call 1286} vslice_dummy_var_319 := CyzDbgPrintEx(12, Tmp_481);
    goto L370;

  anon178_Then:
    Tmp_488 := strConst__li2bpl124;
    call {:si_unique_call 1287} vslice_dummy_var_318 := CyzDbgPrintEx(12, Tmp_488);
    goto L370;

  anon135_Then:
    goto L354;

  anon134_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_477 := strConst__li2bpl3;
    call {:si_unique_call 1288} vslice_dummy_var_322 := CyzDbgPrintEx(9, Tmp_477);
    call {:si_unique_call 1289} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1290} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := 0;
    goto L1;

  anon132_Then:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto L338;

  anon133_Then:
    Tmp_501 := strConst__li2bpl125;
    call {:si_unique_call 1291} vslice_dummy_var_323 := CyzDbgPrintEx(12, Tmp_501);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_15;
    Tmp_474 := strConst__li2bpl3;
    call {:si_unique_call 1292} vslice_dummy_var_324 := CyzDbgPrintEx(9, Tmp_474);
    call {:si_unique_call 1293} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1294} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon131_Then:
    assume {:partition} status_15 != 259;
    goto L330;

  anon177_Then:
    assume {:partition} pResFiltEvent == 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_517 := strConst__li2bpl3;
    call {:si_unique_call 1295} vslice_dummy_var_325 := CyzDbgPrintEx(9, Tmp_517);
    call {:si_unique_call 1296} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1297} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon156_Then:
    Tmp_493 := strConst__li2bpl116;
    call {:si_unique_call 1298} vslice_dummy_var_313 := CyzDbgPrintEx(12, Tmp_493);
    goto L280;

  anon157_Then:
    Tmp_520 := strConst__li2bpl126;
    call {:si_unique_call 1299} vslice_dummy_var_309 := CyzDbgPrintEx(12, Tmp_520);
    call {:si_unique_call 1300} sdv_440 := ExAllocatePoolWithTag(0, 16, -797279933);
    pQueryCapsEvent := sdv_440;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} pQueryCapsEvent != 0;
    call {:si_unique_call 1301} KeInitializeEvent(pQueryCapsEvent, 1, 0);
    call {:si_unique_call 1302} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1303} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant219, pQueryCapsEvent, 1, 1, 1);
    call {:si_unique_call 1304} status_15 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} status_15 == 259;
    call {:si_unique_call 1305} vslice_dummy_var_272 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L444;

  L444:
    call {:si_unique_call 1306} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_15;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L469;

  L469:
    Tmp_475 := strConst__li2bpl3;
    call {:si_unique_call 1307} vslice_dummy_var_311 := CyzDbgPrintEx(9, Tmp_475);
    call {:si_unique_call 1308} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1309} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon176_Then:
    Tmp_514 := strConst__li2bpl127;
    call {:si_unique_call 1310} vslice_dummy_var_310 := CyzDbgPrintEx(12, Tmp_514);
    call {:si_unique_call 1311} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    havoc pDevCaps;
    cap := 2;
    goto L462;

  L462:
    call {:si_unique_call 1312} Tmp_468, cap, Tmp_504, Tmp_505, Tmp_543 := CyzPnpDispatch_loop_L462(Tmp_468, pDevExt_12, cap, Tmp_504, Tmp_505, pDevCaps, Tmp_543);
    goto L462_last;

  L462_last:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} 7 > cap;
    Tmp_543 := cap;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_505;
    Tmp_468 := cap;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    havoc Tmp_504;
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    Mem_T.INT4[Tmp_505 + Tmp_543 * 4] := Mem_T.INT4[Tmp_504 + Tmp_468 * 4];
    cap := cap + 1;
    goto anon140_Else_dummy;

  anon140_Else_dummy:
    assume false;
    return;

  anon140_Then:
    assume {:partition} cap >= 7;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    Mem_T.INT4[Tmp_537] := 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    Mem_T.INT4[Tmp_471 + 1 * 4] := 1;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto L469;

  anon139_Then:
    assume {:partition} status_15 != 259;
    goto L444;

  anon175_Then:
    assume {:partition} pQueryCapsEvent == 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_529 := strConst__li2bpl3;
    call {:si_unique_call 1313} vslice_dummy_var_312 := CyzDbgPrintEx(9, Tmp_529);
    call {:si_unique_call 1314} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1315} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon158_Then:
    Tmp_491 := strConst__li2bpl115;
    call {:si_unique_call 1316} vslice_dummy_var_308 := CyzDbgPrintEx(12, Tmp_491);
    goto L280;

  anon159_Then:
    Tmp_540 := strConst__li2bpl114;
    call {:si_unique_call 1317} vslice_dummy_var_301 := CyzDbgPrintEx(12, Tmp_540);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    Tmp_476 := strConst__li2bpl133;
    call {:si_unique_call 1318} vslice_dummy_var_306 := CyzDbgPrintEx(12, Tmp_476);
    goto L510;

  L510:
    call {:si_unique_call 1319} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1320} status_15 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    Tmp_466 := status_15;
    goto L1;

  anon166_Then:
    Tmp_485 := strConst__li2bpl128;
    call {:si_unique_call 1321} vslice_dummy_var_307 := CyzDbgPrintEx(12, Tmp_485);
    goto L510;

  anon167_Then:
    Tmp_503 := strConst__li2bpl132;
    call {:si_unique_call 1322} vslice_dummy_var_305 := CyzDbgPrintEx(12, Tmp_503);
    goto L510;

  anon168_Then:
    Tmp_489 := strConst__li2bpl131;
    call {:si_unique_call 1323} vslice_dummy_var_304 := CyzDbgPrintEx(12, Tmp_489);
    goto L510;

  anon169_Then:
    Tmp_510 := strConst__li2bpl130;
    call {:si_unique_call 1324} vslice_dummy_var_303 := CyzDbgPrintEx(12, Tmp_510);
    goto L510;

  anon141_Then:
    Tmp_506 := strConst__li2bpl129;
    call {:si_unique_call 1325} vslice_dummy_var_302 := CyzDbgPrintEx(12, Tmp_506);
    goto L510;

  anon160_Then:
    Tmp_518 := strConst__li2bpl113;
    call {:si_unique_call 1326} vslice_dummy_var_299 := CyzDbgPrintEx(12, Tmp_518);
    Tmp_538 := strConst__li2bpl122;
    call {:si_unique_call 1327} vslice_dummy_var_300 := CyzDbgPrintEx(12, Tmp_538);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1328} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 0);
    goto L527;

  L527:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1329} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1330} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon142_Then:
    goto L527;

  anon161_Then:
    Tmp_516 := strConst__li2bpl134;
    call {:si_unique_call 1331} vslice_dummy_var_295 := CyzDbgPrintEx(12, Tmp_516);
    Tmp_522 := strConst__li2bpl122;
    call {:si_unique_call 1332} vslice_dummy_var_296 := CyzDbgPrintEx(12, Tmp_522);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    call {:si_unique_call 1333} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1334} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon143_Then:
    call {:si_unique_call 1335} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    call {:si_unique_call 1336} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_539 := strConst__li2bpl139;
    call {:si_unique_call 1337} vslice_dummy_var_297 := CyzDbgPrintEx(12, Tmp_539);
    Tmp_492 := strConst__li2bpl3;
    call {:si_unique_call 1338} vslice_dummy_var_298 := CyzDbgPrintEx(9, Tmp_492);
    call {:si_unique_call 1339} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1340} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := 17;
    goto L1;

  anon144_Then:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1341} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 1);
    call {:si_unique_call 1342} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1343} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1344} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon162_Then:
    Tmp_483 := strConst__li2bpl135;
    call {:si_unique_call 1345} vslice_dummy_var_291 := CyzDbgPrintEx(12, Tmp_483);
    Tmp_526 := strConst__li2bpl122;
    call {:si_unique_call 1346} vslice_dummy_var_292 := CyzDbgPrintEx(12, Tmp_526);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1347} CyzSetDeviceFlags(pDevExt_12, Flags__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 1);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1348} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 4, 1);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1349} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1350} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_879;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_879;
    call {:si_unique_call 1351} vslice_dummy_var_293 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1352} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_880;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_880;
    call {:si_unique_call 1353} sdv_404 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    pendingIRPs := sdv_404;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} pendingIRPs != 0;
    call {:si_unique_call 1354} vslice_dummy_var_273 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L614;

  L614:
    call {:si_unique_call 1355} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_881;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_881;
    call {:si_unique_call 1356} vslice_dummy_var_294 := sdv_InterlockedIncrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 1) != 0;
    call {:si_unique_call 1357} CyzReleaseResources(pDevExt_12);
    goto L621;

  L621:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1358} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1359} Tmp_466 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto L1;

  anon145_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 1) == 0;
    goto L621;

  anon174_Then:
    assume {:partition} pendingIRPs == 0;
    goto L614;

  anon163_Then:
    Tmp_535 := strConst__li2bpl112;
    call {:si_unique_call 1360} vslice_dummy_var_289 := CyzDbgPrintEx(12, Tmp_535);
    Tmp_531 := strConst__li2bpl122;
    call {:si_unique_call 1361} vslice_dummy_var_290 := CyzDbgPrintEx(12, Tmp_531);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1362} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1363} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1364} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon164_Then:
    Tmp_508 := strConst__li2bpl136;
    call {:si_unique_call 1365} vslice_dummy_var_286 := CyzDbgPrintEx(12, Tmp_508);
    Tmp_499 := strConst__li2bpl122;
    call {:si_unique_call 1366} vslice_dummy_var_287 := CyzDbgPrintEx(12, Tmp_499);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1367} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 1);
    call {:si_unique_call 1368} CyzKillPendingIrps(PDevObj_12);
    call {:si_unique_call 1369} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_882;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_882;
    call {:si_unique_call 1370} vslice_dummy_var_288 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1371} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_883;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_883;
    call {:si_unique_call 1372} sdv_484 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    pendingIRPs_2 := sdv_484;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} pendingIRPs_2 != 0;
    call {:si_unique_call 1373} vslice_dummy_var_274 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L668;

  L668:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12)], 8) != 0;
    goto L675;

  L675:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1374} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1375} status_15 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    call {:si_unique_call 1376} vslice_dummy_var_275 := CyzRemoveDevObj(PDevObj_12);
    Tmp_466 := status_15;
    goto L1;

  anon146_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12)], 8) == 0;
    call {:si_unique_call 1377} CyzDisableInterfacesResources(PDevObj_12, 1);
    goto L675;

  anon173_Then:
    assume {:partition} pendingIRPs_2 == 0;
    goto L668;

  anon165_Then:
    Tmp_525 := strConst__li2bpl137;
    call {:si_unique_call 1378} vslice_dummy_var_282 := CyzDbgPrintEx(12, Tmp_525);
    Tmp_473 := strConst__li2bpl122;
    call {:si_unique_call 1379} vslice_dummy_var_283 := CyzDbgPrintEx(12, Tmp_473);
    call {:si_unique_call 1380} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    call {:si_unique_call 1381} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_507 := strConst__li2bpl139;
    call {:si_unique_call 1382} vslice_dummy_var_284 := CyzDbgPrintEx(12, Tmp_507);
    Tmp_470 := strConst__li2bpl3;
    call {:si_unique_call 1383} vslice_dummy_var_285 := CyzDbgPrintEx(9, Tmp_470);
    call {:si_unique_call 1384} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1385} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := 17;
    goto L1;

  anon147_Then:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1386} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 1);
    call {:si_unique_call 1387} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1388} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1389} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto L1;

  anon124_Then:
    Tmp_534 := strConst__li2bpl138;
    call {:si_unique_call 1390} vslice_dummy_var_280 := CyzDbgPrintEx(12, Tmp_534);
    call {:si_unique_call 1391} MmLockPagableSectionByHandle(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1392} status_15 := CyzStartDevice(PDevObj_12, PIrp_2);
    call {:si_unique_call 1393} vslice_dummy_var_276 := CyzGotoPowerState(PDevObj_12, pDevExt_12, 4);
    call {:si_unique_call 1394} MmUnlockPagableImageSection(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_532 := strConst__li2bpl3;
    call {:si_unique_call 1395} vslice_dummy_var_281 := CyzDbgPrintEx(9, Tmp_532);
    call {:si_unique_call 1396} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1397} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;
}



procedure {:origName "CyzStartDevice"} CyzStartDevice(actual_PDevObj_13: int, actual_PIrp_3: int) returns (Tmp_544: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartDevice"} CyzStartDevice(actual_PDevObj_13: int, actual_PIrp_3: int) returns (Tmp_544: int)
{
  var {:pointer} Tmp_545: int;
  var {:pointer} Tmp_546: int;
  var {:pointer} keyHandle_2: int;
  var {:pointer} portResourcesTr: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} pDevExt_13: int;
  var {:pointer} Tmp_549: int;
  var {:pointer} portResources: int;
  var {:pointer} Tmp_550: int;
  var {:pointer} Tmp_551: int;
  var {:pointer} sdv_506: int;
  var {:scalar} dataLength: int;
  var {:pointer} sdv_513: int;
  var {:pointer} pLowerDevObj_3: int;
  var {:pointer} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:scalar} status_16: int;
  var {:pointer} Tmp_554: int;
  var {:scalar} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:pointer} PDevObj_13: int;
  var {:pointer} PIrp_3: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_884: int;

  anon0:
    call {:si_unique_call 1398} Tmp_555 := __HAVOC_malloc(20);
    call {:si_unique_call 1399} Tmp_556 := __HAVOC_malloc(20);
    PDevObj_13 := actual_PDevObj_13;
    PIrp_3 := actual_PIrp_3;
    call {:si_unique_call 1400} Tmp_545 := __HAVOC_malloc(64);
    call {:si_unique_call 1401} Tmp_546 := __HAVOC_malloc(112);
    call {:si_unique_call 1402} Tmp_547 := __HAVOC_malloc(56);
    call {:si_unique_call 1403} Tmp_549 := __HAVOC_malloc(152);
    call {:si_unique_call 1404} Tmp_550 := __HAVOC_malloc(208);
    call {:si_unique_call 1405} Tmp_551 := __HAVOC_malloc(200);
    call {:si_unique_call 1406} Tmp_552 := __HAVOC_malloc(56);
    call {:si_unique_call 1407} Tmp_553 := __HAVOC_malloc(100);
    call {:si_unique_call 1408} Tmp_554 := __HAVOC_malloc(64);
    call {:si_unique_call 1409} vslice_dummy_var_340 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    status_16 := -1073741822;
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    havoc pDevExt_13;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc pLowerDevObj_3;
    portResources := 0;
    portResourcesTr := 0;
    call {:si_unique_call 1410} sdv_do_paged_code_check();
    Tmp_553 := strConst__li2bpl149;
    call {:si_unique_call 1411} vslice_dummy_var_343 := CyzDbgPrintEx(11, Tmp_553);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1412} KeInitializeEvent(CyzStartEvent__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 0);
    call {:si_unique_call 1413} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1414} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant219, CyzStartEvent__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 1, 1);
    call {:si_unique_call 1415} status_16 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_16 == 259;
    call {:si_unique_call 1416} vslice_dummy_var_341 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_16;
    goto L40;

  L40:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} status_16 >= 0;
    call {:si_unique_call 1417} status_16 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_16 >= 0;
    Tmp_547 := strConst__li2bpl151;
    call {:si_unique_call 1418} dataLength := CyzGetRegistryKeyValueLength(keyHandle_2, Tmp_547, 28);
    call {:si_unique_call 1419} sdv_506 := ExAllocatePoolWithTag(1, dataLength, -797279933);
    portResources := sdv_506;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} portResources != 0;
    Tmp_552 := strConst__li2bpl151;
    call {:si_unique_call 1420} status_16 := CyzGetRegistryKeyValue(keyHandle_2, Tmp_552, 28, portResources, dataLength);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_16 < 0;
    Tmp_551 := strConst__li2bpl153;
    call {:si_unique_call 1421} vslice_dummy_var_345 := CyzDbgPrintEx(14, Tmp_551);
    goto L77;

  L77:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} portResources != 0;
    call {:si_unique_call 1422} sdv_ExFreePool(0);
    goto L78;

  L78:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} portResourcesTr != 0;
    call {:si_unique_call 1423} sdv_ExFreePool(0);
    goto L82;

  L82:
    call {:si_unique_call 1424} vslice_dummy_var_342 := ZwClose(0);
    goto L88;

  L88:
    Tmp_544 := status_16;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} portResourcesTr == 0;
    goto L82;

  anon23_Then:
    assume {:partition} portResources == 0;
    goto L78;

  anon22_Then:
    assume {:partition} 0 <= status_16;
    goto L65;

  L65:
    Tmp_545 := strConst__li2bpl152;
    call {:si_unique_call 1425} dataLength := CyzGetRegistryKeyValueLength(keyHandle_2, Tmp_545, 32);
    call {:si_unique_call 1426} sdv_513 := ExAllocatePoolWithTag(1, dataLength, -797279933);
    portResourcesTr := sdv_513;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} portResourcesTr != 0;
    Tmp_554 := strConst__li2bpl152;
    call {:si_unique_call 1427} status_16 := CyzGetRegistryKeyValue(keyHandle_2, Tmp_554, 32, portResourcesTr, dataLength);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_16 < 0;
    Tmp_550 := strConst__li2bpl154;
    call {:si_unique_call 1428} vslice_dummy_var_344 := CyzDbgPrintEx(14, Tmp_550);
    goto L77;

  anon25_Then:
    assume {:partition} 0 <= status_16;
    goto L95;

  L95:
    call {:si_unique_call 1429} status_16 := CyzFinishStartDevice(PDevObj_13, portResources, portResourcesTr);
    goto L77;

  anon27_Then:
    assume {:partition} portResourcesTr == 0;
    goto L95;

  anon26_Then:
    assume {:partition} portResources == 0;
    goto L65;

  anon21_Then:
    assume {:partition} 0 > status_16;
    Tmp_549 := strConst__li2bpl84;
    call {:si_unique_call 1430} vslice_dummy_var_346 := CyzDbgPrintEx(14, Tmp_549);
    goto L88;

  anon20_Then:
    assume {:partition} 0 > status_16;
    Tmp_546 := strConst__li2bpl150;
    call {:si_unique_call 1431} vslice_dummy_var_347 := CyzDbgPrintEx(14, Tmp_546);
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_884;
    call {:si_unique_call 1432} CyzLogError(vslice_dummy_var_884, 0, Tmp_555, Tmp_556, 0, 0, 0, 0, status_16, -1073475531, 0, 0, 0, 0);
    Tmp_544 := status_16;
    goto L1;

  anon19_Then:
    assume {:partition} status_16 != 259;
    goto L40;
}



procedure {:origName "CyzDoExternalNaming"} CyzDoExternalNaming(actual_PDevExt_6: int, actual_PDrvObj: int) returns (Tmp_557: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_557 == -1073741811 || Tmp_557 == -1073741808 || Tmp_557 == -1073741823 || Tmp_557 == 0 || Tmp_557 == 5 || Tmp_557 == -1073741789 || Tmp_557 == -1073741670 || Tmp_557 == -1073741772 || Tmp_557 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDoExternalNaming"} CyzDoExternalNaming(actual_PDevExt_6: int, actual_PDrvObj: int) returns (Tmp_557: int)
{
  var {:pointer} Tmp_558: int;
  var {:scalar} Tmp_559: int;
  var {:pointer} Tmp_560: int;
  var {:scalar} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:scalar} bufLen: int;
  var {:scalar} Tmp_564: int;
  var {:pointer} Tmp_566: int;
  var {:scalar} Tmp_568: int;
  var {:scalar} linkName: int;
  var {:scalar} Tmp_570: int;
  var {:pointer} keyHandle_3: int;
  var {:pointer} Tmp_572: int;
  var {:scalar} Tmp_574: int;
  var {:scalar} Tmp_575: int;
  var {:pointer} Tmp_576: int;
  var {:pointer} Tmp_578: int;
  var {:scalar} Tmp_579: int;
  var {:pointer} sdv_533: int;
  var {:pointer} pRegName_1: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} Tmp_585: int;
  var {:pointer} Tmp_586: int;
  var {:scalar} Tmp_587: int;
  var {:scalar} Tmp_588: int;
  var {:scalar} sdv_537: int;
  var {:scalar} Tmp_589: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} Tmp_591: int;
  var {:scalar} Tmp_592: int;
  var {:scalar} Tmp_593: int;
  var {:scalar} Tmp_594: int;
  var {:scalar} Tmp_595: int;
  var {:pointer} sdv_544: int;
  var {:pointer} sdv_545: int;
  var {:scalar} Tmp_597: int;
  var {:pointer} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} Tmp_604: int;
  var {:pointer} Tmp_605: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} sdv_553: int;
  var {:scalar} status_17: int;
  var {:pointer} pDevObj: int;
  var {:scalar} Tmp_608: int;
  var {:scalar} Tmp_609: int;
  var {:pointer} sdv_556: int;
  var {:pointer} PDevExt_6: int;
  var {:pointer} PDrvObj: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_885: int;
  var vslice_dummy_var_886: int;

  anon0:
    call {:si_unique_call 1433} linkName := __HAVOC_malloc(12);
    call {:si_unique_call 1434} Tmp_570 := __HAVOC_malloc(20);
    call {:si_unique_call 1435} Tmp_574 := __HAVOC_malloc(20);
    call {:si_unique_call 1436} Tmp_575 := __HAVOC_malloc(20);
    call {:si_unique_call 1437} Tmp_579 := __HAVOC_malloc(20);
    call {:si_unique_call 1438} Tmp_585 := __HAVOC_malloc(20);
    call {:si_unique_call 1439} Tmp_587 := __HAVOC_malloc(20);
    call {:si_unique_call 1440} Tmp_588 := __HAVOC_malloc(20);
    call {:si_unique_call 1441} Tmp_590 := __HAVOC_malloc(20);
    call {:si_unique_call 1442} Tmp_592 := __HAVOC_malloc(20);
    call {:si_unique_call 1443} Tmp_593 := __HAVOC_malloc(20);
    call {:si_unique_call 1444} Tmp_594 := __HAVOC_malloc(20);
    call {:si_unique_call 1445} Tmp_595 := __HAVOC_malloc(20);
    call {:si_unique_call 1446} Tmp_604 := __HAVOC_malloc(20);
    call {:si_unique_call 1447} Tmp_609 := __HAVOC_malloc(20);
    PDevExt_6 := actual_PDevExt_6;
    PDrvObj := actual_PDrvObj;
    call {:si_unique_call 1448} Tmp_558 := __HAVOC_malloc(148);
    call {:si_unique_call 1449} vslice_dummy_var_356 := __HAVOC_malloc(44);
    call {:si_unique_call 1450} Tmp_566 := __HAVOC_malloc(156);
    call {:si_unique_call 1451} vslice_dummy_var_357 := __HAVOC_malloc(44);
    call {:si_unique_call 1452} vslice_dummy_var_358 := __HAVOC_malloc(8);
    call {:si_unique_call 1453} Tmp_572 := __HAVOC_malloc(196);
    call {:si_unique_call 1454} Tmp_576 := __HAVOC_malloc(164);
    call {:si_unique_call 1455} Tmp_578 := __HAVOC_malloc(168);
    call {:si_unique_call 1456} Tmp_581 := __HAVOC_malloc(192);
    call {:si_unique_call 1457} Tmp_582 := __HAVOC_malloc(36);
    call {:si_unique_call 1458} vslice_dummy_var_359 := __HAVOC_malloc(44);
    call {:si_unique_call 1459} Tmp_586 := __HAVOC_malloc(200);
    call {:si_unique_call 1460} Tmp_591 := __HAVOC_malloc(44);
    call {:si_unique_call 1461} vslice_dummy_var_360 := __HAVOC_malloc(8);
    call {:si_unique_call 1462} Tmp_599 := __HAVOC_malloc(88);
    call {:si_unique_call 1463} Tmp_601 := __HAVOC_malloc(156);
    call {:si_unique_call 1464} Tmp_602 := __HAVOC_malloc(64);
    call {:si_unique_call 1465} Tmp_605 := __HAVOC_malloc(180);
    call {:si_unique_call 1466} Tmp_606 := __HAVOC_malloc(236);
    status_17 := 0;
    pRegName_1 := 0;
    call {:si_unique_call 1467} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc pDevObj;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1468} status_17 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_17 != 0;
    Tmp_557 := status_17;
    goto L1;

  L1:
    return;

  anon45_Then:
    assume {:partition} status_17 == 0;
    Tmp_599 := strConst__li2bpl155;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1469} vslice_dummy_var_361 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_599, 44, SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_6), 4);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_6)] != 0;
    call {:si_unique_call 1470} vslice_dummy_var_348 := ZwClose(0);
    Tmp_557 := 0;
    goto L1;

  anon46_Then:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_6)] == 0;
    call {:si_unique_call 1471} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_589;
    call {:si_unique_call 1472} sdv_544 := ExAllocatePoolWithTag(1, Tmp_589, -797279933);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_562;
    call {:si_unique_call 1473} sdv_RtlZeroMemory(0, Tmp_562);
    call {:si_unique_call 1474} sdv_545 := ExAllocatePoolWithTag(1, 258, -797279933);
    pRegName_1 := sdv_545;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pRegName_1 != 0;
    Tmp_582 := strConst__li2bpl156;
    call {:si_unique_call 1475} status_17 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_582, 18, pRegName_1, 256);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_17 >= 0;
    goto L60;

  L60:
    call {:si_unique_call 1476} vslice_dummy_var_349 := ZwClose(0);
    bufLen := sdv_537 * 2 + 2;
    call {:si_unique_call 1477} sdv_556 := ExAllocatePoolWithTag(1, bufLen, -797279933);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 1478} sdv_RtlZeroMemory(0, bufLen);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1479} vslice_dummy_var_362 := corral_nondet();
    call {:si_unique_call 1480} vslice_dummy_var_363 := corral_nondet();
    call {:si_unique_call 1481} vslice_dummy_var_364 := corral_nondet();
    call {:si_unique_call 1482} vslice_dummy_var_365 := corral_nondet();
    call {:si_unique_call 1483} vslice_dummy_var_350 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_603;
    call {:si_unique_call 1484} sdv_553 := ExAllocatePoolWithTag(1, Tmp_603, -797279933);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_568;
    call {:si_unique_call 1485} sdv_RtlZeroMemory(0, Tmp_568);
    call {:si_unique_call 1486} vslice_dummy_var_351 := corral_nondet();
    call {:si_unique_call 1487} sdv_533 := ExAllocatePoolWithTag(1, 66, -797279933);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_608;
    call {:si_unique_call 1488} sdv_RtlZeroMemory(0, Tmp_608);
    call {:si_unique_call 1489} vslice_dummy_var_352 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_560;
    call {:si_unique_call 1490} sdv_RtlZeroMemory(0, 2);
    Tmp_602 := strConst__li2bpl160;
    call {:si_unique_call 1491} vslice_dummy_var_366 := CyzDbgPrintEx(4, Tmp_602);
    call {:si_unique_call 1492} status_17 := IoCreateSymbolicLink(0, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_17 >= 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_597;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1493} status_17 := RtlWriteRegistryValue(4, 0, 0, 1, 0, Tmp_597);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_17 >= 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1494} status_17 := IoRegisterDeviceInterface(0, 0, 0, DeviceClassSymbolicName__CYZ_DEVICE_EXTENSION(PDevExt_6));
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_17 >= 0;
    call {:si_unique_call 1495} status_17 := IoSetDeviceInterfaceState(0, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_17 >= 0;
    goto L162;

  L162:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_17 >= 0;
    goto L164;

  L164:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1496} sdv_ExFreePool(0);
    goto L165;

  L165:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} pRegName_1 != 0;
    call {:si_unique_call 1497} sdv_ExFreePool(0);
    goto L169;

  L169:
    Tmp_557 := status_17;
    goto L1;

  anon55_Then:
    assume {:partition} pRegName_1 == 0;
    goto L169;

  anon54_Then:
    goto L165;

  anon52_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1498} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1499} vslice_dummy_var_353 := IoDeleteSymbolicLink(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L178;

  L178:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1500} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L183;

  L183:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1501} vslice_dummy_var_367 := RtlDeleteRegistryValue(4, 0, 0);
    goto L188;

  L188:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1502} vslice_dummy_var_354 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1503} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L192;

  L192:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1504} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L164;

  anon60_Then:
    goto L164;

  anon59_Then:
    goto L192;

  anon58_Then:
    goto L188;

  anon57_Then:
    goto L183;

  anon56_Then:
    goto L178;

  anon53_Then:
    goto L173;

  anon51_Then:
    assume {:partition} 0 > status_17;
    Tmp_605 := strConst__li2bpl162;
    call {:si_unique_call 1505} vslice_dummy_var_368 := CyzDbgPrintEx(14, Tmp_605);
    goto L162;

  anon50_Then:
    assume {:partition} 0 > status_17;
    Tmp_586 := strConst__li2bpl161;
    call {:si_unique_call 1506} vslice_dummy_var_369 := CyzDbgPrintEx(14, Tmp_586);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L162;

  anon49_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_600;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc vslice_dummy_var_885;
    call {:si_unique_call 1507} CyzLogError(PDrvObj, pDevObj, Tmp_592, Tmp_575, 0, 0, 0, Tmp_561, status_17, 266245, Tmp_600, vslice_dummy_var_885, 0, 0);
    Tmp_606 := strConst__li2bpl163;
    call {:si_unique_call 1508} vslice_dummy_var_370 := CyzDbgPrintEx(14, Tmp_606);
    goto L162;

  anon48_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_559;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_564;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc vslice_dummy_var_886;
    call {:si_unique_call 1509} CyzLogError(PDrvObj, pDevObj, Tmp_594, Tmp_585, 0, 0, 0, Tmp_564, status_17, 266244, Tmp_559, vslice_dummy_var_886, 0, 0);
    Tmp_581 := strConst__li2bpl164;
    call {:si_unique_call 1510} vslice_dummy_var_371 := CyzDbgPrintEx(14, Tmp_581);
    goto L162;

  anon66_Then:
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    call {:si_unique_call 1511} CyzLogError(PDrvObj, pDevObj, Tmp_574, Tmp_570, 0, 0, 0, 75, 0, -1073475576, 0, 0, 0, 0);
    Tmp_601 := strConst__li2bpl165;
    call {:si_unique_call 1512} vslice_dummy_var_372 := CyzDbgPrintEx(14, Tmp_601);
    status_17 := -1073741670;
    goto L162;

  anon65_Then:
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    call {:si_unique_call 1513} CyzLogError(PDrvObj, pDevObj, Tmp_593, Tmp_588, 0, 0, 0, 74, 0, -1073475576, 0, 0, 0, 0);
    Tmp_572 := strConst__li2bpl166;
    call {:si_unique_call 1514} vslice_dummy_var_373 := CyzDbgPrintEx(14, Tmp_572);
    status_17 := -1073741670;
    goto L162;

  anon64_Then:
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    call {:si_unique_call 1515} CyzLogError(PDrvObj, pDevObj, Tmp_595, Tmp_587, 0, 0, 0, 73, 0, -1073475576, 0, 0, 0, 0);
    Tmp_566 := strConst__li2bpl167;
    call {:si_unique_call 1516} vslice_dummy_var_374 := CyzDbgPrintEx(14, Tmp_566);
    status_17 := -1073741670;
    goto L162;

  anon47_Then:
    assume {:partition} 0 > status_17;
    Tmp_591 := strConst__li2bpl157;
    call {:si_unique_call 1517} status_17 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_591, 22, pRegName_1, 256);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_17 < 0;
    Tmp_576 := strConst__li2bpl168;
    call {:si_unique_call 1518} vslice_dummy_var_375 := CyzDbgPrintEx(14, Tmp_576);
    call {:si_unique_call 1519} vslice_dummy_var_355 := ZwClose(0);
    goto L162;

  anon61_Then:
    assume {:partition} 0 <= status_17;
    goto L60;

  anon63_Then:
    assume {:partition} pRegName_1 == 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    call {:si_unique_call 1520} CyzLogError(PDrvObj, pDevObj, Tmp_604, Tmp_579, 0, 0, 0, 72, 0, -1073475576, 0, 0, 0, 0);
    Tmp_558 := strConst__li2bpl169;
    call {:si_unique_call 1521} vslice_dummy_var_376 := CyzDbgPrintEx(14, Tmp_558);
    status_17 := -1073741670;
    call {:si_unique_call 1522} vslice_dummy_var_377 := ZwClose(0);
    goto L162;

  anon62_Then:
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    call {:si_unique_call 1523} CyzLogError(PDrvObj, pDevObj, Tmp_609, Tmp_590, 0, 0, 0, 71, 0, -1073475576, 0, 0, 0, 0);
    Tmp_578 := strConst__li2bpl170;
    call {:si_unique_call 1524} vslice_dummy_var_378 := CyzDbgPrintEx(14, Tmp_578);
    status_17 := -1073741670;
    call {:si_unique_call 1525} vslice_dummy_var_379 := ZwClose(0);
    goto L162;
}



procedure {:origName "CyzReadSymName"} CyzReadSymName(actual_PDevExt_7: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_612: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_612 == -1073741811 || Tmp_612 == -1073741823 || Tmp_612 == 0 || Tmp_612 == 5 || Tmp_612 == -1073741789 || Tmp_612 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReadSymName"} CyzReadSymName(actual_PDevExt_7: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_612: int)
{
  var {:scalar} Tmp_614: int;
  var {:scalar} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:scalar} linkName_1: int;
  var {:scalar} Tmp_617: int;
  var {:scalar} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} sdv_560: int;
  var {:pointer} Tmp_621: int;
  var {:pointer} sdv_562: int;
  var {:scalar} Tmp_622: int;
  var {:pointer} sdv_564: int;
  var {:pointer} Tmp_623: int;
  var {:pointer} Tmp_624: int;
  var {:scalar} Tmp_625: int;
  var {:scalar} status_18: int;
  var {:pointer} Tmp_626: int;
  var {:pointer} pDevObj_1: int;
  var {:pointer} pDrvObj: int;
  var {:scalar} Tmp_629: int;
  var {:scalar} Tmp_630: int;
  var {:pointer} PDevExt_7: int;
  var {:pointer} hRegKey: int;
  var {:pointer} PSymName: int;
  var {:pointer} PpRegName: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_887: int;
  var vslice_dummy_var_888: int;

  anon0:
    call {:si_unique_call 1526} Tmp_615 := __HAVOC_malloc(20);
    call {:si_unique_call 1527} linkName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1528} Tmp_618 := __HAVOC_malloc(20);
    call {:si_unique_call 1529} Tmp_629 := __HAVOC_malloc(20);
    call {:si_unique_call 1530} Tmp_630 := __HAVOC_malloc(20);
    PDevExt_7 := actual_PDevExt_7;
    hRegKey := actual_hRegKey;
    PSymName := actual_PSymName;
    PpRegName := actual_PpRegName;
    call {:si_unique_call 1531} Tmp_616 := __HAVOC_malloc(168);
    call {:si_unique_call 1532} Tmp_619 := __HAVOC_malloc(148);
    call {:si_unique_call 1533} vslice_dummy_var_382 := __HAVOC_malloc(8);
    call {:si_unique_call 1534} Tmp_621 := __HAVOC_malloc(164);
    call {:si_unique_call 1535} Tmp_623 := __HAVOC_malloc(60);
    call {:si_unique_call 1536} Tmp_624 := __HAVOC_malloc(36);
    call {:si_unique_call 1537} Tmp_626 := __HAVOC_malloc(44);
    call {:si_unique_call 1538} vslice_dummy_var_383 := __HAVOC_malloc(8);
    call {:si_unique_call 1539} vslice_dummy_var_384 := __HAVOC_malloc(44);
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    havoc pDevObj_1;
    assume {:nonnull} pDevObj_1 != 0;
    assume pDevObj_1 > 0;
    havoc pDrvObj;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    call {:si_unique_call 1540} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_622;
    call {:si_unique_call 1541} sdv_560 := ExAllocatePoolWithTag(257, Tmp_622, -797279933);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_625;
    call {:si_unique_call 1542} sdv_RtlZeroMemory(0, Tmp_625);
    call {:si_unique_call 1543} sdv_564 := ExAllocatePoolWithTag(257, 258, -797279933);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_624 := strConst__li2bpl156;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_887;
    call {:si_unique_call 1544} status_18 := CyzGetRegistryKeyValue(hRegKey, Tmp_624, 18, vslice_dummy_var_887, 256);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_18 >= 0;
    goto L39;

  L39:
    call {:si_unique_call 1545} vslice_dummy_var_385 := corral_nondet();
    call {:si_unique_call 1546} vslice_dummy_var_386 := corral_nondet();
    call {:si_unique_call 1547} vslice_dummy_var_387 := corral_nondet();
    call {:si_unique_call 1548} vslice_dummy_var_380 := corral_nondet();
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_617;
    call {:si_unique_call 1549} sdv_562 := ExAllocatePoolWithTag(257, Tmp_617, -797279933);
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_614;
    call {:si_unique_call 1550} sdv_RtlZeroMemory(0, Tmp_614);
    call {:si_unique_call 1551} vslice_dummy_var_381 := corral_nondet();
    Tmp_623 := strConst__li2bpl171;
    call {:si_unique_call 1552} vslice_dummy_var_388 := CyzDbgPrintEx(4, Tmp_623);
    goto L69;

  L69:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1553} sdv_ExFreePool(0);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto L70;

  L70:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_18 >= 0;
    goto L76;

  L76:
    Tmp_612 := status_18;
    return;

  anon19_Then:
    assume {:partition} 0 > status_18;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1554} sdv_ExFreePool(0);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto L76;

  anon20_Then:
    goto L76;

  anon18_Then:
    goto L70;

  anon24_Then:
    status_18 := -1073741670;
    goto L69;

  anon17_Then:
    assume {:partition} 0 > status_18;
    Tmp_626 := strConst__li2bpl157;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_888;
    call {:si_unique_call 1555} status_18 := CyzGetRegistryKeyValue(hRegKey, Tmp_626, 22, vslice_dummy_var_888, 256);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_18 < 0;
    Tmp_621 := strConst__li2bpl168;
    call {:si_unique_call 1556} vslice_dummy_var_389 := CyzDbgPrintEx(14, Tmp_621);
    goto L69;

  anon21_Then:
    assume {:partition} 0 <= status_18;
    goto L39;

  anon23_Then:
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    call {:si_unique_call 1557} CyzLogError(pDrvObj, pDevObj_1, Tmp_629, Tmp_615, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_619 := strConst__li2bpl169;
    call {:si_unique_call 1558} vslice_dummy_var_390 := CyzDbgPrintEx(14, Tmp_619);
    status_18 := -1073741670;
    goto L69;

  anon22_Then:
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    call {:si_unique_call 1559} CyzLogError(pDrvObj, pDevObj_1, Tmp_618, Tmp_630, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_616 := strConst__li2bpl170;
    call {:si_unique_call 1560} vslice_dummy_var_391 := CyzDbgPrintEx(14, Tmp_616);
    status_18 := -1073741670;
    goto L69;
}



procedure {:origName "CyzAddToAllDevs"} CyzAddToAllDevs(actual_PListEntry: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzAddToAllDevs"} CyzAddToAllDevs(actual_PListEntry: int)
{
  var {:pointer} Tmp_631: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} PListEntry: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;

  anon0:
    call {:si_unique_call 1561} vslice_dummy_var_392 := __HAVOC_malloc(4);
    PListEntry := actual_PListEntry;
    call {:si_unique_call 1562} Tmp_631 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    Mem_T.INT4[Tmp_631] := oldIrql_5;
    call {:si_unique_call 1563} sdv_KeAcquireSpinLock(0, Tmp_631);
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_631];
    call {:si_unique_call 1564} vslice_dummy_var_393 := sdv_InsertTailList(AllDevObjs__CYZ_GLOBALS(CyzGlobals), PListEntry);
    call {:si_unique_call 1565} sdv_KeReleaseSpinLock(0, oldIrql_5);
    return;
}



procedure {:origName "SLIC_CyzPnpDispatch_entry"} {:osmodel} SLIC_CyzPnpDispatch_entry(actual_caller: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzPnpDispatch_entry"} {:osmodel} SLIC_CyzPnpDispatch_entry(actual_caller: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_CyzCreateOpen_entry"} {:osmodel} SLIC_CyzCreateOpen_entry(actual_caller_1: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzCreateOpen_entry"} {:osmodel} SLIC_CyzCreateOpen_entry(actual_caller_1: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_CyzCreateOpen_exit"} {:osmodel} SLIC_CyzCreateOpen_exit(actual_caller_2: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzCreateOpen_exit"} {:osmodel} SLIC_CyzCreateOpen_exit(actual_caller_2: int)
{
  var {:pointer} caller_2: int;

  anon0:
    caller_2 := actual_caller_2;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1566} SLIC_ABORT_26_0(caller_2);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_CyzWrite_entry"} {:osmodel} SLIC_CyzWrite_entry(actual_caller_3: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzWrite_entry"} {:osmodel} SLIC_CyzWrite_entry(actual_caller_3: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_CyzPnpDispatch_exit"} {:osmodel} SLIC_CyzPnpDispatch_exit(actual_caller_4: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzPnpDispatch_exit"} {:osmodel} SLIC_CyzPnpDispatch_exit(actual_caller_4: int)
{
  var {:pointer} caller_4: int;

  anon0:
    caller_4 := actual_caller_4;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1567} SLIC_ABORT_10_0(caller_4);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_5: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_5: int)
{
  var {:pointer} caller_5: int;

  anon0:
    caller_5 := actual_caller_5;
    call {:si_unique_call 1568} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_CyzCleanup_exit"} {:osmodel} SLIC_CyzCleanup_exit(actual_caller_6: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzCleanup_exit"} {:osmodel} SLIC_CyzCleanup_exit(actual_caller_6: int)
{
  var {:pointer} caller_6: int;

  anon0:
    caller_6 := actual_caller_6;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1569} SLIC_ABORT_14_0(caller_6);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_7: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_7: int)
{
  var {:pointer} caller_7: int;

  anon0:
    caller_7 := actual_caller_7;
    call {:si_unique_call 1570} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "_sdv_init21"} {:osmodel} _sdv_init21();
  modifies start_irql, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} start_irql == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init21"} {:osmodel} _sdv_init21()
{

  anon0:
    start_irql := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_CyzFlush_exit"} {:osmodel} SLIC_CyzFlush_exit(actual_caller_8: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzFlush_exit"} {:osmodel} SLIC_CyzFlush_exit(actual_caller_8: int)
{
  var {:pointer} caller_8: int;

  anon0:
    caller_8 := actual_caller_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1571} SLIC_ABORT_18_0(caller_8);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_9: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_9: int)
{
  var {:pointer} caller_9: int;

  anon0:
    caller_9 := actual_caller_9;
    call {:si_unique_call 1572} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_CyzPowerDispatch_entry"} {:osmodel} SLIC_CyzPowerDispatch_entry(actual_caller_10: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzPowerDispatch_entry"} {:osmodel} SLIC_CyzPowerDispatch_entry(actual_caller_10: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_CyzIoControl_entry"} {:osmodel} SLIC_CyzIoControl_entry(actual_caller_11: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzIoControl_entry"} {:osmodel} SLIC_CyzIoControl_entry(actual_caller_11: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_12: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_12: int)
{
  var {:pointer} caller_12: int;

  anon0:
    caller_12 := actual_caller_12;
    call {:si_unique_call 1573} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_ABORT_16_0"} SLIC_ABORT_16_0(actual_caller_13: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_16_0"} SLIC_ABORT_16_0(actual_caller_13: int)
{
  var {:pointer} caller_13: int;

  anon0:
    caller_13 := actual_caller_13;
    call {:si_unique_call 1574} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_14: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_14: int)
{
  var {:pointer} caller_14: int;

  anon0:
    caller_14 := actual_caller_14;
    call {:si_unique_call 1575} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_CyzClose_entry"} {:osmodel} SLIC_CyzClose_entry(actual_caller_15: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzClose_entry"} {:osmodel} SLIC_CyzClose_entry(actual_caller_15: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_CyzFlush_entry"} {:osmodel} SLIC_CyzFlush_entry(actual_caller_16: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzFlush_entry"} {:osmodel} SLIC_CyzFlush_entry(actual_caller_16: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_ABORT_10_0"} SLIC_ABORT_10_0(actual_caller_17: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_10_0"} SLIC_ABORT_10_0(actual_caller_17: int)
{
  var {:pointer} caller_17: int;

  anon0:
    caller_17 := actual_caller_17;
    call {:si_unique_call 1576} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_18: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_18: int)
{
  var {:pointer} caller_18: int;

  anon0:
    caller_18 := actual_caller_18;
    call {:si_unique_call 1577} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_CyzWrite_exit"} {:osmodel} SLIC_CyzWrite_exit(actual_caller_19: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzWrite_exit"} {:osmodel} SLIC_CyzWrite_exit(actual_caller_19: int)
{
  var {:pointer} caller_19: int;

  anon0:
    caller_19 := actual_caller_19;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1578} SLIC_ABORT_20_0(caller_19);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_CyzRead_entry"} {:osmodel} SLIC_CyzRead_entry(actual_caller_20: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzRead_entry"} {:osmodel} SLIC_CyzRead_entry(actual_caller_20: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_ABORT_12_0"} SLIC_ABORT_12_0(actual_caller_21: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_12_0"} SLIC_ABORT_12_0(actual_caller_21: int)
{
  var {:pointer} caller_21: int;

  anon0:
    caller_21 := actual_caller_21;
    call {:si_unique_call 1579} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "SLIC_CyzIoControl_exit"} {:osmodel} SLIC_CyzIoControl_exit(actual_caller_22: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzIoControl_exit"} {:osmodel} SLIC_CyzIoControl_exit(actual_caller_22: int)
{
  var {:pointer} caller_22: int;

  anon0:
    caller_22 := actual_caller_22;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1580} SLIC_ABORT_16_0(caller_22);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_CyzRead_exit"} {:osmodel} SLIC_CyzRead_exit(actual_caller_23: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzRead_exit"} {:osmodel} SLIC_CyzRead_exit(actual_caller_23: int)
{
  var {:pointer} caller_23: int;

  anon0:
    caller_23 := actual_caller_23;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1581} SLIC_ABORT_22_0(caller_23);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_CyzPowerDispatch_exit"} {:osmodel} SLIC_CyzPowerDispatch_exit(actual_caller_24: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzPowerDispatch_exit"} {:osmodel} SLIC_CyzPowerDispatch_exit(actual_caller_24: int)
{
  var {:pointer} caller_24: int;

  anon0:
    caller_24 := actual_caller_24;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1582} SLIC_ABORT_12_0(caller_24);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_CyzCleanup_entry"} {:osmodel} SLIC_CyzCleanup_entry(actual_caller_25: int);
  modifies start_irql;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzCleanup_entry"} {:osmodel} SLIC_CyzCleanup_entry(actual_caller_25: int)
{

  anon0:
    start_irql := sdv_irql_current;
    return;
}



procedure {:origName "SLIC_CyzClose_exit"} {:osmodel} SLIC_CyzClose_exit(actual_caller_26: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_CyzClose_exit"} {:osmodel} SLIC_CyzClose_exit(actual_caller_26: int)
{
  var {:pointer} caller_26: int;

  anon0:
    caller_26 := actual_caller_26;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} start_irql != sdv_irql_current;
    call {:si_unique_call 1583} SLIC_ABORT_24_0(caller_26);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} start_irql == sdv_irql_current;
    goto L2;
}



procedure {:origName "CyzClrRTS"} CyzClrRTS(actual_Context_23: int) returns (Tmp_633: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_633 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClrRTS"} CyzClrRTS(actual_Context_23: int) returns (Tmp_633: int)
{
  var {:pointer} Tmp_634: int;
  var {:scalar} Tmp_635: int;
  var {:pointer} Extension_22: int;
  var {:scalar} Tmp_636: int;
  var {:scalar} rs_3: int;
  var {:pointer} Context_23: int;
  var vslice_dummy_var_394: int;

  anon0:
    Context_23 := actual_Context_23;
    call {:si_unique_call 1584} Tmp_634 := __HAVOC_malloc(124);
    Extension_22 := Context_23;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_635;
    Tmp_634 := strConst__li2bpl173;
    call {:si_unique_call 1585} vslice_dummy_var_394 := CyzDbgPrintEx(13, Tmp_634);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 1586} rs_3 := corral_nondet();
    rs_3 := BAND(rs_3, BNOT(1));
    Tmp_636 := BOR(rs_3, 0);
    call {:si_unique_call 1587} CyzIssueCmd(Extension_22, 4, Tmp_636, 0);
    Tmp_633 := 0;
    return;
}



procedure {:origName "CyzClrDTR"} CyzClrDTR(actual_Context_24: int) returns (Tmp_638: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_638 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClrDTR"} CyzClrDTR(actual_Context_24: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:scalar} Tmp_641: int;
  var {:pointer} Extension_23: int;
  var {:scalar} Tmp_642: int;
  var {:scalar} rs_4: int;
  var {:pointer} Context_24: int;
  var vslice_dummy_var_395: int;

  anon0:
    Context_24 := actual_Context_24;
    call {:si_unique_call 1588} Tmp_639 := __HAVOC_malloc(124);
    Extension_23 := Context_24;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_641;
    Tmp_639 := strConst__li2bpl174;
    call {:si_unique_call 1589} vslice_dummy_var_395 := CyzDbgPrintEx(13, Tmp_639);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1590} rs_4 := corral_nondet();
    rs_4 := BAND(rs_4, BNOT(4));
    Tmp_642 := BOR(rs_4, 0);
    call {:si_unique_call 1591} CyzIssueCmd(Extension_23, 4, Tmp_642, 0);
    Tmp_638 := 0;
    return;
}



procedure {:origName "CyzSetupNewHandFlow"} CyzSetupNewHandFlow(actual_Extension_24: int, actual_NewHandFlow: int) returns (Tmp_643: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_643 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetupNewHandFlow"} CyzSetupNewHandFlow(actual_Extension_24: int, actual_NewHandFlow: int) returns (Tmp_643: int)
{
  var {:scalar} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:scalar} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} Tmp_649: int;
  var {:scalar} New: int;
  var {:scalar} Tmp_650: int;
  var {:pointer} Tmp_651: int;
  var {:scalar} Tmp_652: int;
  var {:scalar} Tmp_653: int;
  var {:scalar} Tmp_654: int;
  var {:scalar} Tmp_655: int;
  var {:scalar} Tmp_656: int;
  var {:scalar} sdv_585: int;
  var {:scalar} Tmp_657: int;
  var {:scalar} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} Tmp_660: int;
  var {:scalar} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:scalar} Tmp_663: int;
  var {:pointer} Tmp_664: int;
  var {:scalar} Tmp_665: int;
  var {:scalar} Tmp_666: int;
  var {:scalar} Tmp_668: int;
  var {:scalar} sdv_602: int;
  var {:scalar} hw: int;
  var {:scalar} Tmp_669: int;
  var {:scalar} Tmp_670: int;
  var {:scalar} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:scalar} Tmp_673: int;
  var {:scalar} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:scalar} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} Tmp_680: int;
  var {:pointer} Extension_24: int;
  var {:pointer} NewHandFlow: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;

  anon0:
    call {:si_unique_call 1592} New := __HAVOC_malloc(16);
    Extension_24 := actual_Extension_24;
    NewHandFlow := actual_NewHandFlow;
    call {:si_unique_call 1593} Tmp_647 := __HAVOC_malloc(152);
    call {:si_unique_call 1594} Tmp_648 := __HAVOC_malloc(200);
    call {:si_unique_call 1595} Tmp_651 := __HAVOC_malloc(200);
    call {:si_unique_call 1596} Tmp_659 := __HAVOC_malloc(228);
    call {:si_unique_call 1597} Tmp_662 := __HAVOC_malloc(200);
    call {:si_unique_call 1598} Tmp_664 := __HAVOC_malloc(196);
    call {:si_unique_call 1599} Tmp_672 := __HAVOC_malloc(84);
    call {:si_unique_call 1600} Tmp_675 := __HAVOC_malloc(200);
    call {:si_unique_call 1601} Tmp_677 := __HAVOC_malloc(196);
    call {:si_unique_call 1602} Tmp_678 := __HAVOC_malloc(200);
    call {:si_unique_call 1603} Tmp_679 := __HAVOC_malloc(200);
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_655;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_660;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} Tmp_655 == Tmp_660;
    goto L13;

  L13:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_680;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_656;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} Tmp_680 == Tmp_656;
    goto L18;

  L18:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_654;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_671;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} Tmp_654 == Tmp_671;
    goto L23;

  L23:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_657;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_646;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Tmp_657 == Tmp_646;
    goto L28;

  L28:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_666;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_658;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Tmp_666 == Tmp_658;
    goto L33;

  L33:
    call {:si_unique_call 1604} CyzIssueCmd(Extension_24, 3, 0, 0);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    Tmp_643 := 0;
    return;

  anon117_Then:
    assume {:partition} Tmp_666 != Tmp_658;
    goto L29;

  L29:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 1605} hw := corral_nondet();
    hw := BOR(hw, 2048);
    goto L49;

  L49:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    call {:si_unique_call 1606} hw := corral_nondet();
    hw := BOR(hw, 512);
    goto L61;

  L61:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    call {:si_unique_call 1607} hw := corral_nondet();
    hw := BOR(hw, 256);
    goto L33;

  anon89_Then:
    call {:si_unique_call 1608} hw := corral_nondet();
    hw := BAND(hw, BNOT(256));
    goto L33;

  anon88_Then:
    call {:si_unique_call 1609} hw := corral_nondet();
    hw := BAND(hw, BNOT(512));
    goto L61;

  anon87_Then:
    call {:si_unique_call 1610} hw := corral_nondet();
    hw := BAND(hw, BNOT(2048));
    goto L49;

  anon86_Then:
    goto L29;

  anon116_Then:
    assume {:partition} Tmp_657 != Tmp_646;
    goto L24;

  L24:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1611} CyzProdXonXoff(Extension_24, 1);
    goto L28;

  anon90_Then:
    goto L28;

  anon85_Then:
    goto L28;

  anon84_Then:
    goto L24;

  anon115_Then:
    assume {:partition} Tmp_654 != Tmp_671;
    goto L19;

  L19:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1612} CyzProdXonXoff(Extension_24, 0);
    goto L23;

  anon92_Then:
    goto L23;

  anon83_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1613} CyzProdXonXoff(Extension_24, 1);
    goto L23;

  anon91_Then:
    goto L23;

  anon82_Then:
    goto L19;

  anon113_Then:
    assume {:partition} Tmp_680 != Tmp_656;
    goto L14;

  L14:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_669;
    Tmp_672 := strConst__li2bpl177;
    call {:si_unique_call 1614} vslice_dummy_var_406 := CyzDbgPrintEx(13, Tmp_672);
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_676;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Tmp_676 == 128;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_644;
    Tmp_651 := strConst__li2bpl178;
    call {:si_unique_call 1615} vslice_dummy_var_407 := CyzDbgPrintEx(13, Tmp_651);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1616} vslice_dummy_var_408 := CyzSetRTS(Extension_24);
    goto L18;

  anon95_Then:
    goto L18;

  anon94_Then:
    call {:si_unique_call 1617} vslice_dummy_var_396 := CyzSetRTS(Extension_24);
    goto L18;

  anon93_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_649;
    Tmp_677 := strConst__li2bpl179;
    call {:si_unique_call 1618} vslice_dummy_var_409 := CyzDbgPrintEx(13, Tmp_677);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1619} vslice_dummy_var_410 := CyzClrRTS(Extension_24);
    goto L18;

  anon114_Then:
    assume {:partition} Tmp_676 != 128;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_653;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} Tmp_653 == 64;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_663;
    Tmp_648 := strConst__li2bpl180;
    call {:si_unique_call 1620} vslice_dummy_var_411 := CyzDbgPrintEx(13, Tmp_648);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L134;

  L134:
    call {:si_unique_call 1621} vslice_dummy_var_397 := CyzSetRTS(Extension_24);
    goto L18;

  anon96_Then:
    goto L134;

  anon118_Then:
    assume {:partition} Tmp_653 != 64;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_645;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Tmp_645 == 192;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_673;
    Tmp_659 := strConst__li2bpl181;
    call {:si_unique_call 1622} vslice_dummy_var_412 := CyzDbgPrintEx(13, Tmp_659);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L145;

  L145:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L156;

  L156:
    call {:si_unique_call 1623} vslice_dummy_var_398 := CyzSetRTS(Extension_24);
    goto L18;

  anon120_Then:
    call {:si_unique_call 1624} sdv_602 := CyzAmountInTxBuffer(Extension_24);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} sdv_602 == 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    call {:si_unique_call 1625} sdv_585 := sdv_IsListEmpty(0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} sdv_585 != 0;
    goto L167;

  L167:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1626} vslice_dummy_var_413 := CyzPerhapsLowerRTS(Extension_24);
    goto L18;

  anon102_Then:
    assume {:partition} sdv_585 == 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto L167;

  anon103_Then:
    goto L156;

  anon101_Then:
    goto L156;

  anon100_Then:
    goto L156;

  anon99_Then:
    assume {:partition} sdv_602 != 0;
    goto L156;

  anon98_Then:
    goto L145;

  anon119_Then:
    assume {:partition} Tmp_645 != 192;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_665;
    Tmp_662 := strConst__li2bpl180;
    call {:si_unique_call 1627} vslice_dummy_var_414 := CyzDbgPrintEx(13, Tmp_662);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L171;

  L171:
    call {:si_unique_call 1628} vslice_dummy_var_399 := CyzClrRTS(Extension_24);
    goto L18;

  anon97_Then:
    goto L171;

  anon81_Then:
    goto L14;

  anon111_Then:
    assume {:partition} Tmp_655 != Tmp_660;
    goto L9;

  L9:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_652;
    Tmp_647 := strConst__li2bpl175;
    call {:si_unique_call 1629} vslice_dummy_var_403 := CyzDbgPrintEx(13, Tmp_647);
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_668;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Tmp_668 == 2;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_674;
    Tmp_678 := strConst__li2bpl176;
    call {:si_unique_call 1630} vslice_dummy_var_404 := CyzDbgPrintEx(13, Tmp_678);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1631} vslice_dummy_var_405 := CyzSetDTR(Extension_24);
    goto L13;

  anon109_Then:
    goto L13;

  anon108_Then:
    call {:si_unique_call 1632} vslice_dummy_var_400 := CyzSetDTR(Extension_24);
    goto L13;

  anon107_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_661;
    Tmp_664 := strConst__li2bpl182;
    call {:si_unique_call 1633} vslice_dummy_var_415 := CyzDbgPrintEx(13, Tmp_664);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1634} vslice_dummy_var_416 := CyzClrDTR(Extension_24);
    goto L13;

  anon112_Then:
    assume {:partition} Tmp_668 != 2;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_670;
    Tmp_675 := strConst__li2bpl183;
    call {:si_unique_call 1635} vslice_dummy_var_417 := CyzDbgPrintEx(13, Tmp_675);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L209;

  L209:
    call {:si_unique_call 1636} vslice_dummy_var_401 := CyzSetDTR(Extension_24);
    goto L13;

  anon106_Then:
    goto L209;

  anon104_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_650;
    Tmp_679 := strConst__li2bpl184;
    call {:si_unique_call 1637} vslice_dummy_var_418 := CyzDbgPrintEx(13, Tmp_679);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L217;

  L217:
    call {:si_unique_call 1638} vslice_dummy_var_402 := CyzClrDTR(Extension_24);
    goto L13;

  anon105_Then:
    goto L217;

  anon110_Then:
    goto L9;
}



procedure {:origName "CyzHandleReducedIntBuffer"} CyzHandleReducedIntBuffer(actual_Extension_25: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzHandleReducedIntBuffer"} CyzHandleReducedIntBuffer(actual_Extension_25: int)
{
  var {:pointer} Extension_25: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;

  anon0:
    call {:si_unique_call 1639} vslice_dummy_var_419 := __HAVOC_malloc(4);
    Extension_25 := actual_Extension_25;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1640} vslice_dummy_var_420 := CyzSetDTR(Extension_25);
    goto L6;

  L6:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1641} vslice_dummy_var_421 := CyzSetRTS(Extension_25);
    goto L11;

  L11:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1642} CyzProdXonXoff(Extension_25, 1);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon14_Then:
    goto L11;

  anon13_Then:
    goto L6;

  anon12_Then:
    goto L1;

  anon11_Then:
    goto L1;
}



procedure {:origName "CyzSetDTR"} CyzSetDTR(actual_Context_25: int) returns (Tmp_683: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_683 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetDTR"} CyzSetDTR(actual_Context_25: int) returns (Tmp_683: int)
{
  var {:scalar} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Extension_26: int;
  var {:scalar} Tmp_687: int;
  var {:scalar} rs_5: int;
  var {:pointer} Context_25: int;
  var vslice_dummy_var_422: int;

  anon0:
    Context_25 := actual_Context_25;
    call {:si_unique_call 1643} Tmp_685 := __HAVOC_malloc(120);
    Extension_26 := Context_25;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_684;
    Tmp_685 := strConst__li2bpl185;
    call {:si_unique_call 1644} vslice_dummy_var_422 := CyzDbgPrintEx(13, Tmp_685);
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    call {:si_unique_call 1645} rs_5 := corral_nondet();
    rs_5 := BOR(rs_5, 4);
    Tmp_687 := BOR(rs_5, 0);
    call {:si_unique_call 1646} CyzIssueCmd(Extension_26, 4, Tmp_687, 0);
    Tmp_683 := 0;
    return;
}



procedure {:origName "CyzProdXonXoff"} CyzProdXonXoff(actual_Extension_27: int, actual_SendXon: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProdXonXoff"} CyzProdXonXoff(actual_Extension_27: int, actual_SendXon: int)
{
  var {:pointer} Extension_27: int;
  var {:scalar} SendXon: int;
  var vslice_dummy_var_423: int;

  anon0:
    call {:si_unique_call 1647} vslice_dummy_var_423 := __HAVOC_malloc(4);
    Extension_27 := actual_Extension_27;
    SendXon := actual_SendXon;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} SendXon != 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} SendXon == 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    goto L1;
}



procedure {:origName "CyzTurnOffBreak"} CyzTurnOffBreak(actual_Context_26: int) returns (Tmp_690: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_690 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTurnOffBreak"} CyzTurnOffBreak(actual_Context_26: int) returns (Tmp_690: int)
{
  var {:pointer} Extension_28: int;
  var {:pointer} Context_26: int;
  var vslice_dummy_var_424: int;

  anon0:
    Context_26 := actual_Context_26;
    Extension_28 := Context_26;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1648} CyzIssueCmd(Extension_28, 68, 0, 0);
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L14;

  L14:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    call {:si_unique_call 1649} vslice_dummy_var_424 := CyzPerhapsLowerRTS(Extension_28);
    goto L7;

  L7:
    Tmp_690 := 0;
    return;

  anon15_Then:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L19;

  L19:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L14;

  anon13_Then:
    goto L7;

  anon11_Then:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L19;

  anon12_Then:
    goto L14;

  anon14_Then:
    goto L7;
}



procedure {:origName "CyzTurnOnBreak"} CyzTurnOnBreak(actual_Context_27: int) returns (Tmp_692: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_692 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTurnOnBreak"} CyzTurnOnBreak(actual_Context_27: int) returns (Tmp_692: int)
{
  var {:scalar} Tmp_694: int;
  var {:pointer} Extension_29: int;
  var {:pointer} Context_27: int;
  var vslice_dummy_var_425: int;

  anon0:
    Context_27 := actual_Context_27;
    Extension_29 := Context_27;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_694;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Tmp_694 == 192;
    call {:si_unique_call 1650} vslice_dummy_var_425 := CyzSetRTS(Extension_29);
    goto L8;

  L8:
    call {:si_unique_call 1651} CyzIssueCmd(Extension_29, 67, 0, 0);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    Tmp_692 := 0;
    return;

  anon3_Then:
    assume {:partition} Tmp_694 != 192;
    goto L8;
}



procedure {:origName "CyzSetRTS"} CyzSetRTS(actual_Context_28: int) returns (Tmp_695: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_695 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetRTS"} CyzSetRTS(actual_Context_28: int) returns (Tmp_695: int)
{
  var {:scalar} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Extension_30: int;
  var {:scalar} Tmp_699: int;
  var {:scalar} rs_6: int;
  var {:pointer} Context_28: int;
  var vslice_dummy_var_426: int;

  anon0:
    Context_28 := actual_Context_28;
    call {:si_unique_call 1652} Tmp_698 := __HAVOC_malloc(120);
    Extension_30 := Context_28;
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    havoc Tmp_699;
    Tmp_698 := strConst__li2bpl186;
    call {:si_unique_call 1653} vslice_dummy_var_426 := CyzDbgPrintEx(13, Tmp_698);
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    call {:si_unique_call 1654} rs_6 := corral_nondet();
    rs_6 := BOR(rs_6, 1);
    Tmp_697 := BOR(rs_6, 0);
    call {:si_unique_call 1655} CyzIssueCmd(Extension_30, 4, Tmp_697, 0);
    Tmp_695 := 0;
    return;
}



procedure {:origName "CyzPretendXoff"} CyzPretendXoff(actual_Context_29: int) returns (Tmp_700: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_700 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPretendXoff"} CyzPretendXoff(actual_Context_29: int) returns (Tmp_700: int)
{
  var {:scalar} Tmp_701: int;
  var {:scalar} sdv_615: int;
  var {:pointer} Extension_31: int;
  var {:pointer} Context_29: int;

  anon0:
    Context_29 := actual_Context_29;
    Extension_31 := Context_29;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_701;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Tmp_701 == 192;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    call {:si_unique_call 1656} sdv_615 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_31), 0, 0, Extension_31);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_615 != 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto L8;

  L8:
    Tmp_700 := 0;
    return;

  anon5_Then:
    assume {:partition} sdv_615 == 0;
    goto L8;

  anon6_Then:
    assume {:partition} Tmp_701 != 192;
    goto L8;
}



procedure {:origName "CyzSetHandFlow"} CyzSetHandFlow(actual_Context_30: int) returns (Tmp_708: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_708 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetHandFlow"} CyzSetHandFlow(actual_Context_30: int) returns (Tmp_708: int)
{
  var {:pointer} S_10: int;
  var {:pointer} HandFlow_1: int;
  var {:pointer} Extension_33: int;
  var {:pointer} Context_30: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;

  anon0:
    Context_30 := actual_Context_30;
    S_10 := Context_30;
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    havoc Extension_33;
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    havoc HandFlow_1;
    call {:si_unique_call 1657} vslice_dummy_var_428 := CyzSetupNewHandFlow(Extension_33, HandFlow_1);
    call {:si_unique_call 1658} vslice_dummy_var_427 := CyzHandleModemUpdate#1(Extension_33, 0, 0);
    Tmp_708 := 0;
    return;
}



procedure {:origName "CyzPretendXon"} CyzPretendXon(actual_Context_31: int) returns (Tmp_710: int);
  free ensures {:va_keep} Tmp_710 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPretendXon"} CyzPretendXon(actual_Context_31: int) returns (Tmp_710: int)
{
  var {:pointer} Extension_34: int;
  var {:pointer} Context_31: int;

  anon0:
    Context_31 := actual_Context_31;
    Extension_34 := Context_31;
    assume {:nonnull} Extension_34 != 0;
    assume Extension_34 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_34 != 0;
    assume Extension_34 > 0;
    goto L6;

  L6:
    Tmp_710 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS(actual_Context_32: int) returns (Tmp_712: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_712 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS(actual_Context_32: int) returns (Tmp_712: int)
{
  var {:scalar} sdv_622: int;
  var {:scalar} sdv_623: int;
  var {:pointer} Extension_35: int;
  var {:scalar} sdv_625: int;
  var {:scalar} Tmp_713: int;
  var {:pointer} Context_32: int;
  var vslice_dummy_var_429: int;

  anon0:
    Context_32 := actual_Context_32;
    Extension_35 := Context_32;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    havoc Tmp_713;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Tmp_713 == 192;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 1659} sdv_622 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_622 != 0;
    goto L16;

  L16:
    call {:si_unique_call 1660} sdv_623 := CyzAmountInTxBuffer(Extension_35);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_623 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    call {:si_unique_call 1661} sdv_625 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_35), 0, 0, Extension_35);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_625 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto L7;

  L7:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    Tmp_712 := 0;
    return;

  anon23_Then:
    assume {:partition} sdv_625 == 0;
    goto L7;

  anon22_Then:
    assume {:partition} sdv_623 == 0;
    call {:si_unique_call 1662} vslice_dummy_var_429 := CyzClrRTS(Extension_35);
    goto L7;

  anon20_Then:
    assume {:partition} sdv_622 == 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L16;

  anon21_Then:
    goto L7;

  anon19_Then:
    goto L7;

  anon18_Then:
    goto L7;

  anon17_Then:
    goto L7;

  anon24_Then:
    assume {:partition} Tmp_713 != 192;
    goto L7;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_430: int;

  anon0:
    call {:si_unique_call 1663} vslice_dummy_var_430 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartPurge"} CyzStartPurge(actual_Extension_36: int) returns (Tmp_717: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_717 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartPurge"} CyzStartPurge(actual_Extension_36: int) returns (Tmp_717: int)
{
  var {:pointer} Tmp_718: int;
  var {:pointer} Tmp_719: int;
  var {:scalar} Mask_2: int;
  var {:pointer} Tmp_720: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} NewIrp_2: int;
  var {:pointer} Tmp_721: int;
  var {:scalar} pollIrql_7: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} Extension_36: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_889: int;
  var vslice_dummy_var_890: int;
  var vslice_dummy_var_891: int;

  anon0:
    call {:si_unique_call 1664} NewIrp_2 := __HAVOC_malloc(4);
    Extension_36 := actual_Extension_36;
    goto L5;

  L5:
    call {:si_unique_call 1665} Tmp_718, Tmp_719, Mask_2, Tmp_720, OldIrql_5, Tmp_721, pollIrql_7, Tmp_722, vslice_dummy_var_431 := CyzStartPurge_loop_L5(Tmp_718, Tmp_719, Mask_2, Tmp_720, OldIrql_5, NewIrp_2, Tmp_721, pollIrql_7, Tmp_722, Extension_36, vslice_dummy_var_431);
    goto L5_last;

  L5_last:
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    Mask_2 := Mem_T.INT4[Tmp_721];
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mask_2, 1) != 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_889;
    call {:si_unique_call 1666} CyzKillAllReadsOrWrites(vslice_dummy_var_889, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_890;
    call {:si_unique_call 1667} CyzKillAllReadsOrWrites(vslice_dummy_var_890, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mask_2, 2) != 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_891;
    call {:si_unique_call 1668} CyzKillAllReadsOrWrites(vslice_dummy_var_891, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(Mask_2, 8) != 0;
    call {:si_unique_call 1669} Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    Mem_T.INT4[Tmp_720] := OldIrql_5;
    call {:si_unique_call 1670} sdv_KeAcquireSpinLock(0, Tmp_720);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    OldIrql_5 := Mem_T.INT4[Tmp_720];
    call {:si_unique_call 1671} Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    Mem_T.INT4[Tmp_720] := pollIrql_7;
    call {:si_unique_call 1672} sdv_KeAcquireSpinLock(0, Tmp_720);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    pollIrql_7 := Mem_T.INT4[Tmp_720];
    call {:si_unique_call 1673} vslice_dummy_var_431 := CyzPurgeInterruptBuff(Extension_36);
    call {:si_unique_call 1674} sdv_KeReleaseSpinLock(0, pollIrql_7);
    call {:si_unique_call 1675} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto L18;

  L18:
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    call {:si_unique_call 1676} CyzGetNextIrp(CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(Extension_36), PurgeQueue__CYZ_DEVICE_EXTENSION(Extension_36), NewIrp_2, 1, Extension_36);
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_717 := 0;
    return;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} BAND(Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(Mask_2, 1) == 0;
    goto L7;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_432: int;

  anon0:
    call {:si_unique_call 1677} vslice_dummy_var_432 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzPurgeInterruptBuff"} CyzPurgeInterruptBuff(actual_Context_33: int) returns (Tmp_725: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_725 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPurgeInterruptBuff"} CyzPurgeInterruptBuff(actual_Context_33: int) returns (Tmp_725: int)
{
  var {:scalar} rx_2: int;
  var {:pointer} Tmp_726: int;
  var {:scalar} rx_3: int;
  var {:scalar} rxchar: int;
  var {:pointer} Extension_37: int;
  var {:scalar} Tmp_729: int;
  var {:pointer} Context_33: int;

  anon0:
    Context_33 := actual_Context_33;
    Extension_37 := Context_33;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    call {:si_unique_call 1678} rx_3 := corral_nondet();
    call {:si_unique_call 1679} rx_2 := corral_nondet();
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L20;

  L20:
    call {:si_unique_call 1680} rx_2, Tmp_726, rxchar, Tmp_729 := CyzPurgeInterruptBuff_loop_L20(rx_2, Tmp_726, rx_3, rxchar, Extension_37, Tmp_729);
    goto L20_last;

  L20_last:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} rx_2 != rx_3;
    Tmp_729 := rx_2;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    havoc Tmp_726;
    call {:si_unique_call 1681} rxchar := corral_nondet();
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    rx_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon17_Else_dummy;

  anon17_Else_dummy:
    assume false;
    return;

  anon17_Then:
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon16_Then:
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon15_Then:
    rx_2 := rx_2 + 1;
    goto L32;

  anon14_Then:
    assume {:partition} rx_2 == rx_3;
    goto L35;

  L35:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    call {:si_unique_call 1682} CyzHandleReducedIntBuffer(Extension_37);
    goto L36;

  L36:
    Tmp_725 := 0;
    return;

  anon18_Then:
    goto L36;

  anon13_Then:
    rx_2 := rx_3;
    goto L35;
}



procedure {:origName "CyzCompleteIfError"} CyzCompleteIfError(actual_DeviceObject_9: int, actual_Irp_9: int) returns (Tmp_730: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_730 == -1073741536 || Tmp_730 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteIfError"} CyzCompleteIfError(actual_DeviceObject_9: int, actual_Irp_9: int) returns (Tmp_730: int)
{
  var {:pointer} irpSp_1: int;
  var {:pointer} Tmp_732: int;
  var {:scalar} status_19: int;
  var {:pointer} extension_10: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_433: int;

  anon0:
    DeviceObject_9 := actual_DeviceObject_9;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 1683} Tmp_732 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc extension_10;
    status_19 := 0;
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1684} irpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L17;

  L17:
    status_19 := -1073741536;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Tmp_732 := strConst__li2bpl3;
    call {:si_unique_call 1685} vslice_dummy_var_433 := CyzDbgPrintEx(9, Tmp_732);
    call {:si_unique_call 1686} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1687} CyzIRPEpilogue(extension_10);
    goto L8;

  L8:
    Tmp_730 := status_19;
    return;

  anon10_Then:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  anon11_Then:
    goto L8;

  anon9_Then:
    goto L8;

  anon12_Then:
    goto L8;
}



procedure {:origName "CyzLogError"} CyzLogError(actual_DriverObject: int, actual_DeviceObject_10: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzLogError"} CyzLogError(actual_DriverObject: int, actual_DeviceObject_10: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int)
{
  var {:scalar} P1: int;
  var {:scalar} P2: int;
  var {:scalar} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:scalar} sdv_632: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} sdv_633: int;
  var {:scalar} dumpToAllocate: int;
  var {:pointer} sdv_634: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_740: int;
  var {:scalar} Tmp_741: int;
  var {:pointer} Tmp_742: int;
  var {:pointer} ptrToFirstInsert: int;
  var {:scalar} Tmp_744: int;
  var {:pointer} DriverObject: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} structPtr888P1: int;
  var {:pointer} structPtr888P2: int;
  var {:scalar} SequenceNumber: int;
  var {:scalar} MajorFunctionCode: int;
  var {:scalar} RetryCount: int;
  var {:scalar} UniqueErrorValue: int;
  var {:scalar} FinalStatus: int;
  var {:scalar} SpecificIOStatus: int;
  var {:scalar} LengthOfInsert1: int;
  var {:pointer} Insert1: int;
  var {:scalar} LengthOfInsert2: int;
  var {:pointer} Insert2: int;
  var vslice_dummy_var_434: int;

  anon0:
    call {:si_unique_call 1688} P1 := __HAVOC_malloc(20);
    call {:si_unique_call 1689} P2 := __HAVOC_malloc(20);
    call {:si_unique_call 1690} Tmp_733 := __HAVOC_malloc(20);
    call {:si_unique_call 1691} vslice_dummy_var_434 := __HAVOC_malloc(4);
    call {:si_unique_call 1692} Tmp_741 := __HAVOC_malloc(20);
    DriverObject := actual_DriverObject;
    DeviceObject_10 := actual_DeviceObject_10;
    structPtr888P1 := actual_structPtr888P1;
    structPtr888P2 := actual_structPtr888P2;
    SequenceNumber := actual_SequenceNumber;
    MajorFunctionCode := actual_MajorFunctionCode;
    RetryCount := actual_RetryCount;
    UniqueErrorValue := actual_UniqueErrorValue;
    FinalStatus := actual_FinalStatus;
    SpecificIOStatus := actual_SpecificIOStatus;
    LengthOfInsert1 := actual_LengthOfInsert1;
    Insert1 := actual_Insert1;
    LengthOfInsert2 := actual_LengthOfInsert2;
    Insert2 := actual_Insert2;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    call {:si_unique_call 1693} Tmp_734 := __HAVOC_malloc(4);
    call {:si_unique_call 1694} Tmp_735 := __HAVOC_malloc(4);
    call {:si_unique_call 1695} Tmp_738 := __HAVOC_malloc(4);
    call {:si_unique_call 1696} Tmp_740 := __HAVOC_malloc(4);
    call {:si_unique_call 1697} Tmp_742 := __HAVOC_malloc(4);
    dumpToAllocate := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Insert1 != 0;
    goto L11;

  L11:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Insert2 != 0;
    goto L13;

  L13:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} DeviceObject_10 != 0;
    goto L16;

  L16:
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    call {:si_unique_call 1698} sdv_632 := CyzMemCompare(P1, 1, Tmp_741, 1);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_632 != 0;
    dumpToAllocate := 8;
    goto L21;

  L21:
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    call {:si_unique_call 1699} sdv_633 := CyzMemCompare(P2, 1, Tmp_733, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_633 != 0;
    dumpToAllocate := dumpToAllocate + 8;
    goto L27;

  L27:
    Tmp_744 := 48 + dumpToAllocate + LengthOfInsert1 + LengthOfInsert2;
    call {:si_unique_call 1700} sdv_634 := IoAllocateErrorLogEntry(0, Tmp_744);
    errorLogEntry := sdv_634;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} errorLogEntry != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} dumpToAllocate != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_738;
    call {:si_unique_call 1701} sdv_RtlCopyMemory(0, 0, 8);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} dumpToAllocate > 8;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_740;
    call {:si_unique_call 1702} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_734;
    ptrToFirstInsert := Tmp_734;
    goto L54;

  L54:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} LengthOfInsert1 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1703} sdv_RtlCopyMemory(0, 0, LengthOfInsert1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} LengthOfInsert2 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1704} sdv_RtlCopyMemory(0, 0, LengthOfInsert2);
    goto L56;

  L56:
    call {:si_unique_call 1705} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} LengthOfInsert2 == 0;
    goto L56;

  anon30_Then:
    assume {:partition} LengthOfInsert1 == 0;
    goto L56;

  anon25_Then:
    assume {:partition} 8 >= dumpToAllocate;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_742;
    ptrToFirstInsert := Tmp_742;
    goto L54;

  anon29_Then:
    assume {:partition} dumpToAllocate == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_735;
    ptrToFirstInsert := Tmp_735;
    goto L54;

  anon28_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_633 == 0;
    goto L27;

  anon23_Then:
    assume {:partition} sdv_632 == 0;
    goto L21;

  anon22_Then:
    assume {:partition} DeviceObject_10 == 0;
    goto L16;

  anon21_Then:
    assume {:partition} Insert2 == 0;
    LengthOfInsert2 := 0;
    goto L13;

  anon27_Then:
    assume {:partition} Insert1 == 0;
    LengthOfInsert1 := 0;
    goto L11;
}



procedure {:origName "CyzUnstallIrps"} CyzUnstallIrps(actual_PDevExt_8: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUnstallIrps"} CyzUnstallIrps(actual_PDevExt_8: int)
{
  var {:pointer} Tmp_745: int;
  var {:pointer} Tmp_746: int;
  var {:pointer} sdv_638: int;
  var {:pointer} Tmp_747: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} pIrpStack_4: int;
  var {:scalar} Tmp_749: int;
  var {:pointer} pIrp_1: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} pDevObj_2: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} pDrvObj_1: int;
  var {:pointer} pIrpLink: int;
  var {:pointer} PDevExt_8: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;

  anon0:
    call {:si_unique_call 1706} vslice_dummy_var_435 := __HAVOC_malloc(4);
    PDevExt_8 := actual_PDevExt_8;
    call {:si_unique_call 1707} Tmp_745 := __HAVOC_malloc(124);
    call {:si_unique_call 1708} Tmp_747 := __HAVOC_malloc(112);
    call {:si_unique_call 1709} Tmp_750 := __HAVOC_malloc(84);
    call {:si_unique_call 1710} Tmp_751 := __HAVOC_malloc(68);
    Tmp_750 := strConst__li2bpl187;
    call {:si_unique_call 1711} vslice_dummy_var_436 := CyzDbgPrintEx(2, Tmp_750);
    call {:si_unique_call 1712} Tmp_746 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    Mem_T.INT4[Tmp_746] := oldIrql_6;
    call {:si_unique_call 1713} IoAcquireCancelSpinLock(Tmp_746);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    oldIrql_6 := Mem_T.INT4[Tmp_746];
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L16;

  L16:
    call {:si_unique_call 1714} Tmp_745, Tmp_746, sdv_638, Tmp_747, oldIrql_6, pIrpStack_4, Tmp_749, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, vslice_dummy_var_437, vslice_dummy_var_438, vslice_dummy_var_439 := CyzUnstallIrps_loop_L16(Tmp_745, Tmp_746, sdv_638, Tmp_747, oldIrql_6, pIrpStack_4, Tmp_749, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, PDevExt_8, vslice_dummy_var_437, vslice_dummy_var_438, vslice_dummy_var_439);
    goto L16_last;

  L16_last:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1715} sdv_638 := sdv_containing_record(pIrpLink, 88);
    pIrp_1 := sdv_638;
    call {:si_unique_call 1716} vslice_dummy_var_437 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1717} pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(pIrp_1);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    havoc pDevObj_2;
    assume {:nonnull} pDevObj_2 != 0;
    assume pDevObj_2 > 0;
    havoc pDrvObj_1;
    call {:si_unique_call 1718} vslice_dummy_var_438 := sdv_IoSetCancelRoutine(pIrp_1, 0);
    call {:si_unique_call 1719} IoReleaseCancelSpinLock(oldIrql_6);
    Tmp_745 := strConst__li2bpl188;
    call {:si_unique_call 1720} vslice_dummy_var_439 := CyzDbgPrintEx(12, Tmp_745);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    havoc Tmp_749;
    assume {:nonnull} pDrvObj_1 != 0;
    assume pDrvObj_1 > 0;
    havoc Tmp_747;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume Tmp_749 != 27;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume Tmp_749 != 26;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Tmp_749 != 25;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume Tmp_749 != 24;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume Tmp_749 != 23;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume Tmp_749 != 22;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume Tmp_749 != 21;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume Tmp_749 != 20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume Tmp_749 != 19;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume Tmp_749 != 18;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume Tmp_749 != 17;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume Tmp_749 != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume Tmp_749 != 15;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume Tmp_749 != 14;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume Tmp_749 != 13;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume Tmp_749 != 12;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume Tmp_749 != 11;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume Tmp_749 != 10;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume Tmp_749 != 9;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume Tmp_749 != 8;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume Tmp_749 != 7;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume Tmp_749 != 6;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume Tmp_749 != 5;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume Tmp_749 != 4;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume Tmp_749 != 3;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume Tmp_749 != 2;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume Tmp_749 != 1;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume false;
    return;

  anon87_Then:
    assume Tmp_749 == 0;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747] == 0;
    goto L45;

  L45:
    call {:si_unique_call 1721} Tmp_746 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    Mem_T.INT4[Tmp_746] := oldIrql_6;
    call {:si_unique_call 1722} IoAcquireCancelSpinLock(Tmp_746);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    oldIrql_6 := Mem_T.INT4[Tmp_746];
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon86_Then:
    assume Tmp_749 == 1;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 1 * 4] == 0;
    goto L45;

  anon85_Then:
    assume Tmp_749 == 2;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 2 * 4] == 0;
    goto L45;

  anon84_Then:
    assume Tmp_749 == 3;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 3 * 4] == 0;
    goto L45;

  anon83_Then:
    assume Tmp_749 == 4;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 4 * 4] == 0;
    goto L45;

  anon82_Then:
    assume Tmp_749 == 5;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 5 * 4] == 0;
    goto L45;

  anon81_Then:
    assume Tmp_749 == 6;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 6 * 4] == 0;
    goto L45;

  anon80_Then:
    assume Tmp_749 == 7;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 7 * 4] == 0;
    goto L45;

  anon79_Then:
    assume Tmp_749 == 8;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 8 * 4] == 0;
    goto L45;

  anon78_Then:
    assume Tmp_749 == 9;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 9 * 4] == 0;
    goto L45;

  anon77_Then:
    assume Tmp_749 == 10;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 10 * 4] == 0;
    goto L45;

  anon76_Then:
    assume Tmp_749 == 11;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 11 * 4] == 0;
    goto L45;

  anon75_Then:
    assume Tmp_749 == 12;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 12 * 4] == 0;
    goto L45;

  anon74_Then:
    assume Tmp_749 == 13;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 13 * 4] == 0;
    goto L45;

  anon73_Then:
    assume Tmp_749 == 14;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 14 * 4] == 0;
    goto L45;

  anon72_Then:
    assume Tmp_749 == 15;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 15 * 4] == 0;
    goto L45;

  anon71_Then:
    assume Tmp_749 == 16;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 16 * 4] == 0;
    goto L45;

  anon70_Then:
    assume Tmp_749 == 17;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 17 * 4] == 0;
    goto L45;

  anon69_Then:
    assume Tmp_749 == 18;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 18 * 4] == 0;
    goto L45;

  anon68_Then:
    assume Tmp_749 == 19;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 19 * 4] == 0;
    goto L45;

  anon67_Then:
    assume Tmp_749 == 20;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 20 * 4] == 0;
    goto L45;

  anon66_Then:
    assume Tmp_749 == 21;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 21 * 4] == 0;
    goto L45;

  anon65_Then:
    assume Tmp_749 == 22;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 22 * 4] == 0;
    goto L45;

  anon64_Then:
    assume Tmp_749 == 23;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 23 * 4] == 0;
    goto L45;

  anon63_Then:
    assume Tmp_749 == 24;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 24 * 4] == 0;
    goto L45;

  anon62_Then:
    assume Tmp_749 == 25;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 25 * 4] == 0;
    goto L45;

  anon61_Then:
    assume Tmp_749 == 26;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 26 * 4] == 0;
    goto L45;

  anon60_Then:
    assume Tmp_749 == 27;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 27 * 4] == 0;
    goto L45;

  anon59_Then:
    call {:si_unique_call 1723} IoReleaseCancelSpinLock(oldIrql_6);
    Tmp_751 := strConst__li2bpl189;
    call {:si_unique_call 1724} vslice_dummy_var_440 := CyzDbgPrintEx(2, Tmp_751);
    return;
}



procedure {:origName "CyzUnlockPages"} CyzUnlockPages(actual_PDpc: int, actual_PDeferredContext: int, actual_PSysContext1: int, actual_PSysContext2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUnlockPages"} CyzUnlockPages(actual_PDpc: int, actual_PDeferredContext: int, actual_PSysContext1: int, actual_PSysContext2: int)
{
  var {:pointer} pDevExt_14: int;
  var {:pointer} PDeferredContext: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;

  anon0:
    call {:si_unique_call 1725} vslice_dummy_var_441 := __HAVOC_malloc(4);
    PDeferredContext := actual_PDeferredContext;
    pDevExt_14 := PDeferredContext;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1726} vslice_dummy_var_442 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(pDevExt_14), 0, 0);
    return;
}



procedure {:origName "CyzDpcEpilogue"} CyzDpcEpilogue(actual_PDevExt_9: int, actual_PDpc_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDpcEpilogue"} CyzDpcEpilogue(actual_PDevExt_9: int, actual_PDpc_1: int)
{
  var {:scalar} pendingCnt: int;
  var {:pointer} Tmp_755: int;
  var {:pointer} PDevExt_9: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_892: int;

  anon0:
    call {:si_unique_call 1727} vslice_dummy_var_443 := __HAVOC_malloc(4);
    PDevExt_9 := actual_PDevExt_9;
    call {:si_unique_call 1728} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc vslice_dummy_var_892;
    Mem_T.INT4[Tmp_755] := vslice_dummy_var_892;
    call {:si_unique_call 1729} pendingCnt := sdv_InterlockedDecrement(Tmp_755);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt == 0;
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    call {:si_unique_call 1730} vslice_dummy_var_444 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_9), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt != 0;
    goto L1;
}



procedure {:origName "CyzSetTimer"} CyzSetTimer(actual_Timer: int, actual_SD2_1: int, actual_Dpc_1: int, actual_PDevExt_10: int) returns (Tmp_756: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_756 == 1 || Tmp_756 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetTimer"} CyzSetTimer(actual_Timer: int, actual_SD2_1: int, actual_Dpc_1: int, actual_PDevExt_10: int) returns (Tmp_756: int)
{
  var {:scalar} DueTime_2: int;
  var {:pointer} Tmp_757: int;
  var {:scalar} set: int;
  var {:pointer} SD2_1: int;
  var {:pointer} PDevExt_10: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_893: int;
  var vslice_dummy_var_894: int;

  anon0:
    call {:si_unique_call 1731} DueTime_2 := __HAVOC_malloc(20);
    SD2_1 := actual_SD2_1;
    PDevExt_10 := actual_PDevExt_10;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    call {:si_unique_call 1732} Tmp_757 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    havoc vslice_dummy_var_893;
    Mem_T.INT4[Tmp_757] := vslice_dummy_var_893;
    call {:si_unique_call 1733} vslice_dummy_var_445 := sdv_InterlockedIncrement(Tmp_757);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    call {:si_unique_call 1734} set := KeSetTimer(0, DueTime_2, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} set != 0;
    call {:si_unique_call 1735} Tmp_757 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    havoc vslice_dummy_var_894;
    Mem_T.INT4[Tmp_757] := vslice_dummy_var_894;
    call {:si_unique_call 1736} vslice_dummy_var_446 := sdv_InterlockedDecrement(Tmp_757);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    goto L12;

  L12:
    Tmp_756 := set;
    return;

  anon3_Then:
    assume {:partition} set == 0;
    goto L12;
}



procedure {:origName "CyzRundownIrpRefs"} CyzRundownIrpRefs(actual_CurrentOpIrp_2: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_11: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRundownIrpRefs"} CyzRundownIrpRefs(actual_CurrentOpIrp_2: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_11: int)
{
  var {:pointer} s_p_e_c_i_a_l_15: int;
  var {:pointer} sdv_654: int;
  var {:pointer} sdv_655: int;
  var {:pointer} s_p_e_c_i_a_l_16: int;
  var {:pointer} Tmp_763: int;
  var {:scalar} s_p_e_c_i_a_l_17: int;
  var {:scalar} sdv_657: int;
  var {:pointer} sdv_658: int;
  var {:scalar} sdv_659: int;
  var {:pointer} s_p_e_c_i_a_l_18: int;
  var {:scalar} s_p_e_c_i_a_l_19: int;
  var {:scalar} s_p_e_c_i_a_l_20: int;
  var {:pointer} CurrentOpIrp_2: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:pointer} PDevExt_11: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_895: int;
  var vslice_dummy_var_896: int;
  var vslice_dummy_var_897: int;
  var vslice_dummy_var_898: int;

  anon0:
    call {:si_unique_call 1737} vslice_dummy_var_447 := __HAVOC_malloc(4);
    CurrentOpIrp_2 := actual_CurrentOpIrp_2;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    PDevExt_11 := actual_PDevExt_11;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_763)] != 0;
    s_p_e_c_i_a_l_17 := 2;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_895;
    call {:si_unique_call 1738} sdv_654 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_895);
    assume {:nonnull} sdv_654 != 0;
    assume sdv_654 > 0;
    s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_654)));
    assume {:nonnull} s_p_e_c_i_a_l_15 != 0;
    assume s_p_e_c_i_a_l_15 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_15] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_15], BNOT(s_p_e_c_i_a_l_17));
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_896;
    call {:si_unique_call 1739} vslice_dummy_var_448 := sdv_IoSetCancelRoutine(vslice_dummy_var_896, 0);
    goto L4;

  L4:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IntervalTimer_1 != 0;
    call {:si_unique_call 1740} sdv_657 := CyzCancelTimer(IntervalTimer_1, PDevExt_11);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_657 != 0;
    s_p_e_c_i_a_l_19 := 8;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_897;
    call {:si_unique_call 1741} sdv_658 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_897);
    assume {:nonnull} sdv_658 != 0;
    assume sdv_658 > 0;
    s_p_e_c_i_a_l_18 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_658)));
    assume {:nonnull} s_p_e_c_i_a_l_18 != 0;
    assume s_p_e_c_i_a_l_18 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_18] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_18], BNOT(s_p_e_c_i_a_l_19));
    goto L16;

  L16:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TotalTimer_1 != 0;
    call {:si_unique_call 1742} sdv_659 := CyzCancelTimer(TotalTimer_1, PDevExt_11);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_659 != 0;
    s_p_e_c_i_a_l_20 := 4;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_898;
    call {:si_unique_call 1743} sdv_655 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_898);
    assume {:nonnull} sdv_655 != 0;
    assume sdv_655 > 0;
    s_p_e_c_i_a_l_16 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_655)));
    assume {:nonnull} s_p_e_c_i_a_l_16 != 0;
    assume s_p_e_c_i_a_l_16 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_16] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_16], BNOT(s_p_e_c_i_a_l_20));
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} sdv_659 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} TotalTimer_1 == 0;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_657 == 0;
    goto L16;

  anon11_Then:
    assume {:partition} IntervalTimer_1 == 0;
    goto L16;

  anon15_Then:
    assume {:partition} Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_763)] == 0;
    goto L4;
}



procedure {:origName "CyzIRPEpilogue"} CyzIRPEpilogue(actual_PDevExt_12: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIRPEpilogue"} CyzIRPEpilogue(actual_PDevExt_12: int)
{
  var {:pointer} Tmp_766: int;
  var {:scalar} pendingCnt_1: int;
  var {:pointer} PDevExt_12: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_899: int;

  anon0:
    call {:si_unique_call 1744} vslice_dummy_var_449 := __HAVOC_malloc(4);
    PDevExt_12 := actual_PDevExt_12;
    call {:si_unique_call 1745} Tmp_766 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    havoc vslice_dummy_var_899;
    Mem_T.INT4[Tmp_766] := vslice_dummy_var_899;
    call {:si_unique_call 1746} pendingCnt_1 := sdv_InterlockedDecrement(Tmp_766);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt_1 == 0;
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    call {:si_unique_call 1747} vslice_dummy_var_450 := KeSetEvent(PendingIRPEvent__CYZ_DEVICE_EXTENSION(PDevExt_12), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt_1 != 0;
    goto L1;
}



procedure {:origName "CyzCancelQueued"} CyzCancelQueued(actual_DeviceObject_11: int, actual_Irp_10: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelQueued"} CyzCancelQueued(actual_DeviceObject_11: int, actual_Irp_10: int)
{
  var {:pointer} irpSp_2: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} extension_11: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;

  anon0:
    call {:si_unique_call 1748} vslice_dummy_var_451 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_10 := actual_Irp_10;
    call {:si_unique_call 1749} Tmp_768 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    havoc extension_11;
    call {:si_unique_call 1750} irpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1751} vslice_dummy_var_452 := sdv_RemoveEntryList(0);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} extension_11 != 0;
    assume extension_11 > 0;
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto L18;

  L18:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1752} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_10)]);
    Tmp_768 := strConst__li2bpl3;
    call {:si_unique_call 1753} vslice_dummy_var_453 := CyzDbgPrintEx(9, Tmp_768);
    call {:si_unique_call 1754} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1755} CyzIRPEpilogue(extension_11);
    return;

  anon11_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L32;

  L32:
    assume {:nonnull} extension_11 != 0;
    assume extension_11 > 0;
    goto L18;

  anon13_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1756} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto L18;

  anon15_Then:
    goto L18;

  anon14_Then:
    goto L32;

  anon12_Then:
    goto L18;
}



procedure {:origName "CyzIRPPrologue"} CyzIRPPrologue(actual_PIrp_4: int, actual_PDevExt_13: int) returns (Tmp_771: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_771 == 0 || Tmp_771 == -1073741536 || Tmp_771 == 259 || Tmp_771 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIRPPrologue"} CyzIRPPrologue(actual_PIrp_4: int, actual_PDevExt_13: int) returns (Tmp_771: int)
{
  var {:pointer} Tmp_772: int;
  var {:pointer} PIrp_4: int;
  var {:pointer} PDevExt_13: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_900: int;

  anon0:
    PIrp_4 := actual_PIrp_4;
    PDevExt_13 := actual_PDevExt_13;
    call {:si_unique_call 1757} Tmp_772 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    havoc vslice_dummy_var_900;
    Mem_T.INT4[Tmp_772] := vslice_dummy_var_900;
    call {:si_unique_call 1758} vslice_dummy_var_454 := sdv_InterlockedIncrement(Tmp_772);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    call {:si_unique_call 1759} Tmp_771 := CyzFilterIrps(PIrp_4, PDevExt_13);
    return;
}



procedure {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites(actual_DeviceObject_12: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites(actual_DeviceObject_12: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int)
{
  var {:pointer} currentLastIrp: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} Tmp_773: int;
  var {:scalar} sdv_667: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} sdv_668: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} Tmp_776: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_3: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_901: int;
  var vslice_dummy_var_902: int;
  var vslice_dummy_var_903: int;
  var vslice_dummy_var_904: int;
  var vslice_dummy_var_905: int;
  var vslice_dummy_var_906: int;
  var vslice_dummy_var_907: int;
  var vslice_dummy_var_908: int;

  anon0:
    call {:si_unique_call 1760} vslice_dummy_var_455 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    call {:si_unique_call 1761} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := cancelIrql;
    call {:si_unique_call 1762} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    cancelIrql := Mem_T.INT4[Tmp_776];
    goto L8;

  L8:
    call {:si_unique_call 1763} currentLastIrp, cancelIrql, sdv_667, sdv_668, cancelRoutine_1, Tmp_776, vslice_dummy_var_456 := CyzKillAllReadsOrWrites_loop_L8(currentLastIrp, cancelIrql, sdv_667, sdv_668, cancelRoutine_1, Tmp_776, DeviceObject_12, QueueToClean, vslice_dummy_var_456);
    goto L8_last;

  L8_last:
    call {:si_unique_call 1784} sdv_667 := sdv_IsListEmpty(0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_667 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_901;
    call {:si_unique_call 1764} sdv_668 := sdv_containing_record(vslice_dummy_var_901, 88);
    currentLastIrp := sdv_668;
    call {:si_unique_call 1765} vslice_dummy_var_456 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    cancelRoutine_1 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp)];
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp)] := cancelIrql;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp)] := 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 1766} CyzCancelCurrentRead(DeviceObject_12, currentLastIrp);
    goto L42;

  L42:
    call {:si_unique_call 1767} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := cancelIrql;
    call {:si_unique_call 1768} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    cancelIrql := Mem_T.INT4[Tmp_776];
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 1769} CyzCancelCurrentWrite(DeviceObject_12, currentLastIrp);
    goto L42;

  anon41_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 1770} CyzCancelCurrentXoff(DeviceObject_12, currentLastIrp);
    goto L42;

  anon40_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 1771} CyzCancelImmediate(DeviceObject_12, currentLastIrp);
    goto L42;

  anon39_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 1772} CyzCancelQueued(DeviceObject_12, currentLastIrp);
    goto L42;

  anon38_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 1773} CyzCancelWait(DeviceObject_12, currentLastIrp);
    goto L42;

  anon45_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 1774} CyzFilterCancelQueued(DeviceObject_12, currentLastIrp);
    goto L42;

  anon31_Then:
    assume {:partition} sdv_667 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    cancelRoutine_1 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_777)];
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_773;
    assume {:nonnull} Tmp_773 != 0;
    assume Tmp_773 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} cancelRoutine_1 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_774)] := 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_778;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_778)] := cancelIrql;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_902;
    call {:si_unique_call 1775} CyzCancelCurrentRead(DeviceObject_12, vslice_dummy_var_902);
    goto L1;

  L1:
    return;

  anon37_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_903;
    call {:si_unique_call 1776} CyzCancelCurrentWrite(DeviceObject_12, vslice_dummy_var_903);
    goto L1;

  anon36_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_904;
    call {:si_unique_call 1777} CyzCancelCurrentXoff(DeviceObject_12, vslice_dummy_var_904);
    goto L1;

  anon35_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_905;
    call {:si_unique_call 1778} CyzCancelImmediate(DeviceObject_12, vslice_dummy_var_905);
    goto L1;

  anon34_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_906;
    call {:si_unique_call 1779} CyzCancelQueued(DeviceObject_12, vslice_dummy_var_906);
    goto L1;

  anon33_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_907;
    call {:si_unique_call 1780} CyzCancelWait(DeviceObject_12, vslice_dummy_var_907);
    goto L1;

  anon44_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_908;
    call {:si_unique_call 1781} CyzFilterCancelQueued(DeviceObject_12, vslice_dummy_var_908);
    goto L1;

  anon43_Then:
    assume {:partition} cancelRoutine_1 == 0;
    call {:si_unique_call 1782} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;

  anon32_Then:
    call {:si_unique_call 1783} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;
}



procedure {:origName "CyzGetNextIrp"} CyzGetNextIrp(actual_CurrentOpIrp_4: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_12: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextIrp"} CyzGetNextIrp(actual_CurrentOpIrp_4: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_12: int)
{
  var {:pointer} Tmp_780: int;
  var {:scalar} oldIrql_7: int;
  var {:pointer} CurrentOpIrp_4: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} NextIrp: int;
  var {:scalar} CompleteCurrent_1: int;
  var {:pointer} extension_12: int;
  var vslice_dummy_var_457: int;

  anon0:
    call {:si_unique_call 1785} vslice_dummy_var_457 := __HAVOC_malloc(4);
    CurrentOpIrp_4 := actual_CurrentOpIrp_4;
    QueueToProcess_2 := actual_QueueToProcess_2;
    NextIrp := actual_NextIrp;
    CompleteCurrent_1 := actual_CompleteCurrent_1;
    extension_12 := actual_extension_12;
    call {:si_unique_call 1786} Tmp_780 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    Mem_T.INT4[Tmp_780] := oldIrql_7;
    call {:si_unique_call 1787} IoAcquireCancelSpinLock(Tmp_780);
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    oldIrql_7 := Mem_T.INT4[Tmp_780];
    call {:si_unique_call 1788} CyzGetNextIrpLocked(CurrentOpIrp_4, QueueToProcess_2, NextIrp, CompleteCurrent_1, extension_12, oldIrql_7);
    return;
}



procedure {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc(actual_PDpc_2: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_14: int) returns (Tmp_781: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_781 == 0 || Tmp_781 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc(actual_PDpc_2: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_14: int) returns (Tmp_781: int)
{
  var {:scalar} sdv_672: int;
  var {:pointer} Tmp_782: int;
  var {:scalar} pendingCnt_2: int;
  var {:scalar} queued: int;
  var {:pointer} PDpc_2: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_909: int;
  var vslice_dummy_var_910: int;

  anon0:
    PDpc_2 := actual_PDpc_2;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 1789} Tmp_782 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc vslice_dummy_var_909;
    Mem_T.INT4[Tmp_782] := vslice_dummy_var_909;
    call {:si_unique_call 1790} vslice_dummy_var_459 := sdv_InterlockedIncrement(Tmp_782);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    call {:si_unique_call 1791} queued := KeInsertQueueDpc(PDpc_2, 0, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} queued == 0;
    call {:si_unique_call 1792} Tmp_782 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc vslice_dummy_var_910;
    Mem_T.INT4[Tmp_782] := vslice_dummy_var_910;
    call {:si_unique_call 1793} sdv_672 := sdv_InterlockedDecrement(Tmp_782);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    pendingCnt_2 := sdv_672;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pendingCnt_2 == 0;
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    call {:si_unique_call 1794} vslice_dummy_var_458 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_14), 0, 0);
    goto L13;

  L13:
    Tmp_781 := queued;
    return;

  anon6_Then:
    assume {:partition} pendingCnt_2 != 0;
    goto L13;

  anon5_Then:
    assume {:partition} queued != 0;
    goto L13;
}



procedure {:origName "CyzFilterIrps"} CyzFilterIrps(actual_PIrp_5: int, actual_PDevExt_15: int) returns (Tmp_783: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_783 == 0 || Tmp_783 == -1073741536 || Tmp_783 == 259 || Tmp_783 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFilterIrps"} CyzFilterIrps(actual_PIrp_5: int, actual_PDevExt_15: int) returns (Tmp_783: int)
{
  var {:scalar} oldIrqlFlags: int;
  var {:scalar} oldIrql_8: int;
  var {:pointer} pIrpStack_5: int;
  var {:pointer} Tmp_784: int;
  var {:pointer} PIrp_5: int;
  var {:pointer} PDevExt_15: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;

  anon0:
    PIrp_5 := actual_PIrp_5;
    PDevExt_15 := actual_PDevExt_15;
    call {:si_unique_call 1795} pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(PIrp_5);
    call {:si_unique_call 1796} Tmp_784 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    Mem_T.INT4[Tmp_784] := oldIrqlFlags;
    call {:si_unique_call 1797} sdv_KeAcquireSpinLock(0, Tmp_784);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    oldIrqlFlags := Mem_T.INT4[Tmp_784];
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)] != 0;
    goto L14;

  L14:
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 1) != 0;
    goto L16;

  L16:
    call {:si_unique_call 1798} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_783 := 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_783 := -1073741738;
    goto L1;

  anon21_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 1) == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 8) == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 2) != 0;
    call {:si_unique_call 1799} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_783 := 0;
    goto L1;

  anon26_Then:
    call {:si_unique_call 1800} Tmp_784 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    Mem_T.INT4[Tmp_784] := oldIrql_8;
    call {:si_unique_call 1801} IoAcquireCancelSpinLock(Tmp_784);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    oldIrql_8 := Mem_T.INT4[Tmp_784];
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 1802} IoReleaseCancelSpinLock(oldIrql_8);
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_783 := -1073741536;
    goto L1;

  anon27_Then:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    call {:si_unique_call 1803} sdv_IoMarkIrpPending(0);
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    call {:si_unique_call 1804} vslice_dummy_var_460 := sdv_InsertTailList(StalledIrpQueue__CYZ_DEVICE_EXTENSION(PDevExt_15), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(PIrp_5))));
    call {:si_unique_call 1805} vslice_dummy_var_461 := sdv_IoSetCancelRoutine(PIrp_5, li2bplFunctionConstant151);
    call {:si_unique_call 1806} IoReleaseCancelSpinLock(oldIrql_8);
    Tmp_783 := 259;
    goto L1;

  anon25_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 2) == 0;
    call {:si_unique_call 1807} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_783 := 0;
    goto L1;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 8) != 0;
    goto L16;

  anon22_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) != 0;
    goto L16;

  anon19_Then:
    assume {:partition} Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)] == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) == 0;
    call {:si_unique_call 1808} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_783 := 0;
    goto L1;

  anon20_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) != 0;
    goto L14;
}



procedure {:origName "CyzStartOrQueue"} CyzStartOrQueue(actual_Extension_39: int, actual_Irp_11: int, actual_QueueToExamine: int, actual_CurrentOpIrp_5: int, actual_Starter_1: int) returns (Tmp_785: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartOrQueue"} CyzStartOrQueue(actual_Extension_39: int, actual_Irp_11: int, actual_QueueToExamine: int, actual_CurrentOpIrp_5: int, actual_Starter_1: int) returns (Tmp_785: int)
{
  var {:pointer} Tmp_786: int;
  var {:pointer} irpSp_3: int;
  var {:pointer} sdv_676: int;
  var {:pointer} Tmp_787: int;
  var {:pointer} sdv_678: int;
  var {:pointer} sdv_680: int;
  var {:scalar} oldIrql_9: int;
  var {:pointer} sdv_681: int;
  var {:scalar} sdv_682: int;
  var {:pointer} sdv_685: int;
  var {:pointer} Extension_39: int;
  var {:pointer} Irp_11: int;
  var {:pointer} QueueToExamine: int;
  var {:pointer} CurrentOpIrp_5: int;
  var {:scalar} Starter_1: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;

  anon0:
    Extension_39 := actual_Extension_39;
    Irp_11 := actual_Irp_11;
    QueueToExamine := actual_QueueToExamine;
    CurrentOpIrp_5 := actual_CurrentOpIrp_5;
    Starter_1 := actual_Starter_1;
    call {:si_unique_call 1809} Tmp_787 := __HAVOC_malloc(72);
    call {:si_unique_call 1810} Tmp_786 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    Mem_T.INT4[Tmp_786] := oldIrql_9;
    call {:si_unique_call 1811} IoAcquireCancelSpinLock(Tmp_786);
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    oldIrql_9 := Mem_T.INT4[Tmp_786];
    call {:si_unique_call 1812} sdv_676 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_676 != 0;
    assume sdv_676 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 1813} sdv_681 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} Extension_39 != 0;
    assume Extension_39 > 0;
    assume {:nonnull} sdv_681 != 0;
    assume sdv_681 > 0;
    goto L18;

  L18:
    call {:si_unique_call 1814} sdv_682 := sdv_IsListEmpty(0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_682 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    call {:si_unique_call 1815} IoReleaseCancelSpinLock(oldIrql_9);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant131;
    call {:si_unique_call 1816} Tmp_785 := CyzStartFlush(Extension_39);
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant177;
    call {:si_unique_call 1817} Tmp_785 := CyzStartMask(Extension_39);
    goto L1;

  anon35_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant380;
    call {:si_unique_call 1818} Tmp_785 := CyzStartPurge(Extension_39);
    goto L1;

  anon34_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant381;
    call {:si_unique_call 1819} Tmp_785 := CyzStartRead(Extension_39);
    goto L1;

  anon29_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 1820} Tmp_785 := CyzStartWrite#1(Extension_39);
    goto L1;

  anon28_Then:
    goto L22;

  L22:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 1821} irpSp_3 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    call {:si_unique_call 1822} IoReleaseCancelSpinLock(oldIrql_9);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1823} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto L42;

  L42:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Tmp_787 := strConst__li2bpl3;
    call {:si_unique_call 1824} vslice_dummy_var_464 := CyzDbgPrintEx(9, Tmp_787);
    call {:si_unique_call 1825} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1826} CyzIRPEpilogue(Extension_39);
    Tmp_785 := -1073741536;
    goto L1;

  anon30_Then:
    goto L42;

  anon27_Then:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 1827} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 1828} vslice_dummy_var_462 := sdv_InsertTailList(QueueToExamine, ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_11))));
    call {:si_unique_call 1829} vslice_dummy_var_463 := sdv_IoSetCancelRoutine(Irp_11, li2bplFunctionConstant149);
    call {:si_unique_call 1830} IoReleaseCancelSpinLock(oldIrql_9);
    Tmp_785 := 259;
    goto L1;

  anon26_Then:
    assume {:partition} sdv_682 == 0;
    goto L22;

  anon25_Then:
    call {:si_unique_call 1831} sdv_680 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_680 != 0;
    assume sdv_680 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1832} sdv_678 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_678 != 0;
    assume sdv_678 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L78;

  L78:
    assume {:nonnull} Extension_39 != 0;
    assume Extension_39 > 0;
    goto L18;

  anon32_Then:
    call {:si_unique_call 1833} sdv_685 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_685 != 0;
    assume sdv_685 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L78;

  anon33_Then:
    goto L18;

  anon31_Then:
    goto L18;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_465: int;

  anon0:
    call {:si_unique_call 1834} vslice_dummy_var_465 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCancelTimer"} CyzCancelTimer(actual_Timer_1: int, actual_PDevExt_16: int) returns (Tmp_790: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_790 == 1 || Tmp_790 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelTimer"} CyzCancelTimer(actual_Timer_1: int, actual_PDevExt_16: int) returns (Tmp_790: int)
{
  var {:scalar} cancelled_2: int;
  var {:pointer} Timer_1: int;
  var {:pointer} PDevExt_16: int;
  var vslice_dummy_var_911: int;

  anon0:
    Timer_1 := actual_Timer_1;
    PDevExt_16 := actual_PDevExt_16;
    call {:si_unique_call 1835} cancelled_2 := KeCancelTimer(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cancelled_2 != 0;
    assume {:nonnull} Timer_1 != 0;
    assume Timer_1 > 0;
    havoc vslice_dummy_var_911;
    call {:si_unique_call 1836} CyzDpcEpilogue(PDevExt_16, vslice_dummy_var_911);
    goto L9;

  L9:
    Tmp_790 := cancelled_2;
    return;

  anon3_Then:
    assume {:partition} cancelled_2 == 0;
    goto L9;
}



procedure {:origName "CyzIoCallDriver"} CyzIoCallDriver(actual_PDevExt_17: int, actual_PDevObj_14: int, actual_PIrp_6: int) returns (Tmp_792: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_792 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIoCallDriver"} CyzIoCallDriver(actual_PDevExt_17: int, actual_PDevObj_14: int, actual_PIrp_6: int) returns (Tmp_792: int)
{
  var {:scalar} status_20: int;
  var {:pointer} PDevExt_17: int;
  var {:pointer} PDevObj_14: int;
  var {:pointer} PIrp_6: int;

  anon0:
    PDevExt_17 := actual_PDevExt_17;
    PDevObj_14 := actual_PDevObj_14;
    PIrp_6 := actual_PIrp_6;
    call {:si_unique_call 1837} status_20 := sdv_IoCallDriver(PDevObj_14, PIrp_6);
    call {:si_unique_call 1838} CyzIRPEpilogue(PDevExt_17);
    Tmp_792 := status_20;
    return;
}



procedure {:origName "CyzSetDeviceFlags"} CyzSetDeviceFlags(actual_PDevExt_18: int, actual_PFlags: int, actual_Value: int, actual_Set: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetDeviceFlags"} CyzSetDeviceFlags(actual_PDevExt_18: int, actual_PFlags: int, actual_Value: int, actual_Set: int)
{
  var {:scalar} oldIrql_10: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} PFlags: int;
  var {:scalar} Value: int;
  var {:scalar} Set: int;
  var vslice_dummy_var_466: int;

  anon0:
    call {:si_unique_call 1839} vslice_dummy_var_466 := __HAVOC_malloc(4);
    PFlags := actual_PFlags;
    Value := actual_Value;
    Set := actual_Set;
    call {:si_unique_call 1840} Tmp_794 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    Mem_T.INT4[Tmp_794] := oldIrql_10;
    call {:si_unique_call 1841} sdv_KeAcquireSpinLock(0, Tmp_794);
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    oldIrql_10 := Mem_T.INT4[Tmp_794];
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Set != 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    Mem_T.INT4[PFlags] := BOR(Mem_T.INT4[PFlags], Value);
    goto L10;

  L10:
    call {:si_unique_call 1842} sdv_KeReleaseSpinLock(0, oldIrql_10);
    return;

  anon3_Then:
    assume {:partition} Set == 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    Mem_T.INT4[PFlags] := BAND(Mem_T.INT4[PFlags], BNOT(Value));
    goto L10;
}



procedure {:origName "CyzKillAllStalled"} CyzKillAllStalled(actual_PDevObj_15: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillAllStalled"} CyzKillAllStalled(actual_PDevObj_15: int)
{
  var {:pointer} currentLastIrp_1: int;
  var {:pointer} Tmp_796: int;
  var {:scalar} cancelIrql_1: int;
  var {:pointer} pDevExt_15: int;
  var {:scalar} sdv_688: int;
  var {:pointer} sdv_689: int;
  var {:scalar} cancelRoutine_2: int;
  var {:pointer} PDevObj_15: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_912: int;

  anon0:
    call {:si_unique_call 1843} vslice_dummy_var_467 := __HAVOC_malloc(4);
    PDevObj_15 := actual_PDevObj_15;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    havoc pDevExt_15;
    call {:si_unique_call 1844} Tmp_796 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    Mem_T.INT4[Tmp_796] := cancelIrql_1;
    call {:si_unique_call 1845} IoAcquireCancelSpinLock(Tmp_796);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    cancelIrql_1 := Mem_T.INT4[Tmp_796];
    goto L10;

  L10:
    call {:si_unique_call 1846} currentLastIrp_1, Tmp_796, cancelIrql_1, sdv_688, sdv_689, cancelRoutine_2, vslice_dummy_var_468 := CyzKillAllStalled_loop_L10(currentLastIrp_1, Tmp_796, cancelIrql_1, pDevExt_15, sdv_688, sdv_689, cancelRoutine_2, PDevObj_15, vslice_dummy_var_468);
    goto L10_last;

  L10_last:
    call {:si_unique_call 1859} sdv_688 := sdv_IsListEmpty(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_688 == 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_912;
    call {:si_unique_call 1847} sdv_689 := sdv_containing_record(vslice_dummy_var_912, 88);
    currentLastIrp_1 := sdv_689;
    call {:si_unique_call 1848} vslice_dummy_var_468 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    cancelRoutine_2 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp_1)];
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp_1)] := cancelIrql_1;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp_1)] := 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant456;
    call {:si_unique_call 1849} CyzCancelCurrentRead(PDevObj_15, currentLastIrp_1);
    goto L32;

  L32:
    call {:si_unique_call 1850} Tmp_796 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    Mem_T.INT4[Tmp_796] := cancelIrql_1;
    call {:si_unique_call 1851} IoAcquireCancelSpinLock(Tmp_796);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    cancelIrql_1 := Mem_T.INT4[Tmp_796];
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon20_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 1852} CyzCancelCurrentWrite(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon19_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant198;
    call {:si_unique_call 1853} CyzCancelCurrentXoff(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon18_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant312;
    call {:si_unique_call 1854} CyzCancelImmediate(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon17_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 1855} CyzCancelQueued(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon16_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant178;
    call {:si_unique_call 1856} CyzCancelWait(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon21_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 1857} CyzFilterCancelQueued(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon15_Then:
    assume {:partition} sdv_688 != 0;
    call {:si_unique_call 1858} IoReleaseCancelSpinLock(cancelIrql_1);
    return;
}



procedure {:origName "CyzFilterCancelQueued"} CyzFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_7: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFilterCancelQueued"} CyzFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_7: int)
{
  var {:pointer} PDevObj_16: int;
  var {:pointer} PIrp_7: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;

  anon0:
    call {:si_unique_call 1860} vslice_dummy_var_469 := __HAVOC_malloc(4);
    PDevObj_16 := actual_PDevObj_16;
    PIrp_7 := actual_PIrp_7;
    assume {:nonnull} PDevObj_16 != 0;
    assume PDevObj_16 > 0;
    call {:si_unique_call 1861} vslice_dummy_var_470 := sdv_IoGetCurrentIrpStackLocation(PIrp_7);
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    call {:si_unique_call 1862} vslice_dummy_var_471 := sdv_RemoveEntryList(0);
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    call {:si_unique_call 1863} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(PIrp_7)]);
    return;
}



procedure {:origName "CyzGetNextIrpLocked"} CyzGetNextIrpLocked(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_13: int, actual_OldIrql_6: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_OldIrql_6;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextIrpLocked"} CyzGetNextIrpLocked(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_13: int, actual_OldIrql_6: int)
{
  var {:scalar} sdv_693: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} sdv_697: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} headOfList: int;
  var {:pointer} CurrentOpIrp_6: int;
  var {:pointer} QueueToProcess_3: int;
  var {:pointer} NextIrp_1: int;
  var {:scalar} CompleteCurrent_2: int;
  var {:pointer} extension_13: int;
  var {:scalar} OldIrql_6: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_913: int;

  anon0:
    call {:si_unique_call 1864} vslice_dummy_var_472 := __HAVOC_malloc(4);
    CurrentOpIrp_6 := actual_CurrentOpIrp_6;
    QueueToProcess_3 := actual_QueueToProcess_3;
    NextIrp_1 := actual_NextIrp_1;
    CompleteCurrent_2 := actual_CompleteCurrent_2;
    extension_13 := actual_extension_13;
    OldIrql_6 := actual_OldIrql_6;
    call {:si_unique_call 1865} Tmp_801 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    havoc oldIrp_1;
    call {:si_unique_call 1866} sdv_693 := sdv_IsListEmpty(0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_693 == 0;
    call {:si_unique_call 1867} headOfList := RemoveHeadList(QueueToProcess_3);
    call {:si_unique_call 1868} sdv_697 := sdv_containing_record(headOfList, 88);
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    havoc vslice_dummy_var_913;
    call {:si_unique_call 1869} vslice_dummy_var_474 := sdv_IoSetCancelRoutine(vslice_dummy_var_913, 0);
    goto L11;

  L11:
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    assume {:nonnull} NextIrp_1 != 0;
    assume NextIrp_1 > 0;
    call {:si_unique_call 1870} IoReleaseCancelSpinLock(OldIrql_6);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} CompleteCurrent_2 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldIrp_1 != 0;
    Tmp_801 := strConst__li2bpl3;
    call {:si_unique_call 1871} vslice_dummy_var_473 := CyzDbgPrintEx(9, Tmp_801);
    call {:si_unique_call 1872} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1873} CyzIRPEpilogue(extension_13);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} oldIrp_1 == 0;
    goto L1;

  anon8_Then:
    assume {:partition} CompleteCurrent_2 == 0;
    goto L1;

  anon7_Then:
    assume {:partition} sdv_693 != 0;
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    goto L11;
}



procedure {:origName "CyzPoCallDriver"} CyzPoCallDriver(actual_PDevExt_19: int, actual_PDevObj_17: int, actual_PIrp_8: int) returns (Tmp_803: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_803 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPoCallDriver"} CyzPoCallDriver(actual_PDevExt_19: int, actual_PDevObj_17: int, actual_PIrp_8: int) returns (Tmp_803: int)
{
  var {:scalar} status_21: int;
  var {:pointer} PDevExt_19: int;
  var {:pointer} PIrp_8: int;

  anon0:
    PDevExt_19 := actual_PDevExt_19;
    PIrp_8 := actual_PIrp_8;
    call {:si_unique_call 1874} status_21 := PoCallDriver(0, PIrp_8);
    call {:si_unique_call 1875} CyzIRPEpilogue(PDevExt_19);
    Tmp_803 := status_21;
    return;
}



procedure {:origName "CyzTimeoutXoff"} CyzTimeoutXoff(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTimeoutXoff"} CyzTimeoutXoff(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int)
{
  var {:pointer} Tmp_805: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} Extension_40: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Dpc_2: int;
  var {:pointer} DeferredContext_1: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;

  anon0:
    call {:si_unique_call 1876} vslice_dummy_var_475 := __HAVOC_malloc(4);
    Dpc_2 := actual_Dpc_2;
    DeferredContext_1 := actual_DeferredContext_1;
    call {:si_unique_call 1877} Tmp_805 := __HAVOC_malloc(84);
    call {:si_unique_call 1878} Tmp_808 := __HAVOC_malloc(68);
    Extension_40 := DeferredContext_1;
    Tmp_805 := strConst__li2bpl191;
    call {:si_unique_call 1879} vslice_dummy_var_476 := CyzDbgPrintEx(2, Tmp_805);
    call {:si_unique_call 1880} Tmp_806 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    Mem_T.INT4[Tmp_806] := OldIrql_7;
    call {:si_unique_call 1881} IoAcquireCancelSpinLock(Tmp_806);
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    OldIrql_7 := Mem_T.INT4[Tmp_806];
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 1882} CyzTryToCompleteCurrent#1(Extension_40, li2bplFunctionConstant195, OldIrql_7, -1073741812, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_40), 0, 0, 0, 0, 0, 4);
    call {:si_unique_call 1883} CyzDpcEpilogue(Extension_40, Dpc_2);
    Tmp_808 := strConst__li2bpl190;
    call {:si_unique_call 1884} vslice_dummy_var_477 := CyzDbgPrintEx(2, Tmp_808);
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_478: int;

  anon0:
    call {:si_unique_call 1885} vslice_dummy_var_478 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGiveXoffToIsr"} CyzGiveXoffToIsr(actual_Context_34: int) returns (Tmp_819: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_819 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveXoffToIsr"} CyzGiveXoffToIsr(actual_Context_34: int) returns (Tmp_819: int)
{
  var {:pointer} s_p_e_c_i_a_l_27: int;
  var {:pointer} sdv_712: int;
  var {:scalar} s_p_e_c_i_a_l_28: int;
  var {:pointer} Extension_42: int;
  var {:pointer} Tmp_821: int;
  var {:pointer} Xc_1: int;
  var {:pointer} Context_34: int;
  var vslice_dummy_var_914: int;

  anon0:
    Context_34 := actual_Context_34;
    Extension_42 := Context_34;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    havoc Tmp_821;
    assume {:nonnull} Tmp_821 != 0;
    assume Tmp_821 > 0;
    havoc Xc_1;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    s_p_e_c_i_a_l_28 := 1;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    havoc vslice_dummy_var_914;
    call {:si_unique_call 1886} sdv_712 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_914);
    assume {:nonnull} sdv_712 != 0;
    assume sdv_712 > 0;
    s_p_e_c_i_a_l_27 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_712)));
    assume {:nonnull} s_p_e_c_i_a_l_27 != 0;
    assume s_p_e_c_i_a_l_27 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_27] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_27], s_p_e_c_i_a_l_28);
    Tmp_819 := 0;
    return;
}



procedure {:origName "CyzCompleteWrite"} CyzCompleteWrite(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteWrite"} CyzCompleteWrite(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int)
{
  var {:pointer} Tmp_823: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} Extension_43: int;
  var {:pointer} Tmp_824: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} Dpc_3: int;
  var {:pointer} DeferredContext_2: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;

  anon0:
    call {:si_unique_call 1887} vslice_dummy_var_479 := __HAVOC_malloc(4);
    Dpc_3 := actual_Dpc_3;
    DeferredContext_2 := actual_DeferredContext_2;
    call {:si_unique_call 1888} Tmp_823 := __HAVOC_malloc(76);
    call {:si_unique_call 1889} Tmp_825 := __HAVOC_malloc(92);
    Extension_43 := DeferredContext_2;
    Tmp_825 := strConst__li2bpl195;
    call {:si_unique_call 1890} vslice_dummy_var_480 := CyzDbgPrintEx(2, Tmp_825);
    call {:si_unique_call 1891} Tmp_824 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    Mem_T.INT4[Tmp_824] := OldIrql_9;
    call {:si_unique_call 1892} IoAcquireCancelSpinLock(Tmp_824);
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_824];
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    call {:si_unique_call 1893} CyzTryToCompleteCurrent#1(Extension_43, 0, OldIrql_9, 0, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_43), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_43), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_43), li2bplFunctionConstant194, li2bplFunctionConstant197, 1);
    call {:si_unique_call 1894} CyzDpcEpilogue(Extension_43, Dpc_3);
    Tmp_823 := strConst__li2bpl194;
    call {:si_unique_call 1895} vslice_dummy_var_481 := CyzDbgPrintEx(2, Tmp_823);
    return;
}



procedure {:origName "CyzCompleteXoff"} CyzCompleteXoff(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteXoff"} CyzCompleteXoff(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int)
{
  var {:pointer} Tmp_826: int;
  var {:pointer} Tmp_828: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} Tmp_829: int;
  var {:pointer} Extension_44: int;
  var {:pointer} Dpc_4: int;
  var {:pointer} DeferredContext_3: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;

  anon0:
    call {:si_unique_call 1896} vslice_dummy_var_482 := __HAVOC_malloc(4);
    Dpc_4 := actual_Dpc_4;
    DeferredContext_3 := actual_DeferredContext_3;
    call {:si_unique_call 1897} Tmp_826 := __HAVOC_malloc(72);
    call {:si_unique_call 1898} Tmp_828 := __HAVOC_malloc(88);
    Extension_44 := DeferredContext_3;
    Tmp_828 := strConst__li2bpl197;
    call {:si_unique_call 1899} vslice_dummy_var_483 := CyzDbgPrintEx(2, Tmp_828);
    call {:si_unique_call 1900} Tmp_829 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    Mem_T.INT4[Tmp_829] := OldIrql_10;
    call {:si_unique_call 1901} IoAcquireCancelSpinLock(Tmp_829);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    OldIrql_10 := Mem_T.INT4[Tmp_829];
    assume {:nonnull} Extension_44 != 0;
    assume Extension_44 > 0;
    call {:si_unique_call 1902} CyzTryToCompleteCurrent#1(Extension_44, 0, OldIrql_10, 0, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_44), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_44), 0, 0, 1);
    call {:si_unique_call 1903} CyzDpcEpilogue(Extension_44, Dpc_4);
    Tmp_826 := strConst__li2bpl196;
    call {:si_unique_call 1904} vslice_dummy_var_484 := CyzDbgPrintEx(2, Tmp_826);
    return;
}



procedure {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit(actual_Context_35: int) returns (Tmp_830: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_830 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit(actual_Context_35: int) returns (Tmp_830: int)
{
  var {:pointer} Tmp_831: int;
  var {:scalar} sdv_717: int;
  var {:pointer} Tmp_833: int;
  var {:pointer} Extension_45: int;
  var {:pointer} Context_35: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_915: int;

  anon0:
    Context_35 := actual_Context_35;
    Extension_45 := Context_35;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1905} sdv_717 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_717 != 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    havoc Tmp_833;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Tmp_833 != 0;
    assume Tmp_833 > 0;
    havoc vslice_dummy_var_915;
    Mem_T.INT4[Tmp_833] := vslice_dummy_var_915;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    havoc Tmp_831;
    assume {:nonnull} Tmp_831 != 0;
    assume Tmp_831 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    call {:si_unique_call 1906} vslice_dummy_var_485 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_45), 0, 0, Extension_45);
    goto L17;

  L17:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    call {:si_unique_call 1907} vslice_dummy_var_486 := CyzPerhapsLowerRTS(Extension_45);
    goto L6;

  L6:
    Tmp_830 := 0;
    return;

  anon21_Then:
    goto L17;

  anon19_Then:
    assume {:partition} sdv_717 == 0;
    goto L6;

  anon18_Then:
    goto L6;

  anon17_Then:
    goto L6;

  anon16_Then:
    goto L6;

  anon15_Then:
    goto L6;

  anon20_Then:
    goto L6;
}



procedure {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr(actual_Context_36: int) returns (Tmp_834: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_834 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr(actual_Context_36: int) returns (Tmp_834: int)
{
  var {:scalar} Tmp_835: int;
  var {:pointer} s_p_e_c_i_a_l_29: int;
  var {:pointer} Tmp_836: int;
  var {:pointer} IrpSp_2: int;
  var {:pointer} sdv_721: int;
  var {:scalar} s_p_e_c_i_a_l_30: int;
  var {:pointer} Extension_46: int;
  var {:pointer} Tmp_837: int;
  var {:pointer} Context_36: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_916: int;
  var vslice_dummy_var_917: int;

  anon0:
    Context_36 := actual_Context_36;
    Extension_46 := Context_36;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc vslice_dummy_var_916;
    call {:si_unique_call 1908} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_916);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_837;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Tmp_837 != 0;
    assume Tmp_837 > 0;
    goto L15;

  L15:
    s_p_e_c_i_a_l_30 := 1;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc vslice_dummy_var_917;
    call {:si_unique_call 1909} sdv_721 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_917);
    assume {:nonnull} sdv_721 != 0;
    assume sdv_721 > 0;
    s_p_e_c_i_a_l_29 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_721)));
    assume {:nonnull} s_p_e_c_i_a_l_29 != 0;
    assume s_p_e_c_i_a_l_29 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_29] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_29], s_p_e_c_i_a_l_30);
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L26;

  L26:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_835;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Tmp_835 == 192;
    call {:si_unique_call 1910} vslice_dummy_var_488 := CyzSetRTS(Extension_46);
    goto L28;

  L28:
    Tmp_834 := 0;
    return;

  anon9_Then:
    assume {:partition} Tmp_835 != 192;
    goto L28;

  anon8_Then:
    call {:si_unique_call 1911} vslice_dummy_var_487 := CyzTxStart#1(Extension_46);
    goto L26;

  anon7_Then:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_836;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Tmp_836 != 0;
    assume Tmp_836 > 0;
    goto L15;
}



procedure {:origName "CyzGrabXoffFromIsr"} CyzGrabXoffFromIsr(actual_Context_37: int) returns (Tmp_839: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_839 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabXoffFromIsr"} CyzGrabXoffFromIsr(actual_Context_37: int) returns (Tmp_839: int)
{
  var {:pointer} s_p_e_c_i_a_l_31: int;
  var {:pointer} sdv_724: int;
  var {:scalar} s_p_e_c_i_a_l_32: int;
  var {:pointer} Extension_47: int;
  var {:pointer} Context_37: int;
  var vslice_dummy_var_918: int;

  anon0:
    Context_37 := actual_Context_37;
    Extension_47 := Context_37;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    s_p_e_c_i_a_l_32 := 1;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc vslice_dummy_var_918;
    call {:si_unique_call 1912} sdv_724 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_918);
    assume {:nonnull} sdv_724 != 0;
    assume sdv_724 > 0;
    s_p_e_c_i_a_l_31 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_724)));
    assume {:nonnull} s_p_e_c_i_a_l_31 != 0;
    assume s_p_e_c_i_a_l_31 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_31] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_31], BNOT(s_p_e_c_i_a_l_32));
    goto L6;

  L6:
    Tmp_839 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff(actual_DeviceObject_13: int, actual_Irp_12: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff(actual_DeviceObject_13: int, actual_Irp_12: int)
{
  var {:pointer} Extension_48: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_489: int;

  anon0:
    call {:si_unique_call 1913} vslice_dummy_var_489 := __HAVOC_malloc(4);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_12 := actual_Irp_12;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc Extension_48;
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    call {:si_unique_call 1914} CyzTryToCompleteCurrent#1(Extension_48, li2bplFunctionConstant195, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_12)], -1073741536, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_48), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_48), 0, 0, 2);
    return;
}



procedure {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite(actual_DeviceObject_14: int, actual_Irp_13: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite(actual_DeviceObject_14: int, actual_Irp_13: int)
{
  var {:pointer} Extension_49: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_490: int;

  anon0:
    call {:si_unique_call 1915} vslice_dummy_var_490 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_13 := actual_Irp_13;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc Extension_49;
    assume {:nonnull} Extension_49 != 0;
    assume Extension_49 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1916} CyzTryToCompleteCurrent#1(Extension_49, li2bplFunctionConstant202, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_13)], -1073741536, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_49), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_49), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_49), li2bplFunctionConstant194, li2bplFunctionConstant197, 2);
    return;
}



procedure {:origName "CyzGrabWriteFromIsr"} CyzGrabWriteFromIsr(actual_Context_38: int) returns (Tmp_845: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_845 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabWriteFromIsr"} CyzGrabWriteFromIsr(actual_Context_38: int) returns (Tmp_845: int)
{
  var {:pointer} s_p_e_c_i_a_l_33: int;
  var {:pointer} Tmp_846: int;
  var {:pointer} Tmp_847: int;
  var {:pointer} sdv_725: int;
  var {:pointer} sdv_726: int;
  var {:scalar} s_p_e_c_i_a_l_34: int;
  var {:pointer} Extension_50: int;
  var {:pointer} sdv_727: int;
  var {:pointer} Context_38: int;
  var vslice_dummy_var_919: int;
  var vslice_dummy_var_920: int;
  var vslice_dummy_var_921: int;

  anon0:
    Context_38 := actual_Context_38;
    Extension_50 := Context_38;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc vslice_dummy_var_919;
    call {:si_unique_call 1917} sdv_725 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_919);
    assume {:nonnull} sdv_725 != 0;
    assume sdv_725 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc vslice_dummy_var_920;
    call {:si_unique_call 1918} sdv_726 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_920);
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_846;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Tmp_846 != 0;
    assume Tmp_846 > 0;
    assume {:nonnull} sdv_726 != 0;
    assume sdv_726 > 0;
    goto L17;

  L17:
    s_p_e_c_i_a_l_34 := 1;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc vslice_dummy_var_921;
    call {:si_unique_call 1919} sdv_727 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_921);
    assume {:nonnull} sdv_727 != 0;
    assume sdv_727 > 0;
    s_p_e_c_i_a_l_33 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_727)));
    assume {:nonnull} s_p_e_c_i_a_l_33 != 0;
    assume s_p_e_c_i_a_l_33 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_33] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_33], BNOT(s_p_e_c_i_a_l_34));
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    call {:si_unique_call 1920} CyzIssueCmd(Extension_50, 87, 0, 1);
    goto L6;

  L6:
    Tmp_845 := 0;
    return;

  anon9_Then:
    goto L6;

  anon7_Then:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_847;
    assume {:nonnull} Tmp_847 != 0;
    assume Tmp_847 > 0;
    goto L17;

  anon8_Then:
    goto L6;
}



procedure {:origName "CyzGetNextWrite"} CyzGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_51: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextWrite"} CyzGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_51: int)
{
  var {:pointer} s_p_e_c_i_a_l_35: int;
  var {:pointer} sdv_728: int;
  var {:scalar} OldIrql_11: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Tmp_849: int;
  var {:scalar} pollIrql_10: int;
  var {:scalar} OldIrql_12: int;
  var {:pointer} sdv_731: int;
  var {:pointer} Tmp_850: int;
  var {:scalar} OldIrql_13: int;
  var {:pointer} sdv_733: int;
  var {:pointer} Tmp_852: int;
  var {:scalar} s_p_e_c_i_a_l_36: int;
  var {:pointer} sdv_735: int;
  var {:pointer} sdv_736: int;
  var {:pointer} sdv_737: int;
  var {:pointer} s_p_e_c_i_a_l_37: int;
  var {:scalar} delta: int;
  var {:pointer} Xc_2: int;
  var {:scalar} s_p_e_c_i_a_l_38: int;
  var {:scalar} pollIrql_11: int;
  var {:pointer} Tmp_853: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} Extension_51: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_922: int;
  var vslice_dummy_var_923: int;
  var vslice_dummy_var_924: int;
  var vslice_dummy_var_925: int;

  anon0:
    call {:si_unique_call 1921} vslice_dummy_var_491 := __HAVOC_malloc(4);
    call {:si_unique_call 1922} delta := __HAVOC_malloc(20);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NewIrp_4 := actual_NewIrp_4;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    Extension_51 := actual_Extension_51;
    call {:si_unique_call 1923} Tmp_849 := __HAVOC_malloc(92);
    call {:si_unique_call 1924} Tmp_850 := __HAVOC_malloc(72);
    Tmp_849 := strConst__li2bpl198;
    call {:si_unique_call 1925} vslice_dummy_var_495 := CyzDbgPrintEx(2, Tmp_849);
    goto L6;

  L6:
    call {:si_unique_call 1926} s_p_e_c_i_a_l_35, sdv_728, Irp_14, pollIrql_10, OldIrql_12, sdv_731, OldIrql_13, sdv_733, Tmp_852, s_p_e_c_i_a_l_36, sdv_735, sdv_736, sdv_737, s_p_e_c_i_a_l_37, Xc_2, s_p_e_c_i_a_l_38, Tmp_853, CompleteCurrent_3, vslice_dummy_var_493, vslice_dummy_var_494, vslice_dummy_var_497 := CyzGetNextWrite_loop_L6(s_p_e_c_i_a_l_35, sdv_728, Irp_14, pollIrql_10, OldIrql_12, sdv_731, OldIrql_13, sdv_733, Tmp_852, s_p_e_c_i_a_l_36, sdv_735, sdv_736, sdv_737, s_p_e_c_i_a_l_37, delta, Xc_2, s_p_e_c_i_a_l_38, Tmp_853, CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_51, vslice_dummy_var_493, vslice_dummy_var_494, vslice_dummy_var_497);
    goto L6_last;

  L6_last:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_925;
    call {:si_unique_call 1953} sdv_733 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_925);
    assume {:nonnull} sdv_733 != 0;
    assume sdv_733 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1927} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_13;
    call {:si_unique_call 1928} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_13 := Mem_T.INT4[Tmp_853];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_922;
    call {:si_unique_call 1929} sdv_737 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_922);
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} sdv_737 != 0;
    assume sdv_737 > 0;
    call {:si_unique_call 1930} IoReleaseCancelSpinLock(OldIrql_13);
    goto L24;

  L24:
    call {:si_unique_call 1931} CyzGetNextIrp(CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_51);
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1932} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_11;
    call {:si_unique_call 1933} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_11 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 1934} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := pollIrql_11;
    call {:si_unique_call 1935} sdv_KeAcquireSpinLock(0, Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    pollIrql_11 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 1936} vslice_dummy_var_492 := CyzProcessEmptyTransmit(Extension_51);
    call {:si_unique_call 1937} sdv_KeReleaseSpinLock(0, pollIrql_11);
    call {:si_unique_call 1938} IoReleaseCancelSpinLock(OldIrql_11);
    goto L36;

  L36:
    Tmp_850 := strConst__li2bpl199;
    call {:si_unique_call 1939} vslice_dummy_var_496 := CyzDbgPrintEx(2, Tmp_850);
    return;

  anon16_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc vslice_dummy_var_923;
    call {:si_unique_call 1940} sdv_736 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_923);
    assume {:nonnull} sdv_736 != 0;
    assume sdv_736 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L36;

  anon17_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc Tmp_852;
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_924;
    call {:si_unique_call 1941} sdv_735 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_924);
    assume {:nonnull} sdv_735 != 0;
    assume sdv_735 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1942} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_12;
    call {:si_unique_call 1943} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_12 := Mem_T.INT4[Tmp_853];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Irp_14;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    havoc Xc_2;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L69;

  L69:
    call {:si_unique_call 1944} IoReleaseCancelSpinLock(OldIrql_12);
    goto L24;

  anon21_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto L69;

  anon19_Then:
    call {:si_unique_call 1945} vslice_dummy_var_493 := sdv_IoSetCancelRoutine(Irp_14, li2bplFunctionConstant198);
    s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 1946} sdv_731 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_731 != 0;
    assume sdv_731 > 0;
    s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_731)));
    assume {:nonnull} s_p_e_c_i_a_l_35 != 0;
    assume s_p_e_c_i_a_l_35 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_35] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_35], s_p_e_c_i_a_l_36);
    CompleteCurrent_3 := 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 1947} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := pollIrql_10;
    call {:si_unique_call 1948} sdv_KeAcquireSpinLock(0, Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    pollIrql_10 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 1949} vslice_dummy_var_494 := CyzGiveXoffToIsr(Extension_51);
    call {:si_unique_call 1950} sdv_KeReleaseSpinLock(0, pollIrql_10);
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 1951} vslice_dummy_var_497 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_51), delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_51), Extension_51);
    s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 1952} sdv_728 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_728 != 0;
    assume sdv_728 > 0;
    s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_728)));
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_37] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_37], s_p_e_c_i_a_l_38);
    goto L69;

  anon20_Then:
    goto L69;

  anon18_Then:
    goto L24;
}



procedure {:origName "CyzWrite"} CyzWrite(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_854: int);
  modifies alloc, start_irql, Mem_T.INT4, yogi_error, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzWrite"} CyzWrite(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_854: int)
{
  var {:pointer} Tmp_855: int;
  var {:pointer} Tmp_856: int;
  var {:scalar} sdv_742: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} sdv_744: int;
  var {:pointer} Tmp_858: int;
  var {:pointer} Tmp_859: int;
  var {:pointer} Extension_52: int;
  var {:pointer} Tmp_861: int;
  var {:pointer} Tmp_862: int;
  var {:scalar} status_22: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;

  anon0:
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 1954} Tmp_855 := __HAVOC_malloc(96);
    call {:si_unique_call 1955} Tmp_856 := __HAVOC_malloc(72);
    call {:si_unique_call 1956} Tmp_857 := __HAVOC_malloc(72);
    call {:si_unique_call 1957} Tmp_858 := __HAVOC_malloc(72);
    call {:si_unique_call 1958} Tmp_859 := __HAVOC_malloc(76);
    call {:si_unique_call 1959} Tmp_861 := __HAVOC_malloc(72);
    call {:si_unique_call 1960} Tmp_862 := __HAVOC_malloc(72);
    call {:si_unique_call 1961} Tmp_863 := __HAVOC_malloc(72);
    call {:si_unique_call 1962} SLIC_CyzWrite_entry(0);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc Extension_52;
    Tmp_859 := strConst__li2bpl204;
    call {:si_unique_call 1963} vslice_dummy_var_498 := CyzDbgPrintEx(2, Tmp_859);
    call {:si_unique_call 1964} status_22 := CyzIRPPrologue(Irp_15, Extension_52);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_22 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_22 != 259;
    Tmp_862 := strConst__li2bpl3;
    call {:si_unique_call 1965} vslice_dummy_var_499 := CyzDbgPrintEx(9, Tmp_862);
    call {:si_unique_call 1966} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1967} CyzIRPEpilogue(Extension_52);
    goto L18;

  L18:
    Tmp_858 := strConst__li2bpl200;
    call {:si_unique_call 1968} vslice_dummy_var_500 := CyzDbgPrintEx(2, Tmp_858);
    Tmp_854 := status_22;
    goto L1;

  L1:
    call {:si_unique_call 1969} SLIC_CyzWrite_exit(strConst__li2bpl0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} status_22 == 259;
    goto L18;

  anon11_Then:
    assume {:partition} status_22 == 0;
    Tmp_855 := strConst__li2bpl1;
    call {:si_unique_call 1970} vslice_dummy_var_501 := CyzDbgPrintEx(9, Tmp_855);
    call {:si_unique_call 1971} sdv_742 := CyzCompleteIfError(DeviceObject_15, Irp_15);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_742 != 0;
    Tmp_857 := strConst__li2bpl201;
    call {:si_unique_call 1972} vslice_dummy_var_502 := CyzDbgPrintEx(2, Tmp_857);
    Tmp_854 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_742 == 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 1973} sdv_744 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} sdv_744 != 0;
    assume sdv_744 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    call {:si_unique_call 1974} status_22 := CyzStartOrQueue(Extension_52, Irp_15, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_52), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_52), li2bplFunctionConstant194);
    Tmp_863 := strConst__li2bpl202;
    call {:si_unique_call 1975} vslice_dummy_var_503 := CyzDbgPrintEx(2, Tmp_863);
    Tmp_854 := status_22;
    goto L1;

  anon14_Then:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Tmp_861 := strConst__li2bpl3;
    call {:si_unique_call 1976} vslice_dummy_var_504 := CyzDbgPrintEx(9, Tmp_861);
    call {:si_unique_call 1977} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1978} CyzIRPEpilogue(Extension_52);
    Tmp_856 := strConst__li2bpl203;
    call {:si_unique_call 1979} vslice_dummy_var_505 := CyzDbgPrintEx(2, Tmp_856);
    Tmp_854 := 0;
    goto L1;
}



procedure {:origName "CyzGrabWaitFromIsr"} CyzGrabWaitFromIsr(actual_Context_39: int) returns (Tmp_864: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_864 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabWaitFromIsr"} CyzGrabWaitFromIsr(actual_Context_39: int) returns (Tmp_864: int)
{
  var {:pointer} s_p_e_c_i_a_l_39: int;
  var {:pointer} Tmp_866: int;
  var {:pointer} Tmp_867: int;
  var {:pointer} Tmp_868: int;
  var {:scalar} s_p_e_c_i_a_l_40: int;
  var {:pointer} sdv_754: int;
  var {:pointer} Extension_53: int;
  var {:pointer} Tmp_869: int;
  var {:pointer} Tmp_870: int;
  var {:pointer} Context_39: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_926: int;

  anon0:
    Context_39 := actual_Context_39;
    call {:si_unique_call 1980} Tmp_868 := __HAVOC_malloc(92);
    call {:si_unique_call 1981} Tmp_870 := __HAVOC_malloc(336);
    Extension_53 := Context_39;
    Tmp_868 := strConst__li2bpl206;
    call {:si_unique_call 1982} vslice_dummy_var_506 := CyzDbgPrintEx(6, Tmp_868);
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_870 := strConst__li2bpl205;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc Tmp_867;
    call {:si_unique_call 1983} vslice_dummy_var_507 := CyzDbgPrintEx(7, Tmp_870);
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc Tmp_869;
    assume {:nonnull} Tmp_869 != 0;
    assume Tmp_869 > 0;
    Mem_T.INT4[Tmp_869] := 0;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc Tmp_866;
    assume {:nonnull} Tmp_866 != 0;
    assume Tmp_866 > 0;
    s_p_e_c_i_a_l_40 := 1;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc vslice_dummy_var_926;
    call {:si_unique_call 1984} sdv_754 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_926);
    assume {:nonnull} sdv_754 != 0;
    assume sdv_754 > 0;
    s_p_e_c_i_a_l_39 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_754)));
    assume {:nonnull} s_p_e_c_i_a_l_39 != 0;
    assume s_p_e_c_i_a_l_39 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_39] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_39], BNOT(s_p_e_c_i_a_l_40));
    goto L9;

  L9:
    Tmp_864 := 0;
    return;

  anon3_Then:
    goto L9;
}



procedure {:origName "CyzFinishOldWait"} CyzFinishOldWait(actual_Context_40: int) returns (Tmp_871: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_871 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFinishOldWait"} CyzFinishOldWait(actual_Context_40: int) returns (Tmp_871: int)
{
  var {:pointer} Tmp_872: int;
  var {:pointer} Tmp_873: int;
  var {:pointer} Tmp_874: int;
  var {:pointer} Tmp_875: int;
  var {:pointer} Tmp_876: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} Tmp_878: int;
  var {:pointer} Tmp_880: int;
  var {:pointer} Extension_54: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} Tmp_883: int;
  var {:pointer} Context_40: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;

  anon0:
    Context_40 := actual_Context_40;
    call {:si_unique_call 1985} Tmp_875 := __HAVOC_malloc(336);
    call {:si_unique_call 1986} Tmp_877 := __HAVOC_malloc(248);
    call {:si_unique_call 1987} Tmp_880 := __HAVOC_malloc(84);
    Extension_54 := Context_40;
    Tmp_880 := strConst__li2bpl207;
    call {:si_unique_call 1988} vslice_dummy_var_508 := CyzDbgPrintEx(6, Tmp_880);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_875 := strConst__li2bpl205;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_882;
    call {:si_unique_call 1989} vslice_dummy_var_509 := CyzDbgPrintEx(7, Tmp_875);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_876;
    assume {:nonnull} Tmp_876 != 0;
    assume Tmp_876 > 0;
    Mem_T.INT4[Tmp_876] := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_872;
    assume {:nonnull} Tmp_872 != 0;
    assume Tmp_872 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 1990} vslice_dummy_var_510 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto L9;

  L9:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_874;
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc Tmp_878;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Tmp_878 != 0;
    assume Tmp_878 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_873;
    assume {:nonnull} Tmp_873 != 0;
    assume Tmp_873 > 0;
    havoc Tmp_881;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    Tmp_877 := strConst__li2bpl208;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_883;
    call {:si_unique_call 1991} vslice_dummy_var_511 := CyzDbgPrintEx(7, Tmp_877);
    Tmp_871 := 0;
    return;

  anon3_Then:
    goto L9;
}



procedure {:origName "CyzGiveWaitToIsr"} CyzGiveWaitToIsr(actual_Context_41: int) returns (Tmp_884: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_884 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveWaitToIsr"} CyzGiveWaitToIsr(actual_Context_41: int) returns (Tmp_884: int)
{
  var {:pointer} s_p_e_c_i_a_l_41: int;
  var {:pointer} Tmp_886: int;
  var {:pointer} Tmp_887: int;
  var {:pointer} Tmp_888: int;
  var {:pointer} sdv_761: int;
  var {:scalar} s_p_e_c_i_a_l_42: int;
  var {:pointer} Tmp_889: int;
  var {:pointer} Extension_55: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} Tmp_891: int;
  var {:pointer} Tmp_892: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} Tmp_895: int;
  var {:pointer} Context_41: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_927: int;
  var vslice_dummy_var_928: int;

  anon0:
    Context_41 := actual_Context_41;
    call {:si_unique_call 1992} Tmp_886 := __HAVOC_malloc(312);
    call {:si_unique_call 1993} Tmp_887 := __HAVOC_malloc(168);
    call {:si_unique_call 1994} Tmp_889 := __HAVOC_malloc(84);
    call {:si_unique_call 1995} Tmp_894 := __HAVOC_malloc(308);
    Extension_55 := Context_41;
    Tmp_889 := strConst__li2bpl211;
    call {:si_unique_call 1996} vslice_dummy_var_512 := CyzDbgPrintEx(6, Tmp_889);
    s_p_e_c_i_a_l_42 := 1;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc vslice_dummy_var_927;
    call {:si_unique_call 1997} sdv_761 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_927);
    assume {:nonnull} sdv_761 != 0;
    assume sdv_761 > 0;
    s_p_e_c_i_a_l_41 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_761)));
    assume {:nonnull} s_p_e_c_i_a_l_41 != 0;
    assume s_p_e_c_i_a_l_41 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_41] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_41], s_p_e_c_i_a_l_42);
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_894 := strConst__li2bpl210;
    call {:si_unique_call 1998} vslice_dummy_var_513 := CyzDbgPrintEx(7, Tmp_894);
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_892;
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    havoc Tmp_891;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Tmp_891 != 0;
    assume Tmp_891 > 0;
    havoc vslice_dummy_var_928;
    Mem_T.INT4[Tmp_891] := vslice_dummy_var_928;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_895;
    assume {:nonnull} Tmp_895 != 0;
    assume Tmp_895 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    call {:si_unique_call 1999} vslice_dummy_var_514 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_55), 0, 0, Extension_55);
    goto L30;

  L30:
    Tmp_884 := 0;
    return;

  anon3_Then:
    Tmp_887 := strConst__li2bpl209;
    call {:si_unique_call 2000} vslice_dummy_var_515 := CyzDbgPrintEx(7, Tmp_887);
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_888;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    Tmp_886 := strConst__li2bpl212;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_893;
    call {:si_unique_call 2001} vslice_dummy_var_516 := CyzDbgPrintEx(7, Tmp_886);
    goto L30;
}



procedure {:origName "CyzStartMask"} CyzStartMask(actual_Extension_56: int) returns (Tmp_896: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartMask"} CyzStartMask(actual_Extension_56: int) returns (Tmp_896: int)
{
  var {:pointer} Tmp_897: int;
  var {:pointer} s_p_e_c_i_a_l_43: int;
  var {:scalar} FirstStatus_1: int;
  var {:pointer} Tmp_898: int;
  var {:scalar} SetFirstStatus_1: int;
  var {:pointer} Tmp_899: int;
  var {:pointer} Tmp_900: int;
  var {:pointer} Tmp_901: int;
  var {:pointer} Tmp_902: int;
  var {:pointer} Tmp_903: int;
  var {:pointer} Tmp_904: int;
  var {:pointer} Tmp_905: int;
  var {:pointer} IrpSp_3: int;
  var {:scalar} OldIrql_14: int;
  var {:pointer} Tmp_906: int;
  var {:pointer} NewIrp_5: int;
  var {:scalar} s_p_e_c_i_a_l_44: int;
  var {:pointer} Tmp_907: int;
  var {:pointer} sdv_780: int;
  var {:pointer} Tmp_908: int;
  var {:pointer} Tmp_909: int;
  var {:pointer} Tmp_910: int;
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_912: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} sdv_783: int;
  var {:pointer} Tmp_914: int;
  var {:scalar} pollIrql_12: int;
  var {:pointer} Tmp_915: int;
  var {:pointer} Extension_56: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_929: int;
  var vslice_dummy_var_930: int;
  var vslice_dummy_var_931: int;
  var vslice_dummy_var_932: int;

  anon0:
    call {:si_unique_call 2002} NewIrp_5 := __HAVOC_malloc(4);
    Extension_56 := actual_Extension_56;
    call {:si_unique_call 2003} Tmp_897 := __HAVOC_malloc(68);
    call {:si_unique_call 2004} Tmp_898 := __HAVOC_malloc(288);
    call {:si_unique_call 2005} Tmp_900 := __HAVOC_malloc(84);
    call {:si_unique_call 2006} Tmp_901 := __HAVOC_malloc(288);
    call {:si_unique_call 2007} Tmp_902 := __HAVOC_malloc(288);
    call {:si_unique_call 2008} Tmp_903 := __HAVOC_malloc(368);
    call {:si_unique_call 2009} Tmp_904 := __HAVOC_malloc(160);
    call {:si_unique_call 2010} Tmp_908 := __HAVOC_malloc(288);
    call {:si_unique_call 2011} Tmp_909 := __HAVOC_malloc(284);
    call {:si_unique_call 2012} Tmp_910 := __HAVOC_malloc(148);
    call {:si_unique_call 2013} Tmp_911 := __HAVOC_malloc(128);
    call {:si_unique_call 2014} Tmp_912 := __HAVOC_malloc(368);
    call {:si_unique_call 2015} Tmp_913 := __HAVOC_malloc(368);
    call {:si_unique_call 2016} Tmp_915 := __HAVOC_malloc(368);
    SetFirstStatus_1 := 0;
    Tmp_897 := strConst__li2bpl220;
    call {:si_unique_call 2017} vslice_dummy_var_519 := CyzDbgPrintEx(6, Tmp_897);
    goto L12;

  L12:
    call {:si_unique_call 2018} s_p_e_c_i_a_l_43, FirstStatus_1, Tmp_898, SetFirstStatus_1, Tmp_899, Tmp_900, Tmp_901, Tmp_902, Tmp_903, Tmp_904, Tmp_905, IrpSp_3, OldIrql_14, Tmp_906, s_p_e_c_i_a_l_44, Tmp_907, sdv_780, Tmp_908, Tmp_909, Tmp_910, Tmp_911, Tmp_912, Tmp_913, sdv_783, Tmp_914, pollIrql_12, Tmp_915, vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_520, vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_523, vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526, vslice_dummy_var_527, vslice_dummy_var_528, vslice_dummy_var_529, vslice_dummy_var_530, vslice_dummy_var_531, vslice_dummy_var_532, vslice_dummy_var_533 := CyzStartMask_loop_L12(s_p_e_c_i_a_l_43, FirstStatus_1, Tmp_898, SetFirstStatus_1, Tmp_899, Tmp_900, Tmp_901, Tmp_902, Tmp_903, Tmp_904, Tmp_905, IrpSp_3, OldIrql_14, Tmp_906, NewIrp_5, s_p_e_c_i_a_l_44, Tmp_907, sdv_780, Tmp_908, Tmp_909, Tmp_910, Tmp_911, Tmp_912, Tmp_913, sdv_783, Tmp_914, pollIrql_12, Tmp_915, Extension_56, vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_520, vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_523, vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526, vslice_dummy_var_527, vslice_dummy_var_528, vslice_dummy_var_529, vslice_dummy_var_530, vslice_dummy_var_531, vslice_dummy_var_532, vslice_dummy_var_533);
    goto L12_last;

  L12_last:
    Tmp_911 := strConst__li2bpl213;
    call {:si_unique_call 2050} vslice_dummy_var_520 := CyzDbgPrintEx(7, Tmp_911);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_932;
    call {:si_unique_call 2051} IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_932);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_900 := strConst__li2bpl214;
    call {:si_unique_call 2019} vslice_dummy_var_521 := CyzDbgPrintEx(7, Tmp_900);
    call {:si_unique_call 2020} Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    Mem_T.INT4[Tmp_906] := pollIrql_12;
    call {:si_unique_call 2021} sdv_KeAcquireSpinLock(0, Tmp_906);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    pollIrql_12 := Mem_T.INT4[Tmp_906];
    call {:si_unique_call 2022} vslice_dummy_var_517 := CyzFinishOldWait(Extension_56);
    call {:si_unique_call 2023} sdv_KeReleaseSpinLock(0, pollIrql_12);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_907;
    assume {:nonnull} Tmp_907 != 0;
    assume Tmp_907 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 2024} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 1, Extension_56);
    Tmp_912 := strConst__li2bpl216;
    call {:si_unique_call 2025} vslice_dummy_var_522 := CyzDbgPrintEx(7, Tmp_912);
    goto L44;

  L44:
    assume {:nonnull} NewIrp_5 != 0;
    assume NewIrp_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_896 := FirstStatus_1;
    return;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_898 := strConst__li2bpl215;
    call {:si_unique_call 2026} vslice_dummy_var_523 := CyzDbgPrintEx(7, Tmp_898);
    FirstStatus_1 := 0;
    SetFirstStatus_1 := 1;
    goto L38;

  anon19_Then:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2027} Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    Mem_T.INT4[Tmp_906] := OldIrql_14;
    call {:si_unique_call 2028} IoAcquireCancelSpinLock(Tmp_906);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_906];
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_905;
    assume {:nonnull} Tmp_905 != 0;
    assume Tmp_905 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_904 := strConst__li2bpl219;
    call {:si_unique_call 2029} vslice_dummy_var_527 := CyzDbgPrintEx(7, Tmp_904);
    call {:si_unique_call 2030} IoReleaseCancelSpinLock(OldIrql_14);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_914;
    assume {:nonnull} Tmp_914 != 0;
    assume Tmp_914 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L71;

  L71:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 2031} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 1, Extension_56);
    Tmp_913 := strConst__li2bpl216;
    call {:si_unique_call 2032} vslice_dummy_var_528 := CyzDbgPrintEx(7, Tmp_913);
    goto L44;

  anon27_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_902 := strConst__li2bpl215;
    call {:si_unique_call 2033} vslice_dummy_var_529 := CyzDbgPrintEx(7, Tmp_902);
    FirstStatus_1 := -1073741536;
    SetFirstStatus_1 := 1;
    goto L71;

  anon26_Then:
    Tmp_910 := strConst__li2bpl218;
    call {:si_unique_call 2034} vslice_dummy_var_530 := CyzDbgPrintEx(7, Tmp_910);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L83;

  L83:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_929;
    call {:si_unique_call 2035} sdv_780 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_929);
    assume {:nonnull} sdv_780 != 0;
    assume sdv_780 > 0;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_930;
    call {:si_unique_call 2036} vslice_dummy_var_531 := sdv_IoSetCancelRoutine(vslice_dummy_var_930, li2bplFunctionConstant178);
    s_p_e_c_i_a_l_44 := 2;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_931;
    call {:si_unique_call 2037} sdv_783 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_931);
    assume {:nonnull} sdv_783 != 0;
    assume sdv_783 > 0;
    s_p_e_c_i_a_l_43 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_783)));
    assume {:nonnull} s_p_e_c_i_a_l_43 != 0;
    assume s_p_e_c_i_a_l_43 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_43] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_43], s_p_e_c_i_a_l_44);
    call {:si_unique_call 2038} Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    Mem_T.INT4[Tmp_906] := pollIrql_12;
    call {:si_unique_call 2039} sdv_KeAcquireSpinLock(0, Tmp_906);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    pollIrql_12 := Mem_T.INT4[Tmp_906];
    call {:si_unique_call 2040} vslice_dummy_var_518 := CyzGiveWaitToIsr(Extension_56);
    call {:si_unique_call 2041} sdv_KeReleaseSpinLock(0, pollIrql_12);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 2042} CyzGetNextIrpLocked(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 0, Extension_56, OldIrql_14);
    Tmp_903 := strConst__li2bpl216;
    call {:si_unique_call 2043} vslice_dummy_var_532 := CyzDbgPrintEx(7, Tmp_903);
    goto L44;

  anon23_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_908 := strConst__li2bpl215;
    call {:si_unique_call 2044} vslice_dummy_var_533 := CyzDbgPrintEx(7, Tmp_908);
    FirstStatus_1 := 259;
    SetFirstStatus_1 := 1;
    call {:si_unique_call 2045} sdv_IoMarkIrpPending(0);
    goto L83;

  anon22_Then:
    goto L48;

  L48:
    Tmp_909 := strConst__li2bpl217;
    call {:si_unique_call 2046} vslice_dummy_var_524 := CyzDbgPrintEx(7, Tmp_909);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_899;
    assume {:nonnull} Tmp_899 != 0;
    assume Tmp_899 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L125;

  L125:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 2047} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 1, Extension_56);
    Tmp_915 := strConst__li2bpl216;
    call {:si_unique_call 2048} vslice_dummy_var_525 := CyzDbgPrintEx(7, Tmp_915);
    goto L44;

  anon25_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_901 := strConst__li2bpl215;
    call {:si_unique_call 2049} vslice_dummy_var_526 := CyzDbgPrintEx(7, Tmp_901);
    FirstStatus_1 := -1073741811;
    SetFirstStatus_1 := 1;
    goto L125;

  anon20_Then:
    goto L48;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_534: int;

  anon0:
    call {:si_unique_call 2052} vslice_dummy_var_534 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCancelWait"} CyzCancelWait(actual_DeviceObject_16: int, actual_Irp_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelWait"} CyzCancelWait(actual_DeviceObject_16: int, actual_Irp_16: int)
{
  var {:pointer} Tmp_918: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Extension_57: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;

  anon0:
    call {:si_unique_call 2053} vslice_dummy_var_535 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2054} Tmp_918 := __HAVOC_malloc(108);
    call {:si_unique_call 2055} Tmp_919 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc Extension_57;
    Tmp_919 := strConst__li2bpl222;
    call {:si_unique_call 2056} vslice_dummy_var_536 := CyzDbgPrintEx(6, Tmp_919);
    Tmp_918 := strConst__li2bpl221;
    call {:si_unique_call 2057} vslice_dummy_var_537 := CyzDbgPrintEx(7, Tmp_918);
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 2058} CyzTryToCompleteCurrent#1(Extension_57, li2bplFunctionConstant179, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_16)], -1073741536, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, 0, 0, 0, 2);
    return;
}



procedure {:origName "CyzCompleteWait"} CyzCompleteWait(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteWait"} CyzCompleteWait(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int)
{
  var {:pointer} Tmp_923: int;
  var {:pointer} Tmp_924: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} Tmp_925: int;
  var {:pointer} Extension_58: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} Tmp_927: int;
  var {:pointer} Dpc_5: int;
  var {:pointer} DeferredContext_4: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;

  anon0:
    call {:si_unique_call 2059} vslice_dummy_var_538 := __HAVOC_malloc(4);
    Dpc_5 := actual_Dpc_5;
    DeferredContext_4 := actual_DeferredContext_4;
    call {:si_unique_call 2060} Tmp_923 := __HAVOC_malloc(88);
    call {:si_unique_call 2061} Tmp_924 := __HAVOC_malloc(80);
    call {:si_unique_call 2062} Tmp_925 := __HAVOC_malloc(112);
    call {:si_unique_call 2063} Tmp_926 := __HAVOC_malloc(72);
    Extension_58 := DeferredContext_4;
    Tmp_923 := strConst__li2bpl226;
    call {:si_unique_call 2064} vslice_dummy_var_539 := CyzDbgPrintEx(2, Tmp_923);
    Tmp_924 := strConst__li2bpl223;
    call {:si_unique_call 2065} vslice_dummy_var_540 := CyzDbgPrintEx(6, Tmp_924);
    call {:si_unique_call 2066} Tmp_927 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    Mem_T.INT4[Tmp_927] := OldIrql_15;
    call {:si_unique_call 2067} IoAcquireCancelSpinLock(Tmp_927);
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    OldIrql_15 := Mem_T.INT4[Tmp_927];
    Tmp_925 := strConst__li2bpl224;
    call {:si_unique_call 2068} vslice_dummy_var_541 := CyzDbgPrintEx(7, Tmp_925);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2069} CyzTryToCompleteCurrent#1(Extension_58, 0, OldIrql_15, 0, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_58), 0, 0, 0, 0, 0, 1);
    call {:si_unique_call 2070} CyzDpcEpilogue(Extension_58, Dpc_5);
    Tmp_926 := strConst__li2bpl225;
    call {:si_unique_call 2071} vslice_dummy_var_542 := CyzDbgPrintEx(2, Tmp_926);
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int)
{
  var {:pointer} ListHead: int;
  var vslice_dummy_var_543: int;

  anon0:
    call {:si_unique_call 2072} vslice_dummy_var_543 := __HAVOC_malloc(4);
    ListHead := actual_ListHead;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    return;
}



procedure {:origName "CyzProcessLSR"} CyzProcessLSR(actual_Extension_60: int, actual_LineStatus: int) returns (Tmp_997: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_997 == actual_LineStatus;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProcessLSR"} CyzProcessLSR(actual_Extension_60: int, actual_LineStatus: int) returns (Tmp_997: int)
{
  var {:pointer} Tmp_998: int;
  var {:pointer} Tmp_1000: int;
  var {:pointer} Extension_60: int;
  var {:scalar} LineStatus: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_933: int;
  var vslice_dummy_var_934: int;
  var vslice_dummy_var_935: int;
  var vslice_dummy_var_936: int;
  var vslice_dummy_var_937: int;
  var vslice_dummy_var_938: int;

  anon0:
    Extension_60 := actual_Extension_60;
    LineStatus := actual_LineStatus;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_933;
    call {:si_unique_call 2073} CyzPutChar#1(Extension_60, vslice_dummy_var_933);
    call {:si_unique_call 2074} CyzPutChar#1(Extension_60, 2);
    call {:si_unique_call 2075} CyzPutChar#1(Extension_60, LineStatus);
    goto L4;

  L4:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(LineStatus, 2) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_934;
    call {:si_unique_call 2076} CyzPutChar#1(Extension_60, vslice_dummy_var_934);
    goto L14;

  L14:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} BAND(LineStatus, 16) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_935;
    call {:si_unique_call 2077} CyzPutChar#1(Extension_60, vslice_dummy_var_935);
    goto L25;

  L25:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    call {:si_unique_call 2078} vslice_dummy_var_544 := CyzInsertQueueDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_60), 0, 0, Extension_60);
    goto L29;

  L29:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(LineStatus, 14) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto L35;

  L35:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(LineStatus, 16) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_1000;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    havoc vslice_dummy_var_936;
    Mem_T.INT4[Tmp_1000] := vslice_dummy_var_936;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_998;
    assume {:nonnull} Tmp_998 != 0;
    assume Tmp_998 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    call {:si_unique_call 2079} vslice_dummy_var_545 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_60), 0, 0, Extension_60);
    goto L33;

  L33:
    Tmp_997 := LineStatus;
    return;

  anon46_Then:
    goto L33;

  anon44_Then:
    goto L33;

  anon45_Then:
    assume {:partition} BAND(LineStatus, 16) == 0;
    goto L38;

  anon42_Then:
    goto L38;

  anon43_Then:
    assume {:partition} BAND(LineStatus, 14) == 0;
    goto L35;

  anon41_Then:
    goto L35;

  anon40_Then:
    goto L33;

  anon39_Then:
    goto L29;

  anon49_Then:
    goto L25;

  anon37_Then:
    assume {:partition} BAND(LineStatus, 16) == 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} BAND(LineStatus, 4) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_937;
    call {:si_unique_call 2080} CyzPutChar#1(Extension_60, vslice_dummy_var_937);
    goto L49;

  L49:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(LineStatus, 8) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_938;
    call {:si_unique_call 2081} CyzPutChar#1(Extension_60, vslice_dummy_var_938);
    goto L25;

  anon51_Then:
    goto L25;

  anon47_Then:
    assume {:partition} BAND(LineStatus, 8) == 0;
    goto L25;

  anon50_Then:
    goto L49;

  anon38_Then:
    assume {:partition} BAND(LineStatus, 4) == 0;
    goto L49;

  anon48_Then:
    goto L14;

  anon36_Then:
    assume {:partition} BAND(LineStatus, 2) == 0;
    goto L14;

  anon35_Then:
    goto L4;
}



procedure {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite(actual_Extension_61: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite(actual_Extension_61: int)
{
  var {:pointer} IrpSp_4: int;
  var {:pointer} Tmp_1003: int;
  var {:scalar} Tmp_1004: int;
  var {:pointer} Extension_61: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_939: int;

  anon0:
    call {:si_unique_call 2082} vslice_dummy_var_546 := __HAVOC_malloc(4);
    Extension_61 := actual_Extension_61;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc vslice_dummy_var_939;
    call {:si_unique_call 2083} IrpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_939);
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    havoc Tmp_1004;
    goto L11;

  L11:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1003;
    assume {:nonnull} Tmp_1003 != 0;
    assume Tmp_1003 > 0;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    call {:si_unique_call 2084} vslice_dummy_var_547 := CyzInsertQueueDpc(CompleteWriteDpc__CYZ_DEVICE_EXTENSION(Extension_61), 0, 0, Extension_61);
    return;

  anon3_Then:
    Tmp_1004 := 1;
    goto L11;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_1005: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_1005: int)
{
  var {:pointer} Entry: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_1: int;

  anon0:
    ListHead_1 := actual_ListHead_1;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc Entry;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Flink;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_1005 := Entry;
    return;
}



procedure {:origName "CyzDbgPrintEx"} CyzDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1007: int);
  free ensures {:va_keep} Tmp_1007 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDbgPrintEx"} CyzDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1007: int)
{

  anon0:
    Tmp_1007 := 0;
    return;
}



procedure {:origName "CyzPollingDpc"} CyzPollingDpc(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPollingDpc"} CyzPollingDpc(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int)
{
  var {:scalar} Tmp_1009: int;
  var {:scalar} Tmp_1010: int;
  var {:pointer} Dispatch: int;
  var {:scalar} rx_4: int;
  var {:pointer} Tmp_1011: int;
  var {:scalar} Tmp_1012: int;
  var {:scalar} Tmp_1013: int;
  var {:scalar} Tmp_1014: int;
  var {:scalar} channel_1: int;
  var {:scalar} rx_5: int;
  var {:pointer} Tmp_1015: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} rxchar_1: int;
  var {:scalar} Tmp_1018: int;
  var {:pointer} Tmp_1019: int;
  var {:scalar} Tmp_1020: int;
  var {:scalar} pppflag: int;
  var {:scalar} Tmp_1022: int;
  var {:pointer} Tmp_1023: int;
  var {:pointer} Tmp_1024: int;
  var {:scalar} sdv_819: int;
  var {:scalar} rx_6: int;
  var {:pointer} Extension_62: int;
  var {:pointer} Tmp_1028: int;
  var {:scalar} Tmp_1030: int;
  var {:scalar} sdv_824: int;
  var {:scalar} Tmp_1031: int;
  var {:scalar} Tmp_1032: int;
  var {:pointer} pt_1: int;
  var {:scalar} qu: int;
  var {:scalar} fwcmd: int;
  var {:scalar} dbChannel: int;
  var {:scalar} Tmp_1033: int;
  var {:scalar} qu_1: int;
  var {:scalar} loc: int;
  var {:pointer} dbExtension: int;
  var {:pointer} Tmp_1034: int;
  var {:pointer} DeferredContext_5: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_940: int;
  var vslice_dummy_var_941: int;
  var vslice_dummy_var_942: int;
  var vslice_dummy_var_943: int;
  var vslice_dummy_var_944: int;
  var vslice_dummy_var_945: int;
  var vslice_dummy_var_946: int;

  anon0:
    call {:si_unique_call 2085} Tmp_1009 := __HAVOC_malloc(20);
    call {:si_unique_call 2086} Tmp_1013 := __HAVOC_malloc(20);
    call {:si_unique_call 2087} vslice_dummy_var_548 := __HAVOC_malloc(4);
    DeferredContext_5 := actual_DeferredContext_5;
    call {:si_unique_call 2088} Tmp_1011 := __HAVOC_malloc(2560);
    call {:si_unique_call 2089} Tmp_1016 := __HAVOC_malloc(2560);
    call {:si_unique_call 2090} Tmp_1023 := __HAVOC_malloc(256);
    call {:si_unique_call 2091} Tmp_1024 := __HAVOC_malloc(2560);
    call {:si_unique_call 2092} Tmp_1028 := __HAVOC_malloc(256);
    Dispatch := DeferredContext_5;
    call {:si_unique_call 2093} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    channel_1 := 0;
    goto L25;

  L25:
    call {:si_unique_call 2094} Tmp_1010, rx_4, Tmp_1011, Tmp_1012, Tmp_1014, channel_1, rx_5, Tmp_1015, Tmp_1016, rxchar_1, Tmp_1018, Tmp_1019, Tmp_1020, pppflag, Tmp_1022, Tmp_1023, Tmp_1024, sdv_819, rx_6, Extension_62, Tmp_1028, Tmp_1030, sdv_824, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, Tmp_1034, vslice_dummy_var_549, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_553, vslice_dummy_var_554, vslice_dummy_var_555, vslice_dummy_var_556, vslice_dummy_var_557 := CyzPollingDpc_loop_L25(Tmp_1009, Tmp_1010, Dispatch, rx_4, Tmp_1011, Tmp_1012, Tmp_1013, Tmp_1014, channel_1, rx_5, Tmp_1015, Tmp_1016, rxchar_1, Tmp_1018, Tmp_1019, Tmp_1020, pppflag, Tmp_1022, Tmp_1023, Tmp_1024, sdv_819, rx_6, Extension_62, Tmp_1028, Tmp_1030, sdv_824, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, Tmp_1034, vslice_dummy_var_549, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_553, vslice_dummy_var_554, vslice_dummy_var_555, vslice_dummy_var_556, vslice_dummy_var_557);
    goto L25_last;

  L25_last:
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    Tmp_1020 := channel_1;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    havoc Tmp_1023;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    havoc Extension_62;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Extension_62 == 0;
    goto L157;

  L157:
    channel_1 := channel_1 + 1;
    goto L157_dummy;

  L157_dummy:
    assume false;
    return;

  anon201_Then:
    assume {:partition} Extension_62 != 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc pt_1;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} pt_1 == 0;
    goto L157;

  anon202_Then:
    assume {:partition} pt_1 != 0;
    call {:si_unique_call 2095} qu := corral_nondet();
    call {:si_unique_call 2096} qu_1 := corral_nondet();
    goto L43;

  L43:
    call {:si_unique_call 2097} Tmp_1011, Tmp_1012, Tmp_1014, Tmp_1016, Tmp_1022, Tmp_1024, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, qu, fwcmd, dbChannel, Tmp_1033, loc, dbExtension, vslice_dummy_var_549, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_553, vslice_dummy_var_557 := CyzPollingDpc_loop_L43(Tmp_1009, Dispatch, Tmp_1011, Tmp_1012, Tmp_1013, Tmp_1014, Tmp_1016, Tmp_1022, Tmp_1024, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, vslice_dummy_var_549, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_553, vslice_dummy_var_557);
    goto L43_last;

  L43_last:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} qu != qu_1;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} qu >= 640;
    qu := 0;
    goto L44;

  L44:
    call {:si_unique_call 2098} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2099} rx_5 := corral_nondet();
    call {:si_unique_call 2100} rx_4 := corral_nondet();
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc rx_6;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} rx_5 >= rx_6;
    goto L150;

  L150:
    call {:si_unique_call 2101} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon203_Then:
    assume {:partition} rx_6 > rx_5;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} rx_4 < rx_6;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} rx_5 != rx_4;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    pppflag := 0;
    goto L164;

  L164:
    call {:si_unique_call 2102} Tmp_1010, rx_4, Tmp_1015, rxchar_1, Tmp_1018, Tmp_1019, pppflag, sdv_824, Tmp_1034, vslice_dummy_var_556 := CyzPollingDpc_loop_L164(Tmp_1010, rx_4, rx_5, Tmp_1015, rxchar_1, Tmp_1018, Tmp_1019, pppflag, rx_6, Extension_62, sdv_824, Tmp_1034, vslice_dummy_var_556);
    goto L164_last;

  L164_last:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} rx_4 != rx_5;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    Tmp_1010 := rx_4;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1034;
    call {:si_unique_call 2103} rxchar_1 := corral_nondet();
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc rxchar_1;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L183;

  L183:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1018;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} rx_4 == rx_6 - 1;
    rx_4 := 0;
    goto L197;

  L197:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} pppflag == 2;
    goto L165;

  L165:
    goto L159;

  L159:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    call {:si_unique_call 2104} sdv_819 := CyzAmountInTxBuffer(Extension_62);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} sdv_819 == 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2105} CyzQueueCompleteWrite(Extension_62);
    goto L228;

  L228:
    call {:si_unique_call 2106} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon181_Then:
    assume {:partition} sdv_819 != 0;
    goto L228;

  anon180_Then:
    goto L236;

  L236:
    call {:si_unique_call 2107} vslice_dummy_var_555 := CyzTxStart#1(Extension_62);
    goto L228;

  anon179_Then:
    goto L236;

  anon178_Then:
    call {:si_unique_call 2108} vslice_dummy_var_554 := CyzTxStart#1(Extension_62);
    goto L228;

  anon155_Then:
    goto L228;

  anon168_Then:
    assume {:partition} pppflag != 2;
    goto anon168_Then_dummy;

  anon168_Then_dummy:
    assume false;
    return;

  anon167_Then:
    assume {:partition} rx_4 != rx_6 - 1;
    rx_4 := rx_4 + 1;
    goto L197;

  anon205_Then:
    assume {:partition} Tmp_1018 == 192;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2109} sdv_824 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_62), 0, 0, Extension_62);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} sdv_824 == 0;
    goto L194;

  anon166_Then:
    assume {:partition} sdv_824 != 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L194;

  anon164_Then:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L194;

  anon165_Then:
    goto L194;

  anon162_Then:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L183;

  anon163_Then:
    goto L180;

  L180:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} rxchar_1 == 126;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} pppflag != 0;
    pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1015;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Tmp_1015 != 0;
    assume Tmp_1015 > 0;
    havoc vslice_dummy_var_940;
    Mem_T.INT4[Tmp_1015] := vslice_dummy_var_940;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1019;
    assume {:nonnull} Tmp_1019 != 0;
    assume Tmp_1019 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2110} vslice_dummy_var_556 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_62), 0, 0, Extension_62);
    goto L200;

  L200:
    call {:si_unique_call 2111} CyzPutChar#1(Extension_62, rxchar_1);
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 2112} CyzPutChar#1(Extension_62, 0);
    goto L194;

  anon177_Then:
    goto L194;

  anon176_Then:
    goto L194;

  anon175_Then:
    goto L200;

  anon171_Then:
    goto L200;

  anon174_Then:
    assume {:partition} pppflag == 0;
    pppflag := 1;
    goto L206;

  anon173_Then:
    goto L206;

  anon206_Then:
    assume {:partition} rxchar_1 != 126;
    goto L206;

  anon172_Then:
    goto L206;

  anon170_Then:
    goto L206;

  anon169_Then:
    goto L204;

  anon161_Then:
    goto L200;

  anon160_Then:
    goto L180;

  anon204_Then:
    assume {:partition} rxchar_1 == 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L194;

  anon159_Then:
    goto L179;

  anon158_Then:
    goto L165;

  anon157_Then:
    assume {:partition} rx_4 == rx_5;
    goto L165;

  anon156_Then:
    rx_4 := rx_5;
    goto L165;

  anon154_Then:
    assume {:partition} rx_5 == rx_4;
    goto L159;

  anon153_Then:
    assume {:partition} rx_6 <= rx_4;
    goto L150;

  anon142_Then:
    assume {:partition} 640 > qu;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} qu_1 < 640;
    Tmp_1033 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1024;
    call {:si_unique_call 2113} loc := corral_nondet();
    Tmp_1031 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1016;
    call {:si_unique_call 2114} dbChannel := corral_nondet();
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    Tmp_1030 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1011;
    call {:si_unique_call 2115} fwcmd := corral_nondet();
    Tmp_1022 := dbChannel;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    havoc Tmp_1028;
    assume {:nonnull} Tmp_1028 != 0;
    assume Tmp_1028 > 0;
    havoc dbExtension;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} dbExtension == 0;
    goto L132;

  L132:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} qu == 639;
    qu := 0;
    goto anon152_Else_dummy;

  anon152_Else_dummy:
    assume false;
    return;

  anon152_Then:
    assume {:partition} qu != 639;
    qu := qu + 1;
    goto anon152_Then_dummy;

  anon152_Then_dummy:
    assume false;
    return;

  anon207_Then:
    assume {:partition} dbExtension != 0;
    call {:si_unique_call 2116} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} loc != 3;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} loc != 66;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} loc != 69;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} loc != 70;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} loc != 96;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} loc != 97;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} loc != 98;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} loc != 99;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} loc != 100;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} loc != 112;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} loc != 113;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} loc != 114;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} loc != 115;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} loc != 132;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} loc != 133;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} loc != 134;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} loc != 135;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} loc != 136;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} loc != 144;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} loc == 145;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc Tmp_1014;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc vslice_dummy_var_941;
    havoc vslice_dummy_var_942;
    havoc vslice_dummy_var_943;
    call {:si_unique_call 2117} CyzLogError(vslice_dummy_var_941, vslice_dummy_var_942, vslice_dummy_var_943, Tmp_1009, 0, 0, 0, Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 2118} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon182_Then:
    assume {:partition} loc != 145;
    goto L76;

  anon183_Then:
    assume {:partition} loc == 144;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc Tmp_1012;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc vslice_dummy_var_944;
    havoc vslice_dummy_var_945;
    havoc vslice_dummy_var_946;
    call {:si_unique_call 2119} CyzLogError(vslice_dummy_var_944, vslice_dummy_var_945, vslice_dummy_var_946, Tmp_1013, 0, 0, 0, Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon184_Then:
    assume {:partition} loc == 136;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    call {:si_unique_call 2120} vslice_dummy_var_549 := CyzProcessLSR(dbExtension, 2);
    goto L76;

  anon151_Then:
    goto L76;

  anon185_Then:
    assume {:partition} loc == 135;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 2121} vslice_dummy_var_550 := CyzProcessLSR(dbExtension, 2);
    goto L76;

  anon150_Then:
    goto L76;

  anon186_Then:
    assume {:partition} loc == 134;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    call {:si_unique_call 2122} vslice_dummy_var_551 := CyzProcessLSR(dbExtension, 8);
    goto L76;

  anon149_Then:
    goto L76;

  anon187_Then:
    assume {:partition} loc == 133;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 2123} vslice_dummy_var_552 := CyzProcessLSR(dbExtension, 4);
    goto L76;

  anon148_Then:
    goto L76;

  anon188_Then:
    assume {:partition} loc == 132;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    call {:si_unique_call 2124} vslice_dummy_var_553 := CyzProcessLSR(dbExtension, 16);
    goto L76;

  anon147_Then:
    goto L76;

  anon189_Then:
    assume {:partition} loc == 115;
    goto L87;

  L87:
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    Tmp_1032 := loc;
    call {:si_unique_call 2125} vslice_dummy_var_557 := CyzHandleModemUpdate#1(dbExtension, 0, Tmp_1032);
    goto L76;

  anon146_Then:
    goto L76;

  anon190_Then:
    assume {:partition} loc == 114;
    goto L87;

  anon191_Then:
    assume {:partition} loc == 113;
    goto L87;

  anon192_Then:
    assume {:partition} loc == 112;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L87;

  anon193_Then:
    assume {:partition} loc == 100;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L76;

  anon194_Then:
    assume {:partition} loc == 99;
    goto L76;

  anon195_Then:
    assume {:partition} loc == 98;
    goto L76;

  anon196_Then:
    assume {:partition} loc == 97;
    goto L76;

  anon197_Then:
    assume {:partition} loc == 96;
    goto L76;

  anon198_Then:
    assume {:partition} loc == 70;
    goto L76;

  anon199_Then:
    assume {:partition} loc == 69;
    goto L76;

  anon200_Then:
    assume {:partition} loc == 66;
    goto L76;

  anon145_Then:
    assume {:partition} loc == 3;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L76;

  anon144_Then:
    goto L44;

  anon143_Then:
    assume {:partition} 640 <= qu_1;
    goto L44;

  anon141_Then:
    assume {:partition} qu == qu_1;
    goto L44;

  anon140_Then:
    goto L26;

  L26:
    call {:si_unique_call 2126} sdv_KeReleaseSpinLockFromDpcLevel(0);
    return;

  anon139_Then:
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    call {:si_unique_call 2127} vslice_dummy_var_558 := KeSetEvent(PendingDpcEvent__CYZ_DISPATCH(Dispatch), 0, 0);
    goto L26;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_559: int;

  anon0:
    call {:si_unique_call 2128} vslice_dummy_var_559 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (SD2_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (SD2_2: int)
{
  var {:scalar} Result_4: int;
  var {:scalar} Tmp_2: int;
  var {:scalar} SignedInteger: int;

  anon0:
    call {:si_unique_call 2129} Result_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2130} Tmp_2 := __HAVOC_malloc(20);
    SignedInteger := actual_SignedInteger;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    SD2_2 := Tmp_2;
    return;
}



procedure {:origName "CyzAmountInTxBuffer"} CyzAmountInTxBuffer(actual_extension_14: int) returns (Tmp_1038: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzAmountInTxBuffer"} CyzAmountInTxBuffer(actual_extension_14: int) returns (Tmp_1038: int)
{
  var {:scalar} txAmount1: int;
  var {:scalar} tx_8: int;
  var {:scalar} tx_9: int;
  var {:scalar} txAmount2: int;
  var {:scalar} tx_10: int;
  var {:pointer} extension_14: int;

  anon0:
    extension_14 := actual_extension_14;
    assume {:nonnull} extension_14 != 0;
    assume extension_14 > 0;
    call {:si_unique_call 2131} tx_9 := corral_nondet();
    call {:si_unique_call 2132} tx_10 := corral_nondet();
    assume {:nonnull} extension_14 != 0;
    assume extension_14 > 0;
    havoc tx_8;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} tx_9 >= tx_10;
    txAmount1 := tx_9 - tx_10;
    txAmount2 := 0;
    goto L23;

  L23:
    Tmp_1038 := txAmount1 + txAmount2;
    return;

  anon3_Then:
    assume {:partition} tx_10 > tx_9;
    txAmount1 := tx_8 - tx_10;
    txAmount2 := tx_9;
    goto L23;
}



procedure {:origName "CyzCheckIfTxEmpty"} CyzCheckIfTxEmpty(actual_Context_43: int) returns (Tmp_1040: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1040 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCheckIfTxEmpty"} CyzCheckIfTxEmpty(actual_Context_43: int) returns (Tmp_1040: int)
{
  var {:pointer} pHoldingEmpty: int;
  var {:pointer} S_11: int;
  var {:pointer} Extension_63: int;
  var {:pointer} Context_43: int;
  var vslice_dummy_var_947: int;

  anon0:
    Context_43 := actual_Context_43;
    S_11 := Context_43;
    assume {:nonnull} S_11 != 0;
    assume S_11 > 0;
    havoc Extension_63;
    assume {:nonnull} S_11 != 0;
    assume S_11 > 0;
    havoc pHoldingEmpty;
    assume {:nonnull} Extension_63 != 0;
    assume Extension_63 > 0;
    assume {:nonnull} pHoldingEmpty != 0;
    assume pHoldingEmpty > 0;
    havoc vslice_dummy_var_947;
    Mem_T.INT4[pHoldingEmpty] := vslice_dummy_var_947;
    Tmp_1040 := 0;
    return;
}



procedure {:origName "RtlLargeIntegerNegate"} RtlLargeIntegerNegate(actual_structPtr888Subtrahend: int) returns (SD1_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlLargeIntegerNegate"} RtlLargeIntegerNegate(actual_structPtr888Subtrahend: int) returns (SD1_2: int)
{
  var {:scalar} Subtrahend: int;
  var {:scalar} Difference: int;
  var {:scalar} Tmp_1: int;
  var {:pointer} structPtr888Subtrahend: int;

  anon0:
    call {:si_unique_call 2133} Subtrahend := __HAVOC_malloc(20);
    call {:si_unique_call 2134} Difference := __HAVOC_malloc(20);
    call {:si_unique_call 2135} Tmp_1 := __HAVOC_malloc(20);
    structPtr888Subtrahend := actual_structPtr888Subtrahend;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    SD1_2 := Tmp_1;
    return;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_560: int;

  anon0:
    call {:si_unique_call 2136} vslice_dummy_var_560 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_561: int;

  anon0:
    call {:si_unique_call 2137} vslice_dummy_var_561 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_562: int;

  anon0:
    call {:si_unique_call 2138} vslice_dummy_var_562 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1062: int);
  free ensures {:va_keep} Tmp_1062 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1062: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_1062 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_563: int;

  anon0:
    call {:si_unique_call 2139} vslice_dummy_var_563 := __HAVOC_malloc(4);
    p := actual_p;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p != 0;
    assume p > 0;
    Mem_T.INT4[p] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_1066: int);
  free ensures {:va_keep} Tmp_1066 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_1066: int)
{

  anon0:
    Tmp_1066 := 1;
    return;
}



procedure {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end()
{
  var vslice_dummy_var_564: int;

  anon0:
    call {:si_unique_call 2140} vslice_dummy_var_564 := __HAVOC_malloc(4);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int)
{
  var vslice_dummy_var_565: int;

  anon0:
    call {:si_unique_call 2141} vslice_dummy_var_565 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_SD1_3: int, actual_Dpc_7: int) returns (Tmp_1072: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1072 == 1 || Tmp_1072 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_SD1_3: int, actual_Dpc_7: int) returns (Tmp_1072: int)
{
  var {:scalar} DueTime_1: int;
  var {:pointer} SD1_3: int;

  anon0:
    call {:si_unique_call 2142} DueTime_1 := __HAVOC_malloc(20);
    SD1_3 := actual_SD1_3;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1072 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1072 := 0;
    goto L1;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_566: int;

  anon0:
    call {:si_unique_call 2143} vslice_dummy_var_566 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1076: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1076: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_1076 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_1076 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_1076 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_8: int, actual_DeferredRoutine: int, actual_DeferredContext_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_8: int, actual_DeferredRoutine: int, actual_DeferredContext_6: int)
{
  var {:pointer} Dpc_8: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_567: int;

  anon0:
    call {:si_unique_call 2144} vslice_dummy_var_567 := __HAVOC_malloc(4);
    Dpc_8 := actual_Dpc_8;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_8 != 0;
    assume Dpc_8 > 0;
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_568: int;

  anon0:
    call {:si_unique_call 2145} vslice_dummy_var_568 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_1082: int);
  modifies Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_1082: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    r := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_2)];
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_2)] := CancelRoutine;
    Tmp_1082 := r;
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_569: int;

  anon0:
    call {:si_unique_call 2146} vslice_dummy_var_569 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_1086: int);
  free ensures {:va_keep} Tmp_1086 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_1086: int)
{

  anon0:
    Tmp_1086 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_570: int;

  anon0:
    call {:si_unique_call 2147} vslice_dummy_var_570 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_1: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_1: int, actual_pirp_4: int)
{
  var vslice_dummy_var_571: int;

  anon0:
    call {:si_unique_call 2148} vslice_dummy_var_571 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_1092: int);
  free ensures {:va_keep} Tmp_1092 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_1092: int)
{

  anon0:
    Tmp_1092 := 1;
    return;
}



procedure {:origName "sdv_RunISRRoutines"} {:osmodel} sdv_RunISRRoutines(actual_ki: int, actual_pv1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunISRRoutines"} {:osmodel} sdv_RunISRRoutines(actual_ki: int, actual_pv1: int)
{
  var vslice_dummy_var_572: int;

  anon0:
    call {:si_unique_call 2149} vslice_dummy_var_572 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_573: int;

  anon0:
    call {:si_unique_call 2150} vslice_dummy_var_573 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_9: int) returns (Tmp_1098: int);
  free ensures {:va_keep} Tmp_1098 == 1 || Tmp_1098 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_9: int) returns (Tmp_1098: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1098 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1098 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1100: int);
  free ensures {:va_keep} Tmp_1100 == 0 || Tmp_1100 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1100: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1100 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1100 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, start_irql, yogi_error;
  free ensures {:va_keep} start_irql == 0 || start_irql == old(start_irql);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:pointer} Tmp_1102: int;
  var {:scalar} sdv_845: int;
  var {:pointer} Tmp_1103: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} Tmp_1106: int;
  var {:scalar} sdv_861: int;
  var {:pointer} sdv_868: int;
  var {:pointer} Tmp_1107: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_948: int;
  var vslice_dummy_var_949: int;

  anon0:
    call {:si_unique_call 2151} vslice_dummy_var_574 := __HAVOC_malloc(4);
    call {:si_unique_call 2152} sdv_861 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 2153} sdv_845 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 2154} vslice_dummy_var_575 := sdv_CheckDpcRoutines();
    call {:si_unique_call 2155} vslice_dummy_var_576 := sdv_CheckIsrRoutines();
    call {:si_unique_call 2156} vslice_dummy_var_577 := sdv_CheckCancelRoutines();
    call {:si_unique_call 2157} vslice_dummy_var_578 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 2158} vslice_dummy_var_579 := sdv_IoCompletionRoutines();
    call {:si_unique_call 2159} vslice_dummy_var_580 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 2160} vslice_dummy_var_581 := sdv_CheckAddDevice();
    call {:si_unique_call 2161} vslice_dummy_var_582 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 2162} vslice_dummy_var_583 := sdv_CheckIrpMjPower();
    call {:si_unique_call 2163} vslice_dummy_var_584 := sdv_CheckDriverUnload();
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    goto anon204_Then, anon204_Else;

  anon204_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon176_Then:
    goto L1;

  anon177_Then:
    goto L1;

  anon178_Then:
    goto L1;

  anon179_Then:
    goto L1;

  anon180_Then:
    goto L1;

  anon181_Then:
    goto L1;

  anon182_Then:
    goto L1;

  anon183_Then:
    goto L1;

  anon184_Then:
    goto L1;

  anon185_Then:
    goto L1;

  anon186_Then:
    goto L1;

  anon187_Then:
    goto L1;

  anon188_Then:
    goto L1;

  anon189_Then:
    goto L1;

  anon190_Then:
    goto L1;

  anon191_Then:
    goto L1;

  anon192_Then:
    goto L1;

  anon193_Then:
    goto L1;

  anon194_Then:
    goto L1;

  anon195_Then:
    goto L1;

  anon196_Then:
    goto L1;

  anon197_Then:
    goto L1;

  anon198_Then:
    goto L1;

  anon199_Then:
    goto L1;

  anon200_Then:
    goto L1;

  anon201_Then:
    goto L1;

  anon202_Then:
    goto L1;

  anon203_Then:
    goto L1;

  anon204_Then:
    goto L1;

  anon205_Then:
    goto L1;

  anon206_Then:
    goto L1;

  anon207_Then:
    goto L1;

  anon208_Then:
    goto L1;

  anon209_Then:
    goto L1;

  anon210_Then:
    call {:si_unique_call 2164} sdv_stub_power_completion_begin();
    call {:si_unique_call 2165} sdv_868 := sdv_SetPowerRequestIrpMinorFunction(sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_1107 := Overlay_unnamed_tag_6(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    havoc Tmp_1105;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_1106 := Overlay_unnamed_tag_6(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    havoc Tmp_1102;
    assume {:nonnull} Tmp_1102 != 0;
    assume Tmp_1102 > 0;
    assume {:nonnull} Tmp_1105 != 0;
    assume Tmp_1105 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    havoc vslice_dummy_var_948;
    havoc vslice_dummy_var_949;
    call {:si_unique_call 2166} CyzWakeCompletion(sdv_p_devobj_fdo, vslice_dummy_var_948, vslice_dummy_var_949, sdv_pv2, IoStatus__IRP(sdv_irp));
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon211_Then:
    goto L1;

  anon212_Then:
    goto L1;

  anon213_Then:
    goto L1;

  anon214_Then:
    goto L1;

  anon215_Then:
    goto L1;

  anon216_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon218_Then:
    goto L1;

  anon219_Then:
    goto L1;

  anon220_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2167} vslice_dummy_var_588 := CyzSystemPowerComplete(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon221_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2168} vslice_dummy_var_587 := CyzSyncCompletion(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon222_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2169} vslice_dummy_var_586 := CyzDevicePowerComplete(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon223_Then:
    call {:si_unique_call 2170} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2171} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2172} CyzFilterCancelQueued(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon224_Then:
    call {:si_unique_call 2173} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2174} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2175} CyzCancelWait(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon225_Then:
    call {:si_unique_call 2176} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2177} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2178} CyzCancelQueued(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon226_Then:
    call {:si_unique_call 2179} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2180} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2181} CyzCancelImmediate(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon227_Then:
    call {:si_unique_call 2182} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2183} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2184} CyzCancelCurrentXoff(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon228_Then:
    call {:si_unique_call 2185} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2186} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2187} CyzCancelCurrentWrite(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon229_Then:
    call {:si_unique_call 2188} Tmp_1103 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_1103] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2189} IoAcquireCancelSpinLock(Tmp_1103);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_1103];
    call {:si_unique_call 2190} CyzCancelCurrentRead(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon230_Then:
    goto L1;

  anon231_Then:
    goto L1;

  anon232_Then:
    goto L1;

  anon233_Then:
    goto L1;

  anon234_Then:
    goto L1;

  anon235_Then:
    goto L1;

  anon236_Then:
    goto L1;

  anon237_Then:
    goto L1;

  anon238_Then:
    goto L1;

  anon239_Then:
    goto L1;

  anon240_Then:
    goto L1;

  anon241_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon243_Then:
    goto L1;

  anon244_Then:
    goto L1;

  anon245_Then:
    goto L1;

  anon246_Then:
    goto L1;

  anon247_Then:
    goto L1;

  anon248_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2191} CyzUnlockPages(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon249_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2192} CyzTimeoutXoff(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon250_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2193} CyzReadTimeout(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon251_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2194} CyzPollingDpc(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon252_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2195} CyzCompleteXoff(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon253_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2196} CyzCompleteWrite(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon254_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2197} CyzCompleteWait(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon255_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2198} CyzCompleteRead(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon256_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2199} CyzCommError(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon257_Then:
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} sdv_845 != 0;
    call {:si_unique_call 2200} sdv_stub_driver_init();
    call {:si_unique_call 2201} sdv_RunStartIo(0, 0);
    goto L1;

  anon175_Then:
    assume {:partition} sdv_845 == 0;
    goto L1;

  anon173_Then:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} sdv_861 != 0;
    call {:si_unique_call 2202} sdv_stub_driver_init();
    call {:si_unique_call 2203} vslice_dummy_var_585 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon258_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon174_Then:
    assume {:partition} sdv_861 == 0;
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_1108: int);
  free ensures {:va_keep} Tmp_1108 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_1108: int)
{

  anon0:
    Tmp_1108 := 1;
    return;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName: int) returns (Tmp_1110: int);
  free ensures {:va_keep} Tmp_1110 == 0 || Tmp_1110 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName: int) returns (Tmp_1110: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1110 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1110 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1112: int);
  free ensures {:va_keep} Tmp_1112 == 0 || Tmp_1112 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1112: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1112 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1112 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_1114: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_1114: int)
{
  var {:pointer} sdv_877: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2204} sdv_877 := __HAVOC_malloc(1);
    Tmp_1114 := sdv_877;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1114 := 0;
    goto L1;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_1116: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_1116: int)
{
  var {:pointer} sdv_879: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2205} sdv_879 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1116 := sdv_879;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1116 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_1118: int);
  free ensures {:va_keep} Tmp_1118 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_1118: int)
{

  anon0:
    Tmp_1118 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_1120: int);
  free ensures {:va_keep} Tmp_1120 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_1120: int)
{

  anon0:
    Tmp_1120 := 1;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_17: int, actual_Irp_17: int) returns (Tmp_1122: int);
  free ensures {:va_keep} Tmp_1122 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_17: int, actual_Irp_17: int) returns (Tmp_1122: int)
{
  var {:scalar} status_23: int;
  var {:pointer} Irp_17: int;

  anon0:
    Irp_17 := actual_Irp_17;
    status_23 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  L25:
    Tmp_1122 := status_23;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L36;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_18: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_18: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 2206} State := __HAVOC_malloc(8);
    call {:si_unique_call 2207} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 2208} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_1125: int);
  free ensures {:va_keep} Tmp_1125 == 1 || Tmp_1125 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_1125: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1125 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1125 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_589: int;

  anon0:
    call {:si_unique_call 2209} vslice_dummy_var_589 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_44: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_44: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp_4: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_44: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_590: int;

  anon0:
    call {:si_unique_call 2210} vslice_dummy_var_590 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_44 := actual_Context_44;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 2211} irpSp_4 := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    return;
}



procedure {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_10: int) returns (Tmp_1131: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1131 == 1 || Tmp_1131 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_10: int) returns (Tmp_1131: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 2212} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1131 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1131 := 0;
    goto L1;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_591: int;

  anon0:
    call {:si_unique_call 2213} vslice_dummy_var_591 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 1;
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1135: int);
  free ensures {:va_keep} Tmp_1135 == 1 || Tmp_1135 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1135: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1135 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1135 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo: int, actual_Path: int, actual_ValueName: int) returns (Tmp_1137: int);
  free ensures {:va_keep} Tmp_1137 == 0 || Tmp_1137 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo: int, actual_Path: int, actual_ValueName: int) returns (Tmp_1137: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1137 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1137 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_18: int)
{
  var vslice_dummy_var_592: int;

  anon0:
    call {:si_unique_call 2214} vslice_dummy_var_592 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1141: int);
  free ensures {:va_keep} Tmp_1141 == 258 || Tmp_1141 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1141: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1141 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1141 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_1141 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_19: int)
{
  var vslice_dummy_var_593: int;

  anon0:
    call {:si_unique_call 2215} vslice_dummy_var_593 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_1145: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_1145: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_1145 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_1149: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_1149: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc Tmp_1149;
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_594: int;

  anon0:
    call {:si_unique_call 2216} vslice_dummy_var_594 := __HAVOC_malloc(4);
    new := actual_new;
    sdv_irql_current := new;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 0 || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == 0 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_current == 0 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 0 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == 0 || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == 0 || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int)
{
  var {:pointer} kdpc: int;
  var {:pointer} pDpcContext: int;
  var vslice_dummy_var_595: int;

  anon0:
    call {:si_unique_call 2217} vslice_dummy_var_595 := __HAVOC_malloc(4);
    kdpc := actual_kdpc;
    pDpcContext := actual_pDpcContext;
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2218} CyzCommError(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L4;

  L4:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2219} CyzCompleteRead(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L20;

  L20:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2220} CyzCompleteWait(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L36;

  L36:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2221} CyzCompleteWrite(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L52;

  L52:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2222} CyzCompleteXoff(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L68;

  L68:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2223} CyzPollingDpc(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L84;

  L84:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2224} CyzReadTimeout(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L100;

  L100:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2225} CyzTimeoutXoff(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L116;

  L116:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2226} CyzUnlockPages(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  L1:
    return;

  anon54_Then:
    goto L1;

  anon52_Then:
    goto L1;

  anon53_Then:
    goto L116;

  anon50_Then:
    goto L116;

  anon51_Then:
    goto L100;

  anon48_Then:
    goto L100;

  anon49_Then:
    goto L84;

  anon46_Then:
    goto L84;

  anon47_Then:
    goto L68;

  anon44_Then:
    goto L68;

  anon45_Then:
    goto L52;

  anon42_Then:
    goto L52;

  anon43_Then:
    goto L36;

  anon40_Then:
    goto L36;

  anon41_Then:
    goto L20;

  anon38_Then:
    goto L20;

  anon39_Then:
    goto L4;

  anon37_Then:
    goto L4;
}



procedure {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0 || sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin()
{
  var vslice_dummy_var_596: int;

  anon0:
    call {:si_unique_call 2227} vslice_dummy_var_596 := __HAVOC_malloc(4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    goto L1;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_20: int, actual_MinorFunction_1: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_45: int, actual_Irp_19: int) returns (Tmp_1157: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1157 == -1073741584 || Tmp_1157 == 259 || Tmp_1157 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_20: int, actual_MinorFunction_1: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_45: int, actual_Irp_19: int) returns (Tmp_1157: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 2228} PowerState := __HAVOC_malloc(8);
    MinorFunction_1 := actual_MinorFunction_1;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction_1 != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction_1 != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction_1 != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1157 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction_1 == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1157 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1157 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction_1 == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction_1 == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_1159: int, dup_assertVar: bool);
  modifies alloc, start_irql, yogi_error, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} start_irql == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_1159: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_1160: int;
  var {:scalar} Tmp_1162: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var SerialPortNameGuid__Loc: int;
  var SerailPortPerfGuid__Loc: int;
  var SerialPortPropertiesGuid__Loc: int;
  var SerialPortHWGuid__Loc: int;
  var CyzGlobals__Loc: int;
  var SerialPortCommGuid__Loc: int;
  var CyzPhysicalZero__Loc: int;
  var KeTickCount__Loc: int;
  var CyzPhysicalZero_1__Loc: int;
  var driverDefaults__Loc: int;
  var CyzPhysicalZero_2__Loc: int;
  var GUID_DEVINTERFACE_COMPORT__Loc: int;
  var CyzPhysicalZero_3__Loc: int;
  var CyzPhysicalZero_4__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var vslice_dummy_var_712: int;
  var vslice_dummy_var_713: int;
  var vslice_dummy_var_714: int;
  var vslice_dummy_var_715: int;
  var vslice_dummy_var_716: int;
  var vslice_dummy_var_717: int;
  var vslice_dummy_var_718: int;
  var vslice_dummy_var_719: int;
  var vslice_dummy_var_720: int;
  var vslice_dummy_var_721: int;
  var vslice_dummy_var_722: int;
  var vslice_dummy_var_723: int;
  var vslice_dummy_var_724: int;
  var vslice_dummy_var_725: int;
  var vslice_dummy_var_726: int;
  var vslice_dummy_var_727: int;
  var vslice_dummy_var_728: int;
  var vslice_dummy_var_729: int;
  var vslice_dummy_var_730: int;
  var vslice_dummy_var_731: int;
  var vslice_dummy_var_732: int;
  var vslice_dummy_var_733: int;
  var vslice_dummy_var_734: int;
  var vslice_dummy_var_735: int;
  var vslice_dummy_var_736: int;
  var vslice_dummy_var_737: int;
  var vslice_dummy_var_738: int;
  var vslice_dummy_var_739: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_752: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_762: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_800: int;
  var vslice_dummy_var_801: int;
  var vslice_dummy_var_802: int;
  var vslice_dummy_var_803: int;
  var vslice_dummy_var_804: int;
  var vslice_dummy_var_805: int;
  var vslice_dummy_var_806: int;
  var vslice_dummy_var_950: int;
  var vslice_dummy_var_951: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 2229} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 2230} SerialPortNameGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortNameGuid__Loc == SerialPortNameGuid;
    assume SerialPortNameGuid != 0;
    call {:si_unique_call 2231} SerailPortPerfGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerailPortPerfGuid__Loc == SerailPortPerfGuid;
    assume SerailPortPerfGuid != 0;
    call {:si_unique_call 2232} SerialPortPropertiesGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortPropertiesGuid__Loc == SerialPortPropertiesGuid;
    assume SerialPortPropertiesGuid != 0;
    call {:si_unique_call 2233} SerialPortHWGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortHWGuid__Loc == SerialPortHWGuid;
    assume SerialPortHWGuid != 0;
    call {:si_unique_call 2234} CyzGlobals__Loc := __HAVOC_malloc_or_null(28);
    assume CyzGlobals__Loc == CyzGlobals;
    assume CyzGlobals != 0;
    call {:si_unique_call 2235} SerialPortCommGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortCommGuid__Loc == SerialPortCommGuid;
    assume SerialPortCommGuid != 0;
    call {:si_unique_call 2236} CyzPhysicalZero__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero__Loc == CyzPhysicalZero;
    assume CyzPhysicalZero != 0;
    call {:si_unique_call 2237} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 2238} CyzPhysicalZero_1__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_1__Loc == CyzPhysicalZero_1;
    assume CyzPhysicalZero_1 != 0;
    call {:si_unique_call 2239} driverDefaults__Loc := __HAVOC_malloc_or_null(68);
    assume driverDefaults__Loc == driverDefaults;
    assume driverDefaults != 0;
    call {:si_unique_call 2240} CyzPhysicalZero_2__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_2__Loc == CyzPhysicalZero_2;
    assume CyzPhysicalZero_2 != 0;
    call {:si_unique_call 2241} GUID_DEVINTERFACE_COMPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_COMPORT__Loc == GUID_DEVINTERFACE_COMPORT;
    assume GUID_DEVINTERFACE_COMPORT != 0;
    call {:si_unique_call 2242} CyzPhysicalZero_3__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_3__Loc == CyzPhysicalZero_3;
    assume CyzPhysicalZero_3 != 0;
    call {:si_unique_call 2243} CyzPhysicalZero_4__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_4__Loc == CyzPhysicalZero_4;
    assume CyzPhysicalZero_4 != 0;
    call {:si_unique_call 2244} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 2245} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 2246} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 2247} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 2248} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2249} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 2250} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 2251} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 2252} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 2253} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 2254} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 2255} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2256} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 2257} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 2258} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 2259} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 2260} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 2261} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 2262} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 2263} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 2264} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 2265} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 2266} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 2267} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 2268} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 2269} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2270} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 2271} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 2272} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 2273} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 2274} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 2275} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 2276} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 2277} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 2278} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 2279} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 2280} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 2281} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 2282} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 2283} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 2284} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv1 == boogieTmp;
    call {:si_unique_call 2285} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 2286} boogieTmp := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc == boogieTmp;
    call {:si_unique_call 2287} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 2288} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pIoDpcContext == boogieTmp;
    call {:si_unique_call 2289} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 2290} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 2291} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 2292} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 2293} vslice_dummy_var_712 := __HAVOC_malloc(4);
    call {:si_unique_call 2294} vslice_dummy_var_713 := __HAVOC_malloc(4);
    call {:si_unique_call 2295} vslice_dummy_var_714 := __HAVOC_malloc(4);
    call {:si_unique_call 2296} vslice_dummy_var_715 := __HAVOC_malloc(4);
    call {:si_unique_call 2297} vslice_dummy_var_716 := __HAVOC_malloc(4);
    call {:si_unique_call 2298} vslice_dummy_var_717 := __HAVOC_malloc(4);
    call {:si_unique_call 2299} vslice_dummy_var_950 := __HAVOC_malloc(60);
    call {:si_unique_call 2300} vslice_dummy_var_718 := __HAVOC_malloc(4);
    call {:si_unique_call 2301} vslice_dummy_var_719 := __HAVOC_malloc(4);
    call {:si_unique_call 2302} vslice_dummy_var_720 := __HAVOC_malloc(4);
    call {:si_unique_call 2303} vslice_dummy_var_721 := __HAVOC_malloc(4);
    call {:si_unique_call 2304} vslice_dummy_var_722 := __HAVOC_malloc(4);
    call {:si_unique_call 2305} vslice_dummy_var_723 := __HAVOC_malloc(4);
    call {:si_unique_call 2306} vslice_dummy_var_724 := __HAVOC_malloc(4);
    call {:si_unique_call 2307} vslice_dummy_var_725 := __HAVOC_malloc(4);
    call {:si_unique_call 2308} vslice_dummy_var_726 := __HAVOC_malloc(4);
    call {:si_unique_call 2309} vslice_dummy_var_727 := __HAVOC_malloc(4);
    call {:si_unique_call 2310} vslice_dummy_var_728 := __HAVOC_malloc(4);
    call {:si_unique_call 2311} vslice_dummy_var_729 := __HAVOC_malloc(4);
    call {:si_unique_call 2312} vslice_dummy_var_730 := __HAVOC_malloc(4);
    call {:si_unique_call 2313} vslice_dummy_var_731 := __HAVOC_malloc(4);
    call {:si_unique_call 2314} vslice_dummy_var_732 := __HAVOC_malloc(4);
    call {:si_unique_call 2315} vslice_dummy_var_733 := __HAVOC_malloc(4);
    call {:si_unique_call 2316} vslice_dummy_var_734 := __HAVOC_malloc(4);
    call {:si_unique_call 2317} vslice_dummy_var_735 := __HAVOC_malloc(4);
    call {:si_unique_call 2318} vslice_dummy_var_736 := __HAVOC_malloc(4);
    call {:si_unique_call 2319} vslice_dummy_var_737 := __HAVOC_malloc(4);
    call {:si_unique_call 2320} vslice_dummy_var_738 := __HAVOC_malloc(4);
    call {:si_unique_call 2321} vslice_dummy_var_739 := __HAVOC_malloc(4);
    call {:si_unique_call 2322} vslice_dummy_var_740 := __HAVOC_malloc(4);
    call {:si_unique_call 2323} vslice_dummy_var_741 := __HAVOC_malloc(4);
    call {:si_unique_call 2324} vslice_dummy_var_742 := __HAVOC_malloc(4);
    call {:si_unique_call 2325} vslice_dummy_var_743 := __HAVOC_malloc(4);
    call {:si_unique_call 2326} vslice_dummy_var_744 := __HAVOC_malloc(4);
    call {:si_unique_call 2327} vslice_dummy_var_745 := __HAVOC_malloc(4);
    call {:si_unique_call 2328} vslice_dummy_var_746 := __HAVOC_malloc(4);
    call {:si_unique_call 2329} vslice_dummy_var_747 := __HAVOC_malloc(4);
    call {:si_unique_call 2330} vslice_dummy_var_748 := __HAVOC_malloc(4);
    call {:si_unique_call 2331} vslice_dummy_var_749 := __HAVOC_malloc(4);
    call {:si_unique_call 2332} vslice_dummy_var_750 := __HAVOC_malloc(4);
    call {:si_unique_call 2333} vslice_dummy_var_751 := __HAVOC_malloc(4);
    call {:si_unique_call 2334} vslice_dummy_var_752 := __HAVOC_malloc(4);
    call {:si_unique_call 2335} vslice_dummy_var_753 := __HAVOC_malloc(4);
    call {:si_unique_call 2336} vslice_dummy_var_754 := __HAVOC_malloc(4);
    call {:si_unique_call 2337} vslice_dummy_var_755 := __HAVOC_malloc(4);
    call {:si_unique_call 2338} vslice_dummy_var_756 := __HAVOC_malloc(4);
    call {:si_unique_call 2339} vslice_dummy_var_757 := __HAVOC_malloc(4);
    call {:si_unique_call 2340} vslice_dummy_var_951 := __HAVOC_malloc(60);
    call {:si_unique_call 2341} vslice_dummy_var_758 := __HAVOC_malloc(4);
    call {:si_unique_call 2342} vslice_dummy_var_759 := __HAVOC_malloc(4);
    call {:si_unique_call 2343} vslice_dummy_var_760 := __HAVOC_malloc(4);
    call {:si_unique_call 2344} vslice_dummy_var_761 := __HAVOC_malloc(4);
    call {:si_unique_call 2345} vslice_dummy_var_762 := __HAVOC_malloc(4);
    call {:si_unique_call 2346} vslice_dummy_var_763 := __HAVOC_malloc(4);
    call {:si_unique_call 2347} vslice_dummy_var_764 := __HAVOC_malloc(4);
    call {:si_unique_call 2348} vslice_dummy_var_765 := __HAVOC_malloc(4);
    call {:si_unique_call 2349} vslice_dummy_var_766 := __HAVOC_malloc(4);
    call {:si_unique_call 2350} vslice_dummy_var_767 := __HAVOC_malloc(4);
    call {:si_unique_call 2351} vslice_dummy_var_768 := __HAVOC_malloc(4);
    call {:si_unique_call 2352} vslice_dummy_var_769 := __HAVOC_malloc(4);
    call {:si_unique_call 2353} vslice_dummy_var_770 := __HAVOC_malloc(4);
    call {:si_unique_call 2354} vslice_dummy_var_771 := __HAVOC_malloc(4);
    call {:si_unique_call 2355} vslice_dummy_var_772 := __HAVOC_malloc(4);
    call {:si_unique_call 2356} vslice_dummy_var_773 := __HAVOC_malloc(4);
    call {:si_unique_call 2357} vslice_dummy_var_774 := __HAVOC_malloc(4);
    call {:si_unique_call 2358} vslice_dummy_var_775 := __HAVOC_malloc(4);
    call {:si_unique_call 2359} vslice_dummy_var_776 := __HAVOC_malloc(4);
    call {:si_unique_call 2360} vslice_dummy_var_777 := __HAVOC_malloc(4);
    call {:si_unique_call 2361} vslice_dummy_var_778 := __HAVOC_malloc(4);
    call {:si_unique_call 2362} vslice_dummy_var_779 := __HAVOC_malloc(4);
    call {:si_unique_call 2363} vslice_dummy_var_780 := __HAVOC_malloc(4);
    call {:si_unique_call 2364} vslice_dummy_var_781 := __HAVOC_malloc(4);
    call {:si_unique_call 2365} vslice_dummy_var_782 := __HAVOC_malloc(4);
    call {:si_unique_call 2366} vslice_dummy_var_783 := __HAVOC_malloc(4);
    call {:si_unique_call 2367} vslice_dummy_var_784 := __HAVOC_malloc(4);
    call {:si_unique_call 2368} vslice_dummy_var_785 := __HAVOC_malloc(4);
    call {:si_unique_call 2369} vslice_dummy_var_786 := __HAVOC_malloc(4);
    call {:si_unique_call 2370} vslice_dummy_var_787 := __HAVOC_malloc(4);
    call {:si_unique_call 2371} vslice_dummy_var_788 := __HAVOC_malloc(4);
    call {:si_unique_call 2372} vslice_dummy_var_789 := __HAVOC_malloc(4);
    call {:si_unique_call 2373} vslice_dummy_var_790 := __HAVOC_malloc(4);
    call {:si_unique_call 2374} vslice_dummy_var_791 := __HAVOC_malloc(4);
    call {:si_unique_call 2375} vslice_dummy_var_792 := __HAVOC_malloc(4);
    call {:si_unique_call 2376} vslice_dummy_var_793 := __HAVOC_malloc(4);
    call {:si_unique_call 2377} vslice_dummy_var_794 := __HAVOC_malloc(4);
    call {:si_unique_call 2378} vslice_dummy_var_795 := __HAVOC_malloc(4);
    call {:si_unique_call 2379} vslice_dummy_var_796 := __HAVOC_malloc(4);
    call {:si_unique_call 2380} vslice_dummy_var_797 := __HAVOC_malloc(4);
    call {:si_unique_call 2381} vslice_dummy_var_798 := __HAVOC_malloc(4);
    call {:si_unique_call 2382} vslice_dummy_var_799 := __HAVOC_malloc(4);
    call {:si_unique_call 2383} vslice_dummy_var_800 := __HAVOC_malloc(4);
    call {:si_unique_call 2384} vslice_dummy_var_801 := __HAVOC_malloc(4);
    call {:si_unique_call 2385} vslice_dummy_var_802 := __HAVOC_malloc(4);
    call {:si_unique_call 2386} vslice_dummy_var_803 := __HAVOC_malloc(4);
    call {:si_unique_call 2387} vslice_dummy_var_804 := __HAVOC_malloc(4);
    call {:si_unique_call 2388} vslice_dummy_var_805 := __HAVOC_malloc(4);
    call {:si_unique_call 2389} vslice_dummy_var_806 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 2390} corralExtraInit();
    call {:si_unique_call 2391} corralExplainErrorInit();
    call {:si_unique_call 2392} _sdv_init21();
    call {:si_unique_call 2393} _sdv_init18();
    call {:si_unique_call 2394} _sdv_init19();
    call {:si_unique_call 2395} _sdv_init17();
    call {:si_unique_call 2396} _sdv_init1();
    call {:si_unique_call 2397} _sdv_init4();
    call {:si_unique_call 2398} _sdv_init5();
    call {:si_unique_call 2399} _sdv_init3();
    call {:si_unique_call 2400} _sdv_init16();
    call {:si_unique_call 2401} _sdv_init14();
    call {:si_unique_call 2402} _sdv_init6();
    call {:si_unique_call 2403} _sdv_init15();
    call {:si_unique_call 2404} _sdv_init10();
    call {:si_unique_call 2405} _sdv_init11();
    call {:si_unique_call 2406} _sdv_init9();
    call {:si_unique_call 2407} _sdv_init12();
    call {:si_unique_call 2408} _sdv_init13();
    call {:si_unique_call 2409} _sdv_init7();
    call {:si_unique_call 2410} _sdv_init8();
    call {:si_unique_call 2411} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_1162 := 0;
    goto L44;

  L44:
    assume Tmp_1162 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_1160 := 0;
    goto L48;

  L48:
    assume Tmp_1160 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 2412} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L42;

  L42:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_1160 := 1;
    goto L48;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_1162 := 1;
    goto L44;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1163: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1163: int)
{
  var {:pointer} sdv_889: int;

  anon0:
    call {:si_unique_call 2413} sdv_889 := __HAVOC_malloc(1);
    Tmp_1163 := sdv_889;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_597: int;

  anon0:
    call {:si_unique_call 2414} vslice_dummy_var_597 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_20: int) returns (Tmp_1167: int);
  free ensures {:va_keep} Tmp_1167 == 0 || Tmp_1167 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_20: int) returns (Tmp_1167: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1167 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1167 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1169: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1169: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Mem_T.INT4[Addend] := Mem_T.INT4[Addend] - 1;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Tmp_1169 := Mem_T.INT4[Addend];
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_598: int;

  anon0:
    call {:si_unique_call 2415} vslice_dummy_var_598 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int)
{
  var vslice_dummy_var_599: int;

  anon0:
    call {:si_unique_call 2416} vslice_dummy_var_599 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_9: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_9: int)
{
  var vslice_dummy_var_600: int;
  var vslice_dummy_var_601: int;

  anon0:
    call {:si_unique_call 2417} vslice_dummy_var_600 := __HAVOC_malloc(4);
    call {:si_unique_call 2418} sdv_stub_startio_begin();
    call {:si_unique_call 2419} vslice_dummy_var_601 := sdv_DoNothing();
    call {:si_unique_call 2420} sdv_stub_startio_end();
    return;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_1177: int);
  free ensures {:va_keep} Tmp_1177 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_1177: int)
{

  anon0:
    Tmp_1177 := 1;
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_602: int;

  anon0:
    call {:si_unique_call 2421} vslice_dummy_var_602 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin()
{
  var vslice_dummy_var_603: int;

  anon0:
    call {:si_unique_call 2422} vslice_dummy_var_603 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_1183: int);
  free ensures {:va_keep} Tmp_1183 == 0 || Tmp_1183 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_1183: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1183 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1183 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_604: int;

  anon0:
    call {:si_unique_call 2423} vslice_dummy_var_604 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_46: int) returns (Tmp_1187: int);
  free ensures {:va_keep} Tmp_1187 == 0 || Tmp_1187 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_46: int) returns (Tmp_1187: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1187 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1187 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int)
{
  var vslice_dummy_var_605: int;

  anon0:
    call {:si_unique_call 2424} vslice_dummy_var_605 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int)
{
  var vslice_dummy_var_606: int;

  anon0:
    call {:si_unique_call 2425} vslice_dummy_var_606 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_1193: int);
  modifies alloc, Mem_T.CancelRoutine__IRP, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, start_irql, yogi_error;
  free ensures {:va_keep} start_irql == 0 || start_irql == old(start_irql);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_1193: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_1194: int;
  var {:scalar} sdv_902: int;
  var {:scalar} Tmp_1196: int;
  var {:scalar} status_25: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_11: int;
  var vslice_dummy_var_952: int;
  var vslice_dummy_var_953: int;

  anon0:
    po_1 := actual_po_1;
    pirp_11 := actual_pirp_11;
    status_25 := 0;
    minor := sdv_902;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    havoc ps;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    call {:si_unique_call 2426} sdv_SetStatus(pirp_11);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_11)] := 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2427} sdv_stub_dispatch_begin();
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_1196 := 0;
    goto L234;

  L234:
    assume Tmp_1196 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L66;

  L66:
    call {:si_unique_call 2428} status_25 := CyzPnpDispatch(po_1, pirp_11);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2429} sdv_RunISRRoutines(0, 0);
    havoc vslice_dummy_var_952;
    call {:si_unique_call 2430} sdv_RunKeDpcRoutines(vslice_dummy_var_952, sdv_pDpcContext, 0, 0);
    call {:si_unique_call 2431} sdv_RunIoDpcRoutines(0, 0, 0, 0);
    goto L81;

  L81:
    call {:si_unique_call 2432} sdv_stub_dispatch_end(status_25, 0);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Tmp_1193 := status_25;
    goto LM2;

  LM2:
    return;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L66;

  anon65_Then:
    Tmp_1196 := 1;
    goto L234;

  anon63_Then:
    goto L61;

  anon89_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_1194 := 0;
    goto L240;

  L240:
    assume Tmp_1194 != 0;
    goto L60;

  anon62_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_1194 := 1;
    goto L240;

  anon66_Then:
    call {:si_unique_call 2433} status_25 := sdv_DoNothing();
    goto L81;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2434} status_25 := sdv_DoNothing();
    goto L81;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2435} sdv_SetPowerIrpMinorFunction(pirp_11);
    call {:si_unique_call 2436} status_25 := CyzPowerDispatch(po_1, pirp_11);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2437} sdv_RunISRRoutines(0, 0);
    havoc vslice_dummy_var_953;
    call {:si_unique_call 2438} sdv_RunKeDpcRoutines(vslice_dummy_var_953, sdv_pDpcContext, 0, 0);
    call {:si_unique_call 2439} sdv_RunIoDpcRoutines(0, 0, 0, 0);
    goto L81;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2440} status_25 := CyzCleanup(po_1, pirp_11);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 2441} status_25 := sdv_DoNothing();
    goto L81;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2442} status_25 := sdv_DoNothing();
    goto L81;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2443} status_25 := sdv_DoNothing();
    goto L81;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2444} status_25 := CyzIoControl(po_1, pirp_11);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    call {:si_unique_call 2445} status_25 := sdv_DoNothing();
    goto L81;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2446} status_25 := CyzFlush(po_1, pirp_11);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2447} status_25 := sdv_DoNothing();
    goto L81;

  anon77_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2448} status_25 := sdv_DoNothing();
    goto L81;

  anon78_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2449} status_25 := CyzWrite(po_1, pirp_11);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2450} status_25 := CyzRead(po_1, pirp_11);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2451} status_25 := CyzClose(po_1, pirp_11);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2452} status_25 := CyzCreateOpen(po_1, pirp_11);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_1197: int);
  free ensures {:va_keep} Tmp_1197 == -1073741823 || Tmp_1197 == -1073741808 || Tmp_1197 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_1197: int)
{
  var {:scalar} Tmp_1199: int;
  var {:pointer} SymbolicLinkName_2: int;

  anon0:
    SymbolicLinkName_2 := actual_SymbolicLinkName_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1197 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_1197 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName_2 != 0;
    assume SymbolicLinkName_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1199 := 0;
    goto L22;

  L22:
    assume Tmp_1199 != 0;
    Tmp_1197 := 0;
    goto L1;

  anon8_Then:
    Tmp_1199 := 1;
    goto L22;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_1200: int);
  free ensures {:va_keep} Tmp_1200 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_1200: int)
{

  anon0:
    Tmp_1200 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1202: int);
  free ensures {:va_keep} Tmp_1202 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1202: int)
{

  anon0:
    Tmp_1202 := 0;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new_1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_607: int;

  anon0:
    call {:si_unique_call 2453} vslice_dummy_var_607 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    sdv_irql_current := new_1;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_608: int;

  anon0:
    call {:si_unique_call 2454} vslice_dummy_var_608 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init19"} {:osmodel} _sdv_init19();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 0;
  free ensures {:va_keep} sdv_irql_previous_2 == 0;
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == 0;
  free ensures {:va_keep} sdv_irql_previous_4 == 0;
  free ensures {:va_keep} sdv_irql_previous_3 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init19"} {:osmodel} _sdv_init19()
{
  var vslice_dummy_var_609: int;

  anon0:
    call {:si_unique_call 2455} vslice_dummy_var_609 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_io_create_device_called == 0;
    sdv_irql_current := 0;
    sdv_irql_previous := 0;
    sdv_irql_previous_2 := 0;
    sdv_irql_previous_3 := 0;
    sdv_irql_previous_4 := 0;
    sdv_irql_previous_5 := 0;
    assume sdv_maskedEflags == 0;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_isr_routine == li2bplFunctionConstant513;
    assume sdv_ke_dpc == li2bplFunctionConstant515;
    assume sdv_io_dpc == li2bplFunctionConstant518;
    assume sdv_p_devobj_top == sdv_devobj_top;
    Mem_T.INT4[sdv_MmMapIoSpace_int] := 0;
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_610: int;

  anon0:
    call {:si_unique_call 2456} vslice_dummy_var_610 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunIoDpcRoutines"} {:osmodel} sdv_RunIoDpcRoutines(actual_Dpc_11: int, actual_DeviceObject_21: int, actual_Irp_21: int, actual_Context_47: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoDpcRoutines"} {:osmodel} sdv_RunIoDpcRoutines(actual_Dpc_11: int, actual_DeviceObject_21: int, actual_Irp_21: int, actual_Context_47: int)
{
  var vslice_dummy_var_611: int;

  anon0:
    call {:si_unique_call 2457} vslice_dummy_var_611 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_1214: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1214 == -1073741811 || Tmp_1214 == -1073741823 || Tmp_1214 == 0 || Tmp_1214 == 5 || Tmp_1214 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_1214: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_914: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength := actual_ResultLength;
    L := sdv_914;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_1214 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_1214 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1214 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_3;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1214 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1214 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_3;
    goto L13;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1216: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1216: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 2458} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_1216 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_612: int;

  anon0:
    call {:si_unique_call 2459} vslice_dummy_var_612 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1220: int);
  free ensures {:va_keep} Tmp_1220 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1220: int)
{

  anon0:
    Tmp_1220 := 0;
    return;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1224: int);
  free ensures {:va_keep} Tmp_1224 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1224: int)
{

  anon0:
    Tmp_1224 := 0;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1226: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1226: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Mem_T.INT4[Addend_1] := Mem_T.INT4[Addend_1] + 1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Tmp_1226 := Mem_T.INT4[Addend_1];
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_613: int;

  anon0:
    call {:si_unique_call 2460} vslice_dummy_var_613 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1230: int);
  free ensures {:va_keep} Tmp_1230 == 1 || Tmp_1230 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1230: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1230 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1230 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1232: int);
  free ensures {:va_keep} Tmp_1232 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1232: int)
{

  anon0:
    Tmp_1232 := 1;
    return;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_22: int, actual_Irp_22: int) returns (Tmp_1234: int);
  free ensures {:va_keep} Tmp_1234 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_22: int, actual_Irp_22: int) returns (Tmp_1234: int)
{
  var {:scalar} status_26: int;
  var {:pointer} Irp_22: int;

  anon0:
    Irp_22 := actual_Irp_22;
    status_26 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_22;
    goto L25;

  L25:
    Tmp_1234 := status_26;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_22;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_22;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_22;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_22;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_22;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_22;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_22;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_22;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_22;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_22;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_22;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_22;
    goto L36;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_614: int;

  anon0:
    call {:si_unique_call 2461} vslice_dummy_var_614 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_5: int)
{
  var vslice_dummy_var_615: int;

  anon0:
    call {:si_unique_call 2462} vslice_dummy_var_615 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_23: int, actual_Irp_23: int) returns (Tmp_1240: int);
  free ensures {:va_keep} Tmp_1240 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_23: int, actual_Irp_23: int) returns (Tmp_1240: int)
{
  var {:pointer} Irp_23: int;

  anon0:
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 2463} Tmp_1240 := IofCallDriver(0, Irp_23);
    return;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int)
{
  var {:pointer} p_2: int;
  var vslice_dummy_var_616: int;

  anon0:
    call {:si_unique_call 2464} vslice_dummy_var_616 := __HAVOC_malloc(4);
    p_2 := actual_p_2;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    Mem_T.INT4[p_2] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int)
{
  var {:pointer} SpinLock_4: int;
  var vslice_dummy_var_617: int;

  anon0:
    call {:si_unique_call 2465} vslice_dummy_var_617 := __HAVOC_malloc(4);
    SpinLock_4 := actual_SpinLock_4;
    assume {:nonnull} SpinLock_4 != 0;
    assume SpinLock_4 > 0;
    Mem_T.INT4[SpinLock_4] := 0;
    return;
}



procedure {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc(actual_Dpc_12: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1246: int);
  free ensures {:va_keep} Tmp_1246 == 0 || Tmp_1246 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc(actual_Dpc_12: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1246: int)
{
  var {:pointer} Dpc_12: int;

  anon0:
    Dpc_12 := actual_Dpc_12;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1246 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1246 := 1;
    goto L1;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1248: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1248: int)
{
  var {:pointer} sdv_920: int;
  var {:scalar} NumberOfBytes_3: int;

  anon0:
    NumberOfBytes_3 := actual_NumberOfBytes_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2466} sdv_920 := __HAVOC_malloc(NumberOfBytes_3);
    Tmp_1248 := sdv_920;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1248 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1250: int);
  free ensures {:va_keep} Tmp_1250 == 0 || Tmp_1250 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1250: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1250 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1250 := -1073741823;
    goto L1;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1252: int);
  free ensures {:va_keep} Tmp_1252 == -1073741772 || Tmp_1252 == -1073741824 || Tmp_1252 == -1073741789 || Tmp_1252 == -1073741670 || Tmp_1252 == -1073741808 || Tmp_1252 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1252: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1252 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_1252 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_1252 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_1252 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_1252 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_1252 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_618: int;

  anon0:
    call {:si_unique_call 2467} vslice_dummy_var_618 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerRequestIrpMinorFunction"} {:osmodel} sdv_SetPowerRequestIrpMinorFunction(actual_pirp_13: int) returns (Tmp_1256: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerRequestIrpMinorFunction"} {:osmodel} sdv_SetPowerRequestIrpMinorFunction(actual_pirp_13: int) returns (Tmp_1256: int)
{
  var {:pointer} r_4: int;
  var {:pointer} pirp_13: int;

  anon0:
    pirp_13 := actual_pirp_13;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    havoc r_4;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  L37:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  L40:
    Tmp_1256 := r_4;
    return;

  anon45_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon46_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon47_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon48_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon49_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon38_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon39_Then:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  L69:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  anon50_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon51_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon36_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon35_Then:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  L55:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  anon40_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon41_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon42_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon43_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon44_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon37_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_619: int;

  anon0:
    call {:si_unique_call 2468} vslice_dummy_var_619 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_24: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1260: int);
  free ensures {:va_keep} Tmp_1260 == -1073741811 || Tmp_1260 == -1073741808 || Tmp_1260 == -1073741823 || Tmp_1260 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_24: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1260: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1260 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1260 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1260 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1260 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1262: int);
  free ensures {:va_keep} Tmp_1262 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1262: int)
{

  anon0:
    Tmp_1262 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1264: int);
  free ensures {:va_keep} Tmp_1264 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1264: int)
{

  anon0:
    Tmp_1264 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_25: int, actual_Action: int) returns (Tmp_1266: int);
  free ensures {:va_keep} Tmp_1266 == -1073741823 || Tmp_1266 == -1073741811 || Tmp_1266 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_25: int, actual_Action: int) returns (Tmp_1266: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1266 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1266 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_1266 := 0;
    goto L1;
}



procedure {:origName "CyzGrabReadFromIsr"} CyzGrabReadFromIsr(actual_Context_48: int) returns (Tmp_1268: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1268 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabReadFromIsr"} CyzGrabReadFromIsr(actual_Context_48: int) returns (Tmp_1268: int)
{
  var {:pointer} s_p_e_c_i_a_l_45: int;
  var {:pointer} Tmp_1269: int;
  var {:pointer} sdv_929: int;
  var {:pointer} sdv_930: int;
  var {:scalar} s_p_e_c_i_a_l_46: int;
  var {:pointer} extension_15: int;
  var {:pointer} Context_48: int;
  var vslice_dummy_var_954: int;
  var vslice_dummy_var_955: int;

  anon0:
    Context_48 := actual_Context_48;
    extension_15 := Context_48;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc vslice_dummy_var_954;
    call {:si_unique_call 2469} sdv_929 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_954);
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc Tmp_1269;
    assume {:nonnull} Tmp_1269 != 0;
    assume Tmp_1269 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} sdv_929 != 0;
    assume sdv_929 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    s_p_e_c_i_a_l_46 := 1;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc vslice_dummy_var_955;
    call {:si_unique_call 2470} sdv_930 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_955);
    assume {:nonnull} sdv_930 != 0;
    assume sdv_930 > 0;
    s_p_e_c_i_a_l_45 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_930)));
    assume {:nonnull} s_p_e_c_i_a_l_45 != 0;
    assume s_p_e_c_i_a_l_45 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_45] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_45], BNOT(s_p_e_c_i_a_l_46));
    goto L6;

  L6:
    Tmp_1268 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_620: int;

  anon0:
    call {:si_unique_call 2471} vslice_dummy_var_620 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartRead"} CyzStartRead(actual_Extension_65: int) returns (Tmp_1273: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartRead"} CyzStartRead(actual_Extension_65: int) returns (Tmp_1273: int)
{
  var {:pointer} s_p_e_c_i_a_l_47: int;
  var {:scalar} localStatus_1: int;
  var {:pointer} Tmp_1274: int;
  var {:pointer} Tmp_1275: int;
  var {:pointer} sdv_932: int;
  var {:scalar} totalTime: int;
  var {:scalar} os2ssreturn: int;
  var {:scalar} timeoutsForIrp: int;
  var {:scalar} updateChar: int;
  var {:scalar} setFirstStatus: int;
  var {:pointer} Tmp_1276: int;
  var {:scalar} useTotalTimer: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} multiplierVal: int;
  var {:scalar} crunchDownToOne: int;
  var {:pointer} sdv_937: int;
  var {:pointer} sdv_938: int;
  var {:scalar} s_p_e_c_i_a_l_48: int;
  var {:scalar} oldIrql_11: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} sdv_939: int;
  var {:scalar} constantVal: int;
  var {:pointer} s_p_e_c_i_a_l_49: int;
  var {:pointer} sdv_943: int;
  var {:scalar} controlIrql: int;
  var {:pointer} Tmp_1278: int;
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:scalar} returnWithWhatsPresent: int;
  var {:scalar} s_p_e_c_i_a_l_50: int;
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:scalar} pollIrql_13: int;
  var {:scalar} useIntervalTimer: int;
  var {:scalar} firstStatus: int;
  var {:pointer} sdv_946: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} Extension_65: int;
  var boogieTmp: int;
  var vslice_dummy_var_621: int;
  var vslice_dummy_var_622: int;
  var vslice_dummy_var_623: int;
  var vslice_dummy_var_624: int;
  var vslice_dummy_var_625: int;
  var vslice_dummy_var_626: int;
  var vslice_dummy_var_627: int;
  var vslice_dummy_var_628: int;
  var vslice_dummy_var_956: int;
  var vslice_dummy_var_957: int;
  var vslice_dummy_var_958: int;
  var vslice_dummy_var_959: int;
  var vslice_dummy_var_960: int;
  var vslice_dummy_var_961: int;
  var vslice_dummy_var_962: int;

  anon0:
    call {:si_unique_call 2472} totalTime := __HAVOC_malloc(20);
    call {:si_unique_call 2473} timeoutsForIrp := __HAVOC_malloc(20);
    call {:si_unique_call 2474} updateChar := __HAVOC_malloc(12);
    call {:si_unique_call 2475} newIrp_1 := __HAVOC_malloc(4);
    Extension_65 := actual_Extension_65;
    call {:si_unique_call 2476} Tmp_1275 := __HAVOC_malloc(72);
    call {:si_unique_call 2477} Tmp_1279 := __HAVOC_malloc(76);
    setFirstStatus := 0;
    Tmp_1279 := strConst__li2bpl228;
    call {:si_unique_call 2478} vslice_dummy_var_624 := CyzDbgPrintEx(2, Tmp_1279);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto L24;

  L24:
    call {:si_unique_call 2479} localStatus_1, Tmp_1274, os2ssreturn, setFirstStatus, Tmp_1276, useTotalTimer, multiplierVal, crunchDownToOne, sdv_937, sdv_938, oldIrql_11, Tmp_1277, sdv_939, constantVal, controlIrql, Tmp_1278, Tmp_1280, returnWithWhatsPresent, Tmp_1281, Tmp_1282, pollIrql_13, useIntervalTimer, firstStatus, sdv_946, boogieTmp, vslice_dummy_var_621, vslice_dummy_var_622, vslice_dummy_var_623, vslice_dummy_var_626 := CyzStartRead_loop_L24(localStatus_1, Tmp_1274, totalTime, os2ssreturn, timeoutsForIrp, updateChar, setFirstStatus, Tmp_1276, useTotalTimer, newIrp_1, multiplierVal, crunchDownToOne, sdv_937, sdv_938, oldIrql_11, Tmp_1277, sdv_939, constantVal, controlIrql, Tmp_1278, Tmp_1280, returnWithWhatsPresent, Tmp_1281, Tmp_1282, pollIrql_13, useIntervalTimer, firstStatus, sdv_946, Extension_65, boogieTmp, vslice_dummy_var_621, vslice_dummy_var_622, vslice_dummy_var_623, vslice_dummy_var_626);
    goto L24_last;

  L24_last:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_962;
    call {:si_unique_call 2516} sdv_937 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_962);
    assume {:nonnull} sdv_937 != 0;
    assume sdv_937 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 2480} localStatus_1 := CyzResizeBuffer(Extension_65);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2481} CyzGetNextIrp(CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_65), ReadQueue__CYZ_DEVICE_EXTENSION(Extension_65), newIrp_1, 1, Extension_65);
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_1275 := strConst__li2bpl227;
    call {:si_unique_call 2482} vslice_dummy_var_625 := CyzDbgPrintEx(2, Tmp_1275);
    Tmp_1273 := firstStatus;
    goto L1;

  L1:
    return;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := localStatus_1;
    setFirstStatus := 1;
    goto L38;

  anon59_Then:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_956;
    call {:si_unique_call 2483} sdv_939 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_956);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} sdv_939 != 0;
    assume sdv_939 > 0;
    useTotalTimer := 0;
    returnWithWhatsPresent := 0;
    os2ssreturn := 0;
    crunchDownToOne := 0;
    useIntervalTimer := 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2484} vslice_dummy_var_626 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2485} vslice_dummy_var_621 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    call {:si_unique_call 2486} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := controlIrql;
    call {:si_unique_call 2487} sdv_KeAcquireSpinLock(0, Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    controlIrql := Mem_T.INT4[Tmp_1281];
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    call {:si_unique_call 2488} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    useIntervalTimer := 1;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto L67;

  L67:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L77;

  L77:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  L84:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} useTotalTimer != 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} totalTime != 0;
    assume totalTime > 0;
    goto L85;

  L85:
    call {:si_unique_call 2489} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := controlIrql;
    call {:si_unique_call 2490} sdv_KeAcquireSpinLock(0, Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    controlIrql := Mem_T.INT4[Tmp_1281];
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    call {:si_unique_call 2491} boogieTmp := CyzGetCharsFromIntBuffer(Extension_65);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} returnWithWhatsPresent != 0;
    goto L95;

  L95:
    call {:si_unique_call 2492} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := pollIrql_13;
    call {:si_unique_call 2493} sdv_KeAcquireSpinLock(0, Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    pollIrql_13 := Mem_T.INT4[Tmp_1281];
    call {:si_unique_call 2494} vslice_dummy_var_622 := CyzUpdateInterruptBuffer(updateChar);
    call {:si_unique_call 2495} sdv_KeReleaseSpinLock(0, pollIrql_13);
    call {:si_unique_call 2496} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1282;
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L38;

  anon83_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon72_Then:
    assume {:partition} returnWithWhatsPresent == 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} os2ssreturn != 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1277;
    assume {:nonnull} Tmp_1277 != 0;
    assume Tmp_1277 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L112;

  L112:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_957;
    call {:si_unique_call 2497} sdv_946 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_957);
    assume {:nonnull} sdv_946 != 0;
    assume sdv_946 > 0;
    call {:si_unique_call 2498} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := oldIrql_11;
    call {:si_unique_call 2499} IoAcquireCancelSpinLock(Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    oldIrql_11 := Mem_T.INT4[Tmp_1281];
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1276;
    assume {:nonnull} Tmp_1276 != 0;
    assume Tmp_1276 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 2500} IoReleaseCancelSpinLock(oldIrql_11);
    call {:si_unique_call 2501} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1280;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1274;
    assume {:nonnull} Tmp_1274 != 0;
    assume Tmp_1274 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := -1073741536;
    setFirstStatus := 1;
    goto L38;

  anon86_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} crunchDownToOne != 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_958;
    call {:si_unique_call 2502} sdv_938 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_958);
    assume {:nonnull} sdv_938 != 0;
    assume sdv_938 > 0;
    goto L133;

  L133:
    call {:si_unique_call 2503} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := pollIrql_13;
    call {:si_unique_call 2504} sdv_KeAcquireSpinLock(0, Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    pollIrql_13 := Mem_T.INT4[Tmp_1281];
    call {:si_unique_call 2505} vslice_dummy_var_623 := CyzUpdateAndSwitchToUser(updateChar);
    call {:si_unique_call 2506} sdv_KeReleaseSpinLock(0, pollIrql_13);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 2507} IoReleaseCancelSpinLock(oldIrql_11);
    call {:si_unique_call 2508} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1278;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L38;

  anon87_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon76_Then:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} useTotalTimer != 0;
    s_p_e_c_i_a_l_48 := 4;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_959;
    call {:si_unique_call 2509} sdv_932 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_959);
    assume {:nonnull} sdv_932 != 0;
    assume sdv_932 > 0;
    s_p_e_c_i_a_l_47 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_932)));
    assume {:nonnull} s_p_e_c_i_a_l_47 != 0;
    assume s_p_e_c_i_a_l_47 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_47] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_47], s_p_e_c_i_a_l_48);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2510} vslice_dummy_var_627 := CyzSetTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_65), totalTime, TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    goto L159;

  L159:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} useIntervalTimer != 0;
    s_p_e_c_i_a_l_50 := 8;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_960;
    call {:si_unique_call 2511} sdv_943 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_960);
    assume {:nonnull} sdv_943 != 0;
    assume sdv_943 > 0;
    s_p_e_c_i_a_l_49 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_943)));
    assume {:nonnull} s_p_e_c_i_a_l_49 != 0;
    assume s_p_e_c_i_a_l_49 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_49] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_49], s_p_e_c_i_a_l_50);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1283;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} Tmp_1283 != 0;
    assume Tmp_1283 > 0;
    havoc vslice_dummy_var_961;
    call {:si_unique_call 2512} vslice_dummy_var_628 := CyzSetTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(Extension_65), vslice_dummy_var_961, IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    goto L171;

  L171:
    call {:si_unique_call 2513} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2514} IoReleaseCancelSpinLock(oldIrql_11);
    call {:si_unique_call 2515} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} setFirstStatus != 0;
    goto L196;

  L196:
    Tmp_1273 := firstStatus;
    goto L1;

  anon79_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 259;
    goto L196;

  anon78_Then:
    assume {:partition} useIntervalTimer == 0;
    goto L171;

  anon77_Then:
    assume {:partition} useTotalTimer == 0;
    goto L159;

  anon75_Then:
    assume {:partition} crunchDownToOne == 0;
    goto L133;

  anon84_Then:
    goto L95;

  anon74_Then:
    assume {:partition} os2ssreturn == 0;
    goto L112;

  anon73_Then:
    goto L95;

  anon71_Then:
    assume {:partition} useTotalTimer == 0;
    goto L85;

  anon70_Then:
    goto L78;

  L78:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    crunchDownToOne := 1;
    multiplierVal := 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  anon80_Then:
    goto L84;

  anon69_Then:
    goto L84;

  anon68_Then:
    goto L78;

  anon66_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    returnWithWhatsPresent := 1;
    goto L84;

  anon67_Then:
    goto L77;

  anon63_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L205;

  L205:
    useTotalTimer := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  anon65_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L205;

  anon81_Then:
    goto L84;

  anon82_Then:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto L67;

  anon64_Then:
    goto L67;

  anon62_Then:
    goto L67;
}



procedure {:origName "CyzMoveToNewIntBuffer"} CyzMoveToNewIntBuffer(actual_Extension_66: int, actual_NewBuffer: int) returns (Tmp_1284: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMoveToNewIntBuffer"} CyzMoveToNewIntBuffer(actual_Extension_66: int, actual_NewBuffer: int) returns (Tmp_1284: int)
{
  var {:scalar} firstTryNumberToGet: int;
  var {:scalar} Tmp_1287: int;
  var {:scalar} numberOfCharsMoved: int;
  var {:pointer} Extension_66: int;
  var {:pointer} NewBuffer: int;

  anon0:
    Extension_66 := actual_Extension_66;
    NewBuffer := actual_NewBuffer;
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    havoc numberOfCharsMoved;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} numberOfCharsMoved != 0;
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    havoc firstTryNumberToGet;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} firstTryNumberToGet >= numberOfCharsMoved;
    call {:si_unique_call 2517} sdv_RtlMoveMemory(0, 0, numberOfCharsMoved);
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto L6;

  L6:
    Tmp_1284 := numberOfCharsMoved;
    return;

  anon7_Then:
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto L6;

  anon9_Then:
    assume {:partition} numberOfCharsMoved > firstTryNumberToGet;
    call {:si_unique_call 2518} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet);
    Tmp_1287 := numberOfCharsMoved - firstTryNumberToGet;
    call {:si_unique_call 2519} sdv_RtlMoveMemory(0, 0, Tmp_1287);
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto L6;

  anon8_Then:
    assume {:partition} numberOfCharsMoved == 0;
    goto L6;
}



procedure {:origName "CyzUpdateAndSwitchToUser"} CyzUpdateAndSwitchToUser(actual_Context_49: int) returns (Tmp_1288: int);
  modifies Mem_T.CancelRoutine__IRP, Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1288 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUpdateAndSwitchToUser"} CyzUpdateAndSwitchToUser(actual_Context_49: int) returns (Tmp_1288: int)
{
  var {:pointer} s_p_e_c_i_a_l_51: int;
  var {:pointer} updateChar_1: int;
  var {:pointer} sdv_948: int;
  var {:pointer} Tmp_1289: int;
  var {:scalar} s_p_e_c_i_a_l_52: int;
  var {:pointer} s_p_e_c_i_a_l_53: int;
  var {:pointer} sdv_953: int;
  var {:scalar} s_p_e_c_i_a_l_54: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} extension_16: int;
  var {:pointer} Context_49: int;
  var boogieTmp: int;
  var vslice_dummy_var_629: int;
  var vslice_dummy_var_630: int;
  var vslice_dummy_var_631: int;
  var vslice_dummy_var_632: int;
  var vslice_dummy_var_963: int;
  var vslice_dummy_var_964: int;
  var vslice_dummy_var_965: int;
  var vslice_dummy_var_966: int;

  anon0:
    Context_49 := actual_Context_49;
    updateChar_1 := Context_49;
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    havoc extension_16;
    call {:si_unique_call 2520} vslice_dummy_var_630 := CyzUpdateInterruptBuffer(Context_49);
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    call {:si_unique_call 2521} boogieTmp := CyzGetCharsFromIntBuffer(extension_16);
    call {:si_unique_call 2522} vslice_dummy_var_629 := CyzUpdateInterruptBuffer(Context_49);
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc Tmp_1289;
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_963;
    call {:si_unique_call 2523} vslice_dummy_var_631 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_963);
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_964;
    call {:si_unique_call 2524} vslice_dummy_var_632 := sdv_IoSetCancelRoutine(vslice_dummy_var_964, li2bplFunctionConstant456);
    s_p_e_c_i_a_l_52 := 1;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_965;
    call {:si_unique_call 2525} sdv_948 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_965);
    assume {:nonnull} sdv_948 != 0;
    assume sdv_948 > 0;
    s_p_e_c_i_a_l_51 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_948)));
    assume {:nonnull} s_p_e_c_i_a_l_51 != 0;
    assume s_p_e_c_i_a_l_51 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_51] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_51], s_p_e_c_i_a_l_52);
    s_p_e_c_i_a_l_54 := 2;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_966;
    call {:si_unique_call 2526} sdv_953 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_966);
    assume {:nonnull} sdv_953 != 0;
    assume sdv_953 > 0;
    s_p_e_c_i_a_l_53 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_953)));
    assume {:nonnull} s_p_e_c_i_a_l_53 != 0;
    assume s_p_e_c_i_a_l_53 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_53] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_53], s_p_e_c_i_a_l_54);
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    goto L47;

  L47:
    Tmp_1288 := 0;
    return;

  anon3_Then:
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    goto L47;
}



procedure {:origName "CyzResizeBuffer"} CyzResizeBuffer(actual_Extension_67: int) returns (Tmp_1292: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1292 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzResizeBuffer"} CyzResizeBuffer(actual_Extension_67: int) returns (Tmp_1292: int)
{
  var {:pointer} Tmp_1293: int;
  var {:pointer} Tmp_1294: int;
  var {:pointer} irpSp_5: int;
  var {:pointer} newBuffer: int;
  var {:pointer} Tmp_1295: int;
  var {:pointer} rs_7: int;
  var {:pointer} Tmp_1296: int;
  var {:scalar} controlIrql_1: int;
  var {:scalar} rp: int;
  var {:scalar} pollIrql_14: int;
  var {:pointer} Extension_67: int;
  var boogieTmp: int;
  var vslice_dummy_var_633: int;
  var vslice_dummy_var_967: int;

  anon0:
    call {:si_unique_call 2527} rp := __HAVOC_malloc(20);
    Extension_67 := actual_Extension_67;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    havoc rs_7;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc vslice_dummy_var_967;
    call {:si_unique_call 2528} irpSp_5 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_967);
    assume {:nonnull} irpSp_5 != 0;
    assume irpSp_5 > 0;
    havoc newBuffer;
    assume {:nonnull} irpSp_5 != 0;
    assume irpSp_5 > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc Tmp_1295;
    assume {:nonnull} Tmp_1295 != 0;
    assume Tmp_1295 > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc Tmp_1293;
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    assume {:nonnull} rs_7 != 0;
    assume rs_7 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rs_7 != 0;
    assume rs_7 > 0;
    call {:si_unique_call 2529} Tmp_1294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    Mem_T.INT4[Tmp_1294] := controlIrql_1;
    call {:si_unique_call 2530} sdv_KeAcquireSpinLock(0, Tmp_1294);
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    controlIrql_1 := Mem_T.INT4[Tmp_1294];
    assume {:nonnull} rp != 0;
    assume rp > 0;
    call {:si_unique_call 2531} boogieTmp := CyzMoveToNewIntBuffer(Extension_67, newBuffer);
    call {:si_unique_call 2532} Tmp_1294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    Mem_T.INT4[Tmp_1294] := pollIrql_14;
    call {:si_unique_call 2533} sdv_KeAcquireSpinLock(0, Tmp_1294);
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    pollIrql_14 := Mem_T.INT4[Tmp_1294];
    call {:si_unique_call 2534} vslice_dummy_var_633 := CyzUpdateAndSwitchToNew(rp);
    call {:si_unique_call 2535} sdv_KeReleaseSpinLock(0, pollIrql_14);
    call {:si_unique_call 2536} sdv_KeReleaseSpinLock(0, controlIrql_1);
    call {:si_unique_call 2537} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_1292 := 0;
    return;

  anon3_Then:
    call {:si_unique_call 2538} sdv_ExFreePool(0);
    goto L20;
}



procedure {:origName "CyzRead"} CyzRead(actual_DeviceObject_26: int, actual_Irp_24: int) returns (Tmp_1297: int);
  modifies alloc, start_irql, Mem_T.INT4, yogi_error, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(start_irql) == old(sdv_irql_current) ==> old(start_irql) == start_irql;
  free ensures {:va_keep} start_irql == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRead"} CyzRead(actual_DeviceObject_26: int, actual_Irp_24: int) returns (Tmp_1297: int)
{
  var {:pointer} Tmp_1298: int;
  var {:pointer} Tmp_1299: int;
  var {:pointer} Tmp_1300: int;
  var {:scalar} sdv_959: int;
  var {:pointer} Tmp_1301: int;
  var {:pointer} sdv_961: int;
  var {:pointer} Tmp_1302: int;
  var {:pointer} Tmp_1303: int;
  var {:pointer} Tmp_1304: int;
  var {:pointer} Tmp_1306: int;
  var {:scalar} status_27: int;
  var {:pointer} extension_17: int;
  var {:pointer} DeviceObject_26: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_634: int;
  var vslice_dummy_var_635: int;
  var vslice_dummy_var_636: int;
  var vslice_dummy_var_637: int;
  var vslice_dummy_var_638: int;
  var vslice_dummy_var_639: int;
  var vslice_dummy_var_640: int;
  var vslice_dummy_var_641: int;

  anon0:
    DeviceObject_26 := actual_DeviceObject_26;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 2539} Tmp_1298 := __HAVOC_malloc(68);
    call {:si_unique_call 2540} Tmp_1299 := __HAVOC_malloc(72);
    call {:si_unique_call 2541} Tmp_1300 := __HAVOC_malloc(96);
    call {:si_unique_call 2542} Tmp_1301 := __HAVOC_malloc(72);
    call {:si_unique_call 2543} Tmp_1302 := __HAVOC_malloc(68);
    call {:si_unique_call 2544} Tmp_1303 := __HAVOC_malloc(72);
    call {:si_unique_call 2545} Tmp_1304 := __HAVOC_malloc(68);
    call {:si_unique_call 2546} Tmp_1306 := __HAVOC_malloc(68);
    call {:si_unique_call 2547} SLIC_CyzRead_entry(0);
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    havoc extension_17;
    Tmp_1299 := strConst__li2bpl233;
    call {:si_unique_call 2548} vslice_dummy_var_634 := CyzDbgPrintEx(2, Tmp_1299);
    call {:si_unique_call 2549} status_27 := CyzIRPPrologue(Irp_24, extension_17);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_27 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_27 != 259;
    Tmp_1301 := strConst__li2bpl3;
    call {:si_unique_call 2550} vslice_dummy_var_635 := CyzDbgPrintEx(9, Tmp_1301);
    call {:si_unique_call 2551} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2552} CyzIRPEpilogue(extension_17);
    goto L19;

  L19:
    Tmp_1306 := strConst__li2bpl229;
    call {:si_unique_call 2553} vslice_dummy_var_636 := CyzDbgPrintEx(2, Tmp_1306);
    Tmp_1297 := status_27;
    goto L1;

  L1:
    call {:si_unique_call 2554} SLIC_CyzRead_exit(strConst__li2bpl0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} status_27 == 259;
    goto L19;

  anon11_Then:
    assume {:partition} status_27 == 0;
    Tmp_1300 := strConst__li2bpl1;
    call {:si_unique_call 2555} vslice_dummy_var_637 := CyzDbgPrintEx(9, Tmp_1300);
    call {:si_unique_call 2556} sdv_959 := CyzCompleteIfError(DeviceObject_26, Irp_24);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_959 != 0;
    Tmp_1304 := strConst__li2bpl230;
    call {:si_unique_call 2557} vslice_dummy_var_638 := CyzDbgPrintEx(2, Tmp_1304);
    Tmp_1297 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_959 == 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 2558} sdv_961 := sdv_IoGetCurrentIrpStackLocation(Irp_24);
    assume {:nonnull} sdv_961 != 0;
    assume sdv_961 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} extension_17 != 0;
    assume extension_17 > 0;
    call {:si_unique_call 2559} status_27 := CyzStartOrQueue(extension_17, Irp_24, ReadQueue__CYZ_DEVICE_EXTENSION(extension_17), CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_17), li2bplFunctionConstant381);
    Tmp_1298 := strConst__li2bpl231;
    call {:si_unique_call 2560} vslice_dummy_var_639 := CyzDbgPrintEx(2, Tmp_1298);
    Tmp_1297 := status_27;
    goto L1;

  anon14_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Tmp_1303 := strConst__li2bpl3;
    call {:si_unique_call 2561} vslice_dummy_var_640 := CyzDbgPrintEx(9, Tmp_1303);
    call {:si_unique_call 2562} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2563} CyzIRPEpilogue(extension_17);
    Tmp_1302 := strConst__li2bpl232;
    call {:si_unique_call 2564} vslice_dummy_var_641 := CyzDbgPrintEx(2, Tmp_1302);
    Tmp_1297 := 0;
    goto L1;
}



procedure {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead(actual_DeviceObject_27: int, actual_Irp_25: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead(actual_DeviceObject_27: int, actual_Irp_25: int)
{
  var {:pointer} extension_18: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_642: int;

  anon0:
    call {:si_unique_call 2565} vslice_dummy_var_642 := __HAVOC_malloc(4);
    DeviceObject_27 := actual_DeviceObject_27;
    Irp_25 := actual_Irp_25;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc extension_18;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    call {:si_unique_call 2566} CyzTryToCompleteCurrent#1(extension_18, li2bplFunctionConstant457, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_25)], -1073741536, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_18), ReadQueue__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_18), li2bplFunctionConstant381, li2bplFunctionConstant144, 2);
    return;
}



procedure {:origName "CyzUpdateInterruptBuffer"} CyzUpdateInterruptBuffer(actual_Context_50: int) returns (Tmp_1309: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1309 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUpdateInterruptBuffer"} CyzUpdateInterruptBuffer(actual_Context_50: int) returns (Tmp_1309: int)
{
  var {:pointer} update: int;
  var {:pointer} extension_19: int;
  var {:pointer} Context_50: int;

  anon0:
    Context_50 := actual_Context_50;
    update := Context_50;
    assume {:nonnull} update != 0;
    assume update > 0;
    havoc extension_19;
    assume {:nonnull} extension_19 != 0;
    assume extension_19 > 0;
    assume {:nonnull} update != 0;
    assume update > 0;
    call {:si_unique_call 2567} CyzHandleReducedIntBuffer(extension_19);
    Tmp_1309 := 0;
    return;
}



procedure {:origName "CyzReadTimeout"} CyzReadTimeout(actual_Dpc_13: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReadTimeout"} CyzReadTimeout(actual_Dpc_13: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int)
{
  var {:scalar} oldIrql_12: int;
  var {:pointer} Tmp_1311: int;
  var {:pointer} Tmp_1312: int;
  var {:pointer} extension_20: int;
  var {:pointer} Tmp_1313: int;
  var {:pointer} Dpc_13: int;
  var {:pointer} DeferredContext_7: int;
  var vslice_dummy_var_643: int;
  var vslice_dummy_var_644: int;
  var vslice_dummy_var_645: int;

  anon0:
    call {:si_unique_call 2568} vslice_dummy_var_643 := __HAVOC_malloc(4);
    Dpc_13 := actual_Dpc_13;
    DeferredContext_7 := actual_DeferredContext_7;
    call {:si_unique_call 2569} Tmp_1312 := __HAVOC_malloc(84);
    call {:si_unique_call 2570} Tmp_1313 := __HAVOC_malloc(68);
    extension_20 := DeferredContext_7;
    Tmp_1312 := strConst__li2bpl235;
    call {:si_unique_call 2571} vslice_dummy_var_644 := CyzDbgPrintEx(2, Tmp_1312);
    call {:si_unique_call 2572} Tmp_1311 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    Mem_T.INT4[Tmp_1311] := oldIrql_12;
    call {:si_unique_call 2573} IoAcquireCancelSpinLock(Tmp_1311);
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    oldIrql_12 := Mem_T.INT4[Tmp_1311];
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    call {:si_unique_call 2574} CyzTryToCompleteCurrent#1(extension_20, li2bplFunctionConstant457, oldIrql_12, 258, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_20), ReadQueue__CYZ_DEVICE_EXTENSION(extension_20), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_20), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_20), li2bplFunctionConstant381, li2bplFunctionConstant144, 4);
    call {:si_unique_call 2575} CyzDpcEpilogue(extension_20, Dpc_13);
    Tmp_1313 := strConst__li2bpl234;
    call {:si_unique_call 2576} vslice_dummy_var_645 := CyzDbgPrintEx(2, Tmp_1313);
    return;
}



procedure {:origName "CyzCompleteRead"} CyzCompleteRead(actual_Dpc_14: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteRead"} CyzCompleteRead(actual_Dpc_14: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int)
{
  var {:pointer} Tmp_1315: int;
  var {:pointer} Tmp_1316: int;
  var {:pointer} Tmp_1317: int;
  var {:scalar} oldIrql_13: int;
  var {:pointer} extension_21: int;
  var {:pointer} Dpc_14: int;
  var {:pointer} DeferredContext_8: int;
  var vslice_dummy_var_646: int;
  var vslice_dummy_var_647: int;
  var vslice_dummy_var_648: int;

  anon0:
    call {:si_unique_call 2577} vslice_dummy_var_646 := __HAVOC_malloc(4);
    Dpc_14 := actual_Dpc_14;
    DeferredContext_8 := actual_DeferredContext_8;
    call {:si_unique_call 2578} Tmp_1315 := __HAVOC_malloc(88);
    call {:si_unique_call 2579} Tmp_1316 := __HAVOC_malloc(88);
    extension_21 := DeferredContext_8;
    Tmp_1315 := strConst__li2bpl237;
    call {:si_unique_call 2580} vslice_dummy_var_647 := CyzDbgPrintEx(2, Tmp_1315);
    call {:si_unique_call 2581} Tmp_1317 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1317 != 0;
    assume Tmp_1317 > 0;
    Mem_T.INT4[Tmp_1317] := oldIrql_13;
    call {:si_unique_call 2582} IoAcquireCancelSpinLock(Tmp_1317);
    assume {:nonnull} Tmp_1317 != 0;
    assume Tmp_1317 > 0;
    oldIrql_13 := Mem_T.INT4[Tmp_1317];
    assume {:nonnull} extension_21 != 0;
    assume extension_21 > 0;
    assume {:nonnull} extension_21 != 0;
    assume extension_21 > 0;
    call {:si_unique_call 2583} CyzTryToCompleteCurrent#1(extension_21, 0, oldIrql_13, 0, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_21), ReadQueue__CYZ_DEVICE_EXTENSION(extension_21), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_21), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_21), li2bplFunctionConstant381, li2bplFunctionConstant144, 1);
    call {:si_unique_call 2584} CyzDpcEpilogue(extension_21, Dpc_14);
    Tmp_1316 := strConst__li2bpl236;
    call {:si_unique_call 2585} vslice_dummy_var_648 := CyzDbgPrintEx(2, Tmp_1316);
    return;
}



procedure {:origName "CyzUpdateAndSwitchToNew"} CyzUpdateAndSwitchToNew(actual_Context_51: int) returns (Tmp_1319: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1319 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUpdateAndSwitchToNew"} CyzUpdateAndSwitchToNew(actual_Context_51: int) returns (Tmp_1319: int)
{
  var {:pointer} params: int;
  var {:pointer} Tmp_1320: int;
  var {:scalar} tempCharsInInterruptBuffer: int;
  var {:pointer} extension_22: int;
  var {:pointer} Context_51: int;
  var boogieTmp: int;
  var vslice_dummy_var_649: int;

  anon0:
    Context_51 := actual_Context_51;
    params := Context_51;
    assume {:nonnull} params != 0;
    assume params > 0;
    havoc extension_22;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    havoc tempCharsInInterruptBuffer;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} params != 0;
    assume params > 0;
    havoc Tmp_1320;
    call {:si_unique_call 2586} vslice_dummy_var_649 := CyzMoveToNewIntBuffer(extension_22, Tmp_1320);
    goto L11;

  L11:
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    call {:si_unique_call 2587} boogieTmp := corral_nondet();
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    call {:si_unique_call 2588} boogieTmp := corral_nondet();
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    call {:si_unique_call 2589} boogieTmp := corral_nondet();
    call {:si_unique_call 2590} CyzHandleReducedIntBuffer(extension_22);
    Tmp_1319 := 0;
    return;

  anon3_Then:
    goto L11;
}



procedure {:origName "CyzGetCharsFromIntBuffer"} CyzGetCharsFromIntBuffer(actual_Extension_68: int) returns (Tmp_1322: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetCharsFromIntBuffer"} CyzGetCharsFromIntBuffer(actual_Extension_68: int) returns (Tmp_1322: int)
{
  var {:scalar} numberOfCharsToGet: int;
  var {:scalar} firstTryNumberToGet_1: int;
  var {:scalar} Tmp_1325: int;
  var {:pointer} Tmp_1326: int;
  var {:pointer} Tmp_1327: int;
  var {:pointer} Tmp_1328: int;
  var {:pointer} Tmp_1329: int;
  var {:pointer} Tmp_1331: int;
  var {:pointer} Extension_68: int;
  var vslice_dummy_var_650: int;
  var vslice_dummy_var_651: int;
  var vslice_dummy_var_652: int;
  var vslice_dummy_var_968: int;
  var vslice_dummy_var_969: int;
  var vslice_dummy_var_970: int;

  anon0:
    Extension_68 := actual_Extension_68;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc numberOfCharsToGet;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc numberOfCharsToGet;
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} numberOfCharsToGet != 0;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc firstTryNumberToGet_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} firstTryNumberToGet_1 > numberOfCharsToGet;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc vslice_dummy_var_968;
    call {:si_unique_call 2591} vslice_dummy_var_651 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_968);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1331;
    assume {:nonnull} Tmp_1331 != 0;
    assume Tmp_1331 > 0;
    call {:si_unique_call 2592} sdv_RtlMoveMemory(0, 0, numberOfCharsToGet);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto L9;

  L9:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1327;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1328;
    assume {:nonnull} Tmp_1327 != 0;
    assume Tmp_1327 > 0;
    assume {:nonnull} Tmp_1328 != 0;
    assume Tmp_1328 > 0;
    Tmp_1322 := numberOfCharsToGet;
    return;

  anon12_Then:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto L9;

  anon11_Then:
    assume {:partition} numberOfCharsToGet >= firstTryNumberToGet_1;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc vslice_dummy_var_969;
    call {:si_unique_call 2593} vslice_dummy_var_650 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_969);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1329;
    assume {:nonnull} Tmp_1329 != 0;
    assume Tmp_1329 > 0;
    call {:si_unique_call 2594} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet_1);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    Tmp_1325 := numberOfCharsToGet - firstTryNumberToGet_1;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc vslice_dummy_var_970;
    call {:si_unique_call 2595} vslice_dummy_var_652 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_970);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1326;
    assume {:nonnull} Tmp_1326 != 0;
    assume Tmp_1326 > 0;
    call {:si_unique_call 2596} sdv_RtlMoveMemory(0, 0, Tmp_1325);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto L9;

  anon9_Then:
    assume {:partition} numberOfCharsToGet == 0;
    goto L9;

  anon10_Then:
    goto L7;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    assume (forall x: int :: { Mem_T.CancelRoutine__IRP[x] } Mem_T.CancelRoutine__IRP[x] <= 0 || Mem_T.CancelRoutine__IRP[x] > 518);
    return;
}



function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYZ_GLOBALS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "AlternativeLists"} AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AmountInInQueue__SERIAL_STATUS"} {:fieldname "AmountInInQueue"} AmountInInQueue__SERIAL_STATUS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AmountInOutQueue__SERIAL_STATUS"} {:fieldname "AmountInOutQueue"} AmountInOutQueue__SERIAL_STATUS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_3"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BaudRate__SERIAL_BAUD_RATE"} {:fieldname "BaudRate"} BaudRate__SERIAL_BAUD_RATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Baud__CYZ_IOCTL_BAUD"} {:fieldname "Baud"} Baud__CYZ_IOCTL_BAUD(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BitsPerByte__SERIAL_WMI_COMM_DATA"} {:fieldname "BitsPerByte"} BitsPerByte__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BoardCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardCtrl"} BoardCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CONFIG_DATA"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CONFIG_DATA"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CONFIG_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.BreakChar__SERIAL_CHARS"} {:fieldname "BreakChar"} BreakChar__SERIAL_CHARS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BufCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "BufCtrl"} BufCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.BufferOverrunErrorCount__SERIALPERF_STATS"} {:fieldname "BufferOverrunErrorCount"} BufferOverrunErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BufferSizePt8__CYZ_DEVICE_EXTENSION"} {:fieldname "BufferSizePt8"} BufferSizePt8__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.BufferSize__CYZ_DEVICE_EXTENSION"} {:fieldname "BufferSize"} BufferSize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CONFIG_DATA"} {:fieldname "BusNumber"} BusNumber__CONFIG_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CYZ_DEVICE_EXTENSION"} {:fieldname "BusNumber"} BusNumber__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ChCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "ChCtrl"} ChCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.CharsCopied__SERIAL_UPDATE_CHAR"} {:fieldname "CharsCopied"} CharsCopied__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CharsInInterruptBuffer__CYZ_DEVICE_EXTENSION"} {:fieldname "CharsInInterruptBuffer"} CharsInInterruptBuffer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.CmdFailureLog__CYZ_DEVICE_EXTENSION"} {:fieldname "CmdFailureLog"} CmdFailureLog__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3364
}

function {:inline true} {:fieldmap "Mem_T.CommDataLen__CYZ_DEVICE_EXTENSION"} {:fieldname "CommDataLen"} CommDataLen__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommErrorDpc"} CommErrorDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.CommParity__CYZ_DEVICE_EXTENSION"} {:fieldname "CommParity"} CommParity__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 524
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommWaitDpc"} CommWaitDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 844
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteImmediateDpc"} CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 884
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteReadDpc"} CompleteReadDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 644
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteWriteDpc"} CompleteWriteDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 604
}

function {:inline true} {:fieldmap "Mem_T.Completed__SERIAL_UPDATE_CHAR"} {:fieldname "Completed"} Completed__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ControlHandShake__SERIAL_HANDFLOW"} {:fieldname "ControlHandShake"} ControlHandShake__SERIAL_HANDFLOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CountOfTryingToLowerRTS__CYZ_DEVICE_EXTENSION"} {:fieldname "CountOfTryingToLowerRTS"} CountOfTryingToLowerRTS__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.CountOnLastRead__CYZ_DEVICE_EXTENSION"} {:fieldname "CountOnLastRead"} CountOnLastRead__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.CountSinceXoff__CYZ_DEVICE_EXTENSION"} {:fieldname "CountSinceXoff"} CountSinceXoff__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__IO_RESOURCE_LIST"} {:fieldname "Count"} Count__IO_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Counter__SERIAL_XOFF_COUNTER"} {:fieldname "Counter"} Counter__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Create_unnamed_tag_8"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreatedSerialCommEntry__CYZ_DEVICE_EXTENSION"} {:fieldname "CreatedSerialCommEntry"} CreatedSerialCommEntry__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.CreatedSymbolicLink__CYZ_DEVICE_EXTENSION"} {:fieldname "CreatedSymbolicLink"} CreatedSymbolicLink__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.CurrentBaud__CYZ_DEVICE_EXTENSION"} {:fieldname "CurrentBaud"} CurrentBaud__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.CurrentCharSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "CurrentCharSlot"} CurrentCharSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentImmediateIrp"} CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentMaskIrp"} CurrentMaskIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentPurgeIrp"} CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentReadIrp"} CurrentReadIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.CurrentRxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentRxQueue"} CurrentRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentTxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentTxQueue"} CurrentTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWaitIrp"} CurrentWaitIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWriteIrp"} CurrentWriteIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 296
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentXoffIrp"} CurrentXoffIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.CutOverAmount__CYZ_DEVICE_EXTENSION"} {:fieldname "CutOverAmount"} CutOverAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "CyzStartEvent"} CyzStartEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2416
}

function {:inline true} {:fieldmap "Mem_T.DCDstatus__CYZ_DEVICE_EXTENSION"} {:fieldname "DCDstatus"} DCDstatus__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3368
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data__CYZ_CLOSE_SYNC"} {:fieldname "Data"} Data__CYZ_CLOSE_SYNC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Descriptors__IO_RESOURCE_LIST"} {:fieldname "Descriptors"} Descriptors__IO_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceClassSymbolicName"} DeviceClassSymbolicName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2260
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceIsOpened__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceIsOpened"} DeviceIsOpened__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 532
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceName"} DeviceName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__POWER_COMPLETION_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__POWER_COMPLETION_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DevicePNPAccept"} DevicePNPAccept__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2276
}

function {:inline true} {:fieldmap "Mem_T.DeviceStateMap__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceStateMap"} DeviceStateMap__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2576
}

function {:inline true} {:fieldmap "Mem_T._CYZ_DEVICE_STATE"} {:fieldname "DeviceState"} DeviceState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2540
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceWake"} DeviceWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3024
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DosName"} DosName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DpcCount__CYZ_DEVICE_EXTENSION"} {:fieldname "DpcCount"} DpcCount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3232
}

function {:inline true} {:fieldmap "Mem_T.Dpc__KTIMER"} {:fieldname "Dpc"} Dpc__KTIMER(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__CYZ_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2132
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.EmptiedTransmit__CYZ_DEVICE_EXTENSION"} {:fieldname "EmptiedTransmit"} EmptiedTransmit__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.EofChar__SERIAL_CHARS"} {:fieldname "EofChar"} EofChar__SERIAL_CHARS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EofReceived__SERIAL_STATUS"} {:fieldname "EofReceived"} EofReceived__SERIAL_STATUS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorChar__SERIAL_CHARS"} {:fieldname "ErrorChar"} ErrorChar__SERIAL_CHARS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ErrorWord__CYZ_DEVICE_EXTENSION"} {:fieldname "ErrorWord"} ErrorWord__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.Errors__SERIAL_STATUS"} {:fieldname "Errors"} Errors__SERIAL_STATUS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EscapeChar__CYZ_DEVICE_EXTENSION"} {:fieldname "EscapeChar"} EscapeChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 576
}

function {:inline true} {:fieldmap "Mem_T.EventChar__SERIAL_CHARS"} {:fieldname "EventChar"} EventChar__SERIAL_CHARS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYZ_CLOSE_SYNC"} {:fieldname "Extension"} Extension__CYZ_CLOSE_SYNC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYZ_IOCTL_BAUD"} {:fieldname "Extension"} Extension__CYZ_IOCTL_BAUD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_RESIZE_PARAMS"} {:fieldname "Extension"} Extension__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_UPDATE_CHAR"} {:fieldname "Extension"} Extension__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extensions__CYZ_DISPATCH"} {:fieldname "Extensions"} Extensions__CYZ_DISPATCH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirstReadableChar__CYZ_DEVICE_EXTENSION"} {:fieldname "FirstReadableChar"} FirstReadableChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T.Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Flags"} Flags__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2408
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FlowReplace__SERIAL_HANDFLOW"} {:fieldname "FlowReplace"} FlowReplace__SERIAL_HANDFLOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FrameErrorCount__SERIALPERF_STATS"} {:fieldname "FrameErrorCount"} FrameErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_HANDFLOW"} {:fieldname "HandFlow"} HandFlow__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HistoryMask__CYZ_DEVICE_EXTENSION"} {:fieldname "HistoryMask"} HistoryMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.HoldReasons__SERIAL_STATUS"} {:fieldname "HoldReasons"} HoldReasons__SERIAL_STATUS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HoldingEmpty__CYZ_DEVICE_EXTENSION"} {:fieldname "HoldingEmpty"} HoldingEmpty__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ImmediateChar__CYZ_DEVICE_EXTENSION"} {:fieldname "ImmediateChar"} ImmediateChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ImmediateTotalTimer"} ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1644
}

function {:inline true} {:fieldmap "Mem_T.InSize__SERIAL_QUEUE_SIZE"} {:fieldname "InSize"} InSize__SERIAL_QUEUE_SIZE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CONFIG_DATA"} {:fieldname "InterfaceType"} InterfaceType__CONFIG_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CYZ_DEVICE_EXTENSION"} {:fieldname "InterfaceType"} InterfaceType__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.InterruptReadBuffer__CYZ_DEVICE_EXTENSION"} {:fieldname "InterruptReadBuffer"} InterruptReadBuffer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IntervalReadTimeoutDpc"} IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 724
}

function {:inline true} {:fieldmap "Mem_T.IntervalTimeToUse__CYZ_DEVICE_EXTENSION"} {:fieldname "IntervalTimeToUse"} IntervalTimeToUse__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.IntervalTime__CYZ_DEVICE_EXTENSION"} {:fieldname "IntervalTime"} IntervalTime__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._IO_STATUS_BLOCK"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IoctlwProcessed__CYZ_DEVICE_EXTENSION"} {:fieldname "IoctlwProcessed"} IoctlwProcessed__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3372
}

function {:inline true} {:fieldmap "Mem_T.IrpMaskLocation__CYZ_DEVICE_EXTENSION"} {:fieldname "IrpMaskLocation"} IrpMaskLocation__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.IsBusy__SERIAL_WMI_COMM_DATA"} {:fieldname "IsBusy"} IsBusy__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IsrUnlockPagesDpc"} IsrUnlockPagesDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1124
}

function {:inline true} {:fieldmap "Mem_T.IsrWaitMask__CYZ_DEVICE_EXTENSION"} {:fieldname "IsrWaitMask"} IsrWaitMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.LastCharSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "LastCharSlot"} LastCharSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_42"} {:fieldname "Length"} Length_unnamed_tag_42(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.List__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "List"} List__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LongIntervalAmount"} LongIntervalAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__CYZ_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2124
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "LowerRTSTimer"} LowerRTSTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1964
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MaskQueue"} MaskQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T.MaxBaud__SERIAL_COMMPROP"} {:fieldname "MaxBaud"} MaxBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxRxQueue__SERIAL_COMMPROP"} {:fieldname "MaxRxQueue"} MaxRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.MaxTxQueue__SERIAL_COMMPROP"} {:fieldname "MaxTxQueue"} MaxTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaximumBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumBaudRate"} MaximumBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MaximumInputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumInputBufferSize"} MaximumInputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumOutputBufferSize"} MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_41"} {:fieldname "Memory"} Memory_unnamed_tag_41(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_53"} {:fieldname "Memory"} Memory_unnamed_tag_53(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NChannels__CYZ_DISPATCH"} {:fieldname "NChannels"} NChannels__CYZ_DISPATCH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NewBufferSize__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBufferSize"} NewBufferSize__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NewBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBuffer"} NewBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "NtNameForPort"} NtNameForPort__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.NumberMoved__SERIAL_RESIZE_PARAMS"} {:fieldname "NumberMoved"} NumberMoved__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberNeededForRead__CYZ_DEVICE_EXTENSION"} {:fieldname "NumberNeededForRead"} NumberNeededForRead__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.NumberOfStrings__IO_ERROR_LOG_PACKET"} {:fieldname "NumberOfStrings"} NumberOfStrings__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ObjectDirectory"} ObjectDirectory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.OldBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "OldBuffer"} OldBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "OpenCount"} OpenCount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2412
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalBoardMemory__CYZ_DEVICE_EXTENSION"} {:fieldname "OriginalBoardMemory"} OriginalBoardMemory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.OriginalRuntimeMemory__CYZ_DEVICE_EXTENSION"} {:fieldname "OriginalRuntimeMemory"} OriginalRuntimeMemory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurIsrContext__CYZ_DEVICE_EXTENSION"} {:fieldname "OurIsrContext"} OurIsrContext__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_7"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnsPowerPolicy__CYZ_DEVICE_EXTENSION"} {:fieldname "OwnsPowerPolicy"} OwnsPowerPolicy__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3016
}

function {:inline true} {:fieldmap "Mem_T.PNPState__CYZ_DEVICE_EXTENSION"} {:fieldname "PNPState"} PNPState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2404
}

function {:inline true} {:fieldmap "Mem_T.PPPaware__CONFIG_DATA"} {:fieldname "PPPaware"} PPPaware__CONFIG_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.PPPaware__CYZ_DEVICE_EXTENSION"} {:fieldname "PPPaware"} PPPaware__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3380
}

function {:inline true} {:fieldmap "Mem_T.PacketLength__SERIAL_COMMPROP"} {:fieldname "PacketLength"} PacketLength__SERIAL_COMMPROP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PacketVersion__SERIAL_COMMPROP"} {:fieldname "PacketVersion"} PacketVersion__SERIAL_COMMPROP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParityCheckEnable__SERIAL_WMI_COMM_DATA"} {:fieldname "ParityCheckEnable"} ParityCheckEnable__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ParityErrorCount__SERIALPERF_STATS"} {:fieldname "ParityErrorCount"} ParityErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_LINE_CONTROL"} {:fieldname "Parity"} Parity__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_WMI_COMM_DATA"} {:fieldname "Parity"} Parity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PciSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "PciSlot"} PciSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3396
}

function {:inline true} {:fieldmap "Mem_T.Pdo__CYZ_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3028
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3236
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYZ_DISPATCH(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.PendingIRPCnt__CYZ_DEVICE_EXTENSION"} {:fieldname "PendingIRPCnt"} PendingIRPCnt__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2272
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2280
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PendingWakeIrp__CYZ_DEVICE_EXTENSION"} {:fieldname "PendingWakeIrp"} PendingWakeIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3036
}

function {:inline true} {:fieldmap "Mem_T._SERIALPERF_STATS"} {:fieldname "PerfStats"} PerfStats__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 500
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PerhapsLowerRTSDpc"} PerhapsLowerRTSDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1084
}

function {:inline true} {:fieldmap "Mem_T.PhysicalBoardMemory__CONFIG_DATA"} {:fieldname "PhysicalBoardMemory"} PhysicalBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PhysicalRuntime__CONFIG_DATA"} {:fieldname "PhysicalRuntime"} PhysicalRuntime__CONFIG_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PollingCount__CYZ_DISPATCH"} {:fieldname "PollingCount"} PollingCount__CYZ_DISPATCH(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PollingDpc"} PollingDpc__CYZ_DISPATCH(x: int) : int
{
  x + 444
}

function {:inline true} {:fieldmap "Mem_T.PollingDrained__CYZ_DISPATCH"} {:fieldname "PollingDrained"} PollingDrained__CYZ_DISPATCH(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.PollingLock__CYZ_DISPATCH"} {:fieldname "PollingLock"} PollingLock__CYZ_DISPATCH(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.PollingPeriod__CYZ_DISPATCH"} {:fieldname "PollingPeriod"} PollingPeriod__CYZ_DISPATCH(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.PollingStarted__CYZ_DISPATCH"} {:fieldname "PollingStarted"} PollingStarted__CYZ_DISPATCH(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T.PollingTime__CYZ_DISPATCH"} {:fieldname "PollingTime"} PollingTime__CYZ_DISPATCH(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PortIndex"} PortIndex__CONFIG_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.PortIndex__CYZ_DEVICE_EXTENSION"} {:fieldname "PortIndex"} PortIndex__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.PowerState__CYZ_DEVICE_EXTENSION"} {:fieldname "PowerState"} PowerState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2128
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProvCapabilities__SERIAL_COMMPROP"} {:fieldname "ProvCapabilities"} ProvCapabilities__SERIAL_COMMPROP(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ProvSubType__SERIAL_COMMPROP"} {:fieldname "ProvSubType"} ProvSubType__SERIAL_COMMPROP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PtZfIntQueue__CYZ_DEVICE_EXTENSION"} {:fieldname "PtZfIntQueue"} PtZfIntQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PurgeQueue"} PurgeQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RXHolding__CYZ_DEVICE_EXTENSION"} {:fieldname "RXHolding"} RXHolding__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.ReadBufferBase__CYZ_DEVICE_EXTENSION"} {:fieldname "ReadBufferBase"} ReadBufferBase__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.ReadByIsr__CYZ_DEVICE_EXTENSION"} {:fieldname "ReadByIsr"} ReadByIsr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.ReadIntervalTimeout__SERIAL_TIMEOUTS"} {:fieldname "ReadIntervalTimeout"} ReadIntervalTimeout__SERIAL_TIMEOUTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ReadQueue"} ReadQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestIntervalTimer"} ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1324
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestTotalTimer"} ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1164
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutConstant"} ReadTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutMultiplier"} ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ReceivedCount__SERIALPERF_STATS"} {:fieldname "ReceivedCount"} ReceivedCount__SERIALPERF_STATS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reopen__CYZ_DEVICE_STATE"} {:fieldname "Reopen"} Reopen__CYZ_DEVICE_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ReturnStatusAfterFwEmpty__CYZ_DEVICE_EXTENSION"} {:fieldname "ReturnStatusAfterFwEmpty"} ReturnStatusAfterFwEmpty__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3376
}

function {:inline true} {:fieldmap "Mem_T.ReturnWriteStatus__CYZ_DEVICE_EXTENSION"} {:fieldname "ReturnWriteStatus"} ReturnWriteStatus__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3384
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CONFIG_DATA"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CYZ_DEVICE_EXTENSION"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CONFIG_DATA"} {:fieldname "RuntimeLength"} RuntimeLength__CONFIG_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CYZ_DEVICE_EXTENSION"} {:fieldname "RuntimeLength"} RuntimeLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.Runtime__CYZ_DEVICE_EXTENSION"} {:fieldname "Runtime"} Runtime__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.RxBufaddr__CYZ_DEVICE_EXTENSION"} {:fieldname "RxBufaddr"} RxBufaddr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 248
}

function {:inline true} {:fieldmap "Mem_T.RxBufsize__CYZ_DEVICE_EXTENSION"} {:fieldname "RxBufsize"} RxBufsize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.RxFIFO__CONFIG_DATA"} {:fieldname "RxFIFO"} RxFIFO__CONFIG_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RxFifoTrigger__CYZ_DEVICE_EXTENSION"} {:fieldname "RxFifoTrigger"} RxFifoTrigger__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.SIrp__POWER_COMPLETION_CONTEXT"} {:fieldname "SIrp"} SIrp__POWER_COMPLETION_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SendWaitWake__CYZ_DEVICE_EXTENSION"} {:fieldname "SendWaitWake"} SendWaitWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3032
}

function {:inline true} {:fieldmap "Mem_T.SendXoffChar__CYZ_DEVICE_EXTENSION"} {:fieldname "SendXoffChar"} SendXoffChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3392
}

function {:inline true} {:fieldmap "Mem_T.SendXonChar__CYZ_DEVICE_EXTENSION"} {:fieldname "SendXonChar"} SendXonChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3388
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SerialCount"} SerialCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SerialOverrunErrorCount__SERIALPERF_STATS"} {:fieldname "SerialOverrunErrorCount"} SerialOverrunErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ServiceMask__SERIAL_COMMPROP"} {:fieldname "ServiceMask"} ServiceMask__SERIAL_COMMPROP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SettableBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableBaudRate"} SettableBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SettableBaud__SERIAL_COMMPROP"} {:fieldname "SettableBaud"} SettableBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SettableDataBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableDataBits"} SettableDataBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.SettableData__SERIAL_COMMPROP"} {:fieldname "SettableData"} SettableData__SERIAL_COMMPROP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SettableFlowControl__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableFlowControl"} SettableFlowControl__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SettableParams__SERIAL_COMMPROP"} {:fieldname "SettableParams"} SettableParams__SERIAL_COMMPROP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SettableParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParityCheck"} SettableParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.SettableParity__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParity"} SettableParity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SettableStopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableStopBits"} SettableStopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.SettableStopParity__SERIAL_COMMPROP"} {:fieldname "SettableStopParity"} SettableStopParity__SERIAL_COMMPROP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__IO_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "ShortIntervalAmount"} ShortIntervalAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SkipNaming"} SkipNaming__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3360
}

function {:inline true} {:fieldmap "Mem_T.SpecialChars__CYZ_DEVICE_EXTENSION"} {:fieldname "SpecialChars"} SpecialChars__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "StalledIrpQueue"} StalledIrpQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2728
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "StartTimerLowerRTSDpc"} StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1044
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_42"} {:fieldname "Start"} Start_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_LINE_CONTROL"} {:fieldname "StopBits"} StopBits__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "StopBits"} StopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.StringOffset__IO_ERROR_LOG_PACKET"} {:fieldname "StringOffset"} StringOffset__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Support16BitMode__SERIAL_WMI_COMM_DATA"} {:fieldname "Support16BitMode"} Support16BitMode__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SupportDTRDSR__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportDTRDSR"} SupportDTRDSR__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportIntervalTimeouts"} SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SupportParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportParityCheck"} SupportParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SupportRTSCTS__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportRTSCTS"} SupportRTSCTS__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SupportXonXoff__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportXonXoff"} SupportXonXoff__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SupportedBauds__CYZ_DEVICE_EXTENSION"} {:fieldname "SupportedBauds"} SupportedBauds__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__CYZ_DEVICE_EXTENSION"} {:fieldname "SystemWake"} SystemWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3020
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TXHolding__CYZ_DEVICE_EXTENSION"} {:fieldname "TXHolding"} TXHolding__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Timeout__SERIAL_XOFF_COUNTER"} {:fieldname "Timeout"} Timeout__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Timeouts__CYZ_DEVICE_EXTENSION"} {:fieldname "Timeouts"} Timeouts__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.TotalCharsQueued__CYZ_DEVICE_EXTENSION"} {:fieldname "TotalCharsQueued"} TotalCharsQueued__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalImmediateTimeoutDpc"} TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 924
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalReadTimeoutDpc"} TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 684
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalWriteTimeoutDpc"} TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.TranslatedBoardMemory__CONFIG_DATA"} {:fieldname "TranslatedBoardMemory"} TranslatedBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.TranslatedRuntime__CONFIG_DATA"} {:fieldname "TranslatedRuntime"} TranslatedRuntime__CONFIG_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TransmitImmediate__CYZ_DEVICE_EXTENSION"} {:fieldname "TransmitImmediate"} TransmitImmediate__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.TransmittedCount__SERIALPERF_STATS"} {:fieldname "TransmittedCount"} TransmittedCount__SERIALPERF_STATS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.TxBufaddr__CYZ_DEVICE_EXTENSION"} {:fieldname "TxBufaddr"} TxBufaddr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.TxBufsize__CYZ_DEVICE_EXTENSION"} {:fieldname "TxBufsize"} TxBufsize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.TxFIFO__CONFIG_DATA"} {:fieldname "TxFIFO"} TxFIFO__CONFIG_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.TxFifoAmount__CYZ_DEVICE_EXTENSION"} {:fieldname "TxFifoAmount"} TxFifoAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Type"} Type__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ValidDataMask__CYZ_DEVICE_EXTENSION"} {:fieldname "ValidDataMask"} ValidDataMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 572
}

function {:inline true} {:fieldmap "Mem_T.WaitForImmediate__SERIAL_STATUS"} {:fieldname "WaitForImmediate"} WaitForImmediate__SERIAL_STATUS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.WmiCommData__CYZ_DEVICE_EXTENSION"} {:fieldname "WmiCommData"} WmiCommData__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3084
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "WmiIdentifier"} WmiIdentifier__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3072
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__CYZ_DEVICE_EXTENSION"} {:fieldname "WmiLibInfo"} WmiLibInfo__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3040
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_WMI_PERF_DATA"} {:fieldname "WmiPerfData"} WmiPerfData__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3208
}

function {:inline true} {:fieldmap "Mem_T.WordLength__SERIAL_LINE_CONTROL"} {:fieldname "WordLength"} WordLength__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "WriteComplete"} WriteComplete__CONFIG_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.WriteCurrentChar__CYZ_DEVICE_EXTENSION"} {:fieldname "WriteCurrentChar"} WriteCurrentChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.WriteLength__CYZ_DEVICE_EXTENSION"} {:fieldname "WriteLength"} WriteLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "WriteQueue"} WriteQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "WriteRequestTotalTimer"} WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1484
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutConstant"} WriteTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutMultiplier"} WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.XoffChar__SERIAL_CHARS"} {:fieldname "XoffChar"} XoffChar__SERIAL_CHARS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.XoffCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffCharacter"} XoffCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountCompleteDpc"} XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1004
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountTimeoutDpc"} XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 964
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "XoffCountTimer"} XoffCountTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1804
}

function {:inline true} {:fieldmap "Mem_T.XoffLimit__SERIAL_HANDFLOW"} {:fieldname "XoffLimit"} XoffLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.XoffXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffXmitThreshold"} XoffXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.XonChar__SERIAL_CHARS"} {:fieldname "XonChar"} XonChar__SERIAL_CHARS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.XonCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XonCharacter"} XonCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.XonLimit__SERIAL_HANDFLOW"} {:fieldname "XonLimit"} XonLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.XonXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XonXmitThreshold"} XonXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.BOARD_CTRL"} {:fieldname "board_ctrl"} board_ctrl_ZFW_CTRL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.buf_ctrl_ZFW_CTRL"} {:fieldname "buf_ctrl"} buf_ctrl_ZFW_CTRL(x: int) : int
{
  x + 6208
}

function {:inline true} {:fieldmap "Mem_T.ch_ctrl_ZFW_CTRL"} {:fieldname "ch_ctrl"} ch_ctrl_ZFW_CTRL(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.channel_INT_QUEUE"} {:fieldname "channel"} channel_INT_QUEUE(x: int) : int
{
  x + 2560
}

function {:inline true} {:fieldmap "Mem_T.intr_code_INT_QUEUE"} {:fieldname "intr_code"} intr_code_INT_QUEUE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.param_INT_QUEUE"} {:fieldname "param"} param_INT_QUEUE(x: int) : int
{
  x + 5120
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "pci_doorbell"} pci_doorbell_RUNTIME_9060(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__IO_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl7: int;

const {:string " The default interrupt read buffer size is: %d\n------  The XoffLimit is                         : %d\n------  The XonLimit is                          : %d\n------  The pt 8 size is                         : %d\n"} unique strConst__li2bpl48: int;

const {:string "%s%u"} unique strConst__li2bpl147: int;

const {:string "%x irp was already marked as cancelled\n"} unique strConst__li2bpl219: int;

const {:string "%x is a SETMASK irp\n"} unique strConst__li2bpl214: int;

const {:string "%x occurred prior to the wait - starting the\n------- completion code for %x\n"} unique strConst__li2bpl210: int;

const {:string "%x was the first irp processed by this\n------- invocation of startmask\n"} unique strConst__li2bpl215: int;

const {:string "%x will become the current wait irp\n"} unique strConst__li2bpl218: int;

const {:string "------- BusRelations Query\n"} unique strConst__li2bpl129: int;

const {:string "------- EjectionRelations Query\n"} unique strConst__li2bpl130: int;

const {:string "------- PowerRelations Query\n"} unique strConst__li2bpl131: int;

const {:string "------- RemovalRelations Query\n"} unique strConst__li2bpl132: int;

const {:string "------- TargetDeviceRelation Query\n"} unique strConst__li2bpl133: int;

const {:string "------- Unknown Query\n"} unique strConst__li2bpl128: int;

const {:string "<CyzCommError\n"} unique strConst__li2bpl49: int;

const {:string "<CyzCompleteRead(%X)\n"} unique strConst__li2bpl236: int;

const {:string "<CyzCompleteWait\n"} unique strConst__li2bpl225: int;

const {:string "<CyzCompleteWrite\n"} unique strConst__li2bpl194: int;

const {:string "<CyzCompleteXoff\n"} unique strConst__li2bpl196: int;

const {:string "<CyzDisableInterfaces\n"} unique strConst__li2bpl32: int;

const {:string "<CyzFlush (1) %X\n"} unique strConst__li2bpl5: int;

const {:string "<CyzFlush (2) %X\n"} unique strConst__li2bpl6: int;

const {:string "<CyzFlush (3) %X\n"} unique strConst__li2bpl4: int;

const {:string "<CyzGetNextWrite\n"} unique strConst__li2bpl199: int;

const {:string "<CyzGetRegistryKeyValue %X\n"} unique strConst__li2bpl9: int;

const {:string "<CyzInitMultiPort (1) %X\n"} unique strConst__li2bpl52: int;

const {:string "<CyzInitMultiPort (3) %X\n"} unique strConst__li2bpl53: int;

const {:string "<CyzKillPendingIrps\n"} unique strConst__li2bpl33: int;

const {:string "<CyzRead (1) %X\n"} unique strConst__li2bpl229: int;

const {:string "<CyzRead (2) %X\n"} unique strConst__li2bpl230: int;

const {:string "<CyzRead (3) %X\n"} unique strConst__li2bpl231: int;

const {:string "<CyzRead (4) %X\n"} unique strConst__li2bpl232: int;

const {:string "<CyzReadTimeout\n"} unique strConst__li2bpl234: int;

const {:string "<CyzReleaseResources\n"} unique strConst__li2bpl35: int;

const {:string "<CyzRemoveDevObj %X\n"} unique strConst__li2bpl19: int;

const {:string "<CyzStartImmediate\n"} unique strConst__li2bpl73: int;

const {:string "<CyzStartRead %X\n"} unique strConst__li2bpl227: int;

const {:string "<CyzStartWrite %X\n"} unique strConst__li2bpl192: int;

const {:string "<CyzTimeoutXoff\n"} unique strConst__li2bpl190: int;

const {:string "<CyzUnstallIrps\n"} unique strConst__li2bpl189: int;

const {:string "<CyzWrite (1) %X\n"} unique strConst__li2bpl200: int;

const {:string "<CyzWrite (2) %X\n"} unique strConst__li2bpl201: int;

const {:string "<CyzWrite (3) %X\n"} unique strConst__li2bpl202: int;

const {:string "<CyzWrite (4) %X\n"} unique strConst__li2bpl203: int;

const {:string ">CyzCommError(%X)\n"} unique strConst__li2bpl50: int;

const {:string ">CyzCompleteRead(%X)\n"} unique strConst__li2bpl237: int;

const {:string ">CyzCompleteWait(%X)\n"} unique strConst__li2bpl226: int;

const {:string ">CyzCompleteWrite(%X)\n"} unique strConst__li2bpl195: int;

const {:string ">CyzCompleteXoff(%X)\n"} unique strConst__li2bpl197: int;

const {:string ">CyzDisableInterfaces(%X, %s)\n"} unique strConst__li2bpl31: int;

const {:string ">CyzFindInitController(%X, %X)\n"} unique strConst__li2bpl27: int;

const {:string ">CyzFlush(%X, %X)\n"} unique strConst__li2bpl2: int;

const {:string ">CyzGetNextWrite(XXX)\n"} unique strConst__li2bpl198: int;

const {:string ">CyzGetRegistryKeyValue(XXX)\n"} unique strConst__li2bpl8: int;

const {:string ">CyzInitMultiPort(%X, %X, %X)\n"} unique strConst__li2bpl51: int;

const {:string ">CyzKillPendingIrps(%X)\n"} unique strConst__li2bpl34: int;

const {:string ">CyzRead(%X, %X)\n"} unique strConst__li2bpl233: int;

const {:string ">CyzReadTimeout(%X)\n"} unique strConst__li2bpl235: int;

const {:string ">CyzReleaseResources(%X)\n"} unique strConst__li2bpl37: int;

const {:string ">CyzRemoveDevObj(%X)\n"} unique strConst__li2bpl18: int;

const {:string ">CyzStartImmediate(%X)\n"} unique strConst__li2bpl72: int;

const {:string ">CyzStartRead(%X)\n"} unique strConst__li2bpl228: int;

const {:string ">CyzStartWrite(%X)\n"} unique strConst__li2bpl193: int;

const {:string ">CyzTimeoutXoff(%X)\n"} unique strConst__li2bpl191: int;

const {:string ">CyzUnstallIrps(%X)\n"} unique strConst__li2bpl187: int;

const {:string ">CyzWrite(%X, %X)\n"} unique strConst__li2bpl204: int;

const {:string "Aha! It is a first multi\n"} unique strConst__li2bpl23: int;

const {:string "Aha! It is a multiport node\n"} unique strConst__li2bpl24: int;

const {:string "Already in requested power state\n"} unique strConst__li2bpl65: int;

const {:string "Attempting to init %wZ\n------- Runtime Memory is %x\n------- Board Memory is %x\n------- BusNumber is %d\n------- BusType is %d\n------- Runtime AddressSpace is %d\n------- Board AddressSpace is %d\n"} unique strConst__li2bpl28: int;

const {:string "Board Memory address: %x\n"} unique strConst__li2bpl92: int;

const {:string "Bogus Runtime address %x\n"} unique strConst__li2bpl99: int;

const {:string "Bogus board address %x\n"} unique strConst__li2bpl98: int;

const {:string "CLEAN: removing multiport isr ext\n"} unique strConst__li2bpl17: int;

const {:string "Can't filter NULL resources!\n"} unique strConst__li2bpl125: int;

const {:string "Canceling wait for irp %x\n"} unique strConst__li2bpl221: int;

const {:string "Cleaning up failed start\n"} unique strConst__li2bpl102: int;

const {:string "Clearing DTR for Port%d Pci%d\n"} unique strConst__li2bpl174: int;

const {:string "Clearing RTS for Port%d Pci%d\n"} unique strConst__li2bpl173: int;

const {:string "Clearing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl180: int;

const {:string "Close open count bad for: 0x%x\n"} unique strConst__li2bpl76: int;

const {:string "Close prologue failed for: %x\n"} unique strConst__li2bpl75: int;

const {:string "Com Board AddressSpace: %x\n"} unique strConst__li2bpl96: int;

const {:string "Com InterfaceType: %x\n"} unique strConst__li2bpl97: int;

const {:string "Com Port BusNumber: %x\n"} unique strConst__li2bpl94: int;

const {:string "Com Port Index: %x\n"} unique strConst__li2bpl93: int;

const {:string "Com Runtime AddressSpace: %x\n"} unique strConst__li2bpl95: int;

const {:string "Complete Irp: %X\n"} unique strConst__li2bpl3: int;

const {:string "Completing wait for irp %x\n"} unique strConst__li2bpl224: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different Runtime addresses\n"} unique strConst__li2bpl25: int;

const {:string "Could not map Board memory BufCtrl for %wZ\n"} unique strConst__li2bpl43: int;

const {:string "Could not map Board memory ChCtrl for %wZ\n"} unique strConst__li2bpl44: int;

const {:string "Could not map Board memory IntQueue for %wZ\n"} unique strConst__li2bpl40: int;

const {:string "Could not map Board memory RxBuf for %wZ\n"} unique strConst__li2bpl41: int;

const {:string "Could not map Board memory TxBuf for %wZ\n"} unique strConst__li2bpl42: int;

const {:string "Could not map Board memory for device registers for %wZ\n"} unique strConst__li2bpl46: int;

const {:string "Could not map BoardCtrl for %wZ\n"} unique strConst__li2bpl45: int;

const {:string "Could not map Runtime memory for device registers for %wZ\n"} unique strConst__li2bpl47: int;

const {:string "Couldn't allocate memory for Dos name\n"} unique strConst__li2bpl165: int;

const {:string "Couldn't allocate memory for WMI name\n"} unique strConst__li2bpl167: int;

const {:string "Couldn't allocate memory for buffer\n"} unique strConst__li2bpl169: int;

const {:string "Couldn't allocate memory for device name\n"} unique strConst__li2bpl170: int;

const {:string "Couldn't allocate memory for symbolic link name\n"} unique strConst__li2bpl166: int;

const {:string "Couldn't allocate memory for the\n------  user configuration record\n"} unique strConst__li2bpl106: int;

const {:string "Couldn't create the device map entry\n------- for port %wZ\n"} unique strConst__li2bpl163: int;

const {:string "Couldn't create the symbolic link\nfor port %wZ\n"} unique strConst__li2bpl164: int;

const {:string "Couldn't delete value entry %wZ\n"} unique strConst__li2bpl111: int;

const {:string "Couldn't register class association\nfor port %wZ\n"} unique strConst__li2bpl161: int;

const {:string "Couldn't set class association for port %wZ\n"} unique strConst__li2bpl162: int;

const {:string "Count: %x  Addr: 0x%x\n"} unique strConst__li2bpl77: int;

const {:string "Cyclades-Z\\Port"} unique strConst__li2bpl148: int;

const {:string "CyzGetRegistryKeyValue FirmwareVersion failed - %x\n"} unique strConst__li2bpl101: int;

const {:string "CyzGetRegistryKeyValue PortResources failed - %x\n"} unique strConst__li2bpl153: int;

const {:string "CyzGetRegistryKeyValue PortResourcesTr failed - %xn"} unique strConst__li2bpl154: int;

const {:string "CyzRelinquishPowerPolicy"} unique strConst__li2bpl107: int;

const {:string "CyzSkipExternalNaming"} unique strConst__li2bpl155: int;

const {:string "DPC's drained: %x\n"} unique strConst__li2bpl79: int;

const {:string "Deleting Link %wZ\n"} unique strConst__li2bpl109: int;

const {:string "DevicePowerState\n"} unique strConst__li2bpl64: int;

const {:string "Dispatch entry for: %x\n"} unique strConst__li2bpl1: int;

const {:string "DoesPortExist test failed for %wZ\n"} unique strConst__li2bpl39: int;

const {:string "DosDevices"} unique strConst__li2bpl159: int;

const {:string "DosName is %wZ\n"} unique strConst__li2bpl160: int;

const {:string "Draining DPC's: %x\n"} unique strConst__li2bpl80: int;

const {:string "Enter CyzRestoreDeviceState\n"} unique strConst__li2bpl55: int;

const {:string "Entering CyzSaveDeviceState\n"} unique strConst__li2bpl68: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around Board memory\n"} unique strConst__li2bpl22: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around physical memory\n"} unique strConst__li2bpl20: int;

const {:string "Error in config record for %wZ\n------  board memory wraps around physical memory\n"} unique strConst__li2bpl21: int;

const {:string "External Naming Failed - Status %x\n"} unique strConst__li2bpl105: int;

const {:string "FALSE"} unique strConst__li2bpl29: int;

const {:string "FirmwareVersion"} unique strConst__li2bpl86: int;

const {:string "Getting PortName/Identifier failed - %x\n"} unique strConst__li2bpl168: int;

const {:string "Going to power state D0\n"} unique strConst__li2bpl67: int;

const {:string "Going to power state D3\n"} unique strConst__li2bpl66: int;

const {:string "Got IRP_MN_CANCEL_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl112: int;

const {:string "Got IRP_MN_CANCEL_STOP_DEVICE Irp\n"} unique strConst__li2bpl113: int;

const {:string "Got IRP_MN_EJECT Irp\n"} unique strConst__li2bpl119: int;

const {:string "Got IRP_MN_FILTER_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl140: int;

const {:string "Got IRP_MN_POWER_SEQUENCE Irp\n"} unique strConst__li2bpl59: int;

const {:string "Got IRP_MN_QUERY_DEVICE_CAPABILITIES IRP\n"} unique strConst__li2bpl126: int;

const {:string "Got IRP_MN_QUERY_DEVICE_RELATIONS Irp\n"} unique strConst__li2bpl114: int;

const {:string "Got IRP_MN_QUERY_ID Irp\n"} unique strConst__li2bpl146: int;

const {:string "Got IRP_MN_QUERY_INTERFACE Irp\n"} unique strConst__li2bpl115: int;

const {:string "Got IRP_MN_QUERY_POWER Irp\n"} unique strConst__li2bpl61: int;

const {:string "Got IRP_MN_QUERY_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl137: int;

const {:string "Got IRP_MN_QUERY_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl116: int;

const {:string "Got IRP_MN_QUERY_STOP_DEVICE Irp\n"} unique strConst__li2bpl134: int;

const {:string "Got IRP_MN_READ_CONFIG Irp\n"} unique strConst__li2bpl117: int;

const {:string "Got IRP_MN_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl136: int;

const {:string "Got IRP_MN_SET_LOCK Irp\n"} unique strConst__li2bpl120: int;

const {:string "Got IRP_MN_SET_POWER Irp\n"} unique strConst__li2bpl60: int;

const {:string "Got IRP_MN_START_DEVICE Irp\n"} unique strConst__li2bpl138: int;

const {:string "Got IRP_MN_STOP_DEVICE Irp\n"} unique strConst__li2bpl135: int;

const {:string "Got IRP_MN_SURPRISE_REMOVAL Irp\n"} unique strConst__li2bpl121: int;

const {:string "Got IRP_MN_WAIT_WAKE Irp\n"} unique strConst__li2bpl58: int;

const {:string "Got IRP_MN_WRITE_CONFIG Irp\n"} unique strConst__li2bpl118: int;

const {:string "ID is sole ID\n"} unique strConst__li2bpl123: int;

const {:string "Identifier"} unique strConst__li2bpl157: int;

const {:string "In CyzCancelWait\n"} unique strConst__li2bpl222: int;

const {:string "In CyzClose\n"} unique strConst__li2bpl78: int;

const {:string "In CyzCompleteWait\n"} unique strConst__li2bpl223: int;

const {:string "In CyzCreateOpen\n"} unique strConst__li2bpl74: int;

const {:string "In CyzFinishOldWait\n"} unique strConst__li2bpl207: int;

const {:string "In CyzGiveWaitToIsr\n"} unique strConst__li2bpl211: int;

const {:string "In CyzGotoPowerState\n"} unique strConst__li2bpl70: int;

const {:string "In CyzGrabWaitFromIsr\n"} unique strConst__li2bpl206: int;

const {:string "In CyzSetPowerD3\n"} unique strConst__li2bpl54: int;

const {:string "In CyzStartMask\n"} unique strConst__li2bpl220: int;

const {:string "In CyzUndoExternalNaming for extension: %x of port %wZ\n"} unique strConst__li2bpl108: int;

const {:string "In Ioctl processing for set mask\n"} unique strConst__li2bpl13: int;

const {:string "In Ioctl processing for wait mask\n"} unique strConst__li2bpl10: int;

const {:string "Incompatible firmware\n"} unique strConst__li2bpl88: int;

const {:string "Initializing for configuration record of %wZ\n"} unique strConst__li2bpl38: int;

const {:string "Invalid Bus type %x\n"} unique strConst__li2bpl90: int;

const {:string "Invalid size fo the buffer %d\n"} unique strConst__li2bpl14: int;

const {:string "Invalid size for the buffer %d\n"} unique strConst__li2bpl12: int;

const {:string "IoOpenDeviceRegistryKey failed - %x \n"} unique strConst__li2bpl84: int;

const {:string "Leaving CyzGotoPowerState\n"} unique strConst__li2bpl71: int;

const {:string "Leaving CyzSaveDeviceState\n"} unique strConst__li2bpl69: int;

const {:string "List has %x lists (including alternatives)\n"} unique strConst__li2bpl141: int;

const {:string "List has %x resources in it\n"} unique strConst__li2bpl142: int;

const {:string "Mapping power capabilities\n"} unique strConst__li2bpl127: int;

const {:string "Matched to %x\n"} unique strConst__li2bpl26: int;

const {:string "No events occured prior to the wait call\n"} unique strConst__li2bpl209: int;

const {:string "Not doing external naming -- state is %x\n"} unique strConst__li2bpl104: int;

const {:string "PDevExt: %x\n"} unique strConst__li2bpl56: int;

const {:string "Perhaps another mask irp was found in the queue\n------- %x/%x <- values should be the same\n"} unique strConst__li2bpl216: int;

const {:string "Port index too large %x\n"} unique strConst__li2bpl89: int;

const {:string "PortIndex"} unique strConst__li2bpl85: int;

const {:string "PortName"} unique strConst__li2bpl156: int;

const {:string "PortResources"} unique strConst__li2bpl151: int;

const {:string "PortResourcesTr"} unique strConst__li2bpl152: int;

const {:string "Processing DTR flow for Port%d Pci%d\n"} unique strConst__li2bpl175: int;

const {:string "Processing RTS flow\n"} unique strConst__li2bpl177: int;

const {:string "Read name %wZ\n"} unique strConst__li2bpl171: int;

const {:string "Release - freeing multi context\n"} unique strConst__li2bpl36: int;

const {:string "Removing DTR block on reception for Port%d Pci%d\n"} unique strConst__li2bpl176: int;

const {:string "Removing dtr block of reception for Port%d Pci%d\n"} unique strConst__li2bpl183: int;

const {:string "Removing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl178: int;

const {:string "Reopening device\n"} unique strConst__li2bpl57: int;

const {:string "Runtime Memory address: %x\n"} unique strConst__li2bpl100: int;

const {:string "SERIALCOMM"} unique strConst__li2bpl110: int;

const {:string "STARTMASK - CurrentMaskIrp: %x\n"} unique strConst__li2bpl213: int;

const {:string "Set mask location of %x, in irp %x, with system buffer of %x\n"} unique strConst__li2bpl208: int;

const {:string "Setting DTR block on reception for Port%d Pci%d\n"} unique strConst__li2bpl182: int;

const {:string "Setting DTR for Port%d Pci%d\n"} unique strConst__li2bpl185: int;

const {:string "Setting RTS for Port%d Pci%d\n"} unique strConst__li2bpl186: int;

const {:string "Setting rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl179: int;

const {:string "Sharing Board Memory for device %x\n"} unique strConst__li2bpl145: int;

const {:string "Sharing Runtime Memory for device %x\n"} unique strConst__li2bpl144: int;

const {:string "Sharing interrupt for device %x\n"} unique strConst__li2bpl143: int;

const {:string "Starting or queuing set mask irp %x\n"} unique strConst__li2bpl15: int;

const {:string "Starting or queuing wait mask irp%x\n"} unique strConst__li2bpl11: int;

const {:string "SystemPowerState\n"} unique strConst__li2bpl63: int;

const {:string "TOGGLE Clearing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl181: int;

const {:string "TR resource pointer is %x\n"} unique strConst__li2bpl83: int;

const {:string "TRUE"} unique strConst__li2bpl30: int;

const {:string "The dispatch routine does not return at the same IRQL level at which it was called"} unique strConst__li2bpl172: int;

const {:string "The isr owns the irp %x, mask location is %x\n------- and system buffer is %x\n"} unique strConst__li2bpl212: int;

const {:string "The isr still owns the irp %x, mask location is %x\n------- and system buffer is %x\n"} unique strConst__li2bpl205: int;

const {:string "There aren't that many of those\nbusses on this system,%x\n"} unique strConst__li2bpl91: int;

const {:string "UNKNOWN PowerState\n"} unique strConst__li2bpl62: int;

const {:string "Unknown mask %x\n"} unique strConst__li2bpl16: int;

const {:string "Unstalling Irp 0x%x with 0x%x\n"} unique strConst__li2bpl188: int;

const {:string "WaitIrp is invalid\n------- IsrWaitMask: %x\n------- CurrentWaitIrp: %x\n"} unique strConst__li2bpl217: int;

const {:string "We should not have Port resource\n"} unique strConst__li2bpl124: int;

const {:string "WriteComplete"} unique strConst__li2bpl87: int;

const {:string "\\"} unique strConst__li2bpl158: int;

const {:string "callee"} unique strConst__li2bpl0: int;

const {:string "entering CyzGetPortInfo\n"} unique strConst__li2bpl81: int;

const {:string "entering CyzStartDevice\n"} unique strConst__li2bpl149: int;

const {:string "error with IoCallDriver %x\n"} unique strConst__li2bpl150: int;

const {:string "failing; device open\n"} unique strConst__li2bpl139: int;

const {:string "for device %x\n"} unique strConst__li2bpl122: int;

const {:string "leaving CyzFinishStartDevice\n"} unique strConst__li2bpl103: int;

const {:string "removing dtr block of reception for Port%d Pci%d\n"} unique strConst__li2bpl184: int;

const {:string "resource pointer is %x\n"} unique strConst__li2bpl82: int;

const {:allocated} li2bplFunctionConstant113: int;

axiom li2bplFunctionConstant113 == 113;

const {:allocated} li2bplFunctionConstant131: int;

axiom li2bplFunctionConstant131 == 131;

const {:allocated} li2bplFunctionConstant144: int;

axiom li2bplFunctionConstant144 == 144;

const {:allocated} li2bplFunctionConstant149: int;

axiom li2bplFunctionConstant149 == 149;

const {:allocated} li2bplFunctionConstant151: int;

axiom li2bplFunctionConstant151 == 151;

const {:allocated} li2bplFunctionConstant161: int;

axiom li2bplFunctionConstant161 == 161;

const {:allocated} li2bplFunctionConstant177: int;

axiom li2bplFunctionConstant177 == 177;

const {:allocated} li2bplFunctionConstant178: int;

axiom li2bplFunctionConstant178 == 178;

const {:allocated} li2bplFunctionConstant179: int;

axiom li2bplFunctionConstant179 == 179;

const {:allocated} li2bplFunctionConstant182: int;

axiom li2bplFunctionConstant182 == 182;

const {:allocated} li2bplFunctionConstant194: int;

axiom li2bplFunctionConstant194 == 194;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant219: int;

axiom li2bplFunctionConstant219 == 219;

const {:allocated} li2bplFunctionConstant227: int;

axiom li2bplFunctionConstant227 == 227;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant229: int;

axiom li2bplFunctionConstant229 == 229;

const {:allocated} li2bplFunctionConstant230: int;

axiom li2bplFunctionConstant230 == 230;

const {:allocated} li2bplFunctionConstant232: int;

axiom li2bplFunctionConstant232 == 232;

const {:allocated} li2bplFunctionConstant280: int;

axiom li2bplFunctionConstant280 == 280;

const {:allocated} li2bplFunctionConstant283: int;

axiom li2bplFunctionConstant283 == 283;

const {:allocated} li2bplFunctionConstant284: int;

axiom li2bplFunctionConstant284 == 284;

const {:allocated} li2bplFunctionConstant285: int;

axiom li2bplFunctionConstant285 == 285;

const {:allocated} li2bplFunctionConstant290: int;

axiom li2bplFunctionConstant290 == 290;

const {:allocated} li2bplFunctionConstant312: int;

axiom li2bplFunctionConstant312 == 312;

const {:allocated} li2bplFunctionConstant313: int;

axiom li2bplFunctionConstant313 == 313;

const {:allocated} li2bplFunctionConstant314: int;

axiom li2bplFunctionConstant314 == 314;

const {:allocated} li2bplFunctionConstant315: int;

axiom li2bplFunctionConstant315 == 315;

const {:allocated} li2bplFunctionConstant316: int;

axiom li2bplFunctionConstant316 == 316;

const {:allocated} li2bplFunctionConstant347: int;

axiom li2bplFunctionConstant347 == 347;

const {:allocated} li2bplFunctionConstant348: int;

axiom li2bplFunctionConstant348 == 348;

const {:allocated} li2bplFunctionConstant349: int;

axiom li2bplFunctionConstant349 == 349;

const {:allocated} li2bplFunctionConstant350: int;

axiom li2bplFunctionConstant350 == 350;

const {:allocated} li2bplFunctionConstant351: int;

axiom li2bplFunctionConstant351 == 351;

const {:allocated} li2bplFunctionConstant352: int;

axiom li2bplFunctionConstant352 == 352;

const {:allocated} li2bplFunctionConstant380: int;

axiom li2bplFunctionConstant380 == 380;

const {:allocated} li2bplFunctionConstant381: int;

axiom li2bplFunctionConstant381 == 381;

const {:allocated} li2bplFunctionConstant456: int;

axiom li2bplFunctionConstant456 == 456;

const {:allocated} li2bplFunctionConstant457: int;

axiom li2bplFunctionConstant457 == 457;

const {:allocated} li2bplFunctionConstant513: int;

axiom li2bplFunctionConstant513 == 513;

const {:allocated} li2bplFunctionConstant515: int;

axiom li2bplFunctionConstant515 == 515;

const {:allocated} li2bplFunctionConstant518: int;

axiom li2bplFunctionConstant518 == 518;

implementation {:origName "CyzPutChar"} CyzPutChar#0(actual_Extension_64: int, actual_CharToPut: int)
{
  var {:pointer} Tmp_1042: int;
  var {:pointer} sdv_834: int;
  var {:pointer} Tmp_1044: int;
  var {:pointer} Tmp_1046: int;
  var {:scalar} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} Tmp_1049: int;
  var {:pointer} Tmp_1050: int;
  var {:pointer} Tmp_1051: int;
  var {:pointer} Tmp_1052: int;
  var {:scalar} Tmp_1053: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} Extension_64: int;
  var {:scalar} CharToPut: int;
  var vslice_dummy_var_653: int;
  var vslice_dummy_var_654: int;
  var vslice_dummy_var_655: int;
  var vslice_dummy_var_656: int;
  var vslice_dummy_var_657: int;
  var vslice_dummy_var_658: int;
  var vslice_dummy_var_659: int;
  var vslice_dummy_var_660: int;
  var vslice_dummy_var_971: int;
  var vslice_dummy_var_972: int;
  var vslice_dummy_var_973: int;
  var vslice_dummy_var_974: int;

  anon0:
    call {:si_unique_call 2597} vslice_dummy_var_653 := __HAVOC_malloc(4);
    Extension_64 := actual_Extension_64;
    CharToPut := actual_CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 2598} vslice_dummy_var_654 := CyzHandleModemUpdate#0(Extension_64, 0, 0);
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L4;

  L4:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1048;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2599} vslice_dummy_var_660 := CyzInsertQueueDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L10;

  L10:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1054;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    Mem_T.INT4[Tmp_1054] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc vslice_dummy_var_971;
    call {:si_unique_call 2600} sdv_834 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_971);
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    assume {:nonnull} sdv_834 != 0;
    assume sdv_834 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2601} vslice_dummy_var_656 := CyzInsertQueueDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L1;

  L1:
    return;

  anon64_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon50_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1047;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Tmp_1047 == 2;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2602} vslice_dummy_var_659 := CyzClrDTR(Extension_64);
    goto L36;

  L36:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1053;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Tmp_1053 == 128;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2603} vslice_dummy_var_658 := CyzClrRTS(Extension_64);
    goto L44;

  L44:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2604} CyzProdXonXoff(Extension_64, 0);
    goto L51;

  L51:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1042;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    Mem_T.INT4[Tmp_1042] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1046;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1046 != 0;
    assume Tmp_1046 > 0;
    havoc vslice_dummy_var_972;
    Mem_T.INT4[Tmp_1046] := vslice_dummy_var_972;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1044;
    assume {:nonnull} Tmp_1044 != 0;
    assume Tmp_1044 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2605} vslice_dummy_var_657 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L62;

  L62:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon59_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon68_Then:
    goto L62;

  anon60_Then:
    goto L62;

  anon67_Then:
    goto L62;

  anon56_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1049;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1049 != 0;
    assume Tmp_1049 > 0;
    havoc vslice_dummy_var_973;
    Mem_T.INT4[Tmp_1049] := vslice_dummy_var_973;
    goto L78;

  L78:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2606} vslice_dummy_var_655 := CyzInsertQueueDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L1;

  anon61_Then:
    goto L1;

  anon62_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1051;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1051 != 0;
    assume Tmp_1051 > 0;
    havoc vslice_dummy_var_974;
    Mem_T.INT4[Tmp_1051] := vslice_dummy_var_974;
    goto L78;

  anon69_Then:
    goto L78;

  anon58_Then:
    goto L51;

  anon57_Then:
    goto L51;

  anon53_Then:
    goto L51;

  anon55_Then:
    goto L44;

  anon54_Then:
    goto L44;

  anon66_Then:
    assume {:partition} Tmp_1053 != 128;
    goto L44;

  anon52_Then:
    goto L36;

  anon51_Then:
    goto L36;

  anon65_Then:
    assume {:partition} Tmp_1047 != 2;
    goto L36;

  anon63_Then:
    goto L10;

  anon48_Then:
    goto L10;

  anon49_Then:
    goto L1;

  anon47_Then:
    goto L4;
}



procedure {:origName "CyzPutChar"} CyzPutChar#0(actual_Extension_64: int, actual_CharToPut: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPutChar"} CyzPutChar#1(actual_Extension_64: int, actual_CharToPut: int)
{
  var {:pointer} Tmp_1042: int;
  var {:pointer} sdv_834: int;
  var {:pointer} Tmp_1044: int;
  var {:pointer} Tmp_1046: int;
  var {:scalar} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} Tmp_1049: int;
  var {:pointer} Tmp_1050: int;
  var {:pointer} Tmp_1051: int;
  var {:pointer} Tmp_1052: int;
  var {:scalar} Tmp_1053: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} Extension_64: int;
  var {:scalar} CharToPut: int;
  var vslice_dummy_var_661: int;
  var vslice_dummy_var_662: int;
  var vslice_dummy_var_663: int;
  var vslice_dummy_var_664: int;
  var vslice_dummy_var_665: int;
  var vslice_dummy_var_666: int;
  var vslice_dummy_var_667: int;
  var vslice_dummy_var_668: int;
  var vslice_dummy_var_975: int;
  var vslice_dummy_var_976: int;
  var vslice_dummy_var_977: int;
  var vslice_dummy_var_978: int;

  anon0:
    call {:si_unique_call 2607} vslice_dummy_var_661 := __HAVOC_malloc(4);
    Extension_64 := actual_Extension_64;
    CharToPut := actual_CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 2608} vslice_dummy_var_662 := CyzHandleModemUpdate#1(Extension_64, 0, 0);
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L4;

  L4:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1048;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2609} vslice_dummy_var_668 := CyzInsertQueueDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L10;

  L10:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1054;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    Mem_T.INT4[Tmp_1054] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc vslice_dummy_var_975;
    call {:si_unique_call 2610} sdv_834 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_975);
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    assume {:nonnull} sdv_834 != 0;
    assume sdv_834 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2611} vslice_dummy_var_664 := CyzInsertQueueDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L1;

  L1:
    return;

  anon64_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon50_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1047;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Tmp_1047 == 2;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2612} vslice_dummy_var_667 := CyzClrDTR(Extension_64);
    goto L36;

  L36:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1053;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Tmp_1053 == 128;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2613} vslice_dummy_var_666 := CyzClrRTS(Extension_64);
    goto L44;

  L44:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2614} CyzProdXonXoff(Extension_64, 0);
    goto L51;

  L51:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1042;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    Mem_T.INT4[Tmp_1042] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1046;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1046 != 0;
    assume Tmp_1046 > 0;
    havoc vslice_dummy_var_976;
    Mem_T.INT4[Tmp_1046] := vslice_dummy_var_976;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1044;
    assume {:nonnull} Tmp_1044 != 0;
    assume Tmp_1044 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2615} vslice_dummy_var_665 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L62;

  L62:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon59_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon68_Then:
    goto L62;

  anon60_Then:
    goto L62;

  anon67_Then:
    goto L62;

  anon56_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1049;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1049 != 0;
    assume Tmp_1049 > 0;
    havoc vslice_dummy_var_977;
    Mem_T.INT4[Tmp_1049] := vslice_dummy_var_977;
    goto L78;

  L78:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2616} vslice_dummy_var_663 := CyzInsertQueueDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto L1;

  anon61_Then:
    goto L1;

  anon62_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1051;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1051 != 0;
    assume Tmp_1051 > 0;
    havoc vslice_dummy_var_978;
    Mem_T.INT4[Tmp_1051] := vslice_dummy_var_978;
    goto L78;

  anon69_Then:
    goto L78;

  anon58_Then:
    goto L51;

  anon57_Then:
    goto L51;

  anon53_Then:
    goto L51;

  anon55_Then:
    goto L44;

  anon54_Then:
    goto L44;

  anon66_Then:
    assume {:partition} Tmp_1053 != 128;
    goto L44;

  anon52_Then:
    goto L36;

  anon51_Then:
    goto L36;

  anon65_Then:
    assume {:partition} Tmp_1047 != 2;
    goto L36;

  anon63_Then:
    goto L10;

  anon48_Then:
    goto L10;

  anon49_Then:
    goto L1;

  anon47_Then:
    goto L4;
}



procedure {:origName "CyzPutChar"} CyzPutChar#1(actual_Extension_64: int, actual_CharToPut: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#0(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int)
{
  var {:scalar} ModemStatus: int;
  var {:pointer} Tmp_705: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} OldTXHolding: int;
  var {:scalar} sdv_618: int;
  var {:pointer} Tmp_707: int;
  var {:scalar} msvr: int;
  var {:pointer} Extension_32: int;
  var {:scalar} DoingTX: int;
  var {:scalar} Reason: int;
  var vslice_dummy_var_669: int;
  var vslice_dummy_var_670: int;
  var vslice_dummy_var_979: int;

  anon0:
    Extension_32 := actual_Extension_32;
    DoingTX := actual_DoingTX;
    Reason := actual_Reason;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc OldTXHolding;
    ModemStatus := 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2617} msvr := corral_nondet();
    msvr := BAND(msvr, BNOT(256));
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc msvr;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(msvr, 2048) != 0;
    ModemStatus := BOR(ModemStatus, 16);
    goto L17;

  L17:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(msvr, 512) != 0;
    ModemStatus := BOR(ModemStatus, 32);
    goto L19;

  L19:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(msvr, 1024) != 0;
    ModemStatus := BOR(ModemStatus, 64);
    goto L21;

  L21:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(msvr, 256) != 0;
    ModemStatus := BOR(ModemStatus, 128);
    goto L23;

  L23:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Reason == 115;
    ModemStatus := BOR(ModemStatus, 1);
    goto L25;

  L25:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Reason == 113;
    ModemStatus := BOR(ModemStatus, 2);
    goto L27;

  L27:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Reason == 114;
    ModemStatus := BOR(ModemStatus, 4);
    goto L29;

  L29:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Reason == 112;
    ModemStatus := BOR(ModemStatus, 8);
    goto L31;

  L31:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(ModemStatus, 15) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume false;
    assume false;
    assume false;
    return;

  anon94_Then:
    assume {:partition} BAND(ModemStatus, 15) == 0;
    goto L33;

  L33:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  L48:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} BAND(ModemStatus, 1) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L51;

  L51:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} BAND(ModemStatus, 2) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L54;

  L54:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} BAND(ModemStatus, 4) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L57;

  L57:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BAND(ModemStatus, 8) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_705;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    havoc vslice_dummy_var_979;
    Mem_T.INT4[Tmp_705] := vslice_dummy_var_979;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2618} vslice_dummy_var_670 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto L49;

  L49:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} BAND(ModemStatus, 16) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  L77:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} BAND(ModemStatus, 128) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  L87:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} OldTXHolding != 0;
    goto L89;

  L89:
    Tmp_703 := ModemStatus;
    return;

  anon115_Then:
    assume {:partition} OldTXHolding == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_706;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Tmp_706 == 192;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2619} sdv_618 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_618 != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L89;

  anon117_Then:
    assume {:partition} sdv_618 == 0;
    goto L89;

  anon125_Then:
    assume {:partition} Tmp_706 != 192;
    goto L89;

  anon116_Then:
    goto L89;

  anon114_Then:
    assume {:partition} BAND(ModemStatus, 128) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon113_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon112_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon111_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon110_Then:
    assume {:partition} BAND(ModemStatus, 16) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon109_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon97_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} DoingTX == 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} OldTXHolding != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L104;

  L104:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 2620} vslice_dummy_var_669 := CyzTxStart#0(Extension_32);
    goto L89;

  anon123_Then:
    goto L89;

  anon121_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L104;

  anon122_Then:
    goto L89;

  anon120_Then:
    goto L89;

  anon119_Then:
    goto L89;

  anon118_Then:
    assume {:partition} OldTXHolding == 0;
    goto L89;

  anon126_Then:
    assume {:partition} DoingTX != 0;
    goto L89;

  anon108_Then:
    goto L89;

  anon107_Then:
    goto L49;

  anon105_Then:
    goto L49;

  anon106_Then:
    assume {:partition} BAND(ModemStatus, 8) == 0;
    goto L60;

  anon103_Then:
    goto L60;

  anon104_Then:
    assume {:partition} BAND(ModemStatus, 4) == 0;
    goto L57;

  anon101_Then:
    goto L57;

  anon102_Then:
    assume {:partition} BAND(ModemStatus, 2) == 0;
    goto L54;

  anon99_Then:
    goto L54;

  anon100_Then:
    assume {:partition} BAND(ModemStatus, 1) == 0;
    goto L51;

  anon98_Then:
    goto L51;

  anon96_Then:
    goto L49;

  anon95_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon93_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon92_Then:
    goto L33;

  anon91_Then:
    assume {:partition} Reason != 112;
    goto L31;

  anon90_Then:
    assume {:partition} Reason != 114;
    goto L29;

  anon89_Then:
    assume {:partition} Reason != 113;
    goto L27;

  anon88_Then:
    assume {:partition} Reason != 115;
    goto L25;

  anon87_Then:
    assume {:partition} BAND(msvr, 256) == 0;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(msvr, 1024) == 0;
    goto L21;

  anon85_Then:
    assume {:partition} BAND(msvr, 512) == 0;
    goto L19;

  anon124_Then:
    assume {:partition} BAND(msvr, 2048) == 0;
    goto L17;
}



procedure {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#0(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#1(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int)
{
  var {:scalar} ModemStatus: int;
  var {:pointer} Tmp_705: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} OldTXHolding: int;
  var {:scalar} sdv_618: int;
  var {:pointer} Tmp_707: int;
  var {:scalar} msvr: int;
  var {:pointer} Extension_32: int;
  var {:scalar} DoingTX: int;
  var {:scalar} Reason: int;
  var vslice_dummy_var_671: int;
  var vslice_dummy_var_672: int;
  var vslice_dummy_var_980: int;
  var vslice_dummy_var_981: int;

  anon0:
    Extension_32 := actual_Extension_32;
    DoingTX := actual_DoingTX;
    Reason := actual_Reason;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc OldTXHolding;
    ModemStatus := 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2621} msvr := corral_nondet();
    msvr := BAND(msvr, BNOT(256));
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc msvr;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(msvr, 2048) != 0;
    ModemStatus := BOR(ModemStatus, 16);
    goto L17;

  L17:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(msvr, 512) != 0;
    ModemStatus := BOR(ModemStatus, 32);
    goto L19;

  L19:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(msvr, 1024) != 0;
    ModemStatus := BOR(ModemStatus, 64);
    goto L21;

  L21:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(msvr, 256) != 0;
    ModemStatus := BOR(ModemStatus, 128);
    goto L23;

  L23:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Reason == 115;
    ModemStatus := BOR(ModemStatus, 1);
    goto L25;

  L25:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Reason == 113;
    ModemStatus := BOR(ModemStatus, 2);
    goto L27;

  L27:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Reason == 114;
    ModemStatus := BOR(ModemStatus, 4);
    goto L29;

  L29:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Reason == 112;
    ModemStatus := BOR(ModemStatus, 8);
    goto L31;

  L31:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(ModemStatus, 15) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc vslice_dummy_var_980;
    call {:si_unique_call 2622} CyzPutChar#0(Extension_32, vslice_dummy_var_980);
    call {:si_unique_call 2623} CyzPutChar#0(Extension_32, 3);
    call {:si_unique_call 2624} CyzPutChar#0(Extension_32, ModemStatus);
    goto L33;

  L33:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  L48:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} BAND(ModemStatus, 1) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L51;

  L51:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} BAND(ModemStatus, 2) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L54;

  L54:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} BAND(ModemStatus, 4) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L57;

  L57:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BAND(ModemStatus, 8) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_705;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    havoc vslice_dummy_var_981;
    Mem_T.INT4[Tmp_705] := vslice_dummy_var_981;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2625} vslice_dummy_var_672 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto L49;

  L49:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} BAND(ModemStatus, 16) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  L77:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} BAND(ModemStatus, 128) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  L87:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} OldTXHolding != 0;
    goto L89;

  L89:
    Tmp_703 := ModemStatus;
    return;

  anon115_Then:
    assume {:partition} OldTXHolding == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_706;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Tmp_706 == 192;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2626} sdv_618 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_618 != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L89;

  anon117_Then:
    assume {:partition} sdv_618 == 0;
    goto L89;

  anon125_Then:
    assume {:partition} Tmp_706 != 192;
    goto L89;

  anon116_Then:
    goto L89;

  anon114_Then:
    assume {:partition} BAND(ModemStatus, 128) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon113_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon112_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon111_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon110_Then:
    assume {:partition} BAND(ModemStatus, 16) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon109_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon97_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} DoingTX == 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} OldTXHolding != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L104;

  L104:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 2627} vslice_dummy_var_671 := CyzTxStart#1(Extension_32);
    goto L89;

  anon123_Then:
    goto L89;

  anon121_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L104;

  anon122_Then:
    goto L89;

  anon120_Then:
    goto L89;

  anon119_Then:
    goto L89;

  anon118_Then:
    assume {:partition} OldTXHolding == 0;
    goto L89;

  anon126_Then:
    assume {:partition} DoingTX != 0;
    goto L89;

  anon108_Then:
    goto L89;

  anon107_Then:
    goto L49;

  anon105_Then:
    goto L49;

  anon106_Then:
    assume {:partition} BAND(ModemStatus, 8) == 0;
    goto L60;

  anon103_Then:
    goto L60;

  anon104_Then:
    assume {:partition} BAND(ModemStatus, 4) == 0;
    goto L57;

  anon101_Then:
    goto L57;

  anon102_Then:
    assume {:partition} BAND(ModemStatus, 2) == 0;
    goto L54;

  anon99_Then:
    goto L54;

  anon100_Then:
    assume {:partition} BAND(ModemStatus, 1) == 0;
    goto L51;

  anon98_Then:
    goto L51;

  anon96_Then:
    goto L49;

  anon95_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon93_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon94_Then:
    assume {:partition} BAND(ModemStatus, 15) == 0;
    goto L33;

  anon92_Then:
    goto L33;

  anon91_Then:
    assume {:partition} Reason != 112;
    goto L31;

  anon90_Then:
    assume {:partition} Reason != 114;
    goto L29;

  anon89_Then:
    assume {:partition} Reason != 113;
    goto L27;

  anon88_Then:
    assume {:partition} Reason != 115;
    goto L25;

  anon87_Then:
    assume {:partition} BAND(msvr, 256) == 0;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(msvr, 1024) == 0;
    goto L21;

  anon85_Then:
    assume {:partition} BAND(msvr, 512) == 0;
    goto L19;

  anon124_Then:
    assume {:partition} BAND(msvr, 2048) == 0;
    goto L17;
}



procedure {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#1(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTxStart"} CyzTxStart#0(actual_Context_42: int) returns (Tmp_930: int)
{
  var {:scalar} Tmp_931: int;
  var {:scalar} Tmp_932: int;
  var {:scalar} Tmp_933: int;
  var {:scalar} Tmp_934: int;
  var {:pointer} Tmp_935: int;
  var {:scalar} amountToWrite1: int;
  var {:scalar} numOfLongs: int;
  var {:scalar} Tmp_937: int;
  var {:pointer} Tmp_939: int;
  var {:scalar} sdv_792: int;
  var {:pointer} Tmp_943: int;
  var {:scalar} Tmp_944: int;
  var {:pointer} Tmp_945: int;
  var {:scalar} Tmp_947: int;
  var {:pointer} Tmp_948: int;
  var {:scalar} Tmp_949: int;
  var {:scalar} Tmp_950: int;
  var {:pointer} Tmp_951: int;
  var {:scalar} Tmp_952: int;
  var {:scalar} Tmp_953: int;
  var {:scalar} Tmp_954: int;
  var {:scalar} Tmp_955: int;
  var {:scalar} Tmp_958: int;
  var {:scalar} Tmp_961: int;
  var {:scalar} Tmp_963: int;
  var {:pointer} Tmp_964: int;
  var {:scalar} Tmp_965: int;
  var {:pointer} Tmp_966: int;
  var {:scalar} tx_5: int;
  var {:scalar} sdv_796: int;
  var {:pointer} Tmp_967: int;
  var {:scalar} Tmp_969: int;
  var {:scalar} Tmp_970: int;
  var {:pointer} Tmp_972: int;
  var {:pointer} Tmp_973: int;
  var {:scalar} numOfBytes: int;
  var {:scalar} Tmp_974: int;
  var {:pointer} Extension_59: int;
  var {:scalar} Tmp_978: int;
  var {:scalar} amountToWrite2: int;
  var {:scalar} sdv_800: int;
  var {:scalar} Tmp_980: int;
  var {:scalar} tx_6: int;
  var {:scalar} Tmp_981: int;
  var {:pointer} Tmp_983: int;
  var {:pointer} Tmp_984: int;
  var {:scalar} sdv_802: int;
  var {:scalar} tx_7: int;
  var {:scalar} Tmp_986: int;
  var {:pointer} Tmp_989: int;
  var {:pointer} Tmp_991: int;
  var {:scalar} sdv_803: int;
  var {:scalar} amount1: int;
  var {:pointer} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:pointer} Context_42: int;
  var vslice_dummy_var_673: int;
  var vslice_dummy_var_674: int;
  var vslice_dummy_var_675: int;
  var vslice_dummy_var_676: int;
  var vslice_dummy_var_677: int;

  anon0:
    Context_42 := actual_Context_42;
    Extension_59 := Context_42;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    Tmp_930 := 0;
    goto L1;

  L1:
    return;

  anon163_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L15;

  L15:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2628} tx_6 := corral_nondet();
    call {:si_unique_call 2629} tx_7 := corral_nondet();
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc tx_5;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} tx_6 >= tx_5;
    goto L27;

  L27:
    Tmp_930 := 0;
    goto L1;

  anon164_Then:
    assume {:partition} tx_5 > tx_6;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} tx_7 < tx_5;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} tx_6 + 1 == tx_7;
    goto L30;

  L30:
    Tmp_930 := 0;
    goto L1;

  anon126_Then:
    assume {:partition} tx_6 + 1 != tx_7;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} tx_6 == tx_5 - 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} tx_7 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume false;
    return;

  anon165_Then:
    goto L34;

  L34:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_965;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Tmp_965 == 192;
    call {:si_unique_call 2630} vslice_dummy_var_673 := CyzSetRTS(Extension_59);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2631} CyzIssueCmd(Extension_59, 17, 0, 0);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2632} sdv_800 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_800 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  L60:
    Tmp_930 := 0;
    goto L1;

  anon132_Then:
    assume {:partition} sdv_800 == 0;
    goto L55;

  anon183_Then:
    assume {:partition} Tmp_965 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2633} CyzIssueCmd(Extension_59, 17, 0, 0);
    goto L55;

  anon131_Then:
    goto L38;

  L38:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_996;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Tmp_996 == 192;
    call {:si_unique_call 2634} vslice_dummy_var_674 := CyzSetRTS(Extension_59);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2635} CyzIssueCmd(Extension_59, 16, 0, 0);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2636} sdv_802 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_802 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L85;

  L85:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon136_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_947;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Tmp_947 == 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2637} sdv_796 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} sdv_796 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L85;

  anon137_Then:
    assume {:partition} sdv_796 == 0;
    goto L85;

  anon182_Then:
    assume {:partition} Tmp_947 != 192;
    goto L85;

  anon135_Then:
    assume {:partition} sdv_802 == 0;
    goto L82;

  anon181_Then:
    assume {:partition} Tmp_996 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2638} CyzIssueCmd(Extension_59, 16, 0, 0);
    goto L82;

  anon134_Then:
    goto L65;

  L65:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L100;

  L100:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_949;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} Tmp_949 == 192;
    call {:si_unique_call 2639} vslice_dummy_var_675 := CyzSetRTS(Extension_59);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_955 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_989;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L119;

  L119:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2640} sdv_803 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} sdv_803 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L123;

  L123:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2641} vslice_dummy_var_677 := CyzInsertQueueDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto L60;

  anon142_Then:
    assume {:partition} sdv_803 == 0;
    goto L123;

  anon141_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L119;

  anon166_Then:
    assume {:partition} Tmp_949 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_952 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_935;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L123;

  anon143_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L123;

  anon140_Then:
    goto L98;

  L98:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} tx_6 >= tx_7;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} tx_7 != 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} tx_7 == 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  L160:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_932;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Tmp_932 == 192;
    call {:si_unique_call 2642} vslice_dummy_var_676 := CyzSetRTS(Extension_59);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L171;

  L171:
    call {:si_unique_call 2643} Tmp_958, Tmp_966, tx_6, amount1 := CyzTxStart#0_loop_L171(Tmp_958, Tmp_966, Extension_59, tx_6, amount1);
    goto L171_last;

  L171_last:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} amount1 != 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_958 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_966;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    assume false;
    return;

  anon151_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L172;

  L172:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L182;

  L182:
    call {:si_unique_call 2644} numOfLongs, Tmp_939, Tmp_950, Tmp_961, tx_6, Tmp_983 := CyzTxStart#0_loop_L182(numOfLongs, Tmp_939, Tmp_950, Tmp_961, Extension_59, tx_6, Tmp_983);
    goto L182_last;

  L182_last:
    Tmp_950 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Tmp_950 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_983;
    assume {:nonnull} Tmp_983 != 0;
    assume Tmp_983 > 0;
    Tmp_961 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_939;
    tx_6 := tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    assume false;
    return;

  anon169_Then:
    assume {:partition} Tmp_950 == 0;
    goto L183;

  L183:
    call {:si_unique_call 2645} Tmp_934, Tmp_954, numOfBytes, tx_6, Tmp_984 := CyzTxStart#0_loop_L183(Tmp_934, Tmp_954, numOfBytes, Extension_59, tx_6, Tmp_984);
    goto L183_last;

  L183_last:
    Tmp_954 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} Tmp_954 != 0;
    Tmp_934 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_984;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    assume false;
    return;

  anon170_Then:
    assume {:partition} Tmp_954 == 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L198;

  L198:
    goto L167;

  L167:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L209;

  L209:
    call {:si_unique_call 2646} numOfLongs, Tmp_945, Tmp_969, Tmp_980, tx_6, Tmp_991 := CyzTxStart#0_loop_L209(numOfLongs, Tmp_945, Tmp_969, Extension_59, Tmp_980, tx_6, Tmp_991);
    goto L209_last;

  L209_last:
    Tmp_969 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Tmp_969 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_945;
    assume {:nonnull} Tmp_945 != 0;
    assume Tmp_945 > 0;
    Tmp_980 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_991;
    tx_6 := tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    assume false;
    return;

  anon171_Then:
    assume {:partition} Tmp_969 == 0;
    goto L210;

  L210:
    call {:si_unique_call 2647} Tmp_931, Tmp_951, Tmp_970, numOfBytes, tx_6 := CyzTxStart#0_loop_L210(Tmp_931, Tmp_951, Tmp_970, numOfBytes, Extension_59, tx_6);
    goto L210_last;

  L210_last:
    Tmp_931 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} Tmp_931 != 0;
    Tmp_970 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_951;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    assume false;
    return;

  anon172_Then:
    assume {:partition} Tmp_931 == 0;
    goto L202;

  L202:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2648} sdv_792 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} sdv_792 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L228;

  L228:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon154_Then:
    call {:si_unique_call 2649} CyzQueueCompleteWrite(Extension_59);
    goto L60;

  anon173_Then:
    goto L60;

  anon153_Then:
    assume {:partition} sdv_792 == 0;
    goto L228;

  anon149_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L202;

  anon152_Then:
    assume {:partition} tx_6 != tx_5;
    goto L198;

  anon150_Then:
    assume {:partition} amount1 == 0;
    goto L172;

  anon148_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L167;

  anon168_Then:
    assume {:partition} Tmp_932 != 192;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L242;

  L242:
    call {:si_unique_call 2650} Tmp_943, Tmp_978, tx_6, amount1 := CyzTxStart#0_loop_L242(Tmp_943, Extension_59, Tmp_978, tx_6, amount1);
    goto L242_last;

  L242_last:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} amount1 != 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_978 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_943;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    assume false;
    return;

  anon157_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L243;

  L243:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L253;

  L253:
    call {:si_unique_call 2651} Tmp_933, numOfLongs, Tmp_937, Tmp_948, tx_6, Tmp_995 := CyzTxStart#0_loop_L253(Tmp_933, numOfLongs, Tmp_937, Tmp_948, Extension_59, tx_6, Tmp_995);
    goto L253_last;

  L253_last:
    Tmp_937 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Tmp_937 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_948;
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    Tmp_933 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_995;
    tx_6 := tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    assume false;
    return;

  anon174_Then:
    assume {:partition} Tmp_937 == 0;
    goto L254;

  L254:
    call {:si_unique_call 2652} Tmp_953, Tmp_973, numOfBytes, Tmp_974, tx_6 := CyzTxStart#0_loop_L254(Tmp_953, Tmp_973, numOfBytes, Tmp_974, Extension_59, tx_6);
    goto L254_last;

  L254_last:
    Tmp_974 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Tmp_974 != 0;
    Tmp_953 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_973;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    assume false;
    return;

  anon175_Then:
    assume {:partition} Tmp_974 == 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L269;

  L269:
    goto L238;

  L238:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L277;

  L277:
    call {:si_unique_call 2653} numOfLongs, Tmp_944, Tmp_967, Tmp_972, tx_6, Tmp_981 := CyzTxStart#0_loop_L277(numOfLongs, Tmp_944, Tmp_967, Tmp_972, Extension_59, tx_6, Tmp_981);
    goto L277_last;

  L277_last:
    Tmp_981 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Tmp_981 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_967;
    assume {:nonnull} Tmp_967 != 0;
    assume Tmp_967 > 0;
    Tmp_944 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_972;
    tx_6 := tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    assume false;
    return;

  anon176_Then:
    assume {:partition} Tmp_981 == 0;
    goto L278;

  L278:
    call {:si_unique_call 2654} Tmp_963, Tmp_964, numOfBytes, tx_6, Tmp_986 := CyzTxStart#0_loop_L278(Tmp_963, Tmp_964, numOfBytes, Extension_59, tx_6, Tmp_986);
    goto L278_last;

  L278_last:
    Tmp_963 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Tmp_963 != 0;
    Tmp_986 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_964;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    assume false;
    return;

  anon177_Then:
    assume {:partition} Tmp_963 == 0;
    goto L228;

  anon155_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L228;

  anon158_Then:
    assume {:partition} tx_6 != tx_5;
    goto L269;

  anon156_Then:
    assume {:partition} amount1 == 0;
    goto L243;

  anon147_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L238;

  anon167_Then:
    goto L160;

  anon146_Then:
    assume {:partition} tx_7 != 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := tx_7 - 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    amountToWrite2 := 0;
    goto L160;

  anon178_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    amountToWrite2 := 0;
    goto L160;

  anon159_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite2;
    goto L160;

  anon160_Then:
    goto L160;

  anon145_Then:
    assume {:partition} tx_7 == 0;
    amountToWrite1 := tx_5 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L308;

  L308:
    goto L160;

  anon179_Then:
    goto L308;

  anon144_Then:
    assume {:partition} tx_7 > tx_6;
    amountToWrite1 := tx_7 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  anon180_Then:
    goto L160;

  anon138_Then:
    goto L60;

  anon139_Then:
    goto L100;

  anon133_Then:
    goto L98;

  anon130_Then:
    goto L65;

  anon129_Then:
    goto L38;

  anon128_Then:
    assume {:partition} tx_7 == 0;
    goto L30;

  anon127_Then:
    assume {:partition} tx_6 != tx_5 - 1;
    goto L31;

  anon125_Then:
    assume {:partition} tx_5 <= tx_7;
    goto L27;

  anon123_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L60;

  anon162_Then:
    goto L15;

  anon161_Then:
    goto L15;

  anon124_Then:
    goto L15;
}



procedure {:origName "CyzTxStart"} CyzTxStart#0(actual_Context_42: int) returns (Tmp_930: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_930 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTxStart"} CyzTxStart#1(actual_Context_42: int) returns (Tmp_930: int)
{
  var {:scalar} Tmp_931: int;
  var {:scalar} Tmp_932: int;
  var {:scalar} Tmp_933: int;
  var {:scalar} Tmp_934: int;
  var {:pointer} Tmp_935: int;
  var {:scalar} amountToWrite1: int;
  var {:scalar} numOfLongs: int;
  var {:scalar} Tmp_937: int;
  var {:pointer} Tmp_939: int;
  var {:scalar} sdv_792: int;
  var {:pointer} Tmp_943: int;
  var {:scalar} Tmp_944: int;
  var {:pointer} Tmp_945: int;
  var {:scalar} Tmp_947: int;
  var {:pointer} Tmp_948: int;
  var {:scalar} Tmp_949: int;
  var {:scalar} Tmp_950: int;
  var {:pointer} Tmp_951: int;
  var {:scalar} Tmp_952: int;
  var {:scalar} Tmp_953: int;
  var {:scalar} Tmp_954: int;
  var {:scalar} Tmp_955: int;
  var {:scalar} Tmp_958: int;
  var {:scalar} Tmp_961: int;
  var {:scalar} Tmp_963: int;
  var {:pointer} Tmp_964: int;
  var {:scalar} Tmp_965: int;
  var {:pointer} Tmp_966: int;
  var {:scalar} tx_5: int;
  var {:scalar} sdv_796: int;
  var {:pointer} Tmp_967: int;
  var {:scalar} Tmp_969: int;
  var {:scalar} Tmp_970: int;
  var {:pointer} Tmp_972: int;
  var {:pointer} Tmp_973: int;
  var {:scalar} numOfBytes: int;
  var {:scalar} Tmp_974: int;
  var {:pointer} Extension_59: int;
  var {:scalar} Tmp_978: int;
  var {:scalar} amountToWrite2: int;
  var {:scalar} sdv_800: int;
  var {:scalar} Tmp_980: int;
  var {:scalar} tx_6: int;
  var {:scalar} Tmp_981: int;
  var {:pointer} Tmp_983: int;
  var {:pointer} Tmp_984: int;
  var {:scalar} sdv_802: int;
  var {:scalar} tx_7: int;
  var {:scalar} Tmp_986: int;
  var {:pointer} Tmp_989: int;
  var {:pointer} Tmp_991: int;
  var {:scalar} sdv_803: int;
  var {:scalar} amount1: int;
  var {:pointer} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:pointer} Context_42: int;
  var vslice_dummy_var_678: int;
  var vslice_dummy_var_679: int;
  var vslice_dummy_var_680: int;
  var vslice_dummy_var_681: int;
  var vslice_dummy_var_682: int;
  var vslice_dummy_var_683: int;

  anon0:
    Context_42 := actual_Context_42;
    Extension_59 := Context_42;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    Tmp_930 := 0;
    goto L1;

  L1:
    return;

  anon163_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L15;

  L15:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2655} tx_6 := corral_nondet();
    call {:si_unique_call 2656} tx_7 := corral_nondet();
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc tx_5;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} tx_6 >= tx_5;
    goto L27;

  L27:
    Tmp_930 := 0;
    goto L1;

  anon164_Then:
    assume {:partition} tx_5 > tx_6;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} tx_7 < tx_5;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} tx_6 + 1 == tx_7;
    goto L30;

  L30:
    Tmp_930 := 0;
    goto L1;

  anon126_Then:
    assume {:partition} tx_6 + 1 != tx_7;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} tx_6 == tx_5 - 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} tx_7 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    call {:si_unique_call 2657} vslice_dummy_var_678 := CyzHandleModemUpdate#0(Extension_59, 1, 0);
    goto L34;

  L34:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_965;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Tmp_965 == 192;
    call {:si_unique_call 2658} vslice_dummy_var_679 := CyzSetRTS(Extension_59);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2659} CyzIssueCmd(Extension_59, 17, 0, 0);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2660} sdv_800 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_800 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  L60:
    Tmp_930 := 0;
    goto L1;

  anon132_Then:
    assume {:partition} sdv_800 == 0;
    goto L55;

  anon183_Then:
    assume {:partition} Tmp_965 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2661} CyzIssueCmd(Extension_59, 17, 0, 0);
    goto L55;

  anon131_Then:
    goto L38;

  L38:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_996;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Tmp_996 == 192;
    call {:si_unique_call 2662} vslice_dummy_var_680 := CyzSetRTS(Extension_59);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2663} CyzIssueCmd(Extension_59, 16, 0, 0);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2664} sdv_802 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_802 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L85;

  L85:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon136_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_947;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Tmp_947 == 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2665} sdv_796 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} sdv_796 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L85;

  anon137_Then:
    assume {:partition} sdv_796 == 0;
    goto L85;

  anon182_Then:
    assume {:partition} Tmp_947 != 192;
    goto L85;

  anon135_Then:
    assume {:partition} sdv_802 == 0;
    goto L82;

  anon181_Then:
    assume {:partition} Tmp_996 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2666} CyzIssueCmd(Extension_59, 16, 0, 0);
    goto L82;

  anon134_Then:
    goto L65;

  L65:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L100;

  L100:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_949;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} Tmp_949 == 192;
    call {:si_unique_call 2667} vslice_dummy_var_681 := CyzSetRTS(Extension_59);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_955 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_989;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L119;

  L119:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2668} sdv_803 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} sdv_803 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L123;

  L123:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2669} vslice_dummy_var_683 := CyzInsertQueueDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto L60;

  anon142_Then:
    assume {:partition} sdv_803 == 0;
    goto L123;

  anon141_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L119;

  anon166_Then:
    assume {:partition} Tmp_949 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_952 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_935;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L123;

  anon143_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L123;

  anon140_Then:
    goto L98;

  L98:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} tx_6 >= tx_7;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} tx_7 != 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} tx_7 == 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  L160:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_932;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Tmp_932 == 192;
    call {:si_unique_call 2670} vslice_dummy_var_682 := CyzSetRTS(Extension_59);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L171;

  L171:
    call {:si_unique_call 2671} Tmp_958, Tmp_966, tx_6, amount1 := CyzTxStart#1_loop_L171(Tmp_958, Tmp_966, Extension_59, tx_6, amount1);
    goto L171_last;

  L171_last:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} amount1 != 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_958 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_966;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    assume false;
    return;

  anon151_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L172;

  L172:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L182;

  L182:
    call {:si_unique_call 2672} numOfLongs, Tmp_939, Tmp_950, Tmp_961, tx_6, Tmp_983 := CyzTxStart#1_loop_L182(numOfLongs, Tmp_939, Tmp_950, Tmp_961, Extension_59, tx_6, Tmp_983);
    goto L182_last;

  L182_last:
    Tmp_950 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Tmp_950 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_983;
    assume {:nonnull} Tmp_983 != 0;
    assume Tmp_983 > 0;
    Tmp_961 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_939;
    tx_6 := tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    assume false;
    return;

  anon169_Then:
    assume {:partition} Tmp_950 == 0;
    goto L183;

  L183:
    call {:si_unique_call 2673} Tmp_934, Tmp_954, numOfBytes, tx_6, Tmp_984 := CyzTxStart#1_loop_L183(Tmp_934, Tmp_954, numOfBytes, Extension_59, tx_6, Tmp_984);
    goto L183_last;

  L183_last:
    Tmp_954 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} Tmp_954 != 0;
    Tmp_934 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_984;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    assume false;
    return;

  anon170_Then:
    assume {:partition} Tmp_954 == 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L198;

  L198:
    goto L167;

  L167:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L209;

  L209:
    call {:si_unique_call 2674} numOfLongs, Tmp_945, Tmp_969, Tmp_980, tx_6, Tmp_991 := CyzTxStart#1_loop_L209(numOfLongs, Tmp_945, Tmp_969, Extension_59, Tmp_980, tx_6, Tmp_991);
    goto L209_last;

  L209_last:
    Tmp_969 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Tmp_969 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_945;
    assume {:nonnull} Tmp_945 != 0;
    assume Tmp_945 > 0;
    Tmp_980 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_991;
    tx_6 := tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    assume false;
    return;

  anon171_Then:
    assume {:partition} Tmp_969 == 0;
    goto L210;

  L210:
    call {:si_unique_call 2675} Tmp_931, Tmp_951, Tmp_970, numOfBytes, tx_6 := CyzTxStart#1_loop_L210(Tmp_931, Tmp_951, Tmp_970, numOfBytes, Extension_59, tx_6);
    goto L210_last;

  L210_last:
    Tmp_931 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} Tmp_931 != 0;
    Tmp_970 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_951;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    assume false;
    return;

  anon172_Then:
    assume {:partition} Tmp_931 == 0;
    goto L202;

  L202:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2676} sdv_792 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} sdv_792 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L228;

  L228:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon154_Then:
    call {:si_unique_call 2677} CyzQueueCompleteWrite(Extension_59);
    goto L60;

  anon173_Then:
    goto L60;

  anon153_Then:
    assume {:partition} sdv_792 == 0;
    goto L228;

  anon149_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L202;

  anon152_Then:
    assume {:partition} tx_6 != tx_5;
    goto L198;

  anon150_Then:
    assume {:partition} amount1 == 0;
    goto L172;

  anon148_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L167;

  anon168_Then:
    assume {:partition} Tmp_932 != 192;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L242;

  L242:
    call {:si_unique_call 2678} Tmp_943, Tmp_978, tx_6, amount1 := CyzTxStart#1_loop_L242(Tmp_943, Extension_59, Tmp_978, tx_6, amount1);
    goto L242_last;

  L242_last:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} amount1 != 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_978 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_943;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    assume false;
    return;

  anon157_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L243;

  L243:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L253;

  L253:
    call {:si_unique_call 2679} Tmp_933, numOfLongs, Tmp_937, Tmp_948, tx_6, Tmp_995 := CyzTxStart#1_loop_L253(Tmp_933, numOfLongs, Tmp_937, Tmp_948, Extension_59, tx_6, Tmp_995);
    goto L253_last;

  L253_last:
    Tmp_937 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Tmp_937 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_948;
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    Tmp_933 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_995;
    tx_6 := tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    assume false;
    return;

  anon174_Then:
    assume {:partition} Tmp_937 == 0;
    goto L254;

  L254:
    call {:si_unique_call 2680} Tmp_953, Tmp_973, numOfBytes, Tmp_974, tx_6 := CyzTxStart#1_loop_L254(Tmp_953, Tmp_973, numOfBytes, Tmp_974, Extension_59, tx_6);
    goto L254_last;

  L254_last:
    Tmp_974 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Tmp_974 != 0;
    Tmp_953 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_973;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    assume false;
    return;

  anon175_Then:
    assume {:partition} Tmp_974 == 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L269;

  L269:
    goto L238;

  L238:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L277;

  L277:
    call {:si_unique_call 2681} numOfLongs, Tmp_944, Tmp_967, Tmp_972, tx_6, Tmp_981 := CyzTxStart#1_loop_L277(numOfLongs, Tmp_944, Tmp_967, Tmp_972, Extension_59, tx_6, Tmp_981);
    goto L277_last;

  L277_last:
    Tmp_981 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Tmp_981 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_967;
    assume {:nonnull} Tmp_967 != 0;
    assume Tmp_967 > 0;
    Tmp_944 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_972;
    tx_6 := tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    assume false;
    return;

  anon176_Then:
    assume {:partition} Tmp_981 == 0;
    goto L278;

  L278:
    call {:si_unique_call 2682} Tmp_963, Tmp_964, numOfBytes, tx_6, Tmp_986 := CyzTxStart#1_loop_L278(Tmp_963, Tmp_964, numOfBytes, Extension_59, tx_6, Tmp_986);
    goto L278_last;

  L278_last:
    Tmp_963 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Tmp_963 != 0;
    Tmp_986 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_964;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    assume false;
    return;

  anon177_Then:
    assume {:partition} Tmp_963 == 0;
    goto L228;

  anon155_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L228;

  anon158_Then:
    assume {:partition} tx_6 != tx_5;
    goto L269;

  anon156_Then:
    assume {:partition} amount1 == 0;
    goto L243;

  anon147_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L238;

  anon167_Then:
    goto L160;

  anon146_Then:
    assume {:partition} tx_7 != 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := tx_7 - 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    amountToWrite2 := 0;
    goto L160;

  anon178_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    amountToWrite2 := 0;
    goto L160;

  anon159_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite2;
    goto L160;

  anon160_Then:
    goto L160;

  anon145_Then:
    assume {:partition} tx_7 == 0;
    amountToWrite1 := tx_5 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L308;

  L308:
    goto L160;

  anon179_Then:
    goto L308;

  anon144_Then:
    assume {:partition} tx_7 > tx_6;
    amountToWrite1 := tx_7 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  anon180_Then:
    goto L160;

  anon138_Then:
    goto L60;

  anon139_Then:
    goto L100;

  anon133_Then:
    goto L98;

  anon130_Then:
    goto L65;

  anon129_Then:
    goto L38;

  anon165_Then:
    goto L34;

  anon128_Then:
    assume {:partition} tx_7 == 0;
    goto L30;

  anon127_Then:
    assume {:partition} tx_6 != tx_5 - 1;
    goto L31;

  anon125_Then:
    assume {:partition} tx_5 <= tx_7;
    goto L27;

  anon123_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L60;

  anon162_Then:
    goto L15;

  anon161_Then:
    goto L15;

  anon124_Then:
    goto L15;
}



procedure {:origName "CyzTxStart"} CyzTxStart#1(actual_Context_42: int) returns (Tmp_930: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_930 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#0(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_649: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_759: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} sdv_651: int;
  var {:pointer} oldIrp: int;
  var {:scalar} pollIrql_8: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Extension_38: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_684: int;
  var vslice_dummy_var_685: int;
  var vslice_dummy_var_686: int;
  var vslice_dummy_var_687: int;
  var vslice_dummy_var_688: int;
  var vslice_dummy_var_689: int;
  var vslice_dummy_var_690: int;
  var vslice_dummy_var_691: int;
  var vslice_dummy_var_692: int;
  var vslice_dummy_var_982: int;
  var vslice_dummy_var_983: int;

  anon0:
    call {:si_unique_call 2683} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2684} vslice_dummy_var_684 := __HAVOC_malloc(4);
    Extension_38 := actual_Extension_38;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter := actual_Starter;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2685} Tmp_758 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_982;
    call {:si_unique_call 2686} sdv_649 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_982);
    assume {:nonnull} sdv_649 != 0;
    assume sdv_649 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_649)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_13] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_13], BNOT(s_p_e_c_i_a_l_14));
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2687} Tmp_761 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    Mem_T.INT4[Tmp_761] := pollIrql_8;
    call {:si_unique_call 2688} sdv_KeAcquireSpinLock(0, Tmp_761);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    pollIrql_8 := Mem_T.INT4[Tmp_761];
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant316;
    call {:si_unique_call 2689} vslice_dummy_var_692 := CyzGrabImmediateFromIsr(Extension_38);
    goto L22;

  L22:
    call {:si_unique_call 2690} sdv_KeReleaseSpinLock(0, pollIrql_8);
    goto L12;

  L12:
    call {:si_unique_call 2691} CyzRundownIrpRefs(CurrentOpIrp_1, IntervalTimer, TotalTimer, Extension_38);
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_983;
    call {:si_unique_call 2692} sdv_651 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_983);
    assume {:nonnull} sdv_651 != 0;
    assume sdv_651 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    goto L35;

  L35:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    call {:si_unique_call 2693} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_758 := strConst__li2bpl3;
    call {:si_unique_call 2694} vslice_dummy_var_688 := CyzDbgPrintEx(9, Tmp_758);
    call {:si_unique_call 2695} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2696} CyzIRPEpilogue(Extension_38);
    goto L1;

  L1:
    return;

  anon27_Then:
    call {:si_unique_call 2697} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant314;
    call {:si_unique_call 2698} CyzGetNextImmediate(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  L44:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant381;
    call {:si_unique_call 2699} vslice_dummy_var_687 := CyzStartRead(Extension_38);
    goto L1;

  anon30_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 2700} vslice_dummy_var_686 := CyzStartWrite#0(Extension_38);
    goto L1;

  anon29_Then:
    goto L1;

  anon34_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2701} CyzGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon28_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant197;
    call {:si_unique_call 2702} CyzGetNextWrite(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon36_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L35;

  anon26_Then:
    call {:si_unique_call 2703} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon33_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant457;
    call {:si_unique_call 2704} vslice_dummy_var_691 := CyzGrabReadFromIsr(Extension_38);
    goto L22;

  anon32_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant179;
    call {:si_unique_call 2705} vslice_dummy_var_690 := CyzGrabWaitFromIsr(Extension_38);
    goto L22;

  anon31_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant202;
    call {:si_unique_call 2706} vslice_dummy_var_689 := CyzGrabWriteFromIsr(Extension_38);
    goto L22;

  anon25_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant195;
    call {:si_unique_call 2707} vslice_dummy_var_685 := CyzGrabXoffFromIsr(Extension_38);
    goto L22;

  anon35_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#0(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#1(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_649: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_759: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} sdv_651: int;
  var {:pointer} oldIrp: int;
  var {:scalar} pollIrql_8: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Extension_38: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_693: int;
  var vslice_dummy_var_694: int;
  var vslice_dummy_var_695: int;
  var vslice_dummy_var_696: int;
  var vslice_dummy_var_697: int;
  var vslice_dummy_var_698: int;
  var vslice_dummy_var_699: int;
  var vslice_dummy_var_700: int;
  var vslice_dummy_var_701: int;
  var vslice_dummy_var_984: int;
  var vslice_dummy_var_985: int;

  anon0:
    call {:si_unique_call 2708} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2709} vslice_dummy_var_693 := __HAVOC_malloc(4);
    Extension_38 := actual_Extension_38;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter := actual_Starter;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2710} Tmp_758 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_984;
    call {:si_unique_call 2711} sdv_649 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_984);
    assume {:nonnull} sdv_649 != 0;
    assume sdv_649 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_649)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_13] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_13], BNOT(s_p_e_c_i_a_l_14));
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2712} Tmp_761 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    Mem_T.INT4[Tmp_761] := pollIrql_8;
    call {:si_unique_call 2713} sdv_KeAcquireSpinLock(0, Tmp_761);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    pollIrql_8 := Mem_T.INT4[Tmp_761];
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant316;
    call {:si_unique_call 2714} vslice_dummy_var_701 := CyzGrabImmediateFromIsr(Extension_38);
    goto L22;

  L22:
    call {:si_unique_call 2715} sdv_KeReleaseSpinLock(0, pollIrql_8);
    goto L12;

  L12:
    call {:si_unique_call 2716} CyzRundownIrpRefs(CurrentOpIrp_1, IntervalTimer, TotalTimer, Extension_38);
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_985;
    call {:si_unique_call 2717} sdv_651 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_985);
    assume {:nonnull} sdv_651 != 0;
    assume sdv_651 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    goto L35;

  L35:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    call {:si_unique_call 2718} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_758 := strConst__li2bpl3;
    call {:si_unique_call 2719} vslice_dummy_var_697 := CyzDbgPrintEx(9, Tmp_758);
    call {:si_unique_call 2720} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2721} CyzIRPEpilogue(Extension_38);
    goto L1;

  L1:
    return;

  anon27_Then:
    call {:si_unique_call 2722} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant314;
    call {:si_unique_call 2723} CyzGetNextImmediate(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  L44:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant381;
    call {:si_unique_call 2724} vslice_dummy_var_696 := CyzStartRead(Extension_38);
    goto L1;

  anon30_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 2725} vslice_dummy_var_695 := CyzStartWrite#1(Extension_38);
    goto L1;

  anon29_Then:
    goto L1;

  anon34_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2726} CyzGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon28_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant197;
    call {:si_unique_call 2727} CyzGetNextWrite(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon36_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L35;

  anon26_Then:
    call {:si_unique_call 2728} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon33_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant457;
    call {:si_unique_call 2729} vslice_dummy_var_700 := CyzGrabReadFromIsr(Extension_38);
    goto L22;

  anon32_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant179;
    call {:si_unique_call 2730} vslice_dummy_var_699 := CyzGrabWaitFromIsr(Extension_38);
    goto L22;

  anon31_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant202;
    call {:si_unique_call 2731} vslice_dummy_var_698 := CyzGrabWriteFromIsr(Extension_38);
    goto L22;

  anon25_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant195;
    call {:si_unique_call 2732} vslice_dummy_var_694 := CyzGrabXoffFromIsr(Extension_38);
    goto L22;

  anon35_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#1(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartWrite"} CyzStartWrite#0(actual_Extension_41: int) returns (Tmp_809: int)
{
  var {:pointer} Tmp_810: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_811: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} sdv_704: int;
  var {:pointer} sdv_705: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_707: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} sdv_708: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:pointer} Tmp_814: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:pointer} Tmp_815: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} pollIrql_9: int;
  var {:scalar} Tmp_816: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} sdv_711: int;
  var {:pointer} Extension_41: int;
  var vslice_dummy_var_702: int;
  var vslice_dummy_var_703: int;
  var vslice_dummy_var_704: int;
  var vslice_dummy_var_705: int;
  var vslice_dummy_var_706: int;
  var vslice_dummy_var_986: int;
  var vslice_dummy_var_987: int;
  var vslice_dummy_var_988: int;
  var vslice_dummy_var_989: int;
  var vslice_dummy_var_990: int;
  var vslice_dummy_var_991: int;
  var vslice_dummy_var_992: int;

  anon0:
    call {:si_unique_call 2733} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2734} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2735} Timeouts_1 := __HAVOC_malloc(20);
    Extension_41 := actual_Extension_41;
    call {:si_unique_call 2736} Tmp_811 := __HAVOC_malloc(76);
    call {:si_unique_call 2737} Tmp_813 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_813 := strConst__li2bpl193;
    call {:si_unique_call 2738} vslice_dummy_var_705 := CyzDbgPrintEx(2, Tmp_813);
    goto L15;

  L15:
    call {:si_unique_call 2739} Tmp_810, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_705, OldIrql_8, sdv_708, Tmp_814, Tmp_816 := CyzStartWrite#0_loop_L15(Tmp_810, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_705, OldIrql_8, NewIrp_3, sdv_708, Tmp_814, Timeouts_1, Tmp_816, Extension_41);
    goto L15_last;

  L15_last:
    call {:si_unique_call 2764} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2765} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_986;
    call {:si_unique_call 2740} sdv_705 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_986);
    assume {:nonnull} sdv_705 != 0;
    assume sdv_705 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_987;
    call {:si_unique_call 2741} sdv_707 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_987);
    assume {:nonnull} sdv_707 != 0;
    assume sdv_707 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_707)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_21] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_21], s_p_e_c_i_a_l_23);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_815;
    assume {:nonnull} Tmp_815 != 0;
    assume Tmp_815 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume false;
    return;

  anon22_Then:
    call {:si_unique_call 2742} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;

  L41:
    UseATimer_1 := 0;
    call {:si_unique_call 2743} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2744} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2745} sdv_KeReleaseSpinLock(0, OldIrql_8);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_988;
    call {:si_unique_call 2746} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_988);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_989;
    call {:si_unique_call 2747} sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_989);
    assume {:nonnull} sdv_708 != 0;
    assume sdv_708 > 0;
    call {:si_unique_call 2748} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2749} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2750} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2751} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_41), NewIrp_3, 1, Extension_41);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L80;

  L80:
    Tmp_811 := strConst__li2bpl192;
    call {:si_unique_call 2752} vslice_dummy_var_706 := CyzDbgPrintEx(2, Tmp_811);
    Tmp_809 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L76;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L88;

  L88:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_990;
    call {:si_unique_call 2753} vslice_dummy_var_702 := sdv_IoSetCancelRoutine(vslice_dummy_var_990, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_991;
    call {:si_unique_call 2754} sdv_704 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_991);
    assume {:nonnull} sdv_704 != 0;
    assume sdv_704 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_704)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_24] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_24], s_p_e_c_i_a_l_25);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2755} vslice_dummy_var_703 := CyzSetTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_41), TotalTime_1, TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_41), Extension_41);
    s_p_e_c_i_a_l_26 := 4;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_992;
    call {:si_unique_call 2756} sdv_711 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_992);
    assume {:nonnull} sdv_711 != 0;
    assume sdv_711 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_711)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_22] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_22], s_p_e_c_i_a_l_26);
    goto L100;

  L100:
    call {:si_unique_call 2757} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := pollIrql_9;
    call {:si_unique_call 2758} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    pollIrql_9 := Mem_T.INT4[Tmp_810];
    call {:si_unique_call 2759} vslice_dummy_var_704 := CyzGiveWriteToIsr(Extension_41);
    call {:si_unique_call 2760} sdv_KeReleaseSpinLock(0, pollIrql_9);
    call {:si_unique_call 2761} IoReleaseCancelSpinLock(OldIrql_8);
    goto L80;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L100;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2762} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L88;

  anon27_Then:
    Tmp_816 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon21_Then:
    call {:si_unique_call 2763} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;
}



procedure {:origName "CyzStartWrite"} CyzStartWrite#0(actual_Extension_41: int) returns (Tmp_809: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartWrite"} CyzStartWrite#1(actual_Extension_41: int) returns (Tmp_809: int)
{
  var {:pointer} Tmp_810: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_811: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} sdv_704: int;
  var {:pointer} sdv_705: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_707: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} sdv_708: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:pointer} Tmp_814: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:pointer} Tmp_815: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} pollIrql_9: int;
  var {:scalar} Tmp_816: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} sdv_711: int;
  var {:pointer} Extension_41: int;
  var vslice_dummy_var_707: int;
  var vslice_dummy_var_708: int;
  var vslice_dummy_var_709: int;
  var vslice_dummy_var_710: int;
  var vslice_dummy_var_711: int;
  var vslice_dummy_var_993: int;
  var vslice_dummy_var_994: int;
  var vslice_dummy_var_995: int;
  var vslice_dummy_var_996: int;
  var vslice_dummy_var_997: int;
  var vslice_dummy_var_998: int;
  var vslice_dummy_var_999: int;

  anon0:
    call {:si_unique_call 2766} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2767} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2768} Timeouts_1 := __HAVOC_malloc(20);
    Extension_41 := actual_Extension_41;
    call {:si_unique_call 2769} Tmp_811 := __HAVOC_malloc(76);
    call {:si_unique_call 2770} Tmp_813 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_813 := strConst__li2bpl193;
    call {:si_unique_call 2771} vslice_dummy_var_710 := CyzDbgPrintEx(2, Tmp_813);
    goto L15;

  L15:
    call {:si_unique_call 2772} Tmp_810, s_p_e_c_i_a_l_21, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_705, OldIrql_8, s_p_e_c_i_a_l_23, sdv_707, sdv_708, Tmp_814, Tmp_815, Tmp_816 := CyzStartWrite#1_loop_L15(Tmp_810, s_p_e_c_i_a_l_21, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_705, OldIrql_8, NewIrp_3, s_p_e_c_i_a_l_23, sdv_707, sdv_708, Tmp_814, Tmp_815, Timeouts_1, Tmp_816, Extension_41);
    goto L15_last;

  L15_last:
    call {:si_unique_call 2798} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2799} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_993;
    call {:si_unique_call 2773} sdv_705 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_993);
    assume {:nonnull} sdv_705 != 0;
    assume sdv_705 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_994;
    call {:si_unique_call 2774} sdv_707 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_994);
    assume {:nonnull} sdv_707 != 0;
    assume sdv_707 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_707)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_21] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_21], s_p_e_c_i_a_l_23);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_815;
    assume {:nonnull} Tmp_815 != 0;
    assume Tmp_815 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2775} CyzTryToCompleteCurrent#0(Extension_41, li2bplFunctionConstant195, OldIrql_8, -1073741816, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_41), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_41), 0, 0, 16);
    goto L41;

  L41:
    UseATimer_1 := 0;
    call {:si_unique_call 2776} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2777} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2778} sdv_KeReleaseSpinLock(0, OldIrql_8);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_995;
    call {:si_unique_call 2779} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_995);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_996;
    call {:si_unique_call 2780} sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_996);
    assume {:nonnull} sdv_708 != 0;
    assume sdv_708 > 0;
    call {:si_unique_call 2781} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2782} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2783} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2784} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_41), NewIrp_3, 1, Extension_41);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L80;

  L80:
    Tmp_811 := strConst__li2bpl192;
    call {:si_unique_call 2785} vslice_dummy_var_711 := CyzDbgPrintEx(2, Tmp_811);
    Tmp_809 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L76;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L88;

  L88:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_997;
    call {:si_unique_call 2786} vslice_dummy_var_707 := sdv_IoSetCancelRoutine(vslice_dummy_var_997, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_998;
    call {:si_unique_call 2787} sdv_704 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_998);
    assume {:nonnull} sdv_704 != 0;
    assume sdv_704 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_704)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_24] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_24], s_p_e_c_i_a_l_25);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2788} vslice_dummy_var_708 := CyzSetTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_41), TotalTime_1, TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_41), Extension_41);
    s_p_e_c_i_a_l_26 := 4;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_999;
    call {:si_unique_call 2789} sdv_711 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_999);
    assume {:nonnull} sdv_711 != 0;
    assume sdv_711 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_711)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_22] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_22], s_p_e_c_i_a_l_26);
    goto L100;

  L100:
    call {:si_unique_call 2790} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := pollIrql_9;
    call {:si_unique_call 2791} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    pollIrql_9 := Mem_T.INT4[Tmp_810];
    call {:si_unique_call 2792} vslice_dummy_var_709 := CyzGiveWriteToIsr(Extension_41);
    call {:si_unique_call 2793} sdv_KeReleaseSpinLock(0, pollIrql_9);
    call {:si_unique_call 2794} IoReleaseCancelSpinLock(OldIrql_8);
    goto L80;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L100;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2795} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L88;

  anon27_Then:
    Tmp_816 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon22_Then:
    call {:si_unique_call 2796} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;

  anon21_Then:
    call {:si_unique_call 2797} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;
}



procedure {:origName "CyzStartWrite"} CyzStartWrite#1(actual_Extension_41: int) returns (Tmp_809: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2: int, in_nextQuery: int)
{

  entry:
    goto L35, exit;

  exit:
    return;

  L35:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    goto anon31_Then;

  anon31_Then:
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    call {:si_unique_call 2800} {:si_old_unique_call 1} CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4: int, in_nextQuery: int)
{

  entry:
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    goto anon33_Then;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    call {:si_unique_call 2801} {:si_old_unique_call 1} CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L81(in_interval100ms: int, in_Tmp_113: int, in_sdv_103: int, in_sdv_104: int, in_difference: int, in_s_p_e_c_i_a_l_4: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_113: int, out_sdv_103: int, out_sdv_104: int, out_s_p_e_c_i_a_l_4: int)
{

  entry:
    out_Tmp_113, out_sdv_103, out_sdv_104, out_s_p_e_c_i_a_l_4 := in_Tmp_113, in_sdv_103, in_sdv_104, in_s_p_e_c_i_a_l_4;
    goto L81, exit;

  exit:
    return;

  L81:
    call {:si_unique_call 2802} out_sdv_103 := corral_nondet();
    goto anon27_Else;

  anon27_Else:
    assume {:partition} BAND(out_sdv_103, 255) != 0;
    out_Tmp_113 := KeTickCount;
    assume {:nonnull} out_Tmp_113 != 0;
    assume out_Tmp_113 > 0;
    havoc out_s_p_e_c_i_a_l_4;
    goto L88;

  L88:
    call {:si_unique_call 2804} CyzIssueCmd_loop_L88(out_s_p_e_c_i_a_l_4, in_nextQuery);
    goto L88_last;

  L88_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2803} out_sdv_104 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_interval100ms != 0;
    assume in_interval100ms > 0;
    goto anon28_Then;

  anon28_Then:
    goto anon28_Then_dummy;

  anon28_Then_dummy:
    call {:si_unique_call 2805} {:si_old_unique_call 1} out_Tmp_113, out_sdv_103, out_sdv_104, out_s_p_e_c_i_a_l_4 := CyzIssueCmd_loop_L81(in_interval100ms, out_Tmp_113, out_sdv_103, out_sdv_104, in_difference, out_s_p_e_c_i_a_l_4, in_startOfSpin, in_nextQuery);
    return;

  anon33_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L81(in_interval100ms: int, in_Tmp_113: int, in_sdv_103: int, in_sdv_104: int, in_difference: int, in_s_p_e_c_i_a_l_4: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_113: int, out_sdv_103: int, out_sdv_104: int, out_s_p_e_c_i_a_l_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3: int, in_startOfSpin: int)
{

  entry:
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon32_Then;

  anon32_Then:
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    call {:si_unique_call 2806} {:si_old_unique_call 1} CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L27(in_interval100ms: int, in_sdv_101: int, in_Tmp_117: int, in_sdv_102: int, in_s_p_e_c_i_a_l_2: int, in_difference: int, in_startOfSpin: int, in_nextQuery: int) returns (out_sdv_101: int, out_Tmp_117: int, out_sdv_102: int, out_s_p_e_c_i_a_l_2: int)
{

  entry:
    out_sdv_101, out_Tmp_117, out_sdv_102, out_s_p_e_c_i_a_l_2 := in_sdv_101, in_Tmp_117, in_sdv_102, in_s_p_e_c_i_a_l_2;
    goto L27, exit;

  exit:
    return;

  L27:
    call {:si_unique_call 2807} out_sdv_101 := corral_nondet();
    goto anon23_Else;

  anon23_Else:
    assume {:partition} BAND(out_sdv_101, 255) != 0;
    out_Tmp_117 := KeTickCount;
    assume {:nonnull} out_Tmp_117 != 0;
    assume out_Tmp_117 > 0;
    havoc out_s_p_e_c_i_a_l_2;
    goto L35;

  L35:
    call {:si_unique_call 2809} CyzIssueCmd_loop_L35(out_s_p_e_c_i_a_l_2, in_nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2808} out_sdv_102 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_interval100ms != 0;
    assume in_interval100ms > 0;
    goto anon24_Then;

  anon24_Then:
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    call {:si_unique_call 2810} {:si_old_unique_call 1} out_sdv_101, out_Tmp_117, out_sdv_102, out_s_p_e_c_i_a_l_2 := CyzIssueCmd_loop_L27(in_interval100ms, out_sdv_101, out_Tmp_117, out_sdv_102, out_s_p_e_c_i_a_l_2, in_difference, in_startOfSpin, in_nextQuery);
    return;

  anon31_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L27(in_interval100ms: int, in_sdv_101: int, in_Tmp_117: int, in_sdv_102: int, in_s_p_e_c_i_a_l_2: int, in_difference: int, in_startOfSpin: int, in_nextQuery: int) returns (out_sdv_101: int, out_Tmp_117: int, out_sdv_102: int, out_s_p_e_c_i_a_l_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1: int, in_startOfSpin: int)
{

  entry:
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon30_Then;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2811} {:si_old_unique_call 1} CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzCleanLists_loop_L15(in_i: int, in_Tmp_150: int, in_pDevExt: int, in_Tmp_153: int, in_Tmp_154: int, in_pDispatch_1: int) returns (out_i: int, out_Tmp_150: int, out_Tmp_153: int, out_Tmp_154: int)
{

  entry:
    out_i, out_Tmp_150, out_Tmp_153, out_Tmp_154 := in_i, in_Tmp_150, in_Tmp_153, in_Tmp_154;
    goto L15, exit;

  exit:
    return;

  L15:
    assume {:nonnull} in_pDispatch_1 != 0;
    assume in_pDispatch_1 > 0;
    goto anon14_Else;

  anon14_Else:
    assume {:nonnull} in_pDevExt != 0;
    assume in_pDevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    out_Tmp_150 := out_i;
    assume {:nonnull} in_pDevExt != 0;
    assume in_pDevExt > 0;
    havoc out_Tmp_153;
    assume {:nonnull} out_Tmp_153 != 0;
    assume out_Tmp_153 > 0;
    havoc out_Tmp_154;
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    goto anon18_Else;

  anon18_Else:
    goto L18;

  L18:
    out_i := out_i + 1;
    goto L18_dummy;

  L18_dummy:
    havoc out_i;
    return;

  anon16_Then:
    goto L18;
}



procedure {:LoopProcedure} CyzCleanLists_loop_L15(in_i: int, in_Tmp_150: int, in_pDevExt: int, in_Tmp_153: int, in_Tmp_154: int, in_pDispatch_1: int) returns (out_i: int, out_Tmp_150: int, out_Tmp_153: int, out_Tmp_154: int);
  free ensures {:va_keep} out_Tmp_150 == in_i || out_Tmp_150 == in_Tmp_150;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzFindInitController_loop_L82(in_sdv_116: int, in_pCurDevObj: int, in_sdv_120: int, in_Tmp_182: int, in_pExtension: int, in_oldIrql: int, in_PConfig: int) returns (out_sdv_116: int, out_pCurDevObj: int, out_sdv_120: int, out_Tmp_182: int, out_pExtension: int, out_oldIrql: int)
{
  var vslice_dummy_var_1000: int;
  var vslice_dummy_var_1001: int;
  var vslice_dummy_var_1002: int;
  var vslice_dummy_var_1003: int;

  entry:
    out_sdv_116, out_pCurDevObj, out_sdv_120, out_Tmp_182, out_pExtension, out_oldIrql := in_sdv_116, in_pCurDevObj, in_sdv_120, in_Tmp_182, in_pExtension, in_oldIrql;
    goto L82, exit;

  exit:
    return;

  L82:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_1000;
    havoc vslice_dummy_var_1001;
    havoc vslice_dummy_var_1002;
    havoc vslice_dummy_var_1003;
    call {:si_unique_call 2816} out_sdv_116 := CyzMemCompare(vslice_dummy_var_1000, vslice_dummy_var_1001, vslice_dummy_var_1002, vslice_dummy_var_1003);
    goto anon40_Then;

  anon40_Then:
    assume {:partition} out_sdv_116 != 0;
    goto L83;

  L83:
    call {:si_unique_call 2814} out_Tmp_182 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_182 != 0;
    assume out_Tmp_182 > 0;
    Mem_T.INT4[out_Tmp_182] := out_oldIrql;
    call {:si_unique_call 2815} sdv_KeAcquireSpinLock(0, out_Tmp_182);
    assume {:nonnull} out_Tmp_182 != 0;
    assume out_Tmp_182 > 0;
    out_oldIrql := Mem_T.INT4[out_Tmp_182];
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 2813} out_sdv_120 := sdv_containing_record(out_pCurDevObj, 4);
    out_pExtension := out_sdv_120;
    goto L119;

  L119:
    call {:si_unique_call 2812} sdv_KeReleaseSpinLock(0, out_oldIrql);
    goto anon42_Else;

  anon42_Else:
    goto anon43_Else;

  anon43_Else:
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    call {:si_unique_call 2817} {:si_old_unique_call 1} out_sdv_116, out_pCurDevObj, out_sdv_120, out_Tmp_182, out_pExtension, out_oldIrql := CyzFindInitController_loop_L82(out_sdv_116, out_pCurDevObj, out_sdv_120, out_Tmp_182, out_pExtension, out_oldIrql, in_PConfig);
    return;

  anon45_Then:
    goto L119;

  anon39_Then:
    goto L83;

  anon38_Then:
    goto L83;

  anon37_Then:
    goto L83;
}



procedure {:LoopProcedure} CyzFindInitController_loop_L82(in_sdv_116: int, in_pCurDevObj: int, in_sdv_120: int, in_Tmp_182: int, in_pExtension: int, in_oldIrql: int, in_PConfig: int) returns (out_sdv_116: int, out_pCurDevObj: int, out_sdv_120: int, out_Tmp_182: int, out_pExtension: int, out_oldIrql: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_116 == 0 || out_sdv_116 == 2 || out_sdv_116 == 1 || out_sdv_116 == in_sdv_116;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTryToDisableTimer_loop_L14(in_channel: int, in_Tmp_359: int, in_Tmp_360: int, in_pDispatch_6: int) returns (out_channel: int, out_Tmp_359: int, out_Tmp_360: int)
{

  entry:
    out_channel, out_Tmp_359, out_Tmp_360 := in_channel, in_Tmp_359, in_Tmp_360;
    goto L14, exit;

  exit:
    return;

  L14:
    assume {:nonnull} in_pDispatch_6 != 0;
    assume in_pDispatch_6 > 0;
    goto anon9_Else;

  anon9_Else:
    out_Tmp_359 := out_channel;
    assume {:nonnull} in_pDispatch_6 != 0;
    assume in_pDispatch_6 > 0;
    havoc out_Tmp_360;
    assume {:nonnull} out_Tmp_360 != 0;
    assume out_Tmp_360 > 0;
    goto anon12_Else;

  anon12_Else:
    out_channel := out_channel + 1;
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    havoc out_channel;
    return;
}



procedure {:LoopProcedure} CyzTryToDisableTimer_loop_L14(in_channel: int, in_Tmp_359: int, in_Tmp_360: int, in_pDispatch_6: int) returns (out_channel: int, out_Tmp_359: int, out_Tmp_360: int);
  free ensures {:va_keep} out_Tmp_359 == in_channel || out_Tmp_359 == in_Tmp_359;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzClose_loop_L167(in_extension_5: int, in_vslice_dummy_var_198: int) returns (out_vslice_dummy_var_198: int)
{

  entry:
    out_vslice_dummy_var_198 := in_vslice_dummy_var_198;
    goto L167, exit;

  exit:
    return;

  L167:
    call {:si_unique_call 2818} out_vslice_dummy_var_198 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    goto anon37_Then;

  anon37_Then:
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 2819} {:si_old_unique_call 1} out_vslice_dummy_var_198 := CyzClose_loop_L167(in_extension_5, out_vslice_dummy_var_198);
    return;
}



procedure {:LoopProcedure} CyzClose_loop_L167(in_extension_5: int, in_vslice_dummy_var_198: int) returns (out_vslice_dummy_var_198: int);
  free ensures {:va_keep} out_vslice_dummy_var_198 == 0 || out_vslice_dummy_var_198 == -1073741823 || out_vslice_dummy_var_198 == in_vslice_dummy_var_198;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzClose_loop_L127(in_flushCount: int, in_S_9: int, in_txempty: int, in_pollIrql_5: int, in_Tmp_371: int, in_vslice_dummy_var_194: int, in_vslice_dummy_var_195: int) returns (out_flushCount: int, out_pollIrql_5: int, out_Tmp_371: int, out_vslice_dummy_var_194: int, out_vslice_dummy_var_195: int)
{

  entry:
    out_flushCount, out_pollIrql_5, out_Tmp_371, out_vslice_dummy_var_194, out_vslice_dummy_var_195 := in_flushCount, in_pollIrql_5, in_Tmp_371, in_vslice_dummy_var_194, in_vslice_dummy_var_195;
    goto L127, exit;

  exit:
    return;

  L127:
    goto anon33_Else;

  anon33_Else:
    assume {:partition} out_flushCount != 0;
    call {:si_unique_call 2821} out_Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_371 != 0;
    assume out_Tmp_371 > 0;
    Mem_T.INT4[out_Tmp_371] := out_pollIrql_5;
    call {:si_unique_call 2822} sdv_KeAcquireSpinLock(0, out_Tmp_371);
    assume {:nonnull} out_Tmp_371 != 0;
    assume out_Tmp_371 > 0;
    out_pollIrql_5 := Mem_T.INT4[out_Tmp_371];
    call {:si_unique_call 2823} out_vslice_dummy_var_194 := CyzCheckIfTxEmpty(in_S_9);
    call {:si_unique_call 2824} sdv_KeReleaseSpinLock(0, out_pollIrql_5);
    assume {:nonnull} in_txempty != 0;
    assume in_txempty > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.INT4[in_txempty] == 0;
    call {:si_unique_call 2820} out_vslice_dummy_var_195 := KeDelayExecutionThread(0, 0, 0);
    out_flushCount := out_flushCount - 1;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    havoc out_flushCount;
    return;
}



procedure {:LoopProcedure} CyzClose_loop_L127(in_flushCount: int, in_S_9: int, in_txempty: int, in_pollIrql_5: int, in_Tmp_371: int, in_vslice_dummy_var_194: int, in_vslice_dummy_var_195: int) returns (out_flushCount: int, out_pollIrql_5: int, out_Tmp_371: int, out_vslice_dummy_var_194: int, out_vslice_dummy_var_195: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_vslice_dummy_var_194 == 0 || out_vslice_dummy_var_194 == in_vslice_dummy_var_194;
  free ensures {:va_keep} out_vslice_dummy_var_195 == 0 || out_vslice_dummy_var_195 == -1073741823 || out_vslice_dummy_var_195 == in_vslice_dummy_var_195;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetPortInfo_loop_L53(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon46_Else;

  anon46_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L62;

  L62:
    out_i_1 := out_i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    call {:si_unique_call 2825} {:si_old_unique_call 1} out_i_1 := CyzGetPortInfo_loop_L53(out_i_1, in_count, in_pPartialResourceDesc, in_PConfig_1);
    return;

  anon47_Then:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon48_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;
}



procedure {:LoopProcedure} CyzGetPortInfo_loop_L53(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetPortInfo_loop_L73(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L73, exit;

  exit:
    return;

  L73:
    goto anon49_Else;

  anon49_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L81;

  L81:
    out_i_1 := out_i_1 + 1;
    goto L81_dummy;

  L81_dummy:
    call {:si_unique_call 2826} {:si_old_unique_call 1} out_i_1 := CyzGetPortInfo_loop_L73(out_i_1, in_count, in_pPartialTrResourceDesc, in_PConfig_1);
    return;

  anon50_Then:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L81;

  anon51_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L81;
}



procedure {:LoopProcedure} CyzGetPortInfo_loop_L73(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPnpDispatch_loop_L179(in_allocLen: int, in_sdv_465: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int)
{

  entry:
    out_allocLen, out_curStrLen := in_allocLen, in_curStrLen;
    goto L179, exit;

  exit:
    return;

  L179:
    out_curStrLen := in_sdv_465;
    goto anon180_Else;

  anon180_Else:
    assume {:partition} out_curStrLen != 0;
    out_allocLen := out_allocLen + out_curStrLen * 2 + 2;
    goto anon180_Else_dummy;

  anon180_Else_dummy:
    havoc out_allocLen;
    return;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L179(in_allocLen: int, in_sdv_465: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int);
  free ensures {:va_keep} out_curStrLen == in_sdv_465 || out_curStrLen == in_curStrLen;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_318: int, in_vslice_dummy_var_319: int, in_vslice_dummy_var_320: int, in_vslice_dummy_var_321: int) returns (out_gotMemory: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_318: int, out_vslice_dummy_var_319: int, out_vslice_dummy_var_320: int, out_vslice_dummy_var_321: int)
{

  entry:
    out_gotMemory, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321 := in_gotMemory, in_Tmp_481, in_Tmp_486, in_Tmp_488, in_pResDesc, in_Tmp_512, in_Tmp_515, in_j, in_Tmp_527, in_gotRuntime, in_vslice_dummy_var_318, in_vslice_dummy_var_319, in_vslice_dummy_var_320, in_vslice_dummy_var_321;
    goto L353, exit;

  exit:
    return;

  L353:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon135_Else;

  anon135_Else:
    out_Tmp_486 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_527;
    out_pResDesc := out_Tmp_527 + out_Tmp_486 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto L370;

  L370:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon138_Else;

  anon138_Else:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 2831} {:si_old_unique_call 1} out_gotMemory, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321 := CyzPnpDispatch_loop_L353(out_gotMemory, in_pResList, out_Tmp_481, out_Tmp_486, out_Tmp_488, in_pLowerDevObj_2, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321);
    return;

  anon137_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon170_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_512 := strConst__li2bpl144;
    call {:si_unique_call 2827} out_vslice_dummy_var_320 := CyzDbgPrintEx(12, out_Tmp_512);
    goto L370;

  anon136_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_515 := strConst__li2bpl145;
    call {:si_unique_call 2828} out_vslice_dummy_var_321 := CyzDbgPrintEx(12, out_Tmp_515);
    goto L370;

  anon171_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_481 := strConst__li2bpl143;
    call {:si_unique_call 2829} out_vslice_dummy_var_319 := CyzDbgPrintEx(12, out_Tmp_481);
    goto L370;

  anon178_Then:
    out_Tmp_488 := strConst__li2bpl124;
    call {:si_unique_call 2830} out_vslice_dummy_var_318 := CyzDbgPrintEx(12, out_Tmp_488);
    goto L370;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_318: int, in_vslice_dummy_var_319: int, in_vslice_dummy_var_320: int, in_vslice_dummy_var_321: int) returns (out_gotMemory: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_318: int, out_vslice_dummy_var_319: int, out_vslice_dummy_var_320: int, out_vslice_dummy_var_321: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_318 == 0 || out_vslice_dummy_var_318 == in_vslice_dummy_var_318;
  free ensures {:va_keep} out_vslice_dummy_var_319 == 0 || out_vslice_dummy_var_319 == in_vslice_dummy_var_319;
  free ensures {:va_keep} out_vslice_dummy_var_320 == 0 || out_vslice_dummy_var_320 == in_vslice_dummy_var_320;
  free ensures {:va_keep} out_vslice_dummy_var_321 == 0 || out_vslice_dummy_var_321 == in_vslice_dummy_var_321;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_Tmp_479: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_317: int, in_vslice_dummy_var_318: int, in_vslice_dummy_var_319: int, in_vslice_dummy_var_320: int, in_vslice_dummy_var_321: int) returns (out_gotMemory: int, out_Tmp_479: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_listNum: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_317: int, out_vslice_dummy_var_318: int, out_vslice_dummy_var_319: int, out_vslice_dummy_var_320: int, out_vslice_dummy_var_321: int)
{

  entry:
    out_gotMemory, out_Tmp_479, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_listNum, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_317, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321 := in_gotMemory, in_Tmp_479, in_Tmp_481, in_Tmp_486, in_Tmp_488, in_pResDesc, in_listNum, in_Tmp_512, in_Tmp_515, in_j, in_Tmp_527, in_gotRuntime, in_vslice_dummy_var_317, in_vslice_dummy_var_318, in_vslice_dummy_var_319, in_vslice_dummy_var_320, in_vslice_dummy_var_321;
    goto L344, exit;

  exit:
    return;

  L344:
    assume {:nonnull} in_pReqList != 0;
    assume in_pReqList > 0;
    goto anon134_Else;

  anon134_Else:
    out_gotRuntime := 0;
    out_gotMemory := 0;
    out_Tmp_479 := strConst__li2bpl142;
    call {:si_unique_call 2833} out_vslice_dummy_var_317 := CyzDbgPrintEx(12, out_Tmp_479);
    out_j := 0;
    goto L353;

  L353:
    call {:si_unique_call 2832} out_gotMemory, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321 := CyzPnpDispatch_loop_L353(out_gotMemory, in_pResList, out_Tmp_481, out_Tmp_486, out_Tmp_488, in_pLowerDevObj_2, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321);
    goto L353_last;

  L353_last:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    out_Tmp_486 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_527;
    out_pResDesc := out_Tmp_527 + out_Tmp_486 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto L370;

  L370:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    assume false;
    return;

  anon138_Then:
    assume {:partition} out_gotMemory != 0;
    goto L354;

  L354:
    out_listNum := out_listNum + 1;
    goto L354_dummy;

  L354_dummy:
    call {:si_unique_call 2838} {:si_old_unique_call 1} out_gotMemory, out_Tmp_479, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_listNum, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_317, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321 := CyzPnpDispatch_loop_L344(out_gotMemory, in_pResList, out_Tmp_479, out_Tmp_481, out_Tmp_486, out_Tmp_488, in_pLowerDevObj_2, out_pResDesc, out_listNum, in_pReqList, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_317, out_vslice_dummy_var_318, out_vslice_dummy_var_319, out_vslice_dummy_var_320, out_vslice_dummy_var_321);
    return;

  anon137_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon170_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_512 := strConst__li2bpl144;
    call {:si_unique_call 2834} out_vslice_dummy_var_320 := CyzDbgPrintEx(12, out_Tmp_512);
    goto L370;

  anon136_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_515 := strConst__li2bpl145;
    call {:si_unique_call 2835} out_vslice_dummy_var_321 := CyzDbgPrintEx(12, out_Tmp_515);
    goto L370;

  anon171_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_481 := strConst__li2bpl143;
    call {:si_unique_call 2836} out_vslice_dummy_var_319 := CyzDbgPrintEx(12, out_Tmp_481);
    goto L370;

  anon178_Then:
    out_Tmp_488 := strConst__li2bpl124;
    call {:si_unique_call 2837} out_vslice_dummy_var_318 := CyzDbgPrintEx(12, out_Tmp_488);
    goto L370;

  anon135_Then:
    goto L354;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_Tmp_479: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_317: int, in_vslice_dummy_var_318: int, in_vslice_dummy_var_319: int, in_vslice_dummy_var_320: int, in_vslice_dummy_var_321: int) returns (out_gotMemory: int, out_Tmp_479: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_listNum: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_317: int, out_vslice_dummy_var_318: int, out_vslice_dummy_var_319: int, out_vslice_dummy_var_320: int, out_vslice_dummy_var_321: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == 0 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == 0 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_317 == 0 || out_vslice_dummy_var_317 == in_vslice_dummy_var_317;
  free ensures {:va_keep} out_vslice_dummy_var_318 == 0 || out_vslice_dummy_var_318 == in_vslice_dummy_var_318;
  free ensures {:va_keep} out_vslice_dummy_var_319 == 0 || out_vslice_dummy_var_319 == in_vslice_dummy_var_319;
  free ensures {:va_keep} out_vslice_dummy_var_320 == 0 || out_vslice_dummy_var_320 == in_vslice_dummy_var_320;
  free ensures {:va_keep} out_vslice_dummy_var_321 == 0 || out_vslice_dummy_var_321 == in_vslice_dummy_var_321;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 5} CyzPnpDispatch_loop_L462(in_Tmp_468: int, in_pDevExt_12: int, in_cap: int, in_Tmp_504: int, in_Tmp_505: int, in_pDevCaps: int, in_Tmp_543: int) returns (out_Tmp_468: int, out_cap: int, out_Tmp_504: int, out_Tmp_505: int, out_Tmp_543: int)
{

  entry:
    out_Tmp_468, out_cap, out_Tmp_504, out_Tmp_505, out_Tmp_543 := in_Tmp_468, in_cap, in_Tmp_504, in_Tmp_505, in_Tmp_543;
    goto L462, exit;

  exit:
    return;

  L462:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon140_Else;

  anon140_Else:
    assume {:partition} 7 > out_cap;
    out_Tmp_543 := out_cap;
    assume {:nonnull} in_pDevExt_12 != 0;
    assume in_pDevExt_12 > 0;
    havoc out_Tmp_505;
    out_Tmp_468 := out_cap;
    assume {:nonnull} in_pDevCaps != 0;
    assume in_pDevCaps > 0;
    havoc out_Tmp_504;
    assume {:nonnull} out_Tmp_504 != 0;
    assume out_Tmp_504 > 0;
    assume {:nonnull} out_Tmp_505 != 0;
    assume out_Tmp_505 > 0;
    Mem_T.INT4[out_Tmp_505 + out_Tmp_543 * 4] := Mem_T.INT4[out_Tmp_504 + out_Tmp_468 * 4];
    out_cap := out_cap + 1;
    goto anon140_Else_dummy;

  anon140_Else_dummy:
    call {:si_unique_call 2839} {:si_old_unique_call 1} out_Tmp_468, out_cap, out_Tmp_504, out_Tmp_505, out_Tmp_543 := CyzPnpDispatch_loop_L462(out_Tmp_468, in_pDevExt_12, out_cap, out_Tmp_504, out_Tmp_505, in_pDevCaps, out_Tmp_543);
    return;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L462(in_Tmp_468: int, in_pDevExt_12: int, in_cap: int, in_Tmp_504: int, in_Tmp_505: int, in_pDevCaps: int, in_Tmp_543: int) returns (out_Tmp_468: int, out_cap: int, out_Tmp_504: int, out_Tmp_505: int, out_Tmp_543: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartPurge_loop_L5(in_Tmp_718: int, in_Tmp_719: int, in_Mask_2: int, in_Tmp_720: int, in_OldIrql_5: int, in_NewIrp_2: int, in_Tmp_721: int, in_pollIrql_7: int, in_Tmp_722: int, in_Extension_36: int, in_vslice_dummy_var_431: int) returns (out_Tmp_718: int, out_Tmp_719: int, out_Mask_2: int, out_Tmp_720: int, out_OldIrql_5: int, out_Tmp_721: int, out_pollIrql_7: int, out_Tmp_722: int, out_vslice_dummy_var_431: int)
{
  var vslice_dummy_var_1004: int;
  var vslice_dummy_var_1005: int;
  var vslice_dummy_var_1006: int;

  entry:
    out_Tmp_718, out_Tmp_719, out_Mask_2, out_Tmp_720, out_OldIrql_5, out_Tmp_721, out_pollIrql_7, out_Tmp_722, out_vslice_dummy_var_431 := in_Tmp_718, in_Tmp_719, in_Mask_2, in_Tmp_720, in_OldIrql_5, in_Tmp_721, in_pollIrql_7, in_Tmp_722, in_vslice_dummy_var_431;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_722;
    assume {:nonnull} out_Tmp_722 != 0;
    assume out_Tmp_722 > 0;
    havoc out_Tmp_721;
    assume {:nonnull} out_Tmp_721 != 0;
    assume out_Tmp_721 > 0;
    out_Mask_2 := Mem_T.INT4[out_Tmp_721];
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(out_Mask_2, 1) != 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_1005;
    call {:si_unique_call 2849} CyzKillAllReadsOrWrites(vslice_dummy_var_1005, WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_1006;
    call {:si_unique_call 2850} CyzKillAllReadsOrWrites(vslice_dummy_var_1006, WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentXoffIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(out_Mask_2, 2) != 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_1004;
    call {:si_unique_call 2848} CyzKillAllReadsOrWrites(vslice_dummy_var_1004, ReadQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentReadIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(out_Mask_2, 8) != 0;
    call {:si_unique_call 2841} out_Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    Mem_T.INT4[out_Tmp_720] := out_OldIrql_5;
    call {:si_unique_call 2842} sdv_KeAcquireSpinLock(0, out_Tmp_720);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    out_OldIrql_5 := Mem_T.INT4[out_Tmp_720];
    call {:si_unique_call 2843} out_Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    Mem_T.INT4[out_Tmp_720] := out_pollIrql_7;
    call {:si_unique_call 2844} sdv_KeAcquireSpinLock(0, out_Tmp_720);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    out_pollIrql_7 := Mem_T.INT4[out_Tmp_720];
    call {:si_unique_call 2845} out_vslice_dummy_var_431 := CyzPurgeInterruptBuff(in_Extension_36);
    call {:si_unique_call 2846} sdv_KeReleaseSpinLock(0, out_pollIrql_7);
    call {:si_unique_call 2847} sdv_KeReleaseSpinLock(0, out_OldIrql_5);
    goto L18;

  L18:
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_719;
    assume {:nonnull} out_Tmp_719 != 0;
    assume out_Tmp_719 > 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_718;
    assume {:nonnull} out_Tmp_718 != 0;
    assume out_Tmp_718 > 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    call {:si_unique_call 2840} CyzGetNextIrp(CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(in_Extension_36), PurgeQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), in_NewIrp_2, 1, in_Extension_36);
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    goto anon11_Then;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    call {:si_unique_call 2851} {:si_old_unique_call 1} out_Tmp_718, out_Tmp_719, out_Mask_2, out_Tmp_720, out_OldIrql_5, out_Tmp_721, out_pollIrql_7, out_Tmp_722, out_vslice_dummy_var_431 := CyzStartPurge_loop_L5(out_Tmp_718, out_Tmp_719, out_Mask_2, out_Tmp_720, out_OldIrql_5, in_NewIrp_2, out_Tmp_721, out_pollIrql_7, out_Tmp_722, in_Extension_36, out_vslice_dummy_var_431);
    return;

  anon10_Then:
    assume {:partition} BAND(out_Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(out_Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(out_Mask_2, 1) == 0;
    goto L7;
}



procedure {:LoopProcedure} CyzStartPurge_loop_L5(in_Tmp_718: int, in_Tmp_719: int, in_Mask_2: int, in_Tmp_720: int, in_OldIrql_5: int, in_NewIrp_2: int, in_Tmp_721: int, in_pollIrql_7: int, in_Tmp_722: int, in_Extension_36: int, in_vslice_dummy_var_431: int) returns (out_Tmp_718: int, out_Tmp_719: int, out_Mask_2: int, out_Tmp_720: int, out_OldIrql_5: int, out_Tmp_721: int, out_pollIrql_7: int, out_Tmp_722: int, out_vslice_dummy_var_431: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} out_vslice_dummy_var_431 == 0 || out_vslice_dummy_var_431 == in_vslice_dummy_var_431;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPurgeInterruptBuff_loop_L20(in_rx_2: int, in_Tmp_726: int, in_rx_3: int, in_rxchar: int, in_Extension_37: int, in_Tmp_729: int) returns (out_rx_2: int, out_Tmp_726: int, out_rxchar: int, out_Tmp_729: int)
{

  entry:
    out_rx_2, out_Tmp_726, out_rxchar, out_Tmp_729 := in_rx_2, in_Tmp_726, in_rxchar, in_Tmp_729;
    goto L20, exit;

  exit:
    return;

  L20:
    goto anon14_Else;

  anon14_Else:
    assume {:partition} out_rx_2 != in_rx_3;
    out_Tmp_729 := out_rx_2;
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    havoc out_Tmp_726;
    call {:si_unique_call 2852} out_rxchar := corral_nondet();
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    out_rx_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon17_Else_dummy;

  anon17_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 2853} {:si_old_unique_call 1} out_rx_2, out_Tmp_726, out_rxchar, out_Tmp_729 := CyzPurgeInterruptBuff_loop_L20(out_rx_2, out_Tmp_726, in_rx_3, out_rxchar, in_Extension_37, out_Tmp_729);
    return;

  anon17_Then:
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    goto L_BAF_0;

  anon16_Then:
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    goto L_BAF_0;

  anon15_Then:
    out_rx_2 := out_rx_2 + 1;
    goto L32;
}



procedure {:LoopProcedure} CyzPurgeInterruptBuff_loop_L20(in_rx_2: int, in_Tmp_726: int, in_rx_3: int, in_rxchar: int, in_Extension_37: int, in_Tmp_729: int) returns (out_rx_2: int, out_Tmp_726: int, out_rxchar: int, out_Tmp_729: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzUnstallIrps_loop_L16(in_Tmp_745: int, in_Tmp_746: int, in_sdv_638: int, in_Tmp_747: int, in_oldIrql_6: int, in_pIrpStack_4: int, in_Tmp_749: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_437: int, in_vslice_dummy_var_438: int, in_vslice_dummy_var_439: int) returns (out_Tmp_745: int, out_Tmp_746: int, out_sdv_638: int, out_Tmp_747: int, out_oldIrql_6: int, out_pIrpStack_4: int, out_Tmp_749: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_437: int, out_vslice_dummy_var_438: int, out_vslice_dummy_var_439: int)
{

  entry:
    out_Tmp_745, out_Tmp_746, out_sdv_638, out_Tmp_747, out_oldIrql_6, out_pIrpStack_4, out_Tmp_749, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_437, out_vslice_dummy_var_438, out_vslice_dummy_var_439 := in_Tmp_745, in_Tmp_746, in_sdv_638, in_Tmp_747, in_oldIrql_6, in_pIrpStack_4, in_Tmp_749, in_pIrp_1, in_pDevObj_2, in_pDrvObj_1, in_pIrpLink, in_vslice_dummy_var_437, in_vslice_dummy_var_438, in_vslice_dummy_var_439;
    goto L16, exit;

  exit:
    return;

  L16:
    goto anon59_Else;

  anon59_Else:
    call {:si_unique_call 2856} out_sdv_638 := sdv_containing_record(out_pIrpLink, 88);
    out_pIrp_1 := out_sdv_638;
    call {:si_unique_call 2857} out_vslice_dummy_var_437 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2858} out_pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(out_pIrp_1);
    assume {:nonnull} out_pIrpStack_4 != 0;
    assume out_pIrpStack_4 > 0;
    havoc out_pDevObj_2;
    assume {:nonnull} out_pDevObj_2 != 0;
    assume out_pDevObj_2 > 0;
    havoc out_pDrvObj_1;
    call {:si_unique_call 2859} out_vslice_dummy_var_438 := sdv_IoSetCancelRoutine(out_pIrp_1, 0);
    call {:si_unique_call 2860} IoReleaseCancelSpinLock(out_oldIrql_6);
    out_Tmp_745 := strConst__li2bpl188;
    call {:si_unique_call 2861} out_vslice_dummy_var_439 := CyzDbgPrintEx(12, out_Tmp_745);
    assume {:nonnull} out_pIrpStack_4 != 0;
    assume out_pIrpStack_4 > 0;
    havoc out_Tmp_749;
    assume {:nonnull} out_pDrvObj_1 != 0;
    assume out_pDrvObj_1 > 0;
    havoc out_Tmp_747;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume out_Tmp_749 != 27;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume out_Tmp_749 != 26;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume out_Tmp_749 != 25;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume out_Tmp_749 != 24;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume out_Tmp_749 != 23;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume out_Tmp_749 != 22;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume out_Tmp_749 != 21;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume out_Tmp_749 != 20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume out_Tmp_749 != 19;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume out_Tmp_749 != 18;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume out_Tmp_749 != 17;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume out_Tmp_749 != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume out_Tmp_749 != 15;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume out_Tmp_749 != 14;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume out_Tmp_749 != 13;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume out_Tmp_749 != 12;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume out_Tmp_749 != 11;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume out_Tmp_749 != 10;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume out_Tmp_749 != 9;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume out_Tmp_749 != 8;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume out_Tmp_749 != 7;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume out_Tmp_749 != 6;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume out_Tmp_749 != 5;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume out_Tmp_749 != 4;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume out_Tmp_749 != 3;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume out_Tmp_749 != 2;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume out_Tmp_749 != 1;
    goto anon87_Then;

  anon87_Then:
    assume out_Tmp_749 == 0;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747] == 0;
    goto L45;

  L45:
    call {:si_unique_call 2854} out_Tmp_746 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_746 != 0;
    assume out_Tmp_746 > 0;
    Mem_T.INT4[out_Tmp_746] := out_oldIrql_6;
    call {:si_unique_call 2855} IoAcquireCancelSpinLock(out_Tmp_746);
    assume {:nonnull} out_Tmp_746 != 0;
    assume out_Tmp_746 > 0;
    out_oldIrql_6 := Mem_T.INT4[out_Tmp_746];
    assume {:nonnull} in_PDevExt_8 != 0;
    assume in_PDevExt_8 > 0;
    havoc out_pIrpLink;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 2862} {:si_old_unique_call 1} out_Tmp_745, out_Tmp_746, out_sdv_638, out_Tmp_747, out_oldIrql_6, out_pIrpStack_4, out_Tmp_749, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_437, out_vslice_dummy_var_438, out_vslice_dummy_var_439 := CyzUnstallIrps_loop_L16(out_Tmp_745, out_Tmp_746, out_sdv_638, out_Tmp_747, out_oldIrql_6, out_pIrpStack_4, out_Tmp_749, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, in_PDevExt_8, out_vslice_dummy_var_437, out_vslice_dummy_var_438, out_vslice_dummy_var_439);
    return;

  anon86_Then:
    assume out_Tmp_749 == 1;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 1 * 4] == 0;
    goto L45;

  anon85_Then:
    assume out_Tmp_749 == 2;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 2 * 4] == 0;
    goto L45;

  anon84_Then:
    assume out_Tmp_749 == 3;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 3 * 4] == 0;
    goto L45;

  anon83_Then:
    assume out_Tmp_749 == 4;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 4 * 4] == 0;
    goto L45;

  anon82_Then:
    assume out_Tmp_749 == 5;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 5 * 4] == 0;
    goto L45;

  anon81_Then:
    assume out_Tmp_749 == 6;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 6 * 4] == 0;
    goto L45;

  anon80_Then:
    assume out_Tmp_749 == 7;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 7 * 4] == 0;
    goto L45;

  anon79_Then:
    assume out_Tmp_749 == 8;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 8 * 4] == 0;
    goto L45;

  anon78_Then:
    assume out_Tmp_749 == 9;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 9 * 4] == 0;
    goto L45;

  anon77_Then:
    assume out_Tmp_749 == 10;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 10 * 4] == 0;
    goto L45;

  anon76_Then:
    assume out_Tmp_749 == 11;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 11 * 4] == 0;
    goto L45;

  anon75_Then:
    assume out_Tmp_749 == 12;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 12 * 4] == 0;
    goto L45;

  anon74_Then:
    assume out_Tmp_749 == 13;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 13 * 4] == 0;
    goto L45;

  anon73_Then:
    assume out_Tmp_749 == 14;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 14 * 4] == 0;
    goto L45;

  anon72_Then:
    assume out_Tmp_749 == 15;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 15 * 4] == 0;
    goto L45;

  anon71_Then:
    assume out_Tmp_749 == 16;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 16 * 4] == 0;
    goto L45;

  anon70_Then:
    assume out_Tmp_749 == 17;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 17 * 4] == 0;
    goto L45;

  anon69_Then:
    assume out_Tmp_749 == 18;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 18 * 4] == 0;
    goto L45;

  anon68_Then:
    assume out_Tmp_749 == 19;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 19 * 4] == 0;
    goto L45;

  anon67_Then:
    assume out_Tmp_749 == 20;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 20 * 4] == 0;
    goto L45;

  anon66_Then:
    assume out_Tmp_749 == 21;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 21 * 4] == 0;
    goto L45;

  anon65_Then:
    assume out_Tmp_749 == 22;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 22 * 4] == 0;
    goto L45;

  anon64_Then:
    assume out_Tmp_749 == 23;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 23 * 4] == 0;
    goto L45;

  anon63_Then:
    assume out_Tmp_749 == 24;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 24 * 4] == 0;
    goto L45;

  anon62_Then:
    assume out_Tmp_749 == 25;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 25 * 4] == 0;
    goto L45;

  anon61_Then:
    assume out_Tmp_749 == 26;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 26 * 4] == 0;
    goto L45;

  anon60_Then:
    assume out_Tmp_749 == 27;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 27 * 4] == 0;
    goto L45;
}



procedure {:LoopProcedure} CyzUnstallIrps_loop_L16(in_Tmp_745: int, in_Tmp_746: int, in_sdv_638: int, in_Tmp_747: int, in_oldIrql_6: int, in_pIrpStack_4: int, in_Tmp_749: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_437: int, in_vslice_dummy_var_438: int, in_vslice_dummy_var_439: int) returns (out_Tmp_745: int, out_Tmp_746: int, out_sdv_638: int, out_Tmp_747: int, out_oldIrql_6: int, out_pIrpStack_4: int, out_Tmp_749: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_437: int, out_vslice_dummy_var_438: int, out_vslice_dummy_var_439: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_vslice_dummy_var_437 == 1 || out_vslice_dummy_var_437 == 0 || out_vslice_dummy_var_437 == in_vslice_dummy_var_437;
  free ensures {:va_keep} out_vslice_dummy_var_439 == 0 || out_vslice_dummy_var_439 == in_vslice_dummy_var_439;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzKillAllReadsOrWrites_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_667: int, in_sdv_668: int, in_cancelRoutine_1: int, in_Tmp_776: int, in_DeviceObject_12: int, in_QueueToClean: int, in_vslice_dummy_var_456: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_667: int, out_sdv_668: int, out_cancelRoutine_1: int, out_Tmp_776: int, out_vslice_dummy_var_456: int)
{
  var vslice_dummy_var_1007: int;

  entry:
    out_currentLastIrp, out_cancelIrql, out_sdv_667, out_sdv_668, out_cancelRoutine_1, out_Tmp_776, out_vslice_dummy_var_456 := in_currentLastIrp, in_cancelIrql, in_sdv_667, in_sdv_668, in_cancelRoutine_1, in_Tmp_776, in_vslice_dummy_var_456;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 2863} out_sdv_667 := sdv_IsListEmpty(0);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_sdv_667 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_1007;
    call {:si_unique_call 2873} out_sdv_668 := sdv_containing_record(vslice_dummy_var_1007, 88);
    out_currentLastIrp := out_sdv_668;
    call {:si_unique_call 2874} out_vslice_dummy_var_456 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    out_cancelRoutine_1 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp)];
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp)] := out_cancelIrql;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp)] := 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 2866} CyzCancelCurrentRead(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  L42:
    call {:si_unique_call 2864} out_Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    Mem_T.INT4[out_Tmp_776] := out_cancelIrql;
    call {:si_unique_call 2865} IoAcquireCancelSpinLock(out_Tmp_776);
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    out_cancelIrql := Mem_T.INT4[out_Tmp_776];
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 2875} {:si_old_unique_call 1} out_currentLastIrp, out_cancelIrql, out_sdv_667, out_sdv_668, out_cancelRoutine_1, out_Tmp_776, out_vslice_dummy_var_456 := CyzKillAllReadsOrWrites_loop_L8(out_currentLastIrp, out_cancelIrql, out_sdv_667, out_sdv_668, out_cancelRoutine_1, out_Tmp_776, in_DeviceObject_12, in_QueueToClean, out_vslice_dummy_var_456);
    return;

  anon42_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 2867} CyzCancelCurrentWrite(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon41_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 2868} CyzCancelCurrentXoff(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon40_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 2869} CyzCancelImmediate(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon39_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 2870} CyzCancelQueued(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon38_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 2871} CyzCancelWait(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon45_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 2872} CyzFilterCancelQueued(in_DeviceObject_12, out_currentLastIrp);
    goto L42;
}



procedure {:LoopProcedure} CyzKillAllReadsOrWrites_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_667: int, in_sdv_668: int, in_cancelRoutine_1: int, in_Tmp_776: int, in_DeviceObject_12: int, in_QueueToClean: int, in_vslice_dummy_var_456: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_667: int, out_sdv_668: int, out_cancelRoutine_1: int, out_Tmp_776: int, out_vslice_dummy_var_456: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} out_sdv_667 == 1 || out_sdv_667 == 0 || out_sdv_667 == in_sdv_667;
  free ensures {:va_keep} out_vslice_dummy_var_456 == 1 || out_vslice_dummy_var_456 == 0 || out_vslice_dummy_var_456 == in_vslice_dummy_var_456;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzKillAllStalled_loop_L10(in_currentLastIrp_1: int, in_Tmp_796: int, in_cancelIrql_1: int, in_pDevExt_15: int, in_sdv_688: int, in_sdv_689: int, in_cancelRoutine_2: int, in_PDevObj_15: int, in_vslice_dummy_var_468: int) returns (out_currentLastIrp_1: int, out_Tmp_796: int, out_cancelIrql_1: int, out_sdv_688: int, out_sdv_689: int, out_cancelRoutine_2: int, out_vslice_dummy_var_468: int)
{
  var vslice_dummy_var_1008: int;

  entry:
    out_currentLastIrp_1, out_Tmp_796, out_cancelIrql_1, out_sdv_688, out_sdv_689, out_cancelRoutine_2, out_vslice_dummy_var_468 := in_currentLastIrp_1, in_Tmp_796, in_cancelIrql_1, in_sdv_688, in_sdv_689, in_cancelRoutine_2, in_vslice_dummy_var_468;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 2876} out_sdv_688 := sdv_IsListEmpty(0);
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_sdv_688 == 0;
    assume {:nonnull} in_pDevExt_15 != 0;
    assume in_pDevExt_15 > 0;
    havoc vslice_dummy_var_1008;
    call {:si_unique_call 2886} out_sdv_689 := sdv_containing_record(vslice_dummy_var_1008, 88);
    out_currentLastIrp_1 := out_sdv_689;
    call {:si_unique_call 2887} out_vslice_dummy_var_468 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    out_cancelRoutine_2 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp_1)];
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp_1)] := out_cancelIrql_1;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp_1)] := 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant456;
    call {:si_unique_call 2879} CyzCancelCurrentRead(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  L32:
    call {:si_unique_call 2877} out_Tmp_796 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_796 != 0;
    assume out_Tmp_796 > 0;
    Mem_T.INT4[out_Tmp_796] := out_cancelIrql_1;
    call {:si_unique_call 2878} IoAcquireCancelSpinLock(out_Tmp_796);
    assume {:nonnull} out_Tmp_796 != 0;
    assume out_Tmp_796 > 0;
    out_cancelIrql_1 := Mem_T.INT4[out_Tmp_796];
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 2888} {:si_old_unique_call 1} out_currentLastIrp_1, out_Tmp_796, out_cancelIrql_1, out_sdv_688, out_sdv_689, out_cancelRoutine_2, out_vslice_dummy_var_468 := CyzKillAllStalled_loop_L10(out_currentLastIrp_1, out_Tmp_796, out_cancelIrql_1, in_pDevExt_15, out_sdv_688, out_sdv_689, out_cancelRoutine_2, in_PDevObj_15, out_vslice_dummy_var_468);
    return;

  anon20_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 2880} CyzCancelCurrentWrite(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon19_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant198;
    call {:si_unique_call 2881} CyzCancelCurrentXoff(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon18_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant312;
    call {:si_unique_call 2882} CyzCancelImmediate(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon17_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 2883} CyzCancelQueued(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon16_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant178;
    call {:si_unique_call 2884} CyzCancelWait(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon21_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 2885} CyzFilterCancelQueued(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;
}



procedure {:LoopProcedure} CyzKillAllStalled_loop_L10(in_currentLastIrp_1: int, in_Tmp_796: int, in_cancelIrql_1: int, in_pDevExt_15: int, in_sdv_688: int, in_sdv_689: int, in_cancelRoutine_2: int, in_PDevObj_15: int, in_vslice_dummy_var_468: int) returns (out_currentLastIrp_1: int, out_Tmp_796: int, out_cancelIrql_1: int, out_sdv_688: int, out_sdv_689: int, out_cancelRoutine_2: int, out_vslice_dummy_var_468: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} out_sdv_688 == 1 || out_sdv_688 == 0 || out_sdv_688 == in_sdv_688;
  free ensures {:va_keep} out_vslice_dummy_var_468 == 1 || out_vslice_dummy_var_468 == 0 || out_vslice_dummy_var_468 == in_vslice_dummy_var_468;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_728: int, in_Irp_14: int, in_pollIrql_10: int, in_OldIrql_12: int, in_sdv_731: int, in_OldIrql_13: int, in_sdv_733: int, in_Tmp_852: int, in_s_p_e_c_i_a_l_36: int, in_sdv_735: int, in_sdv_736: int, in_sdv_737: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_853: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_51: int, in_vslice_dummy_var_493: int, in_vslice_dummy_var_494: int, in_vslice_dummy_var_497: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_728: int, out_Irp_14: int, out_pollIrql_10: int, out_OldIrql_12: int, out_sdv_731: int, out_OldIrql_13: int, out_sdv_733: int, out_Tmp_852: int, out_s_p_e_c_i_a_l_36: int, out_sdv_735: int, out_sdv_736: int, out_sdv_737: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_853: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_493: int, out_vslice_dummy_var_494: int, out_vslice_dummy_var_497: int)
{
  var vslice_dummy_var_1009: int;
  var vslice_dummy_var_1010: int;
  var vslice_dummy_var_1011: int;
  var vslice_dummy_var_1012: int;

  entry:
    out_s_p_e_c_i_a_l_35, out_sdv_728, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_731, out_OldIrql_13, out_sdv_733, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_735, out_sdv_736, out_sdv_737, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, out_CompleteCurrent_3, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_497 := in_s_p_e_c_i_a_l_35, in_sdv_728, in_Irp_14, in_pollIrql_10, in_OldIrql_12, in_sdv_731, in_OldIrql_13, in_sdv_733, in_Tmp_852, in_s_p_e_c_i_a_l_36, in_sdv_735, in_sdv_736, in_sdv_737, in_s_p_e_c_i_a_l_37, in_Xc_2, in_s_p_e_c_i_a_l_38, in_Tmp_853, in_CompleteCurrent_3, in_vslice_dummy_var_493, in_vslice_dummy_var_494, in_vslice_dummy_var_497;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1009;
    call {:si_unique_call 2889} out_sdv_733 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1009);
    assume {:nonnull} out_sdv_733 != 0;
    assume out_sdv_733 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2892} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_OldIrql_13;
    call {:si_unique_call 2893} IoAcquireCancelSpinLock(out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_OldIrql_13 := Mem_T.INT4[out_Tmp_853];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1011;
    call {:si_unique_call 2894} out_sdv_737 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1011);
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    assume {:nonnull} out_sdv_737 != 0;
    assume out_sdv_737 > 0;
    call {:si_unique_call 2895} IoReleaseCancelSpinLock(out_OldIrql_13);
    goto L24;

  L24:
    call {:si_unique_call 2891} CyzGetNextIrp(in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_51);
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon16_Then;

  anon16_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc vslice_dummy_var_1010;
    call {:si_unique_call 2890} out_sdv_736 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1010);
    assume {:nonnull} out_sdv_736 != 0;
    assume out_sdv_736 > 0;
    goto anon17_Then;

  anon17_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc out_Tmp_852;
    assume {:nonnull} out_Tmp_852 != 0;
    assume out_Tmp_852 > 0;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2908} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_35, out_sdv_728, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_731, out_OldIrql_13, out_sdv_733, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_735, out_sdv_736, out_sdv_737, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, out_CompleteCurrent_3, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_497 := CyzGetNextWrite_loop_L6(out_s_p_e_c_i_a_l_35, out_sdv_728, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_731, out_OldIrql_13, out_sdv_733, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_735, out_sdv_736, out_sdv_737, out_s_p_e_c_i_a_l_37, in_delta, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_51, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_497);
    return;

  anon15_Then:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1012;
    call {:si_unique_call 2897} out_sdv_735 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1012);
    assume {:nonnull} out_sdv_735 != 0;
    assume out_sdv_735 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 2906} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_OldIrql_12;
    call {:si_unique_call 2907} IoAcquireCancelSpinLock(out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_OldIrql_12 := Mem_T.INT4[out_Tmp_853];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc out_Irp_14;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    havoc out_Xc_2;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L69;

  L69:
    call {:si_unique_call 2896} IoReleaseCancelSpinLock(out_OldIrql_12);
    goto L24;

  anon21_Then:
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto L69;

  anon19_Then:
    call {:si_unique_call 2900} out_vslice_dummy_var_493 := sdv_IoSetCancelRoutine(out_Irp_14, li2bplFunctionConstant198);
    out_s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 2901} out_sdv_731 := sdv_IoGetCurrentIrpStackLocation(out_Irp_14);
    assume {:nonnull} out_sdv_731 != 0;
    assume out_sdv_731 > 0;
    out_s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_731)));
    assume {:nonnull} out_s_p_e_c_i_a_l_35 != 0;
    assume out_s_p_e_c_i_a_l_35 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_35] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_35], out_s_p_e_c_i_a_l_36);
    out_CompleteCurrent_3 := 0;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    call {:si_unique_call 2902} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_pollIrql_10;
    call {:si_unique_call 2903} sdv_KeAcquireSpinLock(0, out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_pollIrql_10 := Mem_T.INT4[out_Tmp_853];
    call {:si_unique_call 2904} out_vslice_dummy_var_494 := CyzGiveXoffToIsr(in_Extension_51);
    call {:si_unique_call 2905} sdv_KeReleaseSpinLock(0, out_pollIrql_10);
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    call {:si_unique_call 2898} out_vslice_dummy_var_497 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_51), in_delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(in_Extension_51), in_Extension_51);
    out_s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 2899} out_sdv_728 := sdv_IoGetCurrentIrpStackLocation(out_Irp_14);
    assume {:nonnull} out_sdv_728 != 0;
    assume out_sdv_728 > 0;
    out_s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_728)));
    assume {:nonnull} out_s_p_e_c_i_a_l_37 != 0;
    assume out_s_p_e_c_i_a_l_37 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_37] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_37], out_s_p_e_c_i_a_l_38);
    goto L69;

  anon20_Then:
    goto L69;

  anon18_Then:
    goto L24;
}



procedure {:LoopProcedure} CyzGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_728: int, in_Irp_14: int, in_pollIrql_10: int, in_OldIrql_12: int, in_sdv_731: int, in_OldIrql_13: int, in_sdv_733: int, in_Tmp_852: int, in_s_p_e_c_i_a_l_36: int, in_sdv_735: int, in_sdv_736: int, in_sdv_737: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_853: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_51: int, in_vslice_dummy_var_493: int, in_vslice_dummy_var_494: int, in_vslice_dummy_var_497: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_728: int, out_Irp_14: int, out_pollIrql_10: int, out_OldIrql_12: int, out_sdv_731: int, out_OldIrql_13: int, out_sdv_733: int, out_Tmp_852: int, out_s_p_e_c_i_a_l_36: int, out_sdv_735: int, out_sdv_736: int, out_sdv_737: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_853: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_493: int, out_vslice_dummy_var_494: int, out_vslice_dummy_var_497: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_s_p_e_c_i_a_l_36 == 2 || out_s_p_e_c_i_a_l_36 == in_s_p_e_c_i_a_l_36;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_38 == 4 || out_s_p_e_c_i_a_l_38 == in_s_p_e_c_i_a_l_38;
  free ensures {:va_keep} out_CompleteCurrent_3 == 0 || out_CompleteCurrent_3 == in_CompleteCurrent_3;
  free ensures {:va_keep} out_vslice_dummy_var_494 == 0 || out_vslice_dummy_var_494 == in_vslice_dummy_var_494;
  free ensures {:va_keep} out_vslice_dummy_var_497 == 1 || out_vslice_dummy_var_497 == 0 || out_vslice_dummy_var_497 == in_vslice_dummy_var_497;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartMask_loop_L12(in_s_p_e_c_i_a_l_43: int, in_FirstStatus_1: int, in_Tmp_898: int, in_SetFirstStatus_1: int, in_Tmp_899: int, in_Tmp_900: int, in_Tmp_901: int, in_Tmp_902: int, in_Tmp_903: int, in_Tmp_904: int, in_Tmp_905: int, in_IrpSp_3: int, in_OldIrql_14: int, in_Tmp_906: int, in_NewIrp_5: int, in_s_p_e_c_i_a_l_44: int, in_Tmp_907: int, in_sdv_780: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_910: int, in_Tmp_911: int, in_Tmp_912: int, in_Tmp_913: int, in_sdv_783: int, in_Tmp_914: int, in_pollIrql_12: int, in_Tmp_915: int, in_Extension_56: int, in_vslice_dummy_var_517: int, in_vslice_dummy_var_518: int, in_vslice_dummy_var_520: int, in_vslice_dummy_var_521: int, in_vslice_dummy_var_522: int, in_vslice_dummy_var_523: int, in_vslice_dummy_var_524: int, in_vslice_dummy_var_525: int, in_vslice_dummy_var_526: int, in_vslice_dummy_var_527: int, in_vslice_dummy_var_528: int, in_vslice_dummy_var_529: int, in_vslice_dummy_var_530: int, in_vslice_dummy_var_531: int, in_vslice_dummy_var_532: int, in_vslice_dummy_var_533: int) returns (out_s_p_e_c_i_a_l_43: int, out_FirstStatus_1: int, out_Tmp_898: int, out_SetFirstStatus_1: int, out_Tmp_899: int, out_Tmp_900: int, out_Tmp_901: int, out_Tmp_902: int, out_Tmp_903: int, out_Tmp_904: int, out_Tmp_905: int, out_IrpSp_3: int, out_OldIrql_14: int, out_Tmp_906: int, out_s_p_e_c_i_a_l_44: int, out_Tmp_907: int, out_sdv_780: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_910: int, out_Tmp_911: int, out_Tmp_912: int, out_Tmp_913: int, out_sdv_783: int, out_Tmp_914: int, out_pollIrql_12: int, out_Tmp_915: int, out_vslice_dummy_var_517: int, out_vslice_dummy_var_518: int, out_vslice_dummy_var_520: int, out_vslice_dummy_var_521: int, out_vslice_dummy_var_522: int, out_vslice_dummy_var_523: int, out_vslice_dummy_var_524: int, out_vslice_dummy_var_525: int, out_vslice_dummy_var_526: int, out_vslice_dummy_var_527: int, out_vslice_dummy_var_528: int, out_vslice_dummy_var_529: int, out_vslice_dummy_var_530: int, out_vslice_dummy_var_531: int, out_vslice_dummy_var_532: int, out_vslice_dummy_var_533: int)
{
  var vslice_dummy_var_1013: int;
  var vslice_dummy_var_1014: int;
  var vslice_dummy_var_1015: int;
  var vslice_dummy_var_1016: int;

  entry:
    out_s_p_e_c_i_a_l_43, out_FirstStatus_1, out_Tmp_898, out_SetFirstStatus_1, out_Tmp_899, out_Tmp_900, out_Tmp_901, out_Tmp_902, out_Tmp_903, out_Tmp_904, out_Tmp_905, out_IrpSp_3, out_OldIrql_14, out_Tmp_906, out_s_p_e_c_i_a_l_44, out_Tmp_907, out_sdv_780, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_912, out_Tmp_913, out_sdv_783, out_Tmp_914, out_pollIrql_12, out_Tmp_915, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_520, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_523, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526, out_vslice_dummy_var_527, out_vslice_dummy_var_528, out_vslice_dummy_var_529, out_vslice_dummy_var_530, out_vslice_dummy_var_531, out_vslice_dummy_var_532, out_vslice_dummy_var_533 := in_s_p_e_c_i_a_l_43, in_FirstStatus_1, in_Tmp_898, in_SetFirstStatus_1, in_Tmp_899, in_Tmp_900, in_Tmp_901, in_Tmp_902, in_Tmp_903, in_Tmp_904, in_Tmp_905, in_IrpSp_3, in_OldIrql_14, in_Tmp_906, in_s_p_e_c_i_a_l_44, in_Tmp_907, in_sdv_780, in_Tmp_908, in_Tmp_909, in_Tmp_910, in_Tmp_911, in_Tmp_912, in_Tmp_913, in_sdv_783, in_Tmp_914, in_pollIrql_12, in_Tmp_915, in_vslice_dummy_var_517, in_vslice_dummy_var_518, in_vslice_dummy_var_520, in_vslice_dummy_var_521, in_vslice_dummy_var_522, in_vslice_dummy_var_523, in_vslice_dummy_var_524, in_vslice_dummy_var_525, in_vslice_dummy_var_526, in_vslice_dummy_var_527, in_vslice_dummy_var_528, in_vslice_dummy_var_529, in_vslice_dummy_var_530, in_vslice_dummy_var_531, in_vslice_dummy_var_532, in_vslice_dummy_var_533;
    goto L12, exit;

  exit:
    return;

  L12:
    out_Tmp_911 := strConst__li2bpl213;
    call {:si_unique_call 2909} out_vslice_dummy_var_520 := CyzDbgPrintEx(7, out_Tmp_911);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_1013;
    call {:si_unique_call 2910} out_IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1013);
    assume {:nonnull} out_IrpSp_3 != 0;
    assume out_IrpSp_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    out_Tmp_900 := strConst__li2bpl214;
    call {:si_unique_call 2937} out_vslice_dummy_var_521 := CyzDbgPrintEx(7, out_Tmp_900);
    call {:si_unique_call 2938} out_Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    Mem_T.INT4[out_Tmp_906] := out_pollIrql_12;
    call {:si_unique_call 2939} sdv_KeAcquireSpinLock(0, out_Tmp_906);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    out_pollIrql_12 := Mem_T.INT4[out_Tmp_906];
    call {:si_unique_call 2940} out_vslice_dummy_var_517 := CyzFinishOldWait(in_Extension_56);
    call {:si_unique_call 2941} sdv_KeReleaseSpinLock(0, out_pollIrql_12);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_907;
    assume {:nonnull} out_Tmp_907 != 0;
    assume out_Tmp_907 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L38;

  L38:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 2911} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 1, in_Extension_56);
    out_Tmp_912 := strConst__li2bpl216;
    call {:si_unique_call 2912} out_vslice_dummy_var_522 := CyzDbgPrintEx(7, out_Tmp_912);
    goto L44;

  L44:
    assume {:nonnull} in_NewIrp_5 != 0;
    assume in_NewIrp_5 > 0;
    goto anon21_Then;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 2942} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_43, out_FirstStatus_1, out_Tmp_898, out_SetFirstStatus_1, out_Tmp_899, out_Tmp_900, out_Tmp_901, out_Tmp_902, out_Tmp_903, out_Tmp_904, out_Tmp_905, out_IrpSp_3, out_OldIrql_14, out_Tmp_906, out_s_p_e_c_i_a_l_44, out_Tmp_907, out_sdv_780, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_912, out_Tmp_913, out_sdv_783, out_Tmp_914, out_pollIrql_12, out_Tmp_915, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_520, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_523, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526, out_vslice_dummy_var_527, out_vslice_dummy_var_528, out_vslice_dummy_var_529, out_vslice_dummy_var_530, out_vslice_dummy_var_531, out_vslice_dummy_var_532, out_vslice_dummy_var_533 := CyzStartMask_loop_L12(out_s_p_e_c_i_a_l_43, out_FirstStatus_1, out_Tmp_898, out_SetFirstStatus_1, out_Tmp_899, out_Tmp_900, out_Tmp_901, out_Tmp_902, out_Tmp_903, out_Tmp_904, out_Tmp_905, out_IrpSp_3, out_OldIrql_14, out_Tmp_906, in_NewIrp_5, out_s_p_e_c_i_a_l_44, out_Tmp_907, out_sdv_780, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_912, out_Tmp_913, out_sdv_783, out_Tmp_914, out_pollIrql_12, out_Tmp_915, in_Extension_56, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_520, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_523, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526, out_vslice_dummy_var_527, out_vslice_dummy_var_528, out_vslice_dummy_var_529, out_vslice_dummy_var_530, out_vslice_dummy_var_531, out_vslice_dummy_var_532, out_vslice_dummy_var_533);
    return;

  anon24_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_898 := strConst__li2bpl215;
    call {:si_unique_call 2936} out_vslice_dummy_var_523 := CyzDbgPrintEx(7, out_Tmp_898);
    out_FirstStatus_1 := 0;
    out_SetFirstStatus_1 := 1;
    goto L38;

  anon19_Then:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2931} out_Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    Mem_T.INT4[out_Tmp_906] := out_OldIrql_14;
    call {:si_unique_call 2932} IoAcquireCancelSpinLock(out_Tmp_906);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_906];
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_905;
    assume {:nonnull} out_Tmp_905 != 0;
    assume out_Tmp_905 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    out_Tmp_904 := strConst__li2bpl219;
    call {:si_unique_call 2934} out_vslice_dummy_var_527 := CyzDbgPrintEx(7, out_Tmp_904);
    call {:si_unique_call 2935} IoReleaseCancelSpinLock(out_OldIrql_14);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_914;
    assume {:nonnull} out_Tmp_914 != 0;
    assume out_Tmp_914 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L71;

  L71:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 2913} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 1, in_Extension_56);
    out_Tmp_913 := strConst__li2bpl216;
    call {:si_unique_call 2914} out_vslice_dummy_var_528 := CyzDbgPrintEx(7, out_Tmp_913);
    goto L44;

  anon27_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_902 := strConst__li2bpl215;
    call {:si_unique_call 2933} out_vslice_dummy_var_529 := CyzDbgPrintEx(7, out_Tmp_902);
    out_FirstStatus_1 := -1073741536;
    out_SetFirstStatus_1 := 1;
    goto L71;

  anon26_Then:
    out_Tmp_910 := strConst__li2bpl218;
    call {:si_unique_call 2930} out_vslice_dummy_var_530 := CyzDbgPrintEx(7, out_Tmp_910);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L83;

  L83:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_1014;
    call {:si_unique_call 2915} out_sdv_780 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1014);
    assume {:nonnull} out_sdv_780 != 0;
    assume out_sdv_780 > 0;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_1015;
    call {:si_unique_call 2916} out_vslice_dummy_var_531 := sdv_IoSetCancelRoutine(vslice_dummy_var_1015, li2bplFunctionConstant178);
    out_s_p_e_c_i_a_l_44 := 2;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_1016;
    call {:si_unique_call 2917} out_sdv_783 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1016);
    assume {:nonnull} out_sdv_783 != 0;
    assume out_sdv_783 > 0;
    out_s_p_e_c_i_a_l_43 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_783)));
    assume {:nonnull} out_s_p_e_c_i_a_l_43 != 0;
    assume out_s_p_e_c_i_a_l_43 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_43] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_43], out_s_p_e_c_i_a_l_44);
    call {:si_unique_call 2918} out_Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    Mem_T.INT4[out_Tmp_906] := out_pollIrql_12;
    call {:si_unique_call 2919} sdv_KeAcquireSpinLock(0, out_Tmp_906);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    out_pollIrql_12 := Mem_T.INT4[out_Tmp_906];
    call {:si_unique_call 2920} out_vslice_dummy_var_518 := CyzGiveWaitToIsr(in_Extension_56);
    call {:si_unique_call 2921} sdv_KeReleaseSpinLock(0, out_pollIrql_12);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 2922} CyzGetNextIrpLocked(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 0, in_Extension_56, out_OldIrql_14);
    out_Tmp_903 := strConst__li2bpl216;
    call {:si_unique_call 2923} out_vslice_dummy_var_532 := CyzDbgPrintEx(7, out_Tmp_903);
    goto L44;

  anon23_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_908 := strConst__li2bpl215;
    call {:si_unique_call 2928} out_vslice_dummy_var_533 := CyzDbgPrintEx(7, out_Tmp_908);
    out_FirstStatus_1 := 259;
    out_SetFirstStatus_1 := 1;
    call {:si_unique_call 2929} sdv_IoMarkIrpPending(0);
    goto L83;

  anon22_Then:
    goto L48;

  L48:
    out_Tmp_909 := strConst__li2bpl217;
    call {:si_unique_call 2927} out_vslice_dummy_var_524 := CyzDbgPrintEx(7, out_Tmp_909);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_899;
    assume {:nonnull} out_Tmp_899 != 0;
    assume out_Tmp_899 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L125;

  L125:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 2924} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 1, in_Extension_56);
    out_Tmp_915 := strConst__li2bpl216;
    call {:si_unique_call 2925} out_vslice_dummy_var_525 := CyzDbgPrintEx(7, out_Tmp_915);
    goto L44;

  anon25_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_901 := strConst__li2bpl215;
    call {:si_unique_call 2926} out_vslice_dummy_var_526 := CyzDbgPrintEx(7, out_Tmp_901);
    out_FirstStatus_1 := -1073741811;
    out_SetFirstStatus_1 := 1;
    goto L125;

  anon20_Then:
    goto L48;
}



procedure {:LoopProcedure} CyzStartMask_loop_L12(in_s_p_e_c_i_a_l_43: int, in_FirstStatus_1: int, in_Tmp_898: int, in_SetFirstStatus_1: int, in_Tmp_899: int, in_Tmp_900: int, in_Tmp_901: int, in_Tmp_902: int, in_Tmp_903: int, in_Tmp_904: int, in_Tmp_905: int, in_IrpSp_3: int, in_OldIrql_14: int, in_Tmp_906: int, in_NewIrp_5: int, in_s_p_e_c_i_a_l_44: int, in_Tmp_907: int, in_sdv_780: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_910: int, in_Tmp_911: int, in_Tmp_912: int, in_Tmp_913: int, in_sdv_783: int, in_Tmp_914: int, in_pollIrql_12: int, in_Tmp_915: int, in_Extension_56: int, in_vslice_dummy_var_517: int, in_vslice_dummy_var_518: int, in_vslice_dummy_var_520: int, in_vslice_dummy_var_521: int, in_vslice_dummy_var_522: int, in_vslice_dummy_var_523: int, in_vslice_dummy_var_524: int, in_vslice_dummy_var_525: int, in_vslice_dummy_var_526: int, in_vslice_dummy_var_527: int, in_vslice_dummy_var_528: int, in_vslice_dummy_var_529: int, in_vslice_dummy_var_530: int, in_vslice_dummy_var_531: int, in_vslice_dummy_var_532: int, in_vslice_dummy_var_533: int) returns (out_s_p_e_c_i_a_l_43: int, out_FirstStatus_1: int, out_Tmp_898: int, out_SetFirstStatus_1: int, out_Tmp_899: int, out_Tmp_900: int, out_Tmp_901: int, out_Tmp_902: int, out_Tmp_903: int, out_Tmp_904: int, out_Tmp_905: int, out_IrpSp_3: int, out_OldIrql_14: int, out_Tmp_906: int, out_s_p_e_c_i_a_l_44: int, out_Tmp_907: int, out_sdv_780: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_910: int, out_Tmp_911: int, out_Tmp_912: int, out_Tmp_913: int, out_sdv_783: int, out_Tmp_914: int, out_pollIrql_12: int, out_Tmp_915: int, out_vslice_dummy_var_517: int, out_vslice_dummy_var_518: int, out_vslice_dummy_var_520: int, out_vslice_dummy_var_521: int, out_vslice_dummy_var_522: int, out_vslice_dummy_var_523: int, out_vslice_dummy_var_524: int, out_vslice_dummy_var_525: int, out_vslice_dummy_var_526: int, out_vslice_dummy_var_527: int, out_vslice_dummy_var_528: int, out_vslice_dummy_var_529: int, out_vslice_dummy_var_530: int, out_vslice_dummy_var_531: int, out_vslice_dummy_var_532: int, out_vslice_dummy_var_533: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_FirstStatus_1 == 0 || out_FirstStatus_1 == -1073741536 || out_FirstStatus_1 == 259 || out_FirstStatus_1 == -1073741811 || out_FirstStatus_1 == in_FirstStatus_1;
  free ensures {:va_keep} out_SetFirstStatus_1 == 1 || out_SetFirstStatus_1 == in_SetFirstStatus_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_44 == 2 || out_s_p_e_c_i_a_l_44 == in_s_p_e_c_i_a_l_44;
  free ensures {:va_keep} out_vslice_dummy_var_517 == 0 || out_vslice_dummy_var_517 == in_vslice_dummy_var_517;
  free ensures {:va_keep} out_vslice_dummy_var_518 == 0 || out_vslice_dummy_var_518 == in_vslice_dummy_var_518;
  free ensures {:va_keep} out_vslice_dummy_var_520 == 0 || out_vslice_dummy_var_520 == in_vslice_dummy_var_520;
  free ensures {:va_keep} out_vslice_dummy_var_521 == 0 || out_vslice_dummy_var_521 == in_vslice_dummy_var_521;
  free ensures {:va_keep} out_vslice_dummy_var_522 == 0 || out_vslice_dummy_var_522 == in_vslice_dummy_var_522;
  free ensures {:va_keep} out_vslice_dummy_var_523 == 0 || out_vslice_dummy_var_523 == in_vslice_dummy_var_523;
  free ensures {:va_keep} out_vslice_dummy_var_524 == 0 || out_vslice_dummy_var_524 == in_vslice_dummy_var_524;
  free ensures {:va_keep} out_vslice_dummy_var_525 == 0 || out_vslice_dummy_var_525 == in_vslice_dummy_var_525;
  free ensures {:va_keep} out_vslice_dummy_var_526 == 0 || out_vslice_dummy_var_526 == in_vslice_dummy_var_526;
  free ensures {:va_keep} out_vslice_dummy_var_527 == 0 || out_vslice_dummy_var_527 == in_vslice_dummy_var_527;
  free ensures {:va_keep} out_vslice_dummy_var_528 == 0 || out_vslice_dummy_var_528 == in_vslice_dummy_var_528;
  free ensures {:va_keep} out_vslice_dummy_var_529 == 0 || out_vslice_dummy_var_529 == in_vslice_dummy_var_529;
  free ensures {:va_keep} out_vslice_dummy_var_530 == 0 || out_vslice_dummy_var_530 == in_vslice_dummy_var_530;
  free ensures {:va_keep} out_vslice_dummy_var_532 == 0 || out_vslice_dummy_var_532 == in_vslice_dummy_var_532;
  free ensures {:va_keep} out_vslice_dummy_var_533 == 0 || out_vslice_dummy_var_533 == in_vslice_dummy_var_533;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc_loop_L164(in_Tmp_1010: int, in_rx_4: int, in_rx_5: int, in_Tmp_1015: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_pppflag: int, in_rx_6: int, in_Extension_62: int, in_sdv_824: int, in_Tmp_1034: int, in_vslice_dummy_var_556: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1015: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_pppflag: int, out_sdv_824: int, out_Tmp_1034: int, out_vslice_dummy_var_556: int)
{
  var vslice_dummy_var_1017: int;

  entry:
    out_Tmp_1010, out_rx_4, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_sdv_824, out_Tmp_1034, out_vslice_dummy_var_556 := in_Tmp_1010, in_rx_4, in_Tmp_1015, in_rxchar_1, in_Tmp_1018, in_Tmp_1019, in_pppflag, in_sdv_824, in_Tmp_1034, in_vslice_dummy_var_556;
    goto L164, exit;

  exit:
    return;

  L164:
    goto anon157_Else;

  anon157_Else:
    assume {:partition} out_rx_4 != in_rx_5;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon158_Else;

  anon158_Else:
    out_Tmp_1010 := out_rx_4;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1034;
    call {:si_unique_call 2944} out_rxchar_1 := corral_nondet();
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_rxchar_1;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} out_rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L183;

  L183:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1018;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} out_Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} out_rx_4 == in_rx_6 - 1;
    out_rx_4 := 0;
    goto L197;

  L197:
    goto anon168_Then;

  anon168_Then:
    assume {:partition} out_pppflag != 2;
    goto anon168_Then_dummy;

  anon168_Then_dummy:
    call {:si_unique_call 2948} {:si_old_unique_call 1} out_Tmp_1010, out_rx_4, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_sdv_824, out_Tmp_1034, out_vslice_dummy_var_556 := CyzPollingDpc_loop_L164(out_Tmp_1010, out_rx_4, in_rx_5, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, in_rx_6, in_Extension_62, out_sdv_824, out_Tmp_1034, out_vslice_dummy_var_556);
    return;

  anon167_Then:
    assume {:partition} out_rx_4 != in_rx_6 - 1;
    out_rx_4 := out_rx_4 + 1;
    goto L197;

  anon205_Then:
    assume {:partition} out_Tmp_1018 == 192;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    call {:si_unique_call 2947} out_sdv_824 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(in_Extension_62), 0, 0, in_Extension_62);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} out_sdv_824 == 0;
    goto L194;

  anon166_Then:
    assume {:partition} out_sdv_824 != 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L194;

  anon164_Then:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L194;

  anon165_Then:
    goto L194;

  anon162_Then:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L183;

  anon163_Then:
    goto L180;

  L180:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} out_rxchar_1 == 126;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} out_pppflag != 0;
    out_pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1015;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} out_Tmp_1015 != 0;
    assume out_Tmp_1015 > 0;
    havoc vslice_dummy_var_1017;
    Mem_T.INT4[out_Tmp_1015] := vslice_dummy_var_1017;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1019;
    assume {:nonnull} out_Tmp_1019 != 0;
    assume out_Tmp_1019 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    call {:si_unique_call 2946} out_vslice_dummy_var_556 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(in_Extension_62), 0, 0, in_Extension_62);
    goto L200;

  L200:
    call {:si_unique_call 2945} CyzPutChar#1(in_Extension_62, out_rxchar_1);
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 2943} CyzPutChar#1(in_Extension_62, 0);
    goto L194;

  anon177_Then:
    goto L194;

  anon176_Then:
    goto L194;

  anon175_Then:
    goto L200;

  anon171_Then:
    goto L200;

  anon174_Then:
    assume {:partition} out_pppflag == 0;
    out_pppflag := 1;
    goto L206;

  anon173_Then:
    goto L206;

  anon206_Then:
    assume {:partition} out_rxchar_1 != 126;
    goto L206;

  anon172_Then:
    goto L206;

  anon170_Then:
    goto L206;

  anon169_Then:
    goto L204;

  anon161_Then:
    goto L200;

  anon160_Then:
    goto L180;

  anon204_Then:
    assume {:partition} out_rxchar_1 == 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L194;

  anon159_Then:
    goto L179;
}



procedure {:LoopProcedure} CyzPollingDpc_loop_L164(in_Tmp_1010: int, in_rx_4: int, in_rx_5: int, in_Tmp_1015: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_pppflag: int, in_rx_6: int, in_Extension_62: int, in_sdv_824: int, in_Tmp_1034: int, in_vslice_dummy_var_556: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1015: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_pppflag: int, out_sdv_824: int, out_Tmp_1034: int, out_vslice_dummy_var_556: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_pppflag == 2 || out_pppflag == 1 || out_pppflag == in_pppflag;
  free ensures {:va_keep} out_sdv_824 == 0 || out_sdv_824 == 1 || out_sdv_824 == in_sdv_824;
  free ensures {:va_keep} out_vslice_dummy_var_556 == 0 || out_vslice_dummy_var_556 == 1 || out_vslice_dummy_var_556 == in_vslice_dummy_var_556;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc_loop_L43(in_Tmp_1009: int, in_Dispatch: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_Tmp_1016: int, in_Tmp_1022: int, in_Tmp_1024: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_vslice_dummy_var_549: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_553: int, in_vslice_dummy_var_557: int) returns (out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_Tmp_1016: int, out_Tmp_1022: int, out_Tmp_1024: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_loc: int, out_dbExtension: int, out_vslice_dummy_var_549: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_553: int, out_vslice_dummy_var_557: int)
{
  var vslice_dummy_var_1018: int;
  var vslice_dummy_var_1019: int;
  var vslice_dummy_var_1020: int;
  var vslice_dummy_var_1021: int;
  var vslice_dummy_var_1022: int;
  var vslice_dummy_var_1023: int;

  entry:
    out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_557 := in_Tmp_1011, in_Tmp_1012, in_Tmp_1014, in_Tmp_1016, in_Tmp_1022, in_Tmp_1024, in_Tmp_1028, in_Tmp_1030, in_Tmp_1031, in_Tmp_1032, in_qu, in_fwcmd, in_dbChannel, in_Tmp_1033, in_loc, in_dbExtension, in_vslice_dummy_var_549, in_vslice_dummy_var_550, in_vslice_dummy_var_551, in_vslice_dummy_var_552, in_vslice_dummy_var_553, in_vslice_dummy_var_557;
    goto L43, exit;

  exit:
    return;

  L43:
    goto anon141_Else;

  anon141_Else:
    assume {:partition} out_qu != in_qu_1;
    goto anon142_Then;

  anon142_Then:
    assume {:partition} 640 > out_qu;
    goto anon143_Else;

  anon143_Else:
    assume {:partition} in_qu_1 < 640;
    out_Tmp_1033 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1024;
    call {:si_unique_call 2960} out_loc := corral_nondet();
    out_Tmp_1031 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1016;
    call {:si_unique_call 2961} out_dbChannel := corral_nondet();
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon144_Else;

  anon144_Else:
    out_Tmp_1030 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1011;
    call {:si_unique_call 2959} out_fwcmd := corral_nondet();
    out_Tmp_1022 := out_dbChannel;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    havoc out_dbExtension;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} out_dbExtension == 0;
    goto L132;

  L132:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} out_qu == 639;
    out_qu := 0;
    goto anon152_Else_dummy;

  anon152_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 2962} {:si_old_unique_call 1} out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_557 := CyzPollingDpc_loop_L43(in_Tmp_1009, in_Dispatch, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, in_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, in_qu_1, out_loc, out_dbExtension, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_557);
    return;

  anon152_Then:
    assume {:partition} out_qu != 639;
    out_qu := out_qu + 1;
    goto anon152_Then_dummy;

  anon152_Then_dummy:
    goto L_BAF_1;

  anon207_Then:
    assume {:partition} out_dbExtension != 0;
    call {:si_unique_call 2958} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} out_loc != 3;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_loc != 66;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} out_loc != 69;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} out_loc != 70;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} out_loc != 96;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} out_loc != 97;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} out_loc != 98;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_loc != 99;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_loc != 100;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} out_loc != 112;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} out_loc != 113;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} out_loc != 114;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} out_loc != 115;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} out_loc != 132;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_loc != 133;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} out_loc != 134;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} out_loc != 135;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} out_loc != 136;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_loc != 144;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} out_loc == 145;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1014;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_1018;
    havoc vslice_dummy_var_1019;
    havoc vslice_dummy_var_1020;
    call {:si_unique_call 2950} CyzLogError(vslice_dummy_var_1018, vslice_dummy_var_1019, vslice_dummy_var_1020, in_Tmp_1009, 0, 0, 0, out_Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 2949} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon182_Then:
    assume {:partition} out_loc != 145;
    goto L76;

  anon183_Then:
    assume {:partition} out_loc == 144;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1012;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_1021;
    havoc vslice_dummy_var_1022;
    havoc vslice_dummy_var_1023;
    call {:si_unique_call 2951} CyzLogError(vslice_dummy_var_1021, vslice_dummy_var_1022, vslice_dummy_var_1023, in_Tmp_1013, 0, 0, 0, out_Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon184_Then:
    assume {:partition} out_loc == 136;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    call {:si_unique_call 2952} out_vslice_dummy_var_549 := CyzProcessLSR(out_dbExtension, 2);
    goto L76;

  anon151_Then:
    goto L76;

  anon185_Then:
    assume {:partition} out_loc == 135;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 2953} out_vslice_dummy_var_550 := CyzProcessLSR(out_dbExtension, 2);
    goto L76;

  anon150_Then:
    goto L76;

  anon186_Then:
    assume {:partition} out_loc == 134;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    call {:si_unique_call 2954} out_vslice_dummy_var_551 := CyzProcessLSR(out_dbExtension, 8);
    goto L76;

  anon149_Then:
    goto L76;

  anon187_Then:
    assume {:partition} out_loc == 133;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 2955} out_vslice_dummy_var_552 := CyzProcessLSR(out_dbExtension, 4);
    goto L76;

  anon148_Then:
    goto L76;

  anon188_Then:
    assume {:partition} out_loc == 132;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    call {:si_unique_call 2956} out_vslice_dummy_var_553 := CyzProcessLSR(out_dbExtension, 16);
    goto L76;

  anon147_Then:
    goto L76;

  anon189_Then:
    assume {:partition} out_loc == 115;
    goto L87;

  L87:
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    out_Tmp_1032 := out_loc;
    call {:si_unique_call 2957} out_vslice_dummy_var_557 := CyzHandleModemUpdate#1(out_dbExtension, 0, out_Tmp_1032);
    goto L76;

  anon146_Then:
    goto L76;

  anon190_Then:
    assume {:partition} out_loc == 114;
    goto L87;

  anon191_Then:
    assume {:partition} out_loc == 113;
    goto L87;

  anon192_Then:
    assume {:partition} out_loc == 112;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L87;

  anon193_Then:
    assume {:partition} out_loc == 100;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon194_Then:
    assume {:partition} out_loc == 99;
    goto L76;

  anon195_Then:
    assume {:partition} out_loc == 98;
    goto L76;

  anon196_Then:
    assume {:partition} out_loc == 97;
    goto L76;

  anon197_Then:
    assume {:partition} out_loc == 96;
    goto L76;

  anon198_Then:
    assume {:partition} out_loc == 70;
    goto L76;

  anon199_Then:
    assume {:partition} out_loc == 69;
    goto L76;

  anon200_Then:
    assume {:partition} out_loc == 66;
    goto L76;

  anon145_Then:
    assume {:partition} out_loc == 3;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;
}



procedure {:LoopProcedure} CyzPollingDpc_loop_L43(in_Tmp_1009: int, in_Dispatch: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_Tmp_1016: int, in_Tmp_1022: int, in_Tmp_1024: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_vslice_dummy_var_549: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_553: int, in_vslice_dummy_var_557: int) returns (out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_Tmp_1016: int, out_Tmp_1022: int, out_Tmp_1024: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_loc: int, out_dbExtension: int, out_vslice_dummy_var_549: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_553: int, out_vslice_dummy_var_557: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_vslice_dummy_var_549 == 2 || out_vslice_dummy_var_549 == in_vslice_dummy_var_549;
  free ensures {:va_keep} out_vslice_dummy_var_550 == 2 || out_vslice_dummy_var_550 == in_vslice_dummy_var_550;
  free ensures {:va_keep} out_vslice_dummy_var_551 == 8 || out_vslice_dummy_var_551 == in_vslice_dummy_var_551;
  free ensures {:va_keep} out_vslice_dummy_var_552 == 4 || out_vslice_dummy_var_552 == in_vslice_dummy_var_552;
  free ensures {:va_keep} out_vslice_dummy_var_553 == 16 || out_vslice_dummy_var_553 == in_vslice_dummy_var_553;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc_loop_L25(in_Tmp_1009: int, in_Tmp_1010: int, in_Dispatch: int, in_rx_4: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_channel_1: int, in_rx_5: int, in_Tmp_1015: int, in_Tmp_1016: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_Tmp_1020: int, in_pppflag: int, in_Tmp_1022: int, in_Tmp_1023: int, in_Tmp_1024: int, in_sdv_819: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1028: int, in_Tmp_1030: int, in_sdv_824: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_Tmp_1034: int, in_vslice_dummy_var_549: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_553: int, in_vslice_dummy_var_554: int, in_vslice_dummy_var_555: int, in_vslice_dummy_var_556: int, in_vslice_dummy_var_557: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_channel_1: int, out_rx_5: int, out_Tmp_1015: int, out_Tmp_1016: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_Tmp_1020: int, out_pppflag: int, out_Tmp_1022: int, out_Tmp_1023: int, out_Tmp_1024: int, out_sdv_819: int, out_rx_6: int, out_Extension_62: int, out_Tmp_1028: int, out_Tmp_1030: int, out_sdv_824: int, out_Tmp_1031: int, out_Tmp_1032: int, out_pt_1: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_qu_1: int, out_loc: int, out_dbExtension: int, out_Tmp_1034: int, out_vslice_dummy_var_549: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_553: int, out_vslice_dummy_var_554: int, out_vslice_dummy_var_555: int, out_vslice_dummy_var_556: int, out_vslice_dummy_var_557: int)
{
  var vslice_dummy_var_1024: int;
  var vslice_dummy_var_1025: int;
  var vslice_dummy_var_1026: int;
  var vslice_dummy_var_1027: int;
  var vslice_dummy_var_1028: int;
  var vslice_dummy_var_1029: int;
  var vslice_dummy_var_1030: int;

  entry:
    out_Tmp_1010, out_rx_4, out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1015, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_819, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_sdv_824, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_554, out_vslice_dummy_var_555, out_vslice_dummy_var_556, out_vslice_dummy_var_557 := in_Tmp_1010, in_rx_4, in_Tmp_1011, in_Tmp_1012, in_Tmp_1014, in_channel_1, in_rx_5, in_Tmp_1015, in_Tmp_1016, in_rxchar_1, in_Tmp_1018, in_Tmp_1019, in_Tmp_1020, in_pppflag, in_Tmp_1022, in_Tmp_1023, in_Tmp_1024, in_sdv_819, in_rx_6, in_Extension_62, in_Tmp_1028, in_Tmp_1030, in_sdv_824, in_Tmp_1031, in_Tmp_1032, in_pt_1, in_qu, in_fwcmd, in_dbChannel, in_Tmp_1033, in_qu_1, in_loc, in_dbExtension, in_Tmp_1034, in_vslice_dummy_var_549, in_vslice_dummy_var_550, in_vslice_dummy_var_551, in_vslice_dummy_var_552, in_vslice_dummy_var_553, in_vslice_dummy_var_554, in_vslice_dummy_var_555, in_vslice_dummy_var_556, in_vslice_dummy_var_557;
    goto L25, exit;

  exit:
    return;

  L25:
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon140_Else;

  anon140_Else:
    out_Tmp_1020 := out_channel_1;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1023;
    assume {:nonnull} out_Tmp_1023 != 0;
    assume out_Tmp_1023 > 0;
    havoc out_Extension_62;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} out_Extension_62 == 0;
    goto L157;

  L157:
    out_channel_1 := out_channel_1 + 1;
    goto L157_dummy;

  L157_dummy:
    call {:si_unique_call 2994} {:si_old_unique_call 1} out_Tmp_1010, out_rx_4, out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1015, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_819, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_sdv_824, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_554, out_vslice_dummy_var_555, out_vslice_dummy_var_556, out_vslice_dummy_var_557 := CyzPollingDpc_loop_L25(in_Tmp_1009, out_Tmp_1010, in_Dispatch, out_rx_4, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1015, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_819, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_sdv_824, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_554, out_vslice_dummy_var_555, out_vslice_dummy_var_556, out_vslice_dummy_var_557);
    return;

  anon201_Then:
    assume {:partition} out_Extension_62 != 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_pt_1;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} out_pt_1 == 0;
    goto L157;

  anon202_Then:
    assume {:partition} out_pt_1 != 0;
    call {:si_unique_call 2972} out_qu := corral_nondet();
    call {:si_unique_call 2973} out_qu_1 := corral_nondet();
    goto L43;

  L43:
    call {:si_unique_call 2971} out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_557 := CyzPollingDpc_loop_L43(in_Tmp_1009, in_Dispatch, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_557);
    goto L43_last;

  L43_last:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} out_qu != out_qu_1;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} out_qu >= 640;
    out_qu := 0;
    goto L44;

  L44:
    call {:si_unique_call 2968} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 2969} out_rx_5 := corral_nondet();
    call {:si_unique_call 2970} out_rx_4 := corral_nondet();
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_rx_6;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} out_rx_5 >= out_rx_6;
    goto L150;

  L150:
    call {:si_unique_call 2963} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon203_Then:
    assume {:partition} out_rx_6 > out_rx_5;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} out_rx_4 < out_rx_6;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} out_rx_5 != out_rx_4;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    out_pppflag := 0;
    goto L164;

  L164:
    call {:si_unique_call 2987} out_Tmp_1010, out_rx_4, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_sdv_824, out_Tmp_1034, out_vslice_dummy_var_556 := CyzPollingDpc_loop_L164(out_Tmp_1010, out_rx_4, out_rx_5, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_rx_6, out_Extension_62, out_sdv_824, out_Tmp_1034, out_vslice_dummy_var_556);
    goto L164_last;

  L164_last:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_rx_4 != out_rx_5;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    out_Tmp_1010 := out_rx_4;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1034;
    call {:si_unique_call 2989} out_rxchar_1 := corral_nondet();
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_rxchar_1;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} out_rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L183;

  L183:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1018;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} out_Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} out_rx_4 == out_rx_6 - 1;
    out_rx_4 := 0;
    goto L197;

  L197:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} out_pppflag == 2;
    goto L165;

  L165:
    goto L159;

  L159:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    call {:si_unique_call 2993} out_sdv_819 := CyzAmountInTxBuffer(out_Extension_62);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} out_sdv_819 == 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 2965} CyzQueueCompleteWrite(out_Extension_62);
    goto L228;

  L228:
    call {:si_unique_call 2964} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon181_Then:
    assume {:partition} out_sdv_819 != 0;
    goto L228;

  anon180_Then:
    goto L236;

  L236:
    call {:si_unique_call 2966} out_vslice_dummy_var_555 := CyzTxStart#1(out_Extension_62);
    goto L228;

  anon179_Then:
    goto L236;

  anon178_Then:
    call {:si_unique_call 2967} out_vslice_dummy_var_554 := CyzTxStart#1(out_Extension_62);
    goto L228;

  anon155_Then:
    goto L228;

  anon168_Then:
    assume {:partition} out_pppflag != 2;
    assume false;
    return;

  anon167_Then:
    assume {:partition} out_rx_4 != out_rx_6 - 1;
    out_rx_4 := out_rx_4 + 1;
    goto L197;

  anon205_Then:
    assume {:partition} out_Tmp_1018 == 192;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 2992} out_sdv_824 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(out_Extension_62), 0, 0, out_Extension_62);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} out_sdv_824 == 0;
    goto L194;

  anon166_Then:
    assume {:partition} out_sdv_824 != 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L194;

  anon164_Then:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L194;

  anon165_Then:
    goto L194;

  anon162_Then:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L183;

  anon163_Then:
    goto L180;

  L180:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} out_rxchar_1 == 126;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} out_pppflag != 0;
    out_pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1015;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Tmp_1015 != 0;
    assume out_Tmp_1015 > 0;
    havoc vslice_dummy_var_1030;
    Mem_T.INT4[out_Tmp_1015] := vslice_dummy_var_1030;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1019;
    assume {:nonnull} out_Tmp_1019 != 0;
    assume out_Tmp_1019 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 2991} out_vslice_dummy_var_556 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(out_Extension_62), 0, 0, out_Extension_62);
    goto L200;

  L200:
    call {:si_unique_call 2990} CyzPutChar#1(out_Extension_62, out_rxchar_1);
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 2988} CyzPutChar#1(out_Extension_62, 0);
    goto L194;

  anon177_Then:
    goto L194;

  anon176_Then:
    goto L194;

  anon175_Then:
    goto L200;

  anon171_Then:
    goto L200;

  anon174_Then:
    assume {:partition} out_pppflag == 0;
    out_pppflag := 1;
    goto L206;

  anon173_Then:
    goto L206;

  anon206_Then:
    assume {:partition} out_rxchar_1 != 126;
    goto L206;

  anon172_Then:
    goto L206;

  anon170_Then:
    goto L206;

  anon169_Then:
    goto L204;

  anon161_Then:
    goto L200;

  anon160_Then:
    goto L180;

  anon204_Then:
    assume {:partition} out_rxchar_1 == 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L194;

  anon159_Then:
    goto L179;

  anon158_Then:
    goto L165;

  anon157_Then:
    assume {:partition} out_rx_4 == out_rx_5;
    goto L165;

  anon156_Then:
    out_rx_4 := out_rx_5;
    goto L165;

  anon154_Then:
    assume {:partition} out_rx_5 == out_rx_4;
    goto L159;

  anon153_Then:
    assume {:partition} out_rx_6 <= out_rx_4;
    goto L150;

  anon142_Then:
    assume {:partition} 640 > out_qu;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} out_qu_1 < 640;
    out_Tmp_1033 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1024;
    call {:si_unique_call 2985} out_loc := corral_nondet();
    out_Tmp_1031 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1016;
    call {:si_unique_call 2986} out_dbChannel := corral_nondet();
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    out_Tmp_1030 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1011;
    call {:si_unique_call 2984} out_fwcmd := corral_nondet();
    out_Tmp_1022 := out_dbChannel;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    havoc out_dbExtension;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} out_dbExtension == 0;
    goto L132;

  L132:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} out_qu == 639;
    out_qu := 0;
    assume false;
    return;

  anon152_Then:
    assume {:partition} out_qu != 639;
    out_qu := out_qu + 1;
    assume false;
    return;

  anon207_Then:
    assume {:partition} out_dbExtension != 0;
    call {:si_unique_call 2983} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} out_loc != 3;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_loc != 66;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} out_loc != 69;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} out_loc != 70;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} out_loc != 96;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} out_loc != 97;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} out_loc != 98;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_loc != 99;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_loc != 100;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} out_loc != 112;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} out_loc != 113;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} out_loc != 114;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} out_loc != 115;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} out_loc != 132;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_loc != 133;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} out_loc != 134;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} out_loc != 135;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} out_loc != 136;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_loc != 144;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} out_loc == 145;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1014;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_1024;
    havoc vslice_dummy_var_1025;
    havoc vslice_dummy_var_1026;
    call {:si_unique_call 2975} CyzLogError(vslice_dummy_var_1024, vslice_dummy_var_1025, vslice_dummy_var_1026, in_Tmp_1009, 0, 0, 0, out_Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 2974} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon182_Then:
    assume {:partition} out_loc != 145;
    goto L76;

  anon183_Then:
    assume {:partition} out_loc == 144;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1012;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_1027;
    havoc vslice_dummy_var_1028;
    havoc vslice_dummy_var_1029;
    call {:si_unique_call 2976} CyzLogError(vslice_dummy_var_1027, vslice_dummy_var_1028, vslice_dummy_var_1029, in_Tmp_1013, 0, 0, 0, out_Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon184_Then:
    assume {:partition} out_loc == 136;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    call {:si_unique_call 2977} out_vslice_dummy_var_549 := CyzProcessLSR(out_dbExtension, 2);
    goto L76;

  anon151_Then:
    goto L76;

  anon185_Then:
    assume {:partition} out_loc == 135;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 2978} out_vslice_dummy_var_550 := CyzProcessLSR(out_dbExtension, 2);
    goto L76;

  anon150_Then:
    goto L76;

  anon186_Then:
    assume {:partition} out_loc == 134;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    call {:si_unique_call 2979} out_vslice_dummy_var_551 := CyzProcessLSR(out_dbExtension, 8);
    goto L76;

  anon149_Then:
    goto L76;

  anon187_Then:
    assume {:partition} out_loc == 133;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 2980} out_vslice_dummy_var_552 := CyzProcessLSR(out_dbExtension, 4);
    goto L76;

  anon148_Then:
    goto L76;

  anon188_Then:
    assume {:partition} out_loc == 132;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    call {:si_unique_call 2981} out_vslice_dummy_var_553 := CyzProcessLSR(out_dbExtension, 16);
    goto L76;

  anon147_Then:
    goto L76;

  anon189_Then:
    assume {:partition} out_loc == 115;
    goto L87;

  L87:
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    out_Tmp_1032 := out_loc;
    call {:si_unique_call 2982} out_vslice_dummy_var_557 := CyzHandleModemUpdate#1(out_dbExtension, 0, out_Tmp_1032);
    goto L76;

  anon146_Then:
    goto L76;

  anon190_Then:
    assume {:partition} out_loc == 114;
    goto L87;

  anon191_Then:
    assume {:partition} out_loc == 113;
    goto L87;

  anon192_Then:
    assume {:partition} out_loc == 112;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L87;

  anon193_Then:
    assume {:partition} out_loc == 100;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon194_Then:
    assume {:partition} out_loc == 99;
    goto L76;

  anon195_Then:
    assume {:partition} out_loc == 98;
    goto L76;

  anon196_Then:
    assume {:partition} out_loc == 97;
    goto L76;

  anon197_Then:
    assume {:partition} out_loc == 96;
    goto L76;

  anon198_Then:
    assume {:partition} out_loc == 70;
    goto L76;

  anon199_Then:
    assume {:partition} out_loc == 69;
    goto L76;

  anon200_Then:
    assume {:partition} out_loc == 66;
    goto L76;

  anon145_Then:
    assume {:partition} out_loc == 3;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon144_Then:
    goto L44;

  anon143_Then:
    assume {:partition} 640 <= out_qu_1;
    goto L44;

  anon141_Then:
    assume {:partition} out_qu == out_qu_1;
    goto L44;
}



procedure {:LoopProcedure} CyzPollingDpc_loop_L25(in_Tmp_1009: int, in_Tmp_1010: int, in_Dispatch: int, in_rx_4: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_channel_1: int, in_rx_5: int, in_Tmp_1015: int, in_Tmp_1016: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_Tmp_1020: int, in_pppflag: int, in_Tmp_1022: int, in_Tmp_1023: int, in_Tmp_1024: int, in_sdv_819: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1028: int, in_Tmp_1030: int, in_sdv_824: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_Tmp_1034: int, in_vslice_dummy_var_549: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_553: int, in_vslice_dummy_var_554: int, in_vslice_dummy_var_555: int, in_vslice_dummy_var_556: int, in_vslice_dummy_var_557: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_channel_1: int, out_rx_5: int, out_Tmp_1015: int, out_Tmp_1016: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_Tmp_1020: int, out_pppflag: int, out_Tmp_1022: int, out_Tmp_1023: int, out_Tmp_1024: int, out_sdv_819: int, out_rx_6: int, out_Extension_62: int, out_Tmp_1028: int, out_Tmp_1030: int, out_sdv_824: int, out_Tmp_1031: int, out_Tmp_1032: int, out_pt_1: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_qu_1: int, out_loc: int, out_dbExtension: int, out_Tmp_1034: int, out_vslice_dummy_var_549: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_553: int, out_vslice_dummy_var_554: int, out_vslice_dummy_var_555: int, out_vslice_dummy_var_556: int, out_vslice_dummy_var_557: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_pppflag == 2 || out_pppflag == 1 || out_pppflag == 0 || out_pppflag == in_pppflag;
  free ensures {:va_keep} out_sdv_824 == 0 || out_sdv_824 == 1 || out_sdv_824 == in_sdv_824;
  free ensures {:va_keep} out_vslice_dummy_var_549 == 2 || out_vslice_dummy_var_549 == in_vslice_dummy_var_549;
  free ensures {:va_keep} out_vslice_dummy_var_550 == 2 || out_vslice_dummy_var_550 == in_vslice_dummy_var_550;
  free ensures {:va_keep} out_vslice_dummy_var_551 == 8 || out_vslice_dummy_var_551 == in_vslice_dummy_var_551;
  free ensures {:va_keep} out_vslice_dummy_var_552 == 4 || out_vslice_dummy_var_552 == in_vslice_dummy_var_552;
  free ensures {:va_keep} out_vslice_dummy_var_553 == 16 || out_vslice_dummy_var_553 == in_vslice_dummy_var_553;
  free ensures {:va_keep} out_vslice_dummy_var_554 == 0 || out_vslice_dummy_var_554 == in_vslice_dummy_var_554;
  free ensures {:va_keep} out_vslice_dummy_var_555 == 0 || out_vslice_dummy_var_555 == in_vslice_dummy_var_555;
  free ensures {:va_keep} out_vslice_dummy_var_556 == 0 || out_vslice_dummy_var_556 == 1 || out_vslice_dummy_var_556 == in_vslice_dummy_var_556;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartRead_loop_L24(in_localStatus_1: int, in_Tmp_1274: int, in_totalTime: int, in_os2ssreturn: int, in_timeoutsForIrp: int, in_updateChar: int, in_setFirstStatus: int, in_Tmp_1276: int, in_useTotalTimer: int, in_newIrp_1: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_937: int, in_sdv_938: int, in_oldIrql_11: int, in_Tmp_1277: int, in_sdv_939: int, in_constantVal: int, in_controlIrql: int, in_Tmp_1278: int, in_Tmp_1280: int, in_returnWithWhatsPresent: int, in_Tmp_1281: int, in_Tmp_1282: int, in_pollIrql_13: int, in_useIntervalTimer: int, in_firstStatus: int, in_sdv_946: int, in_Extension_65: int, in_boogieTmp: int, in_vslice_dummy_var_621: int, in_vslice_dummy_var_622: int, in_vslice_dummy_var_623: int, in_vslice_dummy_var_626: int) returns (out_localStatus_1: int, out_Tmp_1274: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1276: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_937: int, out_sdv_938: int, out_oldIrql_11: int, out_Tmp_1277: int, out_sdv_939: int, out_constantVal: int, out_controlIrql: int, out_Tmp_1278: int, out_Tmp_1280: int, out_returnWithWhatsPresent: int, out_Tmp_1281: int, out_Tmp_1282: int, out_pollIrql_13: int, out_useIntervalTimer: int, out_firstStatus: int, out_sdv_946: int, out_boogieTmp: int, out_vslice_dummy_var_621: int, out_vslice_dummy_var_622: int, out_vslice_dummy_var_623: int, out_vslice_dummy_var_626: int)
{
  var vslice_dummy_var_1031: int;
  var vslice_dummy_var_1032: int;
  var vslice_dummy_var_1033: int;
  var vslice_dummy_var_1034: int;

  entry:
    out_localStatus_1, out_Tmp_1274, out_os2ssreturn, out_setFirstStatus, out_Tmp_1276, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_937, out_sdv_938, out_oldIrql_11, out_Tmp_1277, out_sdv_939, out_constantVal, out_controlIrql, out_Tmp_1278, out_Tmp_1280, out_returnWithWhatsPresent, out_Tmp_1281, out_Tmp_1282, out_pollIrql_13, out_useIntervalTimer, out_firstStatus, out_sdv_946, out_boogieTmp, out_vslice_dummy_var_621, out_vslice_dummy_var_622, out_vslice_dummy_var_623, out_vslice_dummy_var_626 := in_localStatus_1, in_Tmp_1274, in_os2ssreturn, in_setFirstStatus, in_Tmp_1276, in_useTotalTimer, in_multiplierVal, in_crunchDownToOne, in_sdv_937, in_sdv_938, in_oldIrql_11, in_Tmp_1277, in_sdv_939, in_constantVal, in_controlIrql, in_Tmp_1278, in_Tmp_1280, in_returnWithWhatsPresent, in_Tmp_1281, in_Tmp_1282, in_pollIrql_13, in_useIntervalTimer, in_firstStatus, in_sdv_946, in_boogieTmp, in_vslice_dummy_var_621, in_vslice_dummy_var_622, in_vslice_dummy_var_623, in_vslice_dummy_var_626;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_1031;
    call {:si_unique_call 2995} out_sdv_937 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1031);
    assume {:nonnull} out_sdv_937 != 0;
    assume out_sdv_937 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 3023} out_localStatus_1 := CyzResizeBuffer(in_Extension_65);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  L38:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    call {:si_unique_call 2996} CyzGetNextIrp(CurrentReadIrp__CYZ_DEVICE_EXTENSION(in_Extension_65), ReadQueue__CYZ_DEVICE_EXTENSION(in_Extension_65), in_newIrp_1, 1, in_Extension_65);
    assume {:nonnull} in_newIrp_1 != 0;
    assume in_newIrp_1 > 0;
    goto anon61_Then;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    call {:si_unique_call 3024} {:si_old_unique_call 1} out_localStatus_1, out_Tmp_1274, out_os2ssreturn, out_setFirstStatus, out_Tmp_1276, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_937, out_sdv_938, out_oldIrql_11, out_Tmp_1277, out_sdv_939, out_constantVal, out_controlIrql, out_Tmp_1278, out_Tmp_1280, out_returnWithWhatsPresent, out_Tmp_1281, out_Tmp_1282, out_pollIrql_13, out_useIntervalTimer, out_firstStatus, out_sdv_946, out_boogieTmp, out_vslice_dummy_var_621, out_vslice_dummy_var_622, out_vslice_dummy_var_623, out_vslice_dummy_var_626 := CyzStartRead_loop_L24(out_localStatus_1, out_Tmp_1274, in_totalTime, out_os2ssreturn, in_timeoutsForIrp, in_updateChar, out_setFirstStatus, out_Tmp_1276, out_useTotalTimer, in_newIrp_1, out_multiplierVal, out_crunchDownToOne, out_sdv_937, out_sdv_938, out_oldIrql_11, out_Tmp_1277, out_sdv_939, out_constantVal, out_controlIrql, out_Tmp_1278, out_Tmp_1280, out_returnWithWhatsPresent, out_Tmp_1281, out_Tmp_1282, out_pollIrql_13, out_useIntervalTimer, out_firstStatus, out_sdv_946, in_Extension_65, out_boogieTmp, out_vslice_dummy_var_621, out_vslice_dummy_var_622, out_vslice_dummy_var_623, out_vslice_dummy_var_626);
    return;

  anon60_Then:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := out_localStatus_1;
    out_setFirstStatus := 1;
    goto L38;

  anon59_Then:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_1034;
    call {:si_unique_call 3010} out_sdv_939 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1034);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} out_sdv_939 != 0;
    assume out_sdv_939 > 0;
    out_useTotalTimer := 0;
    out_returnWithWhatsPresent := 0;
    out_os2ssreturn := 0;
    out_crunchDownToOne := 0;
    out_useIntervalTimer := 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    call {:si_unique_call 3011} out_vslice_dummy_var_626 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(in_Extension_65), in_Extension_65);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    call {:si_unique_call 3012} out_vslice_dummy_var_621 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(in_Extension_65), in_Extension_65);
    call {:si_unique_call 3013} out_Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    Mem_T.INT4[out_Tmp_1281] := out_controlIrql;
    call {:si_unique_call 3014} sdv_KeAcquireSpinLock(0, out_Tmp_1281);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    out_controlIrql := Mem_T.INT4[out_Tmp_1281];
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    call {:si_unique_call 3015} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_useIntervalTimer := 1;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto L67;

  L67:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L77;

  L77:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  L84:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} out_useTotalTimer != 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_totalTime != 0;
    assume in_totalTime > 0;
    goto L85;

  L85:
    call {:si_unique_call 3007} out_Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    Mem_T.INT4[out_Tmp_1281] := out_controlIrql;
    call {:si_unique_call 3008} sdv_KeAcquireSpinLock(0, out_Tmp_1281);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    out_controlIrql := Mem_T.INT4[out_Tmp_1281];
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    call {:si_unique_call 3009} out_boogieTmp := CyzGetCharsFromIntBuffer(in_Extension_65);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_returnWithWhatsPresent != 0;
    goto L95;

  L95:
    call {:si_unique_call 3018} out_Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    Mem_T.INT4[out_Tmp_1281] := out_pollIrql_13;
    call {:si_unique_call 3019} sdv_KeAcquireSpinLock(0, out_Tmp_1281);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    out_pollIrql_13 := Mem_T.INT4[out_Tmp_1281];
    call {:si_unique_call 3020} out_vslice_dummy_var_622 := CyzUpdateInterruptBuffer(in_updateChar);
    call {:si_unique_call 3021} sdv_KeReleaseSpinLock(0, out_pollIrql_13);
    call {:si_unique_call 3022} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1282;
    assume {:nonnull} out_Tmp_1282 != 0;
    assume out_Tmp_1282 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L38;

  anon83_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon72_Then:
    assume {:partition} out_returnWithWhatsPresent == 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_os2ssreturn != 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1277;
    assume {:nonnull} out_Tmp_1277 != 0;
    assume out_Tmp_1277 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L112;

  L112:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_1033;
    call {:si_unique_call 3004} out_sdv_946 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1033);
    assume {:nonnull} out_sdv_946 != 0;
    assume out_sdv_946 > 0;
    call {:si_unique_call 3005} out_Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    Mem_T.INT4[out_Tmp_1281] := out_oldIrql_11;
    call {:si_unique_call 3006} IoAcquireCancelSpinLock(out_Tmp_1281);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    out_oldIrql_11 := Mem_T.INT4[out_Tmp_1281];
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1276;
    assume {:nonnull} out_Tmp_1276 != 0;
    assume out_Tmp_1276 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 3016} IoReleaseCancelSpinLock(out_oldIrql_11);
    call {:si_unique_call 3017} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1280;
    assume {:nonnull} out_Tmp_1280 != 0;
    assume out_Tmp_1280 > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1274;
    assume {:nonnull} out_Tmp_1274 != 0;
    assume out_Tmp_1274 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := -1073741536;
    out_setFirstStatus := 1;
    goto L38;

  anon86_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_crunchDownToOne != 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_1032;
    call {:si_unique_call 3003} out_sdv_938 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1032);
    assume {:nonnull} out_sdv_938 != 0;
    assume out_sdv_938 > 0;
    goto L133;

  L133:
    call {:si_unique_call 2999} out_Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    Mem_T.INT4[out_Tmp_1281] := out_pollIrql_13;
    call {:si_unique_call 3000} sdv_KeAcquireSpinLock(0, out_Tmp_1281);
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    out_pollIrql_13 := Mem_T.INT4[out_Tmp_1281];
    call {:si_unique_call 3001} out_vslice_dummy_var_623 := CyzUpdateAndSwitchToUser(in_updateChar);
    call {:si_unique_call 3002} sdv_KeReleaseSpinLock(0, out_pollIrql_13);
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    goto anon76_Else;

  anon76_Else:
    call {:si_unique_call 2997} IoReleaseCancelSpinLock(out_oldIrql_11);
    call {:si_unique_call 2998} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1278;
    assume {:nonnull} out_Tmp_1278 != 0;
    assume out_Tmp_1278 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L38;

  anon87_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon75_Then:
    assume {:partition} out_crunchDownToOne == 0;
    goto L133;

  anon84_Then:
    goto L95;

  anon74_Then:
    assume {:partition} out_os2ssreturn == 0;
    goto L112;

  anon73_Then:
    goto L95;

  anon71_Then:
    assume {:partition} out_useTotalTimer == 0;
    goto L85;

  anon70_Then:
    goto L78;

  L78:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    out_crunchDownToOne := 1;
    out_multiplierVal := 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  anon80_Then:
    goto L84;

  anon69_Then:
    goto L84;

  anon68_Then:
    goto L78;

  anon66_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    out_returnWithWhatsPresent := 1;
    goto L84;

  anon67_Then:
    goto L77;

  anon63_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L205;

  L205:
    out_useTotalTimer := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  anon65_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L205;

  anon81_Then:
    goto L84;

  anon82_Then:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto L67;

  anon64_Then:
    goto L67;

  anon62_Then:
    goto L67;
}



procedure {:LoopProcedure} CyzStartRead_loop_L24(in_localStatus_1: int, in_Tmp_1274: int, in_totalTime: int, in_os2ssreturn: int, in_timeoutsForIrp: int, in_updateChar: int, in_setFirstStatus: int, in_Tmp_1276: int, in_useTotalTimer: int, in_newIrp_1: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_937: int, in_sdv_938: int, in_oldIrql_11: int, in_Tmp_1277: int, in_sdv_939: int, in_constantVal: int, in_controlIrql: int, in_Tmp_1278: int, in_Tmp_1280: int, in_returnWithWhatsPresent: int, in_Tmp_1281: int, in_Tmp_1282: int, in_pollIrql_13: int, in_useIntervalTimer: int, in_firstStatus: int, in_sdv_946: int, in_Extension_65: int, in_boogieTmp: int, in_vslice_dummy_var_621: int, in_vslice_dummy_var_622: int, in_vslice_dummy_var_623: int, in_vslice_dummy_var_626: int) returns (out_localStatus_1: int, out_Tmp_1274: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1276: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_937: int, out_sdv_938: int, out_oldIrql_11: int, out_Tmp_1277: int, out_sdv_939: int, out_constantVal: int, out_controlIrql: int, out_Tmp_1278: int, out_Tmp_1280: int, out_returnWithWhatsPresent: int, out_Tmp_1281: int, out_Tmp_1282: int, out_pollIrql_13: int, out_useIntervalTimer: int, out_firstStatus: int, out_sdv_946: int, out_boogieTmp: int, out_vslice_dummy_var_621: int, out_vslice_dummy_var_622: int, out_vslice_dummy_var_623: int, out_vslice_dummy_var_626: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} out_localStatus_1 == 0 || out_localStatus_1 == in_localStatus_1;
  free ensures {:va_keep} out_os2ssreturn == 0 || out_os2ssreturn == 1 || out_os2ssreturn == in_os2ssreturn;
  free ensures {:va_keep} out_setFirstStatus == 1 || out_setFirstStatus == in_setFirstStatus;
  free ensures {:va_keep} out_useTotalTimer == 0 || out_useTotalTimer == 1 || out_useTotalTimer == in_useTotalTimer;
  free ensures {:va_keep} out_crunchDownToOne == 0 || out_crunchDownToOne == 1 || out_crunchDownToOne == in_crunchDownToOne;
  free ensures {:va_keep} out_returnWithWhatsPresent == 1 || out_returnWithWhatsPresent == 0 || out_returnWithWhatsPresent == in_returnWithWhatsPresent;
  free ensures {:va_keep} out_useIntervalTimer == 1 || out_useIntervalTimer == 0 || out_useIntervalTimer == in_useIntervalTimer;
  free ensures {:va_keep} out_firstStatus == 0 || out_firstStatus == -1073741536 || out_firstStatus == in_firstStatus;
  free ensures {:va_keep} out_vslice_dummy_var_621 == 1 || out_vslice_dummy_var_621 == 0 || out_vslice_dummy_var_621 == in_vslice_dummy_var_621;
  free ensures {:va_keep} out_vslice_dummy_var_622 == 0 || out_vslice_dummy_var_622 == in_vslice_dummy_var_622;
  free ensures {:va_keep} out_vslice_dummy_var_623 == 0 || out_vslice_dummy_var_623 == in_vslice_dummy_var_623;
  free ensures {:va_keep} out_vslice_dummy_var_626 == 1 || out_vslice_dummy_var_626 == 0 || out_vslice_dummy_var_626 == in_vslice_dummy_var_626;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int)
{

  entry:
    out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := in_Tmp_934, in_Tmp_954, in_numOfBytes, in_tx_6, in_Tmp_984;
    goto L183, exit;

  exit:
    return;

  L183:
    out_Tmp_954 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon170_Else;

  anon170_Else:
    assume {:partition} out_Tmp_954 != 0;
    out_Tmp_934 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_984;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    call {:si_unique_call 3025} {:si_old_unique_call 1} out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := CyzTxStart#0_loop_L183(out_Tmp_934, out_Tmp_954, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_984);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int)
{

  entry:
    out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := in_numOfLongs, in_Tmp_939, in_Tmp_950, in_Tmp_961, in_tx_6, in_Tmp_983;
    goto L182, exit;

  exit:
    return;

  L182:
    out_Tmp_950 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon169_Else;

  anon169_Else:
    assume {:partition} out_Tmp_950 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_983;
    assume {:nonnull} out_Tmp_983 != 0;
    assume out_Tmp_983 > 0;
    out_Tmp_961 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_939;
    out_tx_6 := out_tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    call {:si_unique_call 3026} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := CyzTxStart#0_loop_L182(out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, in_Extension_59, out_tx_6, out_Tmp_983);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := in_Tmp_958, in_Tmp_966, in_tx_6, in_amount1;
    goto L171, exit;

  exit:
    return;

  L171:
    goto anon150_Else;

  anon150_Else:
    assume {:partition} out_amount1 != 0;
    goto anon151_Else;

  anon151_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_958 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_966;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    call {:si_unique_call 3027} {:si_old_unique_call 1} out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := CyzTxStart#0_loop_L171(out_Tmp_958, out_Tmp_966, in_Extension_59, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int)
{

  entry:
    out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := in_Tmp_931, in_Tmp_951, in_Tmp_970, in_numOfBytes, in_tx_6;
    goto L210, exit;

  exit:
    return;

  L210:
    out_Tmp_931 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon172_Else;

  anon172_Else:
    assume {:partition} out_Tmp_931 != 0;
    out_Tmp_970 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_951;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    call {:si_unique_call 3028} {:si_old_unique_call 1} out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := CyzTxStart#0_loop_L210(out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int)
{

  entry:
    out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := in_numOfLongs, in_Tmp_945, in_Tmp_969, in_Tmp_980, in_tx_6, in_Tmp_991;
    goto L209, exit;

  exit:
    return;

  L209:
    out_Tmp_969 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon171_Else;

  anon171_Else:
    assume {:partition} out_Tmp_969 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_945;
    assume {:nonnull} out_Tmp_945 != 0;
    assume out_Tmp_945 > 0;
    out_Tmp_980 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_991;
    out_tx_6 := out_tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    call {:si_unique_call 3029} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := CyzTxStart#0_loop_L209(out_numOfLongs, out_Tmp_945, out_Tmp_969, in_Extension_59, out_Tmp_980, out_tx_6, out_Tmp_991);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int)
{

  entry:
    out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := in_Tmp_953, in_Tmp_973, in_numOfBytes, in_Tmp_974, in_tx_6;
    goto L254, exit;

  exit:
    return;

  L254:
    out_Tmp_974 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon175_Else;

  anon175_Else:
    assume {:partition} out_Tmp_974 != 0;
    out_Tmp_953 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_973;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    call {:si_unique_call 3030} {:si_old_unique_call 1} out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := CyzTxStart#0_loop_L254(out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int)
{

  entry:
    out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := in_Tmp_933, in_numOfLongs, in_Tmp_937, in_Tmp_948, in_tx_6, in_Tmp_995;
    goto L253, exit;

  exit:
    return;

  L253:
    out_Tmp_937 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon174_Else;

  anon174_Else:
    assume {:partition} out_Tmp_937 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_948;
    assume {:nonnull} out_Tmp_948 != 0;
    assume out_Tmp_948 > 0;
    out_Tmp_933 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_995;
    out_tx_6 := out_tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    call {:si_unique_call 3031} {:si_old_unique_call 1} out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := CyzTxStart#0_loop_L253(out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, in_Extension_59, out_tx_6, out_Tmp_995);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := in_Tmp_943, in_Tmp_978, in_tx_6, in_amount1;
    goto L242, exit;

  exit:
    return;

  L242:
    goto anon156_Else;

  anon156_Else:
    assume {:partition} out_amount1 != 0;
    goto anon157_Else;

  anon157_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_978 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_943;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    call {:si_unique_call 3032} {:si_old_unique_call 1} out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := CyzTxStart#0_loop_L242(out_Tmp_943, in_Extension_59, out_Tmp_978, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int)
{

  entry:
    out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := in_Tmp_963, in_Tmp_964, in_numOfBytes, in_tx_6, in_Tmp_986;
    goto L278, exit;

  exit:
    return;

  L278:
    out_Tmp_963 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} out_Tmp_963 != 0;
    out_Tmp_986 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_964;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    call {:si_unique_call 3033} {:si_old_unique_call 1} out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := CyzTxStart#0_loop_L278(out_Tmp_963, out_Tmp_964, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_986);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int)
{

  entry:
    out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := in_numOfLongs, in_Tmp_944, in_Tmp_967, in_Tmp_972, in_tx_6, in_Tmp_981;
    goto L277, exit;

  exit:
    return;

  L277:
    out_Tmp_981 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon176_Else;

  anon176_Else:
    assume {:partition} out_Tmp_981 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_967;
    assume {:nonnull} out_Tmp_967 != 0;
    assume out_Tmp_967 > 0;
    out_Tmp_944 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_972;
    out_tx_6 := out_tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    call {:si_unique_call 3034} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := CyzTxStart#0_loop_L277(out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, in_Extension_59, out_tx_6, out_Tmp_981);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int)
{

  entry:
    out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := in_Tmp_934, in_Tmp_954, in_numOfBytes, in_tx_6, in_Tmp_984;
    goto L183, exit;

  exit:
    return;

  L183:
    out_Tmp_954 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon170_Else;

  anon170_Else:
    assume {:partition} out_Tmp_954 != 0;
    out_Tmp_934 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_984;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    call {:si_unique_call 3035} {:si_old_unique_call 1} out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := CyzTxStart#1_loop_L183(out_Tmp_934, out_Tmp_954, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_984);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int)
{

  entry:
    out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := in_numOfLongs, in_Tmp_939, in_Tmp_950, in_Tmp_961, in_tx_6, in_Tmp_983;
    goto L182, exit;

  exit:
    return;

  L182:
    out_Tmp_950 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon169_Else;

  anon169_Else:
    assume {:partition} out_Tmp_950 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_983;
    assume {:nonnull} out_Tmp_983 != 0;
    assume out_Tmp_983 > 0;
    out_Tmp_961 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_939;
    out_tx_6 := out_tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    call {:si_unique_call 3036} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := CyzTxStart#1_loop_L182(out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, in_Extension_59, out_tx_6, out_Tmp_983);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := in_Tmp_958, in_Tmp_966, in_tx_6, in_amount1;
    goto L171, exit;

  exit:
    return;

  L171:
    goto anon150_Else;

  anon150_Else:
    assume {:partition} out_amount1 != 0;
    goto anon151_Else;

  anon151_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_958 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_966;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    call {:si_unique_call 3037} {:si_old_unique_call 1} out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := CyzTxStart#1_loop_L171(out_Tmp_958, out_Tmp_966, in_Extension_59, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int)
{

  entry:
    out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := in_Tmp_931, in_Tmp_951, in_Tmp_970, in_numOfBytes, in_tx_6;
    goto L210, exit;

  exit:
    return;

  L210:
    out_Tmp_931 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon172_Else;

  anon172_Else:
    assume {:partition} out_Tmp_931 != 0;
    out_Tmp_970 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_951;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    call {:si_unique_call 3038} {:si_old_unique_call 1} out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := CyzTxStart#1_loop_L210(out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int)
{

  entry:
    out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := in_numOfLongs, in_Tmp_945, in_Tmp_969, in_Tmp_980, in_tx_6, in_Tmp_991;
    goto L209, exit;

  exit:
    return;

  L209:
    out_Tmp_969 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon171_Else;

  anon171_Else:
    assume {:partition} out_Tmp_969 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_945;
    assume {:nonnull} out_Tmp_945 != 0;
    assume out_Tmp_945 > 0;
    out_Tmp_980 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_991;
    out_tx_6 := out_tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    call {:si_unique_call 3039} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := CyzTxStart#1_loop_L209(out_numOfLongs, out_Tmp_945, out_Tmp_969, in_Extension_59, out_Tmp_980, out_tx_6, out_Tmp_991);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int)
{

  entry:
    out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := in_Tmp_953, in_Tmp_973, in_numOfBytes, in_Tmp_974, in_tx_6;
    goto L254, exit;

  exit:
    return;

  L254:
    out_Tmp_974 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon175_Else;

  anon175_Else:
    assume {:partition} out_Tmp_974 != 0;
    out_Tmp_953 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_973;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    call {:si_unique_call 3040} {:si_old_unique_call 1} out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := CyzTxStart#1_loop_L254(out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int)
{

  entry:
    out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := in_Tmp_933, in_numOfLongs, in_Tmp_937, in_Tmp_948, in_tx_6, in_Tmp_995;
    goto L253, exit;

  exit:
    return;

  L253:
    out_Tmp_937 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon174_Else;

  anon174_Else:
    assume {:partition} out_Tmp_937 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_948;
    assume {:nonnull} out_Tmp_948 != 0;
    assume out_Tmp_948 > 0;
    out_Tmp_933 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_995;
    out_tx_6 := out_tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    call {:si_unique_call 3041} {:si_old_unique_call 1} out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := CyzTxStart#1_loop_L253(out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, in_Extension_59, out_tx_6, out_Tmp_995);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := in_Tmp_943, in_Tmp_978, in_tx_6, in_amount1;
    goto L242, exit;

  exit:
    return;

  L242:
    goto anon156_Else;

  anon156_Else:
    assume {:partition} out_amount1 != 0;
    goto anon157_Else;

  anon157_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_978 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_943;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    call {:si_unique_call 3042} {:si_old_unique_call 1} out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := CyzTxStart#1_loop_L242(out_Tmp_943, in_Extension_59, out_Tmp_978, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int)
{

  entry:
    out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := in_Tmp_963, in_Tmp_964, in_numOfBytes, in_tx_6, in_Tmp_986;
    goto L278, exit;

  exit:
    return;

  L278:
    out_Tmp_963 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} out_Tmp_963 != 0;
    out_Tmp_986 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_964;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    call {:si_unique_call 3043} {:si_old_unique_call 1} out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := CyzTxStart#1_loop_L278(out_Tmp_963, out_Tmp_964, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_986);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int)
{

  entry:
    out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := in_numOfLongs, in_Tmp_944, in_Tmp_967, in_Tmp_972, in_tx_6, in_Tmp_981;
    goto L277, exit;

  exit:
    return;

  L277:
    out_Tmp_981 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon176_Else;

  anon176_Else:
    assume {:partition} out_Tmp_981 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_967;
    assume {:nonnull} out_Tmp_967 != 0;
    assume out_Tmp_967 > 0;
    out_Tmp_944 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_972;
    out_tx_6 := out_tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    call {:si_unique_call 3044} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := CyzTxStart#1_loop_L277(out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, in_Extension_59, out_tx_6, out_Tmp_981);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartWrite#0_loop_L15(in_Tmp_810: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_705: int, in_OldIrql_8: int, in_NewIrp_3: int, in_sdv_708: int, in_Tmp_814: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_705: int, out_OldIrql_8: int, out_sdv_708: int, out_Tmp_814: int, out_Tmp_816: int)
{
  var vslice_dummy_var_1035: int;
  var vslice_dummy_var_1036: int;
  var vslice_dummy_var_1037: int;

  entry:
    out_Tmp_810, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_705, out_OldIrql_8, out_sdv_708, out_Tmp_814, out_Tmp_816 := in_Tmp_810, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_812, in_sdv_705, in_OldIrql_8, in_sdv_708, in_Tmp_814, in_Tmp_816;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 3045} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3046} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1036;
    call {:si_unique_call 3057} out_sdv_705 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1036);
    assume {:nonnull} out_sdv_705 != 0;
    assume out_sdv_705 > 0;
    goto anon22_Then;

  anon22_Then:
    call {:si_unique_call 3055} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;

  L41:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3052} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3053} sdv_KeAcquireSpinLock(0, out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3054} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1037;
    call {:si_unique_call 3058} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1037);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1035;
    call {:si_unique_call 3049} out_sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1035);
    assume {:nonnull} out_sdv_708 != 0;
    assume out_sdv_708 > 0;
    call {:si_unique_call 3050} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3051} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_812;
    assume {:nonnull} out_Tmp_812 != 0;
    assume out_Tmp_812 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3048} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_814;
    assume {:nonnull} out_Tmp_814 != 0;
    assume out_Tmp_814 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    call {:si_unique_call 3047} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_41), in_NewIrp_3, 1, in_Extension_41);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 3059} {:si_old_unique_call 1} out_Tmp_810, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_705, out_OldIrql_8, out_sdv_708, out_Tmp_814, out_Tmp_816 := CyzStartWrite#0_loop_L15(out_Tmp_810, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_705, out_OldIrql_8, in_NewIrp_3, out_sdv_708, out_Tmp_814, in_Timeouts_1, out_Tmp_816, in_Extension_41);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L76;

  anon27_Then:
    out_Tmp_816 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon21_Then:
    call {:si_unique_call 3056} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;
}



procedure {:LoopProcedure} CyzStartWrite#0_loop_L15(in_Tmp_810: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_705: int, in_OldIrql_8: int, in_NewIrp_3: int, in_sdv_708: int, in_Tmp_814: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_705: int, out_OldIrql_8: int, out_sdv_708: int, out_Tmp_814: int, out_Tmp_816: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartWrite#1_loop_L15(in_Tmp_810: int, in_s_p_e_c_i_a_l_21: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_705: int, in_OldIrql_8: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_23: int, in_sdv_707: int, in_sdv_708: int, in_Tmp_814: int, in_Tmp_815: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_s_p_e_c_i_a_l_21: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_705: int, out_OldIrql_8: int, out_s_p_e_c_i_a_l_23: int, out_sdv_707: int, out_sdv_708: int, out_Tmp_814: int, out_Tmp_815: int, out_Tmp_816: int)
{
  var vslice_dummy_var_1038: int;
  var vslice_dummy_var_1039: int;
  var vslice_dummy_var_1040: int;
  var vslice_dummy_var_1041: int;

  entry:
    out_Tmp_810, out_s_p_e_c_i_a_l_21, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_705, out_OldIrql_8, out_s_p_e_c_i_a_l_23, out_sdv_707, out_sdv_708, out_Tmp_814, out_Tmp_815, out_Tmp_816 := in_Tmp_810, in_s_p_e_c_i_a_l_21, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_812, in_sdv_705, in_OldIrql_8, in_s_p_e_c_i_a_l_23, in_sdv_707, in_sdv_708, in_Tmp_814, in_Tmp_815, in_Tmp_816;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 3060} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3061} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1040;
    call {:si_unique_call 3074} out_sdv_705 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1040);
    assume {:nonnull} out_sdv_705 != 0;
    assume out_sdv_705 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    out_s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1039;
    call {:si_unique_call 3070} out_sdv_707 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1039);
    assume {:nonnull} out_sdv_707 != 0;
    assume out_sdv_707 > 0;
    out_s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_707)));
    assume {:nonnull} out_s_p_e_c_i_a_l_21 != 0;
    assume out_s_p_e_c_i_a_l_21 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_21] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_21], out_s_p_e_c_i_a_l_23);
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_815;
    assume {:nonnull} out_Tmp_815 != 0;
    assume out_Tmp_815 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    call {:si_unique_call 3071} CyzTryToCompleteCurrent#0(in_Extension_41, li2bplFunctionConstant195, out_OldIrql_8, -1073741816, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(in_Extension_41), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_41), 0, 0, 16);
    goto L41;

  L41:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3067} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3068} sdv_KeAcquireSpinLock(0, out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3069} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1041;
    call {:si_unique_call 3075} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1041);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_1038;
    call {:si_unique_call 3064} out_sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1038);
    assume {:nonnull} out_sdv_708 != 0;
    assume out_sdv_708 > 0;
    call {:si_unique_call 3065} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3066} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_812;
    assume {:nonnull} out_Tmp_812 != 0;
    assume out_Tmp_812 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3063} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_814;
    assume {:nonnull} out_Tmp_814 != 0;
    assume out_Tmp_814 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    call {:si_unique_call 3062} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_41), in_NewIrp_3, 1, in_Extension_41);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 3076} {:si_old_unique_call 1} out_Tmp_810, out_s_p_e_c_i_a_l_21, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_705, out_OldIrql_8, out_s_p_e_c_i_a_l_23, out_sdv_707, out_sdv_708, out_Tmp_814, out_Tmp_815, out_Tmp_816 := CyzStartWrite#1_loop_L15(out_Tmp_810, out_s_p_e_c_i_a_l_21, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_705, out_OldIrql_8, in_NewIrp_3, out_s_p_e_c_i_a_l_23, out_sdv_707, out_sdv_708, out_Tmp_814, out_Tmp_815, in_Timeouts_1, out_Tmp_816, in_Extension_41);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L76;

  anon27_Then:
    out_Tmp_816 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon22_Then:
    call {:si_unique_call 3072} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;

  anon21_Then:
    call {:si_unique_call 3073} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;
}



procedure {:LoopProcedure} CyzStartWrite#1_loop_L15(in_Tmp_810: int, in_s_p_e_c_i_a_l_21: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_705: int, in_OldIrql_8: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_23: int, in_sdv_707: int, in_sdv_708: int, in_Tmp_814: int, in_Tmp_815: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_s_p_e_c_i_a_l_21: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_705: int, out_OldIrql_8: int, out_s_p_e_c_i_a_l_23: int, out_sdv_707: int, out_sdv_708: int, out_Tmp_814: int, out_Tmp_815: int, out_Tmp_816: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_23 == 16 || out_s_p_e_c_i_a_l_23 == in_s_p_e_c_i_a_l_23;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_1159: int, dup_assertVar: bool);
  modifies alloc, start_irql, yogi_error, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_1159: int, dup_assertVar: bool)
{

  start:
    call Tmp_1159, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


