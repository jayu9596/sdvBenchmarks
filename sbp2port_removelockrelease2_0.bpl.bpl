var {:scalar} alloc: int;

var {:scalar} sdv_compFset: int;

var {:scalar} sdv_invoke_on_error: int;

var {:scalar} sdv_invoke_on_cancel: int;

var {:scalar} sdv_invoke_on_success: int;

var {:scalar} LockDepth: int;

var {:scalar} yogi_error: int;

var {:scalar} Mem_T.Busy__KDEVICE_QUEUE: [int]int;

var {:scalar} Mem_T.CurrentStackLocation_unnamed_tag_6: [int]int;

var {:scalar} Mem_T.DeviceState__POWER_STATE: [int]int;

var {:scalar} Mem_T.MajorFunction__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.MinorFunction__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.Type_unnamed_tag_37: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const BUS1394_CLASS_GUID: int;

const WmiScsiAddressGuid: int;

const GUID_DEVINTERFACE_STORAGEPORT: int;

const GUID_DEVINTERFACE_FLOPPY: int;

const GUID_DEVINTERFACE_WRITEONCEDISK: int;

const GUID_DEVINTERFACE_TAPE: int;

const GUID_DEVINTERFACE_VOLUME: int;

const GUID_DEVINTERFACE_CDCHANGER: int;

const GUID_DEVINTERFACE_MEDIUMCHANGER: int;

const ScsiRawInterfaceGuid: int;

const GUID_DEVINTERFACE_PARTITION: int;

const GUID_DEVINTERFACE_CDROM: int;

const GUID_DEVINTERFACE_HIDDEN_VOLUME: int;

const GUID_DEVINTERFACE_DISK: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const KiBugCheckData: int;

const PortBugcheckData: int;

const GUID_BUS_TYPE_PCMCIA: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const MmHighestUserAddress: int;

const sdv_cancelFptr: int;

procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_2: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2 == 0 || Tmp_2 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_2: int)
{
  var {:scalar} i: int;
  var {:scalar} Tmp_3: int;
  var {:scalar} DataLength: int;
  var {:scalar} Tmp_6: int;
  var {:scalar} u: int;
  var {:scalar} sdv: int;
  var {:pointer} pData: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} sdv_2: int;
  var {:scalar} ntStatus: int;
  var {:scalar} Tmp_8: int;
  var {:pointer} sdv_3: int;
  var {:pointer} Tmp_9: int;
  var {:pointer} sdv_5: int;
  var {:scalar} Tmp_12: int;
  var {:scalar} uChar: int;
  var {:pointer} Tmp_13: int;
  var {:scalar} Tmp_14: int;
  var {:pointer} TextLeaf: int;
  var {:pointer} uniString: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 1} u := __HAVOC_malloc(20);
    call {:si_unique_call 2} vslice_dummy_var_1 := __HAVOC_malloc(12);
    TextLeaf := actual_TextLeaf;
    uniString := actual_uniString;
    ntStatus := 0;
    pData := 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L16;

  L16:
    Tmp_2 := ntStatus;
    goto L1;

  L1:
    return;

  anon35_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    DataLength := 0;
    goto L25;

  L25:
    ulUnicode := sdv_2;
    Tmp_12 := DataLength * 4 + 2;
    call {:si_unique_call 3} sdv_3 := ExAllocatePoolWithTag(0, Tmp_12, 846226003);
    pData := sdv_3;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} pData != 0;
    Tmp_6 := DataLength * 4 + 2;
    call {:si_unique_call 4} sdv_RtlZeroMemory(0, Tmp_6);
    Tmp_3 := DataLength * 4;
    call {:si_unique_call 5} sdv_RtlCopyMemory(0, 0, Tmp_3);
    i := 0;
    goto L46;

  L46:
    call {:si_unique_call 6} i, Tmp_9, uChar, Tmp_13 := Sbp2_ProcessTextualDescriptor_loop_L46(i, DataLength, pData, ulUnicode, Tmp_9, uChar, Tmp_13);
    goto L46_last;

  L46_last:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} DataLength * 4 <= i;
    goto L58;

  L58:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_14;
    call {:si_unique_call 7} sdv_5 := ExAllocatePoolWithTag(0, Tmp_14, 846226003);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_8;
    call {:si_unique_call 8} sdv_RtlZeroMemory(0, Tmp_8);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 9} vslice_dummy_var_3 := corral_nondet();
    goto L77;

  L77:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 10} sdv_ExFreePool(0);
    goto L78;

  L78:
    Tmp_2 := ntStatus;
    goto L1;

  anon34_Then:
    assume {:partition} pData == 0;
    goto L78;

  anon33_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 11} RtlInitAnsiString(0, 0);
    call {:si_unique_call 12} vslice_dummy_var_2 := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L77;

  anon39_Then:
    ntStatus := -1073741670;
    goto L77;

  anon28_Then:
    assume {:partition} i < DataLength * 4;
    Tmp_13 := pData;
    assume {:nonnull} Tmp_13 != 0;
    assume Tmp_13 > 0;
    havoc uChar;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} uChar == 0;
    goto L58;

  anon38_Then:
    assume {:partition} uChar != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} uChar == 44;
    goto L53;

  L53:
    Tmp_9 := pData;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    goto L54;

  L54:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    i := i + 1;
    goto L55;

  L55:
    i := i + 1;
    goto L55_dummy;

  L55_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L55;

  anon29_Then:
    assume {:partition} uChar != 44;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 32 <= uChar;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} uChar <= 127;
    goto L54;

  anon32_Then:
    assume {:partition} 127 < uChar;
    goto L53;

  anon30_Then:
    assume {:partition} uChar < 32;
    goto L53;

  anon37_Then:
    assume {:partition} pData == 0;
    ntStatus := -1073741670;
    goto L77;

  anon36_Then:
    assume {:nonnull} u != 0;
    assume u > 0;
    havoc DataLength;
    goto L25;

  anon27_Then:
    goto L16;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo(actual_DeviceExtension: int) returns (Tmp_48: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo(actual_DeviceExtension: int) returns (Tmp_48: int)
{
  var {:scalar} Tmp_49: int;
  var {:pointer} Tmp_50: int;
  var {:pointer} Tmp_51: int;
  var {:pointer} Tmp_52: int;
  var {:pointer} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:scalar} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:pointer} Tmp_57: int;
  var {:scalar} Tmp_58: int;
  var {:pointer} Tmp_59: int;
  var {:scalar} Tmp_60: int;
  var {:pointer} Tmp_61: int;
  var {:scalar} Tmp_62: int;
  var {:pointer} Tmp_63: int;
  var {:pointer} Tmp_65: int;
  var {:scalar} Tmp_66: int;
  var {:scalar} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} Tmp_69: int;
  var {:pointer} Tmp_70: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:scalar} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:scalar} status_2: int;
  var {:pointer} packet: int;
  var {:pointer} Tmp_80: int;
  var {:pointer} DeviceExtension: int;
  var boogieTmp: int;
  var vslice_dummy_var_3085: int;
  var vslice_dummy_var_3086: int;
  var vslice_dummy_var_3087: int;
  var vslice_dummy_var_3088: int;
  var vslice_dummy_var_3089: int;

  anon0:
    call {:si_unique_call 13} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 14} packet := __HAVOC_malloc(4);
    DeviceExtension := actual_DeviceExtension;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 15} AllocateIrpAndIrb(DeviceExtension, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_63;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_57;
    assume {:nonnull} Tmp_57 != 0;
    assume Tmp_57 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_3085;
    call {:si_unique_call 16} status_2 := Sbp2SendRequest#1(DeviceExtension, vslice_dummy_var_3085, 2);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_2 < 0;
    goto L93;

  L93:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_3086;
    call {:si_unique_call 17} DeAllocateIrpAndIrb(DeviceExtension, vslice_dummy_var_3086);
    Tmp_48 := status_2;
    goto L1;

  L1:
    return;

  anon50_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    call {:si_unique_call 18} boogieTmp := corral_nondet();
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  L32:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_65;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_3087;
    call {:si_unique_call 19} status_2 := Sbp2SendRequest#1(DeviceExtension, vslice_dummy_var_3087, 2);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_2 < 0;
    goto L93;

  anon51_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_78 := 128;
    goto L48;

  L48:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L43;

  L43:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_67 := 128;
    goto L59;

  L59:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L54;

  L54:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_61;
    assume {:nonnull} Tmp_61 != 0;
    assume Tmp_61 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_69;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_77;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_3088;
    call {:si_unique_call 20} status_2 := Sbp2SendRequest#1(DeviceExtension, vslice_dummy_var_3088, 2);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_2 < 0;
    goto L93;

  anon58_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_70;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_80;
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_59;
    assume {:nonnull} Tmp_59 != 0;
    assume Tmp_59 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_3089;
    call {:si_unique_call 21} status_2 := Sbp2SendRequest#1(DeviceExtension, vslice_dummy_var_3089, 2);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_2 >= 0;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_60;
    goto L89;

  L89:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_71;
    assume {:nonnull} Tmp_71 != 0;
    assume Tmp_71 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_51;
    assume {:nonnull} Tmp_51 != 0;
    assume Tmp_51 > 0;
    havoc Tmp_66;
    goto L92;

  L92:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_53;
    assume {:nonnull} Tmp_53 != 0;
    assume Tmp_53 > 0;
    goto L93;

  anon71_Then:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_58;
    goto L99;

  L99:
    Tmp_66 := Tmp_58;
    goto L92;

  anon62_Then:
    Tmp_58 := 2093056;
    goto L99;

  anon61_Then:
    Tmp_60 := 2093056;
    goto L89;

  anon60_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_73;
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_72;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    havoc Tmp_62;
    goto L102;

  L102:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_76;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    goto L93;

  anon72_Then:
    Tmp_62 := 2093056;
    goto L102;

  anon59_Then:
    assume {:partition} 0 > status_2;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_52;
    assume {:nonnull} Tmp_52 != 0;
    assume Tmp_52 > 0;
    status_2 := 0;
    goto L93;

  anon57_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_67;
    goto L59;

  anon69_Then:
    goto L54;

  anon53_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_55 := 112;
    goto L63;

  L63:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L54;

  anon56_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_55;
    goto L63;

  anon55_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_78;
    goto L48;

  anon68_Then:
    goto L43;

  anon52_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    Tmp_49 := 112;
    goto L52;

  L52:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L43;

  anon54_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc Tmp_49;
    goto L52;

  anon63_Then:
    goto L24;

  L24:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon64_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon65_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon66_Then:
    goto L24;

  anon67_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon70_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto L32;

  anon49_Then:
    Tmp_48 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_DeviceExtension_1: int, actual_Sbp2Req: int) returns (Tmp_82: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_DeviceExtension_1: int, actual_Sbp2Req: int) returns (Tmp_82: int)
{
  var {:scalar} sdv_42: int;
  var {:pointer} unitDependentDirectory: int;
  var {:scalar} sdv_43: int;
  var {:pointer} Tmp_84: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} sdv_45: int;
  var {:pointer} Tmp_89: int;
  var {:scalar} sdv_47: int;
  var {:scalar} Tmp_90: int;
  var {:scalar} sdv_49: int;
  var {:pointer} Tmp_93: int;
  var {:scalar} cromOffset: int;
  var {:pointer} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:scalar} Tmp_97: int;
  var {:pointer} Tmp_98: int;
  var {:pointer} Tmp_99: int;
  var {:pointer} Tmp_100: int;
  var {:pointer} Tmp_101: int;
  var {:pointer} Tmp_102: int;
  var {:scalar} directoryLength: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} Tmp_107: int;
  var {:scalar} sdv_53: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:scalar} modelIdCount: int;
  var {:pointer} Tmp_112: int;
  var {:scalar} dirInfoQuad: int;
  var {:pointer} Tmp_113: int;
  var {:scalar} devListSize: int;
  var {:pointer} Tmp_114: int;
  var {:scalar} firstOne: int;
  var {:scalar} sdv_57: int;
  var {:pointer} Tmp_115: int;
  var {:pointer} Tmp_116: int;
  var {:scalar} sdv_58: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} sdv_59: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_120: int;
  var {:scalar} sdv_60: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:scalar} directoryLocation: int;
  var {:pointer} Tmp_126: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} Tmp_133: int;
  var {:scalar} i_1: int;
  var {:scalar} depDirLength: int;
  var {:scalar} sdv_63: int;
  var {:scalar} sbp2Device: int;
  var {:pointer} firstDevInfo: int;
  var {:scalar} cromOffset1: int;
  var {:pointer} Tmp_137: int;
  var {:pointer} ModelLeaf: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} ModelLeaf_1: int;
  var {:scalar} sdv_66: int;
  var {:scalar} sdv_67: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:pointer} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:scalar} j: int;
  var {:scalar} sdv_69: int;
  var {:scalar} Tmp_147: int;
  var {:pointer} Tmp_149: int;
  var {:scalar} Tmp_150: int;
  var {:scalar} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} devInfo: int;
  var {:scalar} unitDirEntries: int;
  var {:scalar} sdv_72: int;
  var {:pointer} sdv_73: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:scalar} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:scalar} sdv_74: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_159: int;
  var {:scalar} currentGeneration: int;
  var {:scalar} Tmp_161: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} Tmp_165: int;
  var {:pointer} Tmp_166: int;
  var {:pointer} vendorLeaf: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_168: int;
  var {:pointer} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:pointer} unitDirectory: int;
  var {:pointer} ModelLeaf_2: int;
  var {:scalar} status_3: int;
  var {:pointer} packet_1: int;
  var {:pointer} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:scalar} sdv_79: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} info: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:scalar} Tmp_183: int;
  var {:scalar} offset: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} modelLeaf: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:scalar} sdv_80: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} Tmp_189: int;
  var {:pointer} DeviceExtension_1: int;
  var {:pointer} Sbp2Req: int;
  var boogieTmp: int;
  var vslice_dummy_var_3090: int;
  var vslice_dummy_var_3091: int;
  var vslice_dummy_var_3092: int;
  var vslice_dummy_var_3093: int;
  var vslice_dummy_var_3094: int;
  var vslice_dummy_var_3095: int;
  var vslice_dummy_var_3096: int;
  var vslice_dummy_var_3097: int;
  var vslice_dummy_var_3098: int;
  var vslice_dummy_var_3099: int;
  var vslice_dummy_var_3100: int;
  var vslice_dummy_var_3101: int;
  var vslice_dummy_var_3102: int;

  anon0:
    call {:si_unique_call 22} cromOffset := __HAVOC_malloc(16);
    call {:si_unique_call 23} directoryLocation := __HAVOC_malloc(16);
    call {:si_unique_call 24} cromOffset1 := __HAVOC_malloc(16);
    call {:si_unique_call 25} ModelLeaf := __HAVOC_malloc(4);
    call {:si_unique_call 26} ModelLeaf_1 := __HAVOC_malloc(4);
    call {:si_unique_call 27} ModelLeaf_2 := __HAVOC_malloc(4);
    call {:si_unique_call 28} packet_1 := __HAVOC_malloc(4);
    DeviceExtension_1 := actual_DeviceExtension_1;
    Sbp2Req := actual_Sbp2Req;
    call {:si_unique_call 29} Tmp_89 := __HAVOC_malloc(2560);
    call {:si_unique_call 30} Tmp_94 := __HAVOC_malloc(2560);
    call {:si_unique_call 31} Tmp_95 := __HAVOC_malloc(2560);
    call {:si_unique_call 32} Tmp_153 := __HAVOC_malloc(2560);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc devListSize;
    modelIdCount := 0;
    unitDirEntries := 0;
    sbp2Device := 0;
    firstOne := 0;
    unitDirectory := 0;
    unitDependentDirectory := 0;
    modelLeaf := 0;
    vendorLeaf := 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 33} AllocateIrpAndIrb(DeviceExtension_1, packet_1);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_113;
    assume {:nonnull} Tmp_113 != 0;
    assume Tmp_113 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_182;
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_3090;
    call {:si_unique_call 34} status_3 := Sbp2SendRequest#1(DeviceExtension_1, vslice_dummy_var_3090, 2);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} status_3 < 0;
    goto L72;

  L72:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_3091;
    call {:si_unique_call 35} DeAllocateIrpAndIrb(DeviceExtension_1, vslice_dummy_var_3091);
    goto L73;

  L73:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} unitDirectory != 0;
    call {:si_unique_call 36} sdv_ExFreePool(0);
    goto L77;

  L77:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} unitDependentDirectory != 0;
    call {:si_unique_call 37} sdv_ExFreePool(0);
    goto L81;

  L81:
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} vendorLeaf != 0;
    call {:si_unique_call 38} sdv_ExFreePool(0);
    goto L85;

  L85:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} modelLeaf != 0;
    call {:si_unique_call 39} sdv_ExFreePool(0);
    goto L89;

  L89:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Sbp2Req != 0;
    goto L94;

  L94:
    Tmp_82 := status_3;
    goto L1;

  L1:
    return;

  anon168_Then:
    assume {:partition} Sbp2Req == 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto L94;

  anon167_Then:
    assume {:partition} modelLeaf == 0;
    goto L89;

  anon166_Then:
    assume {:partition} vendorLeaf == 0;
    goto L85;

  anon165_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L81;

  anon164_Then:
    assume {:partition} unitDirectory == 0;
    goto L77;

  anon163_Then:
    goto L73;

  anon160_Then:
    assume {:partition} 0 <= status_3;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_98;
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_144;
    assume {:nonnull} Tmp_144 != 0;
    assume Tmp_144 > 0;
    havoc vslice_dummy_var_3092;
    call {:si_unique_call 40} unitDirectory := ExAllocatePoolWithTag(0, vslice_dummy_var_3092, 846226003);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} unitDirectory != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_169;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_168;
    assume {:nonnull} Tmp_168 != 0;
    assume Tmp_168 > 0;
    havoc vslice_dummy_var_3093;
    call {:si_unique_call 41} unitDependentDirectory := ExAllocatePoolWithTag(0, vslice_dummy_var_3093, 846226003);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} unitDependentDirectory == 0;
    status_3 := -1073741670;
    goto L72;

  anon162_Then:
    assume {:partition} unitDependentDirectory != 0;
    goto L64;

  L64:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_145;
    assume {:nonnull} Tmp_145 != 0;
    assume Tmp_145 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_102;
    assume {:nonnull} Tmp_102 != 0;
    assume Tmp_102 > 0;
    havoc vslice_dummy_var_3094;
    call {:si_unique_call 42} vendorLeaf := ExAllocatePoolWithTag(0, vslice_dummy_var_3094, 846226003);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_109;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    goto L95;

  L95:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_107;
    assume {:nonnull} Tmp_107 != 0;
    assume Tmp_107 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_101;
    assume {:nonnull} Tmp_101 != 0;
    assume Tmp_101 > 0;
    havoc vslice_dummy_var_3095;
    call {:si_unique_call 43} modelLeaf := ExAllocatePoolWithTag(0, vslice_dummy_var_3095, 846226003);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_84;
    assume {:nonnull} Tmp_84 != 0;
    assume Tmp_84 > 0;
    goto L104;

  L104:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_110;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_124;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_112;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_116;
    assume {:nonnull} Tmp_116 != 0;
    assume Tmp_116 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_106;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_3096;
    call {:si_unique_call 44} status_3 := Sbp2SendRequest#1(DeviceExtension_1, vslice_dummy_var_3096, 2);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_154;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_3097;
    call {:si_unique_call 45} status_3 := Sbp2SendRequest#1(DeviceExtension_1, vslice_dummy_var_3097, 2);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    havoc currentGeneration;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_163;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} Sbp2Req != 0;
    goto L137;

  L137:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 46} directoryLength := corral_nondet();
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_89;
    firstDevInfo := Tmp_89;
    i_1 := 1;
    goto L141;

  L141:
    call {:si_unique_call 47} unitDependentDirectory, Tmp_86, Tmp_93, Tmp_94, Tmp_95, Tmp_97, Tmp_99, Tmp_100, Tmp_111, modelIdCount, dirInfoQuad, devListSize, firstOne, Tmp_115, Tmp_118, sdv_59, Tmp_119, Tmp_120, Tmp_122, Tmp_126, Tmp_127, Tmp_128, Tmp_133, i_1, depDirLength, sbp2Device, Tmp_137, Tmp_139, Tmp_142, Tmp_143, j, Tmp_147, Tmp_149, Tmp_150, Tmp_151, Tmp_152, devInfo, unitDirEntries, sdv_73, Tmp_155, Tmp_158, Tmp_159, Tmp_161, Tmp_162, Tmp_164, Tmp_165, Tmp_166, Tmp_170, status_3, Tmp_174, Tmp_176, Tmp_177, info, Tmp_183, offset, Tmp_185, Tmp_186, Tmp_187, Tmp_188, Tmp_189 := Sbp2Get1394ConfigInfo_loop_L141(sdv_42, unitDependentDirectory, sdv_43, Tmp_86, sdv_45, sdv_47, sdv_49, Tmp_93, cromOffset, Tmp_94, Tmp_95, Tmp_97, Tmp_99, Tmp_100, directoryLength, Tmp_111, modelIdCount, dirInfoQuad, devListSize, firstOne, sdv_57, Tmp_115, sdv_58, Tmp_118, sdv_59, Tmp_119, Tmp_120, sdv_60, Tmp_122, directoryLocation, Tmp_126, Tmp_127, Tmp_128, Tmp_133, i_1, depDirLength, sdv_63, sbp2Device, firstDevInfo, cromOffset1, Tmp_137, ModelLeaf, Tmp_139, ModelLeaf_1, sdv_66, sdv_67, Tmp_142, Tmp_143, j, sdv_69, Tmp_147, Tmp_149, Tmp_150, Tmp_151, Tmp_152, devInfo, unitDirEntries, sdv_72, sdv_73, Tmp_155, sdv_74, Tmp_158, Tmp_159, currentGeneration, Tmp_161, Tmp_162, Tmp_164, Tmp_165, Tmp_166, vendorLeaf, Tmp_170, unitDirectory, ModelLeaf_2, status_3, packet_1, Tmp_174, Tmp_176, sdv_79, Tmp_177, info, Tmp_183, offset, Tmp_185, modelLeaf, Tmp_186, Tmp_187, sdv_80, Tmp_188, Tmp_189, DeviceExtension_1, Sbp2Req);
    goto L141_last;

  L141_last:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} directoryLength > i_1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Sbp2Req != 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L169;

  L169:
    i_1 := i_1 + 1;
    goto L169_dummy;

  L169_dummy:
    assume false;
    return;

  anon176_Then:
    Tmp_93 := unitDirectory;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    havoc Tmp_150;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Tmp_150 != 129;
    goto L169;

  anon217_Then:
    assume {:partition} Tmp_150 == 129;
    Tmp_149 := unitDirectory;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    havoc Tmp_165;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L169;

  anon218_Then:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 48} Sbp2ParseTextLeaf(DeviceExtension_1, unitDirectory, cromOffset, Buffer_unnamed_tag_69(RetrieveTextLeaf_unnamed_tag_68(u__SBP2_REQUEST(Sbp2Req))));
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 49} boogieTmp := corral_nondet();
    status_3 := 0;
    goto L142;

  L142:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Sbp2Req == 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} sbp2Device != 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} 2 > unitDirEntries;
    goto L491;

  L491:
    status_3 := -1073741621;
    goto L72;

  anon199_Then:
    assume {:partition} unitDirEntries >= 2;
    goto L72;

  anon198_Then:
    assume {:partition} sbp2Device == 0;
    goto L491;

  anon174_Then:
    assume {:partition} Sbp2Req != 0;
    goto L72;

  anon177_Then:
    status_3 := -1073741823;
    goto L142;

  anon175_Then:
    assume {:partition} Sbp2Req == 0;
    Tmp_147 := devListSize;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_94;
    devInfo := Tmp_94 + Tmp_147 * 256;
    Tmp_111 := unitDirectory;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} firstOne != 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    call {:si_unique_call 50} sdv_73 := IoAllocateMdl(0, depDirLength, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_189;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_186;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_126;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_166;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_177;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_3098;
    call {:si_unique_call 51} status_3 := Sbp2SendRequest#1(DeviceExtension_1, vslice_dummy_var_3098, 2);
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 52} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    call {:si_unique_call 53} dirInfoQuad := corral_nondet();
    depDirLength := dirInfoQuad * 4;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} depDirLength <= 256;
    call {:si_unique_call 54} sdv_ExFreePool(0);
    Tmp_161 := depDirLength + 4;
    call {:si_unique_call 55} unitDependentDirectory := ExAllocatePoolWithTag(0, Tmp_161, 846226035);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} unitDependentDirectory != 0;
    Tmp_183 := depDirLength + 4;
    call {:si_unique_call 56} sdv_59 := IoAllocateMdl(0, Tmp_183, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_99;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_100;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    j := 1;
    goto L245;

  L245:
    call {:si_unique_call 57} Tmp_86, modelIdCount, devListSize, Tmp_122, Tmp_133, Tmp_139, j, Tmp_152, unitDirEntries, Tmp_170, status_3, Tmp_174, Tmp_176, Tmp_185, Tmp_187 := Sbp2Get1394ConfigInfo_loop_L245(unitDependentDirectory, Tmp_86, sdv_45, sdv_49, modelIdCount, devListSize, Tmp_122, Tmp_133, depDirLength, firstDevInfo, cromOffset1, Tmp_139, j, Tmp_152, devInfo, unitDirEntries, sdv_74, vendorLeaf, Tmp_170, ModelLeaf_2, status_3, packet_1, Tmp_174, Tmp_176, sdv_79, offset, Tmp_185, Tmp_187, DeviceExtension_1);
    goto L245_last;

  L245_last:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_122;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_187;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_174;
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_185;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_3102;
    call {:si_unique_call 79} status_3 := Sbp2SendRequest#1(DeviceExtension_1, vslice_dummy_var_3102, 2);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} status_3 >= 0;
    Tmp_152 := unitDependentDirectory;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    havoc Tmp_170;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} Tmp_170 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 58} status_3 := Sbp2_ProcessTextualDescriptor(vendorLeaf, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L272;

  L272:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto L277;

  L277:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L281;

  L281:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L283;

  L283:
    unitDirEntries := unitDirEntries + 1;
    goto L258;

  L258:
    Tmp_139 := unitDependentDirectory;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L310;

  L310:
    j := j + 1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} INTDIV(depDirLength, 4) < j;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 59} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_188;
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    goto L169;

  anon230_Then:
    assume {:partition} j <= INTDIV(depDirLength, 4);
    goto anon230_Then_dummy;

  anon230_Then_dummy:
    assume false;
    return;

  anon208_Then:
    Tmp_86 := unitDependentDirectory;
    assume {:nonnull} Tmp_86 != 0;
    assume Tmp_86 > 0;
    havoc Tmp_133;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Tmp_133 != 23;
    goto L310;

  anon231_Then:
    assume {:partition} Tmp_133 == 23;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    call {:si_unique_call 60} Sbp2ParseTextLeaf(DeviceExtension_1, unitDependentDirectory, cromOffset1, ModelLeaf_2);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_3099;
    call {:si_unique_call 61} status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3099, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 62} sdv_ExFreePool(0);
    goto L302;

  L302:
    modelIdCount := modelIdCount + 1;
    goto L310;

  anon185_Then:
    goto L302;

  anon209_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L310;

  anon229_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L310;

  anon184_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L283;

  anon183_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L281;

  anon182_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L279;

  anon228_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L277;

  anon227_Then:
    assume {:partition} vendorLeaf == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L272;

  anon226_Then:
    assume {:partition} Tmp_170 != 20;
    goto L258;

  anon181_Then:
    assume {:partition} 0 > status_3;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 63} IoFreeMdl(0);
    goto L72;

  anon225_Then:
    goto L72;

  anon180_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L72;

  anon224_Then:
    assume {:partition} 256 < depDirLength;
    goto L72;

  anon179_Then:
    assume {:partition} 0 > status_3;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 64} IoFreeMdl(0);
    goto L72;

  anon223_Then:
    goto L72;

  anon178_Then:
    assume {:partition} firstOne == 0;
    firstOne := 1;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 65} depDirLength := corral_nondet();
    j := 0;
    goto L333;

  L333:
    call {:si_unique_call 66} Tmp_97, modelIdCount, devListSize, Tmp_119, Tmp_120, Tmp_128, j, unitDirEntries, Tmp_155, Tmp_159, status_3 := Sbp2Get1394ConfigInfo_loop_L333(unitDependentDirectory, sdv_43, Tmp_97, modelIdCount, devListSize, sdv_58, Tmp_119, Tmp_120, Tmp_128, depDirLength, firstDevInfo, cromOffset1, ModelLeaf_1, sdv_67, j, sdv_69, devInfo, unitDirEntries, Tmp_155, Tmp_159, vendorLeaf, status_3, packet_1, modelLeaf, DeviceExtension_1);
    goto L333_last;

  L333_last:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} depDirLength > j;
    Tmp_128 := unitDependentDirectory;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    havoc Tmp_155;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Tmp_155 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} devListSize > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L347;

  L347:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 67} status_3 := Sbp2_ProcessTextualDescriptor(vendorLeaf, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L353;

  L353:
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L357;

  L357:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L359;

  L359:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L361;

  L361:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L363;

  L363:
    unitDirEntries := unitDirEntries + 1;
    goto L336;

  L336:
    Tmp_120 := unitDependentDirectory;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L396;

  L396:
    j := j + 1;
    goto L396_dummy;

  L396_dummy:
    assume false;
    return;

  anon210_Then:
    Tmp_119 := unitDependentDirectory;
    assume {:nonnull} Tmp_119 != 0;
    assume Tmp_119 > 0;
    havoc Tmp_97;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} Tmp_97 != 23;
    goto L396;

  anon236_Then:
    assume {:partition} Tmp_97 == 23;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    call {:si_unique_call 68} Sbp2ParseTextLeaf(DeviceExtension_1, unitDependentDirectory, cromOffset1, ModelLeaf_1);
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_3100;
    call {:si_unique_call 69} status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3100, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 70} sdv_ExFreePool(0);
    goto L377;

  L377:
    modelIdCount := modelIdCount + 1;
    goto L396;

  anon193_Then:
    goto L377;

  anon192_Then:
    goto L377;

  anon211_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L396;

  anon235_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L396;

  anon191_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L363;

  anon190_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L361;

  anon189_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L359;

  anon234_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L357;

  anon188_Then:
    assume {:partition} vendorLeaf == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L353;

  anon233_Then:
    assume {:partition} 0 >= devListSize;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 71} status_3 := Sbp2_ProcessTextualDescriptor(modelLeaf, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L347;

  anon187_Then:
    assume {:partition} modelLeaf == 0;
    goto L347;

  anon232_Then:
    assume {:partition} Tmp_155 != 20;
    goto L336;

  anon186_Then:
    assume {:partition} j >= depDirLength;
    goto L169;

  anon201_Then:
    goto L169;

  anon202_Then:
    Tmp_164 := unitDirectory;
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc Tmp_142;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} Tmp_142 == 23;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} devListSize >= modelIdCount;
    Tmp_151 := modelIdCount;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_95;
    info := Tmp_95 + Tmp_151 * 256;
    assume {:nonnull} info != 0;
    assume info > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset1 != 0;
    assume cromOffset1 > 0;
    call {:si_unique_call 72} Sbp2ParseTextLeaf(DeviceExtension_1, unitDirectory, cromOffset1, ModelLeaf);
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_3101;
    call {:si_unique_call 73} status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3101, uniModelId__DEVICE_INFORMATION(info));
    call {:si_unique_call 74} sdv_ExFreePool(0);
    goto L416;

  L416:
    modelIdCount := modelIdCount + 1;
    goto L169;

  anon195_Then:
    goto L416;

  anon222_Then:
    goto L416;

  anon194_Then:
    assume {:partition} modelIdCount > devListSize;
    goto L169;

  anon221_Then:
    assume {:partition} Tmp_142 != 23;
    goto L169;

  anon203_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    sbp2Device := 1;
    goto L169;

  anon204_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L169;

  anon205_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon206_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon207_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon219_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} devListSize != 0;
    goto L470;

  L470:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 75} status_3 := Sbp2_ProcessTextualDescriptor(vendorLeaf, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L476;

  L476:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L169;

  anon197_Then:
    assume {:partition} vendorLeaf == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L476;

  anon220_Then:
    assume {:partition} devListSize == 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 76} status_3 := Sbp2_ProcessTextualDescriptor(modelLeaf, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L470;

  anon196_Then:
    assume {:partition} modelLeaf == 0;
    goto L470;

  anon173_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L142;

  anon216_Then:
    assume {:partition} Sbp2Req == 0;
    i_1 := 0;
    goto L493;

  L493:
    call {:si_unique_call 77} Tmp_90, i_1, devInfo, Tmp_153 := Sbp2Get1394ConfigInfo_loop_L493(Tmp_90, i_1, devInfo, Tmp_153, DeviceExtension_1);
    goto L493_last;

  L493_last:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    Tmp_90 := i_1;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc Tmp_153;
    devInfo := Tmp_153 + Tmp_90 * 256;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 78} sdv_ExFreePool(0);
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L497;

  L497:
    i_1 := i_1 + 1;
    goto L497_dummy;

  L497_dummy:
    assume false;
    return;

  anon237_Then:
    goto L497;

  anon200_Then:
    devListSize := 0;
    goto L137;

  anon172_Then:
    assume {:partition} 0 > status_3;
    goto L72;

  anon171_Then:
    assume {:partition} 0 > status_3;
    goto L72;

  anon170_Then:
    assume {:partition} modelLeaf == 0;
    status_3 := -1073741670;
    goto L72;

  anon215_Then:
    goto L104;

  anon169_Then:
    assume {:partition} vendorLeaf == 0;
    status_3 := -1073741670;
    goto L72;

  anon214_Then:
    goto L95;

  anon213_Then:
    goto L64;

  anon161_Then:
    assume {:partition} unitDirectory == 0;
    status_3 := -1073741670;
    goto L72;

  anon212_Then:
    status_3 := -1073741621;
    goto L72;

  anon159_Then:
    Tmp_82 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_DeviceExtension_2: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_DeviceExtension_2: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_241: int;
  var {:pointer} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:pointer} Tmp_246: int;
  var {:scalar} waitValue_1: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:scalar} Tmp_252: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:pointer} leaf: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} tModelLeaf: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:pointer} sdv_121: int;
  var {:pointer} Tmp_260: int;
  var {:scalar} currentGeneration_1: int;
  var {:pointer} Tmp_261: int;
  var {:scalar} retries: int;
  var {:scalar} temp_2: int;
  var {:pointer} Tmp_262: int;
  var {:pointer} tModelLeafMdl: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} leafLength: int;
  var {:pointer} Tmp_270: int;
  var {:pointer} packet_2: int;
  var {:scalar} status_6: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:scalar} event: int;
  var {:pointer} DeviceExtension_2: int;
  var {:pointer} ModelLeafLocation: int;
  var {:pointer} ModelLeaf_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_3103: int;
  var vslice_dummy_var_3104: int;
  var vslice_dummy_var_3105: int;
  var vslice_dummy_var_3106: int;
  var vslice_dummy_var_3107: int;
  var vslice_dummy_var_3108: int;
  var vslice_dummy_var_3109: int;
  var vslice_dummy_var_3110: int;
  var vslice_dummy_var_3111: int;
  var vslice_dummy_var_3112: int;

  anon0:
    call {:si_unique_call 80} waitValue_1 := __HAVOC_malloc(20);
    call {:si_unique_call 81} vslice_dummy_var_4 := __HAVOC_malloc(4);
    call {:si_unique_call 82} packet_2 := __HAVOC_malloc(4);
    call {:si_unique_call 83} event := __HAVOC_malloc(124);
    DeviceExtension_2 := actual_DeviceExtension_2;
    ModelLeafLocation := actual_ModelLeafLocation;
    ModelLeaf_3 := actual_ModelLeaf_3;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    leaf := 0;
    tModelLeaf := 0;
    tModelLeafMdl := 0;
    call {:si_unique_call 84} AllocateIrpAndIrb(DeviceExtension_2, packet_2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 85} tModelLeaf := ExAllocatePoolWithTag(0, 32, 846226035);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} tModelLeaf != 0;
    call {:si_unique_call 86} tModelLeafMdl := IoAllocateMdl(0, 32, 0, 0, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} tModelLeafMdl != 0;
    retries := 3;
    goto L42;

  L42:
    call {:si_unique_call 87} Tmp_241, Tmp_244, Tmp_246, Tmp_248, Tmp_254, Tmp_257, Tmp_258, Tmp_259, Tmp_260, currentGeneration_1, retries, Tmp_270, status_6, Tmp_272, Tmp_273, Tmp_274, vslice_dummy_var_5 := Sbp2ParseTextLeaf_loop_L42(Tmp_241, Tmp_244, Tmp_246, waitValue_1, Tmp_248, Tmp_254, Tmp_257, Tmp_258, Tmp_259, Tmp_260, currentGeneration_1, retries, tModelLeafMdl, Tmp_270, packet_2, status_6, Tmp_272, Tmp_273, Tmp_274, event, DeviceExtension_2, ModelLeafLocation, vslice_dummy_var_5);
    goto L42_last;

  L42_last:
    assume {:CounterLoop 3} {:Counter "retries"} true;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} retries != 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_258;
    assume {:nonnull} Tmp_258 != 0;
    assume Tmp_258 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_272;
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3103;
    call {:si_unique_call 88} status_6 := Sbp2SendRequest#1(DeviceExtension_2, vslice_dummy_var_3103, 2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_254;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    havoc currentGeneration_1;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_270;
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_241;
    assume {:nonnull} Tmp_241 != 0;
    assume Tmp_241 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_260;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_246;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_274;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_257;
    assume {:nonnull} Tmp_257 != 0;
    assume Tmp_257 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_259;
    assume {:nonnull} Tmp_259 != 0;
    assume Tmp_259 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3104;
    call {:si_unique_call 89} status_6 := Sbp2SendRequest#1(DeviceExtension_2, vslice_dummy_var_3104, 2);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} status_6 < 0;
    call {:si_unique_call 90} KeInitializeEvent(event, 0, 0);
    assume {:nonnull} waitValue_1 != 0;
    assume waitValue_1 > 0;
    call {:si_unique_call 91} vslice_dummy_var_5 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_1);
    retries := retries - 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    assume {:partition} 0 <= status_6;
    goto L43;

  L43:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_6 >= 0;
    call {:si_unique_call 92} leafLength := corral_nondet();
    Tmp_250 := tModelLeaf;
    assume {:nonnull} Tmp_250 != 0;
    assume Tmp_250 > 0;
    havoc temp_2;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} leafLength + 4 > 32;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 93} IoFreeMdl(0);
    call {:si_unique_call 94} sdv_ExFreePool(0);
    Tmp_252 := leafLength + 4;
    call {:si_unique_call 95} tModelLeaf := ExAllocatePoolWithTag(0, Tmp_252, 846226035);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} tModelLeaf != 0;
    Tmp_253 := leafLength + 4;
    call {:si_unique_call 96} sdv_121 := IoAllocateMdl(0, Tmp_253, 0, 0, 0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_256;
    assume {:nonnull} Tmp_256 != 0;
    assume Tmp_256 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_245;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto L89;

  L89:
    i_2 := 1;
    Tmp_262 := tModelLeaf;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    goto L123;

  L123:
    call {:si_unique_call 97} i_2, Tmp_243, Tmp_247, Tmp_249, Tmp_261, Tmp_263, status_6 := Sbp2ParseTextLeaf_loop_L123(i_2, Tmp_243, Tmp_247, Tmp_249, Tmp_261, Tmp_263, leafLength, packet_2, status_6, DeviceExtension_2, ModelLeafLocation);
    goto L123_last;

  L123_last:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_261;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_249;
    assume {:nonnull} Tmp_249 != 0;
    assume Tmp_249 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_243;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3112;
    call {:si_unique_call 112} status_6 := Sbp2SendRequest#1(DeviceExtension_2, vslice_dummy_var_3112, 2);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_6 >= 0;
    i_2 := i_2 + 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} INTDIV(leafLength, 4) < i_2;
    leaf := tModelLeaf;
    assume {:nonnull} leaf != 0;
    assume leaf > 0;
    assume {:nonnull} ModelLeaf_3 != 0;
    assume ModelLeaf_3 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 98} IoFreeMdl(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3105;
    call {:si_unique_call 99} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3105);
    goto L1;

  L1:
    return;

  anon33_Then:
    assume {:partition} i_2 <= INTDIV(leafLength, 4);
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 100} IoFreeMdl(0);
    call {:si_unique_call 101} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3106;
    call {:si_unique_call 102} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3106);
    goto L1;

  anon32_Then:
    call {:si_unique_call 103} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3107;
    call {:si_unique_call 104} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3107);
    goto L1;

  anon29_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3108;
    call {:si_unique_call 105} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3108);
    goto L1;

  anon31_Then:
    assume {:partition} 32 >= leafLength + 4;
    goto L89;

  anon27_Then:
    assume {:partition} 0 > status_6;
    call {:si_unique_call 106} IoFreeMdl(0);
    call {:si_unique_call 107} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3109;
    call {:si_unique_call 108} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3109);
    goto L1;

  anon26_Then:
    assume {:partition} retries == 0;
    goto L43;

  anon25_Then:
    assume {:partition} tModelLeafMdl == 0;
    call {:si_unique_call 109} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3110;
    call {:si_unique_call 110} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3110);
    goto L1;

  anon24_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_3111;
    call {:si_unique_call 111} DeAllocateIrpAndIrb(DeviceExtension_2, vslice_dummy_var_3111);
    goto L1;

  anon23_Then:
    goto L1;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset(actual_DeviceExtension_3: int) returns (Tmp_276: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset(actual_DeviceExtension_3: int) returns (Tmp_276: int)
{
  var {:pointer} Tmp_277: int;
  var {:pointer} Tmp_279: int;
  var {:scalar} status_7: int;
  var {:pointer} packet_3: int;
  var {:pointer} DeviceExtension_3: int;
  var vslice_dummy_var_3113: int;
  var vslice_dummy_var_3114: int;

  anon0:
    call {:si_unique_call 113} packet_3 := __HAVOC_malloc(4);
    DeviceExtension_3 := actual_DeviceExtension_3;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 114} AllocateIrpAndIrb(DeviceExtension_3, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_279;
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_277;
    assume {:nonnull} Tmp_277 != 0;
    assume Tmp_277 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_3113;
    call {:si_unique_call 115} status_7 := Sbp2SendRequest#1(DeviceExtension_3, vslice_dummy_var_3113, 2);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_3114;
    call {:si_unique_call 116} DeAllocateIrpAndIrb(DeviceExtension_3, vslice_dummy_var_3114);
    Tmp_276 := status_7;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_276 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_DeviceExtension_4: int, actual_Irp: int);
  modifies alloc, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_DeviceExtension_4: int, actual_Irp: int)
{
  var {:pointer} Tmp_281: int;
  var {:scalar} sdv_128: int;
  var {:pointer} Tmp_283: int;
  var {:scalar} sdv_130: int;
  var {:scalar} oldIrql: int;
  var {:pointer} sdv_131: int;
  var {:scalar} sdv_132: int;
  var {:scalar} sdv_134: int;
  var {:pointer} tail: int;
  var {:pointer} DeviceExtension_4: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_3115: int;

  anon0:
    call {:si_unique_call 117} vslice_dummy_var_6 := __HAVOC_malloc(4);
    DeviceExtension_4 := actual_DeviceExtension_4;
    Irp := actual_Irp;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 118} Tmp_281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_281 != 0;
    assume Tmp_281 > 0;
    call {:si_unique_call 119} sdv_KeAcquireSpinLock(0, Tmp_281);
    assume {:nonnull} Tmp_281 != 0;
    assume Tmp_281 > 0;
    havoc oldIrql;
    call {:si_unique_call 120} sdv_128 := sdv_IsListEmpty(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_128 == 0;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_3115;
    call {:si_unique_call 121} sdv_131 := sdv_containing_record(vslice_dummy_var_3115, 0);
    tail := sdv_131;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_283;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    call {:si_unique_call 122} sdv_132 := corral_nondet();
    assume {:nonnull} tail != 0;
    assume tail > 0;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    call {:si_unique_call 123} vslice_dummy_var_8 := KeCancelTimer(0);
    call {:si_unique_call 124} vslice_dummy_var_7 := FreeAsyncRequestContext(DeviceExtension_4, tail);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 125} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L14;

  L14:
    call {:si_unique_call 126} sdv_KeReleaseSpinLock(0, oldIrql);
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 127} sdv_134 := corral_nondet();
    goto L14;

  anon10_Then:
    assume {:partition} sdv_128 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irp != 0;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 128} sdv_130 := corral_nondet();
    goto L14;

  anon11_Then:
    assume {:partition} Irp == 0;
    goto L14;

  anon9_Then:
    goto L1;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 129} vslice_dummy_var_9 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 130} vslice_dummy_var_10 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 131} vslice_dummy_var_11 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 132} vslice_dummy_var_12 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 133} vslice_dummy_var_13 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 134} vslice_dummy_var_14 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 135} vslice_dummy_var_15 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 136} vslice_dummy_var_16 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_17: int;

  anon0:
    call {:si_unique_call 137} vslice_dummy_var_17 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_384: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_384: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 138} SLIC_sdv_containing_record_entry(strConst__li2bpl1);
    record := Address;
    Tmp_384 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 139} vslice_dummy_var_18 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 140} vslice_dummy_var_19 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_390: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_390 == 1 || Tmp_390 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_390: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 141} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_390 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_390 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_392: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_392: int)
{
  var {:scalar} x: int;
  var {:pointer} sdv_176: int;

  anon0:
    call {:si_unique_call 142} sdv_176 := __HAVOC_malloc(1);
    x := sdv_176;
    Tmp_392 := x;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_20: int;

  anon0:
    call {:si_unique_call 143} vslice_dummy_var_20 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int)
{
  var vslice_dummy_var_21: int;

  anon0:
    call {:si_unique_call 144} vslice_dummy_var_21 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_398: int);
  free ensures {:va_keep} Tmp_398 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_398: int)
{

  anon0:
    Tmp_398 := 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_400: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_400: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_400 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_400 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_400 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_402: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_402: int)
{
  var {:pointer} sdv_178: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_402 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 145} sdv_178 := __HAVOC_malloc(1);
    Tmp_402 := sdv_178;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_22: int;

  anon0:
    call {:si_unique_call 146} vslice_dummy_var_22 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag_1: int)
{
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 147} vslice_dummy_var_23 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_408: int);
  free ensures {:va_keep} Tmp_408 == -1073741824 || Tmp_408 == -1073741771 || Tmp_408 == -1073741670 || Tmp_408 == -1073741823 || Tmp_408 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_408: int)
{
  var {:pointer} DeviceObject: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_408 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_408 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_408 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_408 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_inside_init_entrypoint != 0;
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;

  L21:
    Tmp_408 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_inside_init_entrypoint == 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var {:scalar} WorkerRoutine: int;
  var {:scalar} QueueType: int;
  var vslice_dummy_var_24: int;

  anon0:
    call {:si_unique_call 148} vslice_dummy_var_24 := __HAVOC_malloc(4);
    WorkerRoutine := actual_WorkerRoutine;
    QueueType := actual_QueueType;
    call {:si_unique_call 149} sdv_RunIoQueueWorkItems(0, WorkerRoutine, QueueType, 0);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 150} vslice_dummy_var_25 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 151} vslice_dummy_var_26 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 152} vslice_dummy_var_27 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.Type_unnamed_tag_37;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int)
{
  var {:pointer} r: int;
  var {:pointer} pirp_2: int;
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 153} vslice_dummy_var_28 := __HAVOC_malloc(4);
    pirp_2 := actual_pirp_2;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    r := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(pirp_2)))];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 1;
    goto L1;

  anon13_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 3;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(r)))] := 1;
    goto L1;

  anon15_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(r)))] := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(r)))] := 1;
    goto L1;

  anon14_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(r)))] := 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 154} vslice_dummy_var_29 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems(actual_IoWorkItem_1: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems(actual_IoWorkItem_1: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int)
{
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 155} vslice_dummy_var_30 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_426: int);
  free ensures {:va_keep} Tmp_426 == 0 || Tmp_426 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_426: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_426 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_426 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 156} vslice_dummy_var_31 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 157} vslice_dummy_var_32 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_432: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_432: int)
{
  var {:pointer} sdv_185: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_432 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 158} sdv_185 := __HAVOC_malloc(1);
    Tmp_432 := sdv_185;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Type_unnamed_tag_37, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.Busy__KDEVICE_QUEUE, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 159} vslice_dummy_var_33 := __HAVOC_malloc(4);
    call {:si_unique_call 160} sdv_stub_driver_init();
    call {:si_unique_call 161} vslice_dummy_var_34 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_436: int);
  free ensures {:va_keep} Tmp_436 == 0 || Tmp_436 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_436: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_436 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_436 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_438: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_438: int)
{
  var {:pointer} sdv_189: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 162} sdv_189 := __HAVOC_malloc(1);
    Tmp_438 := sdv_189;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_438 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_440: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_440: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_190: int;

  anon0:
    call {:si_unique_call 163} sdv_190 := __HAVOC_malloc(1);
    x_2 := sdv_190;
    Tmp_440 := x_2;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_1: int)
{
  var {:scalar} new: int;
  var {:pointer} p_1: int;
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 164} vslice_dummy_var_35 := __HAVOC_malloc(4);
    new := actual_new;
    p_1 := actual_p_1;
    assume {:nonnull} p_1 != 0;
    assume p_1 > 0;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_446: int);
  free ensures {:va_keep} Tmp_446 == 1 || Tmp_446 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_446: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_446 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_446 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 165} vslice_dummy_var_36 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_2: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 166} vslice_dummy_var_37 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context_2 := actual_Context_2;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 167} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    sdv_compFset := 1;
    sdv_invoke_on_success := InvokeOnSuccess;
    sdv_invoke_on_error := InvokeOnError;
    sdv_invoke_on_cancel := InvokeOnCancel;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 168} vslice_dummy_var_38 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_454: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_454: int)
{

  anon0:
    call {:si_unique_call 169} SLIC_sdv_RemoveEntryList_entry(strConst__li2bpl1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_454 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_454 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int)
{
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 170} vslice_dummy_var_39 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_458: int);
  free ensures {:va_keep} Tmp_458 == 258 || Tmp_458 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_458: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_458 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_458 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_458 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_2: int)
{
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 171} vslice_dummy_var_40 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_462: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_462: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_462 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_466: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_466: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    Tmp_466 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(pirp_6)))];
    return;
}



procedure {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin()
{
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 172} vslice_dummy_var_41 := __HAVOC_malloc(4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_470: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_470: int)
{

  anon0:
    havoc Tmp_470;
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_474: int, dup_assertVar: bool);
  modifies alloc, Mem_T.CurrentStackLocation_unnamed_tag_6, LockDepth, yogi_error, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Type_unnamed_tag_37, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_474: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_475: int;
  var {:scalar} Tmp_477: int;
  var boogieTmp: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var GUID_DEVINTERFACE_STORAGEPORT__Loc: int;
  var GUID_DEVINTERFACE_FLOPPY__Loc: int;
  var GUID_DEVINTERFACE_WRITEONCEDISK__Loc: int;
  var GUID_DEVINTERFACE_TAPE__Loc: int;
  var GUID_DEVINTERFACE_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_CDCHANGER__Loc: int;
  var GUID_DEVINTERFACE_MEDIUMCHANGER__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var GUID_DEVINTERFACE_PARTITION__Loc: int;
  var GUID_DEVINTERFACE_CDROM__Loc: int;
  var GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_DISK__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var GUID_BUS_TYPE_PCMCIA__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 173} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 174} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 175} GUID_DEVINTERFACE_STORAGEPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_STORAGEPORT__Loc == GUID_DEVINTERFACE_STORAGEPORT;
    assume GUID_DEVINTERFACE_STORAGEPORT != 0;
    call {:si_unique_call 176} GUID_DEVINTERFACE_FLOPPY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_FLOPPY__Loc == GUID_DEVINTERFACE_FLOPPY;
    assume GUID_DEVINTERFACE_FLOPPY != 0;
    call {:si_unique_call 177} GUID_DEVINTERFACE_WRITEONCEDISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_WRITEONCEDISK__Loc == GUID_DEVINTERFACE_WRITEONCEDISK;
    assume GUID_DEVINTERFACE_WRITEONCEDISK != 0;
    call {:si_unique_call 178} GUID_DEVINTERFACE_TAPE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_TAPE__Loc == GUID_DEVINTERFACE_TAPE;
    assume GUID_DEVINTERFACE_TAPE != 0;
    call {:si_unique_call 179} GUID_DEVINTERFACE_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VOLUME__Loc == GUID_DEVINTERFACE_VOLUME;
    assume GUID_DEVINTERFACE_VOLUME != 0;
    call {:si_unique_call 180} GUID_DEVINTERFACE_CDCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDCHANGER__Loc == GUID_DEVINTERFACE_CDCHANGER;
    assume GUID_DEVINTERFACE_CDCHANGER != 0;
    call {:si_unique_call 181} GUID_DEVINTERFACE_MEDIUMCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_MEDIUMCHANGER__Loc == GUID_DEVINTERFACE_MEDIUMCHANGER;
    assume GUID_DEVINTERFACE_MEDIUMCHANGER != 0;
    call {:si_unique_call 182} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 183} GUID_DEVINTERFACE_PARTITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_PARTITION__Loc == GUID_DEVINTERFACE_PARTITION;
    assume GUID_DEVINTERFACE_PARTITION != 0;
    call {:si_unique_call 184} GUID_DEVINTERFACE_CDROM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDROM__Loc == GUID_DEVINTERFACE_CDROM;
    assume GUID_DEVINTERFACE_CDROM != 0;
    call {:si_unique_call 185} GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc == GUID_DEVINTERFACE_HIDDEN_VOLUME;
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME != 0;
    call {:si_unique_call 186} GUID_DEVINTERFACE_DISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_DISK__Loc == GUID_DEVINTERFACE_DISK;
    assume GUID_DEVINTERFACE_DISK != 0;
    call {:si_unique_call 187} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 188} GUID_BUS_TYPE_PCMCIA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_PCMCIA__Loc == GUID_BUS_TYPE_PCMCIA;
    assume GUID_BUS_TYPE_PCMCIA != 0;
    call {:si_unique_call 189} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 190} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 191} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 192} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 193} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 194} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 195} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 196} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 197} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 198} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 199} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 200} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 201} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 202} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 203} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 204} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 205} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 206} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 207} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 208} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 209} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 210} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 211} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 212} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 213} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 214} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 215} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 216} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 217} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 218} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 219} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 220} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 221} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 222} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 223} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 224} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 225} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KiBugCheckData == boogieTmp;
    call {:si_unique_call 226} boogieTmp := __HAVOC_malloc_or_null(88);
    assume PortBugcheckData == boogieTmp;
    call {:si_unique_call 227} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 228} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 229} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 230} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 231} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 232} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 233} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 234} boogieTmp := __HAVOC_malloc_or_null(4);
    assume MmHighestUserAddress == boogieTmp;
    call {:si_unique_call 235} vslice_dummy_var_446 := __HAVOC_malloc(4);
    call {:si_unique_call 236} vslice_dummy_var_447 := __HAVOC_malloc(4);
    call {:si_unique_call 237} vslice_dummy_var_448 := __HAVOC_malloc(4);
    call {:si_unique_call 238} vslice_dummy_var_449 := __HAVOC_malloc(4);
    call {:si_unique_call 239} vslice_dummy_var_450 := __HAVOC_malloc(4);
    call {:si_unique_call 240} vslice_dummy_var_451 := __HAVOC_malloc(4);
    call {:si_unique_call 241} vslice_dummy_var_452 := __HAVOC_malloc(4);
    call {:si_unique_call 242} vslice_dummy_var_453 := __HAVOC_malloc(4);
    call {:si_unique_call 243} vslice_dummy_var_454 := __HAVOC_malloc(4);
    call {:si_unique_call 244} vslice_dummy_var_455 := __HAVOC_malloc(4);
    call {:si_unique_call 245} vslice_dummy_var_456 := __HAVOC_malloc(4);
    call {:si_unique_call 246} vslice_dummy_var_457 := __HAVOC_malloc(4);
    call {:si_unique_call 247} vslice_dummy_var_458 := __HAVOC_malloc(4);
    call {:si_unique_call 248} vslice_dummy_var_459 := __HAVOC_malloc(4);
    call {:si_unique_call 249} vslice_dummy_var_460 := __HAVOC_malloc(4);
    call {:si_unique_call 250} vslice_dummy_var_461 := __HAVOC_malloc(4);
    call {:si_unique_call 251} vslice_dummy_var_462 := __HAVOC_malloc(4);
    call {:si_unique_call 252} vslice_dummy_var_463 := __HAVOC_malloc(4);
    call {:si_unique_call 253} vslice_dummy_var_464 := __HAVOC_malloc(4);
    call {:si_unique_call 254} vslice_dummy_var_465 := __HAVOC_malloc(4);
    call {:si_unique_call 255} vslice_dummy_var_466 := __HAVOC_malloc(4);
    call {:si_unique_call 256} vslice_dummy_var_467 := __HAVOC_malloc(4);
    call {:si_unique_call 257} vslice_dummy_var_468 := __HAVOC_malloc(4);
    call {:si_unique_call 258} vslice_dummy_var_469 := __HAVOC_malloc(4);
    call {:si_unique_call 259} vslice_dummy_var_470 := __HAVOC_malloc(4);
    call {:si_unique_call 260} vslice_dummy_var_471 := __HAVOC_malloc(4);
    call {:si_unique_call 261} vslice_dummy_var_472 := __HAVOC_malloc(4);
    call {:si_unique_call 262} vslice_dummy_var_473 := __HAVOC_malloc(4);
    call {:si_unique_call 263} vslice_dummy_var_474 := __HAVOC_malloc(4);
    call {:si_unique_call 264} vslice_dummy_var_475 := __HAVOC_malloc(4);
    call {:si_unique_call 265} vslice_dummy_var_476 := __HAVOC_malloc(4);
    call {:si_unique_call 266} vslice_dummy_var_477 := __HAVOC_malloc(4);
    call {:si_unique_call 267} vslice_dummy_var_478 := __HAVOC_malloc(4);
    call {:si_unique_call 268} vslice_dummy_var_479 := __HAVOC_malloc(4);
    call {:si_unique_call 269} vslice_dummy_var_480 := __HAVOC_malloc(288);
    call {:si_unique_call 270} vslice_dummy_var_481 := __HAVOC_malloc(4);
    call {:si_unique_call 271} vslice_dummy_var_482 := __HAVOC_malloc(4);
    call {:si_unique_call 272} vslice_dummy_var_483 := __HAVOC_malloc(4);
    call {:si_unique_call 273} vslice_dummy_var_484 := __HAVOC_malloc(4);
    call {:si_unique_call 274} vslice_dummy_var_485 := __HAVOC_malloc(4);
    call {:si_unique_call 275} vslice_dummy_var_486 := __HAVOC_malloc(4);
    call {:si_unique_call 276} vslice_dummy_var_487 := __HAVOC_malloc(4);
    call {:si_unique_call 277} vslice_dummy_var_488 := __HAVOC_malloc(4);
    call {:si_unique_call 278} vslice_dummy_var_489 := __HAVOC_malloc(4);
    call {:si_unique_call 279} vslice_dummy_var_490 := __HAVOC_malloc(4);
    call {:si_unique_call 280} vslice_dummy_var_491 := __HAVOC_malloc(4);
    call {:si_unique_call 281} vslice_dummy_var_492 := __HAVOC_malloc(4);
    call {:si_unique_call 282} vslice_dummy_var_493 := __HAVOC_malloc(4);
    call {:si_unique_call 283} vslice_dummy_var_494 := __HAVOC_malloc(4);
    call {:si_unique_call 284} vslice_dummy_var_495 := __HAVOC_malloc(4);
    call {:si_unique_call 285} vslice_dummy_var_496 := __HAVOC_malloc(4);
    call {:si_unique_call 286} vslice_dummy_var_497 := __HAVOC_malloc(4);
    call {:si_unique_call 287} vslice_dummy_var_498 := __HAVOC_malloc(4);
    call {:si_unique_call 288} vslice_dummy_var_499 := __HAVOC_malloc(4);
    call {:si_unique_call 289} vslice_dummy_var_500 := __HAVOC_malloc(4);
    call {:si_unique_call 290} vslice_dummy_var_501 := __HAVOC_malloc(4);
    call {:si_unique_call 291} vslice_dummy_var_502 := __HAVOC_malloc(4);
    call {:si_unique_call 292} vslice_dummy_var_503 := __HAVOC_malloc(4);
    call {:si_unique_call 293} vslice_dummy_var_504 := __HAVOC_malloc(4);
    call {:si_unique_call 294} vslice_dummy_var_505 := __HAVOC_malloc(4);
    call {:si_unique_call 295} vslice_dummy_var_506 := __HAVOC_malloc(4);
    call {:si_unique_call 296} vslice_dummy_var_507 := __HAVOC_malloc(4);
    call {:si_unique_call 297} vslice_dummy_var_508 := __HAVOC_malloc(4);
    call {:si_unique_call 298} vslice_dummy_var_509 := __HAVOC_malloc(4);
    call {:si_unique_call 299} vslice_dummy_var_510 := __HAVOC_malloc(4);
    call {:si_unique_call 300} vslice_dummy_var_511 := __HAVOC_malloc(4);
    call {:si_unique_call 301} vslice_dummy_var_512 := __HAVOC_malloc(4);
    call {:si_unique_call 302} vslice_dummy_var_513 := __HAVOC_malloc(4);
    call {:si_unique_call 303} vslice_dummy_var_514 := __HAVOC_malloc(4);
    call {:si_unique_call 304} vslice_dummy_var_515 := __HAVOC_malloc(4);
    call {:si_unique_call 305} vslice_dummy_var_516 := __HAVOC_malloc(4);
    call {:si_unique_call 306} vslice_dummy_var_517 := __HAVOC_malloc(4);
    call {:si_unique_call 307} vslice_dummy_var_518 := __HAVOC_malloc(4);
    call {:si_unique_call 308} vslice_dummy_var_519 := __HAVOC_malloc(4);
    call {:si_unique_call 309} vslice_dummy_var_520 := __HAVOC_malloc(4);
    call {:si_unique_call 310} vslice_dummy_var_521 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 311} corralExtraInit();
    call {:si_unique_call 312} corralExplainErrorInit();
    call {:si_unique_call 313} _sdv_init17();
    call {:si_unique_call 314} _sdv_init1();
    call {:si_unique_call 315} _sdv_init4();
    call {:si_unique_call 316} _sdv_init5();
    call {:si_unique_call 317} _sdv_init3();
    call {:si_unique_call 318} _sdv_init14();
    call {:si_unique_call 319} _sdv_init6();
    call {:si_unique_call 320} _sdv_init15();
    call {:si_unique_call 321} _sdv_init10();
    call {:si_unique_call 322} _sdv_init11();
    call {:si_unique_call 323} _sdv_init9();
    call {:si_unique_call 324} _sdv_init12();
    call {:si_unique_call 325} _sdv_init13();
    call {:si_unique_call 326} _sdv_init7();
    call {:si_unique_call 327} _sdv_init8();
    call {:si_unique_call 328} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_477 := 0;
    goto L40;

  L40:
    assume Tmp_477 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_475 := 0;
    goto L44;

  L44:
    assume Tmp_475 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(sdv_irp)))] := sdv_harnessStackLocation;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(sdv_other_irp)))] := sdv_other_harnessStackLocation;
    call {:si_unique_call 329} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L38;

  L38:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L38;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_475 := 1;
    goto L44;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_477 := 1;
    goto L40;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_478: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_478: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_478;
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length_1: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_482: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length_1: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_482: int)
{
  var {:pointer} sdv_204: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 330} sdv_204 := __HAVOC_malloc(1);
    Tmp_482 := sdv_204;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_482 := 0;
    goto L1;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var {:pointer} DestinationString_1: int;
  var {:pointer} SourceString_1: int;
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 331} vslice_dummy_var_42 := __HAVOC_malloc(4);
    DestinationString_1 := actual_DestinationString_1;
    SourceString_1 := actual_SourceString_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_1 != 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_1 == 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_1 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_1 == 0;
    goto L4;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 332} vslice_dummy_var_43 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_3: int)
{
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 333} vslice_dummy_var_44 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeFlushIoBuffers"} {:osmodel} sdv_KeFlushIoBuffers(actual_Mdl_2: int, actual_ReadOperation: int, actual_DmaOperation: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeFlushIoBuffers"} {:osmodel} sdv_KeFlushIoBuffers(actual_Mdl_2: int, actual_ReadOperation: int, actual_DmaOperation: int)
{
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 334} vslice_dummy_var_45 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_3: int)
{
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 335} vslice_dummy_var_46 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_494: int);
  free ensures {:va_keep} Tmp_494 == 0 || Tmp_494 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_494: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_494 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_494 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 336} vslice_dummy_var_47 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int)
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 337} vslice_dummy_var_48 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 338} vslice_dummy_var_49 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_7: int)
{
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 339} vslice_dummy_var_50 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_8: int) returns (Tmp_504: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Type_unnamed_tag_37, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.Busy__KDEVICE_QUEUE, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_8: int) returns (Tmp_504: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_506: int;
  var {:scalar} sdv_214: int;
  var {:scalar} Tmp_507: int;
  var {:scalar} status_14: int;
  var {:pointer} po: int;
  var {:pointer} pirp_8: int;

  anon0:
    po := actual_po;
    pirp_8 := actual_pirp_8;
    status_14 := 0;
    minor := sdv_214;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    ps := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(pirp_8)))];
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    call {:si_unique_call 340} sdv_SetStatus(pirp_8);
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] := minor;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 341} sdv_stub_dispatch_begin();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 27;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 0;
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 3;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_506 := 0;
    goto L217;

  L217:
    assume Tmp_506 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 2;
    call {:si_unique_call 342} SdvExit#1();
    goto L66;

  L66:
    call {:si_unique_call 343} status_14 := Sbp2PnpDeviceControl(po, pirp_8);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  L75:
    call {:si_unique_call 344} sdv_stub_dispatch_end(status_14, 0);
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    Tmp_504 := status_14;
    goto LM2;

  LM2:
    return;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 2;
    goto L66;

  anon61_Then:
    Tmp_506 := 1;
    goto L217;

  anon59_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 3;
    goto L61;

  anon83_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_507 := 0;
    goto L223;

  L223:
    assume Tmp_507 != 0;
    goto L60;

  anon58_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_507 := 1;
    goto L223;

  anon62_Then:
    call {:si_unique_call 345} status_14 := sdv_DoNothing();
    goto L75;

  anon63_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 23;
    call {:si_unique_call 346} status_14 := Sbp2SystemControl(po, pirp_8);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 22;
    call {:si_unique_call 347} sdv_SetPowerIrpMinorFunction(pirp_8);
    call {:si_unique_call 348} status_14 := Sbp2PowerControl(po, pirp_8);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 18;
    call {:si_unique_call 349} status_14 := sdv_DoNothing();
    goto L75;

  anon66_Then:
    call {:si_unique_call 350} status_14 := sdv_DoNothing();
    goto L75;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 16;
    call {:si_unique_call 351} status_14 := sdv_DoNothing();
    goto L75;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 15;
    call {:si_unique_call 352} status_14 := Sbp2ScsiRequests(po, pirp_8);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 14;
    call {:si_unique_call 353} status_14 := Sbp2DeviceControl(po, pirp_8);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 354} status_14 := sdv_DoNothing();
    goto L75;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 9;
    call {:si_unique_call 355} status_14 := sdv_DoNothing();
    goto L75;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 6;
    call {:si_unique_call 356} status_14 := sdv_DoNothing();
    goto L75;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 5;
    call {:si_unique_call 357} status_14 := sdv_DoNothing();
    goto L75;

  anon74_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 4;
    call {:si_unique_call 358} status_14 := sdv_DoNothing();
    goto L75;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 3;
    call {:si_unique_call 359} status_14 := sdv_DoNothing();
    goto L75;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 2;
    call {:si_unique_call 360} status_14 := Sbp2CreateClose(po, pirp_8);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 0;
    call {:si_unique_call 361} status_14 := Sbp2CreateClose(po, pirp_8);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init15"} {:osmodel} _sdv_init15();
  modifies alloc, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init15"} {:osmodel} _sdv_init15()
{
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 362} vslice_dummy_var_51 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    sdv_invoke_on_success := 0;
    sdv_invoke_on_error := 0;
    sdv_invoke_on_cancel := 0;
    assume sdv_start_irp_already_issued == 0;
    sdv_compFset := 0;
    assume sdv_isr_routine == li2bplFunctionConstant799;
    assume sdv_ke_dpc == li2bplFunctionConstant801;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant804;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 363} vslice_dummy_var_52 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoBuildSynchronousFsdRequest"} {:osmodel} IoBuildSynchronousFsdRequest(actual_MajorFunction: int, actual_DeviceObject_5: int, actual_Buffer: int, actual_Length_4: int, actual_StartingOffset: int, actual_Event_1: int, actual_IoStatusBlock: int) returns (Tmp_512: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoBuildSynchronousFsdRequest"} {:osmodel} IoBuildSynchronousFsdRequest(actual_MajorFunction: int, actual_DeviceObject_5: int, actual_Buffer: int, actual_Length_4: int, actual_StartingOffset: int, actual_Event_1: int, actual_IoStatusBlock: int) returns (Tmp_512: int)
{
  var {:pointer} Tmp_513: int;
  var {:scalar} MajorFunction: int;
  var {:pointer} IoStatusBlock: int;

  anon0:
    MajorFunction := actual_MajorFunction;
    IoStatusBlock := actual_IoStatusBlock;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildSynchronousFsdRequest_irp > 0;
    Tmp_513 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(sdv_IoBuildSynchronousFsdRequest_irp)))];
    assume {:nonnull} Tmp_513 != 0;
    assume Tmp_513 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_513)] := MajorFunction;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next)] := MajorFunction;
    assume {:nonnull} IoStatusBlock != 0;
    assume IoStatusBlock > 0;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildSynchronousFsdRequest_irp > 0;
    Tmp_512 := sdv_IoBuildSynchronousFsdRequest_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildSynchronousFsdRequest_irp > 0;
    assume {:nonnull} IoStatusBlock != 0;
    assume IoStatusBlock > 0;
    Tmp_512 := 0;
    goto L1;
}



procedure {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_2: int) returns (Tmp_515: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_2: int) returns (Tmp_515: int)
{
  var {:scalar} OldState_1: int;
  var {:pointer} Event_2: int;

  anon0:
    Event_2 := actual_Event_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    havoc OldState_1;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    Tmp_515 := OldState_1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 364} vslice_dummy_var_53 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_9: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_9: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 365} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_521: int);
  free ensures {:va_keep} Tmp_521 == 0 || Tmp_521 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_521: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_521 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_521 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_5: int)
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 366} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_6: int, actual_ResultLength: int) returns (Tmp_525: int);
  free ensures {:va_keep} Tmp_525 == -1073741811 || Tmp_525 == -1073741823 || Tmp_525 == 0 || Tmp_525 == 5 || Tmp_525 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_6: int, actual_ResultLength: int) returns (Tmp_525: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_227: int;
  var {:scalar} Length_6: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_6 := actual_Length_6;
    ResultLength := actual_ResultLength;
    L := sdv_227;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_525 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_525 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_6;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_6 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_525 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_6 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_6;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_525 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_6 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_525 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_6;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 367} vslice_dummy_var_56 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_6: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State: int) returns (Tmp_529: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_6: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State: int) returns (Tmp_529: int)
{
  var {:pointer} r_1: int;
  var {:pointer} sdv_228: int;

  anon0:
    call {:si_unique_call 368} sdv_228 := __HAVOC_malloc(1);
    r_1 := sdv_228;
    Tmp_529 := r_1;
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_533: int);
  modifies LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_533 == -1073741823 || Tmp_533 == -1073741738 || Tmp_533 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_533: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_533 := -1073741823;
    goto L1;

  L1:
    call {:si_unique_call 369} SLIC_sdv_IoAcquireRemoveLock_exit(0, Tmp_533);
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_533 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_533 := 0;
    goto L1;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_535: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_535: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_535;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 370} vslice_dummy_var_57 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_58: int;

  anon0:
    call {:si_unique_call 371} vslice_dummy_var_58 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_541: int);
  free ensures {:va_keep} Tmp_541 == 1 || Tmp_541 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_541: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_541 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_541 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_543: int);
  modifies sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_543: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 372} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    sdv_compFset := 0;
    Tmp_543 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_543 := 0;
    goto L1;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_547: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_547: int)
{
  var {:scalar} p_3: int;

  anon0:
    Tmp_547 := p_3;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_2: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_2: int, actual_State_1: int)
{
  var {:pointer} Event_3: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 373} vslice_dummy_var_59 := __HAVOC_malloc(4);
    Event_3 := actual_Event_3;
    Type_2 := actual_Type_2;
    State_1 := actual_State_1;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 374} vslice_dummy_var_60 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_10: int)
{
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 375} vslice_dummy_var_61 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int)
{
  var {:pointer} SpinLock_4: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 376} vslice_dummy_var_62 := __HAVOC_malloc(4);
    SpinLock_4 := actual_SpinLock_4;
    assume {:nonnull} SpinLock_4 != 0;
    assume SpinLock_4 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_561: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_561: int)
{
  var {:pointer} sdv_246: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 377} sdv_246 := __HAVOC_malloc(NumberOfBytes);
    Tmp_561 := sdv_246;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_561 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_10: int) returns (Tmp_563: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_10: int) returns (Tmp_563: int)
{
  var {:pointer} ioWorkItem: int;
  var {:scalar} Tmp_564: int;
  var {:pointer} sdv_248: int;

  anon0:
    call {:si_unique_call 378} sdv_248 := __HAVOC_malloc(1);
    ioWorkItem := sdv_248;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_564 := 0;
    goto L27;

  L27:
    assume Tmp_564 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_563 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_564 := 1;
    goto L27;

  anon6_Then:
    Tmp_563 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 379} vslice_dummy_var_63 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 380} vslice_dummy_var_64 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_11: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_570: int);
  free ensures {:va_keep} Tmp_570 == -1073741811 || Tmp_570 == -1073741808 || Tmp_570 == -1073741823 || Tmp_570 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_11: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_570: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_570 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_570 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_570 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_570 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_572: int);
  free ensures {:va_keep} Tmp_572 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_572: int)
{

  anon0:
    Tmp_572 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_574: int);
  free ensures {:va_keep} Tmp_574 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_574: int)
{

  anon0:
    Tmp_574 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_576: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_576: int)
{
  var {:pointer} sdv_251: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 381} sdv_251 := __HAVOC_malloc(1);
    Tmp_576 := sdv_251;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_576 := 0;
    goto L1;
}



procedure {:origName "PortPassThroughMarshalResults"} PortPassThroughMarshalResults(actual_PassThroughInfo: int, actual_Srb: int, actual_RequestIrp: int, actual_IoStatusBlock_1: int, actual_Direct: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortPassThroughMarshalResults"} PortPassThroughMarshalResults(actual_PassThroughInfo: int, actual_Srb: int, actual_RequestIrp: int, actual_IoStatusBlock_1: int, actual_Direct: int)
{
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} Tmp_582: int;
  var {:pointer} Tmp_583: int;
  var {:pointer} Tmp_585: int;
  var {:pointer} Tmp_586: int;
  var {:scalar} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:scalar} Tmp_589: int;
  var {:pointer} Tmp_590: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} PassThroughInfo: int;
  var {:pointer} Srb: int;
  var {:pointer} RequestIrp: int;
  var {:pointer} IoStatusBlock_1: int;
  var {:scalar} Direct: int;
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 382} vslice_dummy_var_65 := __HAVOC_malloc(4);
    PassThroughInfo := actual_PassThroughInfo;
    Srb := actual_Srb;
    RequestIrp := actual_RequestIrp;
    IoStatusBlock_1 := actual_IoStatusBlock_1;
    Direct := actual_Direct;
    call {:si_unique_call 383} sdv_do_paged_code_check();
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_588;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} IoStatusBlock_1 != 0;
    assume IoStatusBlock_1 > 0;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_593;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_589;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    call {:si_unique_call 384} sdv_RtlCopyMemory(0, 0, Tmp_589);
    goto L16;

  L16:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_587;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_587 == 18;
    assume {:nonnull} IoStatusBlock_1 != 0;
    assume IoStatusBlock_1 > 0;
    goto L18;

  L18:
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_582;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Direct == 1;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_583;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_585;
    assume {:nonnull} RequestIrp != 0;
    assume RequestIrp > 0;
    assume {:nonnull} Tmp_583 != 0;
    assume Tmp_583 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    goto L23;

  L23:
    assume {:nonnull} IoStatusBlock_1 != 0;
    assume IoStatusBlock_1 > 0;
    assume {:nonnull} RequestIrp != 0;
    assume RequestIrp > 0;
    return;

  anon14_Then:
    assume {:partition} Direct != 1;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_578;
    assume {:nonnull} Tmp_578 != 0;
    assume Tmp_578 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_579;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_590;
    assume {:nonnull} RequestIrp != 0;
    assume RequestIrp > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    goto L23;

  anon11_Then:
    goto L25;

  L25:
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_592;
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_581;
    assume {:nonnull} RequestIrp != 0;
    assume RequestIrp > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    goto L23;

  anon15_Then:
    goto L25;

  anon13_Then:
    assume {:partition} Tmp_587 != 18;
    goto L18;

  anon12_Then:
    assume {:nonnull} PassThroughInfo != 0;
    assume PassThroughInfo > 0;
    havoc Tmp_586;
    assume {:nonnull} Tmp_586 != 0;
    assume Tmp_586 > 0;
    goto L16;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 385} vslice_dummy_var_66 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PortSendPassThrough"} PortSendPassThrough(actual_Pdo: int, actual_RequestIrp_1: int, actual_Direct_1: int, actual_SrbFlags: int, actual_Capabilities: int) returns (Tmp_596: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortSendPassThrough"} PortSendPassThrough(actual_Pdo: int, actual_RequestIrp_1: int, actual_Direct_1: int, actual_SrbFlags: int, actual_Capabilities: int) returns (Tmp_596: int)
{
  var {:scalar} passThroughInfo: int;
  var {:scalar} status_16: int;
  var {:pointer} Pdo: int;
  var {:pointer} RequestIrp_1: int;
  var {:scalar} Direct_1: int;
  var {:scalar} SrbFlags: int;
  var {:pointer} Capabilities: int;

  anon0:
    call {:si_unique_call 386} passThroughInfo := __HAVOC_malloc(32);
    Pdo := actual_Pdo;
    RequestIrp_1 := actual_RequestIrp_1;
    Direct_1 := actual_Direct_1;
    SrbFlags := actual_SrbFlags;
    Capabilities := actual_Capabilities;
    call {:si_unique_call 387} sdv_do_paged_code_check();
    call {:si_unique_call 388} sdv_RtlZeroMemory(0, 32);
    call {:si_unique_call 389} status_16 := PortGetPassThrough(passThroughInfo, RequestIrp_1, Direct_1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_16 != 0;
    goto L19;

  L19:
    Tmp_596 := status_16;
    return;

  anon5_Then:
    assume {:partition} status_16 == 0;
    call {:si_unique_call 390} status_16 := PortPassThroughInitialize(passThroughInfo, RequestIrp_1, Capabilities, Pdo, Direct_1);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} status_16 != 0;
    goto L25;

  L25:
    call {:si_unique_call 391} PortPassThroughCleanup(passThroughInfo);
    goto L19;

  anon6_Then:
    assume {:partition} status_16 == 0;
    call {:si_unique_call 392} status_16 := PortpSendValidPassThrough(passThroughInfo, RequestIrp_1, SrbFlags, Direct_1);
    goto L25;
}



procedure {:origName "PortpSendValidPassThrough"} PortpSendValidPassThrough(actual_PassThroughInfo_1: int, actual_RequestIrp_2: int, actual_SrbFlags_1: int, actual_Direct_2: int) returns (Tmp_598: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortpSendValidPassThrough"} PortpSendValidPassThrough(actual_PassThroughInfo_1: int, actual_RequestIrp_2: int, actual_SrbFlags_1: int, actual_Direct_2: int) returns (Tmp_598: int)
{
  var {:pointer} irpStack: int;
  var {:scalar} startingOffset: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} senseBuffer_2: int;
  var {:scalar} ioStatusBlock: int;
  var {:scalar} Tmp_601: int;
  var {:pointer} irp_2: int;
  var {:scalar} srb: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} status_17: int;
  var {:scalar} event_1: int;
  var {:pointer} PassThroughInfo_1: int;
  var {:pointer} RequestIrp_2: int;
  var {:scalar} SrbFlags_1: int;
  var {:scalar} Direct_2: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_3116: int;
  var vslice_dummy_var_3117: int;

  anon0:
    call {:si_unique_call 393} startingOffset := __HAVOC_malloc(20);
    call {:si_unique_call 394} ioStatusBlock := __HAVOC_malloc(12);
    call {:si_unique_call 395} srb := __HAVOC_malloc(92);
    call {:si_unique_call 396} event_1 := __HAVOC_malloc(124);
    PassThroughInfo_1 := actual_PassThroughInfo_1;
    RequestIrp_2 := actual_RequestIrp_2;
    SrbFlags_1 := actual_SrbFlags_1;
    Direct_2 := actual_Direct_2;
    call {:si_unique_call 397} sdv_do_paged_code_check();
    assume {:nonnull} PassThroughInfo_1 != 0;
    assume PassThroughInfo_1 > 0;
    havoc Tmp_599;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} PassThroughInfo_1 != 0;
    assume PassThroughInfo_1 > 0;
    havoc Tmp_600;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    havoc Tmp_601;
    call {:si_unique_call 398} senseBuffer_2 := ExAllocatePoolWithTag(4, Tmp_601, -380605360);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} senseBuffer_2 != 0;
    goto L23;

  L23:
    call {:si_unique_call 399} KeInitializeEvent(event_1, 0, 0);
    assume {:nonnull} startingOffset != 0;
    assume startingOffset > 0;
    assume {:nonnull} PassThroughInfo_1 != 0;
    assume PassThroughInfo_1 > 0;
    havoc Tmp_603;
    assume {:nonnull} PassThroughInfo_1 != 0;
    assume PassThroughInfo_1 > 0;
    havoc vslice_dummy_var_3116;
    call {:si_unique_call 400} irp_2 := IoBuildSynchronousFsdRequest(Tmp_603, 0, 0, vslice_dummy_var_3116, 0, 0, ioStatusBlock);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} irp_2 != 0;
    call {:si_unique_call 401} irpStack := sdv_IoGetNextIrpStackLocation(irp_2);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpStack)] := 15;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)] := 1;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    call {:si_unique_call 402} status_17 := PortPassThroughInitializeSrb(PassThroughInfo_1, srb, irp_2, SrbFlags_1, senseBuffer_2);
    assume {:nonnull} PassThroughInfo_1 != 0;
    assume PassThroughInfo_1 > 0;
    havoc vslice_dummy_var_3117;
    call {:si_unique_call 403} status_17 := sdv_IoCallDriver#1(vslice_dummy_var_3117, irp_2);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_17 == 259;
    call {:si_unique_call 404} vslice_dummy_var_67 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L54;

  L54:
    call {:si_unique_call 405} PortPassThroughMarshalResults(PassThroughInfo_1, srb, RequestIrp_2, ioStatusBlock, Direct_2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} senseBuffer_2 != 0;
    call {:si_unique_call 406} sdv_ExFreePool(0);
    goto L58;

  L58:
    assume {:nonnull} ioStatusBlock != 0;
    assume ioStatusBlock > 0;
    havoc Tmp_598;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} senseBuffer_2 == 0;
    goto L58;

  anon16_Then:
    assume {:partition} status_17 != 259;
    assume {:nonnull} ioStatusBlock != 0;
    assume ioStatusBlock > 0;
    goto L54;

  anon14_Then:
    assume {:partition} irp_2 == 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} senseBuffer_2 != 0;
    call {:si_unique_call 407} sdv_ExFreePool(0);
    goto L62;

  L62:
    Tmp_598 := -1073741670;
    goto L1;

  anon15_Then:
    assume {:partition} senseBuffer_2 == 0;
    goto L62;

  anon13_Then:
    assume {:partition} senseBuffer_2 == 0;
    Tmp_598 := -1073741670;
    goto L1;

  anon18_Then:
    senseBuffer_2 := 0;
    goto L23;
}



procedure {:origName "PortPassThroughInitializeSrb"} PortPassThroughInitializeSrb(actual_PassThroughInfo_2: int, actual_Srb_1: int, actual_Irp_8: int, actual_SrbFlags_2: int, actual_SenseBuffer: int) returns (Tmp_604: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_604 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortPassThroughInitializeSrb"} PortPassThroughInitializeSrb(actual_PassThroughInfo_2: int, actual_Srb_1: int, actual_Irp_8: int, actual_SrbFlags_2: int, actual_SenseBuffer: int) returns (Tmp_604: int)
{
  var {:pointer} srbControl: int;
  var {:scalar} Tmp_605: int;
  var {:pointer} PassThroughInfo_2: int;
  var {:pointer} Srb_1: int;
  var {:pointer} Irp_8: int;
  var {:scalar} SrbFlags_2: int;
  var {:pointer} SenseBuffer: int;

  anon0:
    PassThroughInfo_2 := actual_PassThroughInfo_2;
    Srb_1 := actual_Srb_1;
    Irp_8 := actual_Irp_8;
    SrbFlags_2 := actual_SrbFlags_2;
    SenseBuffer := actual_SenseBuffer;
    call {:si_unique_call 408} sdv_do_paged_code_check();
    call {:si_unique_call 409} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} PassThroughInfo_2 != 0;
    assume PassThroughInfo_2 > 0;
    havoc srbControl;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L25;

  L25:
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_8 != 0;
    call {:si_unique_call 410} sdv_KeFlushIoBuffers(0, 0, 1);
    goto L28;

  L28:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    assume {:nonnull} PassThroughInfo_2 != 0;
    assume PassThroughInfo_2 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    havoc Tmp_605;
    call {:si_unique_call 411} sdv_RtlCopyMemory(0, 0, Tmp_605);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} SenseBuffer != 0;
    goto L43;

  L43:
    Tmp_604 := 0;
    return;

  anon19_Then:
    assume {:partition} SenseBuffer == 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L43;

  anon18_Then:
    assume {:partition} Irp_8 == 0;
    goto L28;

  anon17_Then:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L28;

  anon16_Then:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L25;

  anon20_Then:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L25;

  anon21_Then:
    assume {:nonnull} srbControl != 0;
    assume srbControl > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto L25;

  anon15_Then:
    goto L25;
}



procedure {:origName "PortPassThroughCleanup"} PortPassThroughCleanup(actual_PassThroughInfo_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortPassThroughCleanup"} PortPassThroughCleanup(actual_PassThroughInfo_3: int)
{
  var vslice_dummy_var_68: int;

  anon0:
    call {:si_unique_call 412} vslice_dummy_var_68 := __HAVOC_malloc(4);
    call {:si_unique_call 413} sdv_do_paged_code_check();
    return;
}



procedure {:origName "PortGetPassThrough"} PortGetPassThrough(actual_PassThroughInfo_4: int, actual_Irp_9: int, actual_Direct_3: int) returns (Tmp_609: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_609 == -1073741811 || Tmp_609 == -1073741735 || Tmp_609 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortGetPassThrough"} PortGetPassThrough(actual_PassThroughInfo_4: int, actual_Irp_9: int, actual_Direct_3: int) returns (Tmp_609: int)
{
  var {:pointer} irpStack_1: int;
  var {:pointer} Tmp_611: int;
  var {:pointer} Tmp_612: int;
  var {:scalar} inputLength: int;
  var {:pointer} PassThroughInfo_4: int;
  var {:pointer} Irp_9: int;
  var {:scalar} Direct_3: int;

  anon0:
    PassThroughInfo_4 := actual_PassThroughInfo_4;
    Irp_9 := actual_Irp_9;
    Direct_3 := actual_Direct_3;
    call {:si_unique_call 414} sdv_do_paged_code_check();
    call {:si_unique_call 415} irpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    assume {:nonnull} PassThroughInfo_4 != 0;
    assume PassThroughInfo_4 > 0;
    assume {:nonnull} PassThroughInfo_4 != 0;
    assume PassThroughInfo_4 > 0;
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    havoc inputLength;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} 44 > inputLength;
    Tmp_609 := -1073741811;
    goto L1;

  L1:
    return;

  anon10_Then:
    assume {:partition} inputLength >= 44;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Direct_3 != 0;
    assume {:nonnull} PassThroughInfo_4 != 0;
    assume PassThroughInfo_4 > 0;
    havoc Tmp_612;
    assume {:nonnull} Tmp_612 != 0;
    assume Tmp_612 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_609 := -1073741735;
    goto L1;

  anon11_Then:
    goto L21;

  L21:
    Tmp_609 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} Direct_3 == 0;
    assume {:nonnull} PassThroughInfo_4 != 0;
    assume PassThroughInfo_4 > 0;
    havoc Tmp_611;
    assume {:nonnull} Tmp_611 != 0;
    assume Tmp_611 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_609 := -1073741735;
    goto L1;

  anon12_Then:
    goto L21;
}



procedure {:origName "PortPassThroughZeroUnusedBuffers"} PortPassThroughZeroUnusedBuffers(actual_Irp_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortPassThroughZeroUnusedBuffers"} PortPassThroughZeroUnusedBuffers(actual_Irp_10: int)
{
  var {:pointer} irpStack_2: int;
  var {:scalar} Tmp_613: int;
  var {:scalar} outputLength: int;
  var {:pointer} buffer: int;
  var {:scalar} inputLength_1: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 416} vslice_dummy_var_69 := __HAVOC_malloc(4);
    Irp_10 := actual_Irp_10;
    call {:si_unique_call 417} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc outputLength;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc inputLength_1;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    havoc buffer;
    buffer := buffer + inputLength_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} outputLength > inputLength_1;
    Tmp_613 := outputLength - inputLength_1;
    call {:si_unique_call 418} sdv_RtlZeroMemory(0, Tmp_613);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} inputLength_1 >= outputLength;
    goto L1;
}



procedure {:origName "PortPassThroughInitialize"} PortPassThroughInitialize(actual_PassThroughInfo_5: int, actual_Irp_11: int, actual_Capabilities_1: int, actual_Pdo_1: int, actual_Direct_4: int) returns (Tmp_616: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_616 == -1073741811 || Tmp_616 == -1073741592 || Tmp_616 == 0 || Tmp_616 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PortPassThroughInitialize"} PortPassThroughInitialize(actual_PassThroughInfo_5: int, actual_Irp_11: int, actual_Capabilities_1: int, actual_Pdo_1: int, actual_Direct_4: int) returns (Tmp_616: int)
{
  var {:scalar} dataTransferLength: int;
  var {:pointer} irpStack_3: int;
  var {:pointer} Tmp_617: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} srbControl_1: int;
  var {:scalar} Tmp_619: int;
  var {:pointer} endByte: int;
  var {:scalar} outputLength_1: int;
  var {:pointer} Tmp_621: int;
  var {:scalar} Tmp_623: int;
  var {:scalar} pages: int;
  var {:pointer} Tmp_624: int;
  var {:scalar} inputLength_2: int;
  var {:pointer} Tmp_625: int;
  var {:pointer} PassThroughInfo_5: int;
  var {:pointer} Irp_11: int;
  var {:pointer} Capabilities_1: int;
  var {:pointer} Pdo_1: int;
  var {:scalar} Direct_4: int;

  anon0:
    PassThroughInfo_5 := actual_PassThroughInfo_5;
    Irp_11 := actual_Irp_11;
    Capabilities_1 := actual_Capabilities_1;
    Pdo_1 := actual_Pdo_1;
    Direct_4 := actual_Direct_4;
    call {:si_unique_call 419} Tmp_621 := __HAVOC_malloc(64);
    call {:si_unique_call 420} Tmp_624 := __HAVOC_malloc(64);
    call {:si_unique_call 421} Tmp_625 := __HAVOC_malloc(64);
    call {:si_unique_call 422} sdv_do_paged_code_check();
    call {:si_unique_call 423} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    havoc srbControl_1;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc outputLength_1;
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc inputLength_2;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    Tmp_616 := -1073741811;
    goto L1;

  L1:
    return;

  anon109_Then:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} outputLength_1 != 0;
    goto L24;

  L24:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    Tmp_616 := -1073741811;
    goto L1;

  anon82_Then:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Direct_4 != 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L32;

  L32:
    Tmp_616 := -1073741811;
    goto L1;

  anon85_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L32;

  anon86_Then:
    goto L25;

  L25:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Direct_4 == 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    Tmp_616 := -1073741811;
    goto L1;

  anon93_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L47;

  L47:
    Tmp_616 := -1073741811;
    goto L1;

  anon96_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto L47;

  anon97_Then:
    goto L44;

  L44:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L50;

  L50:
    Tmp_616 := -1073741811;
    goto L1;

  anon98_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L50;

  anon99_Then:
    goto L39;

  L39:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    havoc Tmp_624;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    goto L55;

  L55:
    Tmp_616 := -1073741808;
    goto L1;

  anon110_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    havoc Tmp_625;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    havoc Tmp_621;
    assume {:nonnull} Tmp_621 != 0;
    assume Tmp_621 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Direct_4 == 1;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    Tmp_623 := 3;
    goto L67;

  L67:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    goto L68;

  L68:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Direct_4 == 1;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    havoc endByte;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} endByte > MmHighestUserAddress;
    goto L77;

  L77:
    Tmp_616 := -1073741592;
    goto L1;

  anon114_Then:
    assume {:partition} MmHighestUserAddress >= endByte;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L77;

  anon106_Then:
    goto L71;

  L71:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    havoc Tmp_617;
    assume {:nonnull} Tmp_617 != 0;
    assume Tmp_617 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    Tmp_616 := -1073741811;
    goto L1;

  anon115_Then:
    goto L69;

  L69:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    havoc dataTransferLength;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    call {:si_unique_call 424} pages := corral_nondet();
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} dataTransferLength != 0;
    assume {:nonnull} Capabilities_1 != 0;
    assume Capabilities_1 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L88;

  L88:
    Tmp_616 := -1073741811;
    goto L1;

  anon107_Then:
    assume {:nonnull} Capabilities_1 != 0;
    assume Capabilities_1 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L88;

  anon108_Then:
    goto L83;

  L83:
    call {:si_unique_call 425} PortPassThroughZeroUnusedBuffers(Irp_11);
    Tmp_616 := 0;
    goto L1;

  anon116_Then:
    assume {:partition} dataTransferLength == 0;
    goto L83;

  anon105_Then:
    goto L71;

  anon104_Then:
    goto L71;

  anon103_Then:
    assume {:partition} Direct_4 != 1;
    goto L69;

  anon113_Then:
    Tmp_623 := 4;
    goto L67;

  anon102_Then:
    assume {:partition} Direct_4 != 1;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    Tmp_619 := 3;
    goto L95;

  L95:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    goto L68;

  anon117_Then:
    Tmp_619 := 4;
    goto L95;

  anon101_Then:
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    assume {:nonnull} PassThroughInfo_5 != 0;
    assume PassThroughInfo_5 > 0;
    goto L68;

  anon112_Then:
    goto L55;

  anon111_Then:
    goto L55;

  anon100_Then:
    goto L51;

  L51:
    Tmp_616 := -1073741811;
    goto L1;

  anon91_Then:
    goto L51;

  anon95_Then:
    goto L39;

  anon94_Then:
    goto L44;

  anon92_Then:
    assume {:partition} Direct_4 != 0;
    goto L39;

  anon81_Then:
    goto L39;

  anon83_Then:
    assume {:partition} Direct_4 == 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L36;

  L36:
    Tmp_616 := -1073741811;
    goto L1;

  anon88_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L36;

  anon89_Then:
    goto L33;

  L33:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto L38;

  L38:
    Tmp_616 := -1073741811;
    goto L1;

  anon87_Then:
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L38;

  anon90_Then:
    goto L25;

  anon84_Then:
    goto L33;

  anon80_Then:
    goto L25;

  anon79_Then:
    assume {:partition} outputLength_1 == 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    assume {:nonnull} srbControl_1 != 0;
    assume srbControl_1 > 0;
    goto L24;
}



procedure {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb_2: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_627: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_627 == -1073741670 || Tmp_627 == -1073741823 || Tmp_627 == 259 || Tmp_627 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb_2: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_627: int)
{
  var {:pointer} blockDescriptor: int;
  var {:pointer} Tmp_628: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:pointer} Tmp_632: int;
  var {:scalar} pageCode: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_633: int;
  var {:pointer} Tmp_634: int;
  var {:scalar} availLength: int;
  var {:pointer} Tmp_636: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} sdv_264: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} Tmp_644: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} Tmp_649: int;
  var {:pointer} Tmp_650: int;
  var {:pointer} cdbRbc: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} Tmp_662: int;
  var {:pointer} sdv_265: int;
  var {:pointer} Tmp_663: int;
  var {:scalar} modeHeaderLength: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:scalar} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:pointer} modeHeader: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:pointer} Tmp_679: int;
  var {:pointer} cachePage: int;
  var {:scalar} status_18: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} Tmp_682: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:scalar} wcd: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Srb_2: int;
  var {:pointer} OriginalSrb: int;
  var {:pointer} RbcHeaderAndPage: int;
  var {:scalar} OutgoingRequest: int;
  var {:scalar} RemovableMedia: int;
  var {:scalar} SetCacheHack: int;
  var boogieTmp: int;

  anon0:
    Srb_2 := actual_Srb_2;
    OriginalSrb := actual_OriginalSrb;
    RbcHeaderAndPage := actual_RbcHeaderAndPage;
    OutgoingRequest := actual_OutgoingRequest;
    RemovableMedia := actual_RemovableMedia;
    SetCacheHack := actual_SetCacheHack;
    call {:si_unique_call 426} Tmp_628 := __HAVOC_malloc(12);
    call {:si_unique_call 427} Tmp_629 := __HAVOC_malloc(12);
    call {:si_unique_call 428} Tmp_632 := __HAVOC_malloc(12);
    call {:si_unique_call 429} Tmp_636 := __HAVOC_malloc(12);
    call {:si_unique_call 430} Tmp_643 := __HAVOC_malloc(64);
    call {:si_unique_call 431} Tmp_647 := __HAVOC_malloc(12);
    call {:si_unique_call 432} Tmp_648 := __HAVOC_malloc(20);
    call {:si_unique_call 433} Tmp_650 := __HAVOC_malloc(20);
    call {:si_unique_call 434} Tmp_659 := __HAVOC_malloc(64);
    call {:si_unique_call 435} Tmp_667 := __HAVOC_malloc(8);
    call {:si_unique_call 436} Tmp_670 := __HAVOC_malloc(64);
    call {:si_unique_call 437} Tmp_672 := __HAVOC_malloc(12);
    call {:si_unique_call 438} Tmp_673 := __HAVOC_malloc(8);
    call {:si_unique_call 439} Tmp_676 := __HAVOC_malloc(12);
    call {:si_unique_call 440} Tmp_677 := __HAVOC_malloc(64);
    call {:si_unique_call 441} Tmp_685 := __HAVOC_malloc(8);
    call {:si_unique_call 442} Tmp_686 := __HAVOC_malloc(12);
    call {:si_unique_call 443} Tmp_687 := __HAVOC_malloc(8);
    modeHeader := 0;
    status_18 := 259;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} OutgoingRequest != 0;
    modeHeaderLength := 12;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    cdbRbc := Cdb__SCSI_REQUEST_BLOCK(Srb_2);
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb_2);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L27;

  L27:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L21;

  L21:
    Tmp_627 := status_18;
    goto L1;

  L1:
    return;

  anon78_Then:
    goto L21;

  anon77_Then:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L27;

  anon94_Then:
    goto L21;

  anon95_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} RemovableMedia != 0;
    goto L33;

  L33:
    call {:si_unique_call 444} sdv_264 := ExAllocatePoolWithTag(0, 64, 846226035);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_681;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    call {:si_unique_call 445} sdv_265 := IoAllocateMdl(0, 17, 0, 0, 0);
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_640;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_666;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto L41;

  L41:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_682;
    goto L61;

  L61:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_638;
    assume {:nonnull} Tmp_638 != 0;
    assume Tmp_638 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    havoc Tmp_662;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    call {:si_unique_call 446} sdv_RtlCopyMemory(0, 0, Tmp_662);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L21;

  anon81_Then:
    Tmp_682 := 16;
    goto L61;

  anon105_Then:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_655;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_631;
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    call {:si_unique_call 447} sdv_ExFreePool(0);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    Tmp_627 := -1073741670;
    goto L1;

  anon104_Then:
    goto L41;

  anon103_Then:
    Tmp_627 := -1073741670;
    goto L1;

  anon79_Then:
    assume {:partition} RemovableMedia == 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 448} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 449} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_628;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_686;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_629;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_648;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_676;
    call {:si_unique_call 450} sdv_RtlCopyMemory(0, 0, 3);
    status_18 := 0;
    goto L21;

  anon80_Then:
    goto L33;

  anon76_Then:
    goto L21;

  anon98_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc cachePage;
    cachePage := cachePage + modeHeaderLength;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    havoc pageCode;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} pageCode == 8;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    wcd := 0;
    goto L233;

  L233:
    goto L95;

  L95:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    call {:si_unique_call 451} sdv_RtlCopyMemory(0, 0, 17);
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc modeHeader;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} SetCacheHack != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    havoc Tmp_669;
    goto L107;

  L107:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L108;

  L108:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} pageCode == 8;
    Tmp_679 := modeHeader;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    goto L21;

  anon102_Then:
    assume {:partition} pageCode != 8;
    goto L21;

  anon83_Then:
    Tmp_669 := 17;
    goto L107;

  anon101_Then:
    assume {:partition} SetCacheHack == 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L108;

  anon82_Then:
    wcd := 1;
    goto L233;

  anon100_Then:
    assume {:partition} pageCode != 8;
    goto L95;

  anon99_Then:
    goto L21;

  anon97_Then:
    assume {:partition} OutgoingRequest == 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    havoc Tmp_670;
    cdb := Tmp_670;
    goto L115;

  L115:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_656;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_637;
    assume {:nonnull} Tmp_637 != 0;
    assume Tmp_637 > 0;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_630;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    call {:si_unique_call 452} IoFreeMdl(0);
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_674;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_634;
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_644;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L120;

  L120:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    havoc Tmp_649;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_633;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    havoc Tmp_643;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_677;
    call {:si_unique_call 453} sdv_RtlCopyMemory(0, 0, Tmp_649);
    goto L118;

  L118:
    Tmp_627 := -1073741823;
    goto L1;

  anon106_Then:
    goto L120;

  anon86_Then:
    goto L120;

  anon85_Then:
    goto L118;

  anon84_Then:
    modeHeaderLength := 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_652;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_652 != 0;
    assume Tmp_652 > 0;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    call {:si_unique_call 454} IoFreeMdl(0);
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_668;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_678;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} Tmp_678 != 0;
    assume Tmp_678 > 0;
    goto L150;

  L150:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    havoc availLength;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L154;

  L154:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} availLength >= 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L157;

  L157:
    availLength := availLength - 12;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} modeHeader != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    cachePage := blockDescriptor;
    cachePage := cachePage + 8;
    goto L163;

  L163:
    call {:si_unique_call 455} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L344;

  L344:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L21;

  anon111_Then:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L344;

  anon110_Then:
    assume {:partition} modeHeader == 0;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc cachePage;
    goto L163;

  anon92_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto L157;

  anon93_Then:
    goto L21;

  anon91_Then:
    assume {:partition} 12 > availLength;
    goto L21;

  anon109_Then:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} availLength >= modeHeaderLength;
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 456} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 457} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_647;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_672;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_636;
    assume {:nonnull} Tmp_636 != 0;
    assume Tmp_636 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_650;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_632;
    call {:si_unique_call 458} sdv_RtlCopyMemory(0, 0, 3);
    availLength := availLength - modeHeaderLength;
    goto L154;

  anon90_Then:
    assume {:partition} modeHeaderLength > availLength;
    goto L154;

  anon108_Then:
    call {:si_unique_call 459} sdv_RtlCopyMemory(0, 0, 17);
    goto L150;

  anon89_Then:
    Tmp_627 := -1073741823;
    goto L1;

  anon88_Then:
    goto L21;

  anon96_Then:
    goto L21;

  anon107_Then:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_658;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto L21;

  anon87_Then:
    goto L21;

  anon75_Then:
    assume {:nonnull} Srb_2 != 0;
    assume Srb_2 > 0;
    havoc Tmp_659;
    cdb := Tmp_659;
    goto L115;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 460} vslice_dummy_var_70 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_272: int, actual_sdv_273: int) returns (Tmp_694: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_272: int, actual_sdv_273: int) returns (Tmp_694: int)
{
  var {:scalar} sdv_274: int;

  anon0:
    call {:si_unique_call 461} sdv_274 := __HAVOC_malloc(4);
    call {:si_unique_call 462} Tmp_694 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} sdv_274 != 0;
    assume sdv_274 > 0;
    call {:si_unique_call 463} SLIC_sdv_IoReleaseRemoveLock_exit(0);
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_298: int, actual_sdv_299: int) returns (Tmp_708: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_298: int, actual_sdv_299: int) returns (Tmp_708: int)
{
  var {:scalar} sdv_300: int;

  anon0:
    call {:si_unique_call 464} Tmp_708 := __HAVOC_malloc(4);
    call {:si_unique_call 465} sdv_300 := __HAVOC_malloc(4);
    call {:si_unique_call 466} SLIC_sdv_InsertTailList_entry(strConst__li2bpl1);
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} sdv_300 != 0;
    assume sdv_300 > 0;
    return;
}



procedure {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_714: int);
  free ensures {:va_keep} Tmp_714 == -1073741275 || Tmp_714 == -1073741649 || Tmp_714 == -1073741823 || Tmp_714 == -1073741503 || Tmp_714 == -1073741811 || Tmp_714 == 17 || Tmp_714 == -1073741434 || Tmp_714 == -1073741292 || Tmp_714 == -1073741670 || Tmp_714 == -1073741790 || Tmp_714 == -1073741637 || Tmp_714 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_714: int)
{
  var {:scalar} resp: int;
  var {:scalar} Tmp_717: int;
  var {:scalar} status_19: int;
  var {:scalar} statusFlags: int;
  var {:pointer} StatusBlock: int;

  anon0:
    StatusBlock := actual_StatusBlock;
    assume {:nonnull} StatusBlock != 0;
    assume StatusBlock > 0;
    havoc statusFlags;
    Tmp_717 := BAND(statusFlags, BOR(16384, 32768));
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} 32768 == Tmp_717;
    Tmp_714 := -1073741275;
    goto L1;

  L1:
    return;

  anon61_Then:
    assume {:partition} 32768 != Tmp_717;
    call {:si_unique_call 467} resp := corral_nondet();
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} resp != 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} resp != 1;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} resp == 2;
    status_19 := -1073741649;
    goto L18;

  L18:
    Tmp_714 := status_19;
    goto L1;

  anon44_Then:
    assume {:partition} resp != 2;
    status_19 := -1073741823;
    goto L18;

  anon45_Then:
    assume {:partition} resp == 1;
    resp := BAND(statusFlags, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} resp != 2;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} resp != 4;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} resp != 5;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} resp != 6;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} resp != 12;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} resp != 13;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} resp != 14;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} resp == 15;
    status_19 := -1073741503;
    goto L18;

  anon54_Then:
    assume {:partition} resp != 15;
    status_19 := -1073741823;
    goto L18;

  anon55_Then:
    assume {:partition} resp == 14;
    status_19 := -1073741811;
    goto L18;

  anon56_Then:
    assume {:partition} resp == 13;
    goto L21;

  L21:
    status_19 := -1073741434;
    goto L18;

  anon57_Then:
    assume {:partition} resp == 12;
    goto L21;

  anon58_Then:
    assume {:partition} resp == 6;
    goto L22;

  L22:
    status_19 := 17;
    goto L18;

  anon59_Then:
    assume {:partition} resp == 5;
    goto L22;

  anon60_Then:
    assume {:partition} resp == 4;
    goto L22;

  anon63_Then:
    assume {:partition} resp == 2;
    goto L21;

  anon62_Then:
    assume {:partition} resp == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(statusFlags, 255) != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(statusFlags, 255) != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(statusFlags, 255) != 2;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(statusFlags, 255) != 3;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(statusFlags, 255) != 4;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(statusFlags, 255) != 5;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(statusFlags, 255) != 8;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(statusFlags, 255) != 9;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(statusFlags, 255) == 10;
    status_19 := -1073741292;
    goto L18;

  anon46_Then:
    assume {:partition} BAND(statusFlags, 255) != 10;
    status_19 := -1073741823;
    goto L18;

  anon47_Then:
    assume {:partition} BAND(statusFlags, 255) == 9;
    status_19 := -1073741649;
    goto L18;

  anon48_Then:
    assume {:partition} BAND(statusFlags, 255) == 8;
    status_19 := -1073741670;
    goto L18;

  anon49_Then:
    assume {:partition} BAND(statusFlags, 255) == 5;
    goto L34;

  L34:
    status_19 := -1073741790;
    goto L18;

  anon50_Then:
    assume {:partition} BAND(statusFlags, 255) == 4;
    goto L34;

  anon51_Then:
    assume {:partition} BAND(statusFlags, 255) == 3;
    goto L33;

  L33:
    status_19 := -1073741637;
    goto L18;

  anon52_Then:
    assume {:partition} BAND(statusFlags, 255) == 2;
    goto L33;

  anon53_Then:
    assume {:partition} BAND(statusFlags, 255) == 1;
    goto L33;

  anon43_Then:
    assume {:partition} BAND(statusFlags, 255) == 0;
    status_19 := 0;
    goto L18;
}



procedure {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension_9: int, actual_Context_6: int);
  modifies alloc, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension_9: int, actual_Context_6: int)
{
  var {:pointer} Tmp_718: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:pointer} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:scalar} routine: int;
  var {:pointer} Tmp_723: int;
  var {:scalar} cIrql_2: int;
  var {:pointer} Tmp_724: int;
  var {:pointer} packet_7: int;
  var {:pointer} DeviceExtension_9: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_3118: int;

  anon0:
    call {:si_unique_call 468} packet_7 := __HAVOC_malloc(4);
    call {:si_unique_call 469} vslice_dummy_var_71 := __HAVOC_malloc(4);
    DeviceExtension_9 := actual_DeviceExtension_9;
    Context_6 := actual_Context_6;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 470} AllocateIrpAndIrb(DeviceExtension_9, packet_7);
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_723;
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_719;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    call {:si_unique_call 471} Tmp_724 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    call {:si_unique_call 472} sdv_KeRaiseIrql(2, Tmp_724);
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    havoc cIrql_2;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    havoc routine;
    assume routine == 0;
    call {:si_unique_call 473} sdv_KeLowerIrql(cIrql_2);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 474} IoFreeMdl(0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L33;

  L33:
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} packet_7 != 0;
    assume packet_7 > 0;
    havoc vslice_dummy_var_3118;
    call {:si_unique_call 475} DeAllocateIrpAndIrb(DeviceExtension_9, vslice_dummy_var_3118);
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L33;

  anon8_Then:
    goto L1;

  anon7_Then:
    goto L1;
}



procedure {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_726: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE;
  free ensures {:va_keep} Tmp_726 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_726: int)
{
  var {:pointer} nextEntry: int;
  var {:pointer} queueEntry: int;
  var {:scalar} sdv_309: int;
  var {:pointer} sdv_310: int;
  var {:pointer} sdv_312: int;
  var {:pointer} DeviceQueue: int;
  var {:scalar} SortKey: int;
  var vslice_dummy_var_72: int;

  anon0:
    DeviceQueue := actual_DeviceQueue;
    SortKey := actual_SortKey;
    call {:si_unique_call 476} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(DeviceQueue)] != 0;
    call {:si_unique_call 477} sdv_309 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_309 != 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(DeviceQueue)] := 0;
    queueEntry := 0;
    goto L17;

  L17:
    call {:si_unique_call 478} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_726 := queueEntry;
    return;

  anon12_Then:
    assume {:partition} sdv_309 == 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    havoc nextEntry;
    goto L21;

  L21:
    call {:si_unique_call 479} nextEntry, queueEntry, sdv_310 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(nextEntry, queueEntry, sdv_310, SortKey);
    goto L21_last;

  L21_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 480} sdv_310 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_310;
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} nextEntry != 0;
    assume nextEntry > 0;
    havoc nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    goto L22;

  L22:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 481} vslice_dummy_var_72 := sdv_RemoveEntryList(0);
    goto L36;

  L36:
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto L17;

  anon14_Then:
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    call {:si_unique_call 482} nextEntry := RemoveHeadList(DeviceListHead__KDEVICE_QUEUE(DeviceQueue));
    call {:si_unique_call 483} sdv_312 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_312;
    goto L36;

  anon13_Then:
    goto L22;

  anon11_Then:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(DeviceQueue)] == 0;
    queueEntry := 0;
    goto L17;
}



procedure {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_10: int, actual_Context_8: int) returns (Tmp_740: int);
  modifies alloc, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_10: int, actual_Context_8: int) returns (Tmp_740: int)
{
  var {:scalar} sdv_316: int;
  var {:pointer} Tmp_741: int;
  var {:pointer} DeviceExtension_10: int;
  var {:pointer} Context_8: int;
  var vslice_dummy_var_73: int;

  anon0:
    DeviceExtension_10 := actual_DeviceExtension_10;
    Context_8 := actual_Context_8;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Context_8 != 0;
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 484} Free1394DataMapping(DeviceExtension_10, Context_8);
    goto L7;

  L7:
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 485} sdv_ExFreePool(0);
    assume {:nonnull} Context_8 != 0;
    assume Context_8 > 0;
    goto L13;

  L13:
    call {:si_unique_call 486} vslice_dummy_var_73 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    call {:si_unique_call 487} Tmp_741 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    call {:si_unique_call 488} sdv_316 := sdv_InterlockedDecrement(Tmp_741);
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    Tmp_740 := sdv_316;
    goto L1;

  L1:
    return;

  anon12_Then:
    goto L13;

  anon11_Then:
    goto L7;

  anon10_Then:
    goto L4;

  L4:
    Tmp_740 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} Context_8 == 0;
    goto L4;
}



procedure {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_742: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_742 == -1073741811 || Tmp_742 == -1073741823 || Tmp_742 == 0 || Tmp_742 == 5 || Tmp_742 == -1073741789 || Tmp_742 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_742: int)
{
  var {:scalar} Tmp_743: int;
  var {:pointer} RootHandle: int;
  var {:scalar} Tmp_744: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_745: int;
  var {:pointer} sdv_319: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} sdv_320: int;
  var {:scalar} KeyLength: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} Tmp_746: int;
  var {:pointer} DwData: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 489} uniTempName := __HAVOC_malloc(12);
    DwData := actual_DwData;
    ntStatus_1 := 0;
    RootHandle := 0;
    call {:si_unique_call 490} sdv_do_paged_code_check();
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 491} ntStatus_1 := IoOpenDeviceRegistryKey(0, 1, 131097, 0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_1 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_744;
    call {:si_unique_call 492} sdv_319 := ExAllocatePoolWithTag(0, Tmp_744, 846226003);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    KeyLength := 20;
    call {:si_unique_call 493} sdv_320 := ExAllocatePoolWithTag(0, KeyLength, 846226003);
    KeyInfo := sdv_320;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_743;
    call {:si_unique_call 494} sdv_RtlZeroMemory(0, Tmp_743);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 495} vslice_dummy_var_75 := corral_nondet();
    call {:si_unique_call 496} Tmp_745 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    call {:si_unique_call 497} ntStatus_1 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_745);
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc ResultLength_1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} ntStatus_1 >= 0;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_746 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    goto L50;

  L50:
    call {:si_unique_call 498} sdv_ExFreePool(0);
    goto L54;

  L54:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} RootHandle != 0;
    call {:si_unique_call 499} vslice_dummy_var_74 := ZwClose(0);
    goto L55;

  L55:
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 500} sdv_ExFreePool(0);
    goto L59;

  L59:
    Tmp_742 := ntStatus_1;
    return;

  anon16_Then:
    goto L59;

  anon15_Then:
    assume {:partition} RootHandle == 0;
    goto L55;

  anon14_Then:
    assume {:partition} 0 > ntStatus_1;
    goto L50;

  anon18_Then:
    assume {:partition} KeyInfo == 0;
    ntStatus_1 := -1073741670;
    goto L54;

  anon17_Then:
    ntStatus_1 := -1073741670;
    goto L54;

  anon13_Then:
    assume {:partition} 0 > ntStatus_1;
    ntStatus_1 := -1073741670;
    goto L54;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address(actual_DeviceObject_14: int, actual_Buffer_1: int, actual_Length_7: int, actual_AccessType: int, actual_Context_9: int) returns (Tmp_755: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address(actual_DeviceObject_14: int, actual_Buffer_1: int, actual_Length_7: int, actual_AccessType: int, actual_Context_9: int) returns (Tmp_755: int)
{
  var {:pointer} Tmp_756: int;
  var {:pointer} Tmp_757: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} Tmp_759: int;
  var {:pointer} Tmp_760: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Tmp_763: int;
  var {:pointer} Tmp_764: int;
  var {:pointer} Tmp_765: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} Tmp_769: int;
  var {:pointer} Tmp_770: int;
  var {:pointer} Tmp_771: int;
  var {:pointer} Tmp_772: int;
  var {:scalar} status_21: int;
  var {:pointer} packet_8: int;
  var {:pointer} Tmp_773: int;
  var {:pointer} deviceExtension_5: int;
  var {:pointer} Tmp_775: int;
  var {:pointer} Tmp_776: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Buffer_1: int;
  var {:scalar} Length_7: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_3119: int;
  var vslice_dummy_var_3120: int;
  var vslice_dummy_var_3121: int;

  anon0:
    call {:si_unique_call 501} packet_8 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Buffer_1 := actual_Buffer_1;
    Length_7 := actual_Length_7;
    AccessType := actual_AccessType;
    Context_9 := actual_Context_9;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc deviceExtension_5;
    call {:si_unique_call 502} AllocateIrpAndIrb(deviceExtension_5, packet_8);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_757;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_761;
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_758;
    assume {:nonnull} Tmp_758 != 0;
    assume Tmp_758 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_760;
    assume {:nonnull} Tmp_760 != 0;
    assume Tmp_760 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_771;
    assume {:nonnull} Tmp_771 != 0;
    assume Tmp_771 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_775;
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_770;
    assume {:nonnull} Tmp_770 != 0;
    assume Tmp_770 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_756;
    assume {:nonnull} Tmp_756 != 0;
    assume Tmp_756 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_765;
    assume {:nonnull} Tmp_765 != 0;
    assume Tmp_765 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_776;
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_767;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Buffer_1 != 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_773;
    assume {:nonnull} Tmp_773 != 0;
    assume Tmp_773 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    call {:si_unique_call 503} boogieTmp := IoAllocateMdl(0, Length_7, 0, 0, 0);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_772;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_3119;
    call {:si_unique_call 504} status_21 := Sbp2SendRequest#1(deviceExtension_5, vslice_dummy_var_3119, 2);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_21 >= 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_768;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_768 != 0;
    assume Tmp_768 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Buffer_1 == 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_769;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    call {:si_unique_call 505} boogieTmp := sdv_MmGetMdlVirtualAddress(0);
    goto L48;

  L48:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_3120;
    call {:si_unique_call 506} DeAllocateIrpAndIrb(deviceExtension_5, vslice_dummy_var_3120);
    Tmp_755 := status_21;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} Buffer_1 != 0;
    goto L48;

  anon13_Then:
    assume {:partition} 0 > status_21;
    goto L48;

  anon12_Then:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_3121;
    call {:si_unique_call 507} DeAllocateIrpAndIrb(deviceExtension_5, vslice_dummy_var_3121);
    Tmp_755 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:partition} Buffer_1 == 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_764;
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    goto L43;

  anon11_Then:
    Tmp_755 := -1073741670;
    goto L1;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 508} vslice_dummy_var_76 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_13: int, actual_Packet: int);
  modifies alloc, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_13: int, actual_Packet: int)
{
  var {:pointer} pkt: int;
  var {:pointer} sdv_341: int;
  var {:pointer} sdv_342: int;
  var {:pointer} sdv_343: int;
  var {:pointer} Tmp_789: int;
  var {:pointer} DeviceExtension_13: int;
  var {:pointer} Packet: int;
  var boogieTmp: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_3122: int;

  anon0:
    call {:si_unique_call 509} vslice_dummy_var_77 := __HAVOC_malloc(4);
    DeviceExtension_13 := actual_DeviceExtension_13;
    Packet := actual_Packet;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 510} sdv_341 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto L10;

  L10:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L14;

  L14:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc pkt;
    goto L1;

  L1:
    return;

  anon12_Then:
    call {:si_unique_call 511} sdv_342 := ExAllocatePoolWithTag(0, 24, 846226035);
    pkt := sdv_342;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} pkt != 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    call {:si_unique_call 512} sdv_343 := ExAllocatePoolWithTag(0, 344, 846226035);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} DeviceExtension_13 != 0;
    assume DeviceExtension_13 > 0;
    havoc Tmp_789;
    assume {:nonnull} Tmp_789 != 0;
    assume Tmp_789 > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_3122;
    call {:si_unique_call 513} boogieTmp := IoAllocateIrp(vslice_dummy_var_3122, 0);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto L14;

  anon13_Then:
    call {:si_unique_call 514} sdv_ExFreePool(0);
    call {:si_unique_call 515} sdv_ExFreePool(0);
    goto L1;

  anon15_Then:
    call {:si_unique_call 516} sdv_ExFreePool(0);
    goto L1;

  anon14_Then:
    assume {:partition} pkt == 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    goto L10;
}



procedure {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_790: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE;
  free ensures {:va_keep} Tmp_790 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_790: int)
{
  var {:scalar} inserted: int;
  var {:pointer} nextEntry_1: int;
  var {:pointer} queueEntry_1: int;
  var {:pointer} sdv_345: int;
  var {:pointer} queueEntry2: int;
  var {:pointer} queue: int;
  var {:pointer} DeviceQueue_1: int;
  var {:pointer} DeviceQueueEntry: int;
  var {:scalar} SortKey_1: int;

  anon0:
    DeviceQueue_1 := actual_DeviceQueue_1;
    DeviceQueueEntry := actual_DeviceQueueEntry;
    SortKey_1 := actual_SortKey_1;
    queue := DeviceQueue_1;
    queueEntry_1 := DeviceQueueEntry;
    call {:si_unique_call 517} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue)] == 1;
    inserted := 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    havoc nextEntry_1;
    goto L18;

  L18:
    call {:si_unique_call 518} nextEntry_1, sdv_345, queueEntry2 := Sbp2InsertByKeyDeviceQueue_loop_L18(nextEntry_1, sdv_345, queueEntry2, SortKey_1);
    goto L18_last;

  L18_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 519} sdv_345 := sdv_containing_record(nextEntry_1, 0);
    queueEntry2 := sdv_345;
    assume {:nonnull} queueEntry2 != 0;
    assume queueEntry2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L19;

  L19:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 520} InsertHeadList(nextEntry_1, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_1));
    goto L30;

  L30:
    call {:si_unique_call 521} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_790 := inserted;
    return;

  anon7_Then:
    goto L19;

  anon8_Then:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue)] != 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue)] := 1;
    inserted := 0;
    goto L30;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange(actual_DeviceExtension_14: int, actual_Context_10: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "FreeAddressRange"} FreeAddressRange(actual_DeviceExtension_14: int, actual_Context_10: int)
{
  var {:pointer} Tmp_793: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} Tmp_795: int;
  var {:scalar} sdv_346: int;
  var {:pointer} Tmp_797: int;
  var {:pointer} Tmp_798: int;
  var {:pointer} Tmp_799: int;
  var {:scalar} sdv_347: int;
  var {:pointer} Tmp_800: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} packet_9: int;
  var {:pointer} Tmp_802: int;
  var {:pointer} Tmp_803: int;
  var {:pointer} DeviceExtension_14: int;
  var {:pointer} Context_10: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_3123: int;
  var vslice_dummy_var_3124: int;

  anon0:
    call {:si_unique_call 522} vslice_dummy_var_78 := __HAVOC_malloc(4);
    call {:si_unique_call 523} packet_9 := __HAVOC_malloc(4);
    DeviceExtension_14 := actual_DeviceExtension_14;
    Context_10 := actual_Context_10;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 524} AllocateIrpAndIrb(DeviceExtension_14, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_798;
    assume {:nonnull} Tmp_798 != 0;
    assume Tmp_798 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_800;
    assume {:nonnull} Tmp_800 != 0;
    assume Tmp_800 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_799;
    assume {:nonnull} Tmp_799 != 0;
    assume Tmp_799 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_803;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_795;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Context_10 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_14);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto L24;

  L24:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_793;
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    call {:si_unique_call 525} sdv_347 := sdv_KeGetCurrentIrql();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_347 >= 2;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    goto L40;

  L40:
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 526} IoFreeMdl(0);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto L42;

  L42:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_3123;
    call {:si_unique_call 527} DeAllocateIrpAndIrb(DeviceExtension_14, vslice_dummy_var_3123);
    goto L1;

  L1:
    return;

  anon24_Then:
    goto L42;

  anon22_Then:
    goto L29;

  L29:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_3124;
    call {:si_unique_call 528} vslice_dummy_var_79 := Sbp2SendRequest#1(DeviceExtension_14, vslice_dummy_var_3124, 2);
    goto L40;

  anon21_Then:
    assume {:partition} 2 > sdv_347;
    goto L29;

  anon20_Then:
    assume {:partition} Context_10 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_14);
    call {:si_unique_call 529} sdv_346 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    havoc Tmp_802;
    assume {:nonnull} Tmp_802 != 0;
    assume Tmp_802 > 0;
    goto L24;

  anon23_Then:
    assume {:nonnull} DeviceExtension_14 != 0;
    assume DeviceExtension_14 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Context_10 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_14);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_797;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    havoc Tmp_801;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    goto L24;

  anon19_Then:
    assume {:partition} Context_10 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_14);
    goto L24;

  anon18_Then:
    goto L1;

  anon17_Then:
    goto L1;
}



procedure {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_15: int, actual_Packet_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_15: int, actual_Packet_1: int)
{
  var {:pointer} DeviceExtension_15: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;

  anon0:
    call {:si_unique_call 530} vslice_dummy_var_80 := __HAVOC_malloc(4);
    DeviceExtension_15 := actual_DeviceExtension_15;
    assume {:nonnull} DeviceExtension_15 != 0;
    assume DeviceExtension_15 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 531} vslice_dummy_var_81 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 532} IoFreeIrp(0);
    call {:si_unique_call 533} sdv_ExFreePool(0);
    call {:si_unique_call 534} sdv_ExFreePool(0);
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus(actual_DeviceObject_15: int, actual_Context_11: int, actual_StatusType: int) returns (Tmp_806: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus(actual_DeviceObject_15: int, actual_Context_11: int, actual_StatusType: int) returns (Tmp_806: int)
{
  var {:pointer} Tmp_807: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Tmp_809: int;
  var {:pointer} Tmp_810: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} Tmp_814: int;
  var {:pointer} Tmp_815: int;
  var {:pointer} Tmp_816: int;
  var {:pointer} Tmp_817: int;
  var {:pointer} Tmp_818: int;
  var {:pointer} Tmp_819: int;
  var {:pointer} Tmp_820: int;
  var {:pointer} Tmp_821: int;
  var {:pointer} Tmp_822: int;
  var {:pointer} Tmp_823: int;
  var {:pointer} Tmp_824: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} Tmp_826: int;
  var {:scalar} status_24: int;
  var {:pointer} packet_10: int;
  var {:pointer} deviceExtension_6: int;
  var {:pointer} Tmp_827: int;
  var {:pointer} Tmp_828: int;
  var {:pointer} Tmp_829: int;
  var {:pointer} Tmp_830: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Context_11: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_3125: int;
  var vslice_dummy_var_3126: int;

  anon0:
    call {:si_unique_call 535} packet_10 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    Context_11 := actual_Context_11;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 536} AllocateIrpAndIrb(deviceExtension_6, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_815;
    assume {:nonnull} Tmp_815 != 0;
    assume Tmp_815 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_807;
    assume {:nonnull} Tmp_807 != 0;
    assume Tmp_807 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_818;
    assume {:nonnull} Tmp_818 != 0;
    assume Tmp_818 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_823;
    assume {:nonnull} Tmp_823 != 0;
    assume Tmp_823 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_820;
    assume {:nonnull} Tmp_820 != 0;
    assume Tmp_820 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_808;
    assume {:nonnull} Tmp_808 != 0;
    assume Tmp_808 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_825;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_821;
    assume {:nonnull} Tmp_821 != 0;
    assume Tmp_821 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_829;
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_809;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_819;
    assume {:nonnull} Tmp_819 != 0;
    assume Tmp_819 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_828;
    assume {:nonnull} Tmp_828 != 0;
    assume Tmp_828 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType != 2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} StatusType != 4;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_824;
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_810;
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_826;
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_817;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L55;

  L55:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_827;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_813;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} Tmp_813 != 0;
    assume Tmp_813 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_3125;
    call {:si_unique_call 537} status_24 := Sbp2SendRequest#1(deviceExtension_6, vslice_dummy_var_3125, 2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_24 >= 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_816;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_3126;
    call {:si_unique_call 538} DeAllocateIrpAndIrb(deviceExtension_6, vslice_dummy_var_3126);
    Tmp_806 := status_24;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} 0 > status_24;
    goto L43;

  anon18_Then:
    goto L55;

  anon22_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon23_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_822;
    assume {:nonnull} Tmp_822 != 0;
    assume Tmp_822 > 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    call {:si_unique_call 539} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    status_24 := -1073741670;
    goto L43;

  anon19_Then:
    goto L27;

  anon24_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_830;
    assume {:nonnull} Tmp_830 != 0;
    assume Tmp_830 > 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    call {:si_unique_call 540} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    status_24 := -1073741670;
    goto L43;

  anon20_Then:
    goto L27;

  anon17_Then:
    Tmp_806 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_16: int, actual_DeviceInfo: int) returns (Tmp_831: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_831 == -1073741811 || Tmp_831 == -1073741823 || Tmp_831 == 0 || Tmp_831 == 5 || Tmp_831 == -1073741789 || Tmp_831 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_16: int, actual_DeviceInfo: int) returns (Tmp_831: int)
{
  var {:pointer} Tmp_832: int;
  var {:pointer} Tmp_833: int;
  var {:scalar} devType: int;
  var {:scalar} fw: int;
  var {:pointer} Tmp_834: int;
  var {:pointer} Tmp_835: int;
  var {:scalar} sdv_355: int;
  var {:pointer} Tmp_836: int;
  var {:scalar} sdv_356: int;
  var {:scalar} sdv_357: int;
  var {:scalar} sdv_358: int;
  var {:scalar} uniTemp: int;
  var {:scalar} status_25: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} DeviceInfo: int;

  anon0:
    call {:si_unique_call 541} uniTemp := __HAVOC_malloc(12);
    DeviceObject_16 := actual_DeviceObject_16;
    DeviceInfo := actual_DeviceInfo;
    call {:si_unique_call 542} Tmp_832 := __HAVOC_malloc(48);
    call {:si_unique_call 543} Tmp_833 := __HAVOC_malloc(64);
    call {:si_unique_call 544} Tmp_834 := __HAVOC_malloc(20);
    call {:si_unique_call 545} Tmp_835 := __HAVOC_malloc(68);
    call {:si_unique_call 546} Tmp_836 := __HAVOC_malloc(68);
    status_25 := 0;
    call {:si_unique_call 547} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    Tmp_832 := strConst__li2bpl6;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    call {:si_unique_call 548} status_25 := Sbp2GetRegistryValue(DeviceObject_16, Tmp_832, LegacyFlags__DEVICE_INFORMATION(DeviceInfo));
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    havoc devType;
    call {:si_unique_call 549} fw := corral_nondet();
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} devType != 14;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} devType != 0;
    goto L26;

  L26:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L27;

  L27:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L29;

  L29:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L31;

  L31:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L33;

  L33:
    Tmp_831 := status_25;
    return;

  anon41_Then:
    goto L33;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L29;

  anon38_Then:
    goto L27;

  anon37_Then:
    assume {:partition} devType == 0;
    goto L21;

  L21:
    Tmp_835 := strConst__li2bpl2;
    call {:si_unique_call 550} RtlInitUnicodeString(uniTemp, Tmp_835);
    call {:si_unique_call 551} sdv_355 := corral_nondet();
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_355 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L39;

  L39:
    Tmp_833 := strConst__li2bpl3;
    call {:si_unique_call 552} RtlInitUnicodeString(uniTemp, Tmp_833);
    call {:si_unique_call 553} sdv_356 := corral_nondet();
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_356 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L47;

  L47:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_25 >= 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L49;

  L49:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} fw != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} fw != 40;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} fw != 41;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} fw != 4097;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} fw != 41144;
    goto L56;

  L56:
    Tmp_834 := strConst__li2bpl4;
    call {:si_unique_call 554} RtlInitUnicodeString(uniTemp, Tmp_834);
    call {:si_unique_call 555} sdv_357 := corral_nondet();
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_357 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L26;

  anon48_Then:
    assume {:partition} sdv_357 == 0;
    Tmp_836 := strConst__li2bpl5;
    call {:si_unique_call 556} RtlInitUnicodeString(uniTemp, Tmp_836);
    call {:si_unique_call 557} sdv_358 := corral_nondet();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_358 != 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L26;

  anon49_Then:
    assume {:partition} sdv_358 == 0;
    goto L26;

  anon50_Then:
    assume {:partition} fw == 41144;
    goto L54;

  L54:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L56;

  anon51_Then:
    assume {:partition} fw == 4097;
    goto L54;

  anon52_Then:
    assume {:partition} fw == 41;
    goto L54;

  anon53_Then:
    assume {:partition} fw == 40;
    goto L54;

  anon45_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    goto L56;

  anon47_Then:
    goto L54;

  anon46_Then:
    goto L26;

  anon44_Then:
    assume {:partition} 0 > status_25;
    goto L49;

  anon43_Then:
    assume {:partition} sdv_356 == 0;
    goto L47;

  anon42_Then:
    assume {:partition} sdv_355 == 0;
    goto L39;

  anon54_Then:
    assume {:partition} devType == 14;
    goto L21;
}



procedure {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_18: int, actual_Context_12: int, actual_Status_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_18: int, actual_Context_12: int, actual_Status_2: int)
{
  var {:pointer} sdv_360: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_841: int;
  var {:pointer} Context_12: int;
  var {:scalar} Status_2: int;
  var vslice_dummy_var_82: int;

  anon0:
    call {:si_unique_call 558} vslice_dummy_var_82 := __HAVOC_malloc(4);
    Context_12 := actual_Context_12;
    Status_2 := actual_Status_2;
    call {:si_unique_call 559} Tmp_841 := __HAVOC_malloc(4);
    call {:si_unique_call 560} sdv_360 := IoAllocateErrorLogEntry(0, 80);
    errorLogEntry := sdv_360;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} errorLogEntry != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Status_2 != -1073741811;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Status_2 != -1073741808;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Status_2 != -1073741670;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status_2 != -1073741666;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_2 != -1073741434;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Status_2 != -1073741248;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Status_2 == 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  L18:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Context_12 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_841;
    call {:si_unique_call 561} sdv_RtlCopyMemory(0, 0, 32);
    goto L30;

  L30:
    call {:si_unique_call 562} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} Context_12 == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L30;

  anon20_Then:
    assume {:partition} Status_2 != 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon21_Then:
    assume {:partition} Status_2 == -1073741248;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon22_Then:
    assume {:partition} Status_2 == -1073741434;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon23_Then:
    assume {:partition} Status_2 == -1073741666;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon24_Then:
    assume {:partition} Status_2 == -1073741670;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon25_Then:
    assume {:partition} Status_2 == -1073741808;
    goto L11;

  L11:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L18;

  anon19_Then:
    assume {:partition} Status_2 == -1073741811;
    goto L11;

  anon26_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_83: int;

  anon0:
    call {:si_unique_call 563} vslice_dummy_var_83 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_13: int) returns (Tmp_875: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_875 == -1073741670 || Tmp_875 == -1073741823 || Tmp_875 == 259 || Tmp_875 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_13: int) returns (Tmp_875: int)
{
  var {:pointer} Tmp_876: int;
  var {:pointer} cdb_1: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_878: int;
  var {:pointer} Tmp_879: int;
  var {:scalar} Tmp_880: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} Tmp_883: int;
  var {:pointer} Tmp_884: int;
  var {:pointer} Tmp_885: int;
  var {:scalar} bSetCacheHack: int;
  var {:pointer} Tmp_886: int;
  var {:pointer} Tmp_887: int;
  var {:pointer} Context_13: int;
  var vslice_dummy_var_3127: int;
  var vslice_dummy_var_3128: int;
  var vslice_dummy_var_3129: int;
  var vslice_dummy_var_3130: int;

  anon0:
    call {:si_unique_call 564} Tmp_879 := __HAVOC_malloc(4);
    call {:si_unique_call 565} Tmp_886 := __HAVOC_malloc(4);
    Context_13 := actual_Context_13;
    call {:si_unique_call 566} Tmp_877 := __HAVOC_malloc(64);
    call {:si_unique_call 567} Tmp_882 := __HAVOC_malloc(64);
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    havoc Tmp_883;
    assume {:nonnull} Tmp_883 != 0;
    assume Tmp_883 > 0;
    havoc pdoExtension;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_886 != 0;
    assume Tmp_886 > 0;
    Tmp_881 := Tmp_886;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_3127;
    havoc vslice_dummy_var_3128;
    call {:si_unique_call 568} Tmp_875 := Rbc_Scsi_Conversion(vslice_dummy_var_3127, Tmp_881, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension), 0, vslice_dummy_var_3128, 0);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L9;

  L9:
    Tmp_875 := 259;
    goto L1;

  anon18_Then:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    havoc Tmp_876;
    assume {:nonnull} Tmp_876 != 0;
    assume Tmp_876 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_875 := -1073741823;
    goto L1;

  anon19_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_887;
    assume {:nonnull} Tmp_887 != 0;
    assume Tmp_887 > 0;
    havoc Tmp_880;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Tmp_880 == 0;
    bSetCacheHack := 0;
    goto L46;

  L46:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_879 != 0;
    assume Tmp_879 > 0;
    Tmp_885 := Tmp_879;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_3129;
    havoc vslice_dummy_var_3130;
    call {:si_unique_call 569} Tmp_875 := Rbc_Scsi_Conversion(vslice_dummy_var_3129, Tmp_885, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension), 1, vslice_dummy_var_3130, bSetCacheHack);
    goto L1;

  anon20_Then:
    assume {:partition} Tmp_880 != 0;
    bSetCacheHack := 1;
    goto L46;

  anon16_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    havoc Tmp_884;
    assume {:nonnull} Tmp_884 != 0;
    assume Tmp_884 > 0;
    havoc Tmp_877;
    assume {:nonnull} Tmp_877 != 0;
    assume Tmp_877 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    havoc Tmp_878;
    assume {:nonnull} Tmp_878 != 0;
    assume Tmp_878 > 0;
    havoc Tmp_882;
    cdb_1 := Tmp_882;
    assume {:nonnull} cdb_1 != 0;
    assume cdb_1 > 0;
    goto L9;

  anon21_Then:
    goto L9;

  anon17_Then:
    goto L9;
}



procedure {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_20: int, actual_Irp_15: int) returns (Tmp_903: int);
  modifies alloc, LockDepth, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_20: int, actual_Irp_15: int) returns (Tmp_903: int)
{
  var {:pointer} irpStack_5: int;
  var {:pointer} Tmp_904: int;
  var {:scalar} sdv_390: int;
  var {:scalar} cIrql_3: int;
  var {:pointer} srb_3: int;
  var {:scalar} status_29: int;
  var {:pointer} tIrp: int;
  var {:pointer} deviceExtension_9: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_3131: int;
  var vslice_dummy_var_3132: int;
  var vslice_dummy_var_3133: int;

  anon0:
    DeviceObject_20 := actual_DeviceObject_20;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 570} irpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc deviceExtension_9;
    call {:si_unique_call 571} status_29 := sdv_IoAcquireRemoveLock(0, 0);
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc srb_3;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} status_29 >= 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    call {:si_unique_call 572} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 573} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 574} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 575} sdv_390 := corral_nondet();
    tIrp := sdv_390;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} tIrp != 0;
    call {:si_unique_call 576} Sbp2StartPacket#1(DeviceObject_20, tIrp, 0);
    goto L52;

  L52:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 577} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 578} sdv_KeRaiseIrql(2, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_3131;
    call {:si_unique_call 579} Sbp2StartNextPacketByKey#1(DeviceObject_20, vslice_dummy_var_3131);
    call {:si_unique_call 580} sdv_KeLowerIrql(cIrql_3);
    goto L56;

  L56:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    status_29 := -1073741632;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  L72:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 581} vslice_dummy_var_88 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_9), 0);
    call {:si_unique_call 582} sdv_IoCompleteRequest(0, 0);
    Tmp_903 := status_29;
    goto L1;

  L1:
    call {:si_unique_call 583} SLIC_Sbp2ScsiRequests_exit(strConst__li2bpl1, Irp_15, Tmp_903);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 584} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 585} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_3132;
    call {:si_unique_call 586} vslice_dummy_var_84 := FreeAsyncRequestContext(deviceExtension_9, vslice_dummy_var_3132);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto L85;

  L85:
    call {:si_unique_call 587} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    call {:si_unique_call 588} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 589} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 590} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L93;

  L93:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 591} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 592} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 593} sdv_KeRaiseIrql(2, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_3133;
    call {:si_unique_call 594} Sbp2StartNextPacketByKey#1(DeviceObject_20, vslice_dummy_var_3133);
    call {:si_unique_call 595} sdv_KeLowerIrql(cIrql_3);
    goto L106;

  L106:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 596} vslice_dummy_var_85 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_9), 0);
    Tmp_903 := 0;
    goto L1;

  anon64_Then:
    goto L106;

  anon63_Then:
    goto L93;

  anon62_Then:
    goto L85;

  anon61_Then:
    status_29 := 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  anon59_Then:
    goto L56;

  anon84_Then:
    assume {:partition} tIrp == 0;
    goto L52;

  anon75_Then:
    status_29 := -1073741637;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  anon76_Then:
    call {:si_unique_call 597} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 598} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 599} sdv_KeReleaseSpinLock(0, cIrql_3);
    status_29 := -1073741632;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  anon65_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 600} sdv_KeReleaseSpinLock(0, cIrql_3);
    status_29 := 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  anon77_Then:
    goto L31;

  L31:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    call {:si_unique_call 601} CleanupOrbList#1(deviceExtension_9, -1073741248);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    status_29 := 0;
    goto L72;

  anon58_Then:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    status_29 := 0;
    goto L72;

  anon78_Then:
    call {:si_unique_call 602} status_29 := Sbp2Issue1394BusReset(deviceExtension_9);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} status_29 >= 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  anon66_Then:
    assume {:partition} 0 > status_29;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L72;

  anon79_Then:
    goto L31;

  anon80_Then:
    call {:si_unique_call 603} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 604} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 605} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    status_29 := 0;
    goto L72;

  anon81_Then:
    call {:si_unique_call 606} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 607} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    status_29 := 17;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto L161;

  L161:
    call {:si_unique_call 608} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L72;

  anon67_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    status_29 := 0;
    goto L161;

  anon57_Then:
    call {:si_unique_call 609} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 610} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 611} sdv_KeReleaseSpinLock(0, cIrql_3);
    status_29 := -1073741632;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 612} vslice_dummy_var_86 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_9), 0);
    call {:si_unique_call 613} sdv_IoCompleteRequest(0, 0);
    Tmp_903 := status_29;
    goto L1;

  anon68_Then:
    call {:si_unique_call 614} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    call {:si_unique_call 615} vslice_dummy_var_87 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_9), 0);
    call {:si_unique_call 616} sdv_IoCompleteRequest(0, 0);
    Tmp_903 := -1073741823;
    goto L1;

  anon70_Then:
    goto L187;

  L187:
    call {:si_unique_call 617} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 618} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 619} sdv_KeAcquireSpinLock(0, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L210;

  L210:
    call {:si_unique_call 620} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 621} Sbp2DeferPendingRequest(deviceExtension_9, Irp_15);
    goto L216;

  L216:
    Tmp_903 := 259;
    goto L1;

  anon73_Then:
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 622} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 623} Tmp_904 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    call {:si_unique_call 624} sdv_KeRaiseIrql(2, Tmp_904);
    assume {:nonnull} Tmp_904 != 0;
    assume Tmp_904 > 0;
    havoc cIrql_3;
    call {:si_unique_call 625} Sbp2StartIo#1(DeviceObject_20, Irp_15);
    call {:si_unique_call 626} sdv_KeLowerIrql(cIrql_3);
    goto L216;

  anon74_Then:
    goto L210;

  anon72_Then:
    goto L204;

  L204:
    call {:si_unique_call 627} sdv_KeReleaseSpinLock(0, cIrql_3);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    call {:si_unique_call 628} Sbp2StartPacket#1(DeviceObject_20, Irp_15, QueueSortKey__SCSI_REQUEST_BLOCK(srb_3));
    goto L216;

  anon71_Then:
    goto L204;

  anon69_Then:
    goto L187;

  anon82_Then:
    assume {:partition} 0 > status_29;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 629} sdv_IoCompleteRequest(0, 0);
    Tmp_903 := status_29;
    goto L1;
}



procedure {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_17: int, actual_CallbackContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_17: int, actual_CallbackContext_1: int)
{
  var {:scalar} i_3: int;
  var {:pointer} Tmp_906: int;
  var {:pointer} Tmp_907: int;
  var {:pointer} Tmp_908: int;
  var {:scalar} size: int;
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} Tmp_914: int;
  var {:scalar} sdv_391: int;
  var {:pointer} Tmp_915: int;
  var {:pointer} Tmp_916: int;
  var {:pointer} Tmp_918: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Tmp_920: int;
  var {:scalar} sdv_392: int;
  var {:pointer} Tmp_921: int;
  var {:pointer} Tmp_922: int;
  var {:pointer} Tmp_923: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} Tmp_927: int;
  var {:scalar} sdv_393: int;
  var {:pointer} Tmp_928: int;
  var {:pointer} Tmp_929: int;
  var {:pointer} Tmp_930: int;
  var {:pointer} Tmp_931: int;
  var {:pointer} Tmp_932: int;
  var {:scalar} sdv_394: int;
  var {:pointer} Tmp_934: int;
  var {:scalar} sdv_395: int;
  var {:scalar} sdv_396: int;
  var {:pointer} Tmp_935: int;
  var {:scalar} Tmp_936: int;
  var {:pointer} Tmp_937: int;
  var {:scalar} Tmp_938: int;
  var {:pointer} Tmp_939: int;
  var {:pointer} Tmp_941: int;
  var {:pointer} Tmp_942: int;
  var {:pointer} Tmp_943: int;
  var {:pointer} Tmp_944: int;
  var {:scalar} sdv_397: int;
  var {:pointer} Tmp_946: int;
  var {:pointer} Tmp_948: int;
  var {:scalar} Tmp_949: int;
  var {:pointer} Tmp_950: int;
  var {:pointer} Tmp_951: int;
  var {:pointer} Tmp_952: int;
  var {:pointer} Tmp_953: int;
  var {:pointer} Tmp_954: int;
  var {:pointer} Tmp_955: int;
  var {:pointer} DeviceExtension_17: int;
  var {:pointer} CallbackContext_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 630} vslice_dummy_var_89 := __HAVOC_malloc(4);
    DeviceExtension_17 := actual_DeviceExtension_17;
    CallbackContext_1 := actual_CallbackContext_1;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_953;
    assume {:nonnull} Tmp_953 != 0;
    assume Tmp_953 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_918;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_918 != 0;
    assume Tmp_918 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_918 != 0;
    assume Tmp_918 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_918 != 0;
    assume Tmp_918 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_918 != 0;
    assume Tmp_918 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_915;
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_907;
    assume {:nonnull} Tmp_907 != 0;
    assume Tmp_907 > 0;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L22;

  L22:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_926;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_932;
    assume {:nonnull} Tmp_926 != 0;
    assume Tmp_926 > 0;
    assume {:nonnull} Tmp_932 != 0;
    assume Tmp_932 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_942;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_942 != 0;
    assume Tmp_942 > 0;
    goto L24;

  L24:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_911;
    assume {:nonnull} Tmp_911 != 0;
    assume Tmp_911 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_954;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_954 != 0;
    assume Tmp_954 > 0;
    call {:si_unique_call 631} boogieTmp := corral_nondet();
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_927;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_923;
    assume {:nonnull} Tmp_923 != 0;
    assume Tmp_923 > 0;
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_922;
    assume {:nonnull} Tmp_922 != 0;
    assume Tmp_922 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_913;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_939;
    assume {:nonnull} Tmp_913 != 0;
    assume Tmp_913 > 0;
    assume {:nonnull} Tmp_939 != 0;
    assume Tmp_939 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_943;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_908;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    assume {:nonnull} Tmp_908 != 0;
    assume Tmp_908 > 0;
    assume {:nonnull} Tmp_943 != 0;
    assume Tmp_943 > 0;
    goto L31;

  L31:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_935;
    assume {:nonnull} Tmp_935 != 0;
    assume Tmp_935 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_936 := 12;
    goto L34;

  L34:
    size := Tmp_936;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 632} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 633} sdv_RtlCopyMemory(0, 0, size);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_930;
    assume {:nonnull} Tmp_930 != 0;
    assume Tmp_930 > 0;
    return;

  anon26_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_944;
    assume {:nonnull} Tmp_944 != 0;
    assume Tmp_944 > 0;
    havoc Tmp_936;
    goto L34;

  anon25_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_946;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_934;
    assume {:nonnull} Tmp_934 != 0;
    assume Tmp_934 > 0;
    assume {:nonnull} Tmp_946 != 0;
    assume Tmp_946 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_929;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_937;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    assume {:nonnull} Tmp_929 != 0;
    assume Tmp_929 > 0;
    assume {:nonnull} Tmp_937 != 0;
    assume Tmp_937 > 0;
    goto L31;

  anon20_Then:
    goto L20;

  L20:
    i_3 := 0;
    goto L46;

  L46:
    call {:si_unique_call 634} i_3, Tmp_928, Tmp_938, Tmp_941, Tmp_949 := Sbp2InitializeOrb_loop_L46(i_3, Tmp_928, sdv_395, sdv_396, Tmp_938, Tmp_941, Tmp_949, CallbackContext_1);
    goto L46_last;

  L46_last:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_949 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_941;
    assume {:nonnull} Tmp_941 != 0;
    assume Tmp_941 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_938 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_928;
    assume {:nonnull} Tmp_928 != 0;
    assume Tmp_928 > 0;
    i_3 := i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L22;

  anon24_Then:
    goto L20;

  anon19_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_920;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_950;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} Tmp_950 != 0;
    assume Tmp_950 > 0;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_921;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    Tmp_951 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_17);
    assume {:nonnull} Tmp_921 != 0;
    assume Tmp_921 > 0;
    assume {:nonnull} Tmp_951 != 0;
    assume Tmp_951 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_955;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    Tmp_948 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_17);
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    goto L63;

  L63:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_919;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_952;
    assume {:nonnull} Tmp_919 != 0;
    assume Tmp_919 > 0;
    assume {:nonnull} Tmp_952 != 0;
    assume Tmp_952 > 0;
    goto L24;

  anon22_Then:
    goto L59;

  L59:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_916;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    assume {:nonnull} Tmp_916 != 0;
    assume Tmp_916 > 0;
    assume {:nonnull} DeviceExtension_17 != 0;
    assume DeviceExtension_17 > 0;
    assume {:nonnull} Tmp_916 != 0;
    assume Tmp_916 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_931;
    assume {:nonnull} Tmp_931 != 0;
    assume Tmp_931 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_906;
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    goto L63;

  anon27_Then:
    goto L59;

  anon23_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_914;
    assume {:nonnull} Tmp_914 != 0;
    assume Tmp_914 > 0;
    goto L24;
}



procedure {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_18: int, actual_Scsiop: int) returns (Tmp_956: int);
  modifies alloc, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_18: int, actual_Scsiop: int) returns (Tmp_956: int)
{
  var {:scalar} i_4: int;
  var {:pointer} Tmp_957: int;
  var {:pointer} irpStack_6: int;
  var {:pointer} cdb_2: int;
  var {:scalar} waitValue_3: int;
  var {:pointer} inquiryMdl: int;
  var {:scalar} Tmp_958: int;
  var {:pointer} modeMdl: int;
  var {:pointer} sdv_398: int;
  var {:pointer} context_3: int;
  var {:scalar} Tmp_959: int;
  var {:scalar} Tmp_960: int;
  var {:pointer} sdv_402: int;
  var {:pointer} sdv_403: int;
  var {:pointer} Tmp_962: int;
  var {:pointer} irp_4: int;
  var {:pointer} senseInfoBuffer: int;
  var {:pointer} srb_4: int;
  var {:scalar} status_30: int;
  var {:scalar} event_2: int;
  var {:scalar} retryCount: int;
  var {:pointer} DeviceExtension_18: int;
  var {:scalar} Scsiop: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_3134: int;
  var vslice_dummy_var_3135: int;

  anon0:
    call {:si_unique_call 635} waitValue_3 := __HAVOC_malloc(20);
    call {:si_unique_call 636} event_2 := __HAVOC_malloc(124);
    DeviceExtension_18 := actual_DeviceExtension_18;
    Scsiop := actual_Scsiop;
    status_30 := -1073741670;
    retryCount := 0;
    context_3 := 0;
    call {:si_unique_call 637} sdv_398 := sdv_ExAllocateFromNPagedLookasideList(0);
    context_3 := sdv_398;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} context_3 != 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 638} sdv_402 := ExAllocatePoolWithTag(4, 18, 846226035);
    senseInfoBuffer := sdv_402;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} senseInfoBuffer != 0;
    call {:si_unique_call 639} sdv_403 := ExAllocatePoolWithTag(4, 64, 846226035);
    srb_4 := sdv_403;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} srb_4 != 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc Tmp_962;
    assume {:nonnull} Tmp_962 != 0;
    assume Tmp_962 > 0;
    havoc vslice_dummy_var_3134;
    call {:si_unique_call 640} irp_4 := IoAllocateIrp(vslice_dummy_var_3134, 0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} irp_4 != 0;
    goto L50;

  L50:
    call {:si_unique_call 641} i_4, Tmp_957, irpStack_6, cdb_2, inquiryMdl, Tmp_958, modeMdl, Tmp_959, Tmp_960, status_30, retryCount, vslice_dummy_var_90, vslice_dummy_var_91 := Sbp2IssueInternalCommand_loop_L50(i_4, Tmp_957, irpStack_6, cdb_2, waitValue_3, inquiryMdl, Tmp_958, modeMdl, context_3, Tmp_959, Tmp_960, irp_4, senseInfoBuffer, srb_4, status_30, event_2, retryCount, DeviceExtension_18, Scsiop, vslice_dummy_var_90, vslice_dummy_var_91);
    goto L50_last;

  L50_last:
    call {:si_unique_call 661} irpStack_6 := sdv_IoGetNextIrpStackLocation(irp_4);
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpStack_6)] := 15;
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    call {:si_unique_call 662} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    cdb_2 := Cdb__SCSI_REQUEST_BLOCK(srb_4);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Scsiop != 18;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Scsiop == 26;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} retryCount != 0;
    goto L83;

  L83:
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto L71;

  L71:
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 642} KeInitializeEvent(Event__REQUEST_CONTEXT(context_3), 0, 0);
    call {:si_unique_call 643} sdv_IoSetCompletionRoutine(irp_4, li2bplFunctionConstant337, context_3, 1, 1, 1);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc vslice_dummy_var_3135;
    call {:si_unique_call 644} status_30 := sdv_IoCallDriver#1(vslice_dummy_var_3135, irp_4);
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L139;

  L139:
    call {:si_unique_call 645} vslice_dummy_var_90 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc Tmp_958;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Tmp_958 != 1;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc Tmp_960;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Tmp_960 == 18;
    status_30 := 0;
    goto L149;

  L149:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_30 != 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 3 > retryCount;
    i_4 := 0;
    goto L154;

  L154:
    call {:si_unique_call 646} i_4, vslice_dummy_var_91 := Sbp2IssueInternalCommand_loop_L154(i_4, waitValue_3, event_2, DeviceExtension_18, vslice_dummy_var_91);
    goto L154_last;

  L154_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} 6 > i_4;
    call {:si_unique_call 647} KeInitializeEvent(event_2, 0, 0);
    assume {:nonnull} waitValue_3 != 0;
    assume waitValue_3 > 0;
    call {:si_unique_call 648} vslice_dummy_var_91 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_3);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    i_4 := i_4 + 1;
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    assume false;
    return;

  anon62_Then:
    goto L150;

  L150:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 3 > retryCount;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_30 == 0;
    goto L91;

  L91:
    call {:si_unique_call 649} sdv_ExFreePool(0);
    call {:si_unique_call 650} sdv_ExFreePool(0);
    call {:si_unique_call 651} IoFreeMdl(0);
    call {:si_unique_call 652} IoFreeIrp(0);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 653} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_18), context_3);
    Tmp_956 := status_30;
    goto L1;

  L1:
    return;

  anon63_Then:
    assume {:partition} status_30 != 0;
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon58_Then:
    assume {:partition} retryCount >= 3;
    goto L91;

  anon61_Then:
    assume {:partition} i_4 >= 6;
    goto L150;

  anon60_Then:
    assume {:partition} retryCount >= 3;
    goto L150;

  anon59_Then:
    goto L150;

  anon57_Then:
    assume {:partition} status_30 == 0;
    goto L150;

  anon73_Then:
    assume {:partition} Tmp_960 != 18;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} senseInfoBuffer != 0;
    assume senseInfoBuffer > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    status_30 := -1073741808;
    retryCount := retryCount + 1;
    goto L149;

  anon64_Then:
    goto L166;

  L166:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc Tmp_959;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Tmp_959 == 22;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} retryCount > 0;
    status_30 := 17;
    goto L91;

  anon65_Then:
    assume {:partition} 0 >= retryCount;
    goto L171;

  L171:
    retryCount := retryCount + 1;
    status_30 := -1073741823;
    goto L149;

  anon74_Then:
    assume {:partition} Tmp_959 != 22;
    goto L171;

  anon56_Then:
    goto L166;

  anon72_Then:
    assume {:partition} Tmp_958 == 1;
    status_30 := 0;
    goto L150;

  anon54_Then:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_30 != 259;
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    havoc status_30;
    goto L91;

  anon55_Then:
    assume {:partition} status_30 == 259;
    goto L139;

  anon75_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 654} modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} modeMdl == 0;
    goto L91;

  anon52_Then:
    assume {:partition} modeMdl != 0;
    goto L83;

  anon66_Then:
    assume {:partition} Scsiop != 26;
    goto L71;

  anon70_Then:
    assume {:partition} Scsiop == 18;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    havoc Tmp_957;
    assume {:nonnull} Tmp_957 != 0;
    assume Tmp_957 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} retryCount != 0;
    goto L118;

  L118:
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto L71;

  anon71_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 655} inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} inquiryMdl != 0;
    goto L118;

  anon53_Then:
    assume {:partition} inquiryMdl == 0;
    goto L91;

  anon51_Then:
    assume {:partition} irp_4 == 0;
    call {:si_unique_call 656} sdv_ExFreePool(0);
    call {:si_unique_call 657} sdv_ExFreePool(0);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 658} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_18), context_3);
    Tmp_956 := status_30;
    goto L1;

  anon69_Then:
    assume {:partition} srb_4 == 0;
    call {:si_unique_call 659} sdv_ExFreePool(0);
    assume {:nonnull} DeviceExtension_18 != 0;
    assume DeviceExtension_18 > 0;
    call {:si_unique_call 660} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_18), context_3);
    Tmp_956 := status_30;
    goto L1;

  anon68_Then:
    assume {:partition} senseInfoBuffer == 0;
    Tmp_956 := status_30;
    goto L1;

  anon67_Then:
    assume {:partition} context_3 == 0;
    Tmp_956 := status_30;
    goto L1;
}



procedure {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer_1: int, actual_SenseBufferLength: int) returns (Tmp_963: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_963 == 1 || Tmp_963 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer_1: int, actual_SenseBufferLength: int) returns (Tmp_963: int)
{
  var {:pointer} Tmp_964: int;
  var {:pointer} Tmp_965: int;
  var {:pointer} Tmp_966: int;
  var {:pointer} Tmp_967: int;
  var {:pointer} Tmp_968: int;
  var {:pointer} Tmp_970: int;
  var {:pointer} Tmp_971: int;
  var {:pointer} Tmp_972: int;
  var {:pointer} Tmp_973: int;
  var {:pointer} Tmp_974: int;
  var {:pointer} Tmp_975: int;
  var {:scalar} Tmp_976: int;
  var {:pointer} Tmp_977: int;
  var {:pointer} Tmp_978: int;
  var {:scalar} validSense: int;
  var {:pointer} Tmp_979: int;
  var {:pointer} Tmp_981: int;
  var {:pointer} Tmp_982: int;
  var {:pointer} Tmp_983: int;
  var {:pointer} Tmp_984: int;
  var {:pointer} Tmp_985: int;
  var {:pointer} StatusBlock_1: int;
  var {:pointer} SenseBuffer_1: int;
  var {:scalar} SenseBufferLength: int;
  var boogieTmp: int;

  anon0:
    StatusBlock_1 := actual_StatusBlock_1;
    SenseBuffer_1 := actual_SenseBuffer_1;
    SenseBufferLength := actual_SenseBufferLength;
    call {:si_unique_call 663} Tmp_964 := __HAVOC_malloc(228);
    call {:si_unique_call 664} Tmp_965 := __HAVOC_malloc(228);
    call {:si_unique_call 665} Tmp_966 := __HAVOC_malloc(228);
    call {:si_unique_call 666} Tmp_967 := __HAVOC_malloc(228);
    call {:si_unique_call 667} Tmp_968 := __HAVOC_malloc(228);
    call {:si_unique_call 668} Tmp_970 := __HAVOC_malloc(228);
    call {:si_unique_call 669} Tmp_971 := __HAVOC_malloc(228);
    call {:si_unique_call 670} Tmp_972 := __HAVOC_malloc(228);
    call {:si_unique_call 671} Tmp_973 := __HAVOC_malloc(228);
    call {:si_unique_call 672} Tmp_974 := __HAVOC_malloc(228);
    call {:si_unique_call 673} Tmp_975 := __HAVOC_malloc(228);
    call {:si_unique_call 674} Tmp_977 := __HAVOC_malloc(228);
    call {:si_unique_call 675} Tmp_978 := __HAVOC_malloc(228);
    call {:si_unique_call 676} Tmp_979 := __HAVOC_malloc(228);
    call {:si_unique_call 677} Tmp_981 := __HAVOC_malloc(228);
    call {:si_unique_call 678} Tmp_982 := __HAVOC_malloc(228);
    call {:si_unique_call 679} Tmp_983 := __HAVOC_malloc(228);
    call {:si_unique_call 680} Tmp_984 := __HAVOC_malloc(228);
    call {:si_unique_call 681} Tmp_985 := __HAVOC_malloc(228);
    validSense := 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SenseBuffer_1 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 14 <= SenseBufferLength;
    call {:si_unique_call 682} sdv_RtlZeroMemory(0, SenseBufferLength);
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_972;
    assume {:nonnull} Tmp_972 != 0;
    assume Tmp_972 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_968;
    assume {:nonnull} Tmp_968 != 0;
    assume Tmp_968 > 0;
    havoc Tmp_976;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Tmp_976 == 1;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    validSense := 1;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} validSense != 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_983;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_983 != 0;
    assume Tmp_983 > 0;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_964;
    assume {:nonnull} Tmp_964 != 0;
    assume Tmp_964 > 0;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    call {:si_unique_call 683} boogieTmp := corral_nondet();
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_985;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_985 != 0;
    assume Tmp_985 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_966;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_966 != 0;
    assume Tmp_966 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_973;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_973 != 0;
    assume Tmp_973 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_974;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_974 != 0;
    assume Tmp_974 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_984;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_984 != 0;
    assume Tmp_984 > 0;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_979;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_979 != 0;
    assume Tmp_979 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_971;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_971 != 0;
    assume Tmp_971 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_982;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_982 != 0;
    assume Tmp_982 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_975;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_975 != 0;
    assume Tmp_975 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_967;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_967 != 0;
    assume Tmp_967 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_977;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_977 != 0;
    assume Tmp_977 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SenseBufferLength >= 18;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_965;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_965 != 0;
    assume Tmp_965 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_970;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_970 != 0;
    assume Tmp_970 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_981;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_981 != 0;
    assume Tmp_981 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_978;
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    assume {:nonnull} Tmp_978 != 0;
    assume Tmp_978 > 0;
    goto L18;

  L18:
    Tmp_963 := validSense;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} 18 > SenseBufferLength;
    goto L18;

  anon14_Then:
    assume {:partition} validSense == 0;
    goto L18;

  anon17_Then:
    assume {:partition} Tmp_976 != 1;
    goto L15;

  anon16_Then:
    assume {:nonnull} SenseBuffer_1 != 0;
    assume SenseBuffer_1 > 0;
    validSense := 1;
    goto L15;

  anon13_Then:
    assume {:partition} SenseBufferLength < 14;
    goto L6;

  L6:
    Tmp_963 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} SenseBuffer_1 == 0;
    goto L6;
}



procedure {:origName "Sbp2_ScsiPassThrough"} Sbp2_ScsiPassThrough(actual_DeviceObject_21: int, actual_Irp_16: int, actual_Direct_5: int) returns (Tmp_1003: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_ScsiPassThrough"} Sbp2_ScsiPassThrough(actual_DeviceObject_21: int, actual_Irp_16: int, actual_Direct_5: int) returns (Tmp_1003: int)
{
  var {:pointer} irpStack_7: int;
  var {:pointer} srbControl_2: int;
  var {:pointer} sdv_420: int;
  var {:pointer} PdoExtension_1: int;
  var {:scalar} ntStatus_2: int;
  var {:pointer} ioCapabilities: int;
  var {:scalar} revisionSize: int;
  var {:scalar} offset_1: int;
  var {:pointer} Tmp_1005: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_16: int;
  var {:scalar} Direct_5: int;

  anon0:
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_16 := actual_Irp_16;
    Direct_5 := actual_Direct_5;
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    havoc PdoExtension_1;
    call {:si_unique_call 684} sdv_do_paged_code_check();
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_2 := -1073741808;
    goto L15;

  L15:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 685} sdv_IoCompleteRequest(0, 0);
    Tmp_1003 := ntStatus_2;
    return;

  anon15_Then:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Direct_5 == 0;
    call {:si_unique_call 686} irpStack_7 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc srbControl_2;
    revisionSize := 44;
    assume {:nonnull} irpStack_7 != 0;
    assume irpStack_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    ntStatus_2 := -1073741811;
    goto L15;

  anon20_Then:
    assume {:nonnull} srbControl_2 != 0;
    assume srbControl_2 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_2 := -1073741735;
    goto L15;

  anon17_Then:
    assume {:nonnull} srbControl_2 != 0;
    assume srbControl_2 > 0;
    havoc offset_1;
    assume {:nonnull} srbControl_2 != 0;
    assume srbControl_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    ntStatus_2 := -1073741811;
    goto L15;

  anon18_Then:
    goto L21;

  L21:
    call {:si_unique_call 687} sdv_420 := ExAllocatePoolWithTag(0, 24, 846226035);
    ioCapabilities := sdv_420;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ioCapabilities != 0;
    call {:si_unique_call 688} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_1005;
    assume {:nonnull} Tmp_1005 != 0;
    assume Tmp_1005 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    call {:si_unique_call 689} ntStatus_2 := PortSendPassThrough(DeviceObject_21, Irp_16, Direct_5, 0, ioCapabilities);
    call {:si_unique_call 690} sdv_KeFlushIoBuffers(0, 0, 1);
    call {:si_unique_call 691} sdv_ExFreePool(0);
    goto L15;

  anon19_Then:
    assume {:partition} ioCapabilities == 0;
    ntStatus_2 := -1073741670;
    goto L15;

  anon21_Then:
    goto L21;

  anon16_Then:
    assume {:partition} Direct_5 != 0;
    goto L21;
}



procedure {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_22: int, actual_QueryIrp: int) returns (Tmp_1006: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_1006 == -1073741585 || Tmp_1006 == 0 || Tmp_1006 == -1073741823 || Tmp_1006 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_22: int, actual_QueryIrp: int) returns (Tmp_1006: int)
{
  var {:pointer} irpStack_8: int;
  var {:pointer} query: int;
  var {:pointer} Tmp_1007: int;
  var {:pointer} Tmp_1008: int;
  var {:dopa} {:scalar} queryLength: int;
  var {:scalar} status_32: int;
  var {:pointer} deviceExtension_10: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} QueryIrp: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_3136: int;
  var vslice_dummy_var_3137: int;

  anon0:
    call {:si_unique_call 692} queryLength := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    QueryIrp := actual_QueryIrp;
    call {:si_unique_call 693} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(QueryIrp);
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    havoc deviceExtension_10;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc query;
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    status_32 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 694} sdv_IoCompleteRequest(0, 0);
    Tmp_1006 := status_32;
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 695} status_32 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_32 >= 0;
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    status_32 := 0;
    goto L38;

  L38:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} deviceExtension_10 != 0;
    assume deviceExtension_10 > 0;
    call {:si_unique_call 696} vslice_dummy_var_92 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_10), 0);
    call {:si_unique_call 697} sdv_IoCompleteRequest(0, 1);
    Tmp_1006 := status_32;
    goto L1;

  anon16_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1007 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1007 != 0;
    assume Tmp_1007 > 0;
    havoc vslice_dummy_var_3136;
    call {:si_unique_call 698} status_32 := Sbp2BuildAdapterDescriptor(DeviceObject_22, vslice_dummy_var_3136, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L38;

  anon17_Then:
    status_32 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto L38;

  anon14_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    status_32 := 0;
    goto L38;

  anon15_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1008 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1008 != 0;
    assume Tmp_1008 > 0;
    havoc vslice_dummy_var_3137;
    call {:si_unique_call 699} status_32 := Sbp2BuildDeviceDescriptor(DeviceObject_22, vslice_dummy_var_3137, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L38;

  anon13_Then:
    assume {:partition} 0 > status_32;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 700} sdv_IoCompleteRequest(0, 0);
    Tmp_1006 := status_32;
    goto L1;
}



procedure {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_23: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1010: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1010 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_23: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1010: int)
{
  var {:scalar} realLength: int;
  var {:scalar} tmp: int;
  var {:pointer} deviceExtension_11: int;
  var {:pointer} Tmp_1012: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} DescriptorLength: int;
  var vslice_dummy_var_3138: int;

  anon0:
    call {:si_unique_call 701} tmp := __HAVOC_malloc(48);
    DeviceObject_23 := actual_DeviceObject_23;
    DescriptorLength := actual_DescriptorLength;
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    havoc deviceExtension_11;
    realLength := 32;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    havoc vslice_dummy_var_3138;
    call {:si_unique_call 702} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_3138);
    Tmp_1010 := 0;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:nonnull} deviceExtension_11 != 0;
    assume deviceExtension_11 > 0;
    havoc Tmp_1012;
    assume {:nonnull} Tmp_1012 != 0;
    assume Tmp_1012 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    goto L18;

  L18:
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    call {:si_unique_call 703} sdv_RtlCopyMemory(0, 0, 32);
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1010 := 0;
    goto L1;

  anon6_Then:
    goto L18;
}



procedure {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_24: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1013: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1013 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_24: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1013: int)
{
  var {:pointer} Tmp_1014: int;
  var {:pointer} Tmp_1015: int;
  var {:scalar} Tmp_1016: int;
  var {:pointer} Tmp_1017: int;
  var {:pointer} Tmp_1018: int;
  var {:scalar} bytesRemaining: int;
  var {:scalar} infoLength: int;
  var {:scalar} maxLength: int;
  var {:pointer} Tmp_1019: int;
  var {:pointer} Tmp_1020: int;
  var {:pointer} inquiryData: int;
  var {:pointer} currentOffset: int;
  var {:scalar} Tmp_1022: int;
  var {:scalar} Tmp_1023: int;
  var {:pointer} Tmp_1024: int;
  var {:pointer} Tmp_1025: int;
  var {:pointer} Tmp_1026: int;
  var {:scalar} realLength_1: int;
  var {:pointer} Tmp_1027: int;
  var {:scalar} tmp_1: int;
  var {:pointer} deviceExtension_12: int;
  var {:pointer} Tmp_1028: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Descriptor_1: int;
  var {:pointer} DescriptorLength_1: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_3139: int;
  var vslice_dummy_var_3140: int;
  var vslice_dummy_var_3141: int;

  anon0:
    call {:si_unique_call 704} tmp_1 := __HAVOC_malloc(52);
    DeviceObject_24 := actual_DeviceObject_24;
    Descriptor_1 := actual_Descriptor_1;
    DescriptorLength_1 := actual_DescriptorLength_1;
    call {:si_unique_call 705} Tmp_1017 := __HAVOC_malloc(16);
    call {:si_unique_call 706} Tmp_1018 := __HAVOC_malloc(20);
    call {:si_unique_call 707} Tmp_1019 := __HAVOC_malloc(32);
    call {:si_unique_call 708} Tmp_1020 := __HAVOC_malloc(28);
    call {:si_unique_call 709} Tmp_1024 := __HAVOC_malloc(8);
    call {:si_unique_call 710} Tmp_1025 := __HAVOC_malloc(8);
    call {:si_unique_call 711} Tmp_1028 := __HAVOC_malloc(36);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    havoc maxLength;
    bytesRemaining := maxLength;
    realLength_1 := 40;
    currentOffset := Descriptor_1;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    havoc deviceExtension_12;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    inquiryData := InquiryData__DEVICE_EXTENSION(deviceExtension_12);
    infoLength := 48;
    realLength_1 := realLength_1 + infoLength;
    call {:si_unique_call 712} sdv_RtlZeroMemory(0, maxLength);
    call {:si_unique_call 713} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L31;

  L31:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    goto L33;

  L33:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} bytesRemaining > 40;
    Tmp_1023 := 40;
    goto L38;

  L38:
    call {:si_unique_call 714} sdv_RtlCopyMemory(0, 0, Tmp_1023);
    bytesRemaining := bytesRemaining - 40;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} 0 >= bytesRemaining;
    Tmp_1013 := 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} bytesRemaining > 0;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    havoc Tmp_1019;
    assume {:nonnull} Tmp_1019 != 0;
    assume Tmp_1019 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L49;

  L49:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} 8 >= bytesRemaining;
    Tmp_1013 := 0;
    goto L1;

  anon20_Then:
    assume {:partition} bytesRemaining > 8;
    call {:si_unique_call 715} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} Descriptor_1 != 0;
    assume Descriptor_1 > 0;
    bytesRemaining := bytesRemaining - 9;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1013 := 0;
    goto L1;

  anon25_Then:
    assume {:partition} bytesRemaining > 16;
    call {:si_unique_call 716} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} Descriptor_1 != 0;
    assume Descriptor_1 > 0;
    bytesRemaining := bytesRemaining - 17;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 4 >= bytesRemaining;
    Tmp_1013 := 0;
    goto L1;

  anon26_Then:
    assume {:partition} bytesRemaining > 4;
    call {:si_unique_call 717} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Descriptor_1 != 0;
    assume Descriptor_1 > 0;
    bytesRemaining := bytesRemaining - 5;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1013 := 0;
    goto L1;

  anon27_Then:
    assume {:partition} bytesRemaining > 16;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    havoc Tmp_1027;
    assume {:nonnull} Tmp_1027 != 0;
    assume Tmp_1027 > 0;
    havoc Tmp_1026;
    assume {:nonnull} Tmp_1026 != 0;
    assume Tmp_1026 > 0;
    havoc Tmp_1024;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    havoc Tmp_1016;
    assume {:nonnull} deviceExtension_12 != 0;
    assume deviceExtension_12 > 0;
    havoc Tmp_1014;
    assume {:nonnull} Tmp_1014 != 0;
    assume Tmp_1014 > 0;
    havoc Tmp_1015;
    assume {:nonnull} Tmp_1015 != 0;
    assume Tmp_1015 > 0;
    havoc Tmp_1025;
    assume {:nonnull} Tmp_1025 != 0;
    assume Tmp_1025 > 0;
    havoc Tmp_1022;
    Tmp_1028 := strConst__li2bpl10;
    call {:si_unique_call 718} vslice_dummy_var_93 := RtlStringCbPrintfA(currentOffset, bytesRemaining, Tmp_1028);
    assume {:nonnull} Descriptor_1 != 0;
    assume Descriptor_1 > 0;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    Tmp_1013 := 0;
    goto L1;

  anon24_Then:
    Tmp_1020 := strConst__li2bpl7;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_3139;
    call {:si_unique_call 719} vslice_dummy_var_94 := RtlStringCbPrintfA(vslice_dummy_var_3139, 8, Tmp_1020);
    Tmp_1018 := strConst__li2bpl8;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_3140;
    call {:si_unique_call 720} vslice_dummy_var_95 := RtlStringCbPrintfA(vslice_dummy_var_3140, 16, Tmp_1018);
    Tmp_1017 := strConst__li2bpl9;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_3141;
    call {:si_unique_call 721} vslice_dummy_var_96 := RtlStringCbPrintfA(vslice_dummy_var_3141, 4, Tmp_1017);
    goto L49;

  anon22_Then:
    assume {:partition} 40 >= bytesRemaining;
    Tmp_1023 := bytesRemaining;
    goto L38;

  anon21_Then:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L33;

  anon19_Then:
    goto L31;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 722} vslice_dummy_var_97 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1033: int);
  free ensures {:va_keep} Tmp_1033 == 0 || Tmp_1033 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1033: int)
{
  var {:scalar} cchNewDestLength: int;
  var {:scalar} iRet: int;
  var {:scalar} cchMax: int;
  var {:scalar} status_33: int;
  var {:pointer} pszDest: int;
  var {:scalar} cchDest: int;
  var {:pointer} pcchNewDestLength: int;

  anon0:
    pszDest := actual_pszDest;
    cchDest := actual_cchDest;
    pcchNewDestLength := actual_pcchNewDestLength;
    status_33 := 0;
    cchNewDestLength := 0;
    cchMax := cchDest - 1;
    call {:si_unique_call 723} iRet := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet;
    goto L16;

  L16:
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    status_33 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength != 0;
    assume {:nonnull} pcchNewDestLength != 0;
    assume pcchNewDestLength > 0;
    goto L21;

  L21:
    Tmp_1033 := status_33;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet <= cchMax;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet == cchMax;
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    goto L20;

  anon12_Then:
    assume {:partition} iRet != cchMax;
    cchNewDestLength := iRet;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax < iRet;
    goto L16;
}



procedure {:origName "Sbp2FdoRequestCompletionRoutine"} Sbp2FdoRequestCompletionRoutine(actual_DeviceObject_25: int, actual_Irp_17: int, actual_Event_4: int) returns (Tmp_1035: int);
  free ensures {:va_keep} Tmp_1035 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoRequestCompletionRoutine"} Sbp2FdoRequestCompletionRoutine(actual_DeviceObject_25: int, actual_Irp_17: int, actual_Event_4: int) returns (Tmp_1035: int)
{
  var {:pointer} Event_4: int;
  var vslice_dummy_var_98: int;

  anon0:
    Event_4 := actual_Event_4;
    call {:si_unique_call 724} vslice_dummy_var_98 := KeSetEvent(Event_4, 0, 0);
    Tmp_1035 := -1073741802;
    return;
}



procedure {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1037: int);
  free ensures {:va_keep} Tmp_1037 == 0 || Tmp_1037 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1037: int)
{
  var {:scalar} status_34: int;
  var {:scalar} cchDest_1: int;
  var {:scalar} cchMax_1: int;

  anon0:
    cchDest_1 := actual_cchDest_1;
    cchMax_1 := actual_cchMax_1;
    status_34 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_1 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_1 <= cchMax_1;
    goto L8;

  L8:
    Tmp_1037 := status_34;
    return;

  anon5_Then:
    assume {:partition} cchMax_1 < cchDest_1;
    goto L6;

  L6:
    status_34 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_1 == 0;
    goto L6;
}



procedure {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_26: int, actual_Irp_18: int) returns (Tmp_1039: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_26: int, actual_Irp_18: int) returns (Tmp_1039: int)
{
  var {:scalar} status_35: int;
  var {:pointer} deviceExtension_13: int;
  var {:pointer} DeviceObject_26: int;
  var {:pointer} Irp_18: int;
  var vslice_dummy_var_3142: int;

  anon0:
    DeviceObject_26 := actual_DeviceObject_26;
    Irp_18 := actual_Irp_18;
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    havoc deviceExtension_13;
    call {:si_unique_call 725} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 726} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_18);
    assume {:nonnull} deviceExtension_13 != 0;
    assume deviceExtension_13 > 0;
    havoc vslice_dummy_var_3142;
    call {:si_unique_call 727} Tmp_1039 := sdv_IoCallDriver#1(vslice_dummy_var_3142, Irp_18);
    goto L1;

  L1:
    call {:si_unique_call 728} SLIC_Sbp2SystemControl_exit(strConst__li2bpl1, Irp_18, Tmp_1039);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    havoc status_35;
    call {:si_unique_call 729} sdv_IoCompleteRequest(0, 0);
    Tmp_1039 := status_35;
    goto L1;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 730} vslice_dummy_var_99 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2PortForwardIrpSynchronousCompletionRoutine"} Sbp2PortForwardIrpSynchronousCompletionRoutine(actual_DeviceObject_27: int, actual_Irp_19: int, actual_Context_15: int) returns (Tmp_1043: int);
  free ensures {:va_keep} Tmp_1043 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PortForwardIrpSynchronousCompletionRoutine"} Sbp2PortForwardIrpSynchronousCompletionRoutine(actual_DeviceObject_27: int, actual_Irp_19: int, actual_Context_15: int) returns (Tmp_1043: int)
{
  var {:pointer} event_3: int;
  var {:pointer} Context_15: int;
  var vslice_dummy_var_100: int;

  anon0:
    Context_15 := actual_Context_15;
    event_3 := Context_15;
    call {:si_unique_call 731} vslice_dummy_var_100 := KeSetEvent(event_3, 1, 0);
    Tmp_1043 := -1073741802;
    return;
}



procedure {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1045: int);
  free ensures {:va_keep} Tmp_1045 == 0 || Tmp_1045 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1045: int)
{
  var {:scalar} status_36: int;
  var {:scalar} cchDest_2: int;
  var {:scalar} cchMax_2: int;

  anon0:
    cchDest_2 := actual_cchDest_2;
    cchMax_2 := actual_cchMax_2;
    status_36 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_2 <= cchMax_2;
    goto L8;

  L8:
    Tmp_1045 := status_36;
    return;

  anon5_Then:
    assume {:partition} cchMax_2 < cchDest_2;
    goto L6;

  L6:
    status_36 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_2 == 0;
    goto L6;
}



procedure {:origName "Sbp2PdoDIrpCompletion"} Sbp2PdoDIrpCompletion(actual_DeviceObject_28: int, actual_MinorFunction_3: int, actual_structPtr888PowerState: int, actual_SIrp: int, actual_IoStatus_2: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PdoDIrpCompletion"} Sbp2PdoDIrpCompletion(actual_DeviceObject_28: int, actual_MinorFunction_3: int, actual_structPtr888PowerState: int, actual_SIrp: int, actual_IoStatus_2: int)
{
  var {:scalar} PowerState: int;
  var {:pointer} irpStack_9: int;
  var {:pointer} deviceExtension_14: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} structPtr888PowerState: int;
  var {:pointer} SIrp: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;

  anon0:
    call {:si_unique_call 732} PowerState := __HAVOC_malloc(8);
    call {:si_unique_call 733} vslice_dummy_var_101 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    structPtr888PowerState := actual_structPtr888PowerState;
    SIrp := actual_SIrp;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(structPtr888PowerState)];
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc deviceExtension_14;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} SIrp != 0;
    call {:si_unique_call 734} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(SIrp);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    assume {:nonnull} SIrp != 0;
    assume SIrp > 0;
    call {:si_unique_call 735} PoStartNextPowerIrp(0);
    call {:si_unique_call 736} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_14 != 0;
    assume deviceExtension_14 > 0;
    call {:si_unique_call 737} vslice_dummy_var_102 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_14), 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} SIrp == 0;
    goto L1;
}



procedure {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_29: int, actual_Irp_20: int) returns (Tmp_1049: int);
  modifies alloc, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, yogi_error, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_29: int, actual_Irp_20: int) returns (Tmp_1049: int)
{
  var {:pointer} irpStack_10: int;
  var {:scalar} status_37: int;
  var {:pointer} deviceExtension_15: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} Irp_20: int;

  anon0:
    DeviceObject_29 := actual_DeviceObject_29;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 738} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc deviceExtension_15;
    call {:si_unique_call 739} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_15 != 0;
    assume deviceExtension_15 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_37 := -1073741811;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 740} sdv_IoCompleteRequest(0, 0);
    goto L41;

  L41:
    Tmp_1049 := status_37;
    call {:si_unique_call 741} SLIC_Sbp2DeviceControl_exit(strConst__li2bpl1, Irp_20, Tmp_1049);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    call {:si_unique_call 742} status_37 := Sbp2QueryProperty(DeviceObject_29, Irp_20);
    goto L41;

  anon17_Then:
    status_37 := -1073741637;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 743} sdv_IoCompleteRequest(0, 0);
    goto L41;

  anon18_Then:
    call {:si_unique_call 744} status_37 := Sbp2HandleApiRequest(deviceExtension_15, Irp_20);
    goto L41;

  anon19_Then:
    call {:si_unique_call 745} status_37 := Sbp2_ScsiPassThrough(DeviceObject_29, Irp_20, 1);
    goto L41;

  anon16_Then:
    call {:si_unique_call 746} status_37 := Sbp2_ScsiPassThrough(DeviceObject_29, Irp_20, 0);
    goto L41;

  anon15_Then:
    status_37 := -1073741637;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 747} sdv_IoCompleteRequest(0, 0);
    goto L41;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int)
{
  var {:pointer} Flink: int;
  var {:pointer} ListHead_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_103: int;

  anon0:
    call {:si_unique_call 748} vslice_dummy_var_103 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    Entry_1 := actual_Entry_1;
    call {:si_unique_call 749} SLIC_InsertHeadList_entry(strConst__li2bpl1);
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc Flink;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;
}



procedure {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_1: int, actual_uniCompatIds: int) returns (Tmp_1053: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1053 == 0 || Tmp_1053 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_1: int, actual_uniCompatIds: int) returns (Tmp_1053: int)
{
  var {:pointer} sdv_442: int;
  var {:scalar} Tmp_1054: int;
  var {:scalar} ntStatus_3: int;
  var {:scalar} Tmp_1056: int;
  var {:scalar} Tmp_1057: int;
  var {:pointer} Tmp_1058: int;
  var {:scalar} Tmp_1059: int;
  var {:pointer} DeviceInfo_1: int;
  var {:pointer} uniCompatIds: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_3143: int;

  anon0:
    DeviceInfo_1 := actual_DeviceInfo_1;
    uniCompatIds := actual_uniCompatIds;
    call {:si_unique_call 750} Tmp_1058 := __HAVOC_malloc(56);
    ntStatus_3 := 0;
    call {:si_unique_call 751} sdv_do_paged_code_check();
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1059;
    call {:si_unique_call 752} sdv_442 := ExAllocatePoolWithTag(1, Tmp_1059, 846226035);
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1057;
    call {:si_unique_call 753} sdv_RtlZeroMemory(0, Tmp_1057);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    havoc Tmp_1056;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1054;
    Tmp_1058 := strConst__li2bpl11;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc vslice_dummy_var_3143;
    call {:si_unique_call 754} vslice_dummy_var_104 := RtlStringCbPrintfW(vslice_dummy_var_3143, Tmp_1054, Tmp_1058);
    goto L26;

  L26:
    Tmp_1053 := ntStatus_3;
    return;

  anon3_Then:
    ntStatus_3 := -1073741670;
    goto L26;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int)
{
  var {:pointer} ListHead_4: int;
  var vslice_dummy_var_105: int;

  anon0:
    call {:si_unique_call 755} vslice_dummy_var_105 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_30: int, actual_Irp_21: int) returns (Tmp_1062: int);
  modifies alloc, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_30: int, actual_Irp_21: int) returns (Tmp_1062: int)
{
  var {:pointer} newIrp: int;
  var {:scalar} ntStatus_4: int;
  var {:scalar} event_4: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_3144: int;

  anon0:
    call {:si_unique_call 756} event_4 := __HAVOC_malloc(124);
    DeviceObject_30 := actual_DeviceObject_30;
    Irp_21 := actual_Irp_21;
    ntStatus_4 := 0;
    call {:si_unique_call 757} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    havoc vslice_dummy_var_3144;
    call {:si_unique_call 758} newIrp := IoAllocateIrp(vslice_dummy_var_3144, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 759} vslice_dummy_var_106 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    call {:si_unique_call 760} vslice_dummy_var_107 := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 761} sdv_RtlMoveMemory(0, 0, 36);
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    call {:si_unique_call 762} KeInitializeEvent(event_4, 0, 0);
    call {:si_unique_call 763} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant264, event_4, 1, 1, 1);
    call {:si_unique_call 764} ntStatus_4 := sdv_IoCallDriver#1(DeviceObject_30, newIrp);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} ntStatus_4 == 259;
    call {:si_unique_call 765} vslice_dummy_var_108 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L41;

  L41:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    havoc ntStatus_4;
    call {:si_unique_call 766} IoFreeIrp(0);
    goto L48;

  L48:
    Tmp_1062 := ntStatus_4;
    return;

  anon6_Then:
    assume {:partition} ntStatus_4 != 259;
    goto L41;

  anon5_Then:
    assume {:partition} newIrp == 0;
    ntStatus_4 := -1073741670;
    goto L48;
}



procedure {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_2: int, actual_uniDeviceText: int) returns (Tmp_1064: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1064 == 0 || Tmp_1064 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_2: int, actual_uniDeviceText: int) returns (Tmp_1064: int)
{
  var {:scalar} Tmp_1065: int;
  var {:scalar} Tmp_1066: int;
  var {:scalar} Tmp_1067: int;
  var {:pointer} Tmp_1068: int;
  var {:pointer} sdv_449: int;
  var {:scalar} Tmp_1069: int;
  var {:scalar} Tmp_1070: int;
  var {:scalar} ntStatus_5: int;
  var {:pointer} Tmp_1071: int;
  var {:pointer} Tmp_1072: int;
  var {:scalar} TextType: int;
  var {:pointer} DeviceInfo_2: int;
  var {:pointer} uniDeviceText: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_3145: int;
  var vslice_dummy_var_3146: int;
  var vslice_dummy_var_3147: int;

  anon0:
    TextType := actual_TextType;
    DeviceInfo_2 := actual_DeviceInfo_2;
    uniDeviceText := actual_uniDeviceText;
    call {:si_unique_call 767} Tmp_1068 := __HAVOC_malloc(120);
    call {:si_unique_call 768} Tmp_1071 := __HAVOC_malloc(188);
    call {:si_unique_call 769} Tmp_1072 := __HAVOC_malloc(28);
    ntStatus_5 := 0;
    call {:si_unique_call 770} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1069;
    call {:si_unique_call 771} sdv_449 := ExAllocatePoolWithTag(1, Tmp_1069, 846226003);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1065;
    call {:si_unique_call 772} sdv_RtlZeroMemory(0, Tmp_1065);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} TextType != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} TextType == 1;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1066;
    Tmp_1072 := strConst__li2bpl12;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_3145;
    call {:si_unique_call 773} vslice_dummy_var_109 := RtlStringCbPrintfW(vslice_dummy_var_3145, Tmp_1066, Tmp_1072);
    goto L24;

  L24:
    Tmp_1064 := ntStatus_5;
    return;

  anon13_Then:
    assume {:partition} TextType != 1;
    goto L24;

  anon11_Then:
    assume {:partition} TextType == 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1070;
    Tmp_1068 := strConst__li2bpl13;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_3146;
    call {:si_unique_call 774} vslice_dummy_var_110 := RtlStringCbPrintfW(vslice_dummy_var_3146, Tmp_1070, Tmp_1068);
    goto L24;

  anon14_Then:
    goto L29;

  L29:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1067;
    Tmp_1071 := strConst__li2bpl14;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_3147;
    call {:si_unique_call 775} vslice_dummy_var_111 := RtlStringCbPrintfW(vslice_dummy_var_3147, Tmp_1067, Tmp_1071);
    goto L24;

  anon12_Then:
    goto L29;

  anon15_Then:
    ntStatus_5 := -1073741670;
    goto L24;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_1074: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_1074: int)
{
  var {:pointer} Entry_2: int;
  var {:pointer} Flink_1: int;
  var {:pointer} ListHead_5: int;

  anon0:
    ListHead_5 := actual_ListHead_5;
    call {:si_unique_call 776} SLIC_RemoveHeadList_entry(strConst__li2bpl1);
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc Flink_1;
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    assume {:nonnull} Flink_1 != 0;
    assume Flink_1 > 0;
    Tmp_1074 := Entry_2;
    return;
}



procedure {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_31: int, actual_Irp_22: int) returns (Tmp_1076: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_31: int, actual_Irp_22: int) returns (Tmp_1076: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} irpStack_11: int;
  var {:scalar} sdv_456: int;
  var {:pointer} deviceCapabilities: int;
  var {:pointer} fdoExtension_1: int;
  var {:pointer} sdv_460: int;
  var {:scalar} status_38: int;
  var {:scalar} event_5: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_22: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_3148: int;
  var vslice_dummy_var_3149: int;
  var vslice_dummy_var_3150: int;

  anon0:
    call {:si_unique_call 777} event_5 := __HAVOC_malloc(124);
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 778} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_22);
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc fdoExtension_1;
    call {:si_unique_call 779} status_38 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_38 >= 0;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] != 0;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] != 2;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] != 7;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] != 9;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] != 20;
    goto L32;

  L32:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 780} vslice_dummy_var_112 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 781} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_3148;
    call {:si_unique_call 782} status_38 := sdv_IoCallDriver#1(vslice_dummy_var_3148, Irp_22);
    Tmp_1076 := status_38;
    goto L1;

  L1:
    return;

  anon37_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] == 20;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L32;

  anon38_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] == 9;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    havoc deviceCapabilities;
    assume {:nonnull} deviceCapabilities != 0;
    assume deviceCapabilities > 0;
    goto L32;

  anon39_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] == 7;
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 783} sdv_460 := ExAllocatePoolWithTag(1, 48, 846226035);
    deviceRelations := sdv_460;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 784} status_38 := Sbp2CreateDeviceRelations(fdoExtension_1, deviceRelations);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_38 >= 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L32;

  anon42_Then:
    assume {:partition} 0 > status_38;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 785} vslice_dummy_var_117 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 786} sdv_IoCompleteRequest(0, 0);
    Tmp_1076 := status_38;
    goto L1;

  anon41_Then:
    assume {:partition} deviceRelations == 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 787} vslice_dummy_var_118 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 788} sdv_IoCompleteRequest(0, 0);
    Tmp_1076 := -1073741670;
    goto L1;

  anon31_Then:
    goto L32;

  anon40_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] == 2;
    call {:si_unique_call 789} KeInitializeEvent(event_5, 1, 0);
    call {:si_unique_call 790} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    call {:si_unique_call 791} sdv_IoSetCompletionRoutine(Irp_22, li2bplFunctionConstant249, event_5, 1, 1, 1);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_3149;
    call {:si_unique_call 792} status_38 := sdv_IoCallDriver#1(vslice_dummy_var_3149, Irp_22);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L88;

  L88:
    call {:si_unique_call 793} vslice_dummy_var_113 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 794} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 795} sdv_456 := Sbp2CleanDeviceExtension#1(DeviceObject_31, 1);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_456 != 0;
    call {:si_unique_call 796} IoDetachDevice(0);
    call {:si_unique_call 797} IoDeleteDevice(0);
    goto L98;

  L98:
    status_38 := 0;
    goto L105;

  L105:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    call {:si_unique_call 798} sdv_IoCompleteRequest(0, 0);
    Tmp_1076 := status_38;
    goto L1;

  anon34_Then:
    assume {:partition} sdv_456 == 0;
    goto L98;

  anon32_Then:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_38 != 259;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    havoc status_38;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 799} vslice_dummy_var_116 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    goto L105;

  anon33_Then:
    assume {:partition} status_38 == 259;
    goto L88;

  anon30_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_11)] == 0;
    call {:si_unique_call 800} KeInitializeEvent(event_5, 1, 0);
    call {:si_unique_call 801} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    call {:si_unique_call 802} sdv_IoSetCompletionRoutine(Irp_22, li2bplFunctionConstant249, event_5, 1, 1, 1);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc vslice_dummy_var_3150;
    call {:si_unique_call 803} status_38 := sdv_IoCallDriver#1(vslice_dummy_var_3150, Irp_22);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L126;

  L126:
    call {:si_unique_call 804} vslice_dummy_var_114 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 805} status_38 := Sbp2StartDevice(DeviceObject_31);
    goto L133;

  L133:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 806} vslice_dummy_var_115 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    call {:si_unique_call 807} sdv_IoCompleteRequest(0, 0);
    Tmp_1076 := status_38;
    goto L1;

  anon35_Then:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_38 != 259;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    havoc status_38;
    goto L133;

  anon36_Then:
    assume {:partition} status_38 == 259;
    goto L126;

  anon29_Then:
    assume {:partition} 0 > status_38;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    call {:si_unique_call 808} sdv_IoCompleteRequest(0, 0);
    Tmp_1076 := status_38;
    goto L1;
}



procedure {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_1078: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1078 == 0 || Tmp_1078 == 5 || Tmp_1078 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_1078: int)
{
  var {:scalar} cchDest_3: int;
  var {:pointer} argList_1: int;
  var {:scalar} status_39: int;
  var {:pointer} pszDest_3: int;
  var {:scalar} cbDest: int;
  var {:pointer} pszFormat_1: int;
  var vslice_dummy_var_3151: int;

  anon0:
    pszDest_3 := actual_pszDest_3;
    cbDest := actual_cbDest;
    call {:si_unique_call 809} pszFormat_1 := __HAVOC_malloc(4);
    cchDest_3 := INTDIV(cbDest, 1);
    call {:si_unique_call 810} status_39 := RtlStringValidateDestA_sdv_static_function_1(pszDest_3, cchDest_3, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_39 >= 0;
    argList_1 := pszFormat_1;
    assume {:nonnull} pszFormat_1 != 0;
    assume pszFormat_1 > 0;
    havoc vslice_dummy_var_3151;
    call {:si_unique_call 811} status_39 := RtlStringVPrintfWorkerA_sdv_static_function_1(pszDest_3, cchDest_3, 0, vslice_dummy_var_3151, argList_1);
    argList_1 := 0;
    goto L11;

  L11:
    Tmp_1078 := status_39;
    return;

  anon3_Then:
    assume {:partition} 0 > status_39;
    goto L11;
}



procedure {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_3: int, actual_uniHardwareIds: int) returns (Tmp_1080: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1080 == 0 || Tmp_1080 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_3: int, actual_uniHardwareIds: int) returns (Tmp_1080: int)
{
  var {:scalar} Tmp_1083: int;
  var {:scalar} uniCmdSetId: int;
  var {:pointer} sdv_475: int;
  var {:scalar} Tmp_1088: int;
  var {:scalar} Tmp_1093: int;
  var {:scalar} ntStatus_6: int;
  var {:scalar} uniLunNumber: int;
  var {:scalar} Tmp_1094: int;
  var {:scalar} Tmp_1095: int;
  var {:scalar} Tmp_1096: int;
  var {:pointer} sdv_486: int;
  var {:pointer} sdv_488: int;
  var {:scalar} Tmp_1104: int;
  var {:pointer} DeviceInfo_3: int;
  var {:pointer} uniHardwareIds: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_3152: int;

  anon0:
    call {:si_unique_call 812} uniCmdSetId := __HAVOC_malloc(12);
    call {:si_unique_call 813} uniLunNumber := __HAVOC_malloc(12);
    DeviceInfo_3 := actual_DeviceInfo_3;
    uniHardwareIds := actual_uniHardwareIds;
    call {:si_unique_call 814} vslice_dummy_var_131 := __HAVOC_malloc(8);
    call {:si_unique_call 815} vslice_dummy_var_132 := __HAVOC_malloc(8);
    call {:si_unique_call 816} vslice_dummy_var_133 := __HAVOC_malloc(8);
    call {:si_unique_call 817} vslice_dummy_var_134 := __HAVOC_malloc(36);
    call {:si_unique_call 818} vslice_dummy_var_135 := __HAVOC_malloc(8);
    call {:si_unique_call 819} vslice_dummy_var_136 := __HAVOC_malloc(36);
    call {:si_unique_call 820} vslice_dummy_var_137 := __HAVOC_malloc(24);
    call {:si_unique_call 821} vslice_dummy_var_138 := __HAVOC_malloc(8);
    call {:si_unique_call 822} vslice_dummy_var_139 := __HAVOC_malloc(116);
    call {:si_unique_call 823} vslice_dummy_var_140 := __HAVOC_malloc(24);
    call {:si_unique_call 824} vslice_dummy_var_141 := __HAVOC_malloc(16);
    call {:si_unique_call 825} vslice_dummy_var_142 := __HAVOC_malloc(24);
    call {:si_unique_call 826} vslice_dummy_var_143 := __HAVOC_malloc(116);
    call {:si_unique_call 827} vslice_dummy_var_144 := __HAVOC_malloc(8);
    call {:si_unique_call 828} vslice_dummy_var_145 := __HAVOC_malloc(8);
    call {:si_unique_call 829} vslice_dummy_var_146 := __HAVOC_malloc(24);
    call {:si_unique_call 830} vslice_dummy_var_147 := __HAVOC_malloc(116);
    ntStatus_6 := 0;
    call {:si_unique_call 831} sdv_do_paged_code_check();
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_1094;
    call {:si_unique_call 832} sdv_475 := ExAllocatePoolWithTag(1, Tmp_1094, 846226035);
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_1095;
    call {:si_unique_call 833} sdv_RtlZeroMemory(0, Tmp_1095);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc Tmp_1093;
    call {:si_unique_call 834} vslice_dummy_var_148 := RtlIntegerToUnicodeString(Tmp_1093, 16, 0);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_1088;
    call {:si_unique_call 835} sdv_486 := ExAllocatePoolWithTag(1, Tmp_1088, 846226035);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_1096;
    call {:si_unique_call 836} sdv_RtlZeroMemory(0, Tmp_1096);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc vslice_dummy_var_3152;
    call {:si_unique_call 837} vslice_dummy_var_119 := RtlIntegerToUnicodeString(vslice_dummy_var_3152, 16, 0);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_1083;
    call {:si_unique_call 838} sdv_488 := ExAllocatePoolWithTag(1, Tmp_1083, 846226003);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_1104;
    call {:si_unique_call 839} sdv_RtlZeroMemory(0, Tmp_1104);
    call {:si_unique_call 840} vslice_dummy_var_149 := corral_nondet();
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 841} vslice_dummy_var_120 := corral_nondet();
    call {:si_unique_call 842} vslice_dummy_var_150 := corral_nondet();
    call {:si_unique_call 843} vslice_dummy_var_121 := corral_nondet();
    goto L75;

  L75:
    call {:si_unique_call 844} vslice_dummy_var_151 := corral_nondet();
    call {:si_unique_call 845} vslice_dummy_var_152 := corral_nondet();
    call {:si_unique_call 846} vslice_dummy_var_122 := corral_nondet();
    call {:si_unique_call 847} vslice_dummy_var_153 := corral_nondet();
    call {:si_unique_call 848} vslice_dummy_var_123 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 849} vslice_dummy_var_154 := corral_nondet();
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 850} vslice_dummy_var_124 := corral_nondet();
    call {:si_unique_call 851} vslice_dummy_var_155 := corral_nondet();
    call {:si_unique_call 852} vslice_dummy_var_125 := corral_nondet();
    goto L108;

  L108:
    call {:si_unique_call 853} vslice_dummy_var_156 := corral_nondet();
    call {:si_unique_call 854} vslice_dummy_var_157 := corral_nondet();
    call {:si_unique_call 855} vslice_dummy_var_126 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 856} vslice_dummy_var_158 := corral_nondet();
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 857} vslice_dummy_var_127 := corral_nondet();
    call {:si_unique_call 858} vslice_dummy_var_159 := corral_nondet();
    call {:si_unique_call 859} vslice_dummy_var_128 := corral_nondet();
    goto L135;

  L135:
    call {:si_unique_call 860} vslice_dummy_var_160 := corral_nondet();
    call {:si_unique_call 861} vslice_dummy_var_161 := corral_nondet();
    call {:si_unique_call 862} vslice_dummy_var_129 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 863} vslice_dummy_var_162 := corral_nondet();
    call {:si_unique_call 864} vslice_dummy_var_130 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 865} vslice_dummy_var_163 := corral_nondet();
    goto L155;

  L155:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 866} sdv_ExFreePool(0);
    goto L156;

  L156:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 867} sdv_ExFreePool(0);
    goto L160;

  L160:
    Tmp_1080 := ntStatus_6;
    return;

  anon30_Then:
    goto L160;

  anon29_Then:
    goto L156;

  anon28_Then:
    goto L122;

  L122:
    call {:si_unique_call 868} vslice_dummy_var_164 := corral_nondet();
    goto L135;

  anon27_Then:
    goto L122;

  anon26_Then:
    goto L95;

  L95:
    call {:si_unique_call 869} vslice_dummy_var_165 := corral_nondet();
    goto L108;

  anon25_Then:
    goto L95;

  anon24_Then:
    goto L62;

  L62:
    call {:si_unique_call 870} vslice_dummy_var_166 := corral_nondet();
    goto L75;

  anon23_Then:
    goto L62;

  anon33_Then:
    ntStatus_6 := -1073741670;
    goto L155;

  anon32_Then:
    ntStatus_6 := -1073741670;
    goto L155;

  anon31_Then:
    ntStatus_6 := -1073741670;
    goto L155;
}



procedure {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_32: int, actual_Irp_23: int) returns (Tmp_1106: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.Busy__KDEVICE_QUEUE, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_32: int, actual_Irp_23: int) returns (Tmp_1106: int)
{
  var {:pointer} FdoExtension_1: int;
  var {:pointer} irpStack_12: int;
  var {:scalar} State_2: int;
  var {:scalar} bPendingOrb: int;
  var {:pointer} workItem: int;
  var {:pointer} Tmp_1107: int;
  var {:pointer} Tmp_1108: int;
  var {:scalar} complRoutine: int;
  var {:scalar} sendDIrp: int;
  var {:scalar} TimeOut: int;
  var {:pointer} fdoExtension_2: int;
  var {:scalar} cIrql_4: int;
  var {:scalar} status_40: int;
  var {:pointer} deviceExtension_16: int;
  var {:pointer} Tmp_1109: int;
  var {:scalar} minorFunction: int;
  var {:pointer} Tmp_1110: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_23: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_3153: int;
  var vslice_dummy_var_3154: int;

  anon0:
    call {:si_unique_call 871} State_2 := __HAVOC_malloc(8);
    call {:si_unique_call 872} TimeOut := __HAVOC_malloc(20);
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_23 := actual_Irp_23;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc deviceExtension_16;
    call {:si_unique_call 873} irpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 874} PoStartNextPowerIrp(0);
    call {:si_unique_call 875} sdv_IoCompleteRequest(0, 0);
    Tmp_1106 := -1073741810;
    goto L1;

  L1:
    call {:si_unique_call 876} SLIC_Sbp2PowerControl_exit(strConst__li2bpl1, Irp_23, Tmp_1106);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon93_Then:
    call {:si_unique_call 877} status_40 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_40 >= 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    minorFunction := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_12)];
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} minorFunction != 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} minorFunction != 1;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} minorFunction != 2;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} minorFunction == 3;
    goto L28;

  L28:
    status_40 := 0;
    goto L69;

  L69:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 878} PoStartNextPowerIrp(0);
    call {:si_unique_call 879} sdv_IoCompleteRequest(0, 0);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} minorFunction == 2;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] == 1;
    call {:si_unique_call 880} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 881} sdv_KeRaiseIrql(2, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    havoc vslice_dummy_var_3153;
    call {:si_unique_call 882} Sbp2StartNextPacketByKey#1(DeviceObject_32, vslice_dummy_var_3153);
    call {:si_unique_call 883} sdv_KeLowerIrql(cIrql_4);
    goto L77;

  L77:
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    call {:si_unique_call 884} vslice_dummy_var_168 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_16), 0);
    Tmp_1106 := status_40;
    goto L1;

  anon78_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] != 1;
    goto L77;

  anon77_Then:
    assume {:partition} minorFunction != 2;
    goto L77;

  anon94_Then:
    assume {:partition} minorFunction != 3;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_40;
    goto L69;

  anon95_Then:
    assume {:partition} minorFunction == 2;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_12))))];
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_12)))] == 0;
    sendDIrp := 0;
    status_40 := 0;
    call {:si_unique_call 885} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 886} sdv_KeAcquireSpinLock(0, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto L135;

  L135:
    call {:si_unique_call 887} sdv_KeReleaseSpinLock(0, cIrql_4);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} sendDIrp != 0;
    call {:si_unique_call 888} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 889} status_40 := PoRequestPowerIrp#1(DeviceObject_32, 2, State_2, li2bplFunctionConstant253, Irp_23, 0);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} status_40 >= 0;
    Tmp_1106 := 259;
    goto L1;

  anon83_Then:
    assume {:partition} 0 > status_40;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto L139;

  L139:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 890} PoStartNextPowerIrp(0);
    call {:si_unique_call 891} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    call {:si_unique_call 892} vslice_dummy_var_170 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_16), 0);
    Tmp_1106 := status_40;
    goto L1;

  anon82_Then:
    assume {:partition} sendDIrp == 0;
    goto L139;

  anon80_Then:
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] := 4;
    sendDIrp := 1;
    goto L135;

  anon103_Then:
    goto L135;

  anon85_Then:
    goto L161;

  L161:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    havoc Tmp_1110;
    assume {:nonnull} Tmp_1110 != 0;
    assume Tmp_1110 > 0;
    havoc fdoExtension_2;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    status_40 := -1073741810;
    goto L135;

  anon105_Then:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] := 1;
    sendDIrp := 1;
    goto L135;

  anon104_Then:
    goto L135;

  anon84_Then:
    goto L135;

  anon81_Then:
    goto L161;

  anon101_Then:
    assume {:partition} Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_12)))] != 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] == 1;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    havoc Tmp_1109;
    assume {:nonnull} Tmp_1109 != 0;
    assume Tmp_1109 > 0;
    havoc FdoExtension_1;
    call {:si_unique_call 893} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 894} sdv_KeAcquireSpinLock(0, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    call {:si_unique_call 895} sdv_KeReleaseSpinLock(0, cIrql_4);
    call {:si_unique_call 896} status_40 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_40 >= 0;
    call {:si_unique_call 897} workItem := IoAllocateWorkItem(0);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} workItem != 0;
    call {:si_unique_call 898} IoQueueWorkItem(workItem, li2bplFunctionConstant252, 0, workItem);
    goto L49;

  L49:
    call {:si_unique_call 899} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 900} sdv_KeAcquireSpinLock(0, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    call {:si_unique_call 901} sdv_KeReleaseSpinLock(0, cIrql_4);
    status_40 := 0;
    goto L69;

  anon76_Then:
    assume {:partition} workItem == 0;
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    call {:si_unique_call 902} vslice_dummy_var_167 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_1), 0);
    goto L49;

  anon75_Then:
    assume {:partition} 0 > status_40;
    goto L49;

  anon73_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] != 1;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] == 4;
    call {:si_unique_call 903} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 904} sdv_KeAcquireSpinLock(0, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    call {:si_unique_call 905} sdv_KeReleaseSpinLock(0, cIrql_4);
    call {:si_unique_call 906} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 907} sdv_KeAcquireSpinLock(0, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    call {:si_unique_call 908} bPendingOrb := sdv_IsListEmpty(0);
    call {:si_unique_call 909} sdv_KeReleaseSpinLock(0, cIrql_4);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} bPendingOrb == 0;
    assume {:nonnull} TimeOut != 0;
    assume TimeOut > 0;
    call {:si_unique_call 910} vslice_dummy_var_171 := KeWaitForSingleObject(0, 0, 0, 0, TimeOut);
    goto L111;

  L111:
    call {:si_unique_call 911} Tmp_1108 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    call {:si_unique_call 912} sdv_KeAcquireSpinLock(0, Tmp_1108);
    assume {:nonnull} Tmp_1108 != 0;
    assume Tmp_1108 > 0;
    havoc cIrql_4;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    call {:si_unique_call 913} sdv_KeReleaseSpinLock(0, cIrql_4);
    assume {:nonnull} deviceExtension_16 != 0;
    assume deviceExtension_16 > 0;
    havoc Tmp_1107;
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    call {:si_unique_call 914} vslice_dummy_var_169 := Sbp2ManagementTransaction#1(deviceExtension_16, 7);
    goto L49;

  anon102_Then:
    goto L49;

  anon79_Then:
    assume {:partition} bPendingOrb != 0;
    goto L111;

  anon74_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] != 4;
    goto L49;

  anon96_Then:
    assume {:partition} minorFunction == 1;
    goto L28;

  anon100_Then:
    assume {:partition} minorFunction == 0;
    goto L28;

  anon72_Then:
    assume {:partition} 0 > status_40;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 915} PoStartNextPowerIrp(0);
    call {:si_unique_call 916} sdv_IoCompleteRequest(0, 0);
    Tmp_1106 := status_40;
    goto L1;

  anon71_Then:
    fdoExtension_2 := deviceExtension_16;
    complRoutine := 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_12)] == 2;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_12)))] == 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_12))))];
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto L186;

  L186:
    call {:si_unique_call 917} PoStartNextPowerIrp(0);
    call {:si_unique_call 918} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_23);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} complRoutine != 0;
    call {:si_unique_call 919} sdv_IoSetCompletionRoutine(Irp_23, li2bplFunctionConstant254, 0, 1, 1, 1);
    goto L222;

  L222:
    call {:si_unique_call 920} Tmp_1106 := PoCallDriver#1(0, Irp_23);
    goto L1;

  anon92_Then:
    assume {:partition} complRoutine == 0;
    goto L222;

  anon99_Then:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 921} sdv_IoMarkIrpPending(0);
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_2)] := 4;
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    havoc vslice_dummy_var_3154;
    call {:si_unique_call 922} status_40 := PoRequestPowerIrp#1(vslice_dummy_var_3154, 2, State_2, li2bplFunctionConstant255, fdoExtension_2, 0);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} status_40 >= 0;
    goto L209;

  L209:
    Tmp_1106 := status_40;
    goto L1;

  anon91_Then:
    assume {:partition} 0 > status_40;
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 923} PoStartNextPowerIrp(0);
    call {:si_unique_call 924} sdv_IoCompleteRequest(0, 0);
    goto L209;

  anon90_Then:
    complRoutine := li2bplFunctionConstant254;
    goto L186;

  anon89_Then:
    goto L194;

  L194:
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    complRoutine := li2bplFunctionConstant254;
    goto L186;

  anon88_Then:
    goto L186;

  anon87_Then:
    goto L194;

  anon86_Then:
    assume {:partition} Mem_T.Type_unnamed_tag_37[Type_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_12)))] != 0;
    goto L186;

  anon97_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_12)] != 2;
    goto L186;
}



procedure {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_34: int, actual_Irp_24: int) returns (Tmp_1173: int);
  modifies alloc, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth, Mem_T.Busy__KDEVICE_QUEUE, yogi_error, Mem_T.DeviceState__POWER_STATE;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_34: int, actual_Irp_24: int) returns (Tmp_1173: int)
{
  var {:pointer} deviceRelations_1: int;
  var {:pointer} DeviceInfo_4: int;
  var {:pointer} Tmp_1174: int;
  var {:pointer} irpStack_13: int;
  var {:scalar} uniRetString: int;
  var {:pointer} count: int;
  var {:scalar} Tmp_1175: int;
  var {:pointer} Tmp_1176: int;
  var {:pointer} Tmp_1177: int;
  var {:scalar} uniRetString_1: int;
  var {:scalar} reportedMissing: int;
  var {:pointer} Tmp_1178: int;
  var {:pointer} Tmp_1179: int;
  var {:pointer} deviceCapabilities_1: int;
  var {:pointer} fdoExtension_4: int;
  var {:pointer} sdv_538: int;
  var {:pointer} Tmp_1180: int;
  var {:pointer} DeviceInfo_5: int;
  var {:pointer} Tmp_1181: int;
  var {:scalar} cIrql_6: int;
  var {:pointer} Tmp_1182: int;
  var {:scalar} status_42: int;
  var {:pointer} Tmp_1183: int;
  var {:pointer} Tmp_1184: int;
  var {:pointer} deviceExtension_18: int;
  var {:pointer} Tmp_1185: int;
  var {:pointer} Tmp_1186: int;
  var {:pointer} Tmp_1187: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_3155: int;
  var vslice_dummy_var_3156: int;
  var vslice_dummy_var_3157: int;

  anon0:
    call {:si_unique_call 925} uniRetString := __HAVOC_malloc(12);
    call {:si_unique_call 926} uniRetString_1 := __HAVOC_malloc(12);
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 927} Tmp_1174 := __HAVOC_malloc(28);
    call {:si_unique_call 928} Tmp_1178 := __HAVOC_malloc(28);
    call {:si_unique_call 929} Tmp_1179 := __HAVOC_malloc(4);
    call {:si_unique_call 930} Tmp_1183 := __HAVOC_malloc(28);
    call {:si_unique_call 931} Tmp_1185 := __HAVOC_malloc(28);
    call {:si_unique_call 932} Tmp_1186 := __HAVOC_malloc(28);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    havoc deviceExtension_18;
    call {:si_unique_call 933} irpStack_13 := sdv_IoGetCurrentIrpStackLocation(Irp_24);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 934} sdv_IoCompleteRequest(0, 0);
    Tmp_1173 := -1073741810;
    goto L1;

  L1:
    call {:si_unique_call 935} SLIC_Sbp2PnpDeviceControl_exit(strConst__li2bpl1, Irp_24, Tmp_1173);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    call {:si_unique_call 936} status_42 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} status_42 >= 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 1;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 2;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 3;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 4;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 5;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 6;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 7;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 9;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 11;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 12;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 19;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 20;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 22;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 23;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 135;
    status_42 := 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  L60:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 937} vslice_dummy_var_173 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_18), 0);
    call {:si_unique_call 938} sdv_IoCompleteRequest(0, 0);
    Tmp_1173 := status_42;
    goto L1;

  anon141_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] != 135;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon142_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 23;
    call {:si_unique_call 939} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 940} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    reportedMissing := 0;
    goto L74;

  L74:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 941} vslice_dummy_var_183 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_18), 0, 0);
    call {:si_unique_call 942} sdv_KeReleaseSpinLock(0, cIrql_6);
    call {:si_unique_call 943} vslice_dummy_var_174 := Sbp2CleanDeviceExtension#1(DeviceObject_34, 1);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} reportedMissing != 0;
    call {:si_unique_call 944} Sbp2HandleRemove(DeviceObject_34);
    goto L88;

  L88:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon122_Then:
    assume {:partition} reportedMissing == 0;
    goto L88;

  anon121_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    reportedMissing := 1;
    goto L74;

  anon143_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 22;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    count := HibernateCount__DEVICE_EXTENSION(deviceExtension_18);
    goto L98;

  L98:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} count != 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc vslice_dummy_var_3155;
    call {:si_unique_call 945} status_42 := Sbp2ForwardIrpSynchronous(vslice_dummy_var_3155, Irp_24);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_42 >= 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc vslice_dummy_var_3156;
    call {:si_unique_call 946} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_3156);
    goto L105;

  L105:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon124_Then:
    assume {:partition} 0 > status_42;
    goto L105;

  anon123_Then:
    assume {:partition} count == 0;
    status_42 := -1073741637;
    goto L105;

  anon161_Then:
    count := 0;
    goto L98;

  anon120_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    count := PagingPathCount__DEVICE_EXTENSION(deviceExtension_18);
    goto L98;

  anon144_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 20;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    goto L113;

  L113:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon119_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    call {:si_unique_call 947} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 948} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 949} sdv_KeReleaseSpinLock(0, cIrql_6);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L113;

  anon125_Then:
    goto L113;

  anon145_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 19;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc DeviceInfo_4;
    status_42 := 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    call {:si_unique_call 950} status_42 := Sbp2_BuildInstanceId(DeviceInfo_4, uniRetString);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} status_42 < 0;
    goto L146;

  L146:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon126_Then:
    assume {:partition} 0 <= status_42;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon158_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L146;

  anon159_Then:
    call {:si_unique_call 951} status_42 := Sbp2_BuildCompatIds(DeviceInfo_4, uniRetString);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} status_42 >= 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon127_Then:
    assume {:partition} 0 > status_42;
    goto L146;

  anon160_Then:
    call {:si_unique_call 952} status_42 := Sbp2_BuildHardwareIds(DeviceInfo_4, uniRetString);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_42 >= 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon128_Then:
    assume {:partition} 0 > status_42;
    goto L146;

  anon168_Then:
    call {:si_unique_call 953} status_42 := Sbp2_BuildDeviceId(DeviceInfo_4, uniRetString);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_42 >= 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L146;

  anon129_Then:
    assume {:partition} 0 > status_42;
    goto L146;

  anon146_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 12;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc DeviceInfo_5;
    status_42 := 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    status_42 := -1073741637;
    goto L170;

  L170:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon130_Then:
    goto L165;

  L165:
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc vslice_dummy_var_3157;
    call {:si_unique_call 954} status_42 := Sbp2_BuildDeviceText(vslice_dummy_var_3157, DeviceInfo_5, uniRetString_1);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    goto L170;

  anon167_Then:
    goto L165;

  anon147_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 11;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc Tmp_1177;
    assume {:nonnull} Tmp_1177 != 0;
    assume Tmp_1177 > 0;
    havoc fdoExtension_4;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    havoc Tmp_1180;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Tmp_1180 != 0;
    assume Tmp_1180 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon148_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 9;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc deviceCapabilities_1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc Tmp_1187;
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    goto L188;

  L188:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_1185;
    assume {:nonnull} Tmp_1185 != 0;
    assume Tmp_1185 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_1186;
    assume {:nonnull} Tmp_1186 != 0;
    assume Tmp_1186 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_1174;
    assume {:nonnull} Tmp_1174 != 0;
    assume Tmp_1174 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_1183;
    assume {:nonnull} Tmp_1183 != 0;
    assume Tmp_1183 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_1178;
    assume {:nonnull} Tmp_1178 != 0;
    assume Tmp_1178 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon156_Then:
    goto L182;

  L182:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc Tmp_1181;
    assume {:nonnull} Tmp_1181 != 0;
    assume Tmp_1181 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Tmp_1181 != 0;
    assume Tmp_1181 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L184;

  L184:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L188;

  anon157_Then:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L188;

  anon166_Then:
    goto L184;

  anon165_Then:
    goto L182;

  anon149_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 7;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon118_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc deviceRelations_1;
    goto L210;

  L210:
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_1175;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_1179;
    assume {:nonnull} Tmp_1179 != 0;
    assume Tmp_1179 > 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    call {:si_unique_call 955} vslice_dummy_var_182 := sdv_ObReferenceObject(0);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon131_Then:
    call {:si_unique_call 956} sdv_538 := ExAllocatePoolWithTag(1, 8, 846226035);
    deviceRelations_1 := sdv_538;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} deviceRelations_1 != 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    goto L210;

  anon164_Then:
    assume {:partition} deviceRelations_1 == 0;
    status_42 := -1073741670;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon150_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 6;
    goto L48;

  L48:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon151_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 5;
    goto L48;

  anon152_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 4;
    call {:si_unique_call 957} vslice_dummy_var_172 := Sbp2EnableBusResetNotification(deviceExtension_18, 0);
    call {:si_unique_call 958} vslice_dummy_var_175 := PoRegisterDeviceForIdleDetection(0, 0, 0, 4);
    call {:si_unique_call 959} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 960} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 961} sdv_KeReleaseSpinLock(0, cIrql_6);
    call {:si_unique_call 962} vslice_dummy_var_176 := KeCancelTimer(0);
    goto L243;

  L243:
    status_42 := 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon132_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 963} sdv_KeReleaseSpinLock(0, cIrql_6);
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc Tmp_1184;
    assume {:nonnull} Tmp_1184 != 0;
    assume Tmp_1184 > 0;
    havoc fdoExtension_4;
    call {:si_unique_call 964} ExAcquireFastMutex(0);
    call {:si_unique_call 965} vslice_dummy_var_177 := Sbp2ManagementTransaction#1(deviceExtension_18, 7);
    call {:si_unique_call 966} ExReleaseFastMutex(0);
    call {:si_unique_call 967} vslice_dummy_var_178 := Sbp2CleanDeviceExtension#1(DeviceObject_34, 0);
    goto L243;

  anon153_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 3;
    call {:si_unique_call 968} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 969} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 970} sdv_KeReleaseSpinLock(0, cIrql_6);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon154_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 2;
    status_42 := 0;
    call {:si_unique_call 971} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 972} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    call {:si_unique_call 973} sdv_KeReleaseSpinLock(0, cIrql_6);
    call {:si_unique_call 974} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 975} sdv_KeRaiseIrql(2, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    call {:si_unique_call 976} Sbp2StartNextPacketByKey#1(DeviceObject_34, 0);
    call {:si_unique_call 977} sdv_KeLowerIrql(cIrql_6);
    call {:si_unique_call 978} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 979} vslice_dummy_var_181 := KeCancelTimer(0);
    call {:si_unique_call 980} IoDeleteDevice(0);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 981} sdv_IoCompleteRequest(0, 0);
    Tmp_1173 := status_42;
    goto L1;

  anon163_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    call {:si_unique_call 982} sdv_KeReleaseSpinLock(0, cIrql_6);
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    havoc Tmp_1176;
    assume {:nonnull} Tmp_1176 != 0;
    assume Tmp_1176 > 0;
    havoc fdoExtension_4;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 983} ExAcquireFastMutex(0);
    call {:si_unique_call 984} vslice_dummy_var_179 := Sbp2ManagementTransaction#1(deviceExtension_18, 7);
    call {:si_unique_call 985} ExReleaseFastMutex(0);
    goto L308;

  L308:
    call {:si_unique_call 986} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 987} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto L324;

  L324:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 988} sdv_KeReleaseSpinLock(0, cIrql_6);
    call {:si_unique_call 989} vslice_dummy_var_180 := Sbp2CleanDeviceExtension#1(DeviceObject_34, 1);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon135_Then:
    goto L308;

  anon133_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto L324;

  anon137_Then:
    goto L335;

  L335:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto L324;

  anon136_Then:
    goto L335;

  anon134_Then:
    goto L324;

  anon155_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 1;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L341;

  L341:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon117_Then:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    call {:si_unique_call 990} Tmp_1182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    call {:si_unique_call 991} sdv_KeAcquireSpinLock(0, Tmp_1182);
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_18 != 0;
    assume deviceExtension_18 > 0;
    call {:si_unique_call 992} sdv_KeReleaseSpinLock(0, cIrql_6);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_42;
    goto L60;

  anon139_Then:
    goto L341;

  anon138_Then:
    goto L341;

  anon116_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_13)] == 0;
    call {:si_unique_call 993} status_42 := Sbp2StartDevice(DeviceObject_34);
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto L60;

  anon115_Then:
    assume {:partition} 0 > status_42;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 994} sdv_IoCompleteRequest(0, 0);
    Tmp_1173 := status_42;
    goto L1;

  anon140_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 995} sdv_IoCompleteRequest(0, 0);
    Tmp_1173 := -1073741810;
    goto L1;

  anon114_Then:
    call {:si_unique_call 996} Tmp_1173 := Sbp2FDOPnpDeviceControl(DeviceObject_34, Irp_24);
    goto L1;
}



procedure {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_6: int, actual_uniDeviceId: int) returns (Tmp_1188: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1188 == 0 || Tmp_1188 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_6: int, actual_uniDeviceId: int) returns (Tmp_1188: int)
{
  var {:scalar} Tmp_1189: int;
  var {:pointer} sdv_544: int;
  var {:pointer} Tmp_1190: int;
  var {:scalar} ntStatus_7: int;
  var {:scalar} Tmp_1192: int;
  var {:scalar} Tmp_1193: int;
  var {:pointer} Tmp_1194: int;
  var {:scalar} Tmp_1195: int;
  var {:pointer} DeviceInfo_6: int;
  var {:pointer} uniDeviceId: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_3158: int;
  var vslice_dummy_var_3159: int;

  anon0:
    DeviceInfo_6 := actual_DeviceInfo_6;
    uniDeviceId := actual_uniDeviceId;
    call {:si_unique_call 997} Tmp_1190 := __HAVOC_malloc(76);
    call {:si_unique_call 998} Tmp_1194 := __HAVOC_malloc(160);
    ntStatus_7 := 0;
    call {:si_unique_call 999} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_1189;
    call {:si_unique_call 1000} sdv_544 := ExAllocatePoolWithTag(1, Tmp_1189, 846226035);
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_1195;
    call {:si_unique_call 1001} sdv_RtlZeroMemory(0, Tmp_1195);
    assume {:nonnull} DeviceInfo_6 != 0;
    assume DeviceInfo_6 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} DeviceInfo_6 != 0;
    assume DeviceInfo_6 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_1193;
    Tmp_1190 := strConst__li2bpl20;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_3158;
    call {:si_unique_call 1002} vslice_dummy_var_184 := RtlStringCbPrintfW(vslice_dummy_var_3158, Tmp_1193, Tmp_1190);
    goto L28;

  L28:
    Tmp_1188 := ntStatus_7;
    return;

  anon8_Then:
    goto L22;

  L22:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_1192;
    Tmp_1194 := strConst__li2bpl21;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_3159;
    call {:si_unique_call 1003} vslice_dummy_var_185 := RtlStringCbPrintfW(vslice_dummy_var_3159, Tmp_1192, Tmp_1194);
    goto L28;

  anon7_Then:
    goto L22;

  anon9_Then:
    ntStatus_7 := -1073741670;
    goto L28;
}



procedure {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_36: int, actual_Irp_26: int) returns (Tmp_1198: int);
  modifies alloc, LockDepth, sdv_compFset, yogi_error, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_36: int, actual_Irp_26: int) returns (Tmp_1198: int)
{
  var {:pointer} irpStack_15: int;
  var {:scalar} waitValue_4: int;
  var {:scalar} cIrql_7: int;
  var {:scalar} status_44: int;
  var {:pointer} deviceExtension_19: int;
  var {:pointer} Tmp_1199: int;
  var {:pointer} DeviceObject_36: int;
  var {:pointer} Irp_26: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;

  anon0:
    call {:si_unique_call 1004} waitValue_4 := __HAVOC_malloc(20);
    DeviceObject_36 := actual_DeviceObject_36;
    Irp_26 := actual_Irp_26;
    status_44 := 0;
    call {:si_unique_call 1005} irpStack_15 := sdv_IoGetCurrentIrpStackLocation(Irp_26);
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    havoc deviceExtension_19;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L17;

  L17:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L21;

  L21:
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1006} sdv_IoCompleteRequest(0, 0);
    Tmp_1198 := status_44;
    call {:si_unique_call 1007} SLIC_Sbp2CreateClose_exit(strConst__li2bpl1, Irp_26, Tmp_1198);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    call {:si_unique_call 1008} status_44 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_44 >= 0;
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpStack_15)] != 0;
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpStack_15)] == 2;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 1009} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1010} vslice_dummy_var_193 := sdv_InterlockedDecrement(Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto L38;

  L38:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1011} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    call {:si_unique_call 1012} sdv_KeAcquireSpinLock(0, Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    havoc cIrql_7;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1013} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 1014} vslice_dummy_var_187 := Sbp2ManagementTransaction#1(deviceExtension_19, 7);
    call {:si_unique_call 1015} CleanupOrbList#1(deviceExtension_19, -1073741248);
    goto L31;

  L31:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1016} vslice_dummy_var_186 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_19), 0);
    goto L21;

  anon41_Then:
    goto L31;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L38;

  anon46_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpStack_15)] != 2;
    goto L31;

  anon38_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpStack_15)] == 0;
    call {:si_unique_call 1017} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    call {:si_unique_call 1018} sdv_KeAcquireSpinLock(0, Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    havoc cIrql_7;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    call {:si_unique_call 1019} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 1020} status_44 := Sbp2ManagementTransaction#1(deviceExtension_19, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} status_44 == 259;
    assume {:nonnull} waitValue_4 != 0;
    assume waitValue_4 > 0;
    call {:si_unique_call 1021} vslice_dummy_var_189 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_4);
    call {:si_unique_call 1022} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    call {:si_unique_call 1023} sdv_KeAcquireSpinLock(0, Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    havoc cIrql_7;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    status_44 := -1073741823;
    goto L82;

  L82:
    call {:si_unique_call 1024} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L70;

  L70:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_44 == 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1025} vslice_dummy_var_190 := Sbp2AccessRegister#1(deviceExtension_19, Reserved__DEVICE_EXTENSION(deviceExtension_19), 320);
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1026} vslice_dummy_var_188 := Sbp2AccessRegister#1(deviceExtension_19, Reserved__DEVICE_EXTENSION(deviceExtension_19), 1026);
    call {:si_unique_call 1027} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    call {:si_unique_call 1028} sdv_KeAcquireSpinLock(0, Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    havoc cIrql_7;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1029} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 1030} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1031} vslice_dummy_var_191 := sdv_InterlockedIncrement(Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto L31;

  anon44_Then:
    assume {:partition} status_44 != 0;
    goto L31;

  anon45_Then:
    status_44 := 0;
    goto L82;

  anon43_Then:
    assume {:partition} status_44 != 259;
    goto L70;

  anon42_Then:
    call {:si_unique_call 1032} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 1033} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    call {:si_unique_call 1034} vslice_dummy_var_192 := sdv_InterlockedIncrement(Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto L31;

  anon37_Then:
    assume {:partition} 0 > status_44;
    goto L21;

  anon34_Then:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L21;

  anon35_Then:
    goto L17;

  anon47_Then:
    assume {:nonnull} deviceExtension_19 != 0;
    assume deviceExtension_19 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    status_44 := -1073741810;
    goto L21;

  anon33_Then:
    goto L21;
}



procedure {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_1200: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1200 == 0 || Tmp_1200 == 5 || Tmp_1200 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_1200: int)
{
  var {:scalar} cchDest_4: int;
  var {:pointer} argList_2: int;
  var {:scalar} status_45: int;
  var {:pointer} pszDest_4: int;
  var {:scalar} cbDest_1: int;
  var {:pointer} pszFormat_2: int;
  var vslice_dummy_var_3160: int;

  anon0:
    pszDest_4 := actual_pszDest_4;
    cbDest_1 := actual_cbDest_1;
    call {:si_unique_call 1035} pszFormat_2 := __HAVOC_malloc(4);
    cchDest_4 := INTDIV(cbDest_1, 2);
    call {:si_unique_call 1036} status_45 := RtlStringValidateDestW_sdv_static_function_1(pszDest_4, cchDest_4, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_45 >= 0;
    argList_2 := pszFormat_2;
    assume {:nonnull} pszFormat_2 != 0;
    assume pszFormat_2 > 0;
    havoc vslice_dummy_var_3160;
    call {:si_unique_call 1037} status_45 := RtlStringVPrintfWorkerW_sdv_static_function_1(pszDest_4, cchDest_4, 0, vslice_dummy_var_3160, argList_2);
    argList_2 := 0;
    goto L11;

  L11:
    Tmp_1200 := status_45;
    return;

  anon3_Then:
    assume {:partition} 0 > status_45;
    goto L11;
}



procedure {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_2: int, actual_DeviceInfo_7: int, actual_InstanceNumber: int) returns (Tmp_1202: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_1202 == 0 || Tmp_1202 == -1073741670 || Tmp_1202 == -1073741824 || Tmp_1202 == -1073741771 || Tmp_1202 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_2: int, actual_DeviceInfo_7: int, actual_InstanceNumber: int) returns (Tmp_1202: int)
{
  var {:pointer} Tmp_1203: int;
  var {:scalar} size_1: int;
  var {:pointer} Tmp_1204: int;
  var {:pointer} symlinkBuffer: int;
  var {:pointer} pdoExtension_1: int;
  var {:scalar} uniDeviceName: int;
  var {:pointer} Tmp_1205: int;
  var {:scalar} sdv_566: int;
  var {:pointer} sdv_567: int;
  var {:pointer} Tmp_1209: int;
  var {:scalar} devType_1: int;
  var {:pointer} sdv_568: int;
  var {:pointer} Tmp_1213: int;
  var {:scalar} sdv_570: int;
  var {:pointer} Tmp_1214: int;
  var {:scalar} sdv_573: int;
  var {:scalar} sdv_575: int;
  var {:pointer} buffer_1: int;
  var {:scalar} sdv_576: int;
  var {:pointer} Tmp_1217: int;
  var {:scalar} Tmp_1222: int;
  var {:pointer} sdv_581: int;
  var {:pointer} Tmp_1224: int;
  var {:scalar} status_46: int;
  var {:pointer} Tmp_1226: int;
  var {:scalar} Tmp_1227: int;
  var {:pointer} Tmp_1228: int;
  var {:pointer} Tmp_1230: int;
  var {:pointer} Tmp_1232: int;
  var {:scalar} sdv_585: int;
  var {:pointer} FdoExtension_2: int;
  var {:pointer} DeviceInfo_7: int;
  var {:scalar} InstanceNumber: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;

  anon0:
    call {:si_unique_call 1038} uniDeviceName := __HAVOC_malloc(12);
    FdoExtension_2 := actual_FdoExtension_2;
    DeviceInfo_7 := actual_DeviceInfo_7;
    InstanceNumber := actual_InstanceNumber;
    call {:si_unique_call 1039} Tmp_1203 := __HAVOC_malloc(272);
    call {:si_unique_call 1040} vslice_dummy_var_194 := __HAVOC_malloc(56);
    call {:si_unique_call 1041} vslice_dummy_var_195 := __HAVOC_malloc(8);
    call {:si_unique_call 1042} vslice_dummy_var_196 := __HAVOC_malloc(32);
    call {:si_unique_call 1043} vslice_dummy_var_197 := __HAVOC_malloc(44);
    call {:si_unique_call 1044} vslice_dummy_var_198 := __HAVOC_malloc(44);
    call {:si_unique_call 1045} vslice_dummy_var_199 := __HAVOC_malloc(8);
    call {:si_unique_call 1046} vslice_dummy_var_200 := __HAVOC_malloc(8);
    call {:si_unique_call 1047} Tmp_1217 := __HAVOC_malloc(188);
    call {:si_unique_call 1048} vslice_dummy_var_201 := __HAVOC_malloc(44);
    call {:si_unique_call 1049} vslice_dummy_var_202 := __HAVOC_malloc(32);
    call {:si_unique_call 1050} vslice_dummy_var_203 := __HAVOC_malloc(8);
    call {:si_unique_call 1051} vslice_dummy_var_204 := __HAVOC_malloc(8);
    call {:si_unique_call 1052} vslice_dummy_var_205 := __HAVOC_malloc(44);
    call {:si_unique_call 1053} Tmp_1224 := __HAVOC_malloc(180);
    call {:si_unique_call 1054} vslice_dummy_var_206 := __HAVOC_malloc(56);
    call {:si_unique_call 1055} vslice_dummy_var_207 := __HAVOC_malloc(56);
    call {:si_unique_call 1056} vslice_dummy_var_208 := __HAVOC_malloc(36);
    call {:si_unique_call 1057} vslice_dummy_var_209 := __HAVOC_malloc(8);
    call {:si_unique_call 1058} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L15;

  L15:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    devType_1 := 25;
    goto L21;

  L21:
    size_1 := 2560;
    call {:si_unique_call 1059} sdv_567 := ExAllocatePoolWithTag(1, size_1, 846226035);
    buffer_1 := sdv_567;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} buffer_1 != 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    Tmp_1217 := strConst__li2bpl31;
    call {:si_unique_call 1060} vslice_dummy_var_210 := RtlStringCbPrintfW(buffer_1, size_1, Tmp_1217);
    goto L42;

  L42:
    call {:si_unique_call 1061} RtlInitUnicodeString(uniDeviceName, buffer_1);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    call {:si_unique_call 1062} status_46 := IoCreateDevice(0, 1104, 0, devType_1, 0, 0, DeviceObject__DEVICE_INFORMATION(DeviceInfo_7));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_46 >= 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1213;
    assume {:nonnull} Tmp_1213 != 0;
    assume Tmp_1213 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1226;
    assume {:nonnull} Tmp_1226 != 0;
    assume Tmp_1226 > 0;
    goto L54;

  L54:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1230;
    assume {:nonnull} Tmp_1230 != 0;
    assume Tmp_1230 > 0;
    havoc pdoExtension_1;
    call {:si_unique_call 1063} sdv_RtlZeroMemory(0, 1104);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    havoc Tmp_1209;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} Tmp_1209 != 0;
    assume Tmp_1209 > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1064} KeInitializeEvent(PendingOrbEvent__DEVICE_EXTENSION(pdoExtension_1), 1, 0);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1065} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_1), 0, 0);
    call {:si_unique_call 1066} Tmp_1214 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1214 != 0;
    assume Tmp_1214 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1067} sdv_KeInitializeSpinLock(Tmp_1214);
    assume {:nonnull} Tmp_1214 != 0;
    assume Tmp_1214 > 0;
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1068} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L81;

  L81:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1227;
    call {:si_unique_call 1069} sdv_581 := ExAllocatePoolWithTag(1, Tmp_1227, 846226035);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1222;
    call {:si_unique_call 1070} sdv_RtlZeroMemory(0, Tmp_1222);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L98;

  L98:
    call {:si_unique_call 1071} vslice_dummy_var_211 := corral_nondet();
    goto L124;

  L124:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1228;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1232;
    assume {:nonnull} Tmp_1228 != 0;
    assume Tmp_1228 > 0;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    call {:si_unique_call 1072} status_46 := Sbp2PreAllocateLists(pdoExtension_1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_46 >= 0;
    size_1 := 1536;
    call {:si_unique_call 1073} sdv_568 := ExAllocatePoolWithTag(1, size_1, 846226003);
    symlinkBuffer := sdv_568;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} symlinkBuffer != 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    Tmp_1224 := strConst__li2bpl32;
    call {:si_unique_call 1074} vslice_dummy_var_212 := RtlStringCbPrintfW(symlinkBuffer, size_1, Tmp_1224);
    assume {:nonnull} pdoExtension_1 != 0;
    assume pdoExtension_1 > 0;
    call {:si_unique_call 1075} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_1), symlinkBuffer);
    call {:si_unique_call 1076} status_46 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto L140;

  L140:
    status_46 := 0;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1204;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_1205;
    assume {:nonnull} Tmp_1204 != 0;
    assume Tmp_1204 > 0;
    assume {:nonnull} Tmp_1205 != 0;
    assume Tmp_1205 > 0;
    goto L161;

  L161:
    call {:si_unique_call 1077} sdv_ExFreePool(0);
    Tmp_1202 := status_46;
    goto L1;

  L1:
    return;

  anon75_Then:
    assume {:partition} symlinkBuffer == 0;
    goto L140;

  anon58_Then:
    assume {:partition} 0 > status_46;
    call {:si_unique_call 1078} IoDeleteDevice(0);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto L161;

  anon64_Then:
    call {:si_unique_call 1079} vslice_dummy_var_220 := corral_nondet();
    goto L124;

  anon65_Then:
    call {:si_unique_call 1080} vslice_dummy_var_219 := corral_nondet();
    goto L124;

  anon66_Then:
    call {:si_unique_call 1081} vslice_dummy_var_218 := corral_nondet();
    goto L124;

  anon67_Then:
    call {:si_unique_call 1082} vslice_dummy_var_217 := corral_nondet();
    goto L124;

  anon68_Then:
    call {:si_unique_call 1083} vslice_dummy_var_216 := corral_nondet();
    goto L124;

  anon69_Then:
    call {:si_unique_call 1084} vslice_dummy_var_215 := corral_nondet();
    goto L124;

  anon70_Then:
    call {:si_unique_call 1085} vslice_dummy_var_214 := corral_nondet();
    goto L124;

  anon71_Then:
    call {:si_unique_call 1086} vslice_dummy_var_213 := corral_nondet();
    goto L124;

  anon57_Then:
    goto L98;

  anon74_Then:
    status_46 := -1073741670;
    goto L124;

  anon63_Then:
    call {:si_unique_call 1087} vslice_dummy_var_221 := corral_nondet();
    goto L124;

  anon56_Then:
    goto L81;

  anon73_Then:
    goto L54;

  anon55_Then:
    assume {:partition} 0 > status_46;
    call {:si_unique_call 1088} sdv_ExFreePool(0);
    Tmp_1202 := status_46;
    goto L1;

  anon54_Then:
    goto L29;

  L29:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    Tmp_1203 := strConst__li2bpl33;
    call {:si_unique_call 1089} vslice_dummy_var_222 := RtlStringCbPrintfW(buffer_1, size_1, Tmp_1203);
    goto L42;

  anon53_Then:
    goto L29;

  anon72_Then:
    assume {:partition} buffer_1 == 0;
    Tmp_1202 := -1073741670;
    goto L1;

  anon60_Then:
    goto L16;

  L16:
    devType_1 := 45;
    goto L21;

  anon61_Then:
    goto L16;

  anon62_Then:
    devType_1 := 24;
    goto L21;

  anon52_Then:
    goto L16;

  anon59_Then:
    devType_1 := 34;
    goto L21;

  anon51_Then:
    goto L15;
}



procedure {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_1234: int);
  free ensures {:va_keep} Tmp_1234 == 0 || Tmp_1234 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_1234: int)
{
  var {:scalar} cchNewDestLength_1: int;
  var {:scalar} iRet_1: int;
  var {:scalar} cchMax_3: int;
  var {:scalar} status_47: int;
  var {:pointer} pszDest_5: int;
  var {:scalar} cchDest_5: int;
  var {:pointer} pcchNewDestLength_1: int;

  anon0:
    pszDest_5 := actual_pszDest_5;
    cchDest_5 := actual_cchDest_5;
    pcchNewDestLength_1 := actual_pcchNewDestLength_1;
    status_47 := 0;
    cchNewDestLength_1 := 0;
    cchMax_3 := cchDest_5 - 1;
    call {:si_unique_call 1090} iRet_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet_1;
    goto L16;

  L16:
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    status_47 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength_1 != 0;
    assume {:nonnull} pcchNewDestLength_1 != 0;
    assume pcchNewDestLength_1 > 0;
    goto L21;

  L21:
    Tmp_1234 := status_47;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength_1 == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet_1 >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet_1 <= cchMax_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet_1 == cchMax_3;
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    goto L20;

  anon12_Then:
    assume {:partition} iRet_1 != cchMax_3;
    cchNewDestLength_1 := iRet_1;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax_3 < iRet_1;
    goto L16;
}



procedure {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_8: int, actual_uniInstanceId: int) returns (Tmp_1236: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1236 == 0 || Tmp_1236 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_8: int, actual_uniInstanceId: int) returns (Tmp_1236: int)
{
  var {:scalar} Tmp_1238: int;
  var {:pointer} Tmp_1239: int;
  var {:pointer} sdv_587: int;
  var {:pointer} Tmp_1240: int;
  var {:scalar} sdv_588: int;
  var {:scalar} Tmp_1242: int;
  var {:scalar} ntStatus_8: int;
  var {:scalar} sdv_589: int;
  var {:pointer} Tmp_1243: int;
  var {:scalar} Tmp_1244: int;
  var {:pointer} DeviceInfo_8: int;
  var {:pointer} uniInstanceId: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_3161: int;

  anon0:
    DeviceInfo_8 := actual_DeviceInfo_8;
    uniInstanceId := actual_uniInstanceId;
    call {:si_unique_call 1091} vslice_dummy_var_223 := __HAVOC_malloc(8);
    call {:si_unique_call 1092} Tmp_1239 := __HAVOC_malloc(36);
    call {:si_unique_call 1093} vslice_dummy_var_224 := __HAVOC_malloc(8);
    ntStatus_8 := 0;
    call {:si_unique_call 1094} sdv_do_paged_code_check();
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_1238;
    call {:si_unique_call 1095} sdv_587 := ExAllocatePoolWithTag(1, Tmp_1238, 846226035);
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_1242;
    call {:si_unique_call 1096} sdv_RtlZeroMemory(0, Tmp_1242);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_1240;
    assume {:nonnull} Tmp_1240 != 0;
    assume Tmp_1240 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_1243;
    assume {:nonnull} Tmp_1243 != 0;
    assume Tmp_1243 > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_1244;
    Tmp_1239 := strConst__li2bpl10;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc vslice_dummy_var_3161;
    call {:si_unique_call 1097} vslice_dummy_var_225 := RtlStringCbPrintfW(vslice_dummy_var_3161, Tmp_1244, Tmp_1239);
    goto L33;

  L33:
    Tmp_1236 := ntStatus_8;
    return;

  anon3_Then:
    ntStatus_8 := -1073741670;
    goto L33;
}



procedure {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_DeviceExtension_21: int) returns (Tmp_1246: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_1246 == 0 || Tmp_1246 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_DeviceExtension_21: int) returns (Tmp_1246: int)
{
  var {:pointer} Tmp_1247: int;
  var {:pointer} Tmp_1248: int;
  var {:pointer} Tmp_1249: int;
  var {:scalar} cnt: int;
  var {:pointer} Tmp_1250: int;
  var {:pointer} Tmp_1251: int;
  var {:pointer} Tmp_1252: int;
  var {:pointer} Tmp_1253: int;
  var {:pointer} Tmp_1254: int;
  var {:pointer} sdv_593: int;
  var {:pointer} context_5: int;
  var {:pointer} Tmp_1255: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} Tmp_1257: int;
  var {:pointer} sdv_594: int;
  var {:pointer} Tmp_1258: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} Tmp_1260: int;
  var {:pointer} sdv_595: int;
  var {:pointer} Tmp_1261: int;
  var {:pointer} Tmp_1262: int;
  var {:pointer} sdv_597: int;
  var {:pointer} sdv_598: int;
  var {:pointer} Tmp_1264: int;
  var {:pointer} Tmp_1265: int;
  var {:pointer} statusFifoElement_1: int;
  var {:scalar} status_48: int;
  var {:pointer} packet_13: int;
  var {:pointer} Tmp_1266: int;
  var {:pointer} Tmp_1267: int;
  var {:pointer} DeviceExtension_21: int;
  var boogieTmp: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_3162: int;
  var vslice_dummy_var_3163: int;
  var vslice_dummy_var_3164: int;
  var vslice_dummy_var_3165: int;
  var vslice_dummy_var_3166: int;

  anon0:
    call {:si_unique_call 1098} packet_13 := __HAVOC_malloc(4);
    DeviceExtension_21 := actual_DeviceExtension_21;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    call {:si_unique_call 1099} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_21));
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    call {:si_unique_call 1100} InitializeSListHead(FreeContextListHead__DEVICE_EXTENSION(DeviceExtension_21));
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    call {:si_unique_call 1101} InitializeSListHead(BusRequestIrpIrbListHead__DEVICE_EXTENSION(DeviceExtension_21));
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    call {:si_unique_call 1102} InitializeSListHead(StatusFifoListHead__DEVICE_EXTENSION(DeviceExtension_21));
    call {:si_unique_call 1103} ExInitializeNPagedLookasideList(0, 0, 0, 0, 32, 846226035, 0);
    call {:si_unique_call 1104} Tmp_1251 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1105} sdv_KeInitializeSpinLock(Tmp_1251);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1106} Tmp_1251 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1107} sdv_KeInitializeSpinLock(Tmp_1251);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1108} Tmp_1251 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1109} sdv_KeInitializeSpinLock(Tmp_1251);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1110} Tmp_1251 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1111} sdv_KeInitializeSpinLock(Tmp_1251);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1112} Tmp_1251 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    call {:si_unique_call 1113} sdv_KeInitializeSpinLock(Tmp_1251);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} Tmp_1251 != 0;
    assume Tmp_1251 > 0;
    cnt := 0;
    goto L41;

  L41:
    call {:si_unique_call 1114} Tmp_1249, cnt, sdv_593, sdv_597, boogieTmp, vslice_dummy_var_226 := Sbp2PreAllocateLists_loop_L41(Tmp_1249, cnt, sdv_593, sdv_597, packet_13, DeviceExtension_21, boogieTmp, vslice_dummy_var_226);
    goto L41_last;

  L41_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 8 > cnt;
    call {:si_unique_call 1115} sdv_593 := ExAllocatePoolWithTag(0, 24, 846226035);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L73;

  L73:
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    havoc vslice_dummy_var_3162;
    call {:si_unique_call 1116} vslice_dummy_var_227 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_3162, 1);
    Tmp_1246 := -1073741670;
    goto L1;

  L1:
    return;

  anon33_Then:
    call {:si_unique_call 1117} sdv_597 := ExAllocatePoolWithTag(0, 344, 846226035);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    havoc Tmp_1249;
    assume {:nonnull} Tmp_1249 != 0;
    assume Tmp_1249 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc vslice_dummy_var_3163;
    call {:si_unique_call 1118} boogieTmp := IoAllocateIrp(vslice_dummy_var_3163, 0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1119} vslice_dummy_var_226 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon26_Else_dummy;

  anon26_Else_dummy:
    assume false;
    return;

  anon26_Then:
    call {:si_unique_call 1120} sdv_ExFreePool(0);
    call {:si_unique_call 1121} sdv_ExFreePool(0);
    goto L73;

  anon34_Then:
    call {:si_unique_call 1122} sdv_ExFreePool(0);
    goto L73;

  anon25_Then:
    assume {:partition} cnt >= 8;
    cnt := 640;
    call {:si_unique_call 1123} sdv_594 := ExAllocatePoolWithTag(0, cnt, 846226035);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    cnt := 0;
    goto L85;

  L85:
    call {:si_unique_call 1124} cnt, statusFifoElement_1, boogieTmp, vslice_dummy_var_228 := Sbp2PreAllocateLists_loop_L85(cnt, statusFifoElement_1, DeviceExtension_21, boogieTmp, vslice_dummy_var_228);
    goto L85_last;

  L85_last:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 15 > cnt;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    havoc statusFifoElement_1;
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    call {:si_unique_call 1125} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 1126} vslice_dummy_var_228 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    goto L73;

  anon27_Then:
    assume {:partition} cnt >= 15;
    cnt := 1600;
    call {:si_unique_call 1127} sdv_595 := ExAllocatePoolWithTag(0, cnt, 846226035);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 1128} sdv_RtlZeroMemory(0, cnt);
    call {:si_unique_call 1129} AllocateIrpAndIrb(DeviceExtension_21, packet_13);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    cnt := 0;
    goto L117;

  L117:
    call {:si_unique_call 1130} Tmp_1247, Tmp_1248, cnt, Tmp_1250, Tmp_1252, Tmp_1253, Tmp_1254, context_5, Tmp_1255, Tmp_1256, Tmp_1257, Tmp_1258, Tmp_1259, Tmp_1260, Tmp_1261, Tmp_1262, sdv_598, Tmp_1264, Tmp_1265, status_48, Tmp_1266, Tmp_1267, vslice_dummy_var_229 := Sbp2PreAllocateLists_loop_L117(Tmp_1247, Tmp_1248, cnt, Tmp_1250, Tmp_1252, Tmp_1253, Tmp_1254, context_5, Tmp_1255, Tmp_1256, Tmp_1257, Tmp_1258, Tmp_1259, Tmp_1260, Tmp_1261, Tmp_1262, sdv_598, Tmp_1264, Tmp_1265, status_48, packet_13, Tmp_1266, Tmp_1267, DeviceExtension_21, vslice_dummy_var_229);
    goto L117_last;

  L117_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 8 > cnt;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    havoc context_5;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    call {:si_unique_call 1131} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(context_5), li2bplFunctionConstant242, 0);
    call {:si_unique_call 1132} KeInitializeTimer(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1252;
    assume {:nonnull} Tmp_1252 != 0;
    assume Tmp_1252 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1256;
    assume {:nonnull} Tmp_1256 != 0;
    assume Tmp_1256 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1253;
    assume {:nonnull} Tmp_1253 != 0;
    assume Tmp_1253 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1260;
    assume {:nonnull} Tmp_1260 != 0;
    assume Tmp_1260 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1261;
    assume {:nonnull} Tmp_1261 != 0;
    assume Tmp_1261 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1264;
    assume {:nonnull} Tmp_1264 != 0;
    assume Tmp_1264 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1267;
    assume {:nonnull} Tmp_1267 != 0;
    assume Tmp_1267 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1257;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1259;
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1265;
    assume {:nonnull} Tmp_1265 != 0;
    assume Tmp_1265 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1266;
    assume {:nonnull} Tmp_1266 != 0;
    assume Tmp_1266 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1258;
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1262;
    assume {:nonnull} Tmp_1262 != 0;
    assume Tmp_1262 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1254;
    assume {:nonnull} Tmp_1254 != 0;
    assume Tmp_1254 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1247;
    assume {:nonnull} Tmp_1247 != 0;
    assume Tmp_1247 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc vslice_dummy_var_3164;
    call {:si_unique_call 1133} status_48 := Sbp2SendRequest#1(DeviceExtension_21, vslice_dummy_var_3164, 2);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_48 >= 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1250;
    assume {:nonnull} Tmp_1250 != 0;
    assume Tmp_1250 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    call {:si_unique_call 1134} sdv_598 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_1248;
    assume {:nonnull} Tmp_1248 != 0;
    assume Tmp_1248 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    assume {:nonnull} context_5 != 0;
    assume context_5 > 0;
    call {:si_unique_call 1135} vslice_dummy_var_229 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} 0 > status_48;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc vslice_dummy_var_3165;
    call {:si_unique_call 1136} DeAllocateIrpAndIrb(DeviceExtension_21, vslice_dummy_var_3165);
    goto L73;

  anon30_Then:
    assume {:partition} cnt >= 8;
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc vslice_dummy_var_3166;
    call {:si_unique_call 1137} DeAllocateIrpAndIrb(DeviceExtension_21, vslice_dummy_var_3166);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    call {:si_unique_call 1138} boogieTmp := IoAllocateMdl(0, 4, 0, 0, 0);
    assume {:nonnull} DeviceExtension_21 != 0;
    assume DeviceExtension_21 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1246 := 0;
    goto L1;

  anon32_Then:
    goto L73;

  anon29_Then:
    goto L73;

  anon36_Then:
    goto L73;

  anon35_Then:
    goto L73;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_230: int;

  anon0:
    call {:si_unique_call 1139} vslice_dummy_var_230 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Sbp2HandleRemove"} Sbp2HandleRemove(actual_DeviceObject_37: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2HandleRemove"} Sbp2HandleRemove(actual_DeviceObject_37: int)
{
  var {:scalar} i_6: int;
  var {:pointer} Tmp_1273: int;
  var {:scalar} Tmp_1274: int;
  var {:pointer} Tmp_1275: int;
  var {:scalar} Tmp_1277: int;
  var {:pointer} Tmp_1279: int;
  var {:scalar} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:scalar} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:scalar} Tmp_1286: int;
  var {:pointer} Tmp_1287: int;
  var {:pointer} Tmp_1288: int;
  var {:pointer} Tmp_1289: int;
  var {:pointer} Tmp_1290: int;
  var {:scalar} Tmp_1292: int;
  var {:scalar} j_1: int;
  var {:pointer} Tmp_1293: int;
  var {:pointer} Tmp_1294: int;
  var {:pointer} Tmp_1295: int;
  var {:scalar} Tmp_1296: int;
  var {:scalar} Tmp_1297: int;
  var {:scalar} Tmp_1298: int;
  var {:pointer} Tmp_1299: int;
  var {:scalar} Tmp_1300: int;
  var {:pointer} Tmp_1301: int;
  var {:scalar} Tmp_1302: int;
  var {:scalar} Tmp_1303: int;
  var {:pointer} Tmp_1304: int;
  var {:pointer} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:pointer} Tmp_1309: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} Tmp_1311: int;
  var {:scalar} Tmp_1312: int;
  var {:scalar} Tmp_1313: int;
  var {:pointer} fdoExtension_6: int;
  var {:scalar} Tmp_1314: int;
  var {:pointer} Tmp_1316: int;
  var {:pointer} Tmp_1317: int;
  var {:pointer} Tmp_1318: int;
  var {:scalar} Tmp_1319: int;
  var {:pointer} Tmp_1320: int;
  var {:pointer} Tmp_1321: int;
  var {:pointer} Tmp_1322: int;
  var {:pointer} Tmp_1323: int;
  var {:scalar} cIrql_8: int;
  var {:pointer} Tmp_1325: int;
  var {:pointer} Tmp_1326: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_1327: int;
  var {:pointer} Tmp_1328: int;
  var {:pointer} deviceExtension_20: int;
  var {:pointer} Tmp_1329: int;
  var {:pointer} Tmp_1330: int;
  var {:pointer} Tmp_1331: int;
  var {:scalar} Tmp_1332: int;
  var {:pointer} Tmp_1333: int;
  var {:pointer} DeviceObject_37: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_3167: int;
  var vslice_dummy_var_3168: int;

  anon0:
    call {:si_unique_call 1140} vslice_dummy_var_231 := __HAVOC_malloc(4);
    call {:si_unique_call 1141} packet_14 := __HAVOC_malloc(4);
    DeviceObject_37 := actual_DeviceObject_37;
    call {:si_unique_call 1142} Tmp_1275 := __HAVOC_malloc(2560);
    call {:si_unique_call 1143} Tmp_1279 := __HAVOC_malloc(2560);
    call {:si_unique_call 1144} Tmp_1281 := __HAVOC_malloc(2560);
    call {:si_unique_call 1145} Tmp_1282 := __HAVOC_malloc(2560);
    call {:si_unique_call 1146} Tmp_1285 := __HAVOC_malloc(2560);
    call {:si_unique_call 1147} Tmp_1287 := __HAVOC_malloc(2560);
    call {:si_unique_call 1148} Tmp_1288 := __HAVOC_malloc(2560);
    call {:si_unique_call 1149} Tmp_1290 := __HAVOC_malloc(2560);
    call {:si_unique_call 1150} Tmp_1293 := __HAVOC_malloc(2560);
    call {:si_unique_call 1151} Tmp_1294 := __HAVOC_malloc(2560);
    call {:si_unique_call 1152} Tmp_1295 := __HAVOC_malloc(2560);
    call {:si_unique_call 1153} Tmp_1299 := __HAVOC_malloc(2560);
    call {:si_unique_call 1154} Tmp_1301 := __HAVOC_malloc(2560);
    call {:si_unique_call 1155} Tmp_1304 := __HAVOC_malloc(2560);
    call {:si_unique_call 1156} Tmp_1308 := __HAVOC_malloc(2560);
    call {:si_unique_call 1157} Tmp_1309 := __HAVOC_malloc(2560);
    call {:si_unique_call 1158} Tmp_1310 := __HAVOC_malloc(2560);
    call {:si_unique_call 1159} Tmp_1311 := __HAVOC_malloc(2560);
    call {:si_unique_call 1160} Tmp_1316 := __HAVOC_malloc(2560);
    call {:si_unique_call 1161} Tmp_1317 := __HAVOC_malloc(2560);
    call {:si_unique_call 1162} Tmp_1318 := __HAVOC_malloc(2560);
    call {:si_unique_call 1163} Tmp_1321 := __HAVOC_malloc(2560);
    call {:si_unique_call 1164} Tmp_1322 := __HAVOC_malloc(2560);
    call {:si_unique_call 1165} Tmp_1323 := __HAVOC_malloc(2560);
    call {:si_unique_call 1166} Tmp_1325 := __HAVOC_malloc(2560);
    call {:si_unique_call 1167} Tmp_1326 := __HAVOC_malloc(2560);
    call {:si_unique_call 1168} Tmp_1327 := __HAVOC_malloc(2560);
    call {:si_unique_call 1169} Tmp_1328 := __HAVOC_malloc(2560);
    call {:si_unique_call 1170} Tmp_1329 := __HAVOC_malloc(2560);
    call {:si_unique_call 1171} Tmp_1330 := __HAVOC_malloc(2560);
    call {:si_unique_call 1172} Tmp_1331 := __HAVOC_malloc(2560);
    assume {:nonnull} DeviceObject_37 != 0;
    assume DeviceObject_37 > 0;
    havoc deviceExtension_20;
    assume {:nonnull} deviceExtension_20 != 0;
    assume deviceExtension_20 > 0;
    havoc Tmp_1320;
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    havoc fdoExtension_6;
    assume {:nonnull} deviceExtension_20 != 0;
    assume deviceExtension_20 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 1173} Tmp_1307 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1307 != 0;
    assume Tmp_1307 > 0;
    call {:si_unique_call 1174} sdv_KeAcquireSpinLock(0, Tmp_1307);
    assume {:nonnull} Tmp_1307 != 0;
    assume Tmp_1307 > 0;
    havoc cIrql_8;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    i_6 := 0;
    goto L19;

  L19:
    call {:si_unique_call 1175} i_6, Tmp_1274, Tmp_1277, Tmp_1280, Tmp_1281, Tmp_1282, Tmp_1283, Tmp_1285, Tmp_1286, Tmp_1288, Tmp_1289, Tmp_1292, j_1, Tmp_1294, Tmp_1296, Tmp_1297, Tmp_1298, Tmp_1299, Tmp_1300, Tmp_1301, Tmp_1302, Tmp_1303, Tmp_1304, Tmp_1308, Tmp_1310, Tmp_1312, Tmp_1313, Tmp_1314, Tmp_1317, Tmp_1318, Tmp_1319, Tmp_1321, Tmp_1323, Tmp_1326, Tmp_1328, deviceExtension_20, Tmp_1329, Tmp_1332 := Sbp2HandleRemove_loop_L19(i_6, Tmp_1274, Tmp_1277, Tmp_1280, Tmp_1281, Tmp_1282, Tmp_1283, Tmp_1285, Tmp_1286, Tmp_1288, Tmp_1289, Tmp_1292, j_1, Tmp_1294, Tmp_1296, Tmp_1297, Tmp_1298, Tmp_1299, Tmp_1300, Tmp_1301, Tmp_1302, Tmp_1303, Tmp_1304, Tmp_1308, Tmp_1310, Tmp_1312, Tmp_1313, fdoExtension_6, Tmp_1314, Tmp_1317, Tmp_1318, Tmp_1319, Tmp_1321, Tmp_1323, Tmp_1326, Tmp_1328, deviceExtension_20, Tmp_1329, Tmp_1332, DeviceObject_37);
    goto L19_last;

  L19_last:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1298 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1281;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_1314 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_1277 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1308;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    call {:si_unique_call 1176} sdv_ExFreePool(0);
    Tmp_1313 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1282;
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    Tmp_1319 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1310;
    assume {:nonnull} Tmp_1310 != 0;
    assume Tmp_1310 > 0;
    goto L24;

  L24:
    Tmp_1280 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1321;
    assume {:nonnull} Tmp_1321 != 0;
    assume Tmp_1321 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    Tmp_1297 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1301;
    assume {:nonnull} Tmp_1301 != 0;
    assume Tmp_1301 > 0;
    call {:si_unique_call 1177} sdv_ExFreePool(0);
    Tmp_1303 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1323;
    assume {:nonnull} Tmp_1323 != 0;
    assume Tmp_1323 > 0;
    Tmp_1332 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1317;
    assume {:nonnull} Tmp_1317 != 0;
    assume Tmp_1317 > 0;
    goto L31;

  L31:
    Tmp_1300 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1329;
    assume {:nonnull} Tmp_1329 != 0;
    assume Tmp_1329 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_1296 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1326;
    assume {:nonnull} Tmp_1326 != 0;
    assume Tmp_1326 > 0;
    call {:si_unique_call 1178} sdv_ExFreePool(0);
    Tmp_1286 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    Tmp_1312 := i_6;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1328;
    assume {:nonnull} Tmp_1328 != 0;
    assume Tmp_1328 > 0;
    goto L38;

  L38:
    j_1 := i_6;
    goto L45;

  L45:
    call {:si_unique_call 1179} Tmp_1274, Tmp_1283, Tmp_1289, Tmp_1292, j_1, Tmp_1294, Tmp_1299, Tmp_1302, Tmp_1304, Tmp_1318, deviceExtension_20 := Sbp2HandleRemove_loop_L45(Tmp_1274, Tmp_1283, Tmp_1289, Tmp_1292, j_1, Tmp_1294, Tmp_1299, Tmp_1302, Tmp_1304, fdoExtension_6, Tmp_1318, deviceExtension_20);
    goto L45_last;

  L45_last:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_1292 := j_1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1294;
    Tmp_1302 := j_1 + 1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1299;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} Tmp_1294 != 0;
    assume Tmp_1294 > 0;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    Tmp_1283 := j_1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1304;
    assume {:nonnull} Tmp_1304 != 0;
    assume Tmp_1304 > 0;
    havoc Tmp_1289;
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    havoc deviceExtension_20;
    Tmp_1274 := j_1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1318;
    assume {:nonnull} deviceExtension_20 != 0;
    assume deviceExtension_20 > 0;
    goto L48;

  L48:
    j_1 := j_1 + 1;
    goto L48_dummy;

  L48_dummy:
    assume false;
    return;

  anon35_Then:
    goto L48;

  anon34_Then:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto L22;

  L22:
    i_6 := i_6 + 1;
    goto L22_dummy;

  L22_dummy:
    assume false;
    return;

  anon41_Then:
    goto L38;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L24;

  anon38_Then:
    goto L22;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1180} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L1;

  L1:
    return;

  anon33_Then:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1181} sdv_KeReleaseSpinLock(0, cIrql_8);
    call {:si_unique_call 1182} AllocateIrpAndIrb(fdoExtension_6, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1333;
    assume {:nonnull} Tmp_1333 != 0;
    assume Tmp_1333 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1273;
    assume {:nonnull} Tmp_1273 != 0;
    assume Tmp_1273 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_3167;
    call {:si_unique_call 1183} vslice_dummy_var_232 := Sbp2SendRequest#1(fdoExtension_6, vslice_dummy_var_3167, 2);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_3168;
    call {:si_unique_call 1184} DeAllocateIrpAndIrb(fdoExtension_6, vslice_dummy_var_3168);
    goto L63;

  L63:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto L1;

  anon36_Then:
    goto L63;

  anon31_Then:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1316;
    assume {:nonnull} Tmp_1316 != 0;
    assume Tmp_1316 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1327;
    assume {:nonnull} Tmp_1327 != 0;
    assume Tmp_1327 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1275;
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    call {:si_unique_call 1185} sdv_ExFreePool(0);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1309;
    assume {:nonnull} Tmp_1309 != 0;
    assume Tmp_1309 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1330;
    assume {:nonnull} Tmp_1330 != 0;
    assume Tmp_1330 > 0;
    goto L75;

  L75:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1295;
    assume {:nonnull} Tmp_1295 != 0;
    assume Tmp_1295 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1311;
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    call {:si_unique_call 1186} sdv_ExFreePool(0);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1279;
    assume {:nonnull} Tmp_1279 != 0;
    assume Tmp_1279 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1331;
    assume {:nonnull} Tmp_1331 != 0;
    assume Tmp_1331 > 0;
    goto L82;

  L82:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1287;
    assume {:nonnull} Tmp_1287 != 0;
    assume Tmp_1287 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1325;
    assume {:nonnull} Tmp_1325 != 0;
    assume Tmp_1325 > 0;
    call {:si_unique_call 1187} sdv_ExFreePool(0);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1322;
    assume {:nonnull} Tmp_1322 != 0;
    assume Tmp_1322 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    goto L73;

  L73:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1293;
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    assume {:nonnull} deviceExtension_20 != 0;
    assume deviceExtension_20 > 0;
    goto L20;

  anon45_Then:
    goto L73;

  anon44_Then:
    goto L82;

  anon43_Then:
    goto L75;

  anon42_Then:
    goto L73;

  anon37_Then:
    goto L1;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension(actual_DeviceExtension_22: int) returns (Tmp_1334: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension(actual_DeviceExtension_22: int) returns (Tmp_1334: int)
{
  var {:scalar} i_7: int;
  var {:pointer} Tmp_1335: int;
  var {:pointer} Tmp_1336: int;
  var {:scalar} Tmp_1337: int;
  var {:pointer} deviceObject_6: int;
  var {:scalar} Tmp_1338: int;
  var {:pointer} Tmp_1339: int;
  var {:pointer} Tmp_1340: int;
  var {:pointer} context_6: int;
  var {:pointer} Tmp_1341: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_1342: int;
  var {:pointer} sdv_609: int;
  var {:pointer} sdv_610: int;
  var {:pointer} Tmp_1343: int;
  var {:pointer} Tmp_1344: int;
  var {:pointer} Tmp_1345: int;
  var {:scalar} cIrql_9: int;
  var {:pointer} Tmp_1346: int;
  var {:scalar} status_49: int;
  var {:pointer} DeviceExtension_22: int;
  var vslice_dummy_var_233: int;

  anon0:
    DeviceExtension_22 := actual_DeviceExtension_22;
    call {:si_unique_call 1188} Tmp_1335 := __HAVOC_malloc(1728);
    call {:si_unique_call 1189} Tmp_1339 := __HAVOC_malloc(1728);
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc deviceObject_6;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_1334 := 0;
    goto L1;

  L1:
    return;

  anon43_Then:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1190} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_22));
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1191} status_49 := Sbp2UpdateNodeInformation#1(DeviceExtension_22);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_49 < 0;
    goto L61;

  L61:
    Tmp_1334 := status_49;
    goto L1;

  anon31_Then:
    assume {:partition} 0 <= status_49;
    call {:si_unique_call 1192} status_49 := Sbp2GetControllerInfo(DeviceExtension_22);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_49 < 0;
    goto L61;

  anon32_Then:
    assume {:partition} 0 <= status_49;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L34;

  L34:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L38;

  L38:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L42;

  L42:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L50;

  L50:
    i_7 := 0;
    goto L51;

  L51:
    call {:si_unique_call 1193} i_7, context_6 := Sbp2InitializeDeviceExtension_loop_L51(i_7, context_6, DeviceExtension_22);
    goto L51_last;

  L51_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} 8 > i_7;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc context_6;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    i_7 := i_7 + 1;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} i_7 >= 8;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L61;

  anon45_Then:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1194} status_49 := AllocateSingle1394Address(deviceObject_6, Dummy__DEVICE_EXTENSION(DeviceExtension_22), 32, 3, DummyContext__DEVICE_EXTENSION(DeviceExtension_22));
    goto L61;

  anon44_Then:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1195} status_49 := AllocateSingle1394Address(deviceObject_6, 0, 472, 3, CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_22));
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_49 >= 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1343;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} Tmp_1343 != 0;
    assume Tmp_1343 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1342;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} Tmp_1342 != 0;
    assume Tmp_1342 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1345;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} Tmp_1345 != 0;
    assume Tmp_1345 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1336;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} Tmp_1336 != 0;
    assume Tmp_1336 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1346;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1196} Tmp_1344 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1344 != 0;
    assume Tmp_1344 > 0;
    call {:si_unique_call 1197} sdv_KeAcquireSpinLock(0, Tmp_1344);
    assume {:nonnull} Tmp_1344 != 0;
    assume Tmp_1344 > 0;
    havoc cIrql_9;
    i_7 := 0;
    context_6 := 0;
    goto L88;

  L88:
    call {:si_unique_call 1198} i_7, Tmp_1335, Tmp_1337, Tmp_1338, Tmp_1339, Tmp_1340, context_6, Tmp_1341, oldContext, sdv_609, sdv_610 := Sbp2InitializeDeviceExtension_loop_L88(i_7, Tmp_1335, Tmp_1337, Tmp_1338, Tmp_1339, Tmp_1340, context_6, Tmp_1341, oldContext, sdv_609, sdv_610, DeviceExtension_22);
    goto L88_last;

  L88_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} 8 > i_7;
    oldContext := context_6;
    call {:si_unique_call 1199} sdv_610 := sdv_ExInterlockedPopEntrySList(0, 0);
    context_6 := sdv_610;
    call {:si_unique_call 1200} sdv_609 := sdv_containing_record(context_6, 8);
    context_6 := sdv_609;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    Tmp_1337 := i_7;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1341;
    assume {:nonnull} Tmp_1341 != 0;
    assume Tmp_1341 > 0;
    havoc Tmp_1335;
    assume {:nonnull} Tmp_1335 != 0;
    assume Tmp_1335 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    Tmp_1338 := i_7;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    havoc Tmp_1340;
    assume {:nonnull} Tmp_1340 != 0;
    assume Tmp_1340 > 0;
    havoc Tmp_1339;
    assume {:nonnull} Tmp_1339 != 0;
    assume Tmp_1339 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    assume {:nonnull} context_6 != 0;
    assume context_6 > 0;
    i_7 := i_7 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} i_7 >= 8;
    goto L89;

  L89:
    call {:si_unique_call 1201} context_6, oldContext, vslice_dummy_var_233 := Sbp2InitializeDeviceExtension_loop_L89(context_6, oldContext, vslice_dummy_var_233);
    goto L89_last;

  L89_last:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} context_6 != 0;
    oldContext := context_6;
    call {:si_unique_call 1202} vslice_dummy_var_233 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    havoc context_6;
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} context_6 == 0;
    call {:si_unique_call 1203} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L50;

  anon37_Then:
    assume {:partition} 0 > status_49;
    goto L61;

  anon35_Then:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1204} status_49 := AllocateAddressForStatus(deviceObject_6, GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_22), 8);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_49 < 0;
    goto L61;

  anon40_Then:
    assume {:partition} 0 <= status_49;
    goto L42;

  anon34_Then:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1205} status_49 := AllocateAddressForStatus(deviceObject_6, ManagementOrbStatusContext__DEVICE_EXTENSION(DeviceExtension_22), 4);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_49 < 0;
    goto L61;

  anon41_Then:
    assume {:partition} 0 <= status_49;
    goto L38;

  anon33_Then:
    assume {:nonnull} DeviceExtension_22 != 0;
    assume DeviceExtension_22 > 0;
    call {:si_unique_call 1206} status_49 := AllocateAddressForStatus(deviceObject_6, TaskOrbStatusContext__DEVICE_EXTENSION(DeviceExtension_22), 2);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_49 < 0;
    goto L61;

  anon42_Then:
    assume {:partition} 0 <= status_49;
    goto L34;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification(actual_DeviceExtension_23: int, actual_Enable: int) returns (Tmp_1347: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_1347 == 1 || Tmp_1347 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification(actual_DeviceExtension_23: int, actual_Enable: int) returns (Tmp_1347: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_1349: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} Tmp_1351: int;
  var {:scalar} result: int;
  var {:pointer} Tmp_1352: int;
  var {:pointer} Tmp_1353: int;
  var {:pointer} fdoExtension_7: int;
  var {:pointer} Tmp_1354: int;
  var {:pointer} Tmp_1355: int;
  var {:pointer} packet_15: int;
  var {:pointer} DeviceExtension_23: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_3169: int;
  var vslice_dummy_var_3170: int;

  anon0:
    call {:si_unique_call 1207} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 1208} packet_15 := __HAVOC_malloc(4);
    DeviceExtension_23 := actual_DeviceExtension_23;
    Enable := actual_Enable;
    result := 1;
    assume {:nonnull} DeviceExtension_23 != 0;
    assume DeviceExtension_23 > 0;
    havoc Tmp_1352;
    assume {:nonnull} Tmp_1352 != 0;
    assume Tmp_1352 > 0;
    havoc fdoExtension_7;
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 1209} vslice_dummy_var_236 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L21;

  L21:
    call {:si_unique_call 1210} vslice_dummy_var_234 := KeReleaseMutex(0, 0);
    Tmp_1347 := result;
    return;

  anon16_Then:
    goto L17;

  L17:
    call {:si_unique_call 1211} AllocateIrpAndIrb(DeviceExtension_23, packet_15);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_1353;
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_1351;
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_1355;
    assume {:nonnull} Tmp_1355 != 0;
    assume Tmp_1355 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    goto L34;

  L34:
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_3169;
    call {:si_unique_call 1212} vslice_dummy_var_235 := Sbp2SendRequest#1(DeviceExtension_23, vslice_dummy_var_3169, 2);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_3170;
    call {:si_unique_call 1213} DeAllocateIrpAndIrb(DeviceExtension_23, vslice_dummy_var_3170);
    goto L21;

  anon17_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_1354;
    assume {:nonnull} Tmp_1354 != 0;
    assume Tmp_1354 > 0;
    goto L34;

  anon14_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto L40;

  L40:
    result := 0;
    goto L21;

  anon15_Then:
    assume {:partition} Enable == 0;
    goto L40;

  anon13_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L21;

  anon18_Then:
    goto L17;
}



procedure {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_3: int, actual_DeviceRelations: int) returns (Tmp_1356: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_3: int, actual_DeviceRelations: int) returns (Tmp_1356: int)
{
  var {:scalar} i_8: int;
  var {:scalar} Tmp_1357: int;
  var {:pointer} Tmp_1358: int;
  var {:scalar} Tmp_1359: int;
  var {:scalar} Tmp_1360: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_1361: int;
  var {:pointer} Tmp_1362: int;
  var {:pointer} Tmp_1363: int;
  var {:scalar} Tmp_1364: int;
  var {:scalar} Tmp_1366: int;
  var {:scalar} Tmp_1367: int;
  var {:scalar} Tmp_1368: int;
  var {:pointer} Tmp_1369: int;
  var {:scalar} Tmp_1370: int;
  var {:scalar} Tmp_1371: int;
  var {:scalar} Tmp_1373: int;
  var {:pointer} Tmp_1374: int;
  var {:pointer} Tmp_1375: int;
  var {:scalar} status_50: int;
  var {:scalar} instanceNum: int;
  var {:scalar} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} FdoExtension_3: int;
  var {:pointer} DeviceRelations: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;

  anon0:
    FdoExtension_3 := actual_FdoExtension_3;
    DeviceRelations := actual_DeviceRelations;
    call {:si_unique_call 1214} Tmp_1358 := __HAVOC_malloc(2560);
    call {:si_unique_call 1215} Tmp_1361 := __HAVOC_malloc(2560);
    call {:si_unique_call 1216} Tmp_1362 := __HAVOC_malloc(4);
    call {:si_unique_call 1217} Tmp_1363 := __HAVOC_malloc(2560);
    call {:si_unique_call 1218} Tmp_1369 := __HAVOC_malloc(4);
    call {:si_unique_call 1219} Tmp_1374 := __HAVOC_malloc(2560);
    call {:si_unique_call 1220} Tmp_1378 := __HAVOC_malloc(2560);
    call {:si_unique_call 1221} Tmp_1379 := __HAVOC_malloc(2560);
    call {:si_unique_call 1222} Tmp_1381 := __HAVOC_malloc(2560);
    call {:si_unique_call 1223} sdv_do_paged_code_check();
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    call {:si_unique_call 1224} status_50 := Sbp2Get1394ConfigInfo(FdoExtension_3, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_50 >= 0;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1225} sdv_ExFreePool(0);
    Tmp_1356 := -1073741823;
    goto L1;

  L1:
    return;

  anon18_Then:
    i_8 := 0;
    goto L24;

  L24:
    call {:si_unique_call 1226} i_8, Tmp_1357, Tmp_1358, Tmp_1359, Tmp_1360, pdoExtension_2, Tmp_1361, Tmp_1362, Tmp_1363, Tmp_1364, Tmp_1366, Tmp_1367, Tmp_1368, Tmp_1369, Tmp_1370, Tmp_1371, Tmp_1373, Tmp_1374, Tmp_1375, status_50, instanceNum, Tmp_1377, Tmp_1378, Tmp_1379, Tmp_1380, Tmp_1381, vslice_dummy_var_237, vslice_dummy_var_238 := Sbp2CreateDeviceRelations_loop_L24(i_8, Tmp_1357, Tmp_1358, Tmp_1359, Tmp_1360, pdoExtension_2, Tmp_1361, Tmp_1362, Tmp_1363, Tmp_1364, Tmp_1366, Tmp_1367, Tmp_1368, Tmp_1369, Tmp_1370, Tmp_1371, Tmp_1373, Tmp_1374, Tmp_1375, status_50, instanceNum, Tmp_1377, Tmp_1378, Tmp_1379, Tmp_1380, Tmp_1381, FdoExtension_3, DeviceRelations, vslice_dummy_var_237, vslice_dummy_var_238);
    goto L24_last;

  L24_last:
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_1370 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1361;
    assume {:nonnull} Tmp_1361 != 0;
    assume Tmp_1361 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_1371 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1363;
    assume {:nonnull} Tmp_1363 != 0;
    assume Tmp_1363 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    i_8 := i_8 + 1;
    goto L36_dummy;

  L36_dummy:
    assume false;
    return;

  anon24_Then:
    goto L30;

  L30:
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1357;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1362;
    Tmp_1377 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1362 != 0;
    assume Tmp_1362 > 0;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_1373 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    call {:si_unique_call 1227} vslice_dummy_var_237 := sdv_ObReferenceObject(0);
    goto L36;

  anon20_Then:
    goto L30;

  anon23_Then:
    instanceNum := 0;
    goto L40;

  L40:
    call {:si_unique_call 1228} Tmp_1359, Tmp_1364, Tmp_1367, status_50, instanceNum, Tmp_1380, Tmp_1381 := Sbp2CreateDeviceRelations_loop_L40(i_8, Tmp_1359, Tmp_1364, Tmp_1367, status_50, instanceNum, Tmp_1380, Tmp_1381, FdoExtension_3);
    goto L40_last;

  L40_last:
    Tmp_1359 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_1364 := Tmp_1359;
    Tmp_1367 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1381;
    Tmp_1380 := Tmp_1381 + Tmp_1367 * 256;
    call {:si_unique_call 1232} status_50 := Sbp2CreatePdo(FdoExtension_3, Tmp_1380, Tmp_1364);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_50 != -1073741771;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_50 >= 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1368;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_1369;
    Tmp_1360 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1374;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_1366 := i_8;
    assume {:nonnull} FdoExtension_3 != 0;
    assume FdoExtension_3 > 0;
    havoc Tmp_1358;
    assume {:nonnull} Tmp_1358 != 0;
    assume Tmp_1358 > 0;
    call {:si_unique_call 1229} vslice_dummy_var_238 := sdv_ObReferenceObject(0);
    goto L36;

  anon22_Then:
    assume {:partition} 0 > status_50;
    call {:si_unique_call 1230} sdv_ExFreePool(0);
    Tmp_1356 := status_50;
    goto L1;

  anon21_Then:
    assume {:partition} status_50 == -1073741771;
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon19_Then:
    Tmp_1356 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} 0 > status_50;
    call {:si_unique_call 1231} sdv_ExFreePool(0);
    Tmp_1356 := status_50;
    goto L1;
}



procedure {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_38: int) returns (Tmp_1382: int);
  modifies alloc, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Busy__KDEVICE_QUEUE, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_38: int) returns (Tmp_1382: int)
{
  var {:scalar} enabledBusResetNotification: int;
  var {:scalar} errorId: int;
  var {:scalar} waitValue_6: int;
  var {:pointer} Tmp_1383: int;
  var {:scalar} Tmp_1384: int;
  var {:pointer} errorLogEntry_1: int;
  var {:pointer} Tmp_1385: int;
  var {:pointer} fdoExtension_8: int;
  var {:scalar} temp_3: int;
  var {:scalar} sdv_641: int;
  var {:pointer} Tmp_1386: int;
  var {:pointer} Tmp_1387: int;
  var {:scalar} status_51: int;
  var {:pointer} deviceExtension_21: int;
  var {:pointer} sdv_643: int;
  var {:pointer} DeviceObject_38: int;
  var boogieTmp: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_3171: int;
  var vslice_dummy_var_3172: int;

  anon0:
    call {:si_unique_call 1233} waitValue_6 := __HAVOC_malloc(20);
    DeviceObject_38 := actual_DeviceObject_38;
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc deviceExtension_21;
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc fdoExtension_8;
    enabledBusResetNotification := 0;
    call {:si_unique_call 1234} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    havoc vslice_dummy_var_3171;
    call {:si_unique_call 1235} vslice_dummy_var_239 := Sbp2ConfigLegacyDevice(DeviceObject_38, vslice_dummy_var_3171);
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L21;

  L21:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1236} KeInitializeDpc(DeviceManagementTimeoutDpc__DEVICE_EXTENSION(deviceExtension_21), li2bplFunctionConstant240, 0);
    call {:si_unique_call 1237} KeInitializeTimer(0);
    call {:si_unique_call 1238} Tmp_1385 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1239} sdv_KeInitializeSpinLock(Tmp_1385);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1240} Tmp_1385 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1241} sdv_KeInitializeSpinLock(Tmp_1385);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1242} Tmp_1385 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1243} sdv_KeInitializeSpinLock(Tmp_1385);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1244} Tmp_1385 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1245} sdv_KeInitializeSpinLock(Tmp_1385);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1246} Tmp_1385 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1247} sdv_KeInitializeSpinLock(Tmp_1385);
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1248} status_51 := Sbp2InitializeDeviceExtension(deviceExtension_21);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_51 < 0;
    goto L92;

  L92:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_51 < 0;
    errorId := 1114;
    call {:si_unique_call 1249} sdv_643 := IoAllocateErrorLogEntry(0, 48);
    errorLogEntry_1 := sdv_643;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} errorLogEntry_1 != 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    assume {:nonnull} errorLogEntry_1 != 0;
    assume errorLogEntry_1 > 0;
    call {:si_unique_call 1250} IoWriteErrorLogEntry(0);
    goto L105;

  L105:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} enabledBusResetNotification != 0;
    call {:si_unique_call 1251} vslice_dummy_var_242 := Sbp2EnableBusResetNotification(deviceExtension_21, 0);
    goto L97;

  L97:
    Tmp_1382 := status_51;
    return;

  anon80_Then:
    assume {:partition} enabledBusResetNotification == 0;
    goto L97;

  anon79_Then:
    assume {:partition} errorLogEntry_1 == 0;
    goto L105;

  anon65_Then:
    assume {:partition} 0 <= status_51;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    goto L97;

  anon66_Then:
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    goto L97;

  anon58_Then:
    assume {:partition} 0 <= status_51;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    havoc Tmp_1387;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L53;

  L53:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto L50;

  L50:
    call {:si_unique_call 1252} status_51 := Sbp2ManagementTransaction#1(deviceExtension_21, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_51 >= 0;
    goto L58;

  L58:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1253} vslice_dummy_var_240 := Sbp2AccessRegister#1(deviceExtension_21, Reserved__DEVICE_EXTENSION(deviceExtension_21), 258);
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1254} vslice_dummy_var_241 := Sbp2AccessRegister#1(deviceExtension_21, Reserved__DEVICE_EXTENSION(deviceExtension_21), 272);
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1255} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, 4);
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1256} sdv_641 := Sbp2EnableBusResetNotification(deviceExtension_21, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_641 != 0;
    enabledBusResetNotification := 1;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 1257} status_51 := Sbp2IssueInternalCommand(deviceExtension_21, 18);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_51 < 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_51 == -1073741632;
    goto L86;

  L86:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1258} vslice_dummy_var_249 := Sbp2ManagementTransaction#1(deviceExtension_21, 7);
    status_51 := -1073741435;
    goto L92;

  anon63_Then:
    assume {:partition} status_51 != -1073741632;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_51 != 17;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    status_51 := 0;
    goto L78;

  L78:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    havoc Tmp_1386;
    assume {:nonnull} Tmp_1386 != 0;
    assume Tmp_1386 > 0;
    havoc Tmp_1384;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    havoc Tmp_1383;
    assume {:nonnull} Tmp_1383 != 0;
    assume Tmp_1383 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto L120;

  L120:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L123;

  L123:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} status_51 >= 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1259} CleanupOrbList#1(deviceExtension_21, -1073741248);
    call {:si_unique_call 1260} vslice_dummy_var_243 := Sbp2ManagementTransaction#1(deviceExtension_21, 7);
    goto L92;

  anon69_Then:
    assume {:partition} 0 > status_51;
    goto L92;

  anon67_Then:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_51 >= 0;
    call {:si_unique_call 1261} status_51 := Sbp2IssueInternalCommand(deviceExtension_21, 26);
    goto L92;

  anon71_Then:
    assume {:partition} 0 > status_51;
    goto L92;

  anon70_Then:
    goto L92;

  anon68_Then:
    goto L123;

  anon78_Then:
    goto L120;

  anon64_Then:
    assume {:partition} status_51 == 17;
    goto L86;

  anon62_Then:
    assume {:partition} 0 <= status_51;
    goto L78;

  anon77_Then:
    goto L78;

  anon61_Then:
    assume {:partition} sdv_641 == 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1262} CleanupOrbList#1(deviceExtension_21, -1073741248);
    call {:si_unique_call 1263} vslice_dummy_var_244 := Sbp2ManagementTransaction#1(deviceExtension_21, 7);
    status_51 := -1073741670;
    goto L92;

  anon59_Then:
    assume {:partition} 0 > status_51;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} status_51 == -1073741790;
    call {:si_unique_call 1264} vslice_dummy_var_245 := Sbp2ManagementTransaction#1(deviceExtension_21, 1);
    goto L149;

  L149:
    temp_3 := 0;
    goto L154;

  L154:
    call {:si_unique_call 1265} temp_3, status_51, vslice_dummy_var_246, vslice_dummy_var_247, vslice_dummy_var_248 := Sbp2StartDevice_loop_L154(waitValue_6, temp_3, status_51, deviceExtension_21, vslice_dummy_var_246, vslice_dummy_var_247, vslice_dummy_var_248);
    goto L154_last;

  L154_last:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    call {:si_unique_call 1266} vslice_dummy_var_246 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_21));
    assume {:nonnull} waitValue_6 != 0;
    assume waitValue_6 > 0;
    call {:si_unique_call 1267} status_51 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_6);
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    havoc vslice_dummy_var_3172;
    call {:si_unique_call 1268} vslice_dummy_var_247 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_3172, 0);
    call {:si_unique_call 1269} vslice_dummy_var_248 := Sbp2InitializeDeviceExtension(deviceExtension_21);
    call {:si_unique_call 1270} status_51 := Sbp2ManagementTransaction#1(deviceExtension_21, 0);
    temp_3 := temp_3 + 1;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_51 == -1073741248;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} 3 < temp_3;
    goto L174;

  L174:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_51 < 0;
    goto L92;

  anon72_Then:
    assume {:partition} 0 <= status_51;
    goto L58;

  anon73_Then:
    assume {:partition} temp_3 <= 3;
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    assume false;
    return;

  anon81_Then:
    assume {:partition} status_51 != -1073741248;
    goto L174;

  anon60_Then:
    assume {:partition} status_51 != -1073741790;
    goto L149;

  anon74_Then:
    goto L50;

  anon75_Then:
    goto L53;

  anon76_Then:
    goto L53;

  anon57_Then:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto L21;

  anon55_Then:
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} deviceExtension_21 != 0;
    assume deviceExtension_21 > 0;
    status_51 := 0;
    goto L97;

  anon56_Then:
    status_51 := -1073741810;
    goto L97;
}



procedure {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_24: int, actual_Irp_27: int) returns (Tmp_1388: int);
  modifies alloc, LockDepth, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_24: int, actual_Irp_27: int) returns (Tmp_1388: int)
{
  var {:pointer} irpStack_16: int;
  var {:pointer} sbp2Req: int;
  var {:scalar} status_52: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} DeviceExtension_24: int;
  var {:pointer} Irp_27: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_3173: int;

  anon0:
    DeviceExtension_24 := actual_DeviceExtension_24;
    Irp_27 := actual_Irp_27;
    call {:si_unique_call 1271} irpStack_16 := sdv_IoGetCurrentIrpStackLocation(Irp_27);
    call {:si_unique_call 1272} status_52 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_52 >= 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    havoc sbp2Req;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    status_52 := -1073741811;
    goto L23;

  L23:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} DeviceExtension_24 != 0;
    assume DeviceExtension_24 > 0;
    call {:si_unique_call 1273} vslice_dummy_var_250 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_24), 0);
    call {:si_unique_call 1274} sdv_IoCompleteRequest(0, 0);
    Tmp_1388 := status_52;
    goto L1;

  L1:
    return;

  anon17_Then:
    goto L20;

  L20:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sbp2Req != 0;
    status_52 := -1073741822;
    assume {:nonnull} sbp2Req != 0;
    assume sbp2Req > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} DeviceExtension_24 != 0;
    assume DeviceExtension_24 > 0;
    havoc Tmp_1389;
    assume {:nonnull} Tmp_1389 != 0;
    assume Tmp_1389 > 0;
    havoc vslice_dummy_var_3173;
    call {:si_unique_call 1275} status_52 := Sbp2Get1394ConfigInfo(vslice_dummy_var_3173, sbp2Req);
    goto L23;

  anon16_Then:
    goto L23;

  anon18_Then:
    status_52 := -1073741811;
    goto L23;

  anon15_Then:
    assume {:partition} sbp2Req == 0;
    status_52 := -1073741811;
    goto L23;

  anon14_Then:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    havoc sbp2Req;
    goto L20;

  anon13_Then:
    assume {:partition} 0 > status_52;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1276} sdv_IoCompleteRequest(0, 0);
    Tmp_1388 := status_52;
    goto L1;
}



procedure {:origName "SLIC_Sbp2PowerControl_exit"} {:osmodel} SLIC_Sbp2PowerControl_exit(actual_caller_2: int, actual_Sbp2PowerControl_1: int, actual_Sbp2PowerControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_Sbp2PowerControl_exit"} {:osmodel} SLIC_Sbp2PowerControl_exit(actual_caller_2: int, actual_Sbp2PowerControl_1: int, actual_Sbp2PowerControl_2: int)
{
  var {:pointer} Tmp_1391: int;
  var {:pointer} Tmp_1392: int;
  var {:pointer} caller_2: int;
  var {:pointer} Sbp2PowerControl_1: int;
  var {:scalar} Sbp2PowerControl_2: int;

  anon0:
    caller_2 := actual_caller_2;
    Sbp2PowerControl_1 := actual_Sbp2PowerControl_1;
    Sbp2PowerControl_2 := actual_Sbp2PowerControl_2;
    assume {:nonnull} Sbp2PowerControl_1 != 0;
    assume Sbp2PowerControl_1 > 0;
    Tmp_1392 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2PowerControl_1)))];
    assume {:nonnull} Sbp2PowerControl_1 != 0;
    assume Sbp2PowerControl_1 > 0;
    Tmp_1391 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2PowerControl_1)))];
    assume {:nonnull} Tmp_1391 != 0;
    assume Tmp_1391 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1391)] == 27;
    assume {:nonnull} Tmp_1392 != 0;
    assume Tmp_1392 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1392)] != 2;
    goto L10;

  L10:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LockDepth != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Sbp2PowerControl_2 == 259;
    goto L9;

  L9:
    call {:si_unique_call 1277} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} Sbp2PowerControl_2 != 259;
    call {:si_unique_call 1278} SLIC_ABORT_20_0(caller_2, Sbp2PowerControl_1, Sbp2PowerControl_2);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} LockDepth == 0;
    goto L9;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1392)] == 2;
    call {:si_unique_call 1279} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon14_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1391)] != 27;
    goto L10;
}



procedure {:origName "SLIC_Sbp2DeviceControl_exit"} {:osmodel} SLIC_Sbp2DeviceControl_exit(actual_caller_3: int, actual_Sbp2DeviceControl_1: int, actual_Sbp2DeviceControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_Sbp2DeviceControl_exit"} {:osmodel} SLIC_Sbp2DeviceControl_exit(actual_caller_3: int, actual_Sbp2DeviceControl_1: int, actual_Sbp2DeviceControl_2: int)
{
  var {:pointer} Tmp_1393: int;
  var {:pointer} Tmp_1394: int;
  var {:pointer} caller_3: int;
  var {:pointer} Sbp2DeviceControl_1: int;
  var {:scalar} Sbp2DeviceControl_2: int;

  anon0:
    caller_3 := actual_caller_3;
    Sbp2DeviceControl_1 := actual_Sbp2DeviceControl_1;
    Sbp2DeviceControl_2 := actual_Sbp2DeviceControl_2;
    assume {:nonnull} Sbp2DeviceControl_1 != 0;
    assume Sbp2DeviceControl_1 > 0;
    Tmp_1394 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2DeviceControl_1)))];
    assume {:nonnull} Sbp2DeviceControl_1 != 0;
    assume Sbp2DeviceControl_1 > 0;
    Tmp_1393 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2DeviceControl_1)))];
    assume {:nonnull} Tmp_1393 != 0;
    assume Tmp_1393 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1393)] == 27;
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1394)] != 2;
    goto L10;

  L10:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LockDepth != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Sbp2DeviceControl_2 == 259;
    goto L9;

  L9:
    call {:si_unique_call 1280} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} Sbp2DeviceControl_2 != 259;
    call {:si_unique_call 1281} SLIC_ABORT_24_0(caller_3, Sbp2DeviceControl_1, Sbp2DeviceControl_2);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} LockDepth == 0;
    goto L9;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1394)] == 2;
    call {:si_unique_call 1282} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon14_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1393)] != 27;
    goto L10;
}



procedure {:origName "SLIC_sdv_IoAcquireRemoveLock_exit"} {:osmodel} SLIC_sdv_IoAcquireRemoveLock_exit(actual_caller_4: int, actual_sdv_647: int);
  modifies LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_IoAcquireRemoveLock_exit"} {:osmodel} SLIC_sdv_IoAcquireRemoveLock_exit(actual_caller_4: int, actual_sdv_647: int)
{
  var {:scalar} sdv_647: int;

  anon0:
    sdv_647 := actual_sdv_647;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} 0 < LockDepth;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_647 == 0;
    goto L7;

  L7:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_647 == 0;
    LockDepth := LockDepth + 1;
    goto L2;

  L2:
    return;

  anon7_Then:
    assume {:partition} sdv_647 != 0;
    goto L2;

  anon9_Then:
    assume {:partition} sdv_647 != 0;
    call {:si_unique_call 1283} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon8_Then:
    assume {:partition} LockDepth <= 0;
    goto L7;
}



procedure {:origName "SLIC_sdv_RunPowerCompletionRoutines_exit"} {:osmodel} SLIC_sdv_RunPowerCompletionRoutines_exit(actual_caller_5: int, actual_sdv_648: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_RunPowerCompletionRoutines_exit"} {:osmodel} SLIC_sdv_RunPowerCompletionRoutines_exit(actual_caller_5: int, actual_sdv_648: int)
{
  var {:scalar} sdv_648: int;

  anon0:
    sdv_648 := actual_sdv_648;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_648 == 0;
    call {:si_unique_call 1284} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} sdv_648 != 0;
    goto L2;
}



procedure {:origName "SLIC_Sbp2SystemControl_exit"} {:osmodel} SLIC_Sbp2SystemControl_exit(actual_caller_6: int, actual_Sbp2SystemControl_1: int, actual_Sbp2SystemControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_Sbp2SystemControl_exit"} {:osmodel} SLIC_Sbp2SystemControl_exit(actual_caller_6: int, actual_Sbp2SystemControl_1: int, actual_Sbp2SystemControl_2: int)
{
  var {:pointer} Tmp_1395: int;
  var {:pointer} Tmp_1396: int;
  var {:pointer} caller_6: int;
  var {:pointer} Sbp2SystemControl_1: int;
  var {:scalar} Sbp2SystemControl_2: int;

  anon0:
    caller_6 := actual_caller_6;
    Sbp2SystemControl_1 := actual_Sbp2SystemControl_1;
    Sbp2SystemControl_2 := actual_Sbp2SystemControl_2;
    assume {:nonnull} Sbp2SystemControl_1 != 0;
    assume Sbp2SystemControl_1 > 0;
    Tmp_1396 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2SystemControl_1)))];
    assume {:nonnull} Sbp2SystemControl_1 != 0;
    assume Sbp2SystemControl_1 > 0;
    Tmp_1395 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2SystemControl_1)))];
    assume {:nonnull} Tmp_1395 != 0;
    assume Tmp_1395 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1395)] == 27;
    assume {:nonnull} Tmp_1396 != 0;
    assume Tmp_1396 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1396)] != 2;
    goto L10;

  L10:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LockDepth != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Sbp2SystemControl_2 == 259;
    goto L9;

  L9:
    call {:si_unique_call 1285} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} Sbp2SystemControl_2 != 259;
    call {:si_unique_call 1286} SLIC_ABORT_18_0(caller_6, Sbp2SystemControl_1, Sbp2SystemControl_2);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} LockDepth == 0;
    goto L9;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1396)] == 2;
    call {:si_unique_call 1287} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon14_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1395)] != 27;
    goto L10;
}



procedure {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_7: int, actual_Sbp2CreateClose_1: int, actual_Sbp2CreateClose_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_7: int, actual_Sbp2CreateClose_1: int, actual_Sbp2CreateClose_2: int)
{
  var {:pointer} caller_7: int;
  var {:pointer} Sbp2CreateClose_1: int;
  var {:scalar} Sbp2CreateClose_2: int;

  anon0:
    caller_7 := actual_caller_7;
    Sbp2CreateClose_1 := actual_Sbp2CreateClose_1;
    Sbp2CreateClose_2 := actual_Sbp2CreateClose_2;
    call {:si_unique_call 1288} SLIC_ERROR_ROUTINE(strConst__li2bpl35);
    return;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_8: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_8: int)
{

  anon0:
    call {:si_unique_call 1289} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    return;
}



procedure {:origName "SLIC_sdv_InsertTailList_entry"} SLIC_sdv_InsertTailList_entry(actual_caller_9: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_InsertTailList_entry"} SLIC_sdv_InsertTailList_entry(actual_caller_9: int)
{

  anon0:
    call {:si_unique_call 1290} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    return;
}



procedure {:origName "_sdv_init17"} {:osmodel} _sdv_init17();
  modifies LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init17"} {:osmodel} _sdv_init17()
{

  anon0:
    LockDepth := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_Sbp2CreateClose_exit"} {:osmodel} SLIC_Sbp2CreateClose_exit(actual_caller_10: int, actual_Sbp2CreateClose_3: int, actual_Sbp2CreateClose_4: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_Sbp2CreateClose_exit"} {:osmodel} SLIC_Sbp2CreateClose_exit(actual_caller_10: int, actual_Sbp2CreateClose_3: int, actual_Sbp2CreateClose_4: int)
{
  var {:pointer} Tmp_1397: int;
  var {:pointer} Tmp_1398: int;
  var {:pointer} caller_10: int;
  var {:pointer} Sbp2CreateClose_3: int;
  var {:scalar} Sbp2CreateClose_4: int;

  anon0:
    caller_10 := actual_caller_10;
    Sbp2CreateClose_3 := actual_Sbp2CreateClose_3;
    Sbp2CreateClose_4 := actual_Sbp2CreateClose_4;
    assume {:nonnull} Sbp2CreateClose_3 != 0;
    assume Sbp2CreateClose_3 > 0;
    Tmp_1398 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2CreateClose_3)))];
    assume {:nonnull} Sbp2CreateClose_3 != 0;
    assume Sbp2CreateClose_3 > 0;
    Tmp_1397 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2CreateClose_3)))];
    assume {:nonnull} Tmp_1397 != 0;
    assume Tmp_1397 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1397)] == 27;
    assume {:nonnull} Tmp_1398 != 0;
    assume Tmp_1398 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1398)] != 2;
    goto L10;

  L10:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LockDepth != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Sbp2CreateClose_4 == 259;
    goto L9;

  L9:
    call {:si_unique_call 1291} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} Sbp2CreateClose_4 != 259;
    call {:si_unique_call 1292} SLIC_ABORT_26_0(caller_10, Sbp2CreateClose_3, Sbp2CreateClose_4);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} LockDepth == 0;
    goto L9;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1398)] == 2;
    call {:si_unique_call 1293} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon14_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1397)] != 27;
    goto L10;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_12: int, actual_Sbp2PowerControl_3: int, actual_Sbp2PowerControl_4: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_12: int, actual_Sbp2PowerControl_3: int, actual_Sbp2PowerControl_4: int)
{
  var {:pointer} caller_12: int;
  var {:pointer} Sbp2PowerControl_3: int;
  var {:scalar} Sbp2PowerControl_4: int;

  anon0:
    caller_12 := actual_caller_12;
    Sbp2PowerControl_3 := actual_Sbp2PowerControl_3;
    Sbp2PowerControl_4 := actual_Sbp2PowerControl_4;
    call {:si_unique_call 1294} SLIC_ERROR_ROUTINE(strConst__li2bpl35);
    return;
}



procedure {:origName "SLIC_sdv_IoReleaseRemoveLock_exit"} {:osmodel} SLIC_sdv_IoReleaseRemoveLock_exit(actual_caller_13: int);
  modifies LockDepth;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_IoReleaseRemoveLock_exit"} {:osmodel} SLIC_sdv_IoReleaseRemoveLock_exit(actual_caller_13: int)
{

  anon0:
    LockDepth := LockDepth - 1;
    return;
}



procedure {:origName "SLIC_InsertHeadList_entry"} SLIC_InsertHeadList_entry(actual_caller_14: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_InsertHeadList_entry"} SLIC_InsertHeadList_entry(actual_caller_14: int)
{

  anon0:
    call {:si_unique_call 1295} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    return;
}



procedure {:origName "SLIC_sdv_RunIoCompletionRoutines_exit"} {:osmodel} SLIC_sdv_RunIoCompletionRoutines_exit(actual_caller_15: int, actual_sdv_649: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_RunIoCompletionRoutines_exit"} {:osmodel} SLIC_sdv_RunIoCompletionRoutines_exit(actual_caller_15: int, actual_sdv_649: int)
{
  var {:pointer} sdv_649: int;

  anon0:
    sdv_649 := actual_sdv_649;
    assume {:nonnull} sdv_649 != 0;
    assume sdv_649 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1296} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    return;

  anon3_Then:
    goto L2;
}



procedure {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_16: int, actual_Sbp2DeviceControl_3: int, actual_Sbp2DeviceControl_4: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_16: int, actual_Sbp2DeviceControl_3: int, actual_Sbp2DeviceControl_4: int)
{
  var {:pointer} caller_16: int;
  var {:pointer} Sbp2DeviceControl_3: int;
  var {:scalar} Sbp2DeviceControl_4: int;

  anon0:
    caller_16 := actual_caller_16;
    Sbp2DeviceControl_3 := actual_Sbp2DeviceControl_3;
    Sbp2DeviceControl_4 := actual_Sbp2DeviceControl_4;
    call {:si_unique_call 1297} SLIC_ERROR_ROUTINE(strConst__li2bpl35);
    return;
}



procedure {:origName "SLIC_ABORT_16_0"} SLIC_ABORT_16_0(actual_caller_17: int, actual_Sbp2PnpDeviceControl_1: int, actual_Sbp2PnpDeviceControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_16_0"} SLIC_ABORT_16_0(actual_caller_17: int, actual_Sbp2PnpDeviceControl_1: int, actual_Sbp2PnpDeviceControl_2: int)
{
  var {:pointer} caller_17: int;
  var {:pointer} Sbp2PnpDeviceControl_1: int;
  var {:scalar} Sbp2PnpDeviceControl_2: int;

  anon0:
    caller_17 := actual_caller_17;
    Sbp2PnpDeviceControl_1 := actual_Sbp2PnpDeviceControl_1;
    Sbp2PnpDeviceControl_2 := actual_Sbp2PnpDeviceControl_2;
    call {:si_unique_call 1298} SLIC_ERROR_ROUTINE(strConst__li2bpl35);
    return;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_18: int, actual_Sbp2SystemControl_3: int, actual_Sbp2SystemControl_4: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_18: int, actual_Sbp2SystemControl_3: int, actual_Sbp2SystemControl_4: int)
{
  var {:pointer} caller_18: int;
  var {:pointer} Sbp2SystemControl_3: int;
  var {:scalar} Sbp2SystemControl_4: int;

  anon0:
    caller_18 := actual_caller_18;
    Sbp2SystemControl_3 := actual_Sbp2SystemControl_3;
    Sbp2SystemControl_4 := actual_Sbp2SystemControl_4;
    call {:si_unique_call 1299} SLIC_ERROR_ROUTINE(strConst__li2bpl35);
    return;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_19: int, actual_Sbp2ScsiRequests_1: int, actual_Sbp2ScsiRequests_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_19: int, actual_Sbp2ScsiRequests_1: int, actual_Sbp2ScsiRequests_2: int)
{
  var {:pointer} caller_19: int;
  var {:pointer} Sbp2ScsiRequests_1: int;
  var {:scalar} Sbp2ScsiRequests_2: int;

  anon0:
    caller_19 := actual_caller_19;
    Sbp2ScsiRequests_1 := actual_Sbp2ScsiRequests_1;
    Sbp2ScsiRequests_2 := actual_Sbp2ScsiRequests_2;
    call {:si_unique_call 1300} SLIC_ERROR_ROUTINE(strConst__li2bpl35);
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_20: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_20: int)
{

  anon0:
    call {:si_unique_call 1301} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    return;
}



procedure {:origName "SLIC_Sbp2PnpDeviceControl_exit"} {:osmodel} SLIC_Sbp2PnpDeviceControl_exit(actual_caller_22: int, actual_Sbp2PnpDeviceControl_3: int, actual_Sbp2PnpDeviceControl_4: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_Sbp2PnpDeviceControl_exit"} {:osmodel} SLIC_Sbp2PnpDeviceControl_exit(actual_caller_22: int, actual_Sbp2PnpDeviceControl_3: int, actual_Sbp2PnpDeviceControl_4: int)
{
  var {:pointer} Tmp_1399: int;
  var {:pointer} Tmp_1400: int;
  var {:pointer} caller_22: int;
  var {:pointer} Sbp2PnpDeviceControl_3: int;
  var {:scalar} Sbp2PnpDeviceControl_4: int;

  anon0:
    caller_22 := actual_caller_22;
    Sbp2PnpDeviceControl_3 := actual_Sbp2PnpDeviceControl_3;
    Sbp2PnpDeviceControl_4 := actual_Sbp2PnpDeviceControl_4;
    assume {:nonnull} Sbp2PnpDeviceControl_3 != 0;
    assume Sbp2PnpDeviceControl_3 > 0;
    Tmp_1399 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2PnpDeviceControl_3)))];
    assume {:nonnull} Sbp2PnpDeviceControl_3 != 0;
    assume Sbp2PnpDeviceControl_3 > 0;
    Tmp_1400 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2PnpDeviceControl_3)))];
    assume {:nonnull} Tmp_1400 != 0;
    assume Tmp_1400 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1400)] == 27;
    assume {:nonnull} Tmp_1399 != 0;
    assume Tmp_1399 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1399)] != 2;
    goto L10;

  L10:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LockDepth != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Sbp2PnpDeviceControl_4 == 259;
    goto L9;

  L9:
    call {:si_unique_call 1302} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} Sbp2PnpDeviceControl_4 != 259;
    call {:si_unique_call 1303} SLIC_ABORT_16_0(caller_22, Sbp2PnpDeviceControl_3, Sbp2PnpDeviceControl_4);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} LockDepth == 0;
    goto L9;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1399)] == 2;
    call {:si_unique_call 1304} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon14_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1400)] != 27;
    goto L10;
}



procedure {:origName "SLIC_Sbp2ScsiRequests_exit"} {:osmodel} SLIC_Sbp2ScsiRequests_exit(actual_caller_24: int, actual_Sbp2ScsiRequests_3: int, actual_Sbp2ScsiRequests_4: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_Sbp2ScsiRequests_exit"} {:osmodel} SLIC_Sbp2ScsiRequests_exit(actual_caller_24: int, actual_Sbp2ScsiRequests_3: int, actual_Sbp2ScsiRequests_4: int)
{
  var {:pointer} Tmp_1401: int;
  var {:pointer} Tmp_1402: int;
  var {:pointer} caller_24: int;
  var {:pointer} Sbp2ScsiRequests_3: int;
  var {:scalar} Sbp2ScsiRequests_4: int;

  anon0:
    caller_24 := actual_caller_24;
    Sbp2ScsiRequests_3 := actual_Sbp2ScsiRequests_3;
    Sbp2ScsiRequests_4 := actual_Sbp2ScsiRequests_4;
    assume {:nonnull} Sbp2ScsiRequests_3 != 0;
    assume Sbp2ScsiRequests_3 > 0;
    Tmp_1402 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2ScsiRequests_3)))];
    assume {:nonnull} Sbp2ScsiRequests_3 != 0;
    assume Sbp2ScsiRequests_3 > 0;
    Tmp_1401 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2ScsiRequests_3)))];
    assume {:nonnull} Tmp_1401 != 0;
    assume Tmp_1401 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1401)] == 27;
    assume {:nonnull} Tmp_1402 != 0;
    assume Tmp_1402 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1402)] != 2;
    goto L10;

  L10:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LockDepth != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Sbp2ScsiRequests_4 == 259;
    goto L9;

  L9:
    call {:si_unique_call 1305} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} Sbp2ScsiRequests_4 != 259;
    call {:si_unique_call 1306} SLIC_ABORT_22_0(caller_24, Sbp2ScsiRequests_3, Sbp2ScsiRequests_4);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} LockDepth == 0;
    goto L9;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_1402)] == 2;
    call {:si_unique_call 1307} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    goto L2;

  anon14_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_1401)] != 27;
    goto L10;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_sdv_RemoveEntryList_entry"} SLIC_sdv_RemoveEntryList_entry(actual_caller_25: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_RemoveEntryList_entry"} SLIC_sdv_RemoveEntryList_entry(actual_caller_25: int)
{

  anon0:
    call {:si_unique_call 1308} SLIC_EXIT_ROUTINE(strConst__li2bpl34);
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AR_Length__ADDRESS_RANGE"} {:fieldname "AR_Length"} AR_Length__ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AcceleratedTransfer"} AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterScansDown"} AdapterScansDown__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterScansDown"} AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AddressAndStatus__STATUS_FIFO_BLOCK"} {:fieldname "AddressAndStatus"} AddressAndStatus__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "AddressContext"} AddressContext__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "AddressHandle"} AddressHandle__ADDRESS_CONTEXT(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "Address"} Address__ADDRESS_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__IO_SCSI_CAPABILITIES"} {:fieldname "AlignmentMask"} AlignmentMask__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AlignmentMask"} AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_67"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_67(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__CDB6INQUIRY"} {:fieldname "AllocationLength"} AllocationLength__CDB6INQUIRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AppendToNextContextToFree__DEVICE_EXTENSION"} {:fieldname "AppendToNextContextToFree"} AppendToNextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_40"} {:fieldname "Argument1"} Argument1_unnamed_tag_40(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_1"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AsyncContextBase__DEVICE_EXTENSION"} {:fieldname "AsyncContextBase"} AsyncContextBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4028
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_67"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_67(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncReqCtx__ARCP_ORB"} {:fieldname "AsyncReqCtx"} AsyncReqCtx__ARCP_ORB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_67"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_67(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockLength__MODE_PARAMETER_BLOCK"} {:fieldname "BlockLength"} BlockLength__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.BufferOffset__PORT_PASSTHROUGH_INFO"} {:fieldname "BufferOffset"} BufferOffset__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Buffer__PORT_PASSTHROUGH_INFO"} {:fieldname "Buffer"} Buffer__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Buffer__STRING"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Buffer"} Buffer_unnamed_tag_69(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusAddress__OCTLET"} {:fieldname "BusAddress"} BusAddress__OCTLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusFdo__DEVICE_EXTENSION"} {:fieldname "BusFdo"} BusFdo__DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMajorVersion"} BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMinorVersion"} BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "BusRequestContextPool"} BusRequestContextPool__DEVICE_EXTENSION(x: int) : int
{
  x + 3892
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "BusRequestIrpIrbListHead"} BusRequestIrpIrbListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4004
}

function {:inline true} {:fieldmap "Mem_T.BusRequestLock__DEVICE_EXTENSION"} {:fieldname "BusRequestLock"} BusRequestLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4020
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_67"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_67(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Busy__KDEVICE_QUEUE"} {:fieldname "Busy"} Busy__KDEVICE_QUEUE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte0_unnamed_tag_65"} {:fieldname "Byte0"} Byte0_unnamed_tag_65(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1_unnamed_tag_65"} {:fieldname "Byte1"} Byte1_unnamed_tag_65(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2_unnamed_tag_65"} {:fieldname "Byte2"} Byte2_unnamed_tag_65(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3_unnamed_tag_65"} {:fieldname "Byte3"} Byte3_unnamed_tag_65(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Byte4_unnamed_tag_65"} {:fieldname "Byte4"} Byte4_unnamed_tag_65(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte5_unnamed_tag_65"} {:fieldname "Byte5"} Byte5_unnamed_tag_65(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte6_unnamed_tag_65"} {:fieldname "Byte6"} Byte6_unnamed_tag_65(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte7_unnamed_tag_65"} {:fieldname "Byte7"} Byte7_unnamed_tag_65(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ByteArray__OCTLET"} {:fieldname "ByteArray"} ByteArray__OCTLET(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CDB10__CDB"} {:fieldname "CDB10"} CDB10__CDB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.CDB6GENERIC__CDB"} {:fieldname "CDB6GENERIC"} CDB6GENERIC__CDB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CDB6INQUIRY__CDB"} {:fieldname "CDB6INQUIRY"} CDB6INQUIRY__CDB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_PASS_THROUGH"} {:fieldname "CdbLength"} CdbLength__SCSI_PASS_THROUGH(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_REQUEST_BLOCK"} {:fieldname "CdbLength"} CdbLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Cdb__SCSI_PASS_THROUGH"} {:fieldname "Cdb"} Cdb__SCSI_PASS_THROUGH(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "CmdOrbAddress"} CmdOrbAddress__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CmdOrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrb"} CmdOrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.P_ARCP_ORB"} {:fieldname "CmdOrbs"} CmdOrbs__COMMON_BUFFER_DATA(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T.CmdSetId__DEVICE_INFORMATION"} {:fieldname "CmdSetId"} CmdSetId__DEVICE_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CmdSetSpecId__DEVICE_INFORMATION"} {:fieldname "CmdSetSpecId"} CmdSetSpecId__DEVICE_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "CommonBufferContext"} CommonBufferContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1432
}

function {:inline true} {:fieldmap "Mem_T.CommonBuffer__DEVICE_EXTENSION"} {:fieldname "CommonBuffer"} CommonBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 1428
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Complete"} Complete__REQUEST_CONTEXT(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__DEVICE_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__DEVICE_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._CONFIG_ROM"} {:fieldname "ConfigRom"} ConfigRom__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 2752
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Contents__STATUS_FIFO_BLOCK"} {:fieldname "Contents"} Contents__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__NOTIFICATION_INFO_WXP"} {:fieldname "Context"} Context__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Control__CDB6INQUIRY"} {:fieldname "Control"} Control__CDB6INQUIRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CrashDumpCount__DEVICE_EXTENSION"} {:fieldname "CrashDumpCount"} CrashDumpCount__DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.CsrRegisterBase__DEVICE_INFORMATION"} {:fieldname "CsrRegisterBase"} CsrRegisterBase__DEVICE_INFORMATION(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_High__LOGIN_RESPONSE"} {:fieldname "Csr_Off_High"} Csr_Off_High__LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_Low__LOGIN_RESPONSE"} {:fieldname "Csr_Off_Low"} Csr_Off_Low__LOGIN_RESPONSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CurrentGeneration__DEVICE_EXTENSION"} {:fieldname "CurrentGeneration"} CurrentGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1008
}

function {:inline true} {:fieldmap "Mem_T.CurrentKey__DEVICE_EXTENSION"} {:fieldname "CurrentKey"} CurrentKey__DEVICE_EXTENSION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBufferOffset__SCSI_PASS_THROUGH"} {:fieldname "DataBufferOffset"} DataBufferOffset__SCSI_PASS_THROUGH(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataDescriptor__ORB_NORMAL_CMD"} {:fieldname "DataDescriptor"} DataDescriptor__ORB_NORMAL_CMD(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.DataIn__SCSI_PASS_THROUGH"} {:fieldname "DataIn"} DataIn__SCSI_PASS_THROUGH(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "DataMappingHandle"} DataMappingHandle__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_PASS_THROUGH"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_PASS_THROUGH(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE"} {:fieldname "Dbd"} Dbd__MODE_SENSE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE10"} {:fieldname "Dbd"} Dbd__MODE_SENSE10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "DeferredPowerRequest"} DeferredPowerRequest__DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DensityCode__MODE_PARAMETER_BLOCK"} {:fieldname "DensityCode"} DensityCode__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__REQUEST_CONTEXT"} {:fieldname "DeviceExtension"} DeviceExtension__REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceInfo__DEVICE_EXTENSION"} {:fieldname "DeviceInfo"} DeviceInfo__DEVICE_EXTENSION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListEntry"} DeviceListEntry__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListHead"} DeviceListHead__KDEVICE_QUEUE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceListSize__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListSize"} DeviceListSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.DeviceList__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceList"} DeviceList__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "DeviceManagementTimeoutDpc"} DeviceManagementTimeoutDpc__DEVICE_EXTENSION(x: int) : int
{
  x + 4036
}

function {:inline true} {:fieldmap "Mem_T._MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "DeviceModeHeaderAndPage"} DeviceModeHeaderAndPage__DEVICE_EXTENSION(x: int) : int
{
  x + 904
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ADDRESS_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ADDRESS_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ASYNC_REQUEST_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.P_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__FDO_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE_ENTRY"} {:fieldname "DeviceQueueEntry"} DeviceQueueEntry_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE"} {:fieldname "DeviceQueue"} DeviceQueue__DEVICE_OBJECT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.DeviceSpecificParameter__MODE_PARAMETER_HEADER"} {:fieldname "DeviceSpecificParameter"} DeviceSpecificParameter__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_33"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_33(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceTypeModifier"} DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceType"} DeviceType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_73"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_73(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DueTime__DEVICE_EXTENSION"} {:fieldname "DueTime"} DueTime__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "DummyContext"} DummyContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1256
}

function {:inline true} {:fieldmap "Mem_T._ORB_NORMAL_CMD"} {:fieldname "Dummy"} Dummy__DEVICE_EXTENSION(x: int) : int
{
  x + 1044
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Elements__QUERY_LOGIN_RESPONSE"} {:fieldname "Elements"} Elements__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__REQUEST_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ExtensionDataSpinLock__DEVICE_EXTENSION"} {:fieldname "ExtensionDataSpinLock"} ExtensionDataSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4032
}

function {:inline true} {:fieldmap "Mem_T.FifoMdl__ADDRESS_FIFO"} {:fieldname "FifoMdl"} FifoMdl__ADDRESS_FIFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Fifo__NOTIFICATION_INFO_WXP"} {:fieldname "Fifo"} Fifo__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirmwareVersion__DEVICE_INFORMATION"} {:fieldname "FirmwareVersion"} FirmwareVersion__DEVICE_INFORMATION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Flags__ASYNC_REQUEST_CONTEXT"} {:fieldname "Flags"} Flags__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_67"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_67(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "FreeContextListHead"} FreeContextListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 3876
}

function {:inline true} {:fieldmap "Mem_T.FreeContextLock__DEVICE_EXTENSION"} {:fieldname "FreeContextLock"} FreeContextLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4024
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_67"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_67(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.GetConfigurationInformation_unnamed_tag_67"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_67(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_67"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_67(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_67"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_67(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_67"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_67(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "GlobalStatusContext"} GlobalStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3680
}

function {:inline true} {:fieldmap "Mem_T.HandleCount__DEVICE_EXTENSION"} {:fieldname "HandleCount"} HandleCount__DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HibernateCount"} HibernateCount__DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HighQuad_unnamed_tag_63"} {:fieldname "HighQuad"} HighQuad_unnamed_tag_63(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO2"} {:fieldname "HostControllerInformation"} HostControllerInformation__DEVICE_EXTENSION(x: int) : int
{
  x + 1024
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO4"} {:fieldname "HostRoutineAPI"} HostRoutineAPI__DEVICE_EXTENSION(x: int) : int
{
  x + 1036
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IReserved__CDB6INQUIRY"} {:fieldname "IReserved"} IReserved__CDB6INQUIRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__DEVICE_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_34"} {:fieldname "InPath"} InPath_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "Information"} Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "InitiatorAddressId"} InitiatorAddressId__DEVICE_EXTENSION(x: int) : int
{
  x + 1000
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._INQUIRYDATA"} {:fieldname "InquiryData"} InquiryData__DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.Inserted__KDEVICE_QUEUE_ENTRY"} {:fieldname "Inserted"} Inserted__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.InternalStatus__SCSI_REQUEST_BLOCK"} {:fieldname "InternalStatus"} InternalStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._IO_STATUS_BLOCK"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Irb__IRBIRP"} {:fieldname "Irb"} Irb__IRBIRP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__IRBIRP"} {:fieldname "Irp"} Irp__IRBIRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_69"} {:fieldname "Key"} Key_unnamed_tag_69(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastStatusBlock__DEVICE_EXTENSION"} {:fieldname "LastStatusBlock"} LastStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.LastTransactionStatus__DEVICE_EXTENSION"} {:fieldname "LastTransactionStatus"} LastTransactionStatus__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LegacyFlags"} LegacyFlags__DEVICE_INFORMATION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LengthAndLoginId__LOGIN_RESPONSE"} {:fieldname "LengthAndLoginId"} LengthAndLoginId__LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthAndNumLogins__QUERY_LOGIN_RESPONSE"} {:fieldname "LengthAndNumLogins"} LengthAndNumLogins__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_QUERY_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Length__PORT_PASSTHROUGH_INFO"} {:fieldname "Length"} Length__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LoadEject__START_STOP_RBC"} {:fieldname "LoadEject"} LoadEject__START_STOP_RBC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "LogicalBlockSize"} LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalUnitNumber__CDB6INQUIRY"} {:fieldname "LogicalUnitNumber"} LogicalUnitNumber__CDB6INQUIRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LoginRespContext__DEVICE_EXTENSION"} {:fieldname "LoginRespContext"} LoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2208
}

function {:inline true} {:fieldmap "Mem_T.LoginResponseAddress__ORB_LOGIN"} {:fieldname "LoginResponseAddress"} LoginResponseAddress__ORB_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._LOGIN_RESPONSE"} {:fieldname "LoginResponse"} LoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.LoginResponse__DEVICE_EXTENSION"} {:fieldname "LoginResponse"} LoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2204
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowQuad_unnamed_tag_63"} {:fieldname "LowQuad"} LowQuad_unnamed_tag_63(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Lun__DEVICE_INFORMATION"} {:fieldname "Lun"} Lun__DEVICE_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Lun__SCSI_PASS_THROUGH"} {:fieldname "Lun"} Lun__SCSI_PASS_THROUGH(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Lun__SCSI_REQUEST_BLOCK"} {:fieldname "Lun"} Lun__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MODE_SELECT__CDB"} {:fieldname "MODE_SELECT"} MODE_SELECT__CDB(x: int) : int
{
  x + 1744
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE10__CDB"} {:fieldname "MODE_SENSE10"} MODE_SENSE10__CDB(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1648
}

function {:inline true} {:fieldmap "Mem_T.MajorCode__PORT_PASSTHROUGH_INFO"} {:fieldname "MajorCode"} MajorCode__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ManagementAgentBaseReg__DEVICE_INFORMATION"} {:fieldname "ManagementAgentBaseReg"} ManagementAgentBaseReg__DEVICE_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "ManagementEvent"} ManagementEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2080
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbContext__DEVICE_EXTENSION"} {:fieldname "ManagementOrbContext"} ManagementOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1908
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "ManagementOrbStatusBlock"} ManagementOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 2728
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "ManagementOrbStatusContext"} ManagementOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3032
}

function {:inline true} {:fieldmap "Mem_T._ORB_MNG"} {:fieldname "ManagementOrb"} ManagementOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrb__DEVICE_EXTENSION"} {:fieldname "ManagementOrb"} ManagementOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 1904
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncReadRequest"} MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncWriteRequest"} MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__DEVICE_INFORMATION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__DEVICE_INFORMATION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__FDO_DEVICE_EXTENSION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaxControllerPhySpeed__DEVICE_EXTENSION"} {:fieldname "MaxControllerPhySpeed"} MaxControllerPhySpeed__DEVICE_EXTENSION(x: int) : int
{
  x + 1012
}

function {:inline true} {:fieldmap "Mem_T.MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP"} {:fieldname "MaxDmaBufferSize"} MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxOrbListDepth__DEVICE_EXTENSION"} {:fieldname "MaxOrbListDepth"} MaxOrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxPages__PAGE_TABLE_CONTEXT"} {:fieldname "MaxPages"} MaxPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MediumType__MODE_PARAMETER_HEADER"} {:fieldname "MediumType"} MediumType__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MultiplicationFactor__MODE_CACHING_PAGE"} {:fieldname "MultiplicationFactor"} MultiplicationFactor__MODE_CACHING_PAGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextContextToFree__DEVICE_EXTENSION"} {:fieldname "NextContextToFree"} NextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.NextOrbAddress__ORB_NORMAL_CMD"} {:fieldname "NextOrbAddress"} NextOrbAddress__ORB_NORMAL_CMD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeAndLoginId__QUERY_RESPONSE_ELEMENT"} {:fieldname "NodeAndLoginId"} NodeAndLoginId__QUERY_RESPONSE_ELEMENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeId__B1394_ADDRESS"} {:fieldname "NodeId"} NodeId__B1394_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumPDOsStarted__FDO_DEVICE_EXTENSION"} {:fieldname "NumPDOsStarted"} NumPDOsStarted__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.NumberOfBlocks__MODE_PARAMETER_BLOCK"} {:fieldname "NumberOfBlocks"} NumberOfBlocks__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "NumberOfLogicalBlocks"} NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NumberOfPages__PAGE_TABLE_CONTEXT"} {:fieldname "NumberOfPages"} NumberOfPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OctletPart__OCTLET"} {:fieldname "OctletPart"} OctletPart__OCTLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Octlet__IRBIRP"} {:fieldname "Octlet"} Octlet__IRBIRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_High__B1394_ADDRESS"} {:fieldname "Off_High"} Off_High__B1394_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__B1394_ADDRESS"} {:fieldname "Off_Low"} Off_Low__B1394_ADDRESS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB10"} {:fieldname "OperationCode"} OperationCode__CDB10(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB6GENERIC"} {:fieldname "OperationCode"} OperationCode__CDB6GENERIC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_NORMAL_CMD"} {:fieldname "OrbInfo"} OrbInfo__ORB_NORMAL_CMD(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_QUERY_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__ASYNC_REQUEST_CONTEXT"} {:fieldname "OrbListDepth"} OrbListDepth__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 512
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__DEVICE_EXTENSION"} {:fieldname "OrbListDepth"} OrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.OrbListSpinLock__DEVICE_EXTENSION"} {:fieldname "OrbListSpinLock"} OrbListSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OrbList"} OrbList__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbPoolContext__DEVICE_EXTENSION"} {:fieldname "OrbPoolContext"} OrbPoolContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2556
}

function {:inline true} {:fieldmap "Mem_T.OrbReadPayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbReadPayloadMask"} OrbReadPayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1016
}

function {:inline true} {:fieldmap "Mem_T.OrbWritePayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbWritePayloadMask"} OrbWritePayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1020
}

function {:inline true} {:fieldmap "Mem_T._ORB_NORMAL_CMD"} {:fieldname "Orb"} Orb__ARCP_ORB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalRequest__SCSI_REQUEST_BLOCK"} {:fieldname "OriginalRequest"} OriginalRequest__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.OriginalSrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "OriginalSrb"} OriginalSrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 508
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PFBit__MODE_SELECT"} {:fieldname "PFBit"} PFBit__MODE_SELECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Packet__ASYNC_REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.Packet__REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__REQUEST_CONTEXT(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.PageCode__CDB6INQUIRY"} {:fieldname "PageCode"} PageCode__CDB6INQUIRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_CACHING_PAGE"} {:fieldname "PageCode"} PageCode__MODE_CACHING_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_CACHING_PAGE"} {:fieldname "PageLength"} PageLength__MODE_CACHING_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageSavable__MODE_CACHING_PAGE"} {:fieldname "PageSavable"} PageSavable__MODE_CACHING_PAGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PageTableContext__ASYNC_REQUEST_CONTEXT"} {:fieldname "PageTableContext"} PageTableContext__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PageTable__PAGE_TABLE_CONTEXT"} {:fieldname "PageTable"} PageTable__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "Page"} Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.ParameterListLength__MODE_SELECT"} {:fieldname "ParameterListLength"} ParameterListLength__MODE_SELECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "PartialMdl"} PartialMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Password__ORB_LOGIN"} {:fieldname "Password"} Password__ORB_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PathId__SCSI_PASS_THROUGH"} {:fieldname "PathId"} PathId__SCSI_PASS_THROUGH(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PathId__SCSI_REQUEST_BLOCK"} {:fieldname "PathId"} PathId__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Pc__MODE_SENSE"} {:fieldname "Pc"} Pc__MODE_SENSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Pdo__FDO_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Pdo__PORT_PASSTHROUGH_INFO"} {:fieldname "Pdo"} Pdo__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingOrbEvent"} PendingOrbEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 1604
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingOrbList"} PendingOrbList__DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4"} {:fieldname "PhysAddrMappingRoutine"} PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PowerConditions__START_STOP_RBC"} {:fieldname "PowerConditions"} PowerConditions__START_STOP_RBC(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PowerDeferredIrp"} PowerDeferredIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductIdOffset"} ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ProductId__INQUIRYDATA"} {:fieldname "ProductId"} ProductId__INQUIRYDATA(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionLevel__INQUIRYDATA"} {:fieldname "ProductRevisionLevel"} ProductRevisionLevel__INQUIRYDATA(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductRevisionOffset"} ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PropertyId__STORAGE_PROPERTY_QUERY"} {:fieldname "PropertyId"} PropertyId__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__QUADLET"} {:fieldname "QuadPart"} QuadPart__QUADLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginRespContext__DEVICE_EXTENSION"} {:fieldname "QueryLoginRespContext"} QueryLoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2384
}

function {:inline true} {:fieldmap "Mem_T._QUERY_LOGIN_RESPONSE"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginResponse__DEVICE_EXTENSION"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2380
}

function {:inline true} {:fieldmap "Mem_T.QueryResponseAddress__ORB_QUERY_LOGIN"} {:fieldname "QueryResponseAddress"} QueryResponseAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.QueryType__STORAGE_PROPERTY_QUERY"} {:fieldname "QueryType"} QueryType__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "QueueSortKey"} QueueSortKey__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ReadDisableCache__MODE_CACHING_PAGE"} {:fieldname "ReadDisableCache"} ReadDisableCache__MODE_CACHING_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ReadRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "ReadRetensionPriority"} ReadRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "RemovableMedia"} RemovableMedia__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4252
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 2916
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ADDRESS_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ADDRESS_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RequestNumber__SBP2_REQUEST"} {:fieldname "RequestNumber"} RequestNumber__SBP2_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestType__REQUEST_CONTEXT"} {:fieldname "RequestType"} RequestType__REQUEST_CONTEXT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__CDB6INQUIRY"} {:fieldname "Reserved1"} Reserved1__CDB6INQUIRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ReservedMdl__DEVICE_EXTENSION"} {:fieldname "ReservedMdl"} ReservedMdl__DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ADDRESS_CONTEXT"} {:fieldname "Reserved"} Reserved__ADDRESS_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Reserved"} Reserved__DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ORB_QUERY_LOGIN"} {:fieldname "Reserved"} Reserved__ORB_QUERY_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RetrieveTextLeaf_unnamed_tag_68"} {:fieldname "RetrieveTextLeaf"} RetrieveTextLeaf_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SPBit__MODE_SELECT"} {:fieldname "SPBit"} SPBit__MODE_SELECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.START_STOP_RBC__CDB_RBC"} {:fieldname "START_STOP_RBC"} START_STOP_RBC__CDB_RBC(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_PASS_THROUGH"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_PASS_THROUGH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_REQUEST_BLOCK"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBufferLength__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBufferLength"} SenseInfoBufferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBuffer"} SenseInfoBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoLength__SCSI_PASS_THROUGH"} {:fieldname "SenseInfoLength"} SenseInfoLength__SCSI_PASS_THROUGH(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoOffset__SCSI_PASS_THROUGH"} {:fieldname "SenseInfoOffset"} SenseInfoOffset__SCSI_PASS_THROUGH(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SenseKey__SENSE_DATA"} {:fieldname "SenseKey"} SenseKey__SENSE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "SerialNumberOffset"} SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SortKey__KDEVICE_QUEUE_ENTRY"} {:fieldname "SortKey"} SortKey__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbBuffer__PORT_PASSTHROUGH_INFO"} {:fieldname "SrbBuffer"} SrbBuffer__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SrbControl__PORT_PASSTHROUGH_INFO"} {:fieldname "SrbControl"} SrbControl__PORT_PASSTHROUGH_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Srb__ASYNC_REQUEST_CONTEXT"} {:fieldname "Srb"} Srb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_24"} {:fieldname "Srb"} Srb_unnamed_tag_24(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.StartNextPacketCount__DEVICE_EXTENSION"} {:fieldname "StartNextPacketCount"} StartNextPacketCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4248
}

function {:inline true} {:fieldmap "Mem_T.Start__START_STOP_RBC"} {:fieldname "Start"} Start__START_STOP_RBC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_QUERY_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusFifoBase__DEVICE_EXTENSION"} {:fieldname "StatusFifoBase"} StatusFifoBase__DEVICE_EXTENSION(x: int) : int
{
  x + 3872
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "StatusFifoListHead"} StatusFifoListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 3852
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "StatusFifoLock"} StatusFifoLock__DEVICE_EXTENSION(x: int) : int
{
  x + 3868
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES"} {:fieldname "SupportedAsynchronousEvents"} SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_1"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerIrp__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerIrp"} SystemPowerIrp__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TL_Length__TEXTUAL_LEAF"} {:fieldname "TL_Length"} TL_Length__TEXTUAL_LEAF(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Tag__ASYNC_REQUEST_CONTEXT"} {:fieldname "Tag"} Tag__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TaggedQueuing__IO_SCSI_CAPABILITIES"} {:fieldname "TaggedQueuing"} TaggedQueuing__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetId__SCSI_PASS_THROUGH"} {:fieldname "TargetId"} TargetId__SCSI_PASS_THROUGH(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TargetId__SCSI_REQUEST_BLOCK"} {:fieldname "TargetId"} TargetId__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TaskOrbContext__DEVICE_EXTENSION"} {:fieldname "TaskOrbContext"} TaskOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1732
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "TaskOrbStatusBlock"} TaskOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3204
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "TaskOrbStatusContext"} TaskOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3508
}

function {:inline true} {:fieldmap "Mem_T._ORB_TASK_MNG"} {:fieldname "TaskOrb"} TaskOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TaskOrb__DEVICE_EXTENSION"} {:fieldname "TaskOrb"} TaskOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 1728
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_PASS_THROUGH"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_PASS_THROUGH(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_REQUEST_BLOCK"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TransactionType__ADDRESS_CONTEXT"} {:fieldname "TransactionType"} TransactionType__ADDRESS_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Type__DEVICE_EXTENSION"} {:fieldname "Type"} Type__DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_34"} {:fieldname "Type"} Type_unnamed_tag_34(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniSymLinkName"} UniSymLinkName__DEVICE_EXTENSION(x: int) : int
{
  x + 4236
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitCharacteristics__DEVICE_INFORMATION"} {:fieldname "UnitCharacteristics"} UnitCharacteristics__DEVICE_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryLocation"} UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "VendorIdOffset"} VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VendorId__INQUIRYDATA"} {:fieldname "VendorId"} VendorId__INQUIRYDATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "WriteCacheDisable"} WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnable__MODE_CACHING_PAGE"} {:fieldname "WriteCacheEnable"} WriteCacheEnable__MODE_CACHING_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.WriteRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "WriteRetensionPriority"} WriteRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_73"} {:fieldname "asUlong"} asUlong_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__NOTIFICATION_INFO_WXP"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "nLevel"} nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__OCTLET"} {:fieldname "u"} u__OCTLET(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.u__QUADLET"} {:fieldname "u"} u__QUADLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__SBP2_REQUEST"} {:fieldname "u"} u__SBP2_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength_unnamed_tag_69"} {:fieldname "ulLength"} ulLength_unnamed_tag_69(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniGenericName"} uniGenericName__DEVICE_INFORMATION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__DEVICE_INFORMATION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__DEVICE_INFORMATION(x: int) : int
{
  x + 220
}

const {:string ""} unique strConst__li2bpl0: int;

const {:string "%08x%08x"} unique strConst__li2bpl10: int;

const {:string "%ws %ws IEEE 1394 SBP2 Device"} unique strConst__li2bpl13: int;

const {:string "&"} unique strConst__li2bpl17: int;

const {:string "1.0"} unique strConst__li2bpl9: int;

const {:string "CmdSetId"} unique strConst__li2bpl18: int;

const {:string "Dispatch returned with an invalid RemoveLock state"} unique strConst__li2bpl35: int;

const {:string "FireLite Drive  "} unique strConst__li2bpl5: int;

const {:string "FireREX Storage"} unique strConst__li2bpl3: int;

const {:string "GenCdRom"} unique strConst__li2bpl27: int;

const {:string "GenChanger"} unique strConst__li2bpl30: int;

const {:string "GenDisk"} unique strConst__li2bpl23: int;

const {:string "GenOptical"} unique strConst__li2bpl29: int;

const {:string "GenPrinter"} unique strConst__li2bpl25: int;

const {:string "GenSbp2Device"} unique strConst__li2bpl22: int;

const {:string "GenScanner"} unique strConst__li2bpl28: int;

const {:string "GenSequential"} unique strConst__li2bpl24: int;

const {:string "GenWorm"} unique strConst__li2bpl26: int;

const {:string "LUN"} unique strConst__li2bpl19: int;

const {:string "LUN %d"} unique strConst__li2bpl12: int;

const {:string "LegacyFlags"} unique strConst__li2bpl6: int;

const {:string "SBP2\\"} unique strConst__li2bpl15: int;

const {:string "SBP2\\%d&%d&%d"} unique strConst__li2bpl11: int;

const {:string "SBP2\\%ws&%ws&LUN%x"} unique strConst__li2bpl20: int;

const {:string "SBP2\\UNKNOWN VENDOR&UNKNOWN MODEL&LUN%x"} unique strConst__li2bpl21: int;

const {:string "Sbp2"} unique strConst__li2bpl8: int;

const {:string "TI STORAGELYNX!!"} unique strConst__li2bpl2: int;

const {:string "UNKNOWN VENDOR AND MODEL IEEE 1394 SBP2 Device"} unique strConst__li2bpl14: int;

const {:string "UNKNOWN VENDOR&UNKNOWN MODEL"} unique strConst__li2bpl16: int;

const {:string "Vendor"} unique strConst__li2bpl7: int;

const {:string "\\Device\\Sbp2\\%ws&%ws&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl31: int;

const {:string "\\Device\\Sbp2\\UNKNOWN_VENDOR&UNKNOWN_MODEL&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl33: int;

const {:string "\\DosDevices\\Sbp2&LUN%x&%08x%08x&Instance%02d"} unique strConst__li2bpl32: int;

const {:string "callee"} unique strConst__li2bpl1: int;

const {:string "halt"} unique strConst__li2bpl34: int;

const {:string "iPod"} unique strConst__li2bpl4: int;

const {:allocated} li2bplFunctionConstant240: int;

axiom li2bplFunctionConstant240 == 240;

const {:allocated} li2bplFunctionConstant242: int;

axiom li2bplFunctionConstant242 == 242;

const {:allocated} li2bplFunctionConstant249: int;

axiom li2bplFunctionConstant249 == 249;

const {:allocated} li2bplFunctionConstant252: int;

axiom li2bplFunctionConstant252 == 252;

const {:allocated} li2bplFunctionConstant253: int;

axiom li2bplFunctionConstant253 == 253;

const {:allocated} li2bplFunctionConstant254: int;

axiom li2bplFunctionConstant254 == 254;

const {:allocated} li2bplFunctionConstant255: int;

axiom li2bplFunctionConstant255 == 255;

const {:allocated} li2bplFunctionConstant257: int;

axiom li2bplFunctionConstant257 == 257;

const {:allocated} li2bplFunctionConstant264: int;

axiom li2bplFunctionConstant264 == 264;

const {:allocated} li2bplFunctionConstant296: int;

axiom li2bplFunctionConstant296 == 296;

const {:allocated} li2bplFunctionConstant297: int;

axiom li2bplFunctionConstant297 == 297;

const {:allocated} li2bplFunctionConstant299: int;

axiom li2bplFunctionConstant299 == 299;

const {:allocated} li2bplFunctionConstant337: int;

axiom li2bplFunctionConstant337 == 337;

const {:allocated} li2bplFunctionConstant430: int;

axiom li2bplFunctionConstant430 == 430;

const {:allocated} li2bplFunctionConstant799: int;

axiom li2bplFunctionConstant799 == 799;

const {:allocated} li2bplFunctionConstant801: int;

axiom li2bplFunctionConstant801 == 801;

const {:allocated} li2bplFunctionConstant804: int;

axiom li2bplFunctionConstant804 == 804;

implementation {:origName "SdvExit"} {:osmodel} SdvExit#0()
{
  var vslice_dummy_var_251: int;

  anon0:
    call {:si_unique_call 1309} vslice_dummy_var_251 := __HAVOC_malloc(4);
    assume false;
    assume false;
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#0();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SdvExit"} {:osmodel} SdvExit#1()
{
  var vslice_dummy_var_252: int;

  anon0:
    call {:si_unique_call 1310} vslice_dummy_var_252 := __HAVOC_malloc(4);
    assume false;
    call {:si_unique_call 1311} SdvExit#0();
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#1();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_19: int)
{
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_20: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} Tmp_22: int;
  var {:scalar} sdv_16: int;
  var {:pointer} Tmp_23: int;
  var {:pointer} Tmp_24: int;
  var {:pointer} Tmp_25: int;
  var {:pointer} Tmp_27: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} sdv_20: int;
  var {:scalar} sdv_22: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_31: int;
  var {:scalar} sdv_26: int;
  var {:scalar} sdv_27: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_1: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Tmp_34: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 1312} Tmp_20 := __HAVOC_malloc(352);
    call {:si_unique_call 1313} vslice_dummy_var_259 := __HAVOC_malloc(352);
    call {:si_unique_call 1314} Tmp_33 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_25;
    assume {:nonnull} Tmp_25 != 0;
    assume Tmp_25 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    havoc deviceExtension_1;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_34;
    assume {:nonnull} Tmp_34 != 0;
    assume Tmp_34 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1315} status_1 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(deviceExtension_1));
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1316} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 1317} vslice_dummy_var_254 := KeCancelTimer(0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 1318} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1319} sdv_27 := corral_nondet();
    pIrp := sdv_27;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} pIrp != 0;
    assume false;
    return;

  anon39_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume false;
    return;

  anon38_Then:
    call {:si_unique_call 1320} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume false;
    return;

  anon29_Then:
    assume {:partition} 0 > status_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1321} vslice_dummy_var_260 := KeCancelTimer(0);
    call {:si_unique_call 1322} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1323} vslice_dummy_var_256 := Sbp2UpdateNodeInformation#0(deviceExtension_1);
    call {:si_unique_call 1324} vslice_dummy_var_257 := Sbp2ManagementTransaction#0(deviceExtension_1, 0);
    call {:si_unique_call 1325} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1326} vslice_dummy_var_261 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L97;

  L97:
    call {:si_unique_call 1327} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L76;

  L76:
    Tmp_19 := 0;
    goto L1;

  L1:
    return;

  anon30_Then:
    goto L97;

  anon28_Then:
    call {:si_unique_call 1328} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L76;

  anon31_Then:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1329} vslice_dummy_var_253 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L76;

  anon32_Then:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_27;
    assume {:nonnull} Tmp_27 != 0;
    assume Tmp_27 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_31;
    assume {:nonnull} Tmp_31 != 0;
    assume Tmp_31 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_24;
    assume {:nonnull} Tmp_24 != 0;
    assume Tmp_24 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_21;
    assume {:nonnull} Tmp_21 != 0;
    assume Tmp_21 > 0;
    havoc Tmp_33;
    assume {:nonnull} Tmp_33 != 0;
    assume Tmp_33 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_23;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    assume {:nonnull} Tmp_23 != 0;
    assume Tmp_23 > 0;
    goto L76;

  anon37_Then:
    goto L76;

  anon36_Then:
    goto L76;

  anon27_Then:
    assume {:partition} 0 > status_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1330} vslice_dummy_var_258 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L76;

  anon35_Then:
    call {:si_unique_call 1331} Sbp2LoginCompletion#0(NotificationInfo_1, status_1);
    goto L76;

  anon34_Then:
    Tmp_19 := 6;
    goto L1;

  anon33_Then:
    Tmp_19 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_19: int);
  modifies alloc, sdv_compFset, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_19 == 0 || Tmp_19 == 6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_19: int)
{
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_20: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} Tmp_22: int;
  var {:scalar} sdv_16: int;
  var {:pointer} Tmp_23: int;
  var {:pointer} Tmp_24: int;
  var {:pointer} Tmp_25: int;
  var {:pointer} Tmp_27: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} sdv_20: int;
  var {:scalar} sdv_22: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_31: int;
  var {:scalar} sdv_26: int;
  var {:scalar} sdv_27: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_1: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Tmp_34: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_3174: int;
  var vslice_dummy_var_3175: int;
  var vslice_dummy_var_3176: int;
  var vslice_dummy_var_3177: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 1332} Tmp_20 := __HAVOC_malloc(352);
    call {:si_unique_call 1333} vslice_dummy_var_268 := __HAVOC_malloc(352);
    call {:si_unique_call 1334} Tmp_33 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_25;
    assume {:nonnull} Tmp_25 != 0;
    assume Tmp_25 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    havoc deviceExtension_1;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_34;
    assume {:nonnull} Tmp_34 != 0;
    assume Tmp_34 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1335} status_1 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(deviceExtension_1));
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1336} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 1337} vslice_dummy_var_263 := KeCancelTimer(0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 1338} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1339} sdv_27 := corral_nondet();
    pIrp := sdv_27;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} pIrp != 0;
    call {:si_unique_call 1340} Sbp2StartIo#0(deviceObject_1, pIrp);
    goto L72;

  L72:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1341} vslice_dummy_var_264 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L76;

  L76:
    Tmp_19 := 0;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc vslice_dummy_var_3174;
    havoc vslice_dummy_var_3175;
    call {:si_unique_call 1342} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3174, vslice_dummy_var_3175);
    goto L72;

  anon38_Then:
    call {:si_unique_call 1343} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc vslice_dummy_var_3176;
    havoc vslice_dummy_var_3177;
    call {:si_unique_call 1344} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3176, vslice_dummy_var_3177);
    goto L72;

  anon29_Then:
    assume {:partition} 0 > status_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1345} vslice_dummy_var_269 := KeCancelTimer(0);
    call {:si_unique_call 1346} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1347} vslice_dummy_var_265 := Sbp2UpdateNodeInformation#1(deviceExtension_1);
    call {:si_unique_call 1348} vslice_dummy_var_266 := Sbp2ManagementTransaction#1(deviceExtension_1, 0);
    call {:si_unique_call 1349} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1350} vslice_dummy_var_270 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L97;

  L97:
    call {:si_unique_call 1351} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L76;

  anon30_Then:
    goto L97;

  anon28_Then:
    call {:si_unique_call 1352} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L76;

  anon31_Then:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1353} vslice_dummy_var_262 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L76;

  anon32_Then:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_1 >= 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_27;
    assume {:nonnull} Tmp_27 != 0;
    assume Tmp_27 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_31;
    assume {:nonnull} Tmp_31 != 0;
    assume Tmp_31 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_24;
    assume {:nonnull} Tmp_24 != 0;
    assume Tmp_24 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_21;
    assume {:nonnull} Tmp_21 != 0;
    assume Tmp_21 > 0;
    havoc Tmp_33;
    assume {:nonnull} Tmp_33 != 0;
    assume Tmp_33 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_23;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    assume {:nonnull} Tmp_23 != 0;
    assume Tmp_23 > 0;
    goto L76;

  anon37_Then:
    goto L76;

  anon36_Then:
    goto L76;

  anon27_Then:
    assume {:partition} 0 > status_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1354} vslice_dummy_var_267 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_1), 0, 0);
    goto L76;

  anon35_Then:
    call {:si_unique_call 1355} Sbp2LoginCompletion#1(NotificationInfo_1, status_1);
    goto L76;

  anon34_Then:
    Tmp_19 := 6;
    goto L1;

  anon33_Then:
    Tmp_19 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_19: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_19 == 0 || Tmp_19 == 6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_NotificationInfo_2: int, actual_Status: int)
{
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_35: int;
  var {:pointer} Tmp_37: int;
  var {:scalar} sdv_30: int;
  var {:pointer} Tmp_38: int;
  var {:pointer} Tmp_39: int;
  var {:scalar} sdv_32: int;
  var {:scalar} sdv_34: int;
  var {:pointer} Tmp_41: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:pointer} Tmp_42: int;
  var {:pointer} irp: int;
  var {:pointer} Tmp_45: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} irp_1: int;
  var {:pointer} NotificationInfo_2: int;
  var {:scalar} Status: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;

  anon0:
    call {:si_unique_call 1356} vslice_dummy_var_271 := __HAVOC_malloc(4);
    NotificationInfo_2 := actual_NotificationInfo_2;
    Status := actual_Status;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_35;
    assume {:nonnull} Tmp_35 != 0;
    assume Tmp_35 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc deviceExtension_2;
    call {:si_unique_call 1357} vslice_dummy_var_274 := KeCancelTimer(0);
    call {:si_unique_call 1358} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Status == -1073741790;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1359} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  L1:
    return;

  anon29_Then:
    goto L20;

  L20:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Status != 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1360} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon31_Then:
    goto L27;

  L27:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Status != 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_45;
    assume {:nonnull} Tmp_45 != 0;
    assume Tmp_45 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1361} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1362} sdv_34 := corral_nondet();
    irp := sdv_34;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} irp != 0;
    assume false;
    return;

  anon33_Then:
    assume {:partition} irp == 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume false;
    return;

  anon32_Then:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1363} vslice_dummy_var_272 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_2), 0, 0);
    call {:si_unique_call 1364} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon30_Then:
    assume {:partition} Status == 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_37;
    assume {:nonnull} Tmp_37 != 0;
    assume Tmp_37 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_41;
    assume {:nonnull} Tmp_41 != 0;
    assume Tmp_41 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_42;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_42 != 0;
    assume Tmp_42 > 0;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_39;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    assume {:nonnull} Tmp_39 != 0;
    assume Tmp_39 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1365} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1366} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1367} sdv_32 := corral_nondet();
    irp_1 := sdv_32;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} irp_1 != 0;
    call {:si_unique_call 1368} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume false;
    return;

  anon36_Then:
    assume {:partition} irp_1 == 0;
    call {:si_unique_call 1369} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume false;
    return;

  anon35_Then:
    call {:si_unique_call 1370} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume false;
    return;

  anon34_Then:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1371} vslice_dummy_var_273 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_2), 0, 0);
    call {:si_unique_call 1372} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L115;

  L115:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume false;
    return;

  anon28_Then:
    assume {:partition} Status == 0;
    goto L27;

  anon27_Then:
    assume {:partition} Status != -1073741790;
    goto L20;

  anon26_Then:
    call {:si_unique_call 1373} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon25_Then:
    goto L1;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_NotificationInfo_2: int, actual_Status: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_NotificationInfo_2: int, actual_Status: int)
{
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_35: int;
  var {:pointer} Tmp_37: int;
  var {:scalar} sdv_30: int;
  var {:pointer} Tmp_38: int;
  var {:pointer} Tmp_39: int;
  var {:scalar} sdv_32: int;
  var {:scalar} sdv_34: int;
  var {:pointer} Tmp_41: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:pointer} Tmp_42: int;
  var {:pointer} irp: int;
  var {:pointer} Tmp_45: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} irp_1: int;
  var {:pointer} NotificationInfo_2: int;
  var {:scalar} Status: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_3178: int;
  var vslice_dummy_var_3179: int;
  var vslice_dummy_var_3180: int;

  anon0:
    call {:si_unique_call 1374} vslice_dummy_var_275 := __HAVOC_malloc(4);
    NotificationInfo_2 := actual_NotificationInfo_2;
    Status := actual_Status;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_35;
    assume {:nonnull} Tmp_35 != 0;
    assume Tmp_35 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc deviceExtension_2;
    call {:si_unique_call 1375} vslice_dummy_var_278 := KeCancelTimer(0);
    call {:si_unique_call 1376} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Status == -1073741790;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1377} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  L1:
    return;

  anon29_Then:
    goto L20;

  L20:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Status != 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1378} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon31_Then:
    goto L27;

  L27:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Status != 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_45;
    assume {:nonnull} Tmp_45 != 0;
    assume Tmp_45 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1379} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1380} sdv_34 := corral_nondet();
    irp := sdv_34;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} irp != 0;
    call {:si_unique_call 1381} Sbp2StartIo#0(deviceObject_2, irp);
    goto L60;

  L60:
    call {:si_unique_call 1382} IoInvalidateDeviceState(0);
    goto L1;

  anon33_Then:
    assume {:partition} irp == 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc vslice_dummy_var_3178;
    call {:si_unique_call 1383} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_3178);
    goto L60;

  anon32_Then:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1384} vslice_dummy_var_276 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_2), 0, 0);
    call {:si_unique_call 1385} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon30_Then:
    assume {:partition} Status == 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_37;
    assume {:nonnull} Tmp_37 != 0;
    assume Tmp_37 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_41;
    assume {:nonnull} Tmp_41 != 0;
    assume Tmp_41 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_42;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_42 != 0;
    assume Tmp_42 > 0;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_39;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    assume {:nonnull} Tmp_39 != 0;
    assume Tmp_39 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1386} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1387} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1388} sdv_32 := corral_nondet();
    irp_1 := sdv_32;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} irp_1 != 0;
    call {:si_unique_call 1389} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1390} Sbp2StartIo#0(deviceObject_2, irp_1);
    goto L115;

  L115:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1391} vslice_dummy_var_279 := Sbp2AccessRegister#0(deviceExtension_2, Reserved__DEVICE_EXTENSION(deviceExtension_2), 1088);
    goto L1;

  anon36_Then:
    assume {:partition} irp_1 == 0;
    call {:si_unique_call 1392} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc vslice_dummy_var_3179;
    call {:si_unique_call 1393} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_3179);
    goto L115;

  anon35_Then:
    call {:si_unique_call 1394} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    havoc vslice_dummy_var_3180;
    call {:si_unique_call 1395} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_3180);
    goto L115;

  anon34_Then:
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    call {:si_unique_call 1396} vslice_dummy_var_277 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(deviceExtension_2), 0, 0);
    call {:si_unique_call 1397} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L115;

  anon28_Then:
    assume {:partition} Status == 0;
    goto L27;

  anon27_Then:
    assume {:partition} Status != -1073741790;
    goto L20;

  anon26_Then:
    call {:si_unique_call 1398} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon25_Then:
    goto L1;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_NotificationInfo_2: int, actual_Status: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, sdv_compFset, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_12: int, actual_Key: int)
{
  var {:scalar} sdv_304: int;
  var {:pointer} Tmp_712: int;
  var {:scalar} sdv_306: int;
  var {:pointer} sdv_307: int;
  var {:pointer} irp_3: int;
  var {:pointer} packet_6: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} DeviceObject_12: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_280: int;

  anon0:
    call {:si_unique_call 1399} vslice_dummy_var_280 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc deviceExtension_4;
    call {:si_unique_call 1400} Tmp_712 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1401} sdv_304 := sdv_InterlockedIncrement(Tmp_712);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_304 == 1;
    goto L11;

  L11:
    call {:si_unique_call 1402} Tmp_712, sdv_306, sdv_307, irp_3, packet_6 := Sbp2StartNextPacketByKey#0_loop_L11(Tmp_712, sdv_306, sdv_307, irp_3, packet_6, deviceExtension_4, DeviceObject_12, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    call {:si_unique_call 1407} packet_6 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_12), Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} packet_6 != 0;
    call {:si_unique_call 1403} sdv_307 := sdv_containing_record(packet_6, 64);
    irp_3 := sdv_307;
    call {:si_unique_call 1404} Sbp2StartIo#0(DeviceObject_12, irp_3);
    goto L17;

  L17:
    call {:si_unique_call 1405} Tmp_712 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1406} sdv_306 := sdv_InterlockedDecrement(Tmp_712);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_306 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_306 == 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} packet_6 == 0;
    goto L17;

  anon7_Then:
    assume {:partition} sdv_304 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_12: int, actual_Key: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_12: int, actual_Key: int)
{
  var {:scalar} sdv_304: int;
  var {:pointer} Tmp_712: int;
  var {:scalar} sdv_306: int;
  var {:pointer} sdv_307: int;
  var {:pointer} irp_3: int;
  var {:pointer} packet_6: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} DeviceObject_12: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_281: int;

  anon0:
    call {:si_unique_call 1408} vslice_dummy_var_281 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc deviceExtension_4;
    call {:si_unique_call 1409} Tmp_712 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1410} sdv_304 := sdv_InterlockedIncrement(Tmp_712);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_304 == 1;
    goto L11;

  L11:
    call {:si_unique_call 1411} Tmp_712, sdv_306, sdv_307, irp_3, packet_6 := Sbp2StartNextPacketByKey#1_loop_L11(Tmp_712, sdv_306, sdv_307, irp_3, packet_6, deviceExtension_4, DeviceObject_12, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    call {:si_unique_call 1416} packet_6 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_12), Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} packet_6 != 0;
    call {:si_unique_call 1412} sdv_307 := sdv_containing_record(packet_6, 64);
    irp_3 := sdv_307;
    call {:si_unique_call 1413} Sbp2StartIo#1(DeviceObject_12, irp_3);
    goto L17;

  L17:
    call {:si_unique_call 1414} Tmp_712 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 1415} sdv_306 := sdv_InterlockedDecrement(Tmp_712);
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_306 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_306 == 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} packet_6 == 0;
    goto L17;

  anon7_Then:
    assume {:partition} sdv_304 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_12: int, actual_Key: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_19: int, actual_Irp_14: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} deferredIrp: int;
  var {:scalar} sdv_374: int;
  var {:pointer} context_2: int;
  var {:pointer} Tmp_902: int;
  var {:scalar} sdv_377: int;
  var {:scalar} sdv_378: int;
  var {:scalar} sdv_379: int;
  var {:scalar} sdv_380: int;
  var {:pointer} sdv_382: int;
  var {:pointer} qIrp: int;
  var {:scalar} queued: int;
  var {:scalar} sdv_384: int;
  var {:pointer} srb_2: int;
  var {:scalar} status_28: int;
  var {:pointer} entry_1: int;
  var {:pointer} deviceExtension_8: int;
  var {:scalar} sdv_385: int;
  var {:scalar} state_1: int;
  var {:pointer} queue_2: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_3181: int;
  var vslice_dummy_var_3182: int;
  var vslice_dummy_var_3183: int;
  var vslice_dummy_var_3184: int;
  var vslice_dummy_var_3185: int;
  var vslice_dummy_var_3186: int;

  anon0:
    call {:si_unique_call 1417} vslice_dummy_var_282 := __HAVOC_malloc(4);
    call {:si_unique_call 1418} context_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1419} state_1 := __HAVOC_malloc(8);
    DeviceObject_19 := actual_DeviceObject_19;
    Irp_14 := actual_Irp_14;
    call {:si_unique_call 1420} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc deviceExtension_8;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc srb_2;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    call {:si_unique_call 1421} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1422} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_28 := -1073741632;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 1423} sdv_IoCompleteRequest(0, 0);
    assume false;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1424} vslice_dummy_var_283 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    return;

  anon49_Then:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1425} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L47;

  L47:
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L49;

  L49:
    call {:si_unique_call 1426} Create1394TransactionForSrb#0(deviceExtension_8, srb_2, context_2);
    goto L1;

  L1:
    return;

  anon52_Then:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_902;
    assume {:nonnull} Tmp_902 != 0;
    assume Tmp_902 > 0;
    goto L49;

  anon53_Then:
    goto L49;

  anon51_Then:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3181;
    call {:si_unique_call 1427} sdv_379 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3181);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_379 == 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1428} vslice_dummy_var_286 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    call {:si_unique_call 1429} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon54_Then:
    assume {:partition} sdv_379 != 0;
    goto L1;

  anon50_Then:
    call {:si_unique_call 1430} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3182;
    call {:si_unique_call 1431} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3182);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1432} sdv_378 := corral_nondet();
    goto L75;

  L75:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state_1)] := 1;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc vslice_dummy_var_3183;
    call {:si_unique_call 1433} status_28 := PoRequestPowerIrp#0(vslice_dummy_var_3183, 2, state_1, 0, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_28 < 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1434} sdv_384 := corral_nondet();
    deferredIrp := sdv_384;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} deferredIrp != Irp_14;
    Irp_14 := 0;
    goto L108;

  L108:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Irp_14 != 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 1435} sdv_IoCompleteRequest(0, 0);
    assume false;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1436} vslice_dummy_var_285 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    return;

  anon63_Then:
    assume {:partition} Irp_14 == 0;
    goto L1;

  anon72_Then:
    assume {:partition} deferredIrp == Irp_14;
    goto L108;

  anon60_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_19);
    call {:si_unique_call 1437} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_1;
    goto L93;

  L93:
    call {:si_unique_call 1438} sdv_382, qIrp, entry_1 := Sbp2StartIo#0_loop_L93(sdv_382, qIrp, entry_1, Irp_14);
    goto L93_last;

  L93_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1439} sdv_382 := sdv_containing_record(entry_1, 64);
    qIrp := sdv_382;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} qIrp == Irp_14;
    call {:si_unique_call 1440} vslice_dummy_var_284 := sdv_RemoveEntryList(0);
    goto L94;

  L94:
    call {:si_unique_call 1441} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} qIrp != Irp_14;
    Irp_14 := 0;
    goto L108;

  anon62_Then:
    assume {:partition} qIrp == Irp_14;
    goto L108;

  anon71_Then:
    assume {:partition} qIrp != Irp_14;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc entry_1;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon61_Then:
    goto L94;

  anon59_Then:
    assume {:partition} 0 <= status_28;
    goto L1;

  anon58_Then:
    assume {:partition} queued != 0;
    goto L75;

  anon57_Then:
    goto L65;

  L65:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1442} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3184;
    call {:si_unique_call 1443} sdv_377 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3184);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_377 != 0;
    goto L148;

  L148:
    call {:si_unique_call 1444} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon66_Then:
    assume {:partition} sdv_377 == 0;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3185;
    call {:si_unique_call 1445} sdv_385 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3185);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_385 == 0;
    call {:si_unique_call 1446} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1447} vslice_dummy_var_287 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    call {:si_unique_call 1448} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon67_Then:
    assume {:partition} sdv_385 != 0;
    goto L148;

  anon65_Then:
    call {:si_unique_call 1449} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L133;

  L133:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L167;

  L167:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3186;
    call {:si_unique_call 1450} sdv_380 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3186);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} sdv_380 == 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1451} sdv_374 := corral_nondet();
    goto L1;

  anon70_Then:
    assume {:partition} sdv_380 != 0;
    goto L1;

  anon69_Then:
    goto L165;

  L165:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L167;

  anon68_Then:
    goto L47;

  anon64_Then:
    goto L165;

  anon56_Then:
    goto L133;

  anon55_Then:
    goto L65;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_19: int, actual_Irp_14: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_19: int, actual_Irp_14: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} deferredIrp: int;
  var {:scalar} sdv_374: int;
  var {:pointer} context_2: int;
  var {:pointer} Tmp_902: int;
  var {:scalar} sdv_377: int;
  var {:scalar} sdv_378: int;
  var {:scalar} sdv_379: int;
  var {:scalar} sdv_380: int;
  var {:pointer} sdv_382: int;
  var {:pointer} qIrp: int;
  var {:scalar} queued: int;
  var {:scalar} sdv_384: int;
  var {:pointer} srb_2: int;
  var {:scalar} status_28: int;
  var {:pointer} entry_1: int;
  var {:pointer} deviceExtension_8: int;
  var {:scalar} sdv_385: int;
  var {:scalar} state_1: int;
  var {:pointer} queue_2: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_3187: int;
  var vslice_dummy_var_3188: int;
  var vslice_dummy_var_3189: int;
  var vslice_dummy_var_3190: int;
  var vslice_dummy_var_3191: int;
  var vslice_dummy_var_3192: int;

  anon0:
    call {:si_unique_call 1452} vslice_dummy_var_288 := __HAVOC_malloc(4);
    call {:si_unique_call 1453} context_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1454} state_1 := __HAVOC_malloc(8);
    DeviceObject_19 := actual_DeviceObject_19;
    Irp_14 := actual_Irp_14;
    call {:si_unique_call 1455} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc deviceExtension_8;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc srb_2;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    call {:si_unique_call 1456} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1457} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_28 := -1073741632;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 1458} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1459} Sbp2StartNextPacketByKey#0(DeviceObject_19, 0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1460} vslice_dummy_var_289 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    goto L1;

  L1:
    return;

  anon49_Then:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1461} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L47;

  L47:
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L49;

  L49:
    call {:si_unique_call 1462} Create1394TransactionForSrb#1(deviceExtension_8, srb_2, context_2);
    goto L1;

  anon52_Then:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_902;
    assume {:nonnull} Tmp_902 != 0;
    assume Tmp_902 > 0;
    goto L49;

  anon53_Then:
    goto L49;

  anon51_Then:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3187;
    call {:si_unique_call 1463} sdv_379 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3187);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_379 == 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1464} vslice_dummy_var_292 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    call {:si_unique_call 1465} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon54_Then:
    assume {:partition} sdv_379 != 0;
    goto L1;

  anon50_Then:
    call {:si_unique_call 1466} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3188;
    call {:si_unique_call 1467} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3188);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1468} sdv_378 := corral_nondet();
    goto L75;

  L75:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state_1)] := 1;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc vslice_dummy_var_3189;
    call {:si_unique_call 1469} status_28 := PoRequestPowerIrp#1(vslice_dummy_var_3189, 2, state_1, 0, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_28 < 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1470} sdv_384 := corral_nondet();
    deferredIrp := sdv_384;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} deferredIrp != Irp_14;
    Irp_14 := 0;
    goto L108;

  L108:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Irp_14 != 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 1471} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1472} Sbp2StartNextPacketByKey#0(DeviceObject_19, 0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1473} vslice_dummy_var_291 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    goto L1;

  anon63_Then:
    assume {:partition} Irp_14 == 0;
    goto L1;

  anon72_Then:
    assume {:partition} deferredIrp == Irp_14;
    goto L108;

  anon60_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_19);
    call {:si_unique_call 1474} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_1;
    goto L93;

  L93:
    call {:si_unique_call 1475} sdv_382, qIrp, entry_1 := Sbp2StartIo#1_loop_L93(sdv_382, qIrp, entry_1, Irp_14);
    goto L93_last;

  L93_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1476} sdv_382 := sdv_containing_record(entry_1, 64);
    qIrp := sdv_382;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} qIrp == Irp_14;
    call {:si_unique_call 1477} vslice_dummy_var_290 := sdv_RemoveEntryList(0);
    goto L94;

  L94:
    call {:si_unique_call 1478} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} qIrp != Irp_14;
    Irp_14 := 0;
    goto L108;

  anon62_Then:
    assume {:partition} qIrp == Irp_14;
    goto L108;

  anon71_Then:
    assume {:partition} qIrp != Irp_14;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc entry_1;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon61_Then:
    goto L94;

  anon59_Then:
    assume {:partition} 0 <= status_28;
    goto L1;

  anon58_Then:
    assume {:partition} queued != 0;
    goto L75;

  anon57_Then:
    goto L65;

  L65:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1479} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3190;
    call {:si_unique_call 1480} sdv_377 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3190);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_377 != 0;
    goto L148;

  L148:
    call {:si_unique_call 1481} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon66_Then:
    assume {:partition} sdv_377 == 0;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3191;
    call {:si_unique_call 1482} sdv_385 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3191);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_385 == 0;
    call {:si_unique_call 1483} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1484} vslice_dummy_var_293 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_8), 0);
    call {:si_unique_call 1485} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon67_Then:
    assume {:partition} sdv_385 != 0;
    goto L148;

  anon65_Then:
    call {:si_unique_call 1486} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L133;

  L133:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L167;

  L167:
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} srb_2 != 0;
    assume srb_2 > 0;
    havoc vslice_dummy_var_3192;
    call {:si_unique_call 1487} sdv_380 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_19), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14))), vslice_dummy_var_3192);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} sdv_380 == 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    call {:si_unique_call 1488} sdv_374 := corral_nondet();
    goto L1;

  anon70_Then:
    assume {:partition} sdv_380 != 0;
    goto L1;

  anon69_Then:
    goto L165;

  L165:
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L167;

  anon68_Then:
    goto L47;

  anon64_Then:
    goto L165;

  anon56_Then:
    goto L133;

  anon55_Then:
    goto L65;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_19: int, actual_Irp_14: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_DeviceExtension_16: int, actual_Srb_3: int, actual_RequestContext: int)
{
  var {:pointer} sdv_365: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} Tmp_891: int;
  var {:pointer} callbackContext: int;
  var {:pointer} Tmp_892: int;
  var {:pointer} sdv_369: int;
  var {:scalar} sdv_370: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_895: int;
  var {:scalar} status_27: int;
  var {:pointer} Tmp_896: int;
  var {:pointer} DeviceExtension_16: int;
  var {:pointer} Srb_3: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_3193: int;
  var vslice_dummy_var_3194: int;
  var vslice_dummy_var_3195: int;

  anon0:
    call {:si_unique_call 1489} vslice_dummy_var_294 := __HAVOC_malloc(4);
    DeviceExtension_16 := actual_DeviceExtension_16;
    Srb_3 := actual_Srb_3;
    RequestContext := actual_RequestContext;
    status_27 := 0;
    call {:si_unique_call 1490} sdv_365 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_365;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 1491} sdv_369 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_369;
    call {:si_unique_call 1492} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1493} Tmp_890 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    call {:si_unique_call 1494} sdv_370 := sdv_InterlockedIncrement(Tmp_890);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1495} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1496} status_27 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_27 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1497} vslice_dummy_var_297 := FreeAsyncRequestContext(DeviceExtension_16, callbackContext);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_27 >= 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_892;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    goto L50;

  L50:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_895;
    assume {:nonnull} Tmp_895 != 0;
    assume Tmp_895 > 0;
    call {:si_unique_call 1498} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume false;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1499} vslice_dummy_var_295 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_16), 0);
    return;

  anon26_Then:
    assume {:partition} 0 > status_27;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_896;
    assume {:nonnull} Tmp_896 != 0;
    assume Tmp_896 > 0;
    goto L50;

  anon25_Then:
    assume {:partition} status_27 == 259;
    status_27 := 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_891;
    assume {:nonnull} Tmp_891 != 0;
    assume Tmp_891 > 0;
    havoc requestMdl;
    call {:si_unique_call 1500} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_3193;
    call {:si_unique_call 1501} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_3193, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc vslice_dummy_var_3194;
    call {:si_unique_call 1502} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_3194);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto L85;

  L85:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1503} status_27 := Sbp2BusMapTransfer#0(DeviceExtension_16, callbackContext);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_27 >= 0;
    goto L92;

  L92:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_27 != 259;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_27 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1504} vslice_dummy_var_298 := FreeAsyncRequestContext(DeviceExtension_16, callbackContext);
    goto L99;

  L99:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_893;
    assume {:nonnull} Tmp_893 != 0;
    assume Tmp_893 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_894;
    assume {:nonnull} Tmp_894 != 0;
    assume Tmp_894 > 0;
    call {:si_unique_call 1505} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume false;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1506} vslice_dummy_var_296 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_16), 0);
    return;

  anon34_Then:
    assume {:partition} callbackContext == 0;
    goto L99;

  anon33_Then:
    assume {:partition} status_27 == 0;
    call {:si_unique_call 1507} Sbp2InsertTailList#0(DeviceExtension_16, callbackContext);
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:partition} status_27 == 259;
    goto L1;

  anon30_Then:
    assume {:partition} 0 > status_27;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1508} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L92;

  anon31_Then:
    goto L92;

  anon29_Then:
    status_27 := -1073741670;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto L92;

  anon28_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L85;

  anon27_Then:
    goto L64;

  L64:
    call {:si_unique_call 1509} Sbp2InitializeOrb(DeviceExtension_16, callbackContext);
    goto L92;

  anon36_Then:
    goto L64;

  anon35_Then:
    assume {:partition} callbackContext == 0;
    status_27 := -1073741670;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_3195;
    call {:si_unique_call 1510} Sbp2CreateRequestErrorLog(vslice_dummy_var_3195, 0, status_27);
    goto L92;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_DeviceExtension_16: int, actual_Srb_3: int, actual_RequestContext: int);
  modifies alloc, sdv_compFset, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} LockDepth == old(LockDepth) + 1;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_DeviceExtension_16: int, actual_Srb_3: int, actual_RequestContext: int)
{
  var {:pointer} sdv_365: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} Tmp_891: int;
  var {:pointer} callbackContext: int;
  var {:pointer} Tmp_892: int;
  var {:pointer} sdv_369: int;
  var {:scalar} sdv_370: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_895: int;
  var {:scalar} status_27: int;
  var {:pointer} Tmp_896: int;
  var {:pointer} DeviceExtension_16: int;
  var {:pointer} Srb_3: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_3196: int;
  var vslice_dummy_var_3197: int;
  var vslice_dummy_var_3198: int;
  var vslice_dummy_var_3199: int;
  var vslice_dummy_var_3200: int;
  var vslice_dummy_var_3201: int;

  anon0:
    call {:si_unique_call 1511} vslice_dummy_var_299 := __HAVOC_malloc(4);
    DeviceExtension_16 := actual_DeviceExtension_16;
    Srb_3 := actual_Srb_3;
    RequestContext := actual_RequestContext;
    status_27 := 0;
    call {:si_unique_call 1512} sdv_365 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_365;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 1513} sdv_369 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_369;
    call {:si_unique_call 1514} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1515} Tmp_890 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    call {:si_unique_call 1516} sdv_370 := sdv_InterlockedIncrement(Tmp_890);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1517} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1518} status_27 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_27 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1519} vslice_dummy_var_302 := FreeAsyncRequestContext(DeviceExtension_16, callbackContext);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_27 >= 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_892;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    goto L50;

  L50:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_895;
    assume {:nonnull} Tmp_895 != 0;
    assume Tmp_895 > 0;
    call {:si_unique_call 1520} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_3196;
    havoc vslice_dummy_var_3197;
    call {:si_unique_call 1521} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3196, vslice_dummy_var_3197);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1522} vslice_dummy_var_300 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_16), 0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} 0 > status_27;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_896;
    assume {:nonnull} Tmp_896 != 0;
    assume Tmp_896 > 0;
    goto L50;

  anon25_Then:
    assume {:partition} status_27 == 259;
    status_27 := 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_891;
    assume {:nonnull} Tmp_891 != 0;
    assume Tmp_891 > 0;
    havoc requestMdl;
    call {:si_unique_call 1523} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_3198;
    call {:si_unique_call 1524} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_3198, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc vslice_dummy_var_3199;
    call {:si_unique_call 1525} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_3199);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto L85;

  L85:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1526} status_27 := Sbp2BusMapTransfer#1(DeviceExtension_16, callbackContext);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_27 >= 0;
    goto L92;

  L92:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_27 != 259;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_27 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 1527} vslice_dummy_var_303 := FreeAsyncRequestContext(DeviceExtension_16, callbackContext);
    goto L99;

  L99:
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_893;
    assume {:nonnull} Tmp_893 != 0;
    assume Tmp_893 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    havoc Tmp_894;
    assume {:nonnull} Tmp_894 != 0;
    assume Tmp_894 > 0;
    call {:si_unique_call 1528} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_3200;
    call {:si_unique_call 1529} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3200, 0);
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    call {:si_unique_call 1530} vslice_dummy_var_301 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_16), 0);
    goto L1;

  anon34_Then:
    assume {:partition} callbackContext == 0;
    goto L99;

  anon33_Then:
    assume {:partition} status_27 == 0;
    call {:si_unique_call 1531} Sbp2InsertTailList#1(DeviceExtension_16, callbackContext);
    goto L1;

  anon32_Then:
    assume {:partition} status_27 == 259;
    goto L1;

  anon30_Then:
    assume {:partition} 0 > status_27;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1532} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L92;

  anon31_Then:
    goto L92;

  anon29_Then:
    status_27 := -1073741670;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    goto L92;

  anon28_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L85;

  anon27_Then:
    goto L64;

  L64:
    call {:si_unique_call 1533} Sbp2InitializeOrb(DeviceExtension_16, callbackContext);
    goto L92;

  anon36_Then:
    goto L64;

  anon35_Then:
    assume {:partition} callbackContext == 0;
    status_27 := -1073741670;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} Srb_3 != 0;
    assume Srb_3 > 0;
    assume {:nonnull} DeviceExtension_16 != 0;
    assume DeviceExtension_16 > 0;
    havoc vslice_dummy_var_3201;
    call {:si_unique_call 1534} Sbp2CreateRequestErrorLog(vslice_dummy_var_3201, 0, status_27);
    goto L92;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_DeviceExtension_16: int, actual_Srb_3: int, actual_RequestContext: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_DeviceExtension_19: int, actual_Context_14: int)
{
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_986: int;
  var {:pointer} Tmp_987: int;
  var {:pointer} Tmp_988: int;
  var {:pointer} Tmp_990: int;
  var {:pointer} Tmp_991: int;
  var {:pointer} Tmp_992: int;
  var {:pointer} Tmp_994: int;
  var {:scalar} sdv_413: int;
  var {:scalar} sdv_414: int;
  var {:pointer} Tmp_995: int;
  var {:pointer} Tmp_996: int;
  var {:scalar} sdv_416: int;
  var {:scalar} sdv_417: int;
  var {:pointer} Tmp_997: int;
  var {:scalar} status_31: int;
  var {:pointer} Tmp_998: int;
  var {:scalar} newAddr: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_999: int;
  var {:scalar} sdv_419: int;
  var {:pointer} Tmp_1000: int;
  var {:pointer} DeviceExtension_19: int;
  var {:pointer} Context_14: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_3202: int;
  var vslice_dummy_var_3203: int;

  anon0:
    call {:si_unique_call 1535} vslice_dummy_var_304 := __HAVOC_malloc(4);
    call {:si_unique_call 1536} newAddr := __HAVOC_malloc(76);
    DeviceExtension_19 := actual_DeviceExtension_19;
    Context_14 := actual_Context_14;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc orbListDepth;
    call {:si_unique_call 1537} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_990;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_990 != 0;
    assume Tmp_990 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1538} vslice_dummy_var_308 := KeResetEvent(PendingOrbEvent__DEVICE_EXTENSION(DeviceExtension_19));
    call {:si_unique_call 1539} sdv_413 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_413 != 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_995;
    assume {:nonnull} Tmp_995 != 0;
    assume Tmp_995 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_986;
    assume {:nonnull} Tmp_986 != 0;
    assume Tmp_986 > 0;
    havoc timeOutValue;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc vslice_dummy_var_3202;
    call {:si_unique_call 1540} vslice_dummy_var_309 := KeSetTimer(0, vslice_dummy_var_3202, 0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1541} vslice_dummy_var_305 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_19), OrbList__ASYNC_REQUEST_CONTEXT(Context_14));
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_987;
    assume {:nonnull} Tmp_987 != 0;
    assume Tmp_987 > 0;
    havoc Tmp_997;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_998;
    assume {:nonnull} Tmp_998 != 0;
    assume Tmp_998 > 0;
    havoc Tmp_992;
    assume {:nonnull} Tmp_992 != 0;
    assume Tmp_992 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_999;
    assume {:nonnull} Tmp_999 != 0;
    assume Tmp_999 > 0;
    havoc Tmp_991;
    assume {:nonnull} Tmp_991 != 0;
    assume Tmp_991 > 0;
    call {:si_unique_call 1542} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1543} status_31 := Sbp2AccessRegister#0(DeviceExtension_19, Reserved__DEVICE_EXTENSION(DeviceExtension_19), 1032);
    goto L56;

  L56:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_31 == -1072562032;
    call {:si_unique_call 1544} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 1545} vslice_dummy_var_306 := KeCancelTimer(0);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc vslice_dummy_var_3203;
    call {:si_unique_call 1546} vslice_dummy_var_310 := KeSetTimer(0, vslice_dummy_var_3203, 0);
    goto L62;

  L62:
    call {:si_unique_call 1547} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L57;

  L57:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume false;
    return;

  anon22_Then:
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L62;

  anon23_Then:
    goto L62;

  anon21_Then:
    assume {:partition} status_31 != -1072562032;
    goto L57;

  anon20_Then:
    goto L33;

  L33:
    call {:si_unique_call 1548} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1549} status_31 := Sbp2AccessRegister#0(DeviceExtension_19, newAddr, 1028);
    goto L56;

  anon26_Then:
    goto L33;

  anon19_Then:
    assume {:partition} sdv_413 == 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_988;
    assume {:nonnull} Tmp_988 != 0;
    assume Tmp_988 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc prevCtx;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto L95;

  L95:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1000;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_994;
    assume {:nonnull} Tmp_994 != 0;
    assume Tmp_994 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_996;
    assume {:nonnull} Tmp_996 != 0;
    assume Tmp_996 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1550} vslice_dummy_var_311 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_19), OrbList__ASYNC_REQUEST_CONTEXT(Context_14));
    call {:si_unique_call 1551} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1552} vslice_dummy_var_307 := Sbp2AccessRegister#0(DeviceExtension_19, Reserved__DEVICE_EXTENSION(DeviceExtension_19), 1032);
    goto L57;

  anon25_Then:
    goto L91;

  L91:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc prevCtx;
    goto L95;

  anon27_Then:
    goto L91;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_DeviceExtension_19: int, actual_Context_14: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} LockDepth == old(LockDepth) + 1;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_DeviceExtension_19: int, actual_Context_14: int)
{
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_986: int;
  var {:pointer} Tmp_987: int;
  var {:pointer} Tmp_988: int;
  var {:pointer} Tmp_990: int;
  var {:pointer} Tmp_991: int;
  var {:pointer} Tmp_992: int;
  var {:pointer} Tmp_994: int;
  var {:scalar} sdv_413: int;
  var {:scalar} sdv_414: int;
  var {:pointer} Tmp_995: int;
  var {:pointer} Tmp_996: int;
  var {:scalar} sdv_416: int;
  var {:scalar} sdv_417: int;
  var {:pointer} Tmp_997: int;
  var {:scalar} status_31: int;
  var {:pointer} Tmp_998: int;
  var {:scalar} newAddr: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_999: int;
  var {:scalar} sdv_419: int;
  var {:pointer} Tmp_1000: int;
  var {:pointer} DeviceExtension_19: int;
  var {:pointer} Context_14: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_3204: int;
  var vslice_dummy_var_3205: int;
  var vslice_dummy_var_3206: int;
  var vslice_dummy_var_3207: int;

  anon0:
    call {:si_unique_call 1553} vslice_dummy_var_312 := __HAVOC_malloc(4);
    call {:si_unique_call 1554} newAddr := __HAVOC_malloc(76);
    DeviceExtension_19 := actual_DeviceExtension_19;
    Context_14 := actual_Context_14;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc orbListDepth;
    call {:si_unique_call 1555} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_990;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Tmp_990 != 0;
    assume Tmp_990 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1556} vslice_dummy_var_316 := KeResetEvent(PendingOrbEvent__DEVICE_EXTENSION(DeviceExtension_19));
    call {:si_unique_call 1557} sdv_413 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_413 != 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_995;
    assume {:nonnull} Tmp_995 != 0;
    assume Tmp_995 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_986;
    assume {:nonnull} Tmp_986 != 0;
    assume Tmp_986 > 0;
    havoc timeOutValue;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc vslice_dummy_var_3204;
    call {:si_unique_call 1558} vslice_dummy_var_317 := KeSetTimer(0, vslice_dummy_var_3204, 0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1559} vslice_dummy_var_313 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_19), OrbList__ASYNC_REQUEST_CONTEXT(Context_14));
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_987;
    assume {:nonnull} Tmp_987 != 0;
    assume Tmp_987 > 0;
    havoc Tmp_997;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_997 != 0;
    assume Tmp_997 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_998;
    assume {:nonnull} Tmp_998 != 0;
    assume Tmp_998 > 0;
    havoc Tmp_992;
    assume {:nonnull} Tmp_992 != 0;
    assume Tmp_992 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc Tmp_999;
    assume {:nonnull} Tmp_999 != 0;
    assume Tmp_999 > 0;
    havoc Tmp_991;
    assume {:nonnull} Tmp_991 != 0;
    assume Tmp_991 > 0;
    call {:si_unique_call 1560} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1561} status_31 := Sbp2AccessRegister#1(DeviceExtension_19, Reserved__DEVICE_EXTENSION(DeviceExtension_19), 1032);
    goto L56;

  L56:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_31 == -1072562032;
    call {:si_unique_call 1562} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 1563} vslice_dummy_var_314 := KeCancelTimer(0);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc vslice_dummy_var_3205;
    call {:si_unique_call 1564} vslice_dummy_var_318 := KeSetTimer(0, vslice_dummy_var_3205, 0);
    goto L62;

  L62:
    call {:si_unique_call 1565} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L57;

  L57:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc vslice_dummy_var_3206;
    havoc vslice_dummy_var_3207;
    call {:si_unique_call 1566} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3206, vslice_dummy_var_3207);
    goto L1;

  L1:
    return;

  anon22_Then:
    goto L1;

  anon24_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L62;

  anon23_Then:
    goto L62;

  anon21_Then:
    assume {:partition} status_31 != -1072562032;
    goto L57;

  anon20_Then:
    goto L33;

  L33:
    call {:si_unique_call 1567} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1568} status_31 := Sbp2AccessRegister#1(DeviceExtension_19, newAddr, 1028);
    goto L56;

  anon26_Then:
    goto L33;

  anon19_Then:
    assume {:partition} sdv_413 == 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc Tmp_988;
    assume {:nonnull} Tmp_988 != 0;
    assume Tmp_988 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc prevCtx;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    goto L95;

  L95:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1000;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_994;
    assume {:nonnull} Tmp_994 != 0;
    assume Tmp_994 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_996;
    assume {:nonnull} Tmp_996 != 0;
    assume Tmp_996 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1569} vslice_dummy_var_319 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_19), OrbList__ASYNC_REQUEST_CONTEXT(Context_14));
    call {:si_unique_call 1570} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    call {:si_unique_call 1571} vslice_dummy_var_315 := Sbp2AccessRegister#1(DeviceExtension_19, Reserved__DEVICE_EXTENSION(DeviceExtension_19), 1032);
    goto L57;

  anon25_Then:
    goto L91;

  L91:
    assume {:nonnull} DeviceExtension_19 != 0;
    assume DeviceExtension_19 > 0;
    havoc prevCtx;
    goto L95;

  anon27_Then:
    goto L91;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_DeviceExtension_19: int, actual_Context_14: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.DeviceState__POWER_STATE, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> LockDepth != 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} LockDepth == old(LockDepth) + 1;
  free ensures {:va_keep} LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_DeviceExtension_7: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_294: int)
{
  var {:pointer} Tmp_295: int;
  var {:pointer} Tmp_296: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:pointer} Tmp_299: int;
  var {:pointer} Tmp_300: int;
  var {:pointer} Tmp_301: int;
  var {:pointer} Tmp_302: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} Tmp_305: int;
  var {:pointer} Tmp_306: int;
  var {:pointer} Tmp_307: int;
  var {:scalar} sdv_156: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:pointer} Tmp_310: int;
  var {:pointer} Tmp_311: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} sdv_157: int;
  var {:pointer} Tmp_313: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} sdv_158: int;
  var {:pointer} Tmp_317: int;
  var {:scalar} sdv_160: int;
  var {:pointer} Tmp_318: int;
  var {:pointer} Tmp_319: int;
  var {:pointer} Tmp_320: int;
  var {:pointer} Tmp_321: int;
  var {:pointer} Tmp_322: int;
  var {:pointer} Tmp_324: int;
  var {:pointer} Tmp_325: int;
  var {:scalar} sdv_161: int;
  var {:pointer} Tmp_326: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} Tmp_328: int;
  var {:scalar} sdv_162: int;
  var {:pointer} sdv_163: int;
  var {:pointer} Tmp_329: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:pointer} Tmp_332: int;
  var {:pointer} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:pointer} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} Tmp_338: int;
  var {:scalar} status_10: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:pointer} Tmp_341: int;
  var {:pointer} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:scalar} sdv_165: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;
  var vslice_dummy_var_3208: int;
  var vslice_dummy_var_3209: int;
  var vslice_dummy_var_3210: int;
  var vslice_dummy_var_3211: int;
  var vslice_dummy_var_3212: int;
  var vslice_dummy_var_3213: int;

  anon0:
    call {:si_unique_call 1572} packet_4 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    bFreeMdl := 0;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    Tmp_294 := -1073741632;
    goto L1;

  L1:
    return;

  anon83_Then:
    call {:si_unique_call 1573} AllocateIrpAndIrb(DeviceExtension_7, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_341;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 2;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 4;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 8;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 32;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 64;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 128;
    goto L19;

  L19:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_336;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_331;
    assume {:nonnull} Tmp_331 != 0;
    assume Tmp_331 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 8;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 16;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 32;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 64;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 128;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_334;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Tmp_333 := Data;
    assume {:nonnull} Tmp_333 != 0;
    assume Tmp_333 > 0;
    goto L23;

  L23:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_317;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_317 != 0;
    assume Tmp_317 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_295;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_329;
    assume {:nonnull} Tmp_329 != 0;
    assume Tmp_329 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_299;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    goto L17;

  L17:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(RegisterAndDirection, 1024) != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3208;
    call {:si_unique_call 1574} status_10 := Sbp2SendRequest#0(DeviceExtension_7, vslice_dummy_var_3208, 1);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_10 >= 0;
    goto L115;

  L115:
    Tmp_294 := status_10;
    goto L1;

  anon65_Then:
    assume {:partition} 0 > status_10;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_304;
    assume {:nonnull} Tmp_304 != 0;
    assume Tmp_304 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3209;
    call {:si_unique_call 1575} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3209);
    goto L115;

  anon87_Then:
    goto L115;

  anon62_Then:
    assume {:partition} BAND(RegisterAndDirection, 1024) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3210;
    call {:si_unique_call 1576} status_10 := Sbp2SendRequest#0(DeviceExtension_7, vslice_dummy_var_3210, 2);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 1577} IoFreeMdl(0);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_344;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    goto L121;

  L121:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} status_10 >= 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(RegisterAndDirection, 512) != 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 4;
    goto L131;

  L131:
    Tmp_300 := Data;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    Tmp_326 := Data;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto L126;

  L126:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3211;
    call {:si_unique_call 1578} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3211);
    goto L115;

  anon77_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 4;
    goto L126;

  anon69_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 0;
    goto L131;

  anon68_Then:
    assume {:partition} BAND(RegisterAndDirection, 512) == 0;
    goto L126;

  anon67_Then:
    assume {:partition} 0 > status_10;
    goto L126;

  anon66_Then:
    assume {:partition} bFreeMdl == 0;
    goto L121;

  anon78_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 128;
    goto L23;

  anon79_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 64;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_313;
    assume {:nonnull} Tmp_313 != 0;
    assume Tmp_313 > 0;
    Tmp_324 := Data;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    goto L23;

  anon80_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 32;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_335;
    assume {:nonnull} Tmp_335 != 0;
    assume Tmp_335 > 0;
    goto L23;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 16;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_322;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_332;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    goto L23;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 8;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_337;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_328;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_297;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_325;
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    assume {:nonnull} Tmp_325 != 0;
    assume Tmp_325 > 0;
    goto L23;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 2;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_327;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} Tmp_327 != 0;
    assume Tmp_327 > 0;
    goto L23;

  anon70_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 128;
    goto L17;

  anon71_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 64;
    goto L19;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 32;
    goto L19;

  anon73_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 16;
    goto L19;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 8;
    goto L19;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 4;
    goto L18;

  L18:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(RegisterAndDirection, 256) != 0;
    goto L52;

  L52:
    Tmp_348 := Data;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_306;
    assume {:nonnull} Tmp_306 != 0;
    assume Tmp_306 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_350;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection, 4) != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_310;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_296;
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    assume {:nonnull} Tmp_310 != 0;
    assume Tmp_310 > 0;
    goto L66;

  L66:
    call {:si_unique_call 1579} sdv_163 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_316;
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_302;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_318;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto L17;

  anon86_Then:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3212;
    call {:si_unique_call 1580} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3212);
    Tmp_294 := -1073741670;
    goto L1;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection, 4) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_340;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_307;
    assume {:nonnull} Tmp_307 != 0;
    assume Tmp_307 > 0;
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    goto L66;

  anon63_Then:
    assume {:partition} BAND(RegisterAndDirection, 256) == 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(RegisterAndDirection, 1024) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_298;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection, 4) != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_330;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_308;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} Tmp_330 != 0;
    assume Tmp_330 > 0;
    goto L88;

  L88:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_339;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_305;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    call {:si_unique_call 1581} sdv_157 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_342;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_311;
    assume {:nonnull} Tmp_311 != 0;
    assume Tmp_311 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_338;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_321;
    assume {:nonnull} Tmp_321 != 0;
    assume Tmp_321 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_343;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto L17;

  anon89_Then:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3213;
    call {:si_unique_call 1582} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3213);
    Tmp_294 := -1073741670;
    goto L1;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection, 4) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_351;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_319;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    goto L88;

  anon64_Then:
    assume {:partition} BAND(RegisterAndDirection, 1024) != 0;
    goto L52;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 2;
    goto L19;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 0;
    goto L18;

  anon61_Then:
    Tmp_294 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_DeviceExtension_7: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_294: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_DeviceExtension_7: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_294: int)
{
  var {:pointer} Tmp_295: int;
  var {:pointer} Tmp_296: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:pointer} Tmp_299: int;
  var {:pointer} Tmp_300: int;
  var {:pointer} Tmp_301: int;
  var {:pointer} Tmp_302: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} Tmp_305: int;
  var {:pointer} Tmp_306: int;
  var {:pointer} Tmp_307: int;
  var {:scalar} sdv_156: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:pointer} Tmp_310: int;
  var {:pointer} Tmp_311: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} sdv_157: int;
  var {:pointer} Tmp_313: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} sdv_158: int;
  var {:pointer} Tmp_317: int;
  var {:scalar} sdv_160: int;
  var {:pointer} Tmp_318: int;
  var {:pointer} Tmp_319: int;
  var {:pointer} Tmp_320: int;
  var {:pointer} Tmp_321: int;
  var {:pointer} Tmp_322: int;
  var {:pointer} Tmp_324: int;
  var {:pointer} Tmp_325: int;
  var {:scalar} sdv_161: int;
  var {:pointer} Tmp_326: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} Tmp_328: int;
  var {:scalar} sdv_162: int;
  var {:pointer} sdv_163: int;
  var {:pointer} Tmp_329: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:pointer} Tmp_332: int;
  var {:pointer} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:pointer} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} Tmp_338: int;
  var {:scalar} status_10: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:pointer} Tmp_341: int;
  var {:pointer} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:scalar} sdv_165: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;
  var vslice_dummy_var_3214: int;
  var vslice_dummy_var_3215: int;
  var vslice_dummy_var_3216: int;
  var vslice_dummy_var_3217: int;
  var vslice_dummy_var_3218: int;
  var vslice_dummy_var_3219: int;

  anon0:
    call {:si_unique_call 1583} packet_4 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    bFreeMdl := 0;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    Tmp_294 := -1073741632;
    goto L1;

  L1:
    return;

  anon83_Then:
    call {:si_unique_call 1584} AllocateIrpAndIrb(DeviceExtension_7, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_341;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 2;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 4;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 8;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 32;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 64;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 128;
    goto L19;

  L19:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_336;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_331;
    assume {:nonnull} Tmp_331 != 0;
    assume Tmp_331 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 8;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 16;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 32;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 64;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 128;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_334;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Tmp_333 := Data;
    assume {:nonnull} Tmp_333 != 0;
    assume Tmp_333 > 0;
    goto L23;

  L23:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_317;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_317 != 0;
    assume Tmp_317 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_295;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_329;
    assume {:nonnull} Tmp_329 != 0;
    assume Tmp_329 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_299;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    goto L17;

  L17:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(RegisterAndDirection, 1024) != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3214;
    call {:si_unique_call 1585} status_10 := Sbp2SendRequest#1(DeviceExtension_7, vslice_dummy_var_3214, 1);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_10 >= 0;
    goto L115;

  L115:
    Tmp_294 := status_10;
    goto L1;

  anon65_Then:
    assume {:partition} 0 > status_10;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_304;
    assume {:nonnull} Tmp_304 != 0;
    assume Tmp_304 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3215;
    call {:si_unique_call 1586} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3215);
    goto L115;

  anon87_Then:
    goto L115;

  anon62_Then:
    assume {:partition} BAND(RegisterAndDirection, 1024) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3216;
    call {:si_unique_call 1587} status_10 := Sbp2SendRequest#1(DeviceExtension_7, vslice_dummy_var_3216, 2);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 1588} IoFreeMdl(0);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_344;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    goto L121;

  L121:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} status_10 >= 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(RegisterAndDirection, 512) != 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(RegisterAndDirection, 255) == 4;
    goto L131;

  L131:
    Tmp_300 := Data;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_300 != 0;
    assume Tmp_300 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    Tmp_326 := Data;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto L126;

  L126:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3217;
    call {:si_unique_call 1589} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3217);
    goto L115;

  anon77_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 4;
    goto L126;

  anon69_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 0;
    goto L131;

  anon68_Then:
    assume {:partition} BAND(RegisterAndDirection, 512) == 0;
    goto L126;

  anon67_Then:
    assume {:partition} 0 > status_10;
    goto L126;

  anon66_Then:
    assume {:partition} bFreeMdl == 0;
    goto L121;

  anon78_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 128;
    goto L23;

  anon79_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 64;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_313;
    assume {:nonnull} Tmp_313 != 0;
    assume Tmp_313 > 0;
    Tmp_324 := Data;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    goto L23;

  anon80_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 32;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_335;
    assume {:nonnull} Tmp_335 != 0;
    assume Tmp_335 > 0;
    goto L23;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 16;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_322;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_332;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    goto L23;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 8;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_337;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_328;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_297;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_325;
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    assume {:nonnull} Tmp_325 != 0;
    assume Tmp_325 > 0;
    goto L23;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 2;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_327;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} Tmp_327 != 0;
    assume Tmp_327 > 0;
    goto L23;

  anon70_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) != 128;
    goto L17;

  anon71_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 64;
    goto L19;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 32;
    goto L19;

  anon73_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 16;
    goto L19;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 8;
    goto L19;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 4;
    goto L18;

  L18:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(RegisterAndDirection, 256) != 0;
    goto L52;

  L52:
    Tmp_348 := Data;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_306;
    assume {:nonnull} Tmp_306 != 0;
    assume Tmp_306 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_350;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection, 4) != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_310;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_296;
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    assume {:nonnull} Tmp_310 != 0;
    assume Tmp_310 > 0;
    goto L66;

  L66:
    call {:si_unique_call 1590} sdv_163 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_316;
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_302;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_318;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto L17;

  anon86_Then:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3218;
    call {:si_unique_call 1591} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3218);
    Tmp_294 := -1073741670;
    goto L1;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection, 4) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_340;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_307;
    assume {:nonnull} Tmp_307 != 0;
    assume Tmp_307 > 0;
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    goto L66;

  anon63_Then:
    assume {:partition} BAND(RegisterAndDirection, 256) == 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(RegisterAndDirection, 1024) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_298;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection, 4) != 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_330;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_308;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} Tmp_330 != 0;
    assume Tmp_330 > 0;
    goto L88;

  L88:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_339;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_305;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    call {:si_unique_call 1592} sdv_157 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_342;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_311;
    assume {:nonnull} Tmp_311 != 0;
    assume Tmp_311 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_338;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_321;
    assume {:nonnull} Tmp_321 != 0;
    assume Tmp_321 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_343;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto L17;

  anon89_Then:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_3219;
    call {:si_unique_call 1593} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_3219);
    Tmp_294 := -1073741670;
    goto L1;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection, 4) == 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_351;
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc Tmp_319;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    goto L88;

  anon64_Then:
    assume {:partition} BAND(RegisterAndDirection, 1024) != 0;
    goto L52;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 2;
    goto L19;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection, 255) == 0;
    goto L18;

  anon61_Then:
    Tmp_294 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_DeviceExtension_7: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_294: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_12: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_778: int)
{
  var {:pointer} sdv_335: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_779: int;
  var {:pointer} pComplete: int;
  var {:pointer} sdv_337: int;
  var {:pointer} Tmp_780: int;
  var {:pointer} Tmp_781: int;
  var {:scalar} sdv_338: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:scalar} status_22: int;
  var {:pointer} Tmp_783: int;
  var {:pointer} Tmp_784: int;
  var {:pointer} DeviceExtension_12: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_3220: int;
  var vslice_dummy_var_3221: int;
  var vslice_dummy_var_3222: int;
  var vslice_dummy_var_3223: int;

  anon0:
    DeviceExtension_12 := actual_DeviceExtension_12;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    originalTransferMode := TransferMode;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    requestContext := 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_781;
    assume {:nonnull} Tmp_781 != 0;
    assume Tmp_781 > 0;
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_784;
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_778 := -1073741823;
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L18;

  L18:
    call {:si_unique_call 1594} sdv_337 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_337;
    goto L24;

  L24:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} requestContext != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1595} sdv_338 := sdv_KeGetCurrentIrql();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_338 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L27;

  L27:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L41;

  L41:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_3220;
    call {:si_unique_call 1596} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_3220);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(nextIrpStack)] := 15;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_3221;
    call {:si_unique_call 1597} sdv_IoSetCompletionRoutine(vslice_dummy_var_3221, li2bplFunctionConstant337, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_3222;
    havoc vslice_dummy_var_3223;
    call {:si_unique_call 1598} status_22 := sdv_IoCallDriver#0(vslice_dummy_var_3222, vslice_dummy_var_3223);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_22 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_783;
    assume {:nonnull} Tmp_783 != 0;
    assume Tmp_783 > 0;
    goto L56;

  L56:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    goto L74;

  L74:
    call {:si_unique_call 1599} Sbp2SendRequest#0_loop_L74(pComplete);
    goto L74_last;

  L74_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_780;
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    havoc status_22;
    goto L62;

  L62:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    call {:si_unique_call 1600} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_12), requestContext);
    goto L72;

  L72:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_779;
    assume {:nonnull} Tmp_779 != 0;
    assume Tmp_779 > 0;
    havoc Tmp_778;
    goto L1;

  anon38_Then:
    call {:si_unique_call 1601} sdv_ExFreePool(0);
    goto L72;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} TransferMode == 2;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_22 == 259;
    call {:si_unique_call 1602} vslice_dummy_var_320 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L62;

  anon37_Then:
    assume {:partition} status_22 != 259;
    goto L62;

  anon35_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_778 := status_22;
    goto L1;

  anon34_Then:
    assume {:partition} status_22 != -1072562032;
    goto L56;

  anon42_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L41;

  anon33_Then:
    assume {:partition} 2 > sdv_338;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1603} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L27;

  anon32_Then:
    assume {:partition} TransferMode != 2;
    goto L27;

  anon31_Then:
    assume {:partition} requestContext == 0;
    Tmp_778 := -1073741670;
    goto L1;

  anon30_Then:
    goto L18;

  anon29_Then:
    call {:si_unique_call 1604} sdv_335 := ExAllocatePoolWithTag(0, 32, -481140141);
    requestContext := sdv_335;
    goto L24;

  anon40_Then:
    assume {:partition} originalTransferMode == 2;
    goto L12;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_12: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_778: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_12: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_778: int)
{
  var {:pointer} sdv_335: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_779: int;
  var {:pointer} pComplete: int;
  var {:pointer} sdv_337: int;
  var {:pointer} Tmp_780: int;
  var {:pointer} Tmp_781: int;
  var {:scalar} sdv_338: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:scalar} status_22: int;
  var {:pointer} Tmp_783: int;
  var {:pointer} Tmp_784: int;
  var {:pointer} DeviceExtension_12: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_3224: int;
  var vslice_dummy_var_3225: int;
  var vslice_dummy_var_3226: int;
  var vslice_dummy_var_3227: int;

  anon0:
    DeviceExtension_12 := actual_DeviceExtension_12;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    originalTransferMode := TransferMode;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    requestContext := 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_781;
    assume {:nonnull} Tmp_781 != 0;
    assume Tmp_781 > 0;
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_784;
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_778 := -1073741823;
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L18;

  L18:
    call {:si_unique_call 1605} sdv_337 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_337;
    goto L24;

  L24:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} requestContext != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1606} sdv_338 := sdv_KeGetCurrentIrql();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_338 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L27;

  L27:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L41;

  L41:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_3224;
    call {:si_unique_call 1607} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_3224);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(nextIrpStack)] := 15;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_3225;
    call {:si_unique_call 1608} sdv_IoSetCompletionRoutine(vslice_dummy_var_3225, li2bplFunctionConstant337, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_3226;
    havoc vslice_dummy_var_3227;
    call {:si_unique_call 1609} status_22 := sdv_IoCallDriver#1(vslice_dummy_var_3226, vslice_dummy_var_3227);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_22 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_783;
    assume {:nonnull} Tmp_783 != 0;
    assume Tmp_783 > 0;
    goto L56;

  L56:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    goto L74;

  L74:
    call {:si_unique_call 1610} Sbp2SendRequest#1_loop_L74(pComplete);
    goto L74_last;

  L74_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_780;
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    havoc status_22;
    goto L62;

  L62:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    call {:si_unique_call 1611} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_12), requestContext);
    goto L72;

  L72:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_779;
    assume {:nonnull} Tmp_779 != 0;
    assume Tmp_779 > 0;
    havoc Tmp_778;
    goto L1;

  anon38_Then:
    call {:si_unique_call 1612} sdv_ExFreePool(0);
    goto L72;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} TransferMode == 2;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_22 == 259;
    call {:si_unique_call 1613} vslice_dummy_var_321 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L62;

  anon37_Then:
    assume {:partition} status_22 != 259;
    goto L62;

  anon35_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_778 := status_22;
    goto L1;

  anon34_Then:
    assume {:partition} status_22 != -1072562032;
    goto L56;

  anon42_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L41;

  anon33_Then:
    assume {:partition} 2 > sdv_338;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1614} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L27;

  anon32_Then:
    assume {:partition} TransferMode != 2;
    goto L27;

  anon31_Then:
    assume {:partition} requestContext == 0;
    Tmp_778 := -1073741670;
    goto L1;

  anon30_Then:
    goto L18;

  anon29_Then:
    call {:si_unique_call 1615} sdv_335 := ExAllocatePoolWithTag(0, 32, -481140141);
    requestContext := sdv_335;
    goto L24;

  anon40_Then:
    assume {:partition} originalTransferMode == 2;
    goto L12;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_12: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_778: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_9: int, actual_Irp_7: int) returns (Tmp_555: int)
{
  var {:pointer} Irp_7: int;

  anon0:
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1616} Tmp_555 := IofCallDriver#0(0, Irp_7);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_9: int, actual_Irp_7: int) returns (Tmp_555: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_555 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_9: int, actual_Irp_7: int) returns (Tmp_555: int)
{
  var {:pointer} Irp_7: int;

  anon0:
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1617} Tmp_555 := IofCallDriver#1(0, Irp_7);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_9: int, actual_Irp_7: int) returns (Tmp_555: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_555 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_7: int, actual_Irp_5: int) returns (Tmp_545: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_15: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_3228: int;
  var vslice_dummy_var_3229: int;
  var vslice_dummy_var_3230: int;
  var vslice_dummy_var_3231: int;

  anon0:
    call {:si_unique_call 1618} completion_1 := __HAVOC_malloc(4);
    Irp_5 := actual_Irp_5;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_15 := 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L21;

  L21:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_545 := status_15;
    return;

  anon47_Then:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3228;
    call {:si_unique_call 1619} vslice_dummy_var_322 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3228, completion_1);
    goto L29;

  anon46_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L23;

  anon45_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L19;

  anon60_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L60;

  L60:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3229;
    call {:si_unique_call 1620} vslice_dummy_var_325 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3229, completion_1);
    goto L29;

  anon59_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L62;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L58;

  anon61_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L34;

  L34:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3230;
    call {:si_unique_call 1621} vslice_dummy_var_323 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3230, completion_1);
    goto L29;

  anon51_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon49_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L36;

  anon48_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L32;

  anon62_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L47;

  L47:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3231;
    call {:si_unique_call 1622} vslice_dummy_var_324 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3231, completion_1);
    goto L29;

  anon55_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon53_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L49;

  anon52_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_7: int, actual_Irp_5: int) returns (Tmp_545: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_545 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_7: int, actual_Irp_5: int) returns (Tmp_545: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_15: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_3232: int;
  var vslice_dummy_var_3233: int;
  var vslice_dummy_var_3234: int;
  var vslice_dummy_var_3235: int;

  anon0:
    call {:si_unique_call 1623} completion_1 := __HAVOC_malloc(4);
    Irp_5 := actual_Irp_5;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_15 := 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L21;

  L21:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_545 := status_15;
    return;

  anon47_Then:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3232;
    call {:si_unique_call 1624} vslice_dummy_var_326 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3232, completion_1);
    goto L29;

  anon46_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L23;

  anon45_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L19;

  anon60_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L60;

  L60:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3233;
    call {:si_unique_call 1625} vslice_dummy_var_329 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3233, completion_1);
    goto L29;

  anon59_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L62;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L58;

  anon61_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L34;

  L34:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3234;
    call {:si_unique_call 1626} vslice_dummy_var_327 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3234, completion_1);
    goto L29;

  anon51_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon49_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L36;

  anon48_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L32;

  anon62_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    goto L47;

  L47:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3235;
    call {:si_unique_call 1627} vslice_dummy_var_328 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_3235, completion_1);
    goto L29;

  anon55_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon53_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L49;

  anon52_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_7: int, actual_Irp_5: int) returns (Tmp_545: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_545 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_8: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_549: int)
{
  var {:scalar} Status_1: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_8: int;
  var {:pointer} Irp_6: int;
  var {:pointer} Context_5: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_8 := actual_DeviceObject_8;
    Irp_6 := actual_Irp_6;
    Context_5 := actual_Context_5;
    Completion := actual_Completion;
    call {:si_unique_call 1628} irpsp := sdv_IoGetNextIrpStackLocation(Irp_6);
    Status_1 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 1629} Status_1 := Sbp2FdoRequestCompletionRoutine(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1630} Status_1 := Sbp2FdoSIrpCompletion#0(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1631} Status_1 := Sbp2PortForwardIrpSynchronousCompletionRoutine(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1632} Status_1 := Sbp2RequestCompletionRoutine#0(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    Tmp_549 := Status_1;
    call {:si_unique_call 1633} SLIC_sdv_RunIoCompletionRoutines_exit(0, Completion);
    return;

  anon11_Then:
    goto L62;

  anon10_Then:
    goto L45;

  anon9_Then:
    goto L28;

  anon12_Then:
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_8: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_549: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_549 == -1073741802 || Tmp_549 == -1073741584 || Tmp_549 == 259 || Tmp_549 == -1073741670 || Tmp_549 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_8: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_549: int)
{
  var {:scalar} Status_1: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_8: int;
  var {:pointer} Irp_6: int;
  var {:pointer} Context_5: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_8 := actual_DeviceObject_8;
    Irp_6 := actual_Irp_6;
    Context_5 := actual_Context_5;
    Completion := actual_Completion;
    call {:si_unique_call 1634} irpsp := sdv_IoGetNextIrpStackLocation(Irp_6);
    Status_1 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 1635} Status_1 := Sbp2FdoRequestCompletionRoutine(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1636} Status_1 := Sbp2FdoSIrpCompletion#1(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1637} Status_1 := Sbp2PortForwardIrpSynchronousCompletionRoutine(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1638} Status_1 := Sbp2RequestCompletionRoutine#1(DeviceObject_8, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    Tmp_549 := Status_1;
    call {:si_unique_call 1639} SLIC_sdv_RunIoCompletionRoutines_exit(0, Completion);
    return;

  anon11_Then:
    goto L62;

  anon10_Then:
    goto L45;

  anon9_Then:
    goto L28;

  anon12_Then:
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_8: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_549: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_549 == -1073741802 || Tmp_549 == -1073741584 || Tmp_549 == 259 || Tmp_549 == -1073741670 || Tmp_549 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoSIrpCompletion"} Sbp2FdoSIrpCompletion#0(actual_DeviceObject_35: int, actual_Irp_25: int, actual_Unused: int) returns (Tmp_1196: int)
{
  var {:pointer} irpStack_14: int;
  var {:pointer} fdoExtension_5: int;
  var {:scalar} status_43: int;
  var {:scalar} state_3: int;
  var {:pointer} DeviceObject_35: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_3236: int;

  anon0:
    call {:si_unique_call 1640} state_3 := __HAVOC_malloc(8);
    DeviceObject_35 := actual_DeviceObject_35;
    Irp_25 := actual_Irp_25;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    havoc status_43;
    call {:si_unique_call 1641} irpStack_14 := sdv_IoGetCurrentIrpStackLocation(Irp_25);
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    havoc fdoExtension_5;
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state_3)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_14))))];
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_43 >= 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state_3)] := 1;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    havoc vslice_dummy_var_3236;
    call {:si_unique_call 1642} status_43 := PoRequestPowerIrp#0(vslice_dummy_var_3236, 2, state_3, li2bplFunctionConstant255, fdoExtension_5, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_43 >= 0;
    Tmp_1196 := -1073741802;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} 0 > status_43;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    call {:si_unique_call 1643} PoStartNextPowerIrp(0);
    Tmp_1196 := status_43;
    goto L1;

  anon22_Then:
    goto L18;

  L18:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L37;

  L37:
    call {:si_unique_call 1644} PoStartNextPowerIrp(0);
    Tmp_1196 := 0;
    goto L1;

  anon25_Then:
    goto L33;

  L33:
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L37;

  anon24_Then:
    goto L37;

  anon21_Then:
    goto L33;

  anon20_Then:
    goto L18;

  anon27_Then:
    assume {:partition} 0 > status_43;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_43 == -1073741810;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L42;

  L42:
    call {:si_unique_call 1645} PoStartNextPowerIrp(0);
    Tmp_1196 := 0;
    goto L1;

  anon26_Then:
    goto L42;

  anon19_Then:
    assume {:partition} status_43 != -1073741810;
    goto L42;
}



procedure {:origName "Sbp2FdoSIrpCompletion"} Sbp2FdoSIrpCompletion#0(actual_DeviceObject_35: int, actual_Irp_25: int, actual_Unused: int) returns (Tmp_1196: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_1196 == -1073741802 || Tmp_1196 == -1073741584 || Tmp_1196 == 259 || Tmp_1196 == -1073741670 || Tmp_1196 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoSIrpCompletion"} Sbp2FdoSIrpCompletion#1(actual_DeviceObject_35: int, actual_Irp_25: int, actual_Unused: int) returns (Tmp_1196: int)
{
  var {:pointer} irpStack_14: int;
  var {:pointer} fdoExtension_5: int;
  var {:scalar} status_43: int;
  var {:scalar} state_3: int;
  var {:pointer} DeviceObject_35: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_3237: int;

  anon0:
    call {:si_unique_call 1646} state_3 := __HAVOC_malloc(8);
    DeviceObject_35 := actual_DeviceObject_35;
    Irp_25 := actual_Irp_25;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    havoc status_43;
    call {:si_unique_call 1647} irpStack_14 := sdv_IoGetCurrentIrpStackLocation(Irp_25);
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    havoc fdoExtension_5;
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state_3)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(State_unnamed_tag_37(Power_unnamed_tag_8(Parameters__IO_STACK_LOCATION(irpStack_14))))];
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_43 >= 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state_3)] := 1;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    havoc vslice_dummy_var_3237;
    call {:si_unique_call 1648} status_43 := PoRequestPowerIrp#1(vslice_dummy_var_3237, 2, state_3, li2bplFunctionConstant255, fdoExtension_5, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_43 >= 0;
    Tmp_1196 := -1073741802;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} 0 > status_43;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    call {:si_unique_call 1649} PoStartNextPowerIrp(0);
    Tmp_1196 := status_43;
    goto L1;

  anon22_Then:
    goto L18;

  L18:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L37;

  L37:
    call {:si_unique_call 1650} PoStartNextPowerIrp(0);
    Tmp_1196 := 0;
    goto L1;

  anon25_Then:
    goto L33;

  L33:
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L37;

  anon24_Then:
    goto L37;

  anon21_Then:
    goto L33;

  anon20_Then:
    goto L18;

  anon27_Then:
    assume {:partition} 0 > status_43;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_43 == -1073741810;
    assume {:nonnull} state_3 != 0;
    assume state_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto L42;

  L42:
    call {:si_unique_call 1651} PoStartNextPowerIrp(0);
    Tmp_1196 := 0;
    goto L1;

  anon26_Then:
    goto L42;

  anon19_Then:
    assume {:partition} status_43 != -1073741810;
    goto L42;
}



procedure {:origName "Sbp2FdoSIrpCompletion"} Sbp2FdoSIrpCompletion#1(actual_DeviceObject_35: int, actual_Irp_25: int, actual_Unused: int) returns (Tmp_1196: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth, sdv_compFset;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_1196 == -1073741802 || Tmp_1196 == -1073741584 || Tmp_1196 == 259 || Tmp_1196 == -1073741670 || Tmp_1196 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#0(actual_DeviceObject_3: int, actual_MinorFunction: int, actual_SD3: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_472: int)
{
  var {:scalar} PowerState_3: int;
  var {:pointer} DeviceObject_3: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} SD3: int;
  var {:scalar} CompletionFunction: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_330: int;

  anon0:
    call {:si_unique_call 1652} PowerState_3 := __HAVOC_malloc(8);
    DeviceObject_3 := actual_DeviceObject_3;
    MinorFunction := actual_MinorFunction;
    SD3 := actual_SD3;
    CompletionFunction := actual_CompletionFunction;
    Context_3 := actual_Context_3;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_3)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD3)];
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_472 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    call {:si_unique_call 1653} vslice_dummy_var_330 := sdv_RunPowerCompletionRoutines#0(DeviceObject_3, MinorFunction, PowerState_3, Context_3, IoStatus__IRP(sdv_power_irp), CompletionFunction);
    Tmp_472 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_472 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#0(actual_DeviceObject_3: int, actual_MinorFunction: int, actual_SD3: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_472: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_472 == -1073741584 || Tmp_472 == 259 || Tmp_472 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#1(actual_DeviceObject_3: int, actual_MinorFunction: int, actual_SD3: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_472: int)
{
  var {:scalar} PowerState_3: int;
  var {:pointer} DeviceObject_3: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} SD3: int;
  var {:scalar} CompletionFunction: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_331: int;

  anon0:
    call {:si_unique_call 1654} PowerState_3 := __HAVOC_malloc(8);
    DeviceObject_3 := actual_DeviceObject_3;
    MinorFunction := actual_MinorFunction;
    SD3 := actual_SD3;
    CompletionFunction := actual_CompletionFunction;
    Context_3 := actual_Context_3;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_3)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD3)];
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_472 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    call {:si_unique_call 1655} vslice_dummy_var_331 := sdv_RunPowerCompletionRoutines#1(DeviceObject_3, MinorFunction, PowerState_3, Context_3, IoStatus__IRP(sdv_power_irp), CompletionFunction);
    Tmp_472 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_472 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#1(actual_DeviceObject_3: int, actual_MinorFunction: int, actual_SD3: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_472: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth, sdv_compFset;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_472 == -1073741584 || Tmp_472 == 259 || Tmp_472 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#0(actual_DeviceObject_4: int, actual_MinorFunction_1: int, actual_SD2: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_480: int)
{
  var {:scalar} PowerState_2: int;
  var {:scalar} CompletionFunction_2: int;
  var {:pointer} DeviceObject_4: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} SD2: int;
  var {:pointer} Context_4: int;
  var {:pointer} IoStatus: int;
  var {:scalar} CompletionFunction_1: int;

  anon0:
    call {:si_unique_call 1656} PowerState_2 := __HAVOC_malloc(8);
    DeviceObject_4 := actual_DeviceObject_4;
    MinorFunction_1 := actual_MinorFunction_1;
    SD2 := actual_SD2;
    Context_4 := actual_Context_4;
    IoStatus := actual_IoStatus;
    CompletionFunction_1 := actual_CompletionFunction_1;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD2)];
    CompletionFunction_2 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant255;
    call {:si_unique_call 1657} sdv_stub_power_completion_begin();
    call {:si_unique_call 1658} Sbp2FdoDIrpCompletion#0(DeviceObject_4, MinorFunction_1, PowerState_2, Context_4, IoStatus);
    CompletionFunction_2 := 1;
    goto L6;

  L6:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant253;
    call {:si_unique_call 1659} sdv_stub_power_completion_begin();
    call {:si_unique_call 1660} Sbp2PdoDIrpCompletion(DeviceObject_4, MinorFunction_1, PowerState_2, Context_4, IoStatus);
    CompletionFunction_2 := 1;
    goto L19;

  L19:
    Tmp_480 := CompletionFunction_2;
    call {:si_unique_call 1661} SLIC_sdv_RunPowerCompletionRoutines_exit(0, Tmp_480);
    return;

  anon5_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant253;
    goto L19;

  anon6_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant255;
    goto L6;
}



procedure {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#0(actual_DeviceObject_4: int, actual_MinorFunction_1: int, actual_SD2: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_480: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_480 == 1 || Tmp_480 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#1(actual_DeviceObject_4: int, actual_MinorFunction_1: int, actual_SD2: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_480: int)
{
  var {:scalar} PowerState_2: int;
  var {:scalar} CompletionFunction_2: int;
  var {:pointer} DeviceObject_4: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} SD2: int;
  var {:pointer} Context_4: int;
  var {:pointer} IoStatus: int;
  var {:scalar} CompletionFunction_1: int;

  anon0:
    call {:si_unique_call 1662} PowerState_2 := __HAVOC_malloc(8);
    DeviceObject_4 := actual_DeviceObject_4;
    MinorFunction_1 := actual_MinorFunction_1;
    SD2 := actual_SD2;
    Context_4 := actual_Context_4;
    IoStatus := actual_IoStatus;
    CompletionFunction_1 := actual_CompletionFunction_1;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_2)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD2)];
    CompletionFunction_2 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant255;
    call {:si_unique_call 1663} sdv_stub_power_completion_begin();
    call {:si_unique_call 1664} Sbp2FdoDIrpCompletion#1(DeviceObject_4, MinorFunction_1, PowerState_2, Context_4, IoStatus);
    CompletionFunction_2 := 1;
    goto L6;

  L6:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant253;
    call {:si_unique_call 1665} sdv_stub_power_completion_begin();
    call {:si_unique_call 1666} Sbp2PdoDIrpCompletion(DeviceObject_4, MinorFunction_1, PowerState_2, Context_4, IoStatus);
    CompletionFunction_2 := 1;
    goto L19;

  L19:
    Tmp_480 := CompletionFunction_2;
    call {:si_unique_call 1667} SLIC_sdv_RunPowerCompletionRoutines_exit(0, Tmp_480);
    return;

  anon5_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant253;
    goto L19;

  anon6_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant255;
    goto L6;
}



procedure {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#1(actual_DeviceObject_4: int, actual_MinorFunction_1: int, actual_SD2: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_480: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth, sdv_compFset;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_480 == 1 || Tmp_480 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoDIrpCompletion"} Sbp2FdoDIrpCompletion#0(actual_TargetDeviceObject: int, actual_MinorFunction_2: int, actual_SD1: int, actual_FdoExtension: int, actual_IoStatus_1: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} sIrp: int;
  var {:pointer} SD1: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} IoStatus_1: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;

  anon0:
    call {:si_unique_call 1668} PowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 1669} vslice_dummy_var_332 := __HAVOC_malloc(4);
    SD1 := actual_SD1;
    FdoExtension := actual_FdoExtension;
    IoStatus_1 := actual_IoStatus_1;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_1)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD1)];
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    havoc sIrp;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_1)] == 1;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    goto L14;

  L14:
    call {:si_unique_call 1670} PoStartNextPowerIrp(0);
    call {:si_unique_call 1671} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_1)] != 1;
    call {:si_unique_call 1672} PoStartNextPowerIrp(0);
    call {:si_unique_call 1673} sdv_IoCopyCurrentIrpStackLocationToNext(sIrp);
    call {:si_unique_call 1674} vslice_dummy_var_333 := PoCallDriver#0(0, sIrp);
    goto L1;

  anon6_Then:
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    assume {:nonnull} sIrp != 0;
    assume sIrp > 0;
    goto L14;
}



procedure {:origName "Sbp2FdoDIrpCompletion"} Sbp2FdoDIrpCompletion#0(actual_TargetDeviceObject: int, actual_MinorFunction_2: int, actual_SD1: int, actual_FdoExtension: int, actual_IoStatus_1: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoDIrpCompletion"} Sbp2FdoDIrpCompletion#1(actual_TargetDeviceObject: int, actual_MinorFunction_2: int, actual_SD1: int, actual_FdoExtension: int, actual_IoStatus_1: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} sIrp: int;
  var {:pointer} SD1: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} IoStatus_1: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;

  anon0:
    call {:si_unique_call 1675} PowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 1676} vslice_dummy_var_334 := __HAVOC_malloc(4);
    SD1 := actual_SD1;
    FdoExtension := actual_FdoExtension;
    IoStatus_1 := actual_IoStatus_1;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_1)] := Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(SD1)];
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    havoc sIrp;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_1)] == 1;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    goto L14;

  L14:
    call {:si_unique_call 1677} PoStartNextPowerIrp(0);
    call {:si_unique_call 1678} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(PowerState_1)] != 1;
    call {:si_unique_call 1679} PoStartNextPowerIrp(0);
    call {:si_unique_call 1680} sdv_IoCopyCurrentIrpStackLocationToNext(sIrp);
    call {:si_unique_call 1681} vslice_dummy_var_335 := PoCallDriver#1(0, sIrp);
    goto L1;

  anon6_Then:
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    assume {:nonnull} sIrp != 0;
    assume sIrp > 0;
    goto L14;
}



procedure {:origName "Sbp2FdoDIrpCompletion"} Sbp2FdoDIrpCompletion#1(actual_TargetDeviceObject: int, actual_MinorFunction_2: int, actual_SD1: int, actual_FdoExtension: int, actual_IoStatus_1: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver#0(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_442: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_12: int;
  var {:pointer} Irp_1: int;

  anon0:
    call {:si_unique_call 1682} completion := __HAVOC_malloc(4);
    Irp_1 := actual_Irp_1;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_12 := 259;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L21;

  L21:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_442 := status_12;
    return;

  anon48_Then:
    assume {:partition} sdv_compFset != 0;
    assume false;
    return;

  anon47_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L23;

  anon46_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon61_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L60;

  L60:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_compFset != 0;
    assume false;
    return;

  anon60_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon59_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L62;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L58;

  anon62_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L34;

  L34:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_compFset != 0;
    assume false;
    return;

  anon52_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon51_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L36;

  anon49_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L32;

  anon45_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L47;

  L47:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_compFset != 0;
    assume false;
    return;

  anon56_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon55_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L49;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L45;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver#0(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_442: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_442 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver#1(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_442: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_12: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_3238: int;
  var vslice_dummy_var_3239: int;
  var vslice_dummy_var_3240: int;
  var vslice_dummy_var_3241: int;

  anon0:
    call {:si_unique_call 1683} completion := __HAVOC_malloc(4);
    Irp_1 := actual_Irp_1;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_12 := 259;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L21;

  L21:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_442 := status_12;
    return;

  anon48_Then:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3238;
    call {:si_unique_call 1684} vslice_dummy_var_336 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_3238, completion);
    goto L29;

  anon47_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L23;

  anon46_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon61_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L60;

  L60:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3239;
    call {:si_unique_call 1685} vslice_dummy_var_339 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_3239, completion);
    goto L29;

  anon60_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon59_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L62;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L58;

  anon62_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L34;

  L34:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3240;
    call {:si_unique_call 1686} vslice_dummy_var_337 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_3240, completion);
    goto L29;

  anon52_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon51_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L36;

  anon49_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L32;

  anon45_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    goto L47;

  L47:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_3241;
    call {:si_unique_call 1687} vslice_dummy_var_338 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_3241, completion);
    goto L29;

  anon56_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon55_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L49;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L45;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver#1(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_442: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_442 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#0(actual_DeviceObject_13: int, actual_Irp_12: int, actual_Context_7: int) returns (Tmp_728: int)
{
  var {:pointer} Tmp_729: int;
  var {:pointer} Tmp_730: int;
  var {:pointer} Tmp_731: int;
  var {:pointer} Tmp_732: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_739: int;
  var {:pointer} Context_7: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_3242: int;
  var vslice_dummy_var_3243: int;

  anon0:
    Context_7 := actual_Context_7;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 1688} vslice_dummy_var_340 := KeSetEvent(Event__REQUEST_CONTEXT(Context_7), 0, 0);
    goto L8;

  L8:
    Tmp_728 := -1073741802;
    return;

  anon15_Then:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_737;
    assume {:nonnull} Tmp_737 != 0;
    assume Tmp_737 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L16;

  L16:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_739;
    assume {:nonnull} Tmp_739 != 0;
    assume Tmp_739 > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_732;
    assume {:nonnull} Tmp_732 != 0;
    assume Tmp_732 > 0;
    call {:si_unique_call 1689} IoFreeMdl(0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_734;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    havoc Tmp_731;
    assume {:nonnull} Tmp_731 != 0;
    assume Tmp_731 > 0;
    goto L13;

  L13:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc vslice_dummy_var_3242;
    havoc vslice_dummy_var_3243;
    call {:si_unique_call 1690} DeAllocateIrpAndIrb(vslice_dummy_var_3242, vslice_dummy_var_3243);
    goto L11;

  L11:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_733;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    call {:si_unique_call 1691} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(Tmp_730), Context_7);
    goto L8;

  anon21_Then:
    call {:si_unique_call 1692} sdv_ExFreePool(0);
    goto L8;

  anon20_Then:
    goto L13;

  anon18_Then:
    goto L13;

  anon19_Then:
    goto L16;

  anon17_Then:
    goto L11;

  anon16_Then:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto L8;
}



procedure {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#0(actual_DeviceObject_13: int, actual_Irp_12: int, actual_Context_7: int) returns (Tmp_728: int);
  modifies alloc, sdv_compFset, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_728 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#1(actual_DeviceObject_13: int, actual_Irp_12: int, actual_Context_7: int) returns (Tmp_728: int)
{
  var {:pointer} Tmp_729: int;
  var {:pointer} Tmp_730: int;
  var {:pointer} Tmp_731: int;
  var {:pointer} Tmp_732: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_739: int;
  var {:pointer} Context_7: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_3244: int;
  var vslice_dummy_var_3245: int;

  anon0:
    Context_7 := actual_Context_7;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 1693} vslice_dummy_var_341 := KeSetEvent(Event__REQUEST_CONTEXT(Context_7), 0, 0);
    goto L8;

  L8:
    Tmp_728 := -1073741802;
    return;

  anon15_Then:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_737;
    assume {:nonnull} Tmp_737 != 0;
    assume Tmp_737 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L16;

  L16:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_739;
    assume {:nonnull} Tmp_739 != 0;
    assume Tmp_739 > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_732;
    assume {:nonnull} Tmp_732 != 0;
    assume Tmp_732 > 0;
    call {:si_unique_call 1694} IoFreeMdl(0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_734;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    havoc Tmp_731;
    assume {:nonnull} Tmp_731 != 0;
    assume Tmp_731 > 0;
    goto L13;

  L13:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc vslice_dummy_var_3244;
    havoc vslice_dummy_var_3245;
    call {:si_unique_call 1695} DeAllocateIrpAndIrb(vslice_dummy_var_3244, vslice_dummy_var_3245);
    goto L11;

  L11:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_733;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    call {:si_unique_call 1696} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(Tmp_730), Context_7);
    goto L8;

  anon21_Then:
    call {:si_unique_call 1697} sdv_ExFreePool(0);
    goto L8;

  anon20_Then:
    goto L13;

  anon18_Then:
    goto L13;

  anon19_Then:
    goto L16;

  anon17_Then:
    goto L11;

  anon16_Then:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto L8;
}



procedure {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#1(actual_DeviceObject_13: int, actual_Irp_12: int, actual_Context_7: int) returns (Tmp_728: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.DeviceState__POWER_STATE, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_728 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_1271: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;

  anon0:
    call {:si_unique_call 1698} vslice_dummy_var_342 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_1271 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_1271 != 0;
    assume Tmp_1271 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1699} Sbp2AllocComplete#0(Entry_3);
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1700} vslice_dummy_var_345 := Sbp2GlobalStatusCallback#0(Entry_3);
    goto L1;

  anon12_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1701} vslice_dummy_var_344 := Sbp2ManagementOrbStatusCallback#0(Entry_3);
    goto L1;

  anon15_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1702} vslice_dummy_var_343 := Sbp2TaskOrbStatusCallback#0(Entry_3);
    goto L1;

  anon14_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L1;

  anon11_Then:
    call {:si_unique_call 1703} vslice_dummy_var_346 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, sdv_compFset, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_1271: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;

  anon0:
    call {:si_unique_call 1704} vslice_dummy_var_347 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_1271 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_1271 != 0;
    assume Tmp_1271 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1705} Sbp2AllocComplete#1(Entry_3);
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1706} vslice_dummy_var_350 := Sbp2GlobalStatusCallback#1(Entry_3);
    goto L1;

  anon12_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1707} vslice_dummy_var_349 := Sbp2ManagementOrbStatusCallback#1(Entry_3);
    goto L1;

  anon15_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1708} vslice_dummy_var_348 := Sbp2TaskOrbStatusCallback#1(Entry_3);
    goto L1;

  anon14_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L1;

  anon11_Then:
    call {:si_unique_call 1709} vslice_dummy_var_351 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.DeviceState__POWER_STATE, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_15: int)
{
  var {:scalar} Tmp_16: int;
  var {:pointer} deviceObject: int;
  var {:scalar} sdv_9: int;
  var {:pointer} Tmp_18: int;
  var {:scalar} sdv_10: int;
  var {:scalar} status: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_3246: int;
  var vslice_dummy_var_3247: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_18;
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc deviceExtension;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_15 := 6;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 1710} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1711} vslice_dummy_var_352 := KeCancelTimer(0);
    call {:si_unique_call 1712} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1713} status := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(deviceExtension));
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status != 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_3246;
    call {:si_unique_call 1714} Sbp2CreateRequestErrorLog(vslice_dummy_var_3246, 0, 16);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume false;
    call {:si_unique_call 1715} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1716} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_3247;
    call {:si_unique_call 1717} vslice_dummy_var_353 := KeSetTimer(0, vslice_dummy_var_3247, 0);
    Tmp_15 := 0;
    return;

  anon20_Then:
    goto L42;

  L42:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume false;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume false;
    call {:si_unique_call 1718} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    return;

  anon19_Then:
    assume {:partition} status == 0;
    goto L42;

  anon18_Then:
    call {:si_unique_call 1719} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_15 := 0;
    goto L1;

  anon17_Then:
    goto L15;

  L15:
    Tmp_15 := 0;
    goto L1;

  anon22_Then:
    Tmp_15 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_15: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_15 == 6 || Tmp_15 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_15: int)
{
  var {:scalar} Tmp_16: int;
  var {:pointer} deviceObject: int;
  var {:scalar} sdv_9: int;
  var {:pointer} Tmp_18: int;
  var {:scalar} sdv_10: int;
  var {:scalar} status: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_3248: int;
  var vslice_dummy_var_3249: int;
  var vslice_dummy_var_3250: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_18;
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc deviceExtension;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_15 := 6;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 1720} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1721} vslice_dummy_var_354 := KeCancelTimer(0);
    call {:si_unique_call 1722} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1723} status := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(deviceExtension));
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status != 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_3248;
    call {:si_unique_call 1724} Sbp2CreateRequestErrorLog(vslice_dummy_var_3248, 0, 16);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1725} vslice_dummy_var_357 := Sbp2AccessRegister#0(deviceExtension, Reserved__DEVICE_EXTENSION(deviceExtension), 1056);
    call {:si_unique_call 1726} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1727} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_3249;
    call {:si_unique_call 1728} vslice_dummy_var_358 := KeSetTimer(0, vslice_dummy_var_3249, 0);
    Tmp_15 := 0;
    goto L1;

  anon20_Then:
    goto L42;

  L42:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1729} vslice_dummy_var_356 := Sbp2AccessRegister#0(deviceExtension, Reserved__DEVICE_EXTENSION(deviceExtension), 1088);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1730} vslice_dummy_var_355 := Sbp2AccessRegister#0(deviceExtension, Reserved__DEVICE_EXTENSION(deviceExtension), 1026);
    call {:si_unique_call 1731} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto L75;

  L75:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_16 := 5;
    goto L79;

  L79:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 1732} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1733} CleanupOrbList#1(deviceExtension, -1073741248);
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_3250;
    call {:si_unique_call 1734} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3250, 0);
    goto L15;

  L15:
    Tmp_15 := 0;
    goto L1;

  anon21_Then:
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc Tmp_16;
    goto L79;

  anon24_Then:
    goto L75;

  anon19_Then:
    assume {:partition} status == 0;
    goto L42;

  anon18_Then:
    call {:si_unique_call 1735} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_15 := 0;
    goto L1;

  anon17_Then:
    goto L15;

  anon22_Then:
    Tmp_15 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_15: int);
  modifies alloc, sdv_compFset, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_15 == 6 || Tmp_15 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_11: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} lastItem: int;
  var {:pointer} nextItem: int;
  var {:scalar} sdv_323: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_749: int;
  var {:pointer} Tmp_751: int;
  var {:scalar} oldIrql_2: int;
  var {:pointer} sdv_328: int;
  var {:pointer} sdv_329: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:pointer} DeviceExtension_11: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_3251: int;
  var vslice_dummy_var_3252: int;
  var vslice_dummy_var_3253: int;
  var vslice_dummy_var_3254: int;

  anon0:
    call {:si_unique_call 1736} vslice_dummy_var_359 := __HAVOC_malloc(4);
    DeviceExtension_11 := actual_DeviceExtension_11;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 1737} Tmp_754 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    call {:si_unique_call 1738} sdv_KeAcquireSpinLock(0, Tmp_754);
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    havoc oldIrql_2;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc vslice_dummy_var_3251;
    call {:si_unique_call 1739} vslice_dummy_var_360 := FreeAsyncRequestContext(DeviceExtension_11, vslice_dummy_var_3251);
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto L12;

  L12:
    call {:si_unique_call 1740} sdv_323 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_323 != 0;
    call {:si_unique_call 1741} sdv_KeReleaseSpinLock(0, oldIrql_2);
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:partition} sdv_323 == 0;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc vslice_dummy_var_3252;
    call {:si_unique_call 1742} sdv_328 := sdv_containing_record(vslice_dummy_var_3252, 0);
    nextItem := sdv_328;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc vslice_dummy_var_3253;
    call {:si_unique_call 1743} sdv_329 := sdv_containing_record(vslice_dummy_var_3253, 0);
    lastItem := sdv_329;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    call {:si_unique_call 1744} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_11));
    call {:si_unique_call 1745} sdv_KeReleaseSpinLock(0, oldIrql_2);
    goto L38;

  L38:
    call {:si_unique_call 1746} Tmp_747, Tmp_748, nextItem, requestIrp_1, Tmp_749, Tmp_751, Tmp_752, currentListItem_1, Tmp_753, vslice_dummy_var_361, vslice_dummy_var_362, vslice_dummy_var_363, vslice_dummy_var_364, vslice_dummy_var_365, vslice_dummy_var_366 := CleanupOrbList#0_loop_L38(Tmp_747, Tmp_748, lastItem, nextItem, requestIrp_1, Tmp_749, Tmp_751, Tmp_752, currentListItem_1, Tmp_753, DeviceExtension_11, CompletionStatus, vslice_dummy_var_361, vslice_dummy_var_362, vslice_dummy_var_363, vslice_dummy_var_364, vslice_dummy_var_365, vslice_dummy_var_366);
    goto L38_last;

  L38_last:
    currentListItem_1 := nextItem;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc nextItem;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1747} vslice_dummy_var_361 := FreeAsyncRequestContext(DeviceExtension_11, currentListItem_1);
    goto L45;

  L45:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} lastItem != currentListItem_1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} lastItem == currentListItem_1;
    goto L1;

  anon26_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1748} vslice_dummy_var_364 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    call {:si_unique_call 1749} vslice_dummy_var_362 := KeCancelTimer(0);
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    goto L62;

  L62:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_747;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    havoc vslice_dummy_var_3254;
    call {:si_unique_call 1750} Sbp2StartPacket#0(vslice_dummy_var_3254, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_747));
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1751} vslice_dummy_var_365 := FreeAsyncRequestContext(DeviceExtension_11, currentListItem_1);
    goto L45;

  anon23_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1752} vslice_dummy_var_366 := FreeAsyncRequestContext(DeviceExtension_11, currentListItem_1);
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    call {:si_unique_call 1753} vslice_dummy_var_363 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_11), 0);
    call {:si_unique_call 1754} sdv_IoCompleteRequest(0, 0);
    goto L45;

  anon22_Then:
    goto L45;

  anon24_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_748;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    goto L62;

  anon25_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_753;
    assume {:nonnull} Tmp_753 != 0;
    assume Tmp_753 > 0;
    goto L62;

  anon27_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_749;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    goto L62;

  anon19_Then:
    goto L12;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_11: int, actual_CompletionStatus: int);
  modifies alloc, sdv_compFset, Mem_T.Busy__KDEVICE_QUEUE, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_11: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} lastItem: int;
  var {:pointer} nextItem: int;
  var {:scalar} sdv_323: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_749: int;
  var {:pointer} Tmp_751: int;
  var {:scalar} oldIrql_2: int;
  var {:pointer} sdv_328: int;
  var {:pointer} sdv_329: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:pointer} DeviceExtension_11: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_3255: int;
  var vslice_dummy_var_3256: int;
  var vslice_dummy_var_3257: int;
  var vslice_dummy_var_3258: int;

  anon0:
    call {:si_unique_call 1755} vslice_dummy_var_367 := __HAVOC_malloc(4);
    DeviceExtension_11 := actual_DeviceExtension_11;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 1756} Tmp_754 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    call {:si_unique_call 1757} sdv_KeAcquireSpinLock(0, Tmp_754);
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    havoc oldIrql_2;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc vslice_dummy_var_3255;
    call {:si_unique_call 1758} vslice_dummy_var_368 := FreeAsyncRequestContext(DeviceExtension_11, vslice_dummy_var_3255);
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto L12;

  L12:
    call {:si_unique_call 1759} sdv_323 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_323 != 0;
    call {:si_unique_call 1760} sdv_KeReleaseSpinLock(0, oldIrql_2);
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:partition} sdv_323 == 0;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc vslice_dummy_var_3256;
    call {:si_unique_call 1761} sdv_328 := sdv_containing_record(vslice_dummy_var_3256, 0);
    nextItem := sdv_328;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    havoc vslice_dummy_var_3257;
    call {:si_unique_call 1762} sdv_329 := sdv_containing_record(vslice_dummy_var_3257, 0);
    lastItem := sdv_329;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    call {:si_unique_call 1763} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_11));
    call {:si_unique_call 1764} sdv_KeReleaseSpinLock(0, oldIrql_2);
    goto L38;

  L38:
    call {:si_unique_call 1765} Tmp_747, Tmp_748, nextItem, requestIrp_1, Tmp_749, Tmp_751, Tmp_752, currentListItem_1, Tmp_753, vslice_dummy_var_369, vslice_dummy_var_370, vslice_dummy_var_371, vslice_dummy_var_372, vslice_dummy_var_373, vslice_dummy_var_374 := CleanupOrbList#1_loop_L38(Tmp_747, Tmp_748, lastItem, nextItem, requestIrp_1, Tmp_749, Tmp_751, Tmp_752, currentListItem_1, Tmp_753, DeviceExtension_11, CompletionStatus, vslice_dummy_var_369, vslice_dummy_var_370, vslice_dummy_var_371, vslice_dummy_var_372, vslice_dummy_var_373, vslice_dummy_var_374);
    goto L38_last;

  L38_last:
    currentListItem_1 := nextItem;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc nextItem;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1766} vslice_dummy_var_369 := FreeAsyncRequestContext(DeviceExtension_11, currentListItem_1);
    goto L45;

  L45:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} lastItem != currentListItem_1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} lastItem == currentListItem_1;
    goto L1;

  anon26_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1767} vslice_dummy_var_372 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    call {:si_unique_call 1768} vslice_dummy_var_370 := KeCancelTimer(0);
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    goto L62;

  L62:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_747;
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    havoc vslice_dummy_var_3258;
    call {:si_unique_call 1769} Sbp2StartPacket#1(vslice_dummy_var_3258, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_747));
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1770} vslice_dummy_var_373 := FreeAsyncRequestContext(DeviceExtension_11, currentListItem_1);
    goto L45;

  anon23_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1771} vslice_dummy_var_374 := FreeAsyncRequestContext(DeviceExtension_11, currentListItem_1);
    assume {:nonnull} DeviceExtension_11 != 0;
    assume DeviceExtension_11 > 0;
    call {:si_unique_call 1772} vslice_dummy_var_371 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_11), 0);
    call {:si_unique_call 1773} sdv_IoCompleteRequest(0, 0);
    goto L45;

  anon22_Then:
    goto L45;

  anon24_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_748;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    goto L62;

  anon25_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_753;
    assume {:nonnull} Tmp_753 != 0;
    assume Tmp_753 > 0;
    goto L62;

  anon27_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_749;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    goto L62;

  anon19_Then:
    goto L12;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_11: int, actual_CompletionStatus: int);
  modifies alloc, sdv_compFset, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_17: int, actual_Irp_13: int, actual_Key_1: int)
{
  var {:pointer} Tmp_838: int;
  var {:pointer} nextEntry_2: int;
  var {:scalar} inserted_1: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} sdv_359: int;
  var {:pointer} queueEntry2_1: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_13: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;

  anon0:
    call {:si_unique_call 1774} vslice_dummy_var_375 := __HAVOC_malloc(4);
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_13 := actual_Irp_13;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_17);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_13)));
    call {:si_unique_call 1775} Tmp_838 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_838 != 0;
    assume Tmp_838 > 0;
    call {:si_unique_call 1776} sdv_KeRaiseIrql(2, Tmp_838);
    assume {:nonnull} Tmp_838 != 0;
    assume Tmp_838 > 0;
    havoc oldIrql_3;
    call {:si_unique_call 1777} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] == 1;
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L24;

  L24:
    call {:si_unique_call 1778} nextEntry_2, sdv_359, queueEntry2_1 := Sbp2StartPacket#0_loop_L24(nextEntry_2, sdv_359, queueEntry2_1, Key_1);
    goto L24_last;

  L24_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1779} sdv_359 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_359;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    goto L25;

  L25:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 1780} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L36;

  L36:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 1781} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} inserted_1 != 0;
    goto L44;

  L44:
    call {:si_unique_call 1782} sdv_KeLowerIrql(oldIrql_3);
    return;

  anon16_Then:
    assume {:partition} inserted_1 == 0;
    assume false;
    return;

  anon15_Then:
    goto L25;

  anon17_Then:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] != 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] := 1;
    inserted_1 := 0;
    goto L36;

  anon13_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] == 1;
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 1783} vslice_dummy_var_376 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L36;

  anon14_Then:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] != 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] := 1;
    inserted_1 := 0;
    goto L36;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_17: int, actual_Irp_13: int, actual_Key_1: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_17: int, actual_Irp_13: int, actual_Key_1: int)
{
  var {:pointer} Tmp_838: int;
  var {:pointer} nextEntry_2: int;
  var {:scalar} inserted_1: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} sdv_359: int;
  var {:pointer} queueEntry2_1: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_13: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;

  anon0:
    call {:si_unique_call 1784} vslice_dummy_var_377 := __HAVOC_malloc(4);
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_13 := actual_Irp_13;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_17);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_13)));
    call {:si_unique_call 1785} Tmp_838 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_838 != 0;
    assume Tmp_838 > 0;
    call {:si_unique_call 1786} sdv_KeRaiseIrql(2, Tmp_838);
    assume {:nonnull} Tmp_838 != 0;
    assume Tmp_838 > 0;
    havoc oldIrql_3;
    call {:si_unique_call 1787} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] == 1;
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L24;

  L24:
    call {:si_unique_call 1788} nextEntry_2, sdv_359, queueEntry2_1 := Sbp2StartPacket#1_loop_L24(nextEntry_2, sdv_359, queueEntry2_1, Key_1);
    goto L24_last;

  L24_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1789} sdv_359 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_359;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    goto L25;

  L25:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 1790} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L36;

  L36:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 1791} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} inserted_1 != 0;
    goto L44;

  L44:
    call {:si_unique_call 1792} sdv_KeLowerIrql(oldIrql_3);
    return;

  anon16_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 1793} Sbp2StartIo#0(DeviceObject_17, Irp_13);
    goto L44;

  anon15_Then:
    goto L25;

  anon17_Then:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] != 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] := 1;
    inserted_1 := 0;
    goto L36;

  anon13_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] == 1;
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 1794} vslice_dummy_var_378 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L36;

  anon14_Then:
    assume {:partition} Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] != 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    Mem_T.Busy__KDEVICE_QUEUE[Busy__KDEVICE_QUEUE(queue_1)] := 1;
    inserted_1 := 0;
    goto L36;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_17: int, actual_Irp_13: int, actual_Key_1: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_3: int) returns (Tmp_200: int)
{
  var {:scalar} rcode: int;
  var {:pointer} nextListItem: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:scalar} sdv_95: int;
  var {:pointer} deviceObject_3: int;
  var {:pointer} sdv_96: int;
  var {:scalar} currentOrbListDepth: int;
  var {:pointer} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:scalar} Tmp_206: int;
  var {:scalar} Tmp_207: int;
  var {:pointer} sdv_99: int;
  var {:pointer} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} tempPointer: int;
  var {:pointer} requestIrp: int;
  var {:scalar} Tmp_210: int;
  var {:scalar} Tmp_212: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} statusBlock: int;
  var {:scalar} initialOrbListDepth: int;
  var {:pointer} Tmp_214: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} Tmp_216: int;
  var {:pointer} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_219: int;
  var {:pointer} sdv_107: int;
  var {:scalar} sdv_108: int;
  var {:pointer} orbContext: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} temp_1: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:scalar} cancelledTimer: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} Tmp_229: int;
  var {:pointer} Tmp_230: int;
  var {:scalar} status_5: int;
  var {:scalar} Tmp_232: int;
  var {:scalar} Tmp_233: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_237: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:pointer} Tmp_240: int;
  var {:pointer} NotificationInfo_3: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_3259: int;
  var vslice_dummy_var_3260: int;
  var vslice_dummy_var_3261: int;
  var vslice_dummy_var_3262: int;
  var vslice_dummy_var_3263: int;

  anon0:
    NotificationInfo_3 := actual_NotificationInfo_3;
    call {:si_unique_call 1795} Tmp_228 := __HAVOC_malloc(64);
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    havoc Tmp_213;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    havoc deviceObject_3;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1796} sdv_99 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_99;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 1797} status_5 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1798} vslice_dummy_var_386 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_200 := 0;
    goto L1;

  L1:
    return;

  anon72_Then:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 1799} Sbp2LoginCompletion#0(NotificationInfo_3, status_5);
    rcode := 0;
    goto L53;

  L53:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1800} vslice_dummy_var_387 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_200 := rcode;
    goto L1;

  anon74_Then:
    goto L46;

  L46:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} 32768 == src;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume false;
    call {:si_unique_call 1801} Sbp2HandleUnsolicited#0(deviceExtension_3, statusBlock);
    rcode := 0;
    return;

  anon90_Then:
    assume {:partition} 32768 != src;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} 49152 == src;
    rcode := 0;
    goto L53;

  anon75_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp_1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} temp_1 > 320;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3259;
    call {:si_unique_call 1802} Sbp2CreateRequestErrorLog(vslice_dummy_var_3259, 0, -1073741434);
    rcode := 7;
    goto L53;

  anon91_Then:
    assume {:partition} 320 >= temp_1;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc tempPointer;
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 1803} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    call {:si_unique_call 1804} sdv_KeReleaseSpinLockFromDpcLevel(0);
    rcode := 0;
    goto L53;

  anon78_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_235;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    havoc requestIrp;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    call {:si_unique_call 1805} vslice_dummy_var_379 := KeCancelTimer(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    cancelledTimer := 1;
    call {:si_unique_call 1806} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L108;

  L108:
    call {:si_unique_call 1807} Tmp_210 := corral_nondet();
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Tmp_210 > 1;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_208;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_240;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_218;
    assume {:nonnull} Tmp_218 != 0;
    assume Tmp_218 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_238;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_205;
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    havoc Tmp_233;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_217;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    havoc vslice_dummy_var_3260;
    call {:si_unique_call 1808} sdv_116 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_3260, Tmp_233);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} sdv_116 != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_216;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    goto L126;

  L126:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_230;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    havoc Tmp_228;
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L115;

  L115:
    call {:si_unique_call 1809} Free1394DataMapping(deviceExtension_3, orbContext);
    call {:si_unique_call 1810} vslice_dummy_var_380 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_209;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_229;
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Tmp_212;
    goto L143;

  L143:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    call {:si_unique_call 1811} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1812} vslice_dummy_var_381 := sdv_RemoveEntryList(0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} cancelledTimer != 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc entry;
    goto L153;

  L153:
    call {:si_unique_call 1813} nextListItem, sdv_96, entry := Sbp2GlobalStatusCallback#0_loop_L153(nextListItem, sdv_96, entry);
    goto L153_last;

  L153_last:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    call {:si_unique_call 1814} sdv_96 := sdv_containing_record(entry, 0);
    nextListItem := sdv_96;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon98_Else_dummy;

  anon98_Else_dummy:
    assume false;
    return;

  anon98_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_223;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3261;
    call {:si_unique_call 1815} vslice_dummy_var_388 := KeSetTimer(0, vslice_dummy_var_3261, 0);
    goto L151;

  L151:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc initialOrbListDepth;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume false;
    call {:si_unique_call 1816} vslice_dummy_var_382 := FreeAsyncRequestContext(deviceExtension_3, orbContext);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    return;

  anon99_Then:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3262;
    call {:si_unique_call 1817} vslice_dummy_var_385 := FreeAsyncRequestContext(deviceExtension_3, vslice_dummy_var_3262);
    goto L218;

  L218:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L187;

  L187:
    call {:si_unique_call 1818} sdv_102 := sdv_IsListEmpty(0);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} sdv_102 != 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1819} vslice_dummy_var_384 := KeSetEvent(PendingOrbEvent__DEVICE_EXTENSION(deviceExtension_3), 0, 0);
    goto L191;

  L191:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc currentOrbListDepth;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 1820} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1821} vslice_dummy_var_389 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), 0);
    call {:si_unique_call 1822} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} initialOrbListDepth > currentOrbListDepth;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume false;
    return;

  anon88_Then:
    assume {:partition} currentOrbListDepth >= initialOrbListDepth;
    goto L207;

  L207:
    rcode := 0;
    goto L53;

  anon87_Then:
    goto L207;

  anon86_Then:
    assume {:partition} sdv_102 == 0;
    goto L191;

  anon100_Then:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L187;

  anon89_Then:
    goto L218;

  anon83_Then:
    assume {:partition} 16384 != src;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 1823} vslice_dummy_var_390 := FreeAsyncRequestContext(deviceExtension_3, orbContext);
    goto L187;

  anon82_Then:
    goto L151;

  anon81_Then:
    assume {:partition} cancelledTimer == 0;
    goto L151;

  anon97_Then:
    Tmp_212 := 0;
    goto L143;

  anon101_Then:
    goto L115;

  anon80_Then:
    assume {:partition} sdv_116 == 0;
    goto L126;

  anon79_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_219;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_232 := 32;
    goto L134;

  L134:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 1824} sdv_RtlCopyMemory(0, 0, Tmp_232);
    goto L115;

  anon103_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    havoc Tmp_232;
    goto L134;

  anon102_Then:
    goto L115;

  anon96_Then:
    goto L115;

  anon95_Then:
    goto L115;

  anon94_Then:
    assume {:partition} 1 >= Tmp_210;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_206;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Tmp_206 == 4096;
    goto L230;

  L230:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_226;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_239;
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_204;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_234;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    goto L115;

  anon104_Then:
    assume {:partition} Tmp_206 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_207;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} Tmp_207 != 8192;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    goto L115;

  anon105_Then:
    assume {:partition} Tmp_207 == 8192;
    goto L230;

  anon93_Then:
    cancelledTimer := 0;
    call {:si_unique_call 1825} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L108;

  anon77_Then:
    goto L83;

  L83:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3263;
    call {:si_unique_call 1826} Sbp2CreateRequestErrorLog(vslice_dummy_var_3263, 0, -1073741434);
    rcode := 7;
    goto L53;

  anon92_Then:
    assume {:partition} orbContext == 0;
    goto L83;

  anon76_Then:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1827} vslice_dummy_var_391 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_200 := 0;
    goto L1;

  anon73_Then:
    goto L46;

  anon71_Then:
    Tmp_200 := 0;
    goto L1;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_3: int) returns (Tmp_200: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, sdv_compFset, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} Tmp_200 == 0 || Tmp_200 == 7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_3: int) returns (Tmp_200: int)
{
  var {:scalar} rcode: int;
  var {:pointer} nextListItem: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:scalar} sdv_95: int;
  var {:pointer} deviceObject_3: int;
  var {:pointer} sdv_96: int;
  var {:scalar} currentOrbListDepth: int;
  var {:pointer} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:scalar} Tmp_206: int;
  var {:scalar} Tmp_207: int;
  var {:pointer} sdv_99: int;
  var {:pointer} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} tempPointer: int;
  var {:pointer} requestIrp: int;
  var {:scalar} Tmp_210: int;
  var {:scalar} Tmp_212: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} statusBlock: int;
  var {:scalar} initialOrbListDepth: int;
  var {:pointer} Tmp_214: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} Tmp_216: int;
  var {:pointer} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_219: int;
  var {:pointer} sdv_107: int;
  var {:scalar} sdv_108: int;
  var {:pointer} orbContext: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} temp_1: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:scalar} cancelledTimer: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} Tmp_229: int;
  var {:pointer} Tmp_230: int;
  var {:scalar} status_5: int;
  var {:scalar} Tmp_232: int;
  var {:scalar} Tmp_233: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_237: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:pointer} Tmp_240: int;
  var {:pointer} NotificationInfo_3: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_3264: int;
  var vslice_dummy_var_3265: int;
  var vslice_dummy_var_3266: int;
  var vslice_dummy_var_3267: int;
  var vslice_dummy_var_3268: int;
  var vslice_dummy_var_3269: int;
  var vslice_dummy_var_3270: int;
  var vslice_dummy_var_3271: int;

  anon0:
    NotificationInfo_3 := actual_NotificationInfo_3;
    call {:si_unique_call 1828} Tmp_228 := __HAVOC_malloc(64);
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    havoc Tmp_213;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    havoc deviceObject_3;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1829} sdv_99 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_99;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 1830} status_5 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1831} vslice_dummy_var_401 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_200 := 0;
    goto L1;

  L1:
    return;

  anon72_Then:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 1832} Sbp2LoginCompletion#1(NotificationInfo_3, status_5);
    rcode := 0;
    goto L53;

  L53:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1833} vslice_dummy_var_402 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_200 := rcode;
    goto L1;

  anon74_Then:
    goto L46;

  L46:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} 32768 == src;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1834} vslice_dummy_var_392 := Sbp2AccessRegister#0(deviceExtension_3, Reserved__DEVICE_EXTENSION(deviceExtension_3), 1040);
    call {:si_unique_call 1835} Sbp2HandleUnsolicited#1(deviceExtension_3, statusBlock);
    rcode := 0;
    goto L53;

  anon90_Then:
    assume {:partition} 32768 != src;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} 49152 == src;
    rcode := 0;
    goto L53;

  anon75_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp_1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} temp_1 > 320;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3264;
    call {:si_unique_call 1836} Sbp2CreateRequestErrorLog(vslice_dummy_var_3264, 0, -1073741434);
    rcode := 7;
    goto L53;

  anon91_Then:
    assume {:partition} 320 >= temp_1;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc tempPointer;
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 1837} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    call {:si_unique_call 1838} sdv_KeReleaseSpinLockFromDpcLevel(0);
    rcode := 0;
    goto L53;

  anon78_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_235;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    havoc requestIrp;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    call {:si_unique_call 1839} vslice_dummy_var_393 := KeCancelTimer(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    cancelledTimer := 1;
    call {:si_unique_call 1840} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L108;

  L108:
    call {:si_unique_call 1841} Tmp_210 := corral_nondet();
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Tmp_210 > 1;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_208;
    assume {:nonnull} Tmp_208 != 0;
    assume Tmp_208 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_240;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_218;
    assume {:nonnull} Tmp_218 != 0;
    assume Tmp_218 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_238;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_205;
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    havoc Tmp_233;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_217;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    havoc vslice_dummy_var_3265;
    call {:si_unique_call 1842} sdv_116 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_3265, Tmp_233);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} sdv_116 != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_216;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    goto L126;

  L126:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_230;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    havoc Tmp_228;
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L115;

  L115:
    call {:si_unique_call 1843} Free1394DataMapping(deviceExtension_3, orbContext);
    call {:si_unique_call 1844} vslice_dummy_var_394 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_209;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_229;
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Tmp_212;
    goto L143;

  L143:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    call {:si_unique_call 1845} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1846} vslice_dummy_var_395 := sdv_RemoveEntryList(0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} cancelledTimer != 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc entry;
    goto L153;

  L153:
    call {:si_unique_call 1847} nextListItem, sdv_96, entry := Sbp2GlobalStatusCallback#1_loop_L153(nextListItem, sdv_96, entry);
    goto L153_last;

  L153_last:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    call {:si_unique_call 1848} sdv_96 := sdv_containing_record(entry, 0);
    nextListItem := sdv_96;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon98_Else_dummy;

  anon98_Else_dummy:
    assume false;
    return;

  anon98_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_223;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3266;
    call {:si_unique_call 1849} vslice_dummy_var_403 := KeSetTimer(0, vslice_dummy_var_3266, 0);
    goto L151;

  L151:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc initialOrbListDepth;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1850} vslice_dummy_var_396 := Sbp2AccessRegister#0(deviceExtension_3, Reserved__DEVICE_EXTENSION(deviceExtension_3), 1026);
    call {:si_unique_call 1851} vslice_dummy_var_397 := FreeAsyncRequestContext(deviceExtension_3, orbContext);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3267;
    call {:si_unique_call 1852} vslice_dummy_var_398 := FreeAsyncRequestContext(deviceExtension_3, vslice_dummy_var_3267);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L176;

  L176:
    call {:si_unique_call 1853} sdv_95 := sdv_IsListEmpty(0);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_95 != 0;
    goto L187;

  L187:
    call {:si_unique_call 1854} sdv_102 := sdv_IsListEmpty(0);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} sdv_102 != 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1855} vslice_dummy_var_399 := KeSetEvent(PendingOrbEvent__DEVICE_EXTENSION(deviceExtension_3), 0, 0);
    goto L191;

  L191:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc currentOrbListDepth;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 1856} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 1857} vslice_dummy_var_404 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), 0);
    call {:si_unique_call 1858} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} initialOrbListDepth > currentOrbListDepth;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3268;
    call {:si_unique_call 1859} Sbp2StartNextPacketByKey#0(deviceObject_3, vslice_dummy_var_3268);
    goto L207;

  L207:
    rcode := 0;
    goto L53;

  anon88_Then:
    assume {:partition} currentOrbListDepth >= initialOrbListDepth;
    goto L207;

  anon87_Then:
    goto L207;

  anon86_Then:
    assume {:partition} sdv_102 == 0;
    goto L191;

  anon85_Then:
    assume {:partition} sdv_95 == 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3269;
    call {:si_unique_call 1860} sdv_107 := sdv_containing_record(vslice_dummy_var_3269, 0);
    orbContext := sdv_107;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 1861} vslice_dummy_var_405 := Sbp2AccessRegister#0(deviceExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(orbContext), 1028);
    goto L187;

  anon84_Then:
    goto L176;

  anon99_Then:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3270;
    call {:si_unique_call 1862} vslice_dummy_var_400 := FreeAsyncRequestContext(deviceExtension_3, vslice_dummy_var_3270);
    goto L218;

  L218:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L187;

  anon100_Then:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L187;

  anon89_Then:
    goto L218;

  anon83_Then:
    assume {:partition} 16384 != src;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 1863} vslice_dummy_var_406 := FreeAsyncRequestContext(deviceExtension_3, orbContext);
    goto L187;

  anon82_Then:
    goto L151;

  anon81_Then:
    assume {:partition} cancelledTimer == 0;
    goto L151;

  anon97_Then:
    Tmp_212 := 0;
    goto L143;

  anon101_Then:
    goto L115;

  anon80_Then:
    assume {:partition} sdv_116 == 0;
    goto L126;

  anon79_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_219;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_232 := 32;
    goto L134;

  L134:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 1864} sdv_RtlCopyMemory(0, 0, Tmp_232);
    goto L115;

  anon103_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    havoc Tmp_232;
    goto L134;

  anon102_Then:
    goto L115;

  anon96_Then:
    goto L115;

  anon95_Then:
    goto L115;

  anon94_Then:
    assume {:partition} 1 >= Tmp_210;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_206;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Tmp_206 == 4096;
    goto L230;

  L230:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_226;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_239;
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_204;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_234;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    goto L115;

  anon104_Then:
    assume {:partition} Tmp_206 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_207;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} Tmp_207 != 8192;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    goto L115;

  anon105_Then:
    assume {:partition} Tmp_207 == 8192;
    goto L230;

  anon93_Then:
    cancelledTimer := 0;
    call {:si_unique_call 1865} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L108;

  anon77_Then:
    goto L83;

  L83:
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_3271;
    call {:si_unique_call 1866} Sbp2CreateRequestErrorLog(vslice_dummy_var_3271, 0, -1073741434);
    rcode := 7;
    goto L53;

  anon92_Then:
    assume {:partition} orbContext == 0;
    goto L83;

  anon76_Then:
    assume {:nonnull} NotificationInfo_3 != 0;
    assume NotificationInfo_3 > 0;
    call {:si_unique_call 1867} vslice_dummy_var_407 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_200 := 0;
    goto L1;

  anon73_Then:
    goto L46;

  anon71_Then:
    Tmp_200 := 0;
    goto L1;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_3: int) returns (Tmp_200: int);
  modifies alloc, sdv_compFset, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_200 == 0 || Tmp_200 == 7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#0(actual_DeviceExtension_6: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_291: int;
  var {:scalar} sdv_154: int;
  var {:pointer} senseBuffer_1: int;
  var {:scalar} state: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_3272: int;

  anon0:
    call {:si_unique_call 1868} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1869} vslice_dummy_var_408 := __HAVOC_malloc(4);
    call {:si_unique_call 1870} state := __HAVOC_malloc(8);
    DeviceExtension_6 := actual_DeviceExtension_6;
    StatusFifo := actual_StatusFifo;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 1871} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc Tmp_291;
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1872} sdv_154 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_154 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state)] := 1;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc vslice_dummy_var_3272;
    call {:si_unique_call 1873} vslice_dummy_var_409 := PoRequestPowerIrp#0(vslice_dummy_var_3272, 2, state, 0, 0, 0);
    goto L1;

  anon16_Then:
    goto L1;

  anon15_Then:
    goto L1;

  anon14_Then:
    assume {:partition} sdv_154 == 0;
    goto L1;

  anon18_Then:
    goto L1;

  anon13_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#0(actual_DeviceExtension_6: int, actual_StatusFifo: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#1(actual_DeviceExtension_6: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_291: int;
  var {:scalar} sdv_154: int;
  var {:pointer} senseBuffer_1: int;
  var {:scalar} state: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_3273: int;

  anon0:
    call {:si_unique_call 1874} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1875} vslice_dummy_var_410 := __HAVOC_malloc(4);
    call {:si_unique_call 1876} state := __HAVOC_malloc(8);
    DeviceExtension_6 := actual_DeviceExtension_6;
    StatusFifo := actual_StatusFifo;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 1877} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc Tmp_291;
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1878} sdv_154 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_154 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    Mem_T.DeviceState__POWER_STATE[DeviceState__POWER_STATE(state)] := 1;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc vslice_dummy_var_3273;
    call {:si_unique_call 1879} vslice_dummy_var_411 := PoRequestPowerIrp#1(vslice_dummy_var_3273, 2, state, 0, 0, 0);
    goto L1;

  anon16_Then:
    goto L1;

  anon15_Then:
    goto L1;

  anon14_Then:
    assume {:partition} sdv_154 == 0;
    goto L1;

  anon18_Then:
    goto L1;

  anon13_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#1(actual_DeviceExtension_6: int, actual_StatusFifo: int);
  modifies alloc, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, LockDepth, sdv_compFset;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int)
{
  var {:pointer} Tmp_844: int;
  var {:pointer} Tmp_845: int;
  var {:pointer} Tmp_846: int;
  var {:pointer} Tmp_847: int;
  var {:pointer} Tmp_848: int;
  var {:pointer} Tmp_849: int;
  var {:pointer} Tmp_850: int;
  var {:pointer} Tmp_851: int;
  var {:pointer} Tmp_852: int;
  var {:pointer} Tmp_853: int;
  var {:pointer} Tmp_854: int;
  var {:pointer} Tmp_855: int;
  var {:pointer} Tmp_856: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} Tmp_859: int;
  var {:pointer} Tmp_860: int;
  var {:pointer} Tmp_861: int;
  var {:pointer} Tmp_862: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} Tmp_864: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_866: int;
  var {:pointer} Tmp_867: int;
  var {:pointer} srb_1: int;
  var {:pointer} packet_11: int;
  var {:scalar} status_26: int;
  var {:pointer} Tmp_868: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_869: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} Tmp_870: int;
  var {:pointer} Tmp_871: int;
  var {:pointer} Tmp_872: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_3274: int;
  var vslice_dummy_var_3275: int;

  anon0:
    call {:si_unique_call 1880} vslice_dummy_var_412 := __HAVOC_malloc(4);
    call {:si_unique_call 1881} packet_11 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_850;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    havoc deviceExtension_7;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc routine_2;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L20;

  L20:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_859;
    assume {:nonnull} Tmp_859 != 0;
    assume Tmp_859 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_856;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_863;
    assume {:nonnull} Tmp_856 != 0;
    assume Tmp_856 > 0;
    assume {:nonnull} Tmp_863 != 0;
    assume Tmp_863 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_871;
    assume {:nonnull} Tmp_871 != 0;
    assume Tmp_871 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_861;
    assume {:nonnull} Tmp_861 != 0;
    assume Tmp_861 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_862;
    assume {:nonnull} Tmp_862 != 0;
    assume Tmp_862 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_869;
    assume {:nonnull} Tmp_869 != 0;
    assume Tmp_869 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_857;
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_852;
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_870;
    assume {:nonnull} Tmp_870 != 0;
    assume Tmp_870 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_854;
    assume {:nonnull} Tmp_854 != 0;
    assume Tmp_854 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_848;
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_844;
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_855;
    assume {:nonnull} Tmp_855 != 0;
    assume Tmp_855 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_866;
    assume {:nonnull} Tmp_866 != 0;
    assume Tmp_866 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_851;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_846;
    assume {:nonnull} Tmp_851 != 0;
    assume Tmp_851 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_860;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_860 != 0;
    assume Tmp_860 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_864;
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume routine_2 == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_26 != 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_3274;
    call {:si_unique_call 1882} DeAllocateIrpAndIrb(deviceExtension_7, vslice_dummy_var_3274);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_1;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1883} vslice_dummy_var_414 := FreeAsyncRequestContext(deviceExtension_7, CallbackContext);
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc Tmp_867;
    assume {:nonnull} Tmp_867 != 0;
    assume Tmp_867 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc Tmp_847;
    assume {:nonnull} Tmp_847 != 0;
    assume Tmp_847 > 0;
    call {:si_unique_call 1884} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume false;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 1885} vslice_dummy_var_413 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_7), 0);
    return;

  anon21_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:partition} status_26 == 0;
    goto L1;

  anon20_Then:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_872;
    assume {:nonnull} Tmp_872 != 0;
    assume Tmp_872 > 0;
    goto L27;

  anon19_Then:
    call {:si_unique_call 1886} AllocateIrpAndIrb(deviceExtension_7, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    bDirectCall := 1;
    goto L20;

  anon17_Then:
    goto L1;

  anon18_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_868;
    assume {:nonnull} Tmp_868 != 0;
    assume Tmp_868 > 0;
    havoc Tmp_853;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_849;
    assume {:nonnull} Tmp_849 != 0;
    assume Tmp_849 > 0;
    havoc Tmp_845;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_845 != 0;
    assume Tmp_845 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_3275;
    call {:si_unique_call 1887} DeAllocateIrpAndIrb(deviceExtension_7, vslice_dummy_var_3275);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1888} Sbp2InitializeOrb(deviceExtension_7, CallbackContext);
    assume false;
    return;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int);
  modifies alloc, sdv_compFset, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int)
{
  var {:pointer} Tmp_844: int;
  var {:pointer} Tmp_845: int;
  var {:pointer} Tmp_846: int;
  var {:pointer} Tmp_847: int;
  var {:pointer} Tmp_848: int;
  var {:pointer} Tmp_849: int;
  var {:pointer} Tmp_850: int;
  var {:pointer} Tmp_851: int;
  var {:pointer} Tmp_852: int;
  var {:pointer} Tmp_853: int;
  var {:pointer} Tmp_854: int;
  var {:pointer} Tmp_855: int;
  var {:pointer} Tmp_856: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} Tmp_859: int;
  var {:pointer} Tmp_860: int;
  var {:pointer} Tmp_861: int;
  var {:pointer} Tmp_862: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} Tmp_864: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_866: int;
  var {:pointer} Tmp_867: int;
  var {:pointer} srb_1: int;
  var {:pointer} packet_11: int;
  var {:scalar} status_26: int;
  var {:pointer} Tmp_868: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_869: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} Tmp_870: int;
  var {:pointer} Tmp_871: int;
  var {:pointer} Tmp_872: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_3276: int;
  var vslice_dummy_var_3277: int;
  var vslice_dummy_var_3278: int;

  anon0:
    call {:si_unique_call 1889} vslice_dummy_var_415 := __HAVOC_malloc(4);
    call {:si_unique_call 1890} packet_11 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_850;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    havoc deviceExtension_7;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc routine_2;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L20;

  L20:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_859;
    assume {:nonnull} Tmp_859 != 0;
    assume Tmp_859 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_856;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_863;
    assume {:nonnull} Tmp_856 != 0;
    assume Tmp_856 > 0;
    assume {:nonnull} Tmp_863 != 0;
    assume Tmp_863 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_871;
    assume {:nonnull} Tmp_871 != 0;
    assume Tmp_871 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_861;
    assume {:nonnull} Tmp_861 != 0;
    assume Tmp_861 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_862;
    assume {:nonnull} Tmp_862 != 0;
    assume Tmp_862 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_869;
    assume {:nonnull} Tmp_869 != 0;
    assume Tmp_869 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_857;
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_852;
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_870;
    assume {:nonnull} Tmp_870 != 0;
    assume Tmp_870 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_854;
    assume {:nonnull} Tmp_854 != 0;
    assume Tmp_854 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_848;
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_844;
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_855;
    assume {:nonnull} Tmp_855 != 0;
    assume Tmp_855 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_866;
    assume {:nonnull} Tmp_866 != 0;
    assume Tmp_866 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_851;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_846;
    assume {:nonnull} Tmp_851 != 0;
    assume Tmp_851 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_860;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_860 != 0;
    assume Tmp_860 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_864;
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume routine_2 == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_26 != 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_3276;
    call {:si_unique_call 1891} DeAllocateIrpAndIrb(deviceExtension_7, vslice_dummy_var_3276);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_1;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1892} vslice_dummy_var_417 := FreeAsyncRequestContext(deviceExtension_7, CallbackContext);
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc Tmp_867;
    assume {:nonnull} Tmp_867 != 0;
    assume Tmp_867 > 0;
    assume {:nonnull} srb_1 != 0;
    assume srb_1 > 0;
    havoc Tmp_847;
    assume {:nonnull} Tmp_847 != 0;
    assume Tmp_847 > 0;
    call {:si_unique_call 1893} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc vslice_dummy_var_3277;
    call {:si_unique_call 1894} Sbp2StartNextPacketByKey#0(vslice_dummy_var_3277, 0);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    call {:si_unique_call 1895} vslice_dummy_var_416 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_7), 0);
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  anon16_Then:
    assume {:partition} status_26 == 0;
    goto L1;

  anon20_Then:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_872;
    assume {:nonnull} Tmp_872 != 0;
    assume Tmp_872 > 0;
    goto L27;

  anon19_Then:
    call {:si_unique_call 1896} AllocateIrpAndIrb(deviceExtension_7, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    bDirectCall := 1;
    goto L20;

  anon17_Then:
    goto L1;

  anon18_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_868;
    assume {:nonnull} Tmp_868 != 0;
    assume Tmp_868 > 0;
    havoc Tmp_853;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_849;
    assume {:nonnull} Tmp_849 != 0;
    assume Tmp_849 > 0;
    havoc Tmp_845;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_845 != 0;
    assume Tmp_845 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_3278;
    call {:si_unique_call 1897} DeAllocateIrpAndIrb(deviceExtension_7, vslice_dummy_var_3278);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 1898} Sbp2InitializeOrb(deviceExtension_7, CallbackContext);
    call {:si_unique_call 1899} Sbp2InsertTailList#0(deviceExtension_7, CallbackContext);
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_20: int, actual_CallbackContext_2: int) returns (Tmp_1001: int)
{
  var {:pointer} CallbackContext_2: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 1900} Sbp2AllocComplete#0(CallbackContext_2);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    Tmp_1001 := -1073741670;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1001 := 259;
    goto L1;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_20: int, actual_CallbackContext_2: int) returns (Tmp_1001: int);
  modifies alloc, sdv_compFset, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} Tmp_1001 == -1073741670 || Tmp_1001 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_20: int, actual_CallbackContext_2: int) returns (Tmp_1001: int)
{
  var {:pointer} CallbackContext_2: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 1901} Sbp2AllocComplete#1(CallbackContext_2);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    Tmp_1001 := -1073741670;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1001 := 259;
    goto L1;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_20: int, actual_CallbackContext_2: int) returns (Tmp_1001: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_1001 == -1073741670 || Tmp_1001 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_DeviceExtension_8: int) returns (Tmp_352: int)
{
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} sdv_167: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} sdv_168: int;
  var {:scalar} sdv_169: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} sdv_171: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} sdv_172: int;
  var {:pointer} sdv_173: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_362: int;
  var {:scalar} sdv_174: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_11: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:pointer} DeviceExtension_8: int;

  anon0:
    call {:si_unique_call 1902} packet_5 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    call {:si_unique_call 1903} AllocateIrpAndIrb(DeviceExtension_8, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_358;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    assume false;
    return;

  anon11_Then:
    Tmp_352 := -1073741670;
    goto L1;

  L1:
    return;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_DeviceExtension_8: int) returns (Tmp_352: int);
  modifies alloc, sdv_compFset;
  free ensures {:va_keep} Tmp_352 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_DeviceExtension_8: int) returns (Tmp_352: int)
{
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} sdv_167: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} sdv_168: int;
  var {:scalar} sdv_169: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} sdv_171: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} sdv_172: int;
  var {:pointer} sdv_173: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_362: int;
  var {:scalar} sdv_174: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_11: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:pointer} DeviceExtension_8: int;
  var vslice_dummy_var_3279: int;
  var vslice_dummy_var_3280: int;
  var vslice_dummy_var_3281: int;
  var vslice_dummy_var_3282: int;
  var vslice_dummy_var_3283: int;

  anon0:
    call {:si_unique_call 1904} packet_5 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    call {:si_unique_call 1905} AllocateIrpAndIrb(DeviceExtension_8, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_358;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_3279;
    call {:si_unique_call 1906} status_11 := Sbp2SendRequest#0(DeviceExtension_8, vslice_dummy_var_3279, 2);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_11 < 0;
    goto L58;

  L58:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_3280;
    call {:si_unique_call 1907} DeAllocateIrpAndIrb(DeviceExtension_8, vslice_dummy_var_3280);
    Tmp_352 := status_11;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} 0 <= status_11;
    call {:si_unique_call 1908} Tmp_355 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    call {:si_unique_call 1909} sdv_KeAcquireSpinLock(0, Tmp_355);
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    havoc oldIrql_1;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_363;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    call {:si_unique_call 1910} sdv_KeReleaseSpinLock(0, oldIrql_1);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_361;
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_356;
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_3281;
    call {:si_unique_call 1911} status_11 := Sbp2SendRequest#0(DeviceExtension_8, vslice_dummy_var_3281, 2);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_11 < 0;
    goto L58;

  anon13_Then:
    assume {:partition} 0 <= status_11;
    call {:si_unique_call 1912} Tmp_355 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    call {:si_unique_call 1913} sdv_KeAcquireSpinLock(0, Tmp_355);
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    havoc oldIrql_1;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_360;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    call {:si_unique_call 1914} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 1915} Tmp_355 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    call {:si_unique_call 1916} sdv_KeAcquireSpinLock(0, Tmp_355);
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    havoc oldIrql_1;
    call {:si_unique_call 1917} sdv_171 := sdv_IsListEmpty(0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_171 != 0;
    goto L55;

  L55:
    call {:si_unique_call 1918} sdv_KeReleaseSpinLock(0, oldIrql_1);
    goto L58;

  anon14_Then:
    assume {:partition} sdv_171 == 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    havoc vslice_dummy_var_3282;
    call {:si_unique_call 1919} sdv_173 := sdv_containing_record(vslice_dummy_var_3282, 0);
    nextListItem_1 := sdv_173;
    goto L63;

  L63:
    call {:si_unique_call 1920} nextListItem_1, Tmp_353, Tmp_359, sdv_168, currentListItem, Tmp_362, Tmp_364, Tmp_365 := Sbp2UpdateNodeInformation#1_loop_L63(nextListItem_1, Tmp_353, sdv_167, Tmp_359, sdv_168, sdv_169, sdv_172, currentListItem, Tmp_362, sdv_174, Tmp_364, Tmp_365, DeviceExtension_8);
    goto L63_last;

  L63_last:
    currentListItem := nextListItem_1;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_365;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_364;
    assume {:nonnull} Tmp_364 != 0;
    assume Tmp_364 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_362;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_353;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_359;
    assume {:nonnull} Tmp_359 != 0;
    assume Tmp_359 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc nextListItem_1;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    havoc vslice_dummy_var_3283;
    call {:si_unique_call 1921} sdv_168 := sdv_containing_record(vslice_dummy_var_3283, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} currentListItem != sdv_168;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} currentListItem == sdv_168;
    goto L55;

  anon11_Then:
    Tmp_352 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_DeviceExtension_8: int) returns (Tmp_352: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_DeviceExtension_5: int, actual_Type_1: int) returns (Tmp_287: int)
{
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_135: int;
  var {:scalar} sdv_137: int;
  var {:pointer} Tmp_288: int;
  var {:pointer} Tmp_289: int;
  var {:scalar} sdv_140: int;
  var {:scalar} sdv_142: int;
  var {:scalar} sdv_146: int;
  var {:scalar} sdv_147: int;
  var {:scalar} sdv_148: int;
  var {:scalar} sdv_149: int;
  var {:scalar} sdv_150: int;
  var {:pointer} Tmp_290: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_151: int;
  var {:scalar} status_8: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} DeviceExtension_5: int;
  var {:scalar} Type_1: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;

  anon0:
    call {:si_unique_call 1922} waitValue_2 := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    Type_1 := actual_Type_1;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_287 := -1073741632;
    goto L1;

  L1:
    return;

  anon41_Then:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sbpRequest_1 != 0;
    call {:si_unique_call 1923} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Type_1 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Type_1 != 1;
    call {:si_unique_call 1924} status_8 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_8 >= 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc Tmp_289;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 1925} sdv_150 := sdv_KeGetCurrentIrql();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} 2 > sdv_150;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1926} vslice_dummy_var_422 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(DeviceExtension_5));
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume false;
    return;

  anon33_Then:
    assume {:partition} sdv_150 >= 2;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume false;
    return;

  anon32_Then:
    assume {:partition} 0 > status_8;
    Tmp_287 := status_8;
    goto L1;

  anon40_Then:
    assume {:partition} Type_1 == 1;
    queryOrb := sbpRequest_1;
    call {:si_unique_call 1927} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc Tmp_288;
    assume {:nonnull} Tmp_288 != 0;
    assume Tmp_288 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1928} vslice_dummy_var_421 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(DeviceExtension_5));
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume false;
    return;

  anon42_Then:
    assume {:partition} Type_1 == 0;
    call {:si_unique_call 1929} status_8 := Sbp2DoLogin#0(DeviceExtension_5, Type_1);
    Tmp_287 := status_8;
    goto L1;

  anon29_Then:
    assume {:partition} sbpRequest_1 == 0;
    Tmp_287 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_DeviceExtension_5: int, actual_Type_1: int) returns (Tmp_287: int);
  modifies alloc, LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_287 == -1073741632 || Tmp_287 == -1073741823 || Tmp_287 == -1073741738 || Tmp_287 == 0 || Tmp_287 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_DeviceExtension_5: int, actual_Type_1: int) returns (Tmp_287: int)
{
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_135: int;
  var {:scalar} sdv_137: int;
  var {:pointer} Tmp_288: int;
  var {:pointer} Tmp_289: int;
  var {:scalar} sdv_140: int;
  var {:scalar} sdv_142: int;
  var {:scalar} sdv_146: int;
  var {:scalar} sdv_147: int;
  var {:scalar} sdv_148: int;
  var {:scalar} sdv_149: int;
  var {:scalar} sdv_150: int;
  var {:pointer} Tmp_290: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_151: int;
  var {:scalar} status_8: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} DeviceExtension_5: int;
  var {:scalar} Type_1: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;

  anon0:
    call {:si_unique_call 1930} waitValue_2 := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    Type_1 := actual_Type_1;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_287 := -1073741632;
    goto L1;

  L1:
    return;

  anon41_Then:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sbpRequest_1 != 0;
    call {:si_unique_call 1931} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Type_1 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Type_1 != 1;
    call {:si_unique_call 1932} status_8 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_8 >= 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc Tmp_289;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 1933} sdv_150 := sdv_KeGetCurrentIrql();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} 2 > sdv_150;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1934} vslice_dummy_var_427 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(DeviceExtension_5));
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1935} status_8 := Sbp2AccessRegister#0(DeviceExtension_5, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(DeviceExtension_5)), 256);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_8 >= 0;
    call {:si_unique_call 1936} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_8 == 258;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1937} vslice_dummy_var_424 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_5), 0);
    Tmp_287 := -1073741823;
    goto L1;

  anon35_Then:
    assume {:partition} status_8 != 258;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_8 != 0;
    goto L133;

  L133:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1938} vslice_dummy_var_425 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_5), 0);
    Tmp_287 := status_8;
    goto L1;

  anon36_Then:
    assume {:partition} status_8 == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} 3 == Type_1;
    call {:si_unique_call 1939} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    call {:si_unique_call 1940} sdv_KeAcquireSpinLock(0, Tmp_290);
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc cIrql_1;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc status_8;
    goto L141;

  L141:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_8 >= 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto L143;

  L143:
    call {:si_unique_call 1941} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L133;

  anon39_Then:
    assume {:partition} 0 > status_8;
    goto L143;

  anon38_Then:
    goto L141;

  anon37_Then:
    assume {:partition} 3 != Type_1;
    goto L133;

  anon34_Then:
    assume {:partition} 0 > status_8;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1942} vslice_dummy_var_423 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_5), 0);
    Tmp_287 := status_8;
    goto L1;

  anon33_Then:
    assume {:partition} sdv_150 >= 2;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1943} status_8 := Sbp2AccessRegister#0(DeviceExtension_5, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(DeviceExtension_5)), 1024);
    goto L133;

  anon32_Then:
    assume {:partition} 0 > status_8;
    Tmp_287 := status_8;
    goto L1;

  anon40_Then:
    assume {:partition} Type_1 == 1;
    queryOrb := sbpRequest_1;
    call {:si_unique_call 1944} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    havoc Tmp_288;
    assume {:nonnull} Tmp_288 != 0;
    assume Tmp_288 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1945} vslice_dummy_var_426 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(DeviceExtension_5));
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1946} status_8 := Sbp2AccessRegister#0(DeviceExtension_5, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(DeviceExtension_5)), 256);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_8 >= 0;
    call {:si_unique_call 1947} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_8 == 258;
    Tmp_287 := -1073741823;
    goto L1;

  anon31_Then:
    assume {:partition} status_8 != 258;
    Tmp_287 := status_8;
    goto L1;

  anon30_Then:
    assume {:partition} 0 > status_8;
    Tmp_287 := status_8;
    goto L1;

  anon42_Then:
    assume {:partition} Type_1 == 0;
    call {:si_unique_call 1948} status_8 := Sbp2DoLogin#1(DeviceExtension_5, Type_1);
    Tmp_287 := status_8;
    goto L1;

  anon29_Then:
    assume {:partition} sbpRequest_1 == 0;
    Tmp_287 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_DeviceExtension_5: int, actual_Type_1: int) returns (Tmp_287: int);
  modifies alloc, sdv_compFset, LockDepth, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension: int, actual_Type: int) returns (Tmp_190: int)
{
  var {:pointer} Tmp_191: int;
  var {:pointer} Tmp_192: int;
  var {:scalar} waitValue: int;
  var {:scalar} sdv_83: int;
  var {:pointer} Tmp_195: int;
  var {:scalar} sdv_84: int;
  var {:scalar} Tmp_196: int;
  var {:pointer} Tmp_197: int;
  var {:scalar} sdv_86: int;
  var {:scalar} sdv_87: int;
  var {:pointer} fdoExtension: int;
  var {:scalar} sdv_89: int;
  var {:scalar} temp: int;
  var {:scalar} sdv_90: int;
  var {:scalar} sdv_91: int;
  var {:pointer} loginOrb: int;
  var {:scalar} cIrql: int;
  var {:scalar} sdv_92: int;
  var {:scalar} status_4: int;
  var {:pointer} sbpRequest: int;
  var {:pointer} Tmp_199: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} Type: int;
  var boogieTmp: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_3284: int;

  anon0:
    call {:si_unique_call 1949} waitValue := __HAVOC_malloc(20);
    PdoExtension := actual_PdoExtension;
    Type := actual_Type;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc sbpRequest;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_195;
    assume {:nonnull} Tmp_195 != 0;
    assume Tmp_195 > 0;
    havoc fdoExtension;
    loginOrb := sbpRequest;
    call {:si_unique_call 1950} Tmp_197 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    call {:si_unique_call 1951} sdv_KeAcquireSpinLock(0, Tmp_197);
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    havoc cIrql;
    call {:si_unique_call 1952} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1953} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1954} sdv_KeReleaseSpinLock(0, cIrql);
    Tmp_190 := 259;
    goto L1;

  L1:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1955} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1956} sdv_KeReleaseSpinLock(0, cIrql);
    call {:si_unique_call 1957} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L46;

  L46:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L45;

  L45:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_192;
    assume {:nonnull} Tmp_192 != 0;
    assume Tmp_192 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1958} boogieTmp := corral_nondet();
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3284;
    call {:si_unique_call 1959} vslice_dummy_var_429 := KeSetTimer(0, vslice_dummy_var_3284, 0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume false;
    return;

  anon43_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1960} vslice_dummy_var_428 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension));
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume false;
    return;

  anon41_Then:
    goto L45;

  anon42_Then:
    goto L46;

  anon31_Then:
    goto L20;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension: int, actual_Type: int) returns (Tmp_190: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_190 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension: int, actual_Type: int) returns (Tmp_190: int)
{
  var {:pointer} Tmp_191: int;
  var {:pointer} Tmp_192: int;
  var {:scalar} waitValue: int;
  var {:scalar} sdv_83: int;
  var {:pointer} Tmp_195: int;
  var {:scalar} sdv_84: int;
  var {:scalar} Tmp_196: int;
  var {:pointer} Tmp_197: int;
  var {:scalar} sdv_86: int;
  var {:scalar} sdv_87: int;
  var {:pointer} fdoExtension: int;
  var {:scalar} sdv_89: int;
  var {:scalar} temp: int;
  var {:scalar} sdv_90: int;
  var {:scalar} sdv_91: int;
  var {:pointer} loginOrb: int;
  var {:scalar} cIrql: int;
  var {:scalar} sdv_92: int;
  var {:scalar} status_4: int;
  var {:pointer} sbpRequest: int;
  var {:pointer} Tmp_199: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} Type: int;
  var boogieTmp: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_3285: int;

  anon0:
    call {:si_unique_call 1961} waitValue := __HAVOC_malloc(20);
    PdoExtension := actual_PdoExtension;
    Type := actual_Type;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc sbpRequest;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_195;
    assume {:nonnull} Tmp_195 != 0;
    assume Tmp_195 > 0;
    havoc fdoExtension;
    loginOrb := sbpRequest;
    call {:si_unique_call 1962} Tmp_197 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    call {:si_unique_call 1963} sdv_KeAcquireSpinLock(0, Tmp_197);
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    havoc cIrql;
    call {:si_unique_call 1964} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1965} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1966} sdv_KeReleaseSpinLock(0, cIrql);
    Tmp_190 := 259;
    goto L1;

  L1:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1967} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1968} sdv_KeReleaseSpinLock(0, cIrql);
    call {:si_unique_call 1969} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L46;

  L46:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L45;

  L45:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_192;
    assume {:nonnull} Tmp_192 != 0;
    assume Tmp_192 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1970} boogieTmp := corral_nondet();
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_3285;
    call {:si_unique_call 1971} vslice_dummy_var_431 := KeSetTimer(0, vslice_dummy_var_3285, 0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1972} status_4 := Sbp2AccessRegister#0(PdoExtension, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension)), 1024);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_4 >= 0;
    Tmp_190 := 259;
    goto L1;

  anon33_Then:
    assume {:partition} 0 > status_4;
    Tmp_190 := status_4;
    goto L1;

  anon43_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1973} vslice_dummy_var_430 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension));
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1974} status_4 := Sbp2AccessRegister#0(PdoExtension, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension)), 256);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_4 >= 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    Tmp_196 := 20;
    goto L108;

  L108:
    temp := Tmp_196;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 1975} status_4 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_4 == 258;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    status_4 := -1073741823;
    goto L116;

  L116:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_191;
    assume {:nonnull} Tmp_191 != 0;
    assume Tmp_191 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L123;

  L123:
    call {:si_unique_call 1976} Tmp_197 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    call {:si_unique_call 1977} sdv_KeAcquireSpinLock(0, Tmp_197);
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    havoc cIrql;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_4 == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    status_4 := 0;
    goto L127;

  L127:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_4 >= 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1978} sdv_KeReleaseSpinLock(0, cIrql);
    goto L136;

  L136:
    Tmp_190 := status_4;
    goto L1;

  anon39_Then:
    assume {:partition} 0 > status_4;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1979} sdv_KeReleaseSpinLock(0, cIrql);
    goto L136;

  anon40_Then:
    goto L127;

  anon38_Then:
    assume {:partition} status_4 != -1073741790;
    goto L127;

  anon45_Then:
    status_4 := -1073741823;
    goto L123;

  anon36_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc status_4;
    goto L123;

  anon37_Then:
    status_4 := 0;
    goto L116;

  anon35_Then:
    assume {:partition} status_4 != 258;
    goto L116;

  anon44_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 1980} Tmp_196 := corral_nondet();
    goto L108;

  anon34_Then:
    assume {:partition} 0 > status_4;
    Tmp_190 := status_4;
    goto L1;

  anon41_Then:
    goto L45;

  anon42_Then:
    goto L46;

  anon31_Then:
    goto L20;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension: int, actual_Type: int) returns (Tmp_190: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_33: int, actual_FreeLists: int) returns (Tmp_1111: int)
{
  var {:scalar} i_5: int;
  var {:scalar} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} Tmp_1114: int;
  var {:pointer} Tmp_1115: int;
  var {:scalar} Tmp_1116: int;
  var {:pointer} Tmp_1117: int;
  var {:scalar} Tmp_1118: int;
  var {:scalar} Tmp_1119: int;
  var {:pointer} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:pointer} Tmp_1122: int;
  var {:scalar} Tmp_1124: int;
  var {:pointer} Tmp_1126: int;
  var {:pointer} Tmp_1128: int;
  var {:scalar} Tmp_1129: int;
  var {:pointer} Tmp_1130: int;
  var {:scalar} Tmp_1131: int;
  var {:pointer} Tmp_1132: int;
  var {:pointer} Tmp_1133: int;
  var {:scalar} Tmp_1134: int;
  var {:pointer} context_4: int;
  var {:pointer} Tmp_1136: int;
  var {:pointer} Tmp_1137: int;
  var {:pointer} Tmp_1138: int;
  var {:pointer} Tmp_1139: int;
  var {:pointer} sdv_512: int;
  var {:pointer} Tmp_1140: int;
  var {:scalar} Tmp_1141: int;
  var {:pointer} Tmp_1142: int;
  var {:pointer} Tmp_1143: int;
  var {:pointer} Tmp_1144: int;
  var {:pointer} Tmp_1145: int;
  var {:pointer} sdv_514: int;
  var {:scalar} Tmp_1146: int;
  var {:scalar} Tmp_1147: int;
  var {:pointer} Tmp_1148: int;
  var {:pointer} Tmp_1149: int;
  var {:scalar} sdv_515: int;
  var {:scalar} sdv_517: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1151: int;
  var {:pointer} Tmp_1152: int;
  var {:pointer} Tmp_1153: int;
  var {:pointer} sdv_519: int;
  var {:pointer} Tmp_1154: int;
  var {:pointer} Tmp_1155: int;
  var {:pointer} irp_5: int;
  var {:scalar} Tmp_1156: int;
  var {:scalar} Tmp_1157: int;
  var {:pointer} Tmp_1158: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} cIrql_5: int;
  var {:scalar} Tmp_1161: int;
  var {:pointer} sdv_520: int;
  var {:scalar} Tmp_1162: int;
  var {:pointer} packet_12: int;
  var {:pointer} Tmp_1163: int;
  var {:pointer} Tmp_1164: int;
  var {:pointer} Tmp_1165: int;
  var {:pointer} Tmp_1166: int;
  var {:scalar} valid: int;
  var {:pointer} deviceExtension_17: int;
  var {:scalar} Tmp_1167: int;
  var {:scalar} Tmp_1168: int;
  var {:pointer} Tmp_1170: int;
  var {:pointer} Tmp_1171: int;
  var {:scalar} sdv_521: int;
  var {:pointer} Tmp_1172: int;
  var {:pointer} DeviceObject_33: int;
  var {:scalar} FreeLists: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_3286: int;
  var vslice_dummy_var_3287: int;

  anon0:
    call {:si_unique_call 1981} packet_12 := __HAVOC_malloc(4);
    DeviceObject_33 := actual_DeviceObject_33;
    FreeLists := actual_FreeLists;
    call {:si_unique_call 1982} Tmp_1113 := __HAVOC_malloc(2560);
    call {:si_unique_call 1983} Tmp_1122 := __HAVOC_malloc(2560);
    call {:si_unique_call 1984} Tmp_1128 := __HAVOC_malloc(2560);
    call {:si_unique_call 1985} Tmp_1130 := __HAVOC_malloc(2560);
    call {:si_unique_call 1986} Tmp_1136 := __HAVOC_malloc(2560);
    call {:si_unique_call 1987} Tmp_1139 := __HAVOC_malloc(2560);
    call {:si_unique_call 1988} Tmp_1140 := __HAVOC_malloc(2560);
    call {:si_unique_call 1989} Tmp_1143 := __HAVOC_malloc(2560);
    call {:si_unique_call 1990} Tmp_1145 := __HAVOC_malloc(2560);
    call {:si_unique_call 1991} Tmp_1148 := __HAVOC_malloc(2560);
    call {:si_unique_call 1992} Tmp_1149 := __HAVOC_malloc(2560);
    call {:si_unique_call 1993} Tmp_1153 := __HAVOC_malloc(2560);
    call {:si_unique_call 1994} Tmp_1155 := __HAVOC_malloc(2560);
    call {:si_unique_call 1995} Tmp_1164 := __HAVOC_malloc(2560);
    call {:si_unique_call 1996} Tmp_1170 := __HAVOC_malloc(2560);
    call {:si_unique_call 1997} Tmp_1171 := __HAVOC_malloc(2560);
    call {:si_unique_call 1998} Tmp_1172 := __HAVOC_malloc(2560);
    valid := 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc deviceExtension_17;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc fdoExtension_3;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1154;
    assume {:nonnull} Tmp_1154 != 0;
    assume Tmp_1154 > 0;
    havoc fdoExtension_3;
    i_5 := 0;
    goto L18;

  L18:
    call {:si_unique_call 1999} i_5, Tmp_1116, Tmp_1170 := Sbp2CleanDeviceExtension#0_loop_L18(i_5, Tmp_1116, fdoExtension_3, Tmp_1170, DeviceObject_33);
    goto L18_last;

  L18_last:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_1116 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1170;
    assume {:nonnull} Tmp_1170 != 0;
    assume Tmp_1170 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    valid := 1;
    goto L19;

  L19:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 2000} vslice_dummy_var_432 := KeCancelTimer(0);
    call {:si_unique_call 2001} CleanupOrbList#1(deviceExtension_17, -1073741248);
    goto L26;

  L26:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2002} FreeAddressRange(deviceExtension_17, DummyContext__DEVICE_EXTENSION(deviceExtension_17));
    goto L33;

  L33:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} FreeLists != 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L41;

  L41:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2003} FreeAddressRange(deviceExtension_17, TaskOrbStatusContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2004} FreeAddressRange(deviceExtension_17, GlobalStatusContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2005} FreeAddressRange(deviceExtension_17, ManagementOrbStatusContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2006} sdv_515 := corral_nondet();
    irp_5 := sdv_515;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2007} vslice_dummy_var_435 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_17), 0);
    call {:si_unique_call 2008} sdv_IoCompleteRequest(0, 0);
    goto L56;

  L56:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2009} sdv_517 := corral_nondet();
    irp_5 := sdv_517;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2010} vslice_dummy_var_436 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_17), 0);
    call {:si_unique_call 2011} sdv_IoCompleteRequest(0, 0);
    goto L69;

  L69:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 2012} vslice_dummy_var_433 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 2013} RtlFreeUnicodeString(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L77;

  L77:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2014} FreeAddressRange(deviceExtension_17, CommonBufferContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    i_5 := 0;
    goto L94;

  L94:
    call {:si_unique_call 2015} i_5, context_4 := Sbp2CleanDeviceExtension#0_loop_L94(i_5, context_4, deviceExtension_17);
    goto L94_last;

  L94_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc context_4;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    call {:si_unique_call 2016} FreeAddressRange(deviceExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_4)));
    goto L101;

  L101:
    i_5 := i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    assume false;
    return;

  anon89_Then:
    goto L101;

  anon77_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 2017} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L92;

  L92:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 2018} sdv_512 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_512;
    goto L114;

  L114:
    call {:si_unique_call 2019} statusFifoElement, sdv_520 := Sbp2CleanDeviceExtension#0_loop_L114(statusFifoElement, sdv_520);
    goto L114_last;

  L114_last:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} statusFifoElement != 0;
    call {:si_unique_call 2020} IoFreeMdl(0);
    call {:si_unique_call 2021} sdv_520 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_520;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2022} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L107;

  L107:
    call {:si_unique_call 2023} sdv_519 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto L127;

  L127:
    call {:si_unique_call 2024} sdv_514, Tmp_1165 := Sbp2CleanDeviceExtension#0_loop_L127(sdv_514, packet_12, Tmp_1165);
    goto L127_last;

  L127_last:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 2025} sdv_ExFreePool(0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1165;
    assume {:nonnull} Tmp_1165 != 0;
    assume Tmp_1165 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 2026} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 2027} sdv_ExFreePool(0);
    call {:si_unique_call 2028} sdv_514 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon90_Then:
    goto L135;

  anon79_Then:
    call {:si_unique_call 2029} ExDeleteNPagedLookasideList(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 2030} IoFreeMdl(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L146;

  L146:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1121;
    assume {:nonnull} Tmp_1121 != 0;
    assume Tmp_1121 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1114;
    assume {:nonnull} Tmp_1114 != 0;
    assume Tmp_1114 > 0;
    call {:si_unique_call 2031} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1151;
    assume {:nonnull} Tmp_1151 != 0;
    assume Tmp_1151 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1144;
    assume {:nonnull} Tmp_1144 != 0;
    assume Tmp_1144 > 0;
    goto L151;

  L151:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1126;
    assume {:nonnull} Tmp_1126 != 0;
    assume Tmp_1126 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1117;
    assume {:nonnull} Tmp_1117 != 0;
    assume Tmp_1117 > 0;
    call {:si_unique_call 2032} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1115;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1152;
    assume {:nonnull} Tmp_1152 != 0;
    assume Tmp_1152 > 0;
    goto L157;

  L157:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1120;
    assume {:nonnull} Tmp_1120 != 0;
    assume Tmp_1120 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1133;
    assume {:nonnull} Tmp_1133 != 0;
    assume Tmp_1133 > 0;
    call {:si_unique_call 2033} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1138;
    assume {:nonnull} Tmp_1138 != 0;
    assume Tmp_1138 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1166;
    assume {:nonnull} Tmp_1166 != 0;
    assume Tmp_1166 > 0;
    goto L37;

  L37:
    Tmp_1111 := 1;
    goto L1;

  L1:
    return;

  anon93_Then:
    goto L37;

  anon92_Then:
    goto L157;

  anon91_Then:
    goto L151;

  anon80_Then:
    goto L146;

  anon76_Then:
    goto L107;

  anon88_Then:
    goto L92;

  anon75_Then:
    Tmp_1111 := 1;
    goto L1;

  anon74_Then:
    goto L77;

  anon87_Then:
    assume {:partition} irp_5 == 0;
    goto L69;

  anon86_Then:
    assume {:partition} irp_5 == 0;
    goto L56;

  anon72_Then:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L41;

  anon73_Then:
    goto L37;

  anon71_Then:
    assume {:partition} FreeLists == 0;
    goto L37;

  anon70_Then:
    goto L33;

  anon69_Then:
    goto L26;

  anon68_Then:
    assume {:partition} valid == 0;
    Tmp_1111 := 0;
    goto L1;

  anon85_Then:
    i_5 := i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    assume false;
    return;

  anon67_Then:
    goto L19;

  anon84_Then:
    fdoExtension_3 := deviceExtension_17;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_1111 := 0;
    goto L1;

  anon94_Then:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    call {:si_unique_call 2034} AllocateIrpAndIrb(fdoExtension_3, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1158;
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1163;
    assume {:nonnull} Tmp_1163 != 0;
    assume Tmp_1163 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1132;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_3286;
    call {:si_unique_call 2035} vslice_dummy_var_437 := Sbp2SendRequest#1(fdoExtension_3, vslice_dummy_var_3286, 2);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_3287;
    call {:si_unique_call 2036} DeAllocateIrpAndIrb(fdoExtension_3, vslice_dummy_var_3287);
    goto L172;

  L172:
    call {:si_unique_call 2037} Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    call {:si_unique_call 2038} sdv_KeAcquireSpinLock(0, Tmp_1142);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    havoc cIrql_5;
    goto L188;

  L188:
    call {:si_unique_call 2039} i_5, Tmp_1112, Tmp_1118, Tmp_1122, Tmp_1124, Tmp_1128, Tmp_1129, Tmp_1130, Tmp_1131, Tmp_1134, Tmp_1136, Tmp_1139, Tmp_1140, Tmp_1141, Tmp_1143, Tmp_1145, Tmp_1148, Tmp_1149, Tmp_1155, Tmp_1156, Tmp_1157, Tmp_1161, Tmp_1162, Tmp_1164, Tmp_1167, Tmp_1168, Tmp_1172 := Sbp2CleanDeviceExtension#0_loop_L188(i_5, Tmp_1112, Tmp_1118, Tmp_1122, Tmp_1124, Tmp_1128, Tmp_1129, Tmp_1130, Tmp_1131, Tmp_1134, Tmp_1136, Tmp_1139, Tmp_1140, Tmp_1141, Tmp_1143, Tmp_1145, Tmp_1148, Tmp_1149, fdoExtension_3, Tmp_1155, Tmp_1156, Tmp_1157, Tmp_1161, Tmp_1162, Tmp_1164, Tmp_1167, Tmp_1168, Tmp_1172);
    goto L188_last;

  L188_last:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc i_5;
    Tmp_1134 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1148;
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_1147 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    havoc Tmp_1137;
    assume {:nonnull} Tmp_1137 != 0;
    assume Tmp_1137 > 0;
    havoc deviceExtension_17;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    Tmp_1146 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1171;
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    havoc DeviceObject_33;
    call {:si_unique_call 2040} sdv_KeReleaseSpinLock(0, cIrql_5);
    assume false;
    return;

  anon96_Then:
    goto L194;

  L194:
    Tmp_1112 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1164;
    assume {:nonnull} Tmp_1164 != 0;
    assume Tmp_1164 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_1141 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1139;
    assume {:nonnull} Tmp_1139 != 0;
    assume Tmp_1139 > 0;
    call {:si_unique_call 2041} sdv_ExFreePool(0);
    Tmp_1168 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1128;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    Tmp_1167 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1172;
    assume {:nonnull} Tmp_1172 != 0;
    assume Tmp_1172 > 0;
    goto L236;

  L236:
    Tmp_1118 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1143;
    assume {:nonnull} Tmp_1143 != 0;
    assume Tmp_1143 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_1157 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1145;
    assume {:nonnull} Tmp_1145 != 0;
    assume Tmp_1145 > 0;
    call {:si_unique_call 2042} sdv_ExFreePool(0);
    Tmp_1162 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1140;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    Tmp_1156 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1149;
    assume {:nonnull} Tmp_1149 != 0;
    assume Tmp_1149 > 0;
    goto L243;

  L243:
    Tmp_1131 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1130;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_1129 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1136;
    assume {:nonnull} Tmp_1136 != 0;
    assume Tmp_1136 > 0;
    call {:si_unique_call 2043} sdv_ExFreePool(0);
    Tmp_1124 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1155;
    assume {:nonnull} Tmp_1155 != 0;
    assume Tmp_1155 > 0;
    Tmp_1161 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1122;
    assume {:nonnull} Tmp_1122 != 0;
    assume Tmp_1122 > 0;
    goto L250;

  L250:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto L250_dummy;

  L250_dummy:
    assume false;
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;

  anon82_Then:
    call {:si_unique_call 2044} sdv_KeReleaseSpinLock(0, cIrql_5);
    goto L37;

  anon81_Then:
    goto L172;

  anon95_Then:
    goto L172;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_33: int, actual_FreeLists: int) returns (Tmp_1111: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} Tmp_1111 == 1 || Tmp_1111 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_33: int, actual_FreeLists: int) returns (Tmp_1111: int)
{
  var {:scalar} i_5: int;
  var {:scalar} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} Tmp_1114: int;
  var {:pointer} Tmp_1115: int;
  var {:scalar} Tmp_1116: int;
  var {:pointer} Tmp_1117: int;
  var {:scalar} Tmp_1118: int;
  var {:scalar} Tmp_1119: int;
  var {:pointer} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:pointer} Tmp_1122: int;
  var {:scalar} Tmp_1124: int;
  var {:pointer} Tmp_1126: int;
  var {:pointer} Tmp_1128: int;
  var {:scalar} Tmp_1129: int;
  var {:pointer} Tmp_1130: int;
  var {:scalar} Tmp_1131: int;
  var {:pointer} Tmp_1132: int;
  var {:pointer} Tmp_1133: int;
  var {:scalar} Tmp_1134: int;
  var {:pointer} context_4: int;
  var {:pointer} Tmp_1136: int;
  var {:pointer} Tmp_1137: int;
  var {:pointer} Tmp_1138: int;
  var {:pointer} Tmp_1139: int;
  var {:pointer} sdv_512: int;
  var {:pointer} Tmp_1140: int;
  var {:scalar} Tmp_1141: int;
  var {:pointer} Tmp_1142: int;
  var {:pointer} Tmp_1143: int;
  var {:pointer} Tmp_1144: int;
  var {:pointer} Tmp_1145: int;
  var {:pointer} sdv_514: int;
  var {:scalar} Tmp_1146: int;
  var {:scalar} Tmp_1147: int;
  var {:pointer} Tmp_1148: int;
  var {:pointer} Tmp_1149: int;
  var {:scalar} sdv_515: int;
  var {:scalar} sdv_517: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1151: int;
  var {:pointer} Tmp_1152: int;
  var {:pointer} Tmp_1153: int;
  var {:pointer} sdv_519: int;
  var {:pointer} Tmp_1154: int;
  var {:pointer} Tmp_1155: int;
  var {:pointer} irp_5: int;
  var {:scalar} Tmp_1156: int;
  var {:scalar} Tmp_1157: int;
  var {:pointer} Tmp_1158: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} cIrql_5: int;
  var {:scalar} Tmp_1161: int;
  var {:pointer} sdv_520: int;
  var {:scalar} Tmp_1162: int;
  var {:pointer} packet_12: int;
  var {:pointer} Tmp_1163: int;
  var {:pointer} Tmp_1164: int;
  var {:pointer} Tmp_1165: int;
  var {:pointer} Tmp_1166: int;
  var {:scalar} valid: int;
  var {:pointer} deviceExtension_17: int;
  var {:scalar} Tmp_1167: int;
  var {:scalar} Tmp_1168: int;
  var {:pointer} Tmp_1170: int;
  var {:pointer} Tmp_1171: int;
  var {:scalar} sdv_521: int;
  var {:pointer} Tmp_1172: int;
  var {:pointer} DeviceObject_33: int;
  var {:scalar} FreeLists: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_3288: int;
  var vslice_dummy_var_3289: int;

  anon0:
    call {:si_unique_call 2045} packet_12 := __HAVOC_malloc(4);
    DeviceObject_33 := actual_DeviceObject_33;
    FreeLists := actual_FreeLists;
    call {:si_unique_call 2046} Tmp_1113 := __HAVOC_malloc(2560);
    call {:si_unique_call 2047} Tmp_1122 := __HAVOC_malloc(2560);
    call {:si_unique_call 2048} Tmp_1128 := __HAVOC_malloc(2560);
    call {:si_unique_call 2049} Tmp_1130 := __HAVOC_malloc(2560);
    call {:si_unique_call 2050} Tmp_1136 := __HAVOC_malloc(2560);
    call {:si_unique_call 2051} Tmp_1139 := __HAVOC_malloc(2560);
    call {:si_unique_call 2052} Tmp_1140 := __HAVOC_malloc(2560);
    call {:si_unique_call 2053} Tmp_1143 := __HAVOC_malloc(2560);
    call {:si_unique_call 2054} Tmp_1145 := __HAVOC_malloc(2560);
    call {:si_unique_call 2055} Tmp_1148 := __HAVOC_malloc(2560);
    call {:si_unique_call 2056} Tmp_1149 := __HAVOC_malloc(2560);
    call {:si_unique_call 2057} Tmp_1153 := __HAVOC_malloc(2560);
    call {:si_unique_call 2058} Tmp_1155 := __HAVOC_malloc(2560);
    call {:si_unique_call 2059} Tmp_1164 := __HAVOC_malloc(2560);
    call {:si_unique_call 2060} Tmp_1170 := __HAVOC_malloc(2560);
    call {:si_unique_call 2061} Tmp_1171 := __HAVOC_malloc(2560);
    call {:si_unique_call 2062} Tmp_1172 := __HAVOC_malloc(2560);
    valid := 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc deviceExtension_17;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc fdoExtension_3;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1154;
    assume {:nonnull} Tmp_1154 != 0;
    assume Tmp_1154 > 0;
    havoc fdoExtension_3;
    i_5 := 0;
    goto L18;

  L18:
    call {:si_unique_call 2063} i_5, Tmp_1116, Tmp_1170 := Sbp2CleanDeviceExtension#1_loop_L18(i_5, Tmp_1116, fdoExtension_3, Tmp_1170, DeviceObject_33);
    goto L18_last;

  L18_last:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    Tmp_1116 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1170;
    assume {:nonnull} Tmp_1170 != 0;
    assume Tmp_1170 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    valid := 1;
    goto L19;

  L19:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 2064} vslice_dummy_var_439 := KeCancelTimer(0);
    call {:si_unique_call 2065} CleanupOrbList#1(deviceExtension_17, -1073741248);
    goto L26;

  L26:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2066} FreeAddressRange(deviceExtension_17, DummyContext__DEVICE_EXTENSION(deviceExtension_17));
    goto L33;

  L33:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} FreeLists != 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L41;

  L41:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2067} FreeAddressRange(deviceExtension_17, TaskOrbStatusContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2068} FreeAddressRange(deviceExtension_17, GlobalStatusContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2069} FreeAddressRange(deviceExtension_17, ManagementOrbStatusContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2070} sdv_515 := corral_nondet();
    irp_5 := sdv_515;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2071} vslice_dummy_var_442 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_17), 0);
    call {:si_unique_call 2072} sdv_IoCompleteRequest(0, 0);
    goto L56;

  L56:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2073} sdv_517 := corral_nondet();
    irp_5 := sdv_517;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2074} vslice_dummy_var_443 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_17), 0);
    call {:si_unique_call 2075} sdv_IoCompleteRequest(0, 0);
    goto L69;

  L69:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 2076} vslice_dummy_var_440 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 2077} RtlFreeUnicodeString(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L77;

  L77:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2078} FreeAddressRange(deviceExtension_17, CommonBufferContext__DEVICE_EXTENSION(deviceExtension_17));
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    i_5 := 0;
    goto L94;

  L94:
    call {:si_unique_call 2079} i_5, context_4 := Sbp2CleanDeviceExtension#1_loop_L94(i_5, context_4, deviceExtension_17);
    goto L94_last;

  L94_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc context_4;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    call {:si_unique_call 2080} FreeAddressRange(deviceExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_4)));
    goto L101;

  L101:
    i_5 := i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    assume false;
    return;

  anon89_Then:
    goto L101;

  anon77_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 2081} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L92;

  L92:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 2082} sdv_512 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_512;
    goto L114;

  L114:
    call {:si_unique_call 2083} statusFifoElement, sdv_520 := Sbp2CleanDeviceExtension#1_loop_L114(statusFifoElement, sdv_520);
    goto L114_last;

  L114_last:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} statusFifoElement != 0;
    call {:si_unique_call 2084} IoFreeMdl(0);
    call {:si_unique_call 2085} sdv_520 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_520;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2086} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L107;

  L107:
    call {:si_unique_call 2087} sdv_519 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto L127;

  L127:
    call {:si_unique_call 2088} sdv_514, Tmp_1165 := Sbp2CleanDeviceExtension#1_loop_L127(sdv_514, packet_12, Tmp_1165);
    goto L127_last;

  L127_last:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 2089} sdv_ExFreePool(0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1165;
    assume {:nonnull} Tmp_1165 != 0;
    assume Tmp_1165 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 2090} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 2091} sdv_ExFreePool(0);
    call {:si_unique_call 2092} sdv_514 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon90_Then:
    goto L135;

  anon79_Then:
    call {:si_unique_call 2093} ExDeleteNPagedLookasideList(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 2094} IoFreeMdl(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto L146;

  L146:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1121;
    assume {:nonnull} Tmp_1121 != 0;
    assume Tmp_1121 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1114;
    assume {:nonnull} Tmp_1114 != 0;
    assume Tmp_1114 > 0;
    call {:si_unique_call 2095} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1151;
    assume {:nonnull} Tmp_1151 != 0;
    assume Tmp_1151 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1144;
    assume {:nonnull} Tmp_1144 != 0;
    assume Tmp_1144 > 0;
    goto L151;

  L151:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1126;
    assume {:nonnull} Tmp_1126 != 0;
    assume Tmp_1126 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1117;
    assume {:nonnull} Tmp_1117 != 0;
    assume Tmp_1117 > 0;
    call {:si_unique_call 2096} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1115;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1152;
    assume {:nonnull} Tmp_1152 != 0;
    assume Tmp_1152 > 0;
    goto L157;

  L157:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1120;
    assume {:nonnull} Tmp_1120 != 0;
    assume Tmp_1120 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1133;
    assume {:nonnull} Tmp_1133 != 0;
    assume Tmp_1133 > 0;
    call {:si_unique_call 2097} sdv_ExFreePool(0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1138;
    assume {:nonnull} Tmp_1138 != 0;
    assume Tmp_1138 > 0;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    havoc Tmp_1166;
    assume {:nonnull} Tmp_1166 != 0;
    assume Tmp_1166 > 0;
    goto L37;

  L37:
    Tmp_1111 := 1;
    goto L1;

  L1:
    return;

  anon93_Then:
    goto L37;

  anon92_Then:
    goto L157;

  anon91_Then:
    goto L151;

  anon80_Then:
    goto L146;

  anon76_Then:
    goto L107;

  anon88_Then:
    goto L92;

  anon75_Then:
    Tmp_1111 := 1;
    goto L1;

  anon74_Then:
    goto L77;

  anon87_Then:
    assume {:partition} irp_5 == 0;
    goto L69;

  anon86_Then:
    assume {:partition} irp_5 == 0;
    goto L56;

  anon72_Then:
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L41;

  anon73_Then:
    goto L37;

  anon71_Then:
    assume {:partition} FreeLists == 0;
    goto L37;

  anon70_Then:
    goto L33;

  anon69_Then:
    goto L26;

  anon68_Then:
    assume {:partition} valid == 0;
    Tmp_1111 := 0;
    goto L1;

  anon85_Then:
    i_5 := i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    assume false;
    return;

  anon67_Then:
    goto L19;

  anon84_Then:
    fdoExtension_3 := deviceExtension_17;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_1111 := 0;
    goto L1;

  anon94_Then:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    call {:si_unique_call 2098} AllocateIrpAndIrb(fdoExtension_3, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1158;
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1163;
    assume {:nonnull} Tmp_1163 != 0;
    assume Tmp_1163 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1132;
    assume {:nonnull} Tmp_1132 != 0;
    assume Tmp_1132 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_3288;
    call {:si_unique_call 2099} vslice_dummy_var_444 := Sbp2SendRequest#1(fdoExtension_3, vslice_dummy_var_3288, 2);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_3289;
    call {:si_unique_call 2100} DeAllocateIrpAndIrb(fdoExtension_3, vslice_dummy_var_3289);
    goto L172;

  L172:
    call {:si_unique_call 2101} Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    call {:si_unique_call 2102} sdv_KeAcquireSpinLock(0, Tmp_1142);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    havoc cIrql_5;
    goto L188;

  L188:
    call {:si_unique_call 2103} i_5, Tmp_1112, Tmp_1113, Tmp_1118, Tmp_1119, Tmp_1122, Tmp_1124, Tmp_1128, Tmp_1129, Tmp_1130, Tmp_1131, Tmp_1134, Tmp_1136, Tmp_1137, Tmp_1139, Tmp_1140, Tmp_1141, Tmp_1142, Tmp_1143, Tmp_1145, Tmp_1146, Tmp_1147, Tmp_1148, Tmp_1149, Tmp_1153, Tmp_1155, Tmp_1156, Tmp_1157, cIrql_5, Tmp_1161, Tmp_1162, Tmp_1164, deviceExtension_17, Tmp_1167, Tmp_1168, Tmp_1171, sdv_521, Tmp_1172, DeviceObject_33, vslice_dummy_var_441, vslice_dummy_var_445 := Sbp2CleanDeviceExtension#1_loop_L188(i_5, Tmp_1112, Tmp_1113, Tmp_1118, Tmp_1119, Tmp_1122, Tmp_1124, Tmp_1128, Tmp_1129, Tmp_1130, Tmp_1131, Tmp_1134, Tmp_1136, Tmp_1137, Tmp_1139, Tmp_1140, Tmp_1141, Tmp_1142, Tmp_1143, Tmp_1145, Tmp_1146, Tmp_1147, Tmp_1148, Tmp_1149, fdoExtension_3, Tmp_1153, Tmp_1155, Tmp_1156, Tmp_1157, cIrql_5, Tmp_1161, Tmp_1162, Tmp_1164, deviceExtension_17, Tmp_1167, Tmp_1168, Tmp_1171, sdv_521, Tmp_1172, DeviceObject_33, vslice_dummy_var_441, vslice_dummy_var_445);
    goto L188_last;

  L188_last:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc i_5;
    Tmp_1134 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1148;
    assume {:nonnull} Tmp_1148 != 0;
    assume Tmp_1148 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_1147 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    havoc Tmp_1137;
    assume {:nonnull} Tmp_1137 != 0;
    assume Tmp_1137 > 0;
    havoc deviceExtension_17;
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    Tmp_1146 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1171;
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    havoc DeviceObject_33;
    call {:si_unique_call 2104} sdv_KeReleaseSpinLock(0, cIrql_5);
    call {:si_unique_call 2105} sdv_521 := Sbp2CleanDeviceExtension#0(DeviceObject_33, 1);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} sdv_521 != 0;
    call {:si_unique_call 2106} vslice_dummy_var_441 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 2107} Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    call {:si_unique_call 2108} sdv_KeRaiseIrql(2, Tmp_1142);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    havoc cIrql_5;
    call {:si_unique_call 2109} Sbp2StartNextPacketByKey#1(DeviceObject_33, 0);
    call {:si_unique_call 2110} sdv_KeLowerIrql(cIrql_5);
    call {:si_unique_call 2111} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} deviceExtension_17 != 0;
    assume deviceExtension_17 > 0;
    call {:si_unique_call 2112} vslice_dummy_var_445 := KeCancelTimer(0);
    call {:si_unique_call 2113} IoDeleteDevice(0);
    call {:si_unique_call 2114} Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    call {:si_unique_call 2115} sdv_KeAcquireSpinLock(0, Tmp_1142);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    havoc cIrql_5;
    Tmp_1119 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1153;
    assume {:nonnull} Tmp_1153 != 0;
    assume Tmp_1153 > 0;
    goto L194;

  L194:
    Tmp_1112 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1164;
    assume {:nonnull} Tmp_1164 != 0;
    assume Tmp_1164 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_1141 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1139;
    assume {:nonnull} Tmp_1139 != 0;
    assume Tmp_1139 > 0;
    call {:si_unique_call 2116} sdv_ExFreePool(0);
    Tmp_1168 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1128;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    Tmp_1167 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1172;
    assume {:nonnull} Tmp_1172 != 0;
    assume Tmp_1172 > 0;
    goto L236;

  L236:
    Tmp_1118 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1143;
    assume {:nonnull} Tmp_1143 != 0;
    assume Tmp_1143 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_1157 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1145;
    assume {:nonnull} Tmp_1145 != 0;
    assume Tmp_1145 > 0;
    call {:si_unique_call 2117} sdv_ExFreePool(0);
    Tmp_1162 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1140;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    Tmp_1156 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1149;
    assume {:nonnull} Tmp_1149 != 0;
    assume Tmp_1149 > 0;
    goto L243;

  L243:
    Tmp_1131 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1130;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_1129 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1136;
    assume {:nonnull} Tmp_1136 != 0;
    assume Tmp_1136 > 0;
    call {:si_unique_call 2118} sdv_ExFreePool(0);
    Tmp_1124 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1155;
    assume {:nonnull} Tmp_1155 != 0;
    assume Tmp_1155 > 0;
    Tmp_1161 := i_5;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1122;
    assume {:nonnull} Tmp_1122 != 0;
    assume Tmp_1122 > 0;
    goto L250;

  L250:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto L250_dummy;

  L250_dummy:
    assume false;
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;

  anon83_Then:
    assume {:partition} sdv_521 == 0;
    call {:si_unique_call 2119} Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    call {:si_unique_call 2120} sdv_KeAcquireSpinLock(0, Tmp_1142);
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    havoc cIrql_5;
    goto L194;

  anon96_Then:
    goto L194;

  anon82_Then:
    call {:si_unique_call 2121} sdv_KeReleaseSpinLock(0, cIrql_5);
    goto L37;

  anon81_Then:
    goto L172;

  anon95_Then:
    goto L172;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_33: int, actual_FreeLists: int) returns (Tmp_1111: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_1111 == 1 || Tmp_1111 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Sbp2_ProcessTextualDescriptor_loop_L46(in_i: int, in_DataLength: int, in_pData: int, in_ulUnicode: int, in_Tmp_9: int, in_uChar: int, in_Tmp_13: int) returns (out_i: int, out_Tmp_9: int, out_uChar: int, out_Tmp_13: int)
{

  entry:
    out_i, out_Tmp_9, out_uChar, out_Tmp_13 := in_i, in_Tmp_9, in_uChar, in_Tmp_13;
    goto L46, exit;

  exit:
    return;

  L46:
    goto anon28_Then;

  anon28_Then:
    assume {:partition} out_i < in_DataLength * 4;
    out_Tmp_13 := in_pData;
    assume {:nonnull} out_Tmp_13 != 0;
    assume out_Tmp_13 > 0;
    havoc out_uChar;
    goto anon38_Then;

  anon38_Then:
    assume {:partition} out_uChar != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_uChar == 44;
    goto L53;

  L53:
    out_Tmp_9 := in_pData;
    assume {:nonnull} out_Tmp_9 != 0;
    assume out_Tmp_9 > 0;
    goto L54;

  L54:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_i := out_i + 1;
    goto L55;

  L55:
    out_i := out_i + 1;
    goto L55_dummy;

  L55_dummy:
    havoc out_i;
    return;

  anon31_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L55;

  anon29_Then:
    assume {:partition} out_uChar != 44;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 32 <= out_uChar;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_uChar <= 127;
    goto L54;

  anon32_Then:
    assume {:partition} 127 < out_uChar;
    goto L53;

  anon30_Then:
    assume {:partition} out_uChar < 32;
    goto L53;
}



procedure {:LoopProcedure} Sbp2_ProcessTextualDescriptor_loop_L46(in_i: int, in_DataLength: int, in_pData: int, in_ulUnicode: int, in_Tmp_9: int, in_uChar: int, in_Tmp_13: int) returns (out_i: int, out_Tmp_9: int, out_uChar: int, out_Tmp_13: int);
  free ensures {:va_keep} out_Tmp_9 == in_Tmp_9 || out_Tmp_9 == in_pData;
  free ensures {:va_keep} out_Tmp_13 == in_pData || out_Tmp_13 == in_Tmp_13;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L245(in_unitDependentDirectory: int, in_Tmp_86: int, in_sdv_45: int, in_sdv_49: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_122: int, in_Tmp_133: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_139: int, in_j: int, in_Tmp_152: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_74: int, in_vendorLeaf: int, in_Tmp_170: int, in_ModelLeaf_2: int, in_status_3: int, in_packet_1: int, in_Tmp_174: int, in_Tmp_176: int, in_sdv_79: int, in_offset: int, in_Tmp_185: int, in_Tmp_187: int, in_DeviceExtension_1: int) returns (out_Tmp_86: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_122: int, out_Tmp_133: int, out_Tmp_139: int, out_j: int, out_Tmp_152: int, out_unitDirEntries: int, out_Tmp_170: int, out_status_3: int, out_Tmp_174: int, out_Tmp_176: int, out_Tmp_185: int, out_Tmp_187: int)
{
  var vslice_dummy_var_3290: int;
  var vslice_dummy_var_3291: int;

  entry:
    out_Tmp_86, out_modelIdCount, out_devListSize, out_Tmp_122, out_Tmp_133, out_Tmp_139, out_j, out_Tmp_152, out_unitDirEntries, out_Tmp_170, out_status_3, out_Tmp_174, out_Tmp_176, out_Tmp_185, out_Tmp_187 := in_Tmp_86, in_modelIdCount, in_devListSize, in_Tmp_122, in_Tmp_133, in_Tmp_139, in_j, in_Tmp_152, in_unitDirEntries, in_Tmp_170, in_status_3, in_Tmp_174, in_Tmp_176, in_Tmp_185, in_Tmp_187;
    goto L245, exit;

  exit:
    return;

  L245:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_176;
    assume {:nonnull} out_Tmp_176 != 0;
    assume out_Tmp_176 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_122;
    assume {:nonnull} out_Tmp_122 != 0;
    assume out_Tmp_122 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_187;
    assume {:nonnull} out_Tmp_187 != 0;
    assume out_Tmp_187 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_174;
    assume {:nonnull} out_Tmp_174 != 0;
    assume out_Tmp_174 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_185;
    assume {:nonnull} out_Tmp_185 != 0;
    assume out_Tmp_185 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_3290;
    call {:si_unique_call 2122} out_status_3 := Sbp2SendRequest#1(in_DeviceExtension_1, vslice_dummy_var_3290, 2);
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_status_3 >= 0;
    out_Tmp_152 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_152 != 0;
    assume out_Tmp_152 > 0;
    havoc out_Tmp_170;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_Tmp_170 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 2123} out_status_3 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L272;

  L272:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto L277;

  L277:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L281;

  L281:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L283;

  L283:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L258;

  L258:
    out_Tmp_139 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L310;

  L310:
    out_j := out_j + 1;
    goto anon230_Then;

  anon230_Then:
    assume {:partition} out_j <= INTDIV(in_depDirLength, 4);
    goto anon230_Then_dummy;

  anon230_Then_dummy:
    call {:si_unique_call 2127} {:si_old_unique_call 1} out_Tmp_86, out_modelIdCount, out_devListSize, out_Tmp_122, out_Tmp_133, out_Tmp_139, out_j, out_Tmp_152, out_unitDirEntries, out_Tmp_170, out_status_3, out_Tmp_174, out_Tmp_176, out_Tmp_185, out_Tmp_187 := Sbp2Get1394ConfigInfo_loop_L245(in_unitDependentDirectory, out_Tmp_86, in_sdv_45, in_sdv_49, out_modelIdCount, out_devListSize, out_Tmp_122, out_Tmp_133, in_depDirLength, in_firstDevInfo, in_cromOffset1, out_Tmp_139, out_j, out_Tmp_152, in_devInfo, out_unitDirEntries, in_sdv_74, in_vendorLeaf, out_Tmp_170, in_ModelLeaf_2, out_status_3, in_packet_1, out_Tmp_174, out_Tmp_176, in_sdv_79, in_offset, out_Tmp_185, out_Tmp_187, in_DeviceExtension_1);
    return;

  anon208_Then:
    out_Tmp_86 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_86 != 0;
    assume out_Tmp_86 > 0;
    havoc out_Tmp_133;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_133 != 23;
    goto L310;

  anon231_Then:
    assume {:partition} out_Tmp_133 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 2126} Sbp2ParseTextLeaf(in_DeviceExtension_1, in_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_2);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_3291;
    call {:si_unique_call 2124} out_status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3291, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 2125} sdv_ExFreePool(0);
    goto L302;

  L302:
    out_modelIdCount := out_modelIdCount + 1;
    goto L310;

  anon185_Then:
    goto L302;

  anon209_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon229_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon184_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L283;

  anon183_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L281;

  anon182_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L279;

  anon228_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L277;

  anon227_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L272;

  anon226_Then:
    assume {:partition} out_Tmp_170 != 20;
    goto L258;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L245(in_unitDependentDirectory: int, in_Tmp_86: int, in_sdv_45: int, in_sdv_49: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_122: int, in_Tmp_133: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_139: int, in_j: int, in_Tmp_152: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_74: int, in_vendorLeaf: int, in_Tmp_170: int, in_ModelLeaf_2: int, in_status_3: int, in_packet_1: int, in_Tmp_174: int, in_Tmp_176: int, in_sdv_79: int, in_offset: int, in_Tmp_185: int, in_Tmp_187: int, in_DeviceExtension_1: int) returns (out_Tmp_86: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_122: int, out_Tmp_133: int, out_Tmp_139: int, out_j: int, out_Tmp_152: int, out_unitDirEntries: int, out_Tmp_170: int, out_status_3: int, out_Tmp_174: int, out_Tmp_176: int, out_Tmp_185: int, out_Tmp_187: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_Tmp_86 == in_Tmp_86 || out_Tmp_86 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_139 == in_Tmp_139 || out_Tmp_139 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_152 == in_Tmp_152 || out_Tmp_152 == in_unitDependentDirectory;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L333(in_unitDependentDirectory: int, in_sdv_43: int, in_Tmp_97: int, in_modelIdCount: int, in_devListSize: int, in_sdv_58: int, in_Tmp_119: int, in_Tmp_120: int, in_Tmp_128: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_ModelLeaf_1: int, in_sdv_67: int, in_j: int, in_sdv_69: int, in_devInfo: int, in_unitDirEntries: int, in_Tmp_155: int, in_Tmp_159: int, in_vendorLeaf: int, in_status_3: int, in_packet_1: int, in_modelLeaf: int, in_DeviceExtension_1: int) returns (out_Tmp_97: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_119: int, out_Tmp_120: int, out_Tmp_128: int, out_j: int, out_unitDirEntries: int, out_Tmp_155: int, out_Tmp_159: int, out_status_3: int)
{
  var vslice_dummy_var_3292: int;

  entry:
    out_Tmp_97, out_modelIdCount, out_devListSize, out_Tmp_119, out_Tmp_120, out_Tmp_128, out_j, out_unitDirEntries, out_Tmp_155, out_Tmp_159, out_status_3 := in_Tmp_97, in_modelIdCount, in_devListSize, in_Tmp_119, in_Tmp_120, in_Tmp_128, in_j, in_unitDirEntries, in_Tmp_155, in_Tmp_159, in_status_3;
    goto L333, exit;

  exit:
    return;

  L333:
    goto anon186_Else;

  anon186_Else:
    assume {:partition} in_depDirLength > out_j;
    out_Tmp_128 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_128 != 0;
    assume out_Tmp_128 > 0;
    havoc out_Tmp_155;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} out_Tmp_155 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L347;

  L347:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 2128} out_status_3 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L353;

  L353:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L357;

  L357:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L359;

  L359:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L361;

  L361:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L363;

  L363:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L336;

  L336:
    out_Tmp_120 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_120 != 0;
    assume out_Tmp_120 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} out_Tmp_120 != 0;
    assume out_Tmp_120 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} out_Tmp_120 != 0;
    assume out_Tmp_120 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L396;

  L396:
    out_j := out_j + 1;
    goto L396_dummy;

  L396_dummy:
    call {:si_unique_call 2133} {:si_old_unique_call 1} out_Tmp_97, out_modelIdCount, out_devListSize, out_Tmp_119, out_Tmp_120, out_Tmp_128, out_j, out_unitDirEntries, out_Tmp_155, out_Tmp_159, out_status_3 := Sbp2Get1394ConfigInfo_loop_L333(in_unitDependentDirectory, in_sdv_43, out_Tmp_97, out_modelIdCount, out_devListSize, in_sdv_58, out_Tmp_119, out_Tmp_120, out_Tmp_128, in_depDirLength, in_firstDevInfo, in_cromOffset1, in_ModelLeaf_1, in_sdv_67, out_j, in_sdv_69, in_devInfo, out_unitDirEntries, out_Tmp_155, out_Tmp_159, in_vendorLeaf, out_status_3, in_packet_1, in_modelLeaf, in_DeviceExtension_1);
    return;

  anon210_Then:
    out_Tmp_119 := in_unitDependentDirectory;
    assume {:nonnull} out_Tmp_119 != 0;
    assume out_Tmp_119 > 0;
    havoc out_Tmp_97;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_Tmp_97 != 23;
    goto L396;

  anon236_Then:
    assume {:partition} out_Tmp_97 == 23;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_159;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 2132} Sbp2ParseTextLeaf(in_DeviceExtension_1, in_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_1);
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_3292;
    call {:si_unique_call 2130} out_status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3292, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 2131} sdv_ExFreePool(0);
    goto L377;

  L377:
    out_modelIdCount := out_modelIdCount + 1;
    goto L396;

  anon193_Then:
    goto L377;

  anon192_Then:
    goto L377;

  anon211_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon235_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon191_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L363;

  anon190_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L361;

  anon189_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L359;

  anon234_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L357;

  anon188_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L353;

  anon233_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} in_modelLeaf != 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 2129} out_status_3 := Sbp2_ProcessTextualDescriptor(in_modelLeaf, uniModelId__DEVICE_INFORMATION(in_devInfo));
    goto L347;

  anon187_Then:
    assume {:partition} in_modelLeaf == 0;
    goto L347;

  anon232_Then:
    assume {:partition} out_Tmp_155 != 20;
    goto L336;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L333(in_unitDependentDirectory: int, in_sdv_43: int, in_Tmp_97: int, in_modelIdCount: int, in_devListSize: int, in_sdv_58: int, in_Tmp_119: int, in_Tmp_120: int, in_Tmp_128: int, in_depDirLength: int, in_firstDevInfo: int, in_cromOffset1: int, in_ModelLeaf_1: int, in_sdv_67: int, in_j: int, in_sdv_69: int, in_devInfo: int, in_unitDirEntries: int, in_Tmp_155: int, in_Tmp_159: int, in_vendorLeaf: int, in_status_3: int, in_packet_1: int, in_modelLeaf: int, in_DeviceExtension_1: int) returns (out_Tmp_97: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_119: int, out_Tmp_120: int, out_Tmp_128: int, out_j: int, out_unitDirEntries: int, out_Tmp_155: int, out_Tmp_159: int, out_status_3: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_Tmp_119 == in_Tmp_119 || out_Tmp_119 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_120 == in_Tmp_120 || out_Tmp_120 == in_unitDependentDirectory;
  free ensures {:va_keep} out_Tmp_128 == in_Tmp_128 || out_Tmp_128 == in_unitDependentDirectory;
  free ensures {:va_keep} out_status_3 == 0 || out_status_3 == -1073741670 || out_status_3 == in_status_3;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L141(in_sdv_42: int, in_unitDependentDirectory: int, in_sdv_43: int, in_Tmp_86: int, in_sdv_45: int, in_sdv_47: int, in_sdv_49: int, in_Tmp_93: int, in_cromOffset: int, in_Tmp_94: int, in_Tmp_95: int, in_Tmp_97: int, in_Tmp_99: int, in_Tmp_100: int, in_directoryLength: int, in_Tmp_111: int, in_modelIdCount: int, in_dirInfoQuad: int, in_devListSize: int, in_firstOne: int, in_sdv_57: int, in_Tmp_115: int, in_sdv_58: int, in_Tmp_118: int, in_sdv_59: int, in_Tmp_119: int, in_Tmp_120: int, in_sdv_60: int, in_Tmp_122: int, in_directoryLocation: int, in_Tmp_126: int, in_Tmp_127: int, in_Tmp_128: int, in_Tmp_133: int, in_i_1: int, in_depDirLength: int, in_sdv_63: int, in_sbp2Device: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_137: int, in_ModelLeaf: int, in_Tmp_139: int, in_ModelLeaf_1: int, in_sdv_66: int, in_sdv_67: int, in_Tmp_142: int, in_Tmp_143: int, in_j: int, in_sdv_69: int, in_Tmp_147: int, in_Tmp_149: int, in_Tmp_150: int, in_Tmp_151: int, in_Tmp_152: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_72: int, in_sdv_73: int, in_Tmp_155: int, in_sdv_74: int, in_Tmp_158: int, in_Tmp_159: int, in_currentGeneration: int, in_Tmp_161: int, in_Tmp_162: int, in_Tmp_164: int, in_Tmp_165: int, in_Tmp_166: int, in_vendorLeaf: int, in_Tmp_170: int, in_unitDirectory: int, in_ModelLeaf_2: int, in_status_3: int, in_packet_1: int, in_Tmp_174: int, in_Tmp_176: int, in_sdv_79: int, in_Tmp_177: int, in_info: int, in_Tmp_183: int, in_offset: int, in_Tmp_185: int, in_modelLeaf: int, in_Tmp_186: int, in_Tmp_187: int, in_sdv_80: int, in_Tmp_188: int, in_Tmp_189: int, in_DeviceExtension_1: int, in_Sbp2Req: int) returns (out_unitDependentDirectory: int, out_Tmp_86: int, out_Tmp_93: int, out_Tmp_94: int, out_Tmp_95: int, out_Tmp_97: int, out_Tmp_99: int, out_Tmp_100: int, out_Tmp_111: int, out_modelIdCount: int, out_dirInfoQuad: int, out_devListSize: int, out_firstOne: int, out_Tmp_115: int, out_Tmp_118: int, out_sdv_59: int, out_Tmp_119: int, out_Tmp_120: int, out_Tmp_122: int, out_Tmp_126: int, out_Tmp_127: int, out_Tmp_128: int, out_Tmp_133: int, out_i_1: int, out_depDirLength: int, out_sbp2Device: int, out_Tmp_137: int, out_Tmp_139: int, out_Tmp_142: int, out_Tmp_143: int, out_j: int, out_Tmp_147: int, out_Tmp_149: int, out_Tmp_150: int, out_Tmp_151: int, out_Tmp_152: int, out_devInfo: int, out_unitDirEntries: int, out_sdv_73: int, out_Tmp_155: int, out_Tmp_158: int, out_Tmp_159: int, out_Tmp_161: int, out_Tmp_162: int, out_Tmp_164: int, out_Tmp_165: int, out_Tmp_166: int, out_Tmp_170: int, out_status_3: int, out_Tmp_174: int, out_Tmp_176: int, out_Tmp_177: int, out_info: int, out_Tmp_183: int, out_offset: int, out_Tmp_185: int, out_Tmp_186: int, out_Tmp_187: int, out_Tmp_188: int, out_Tmp_189: int)
{
  var vslice_dummy_var_3293: int;
  var vslice_dummy_var_3294: int;
  var vslice_dummy_var_3295: int;
  var vslice_dummy_var_3296: int;
  var vslice_dummy_var_3297: int;

  entry:
    out_unitDependentDirectory, out_Tmp_86, out_Tmp_93, out_Tmp_94, out_Tmp_95, out_Tmp_97, out_Tmp_99, out_Tmp_100, out_Tmp_111, out_modelIdCount, out_dirInfoQuad, out_devListSize, out_firstOne, out_Tmp_115, out_Tmp_118, out_sdv_59, out_Tmp_119, out_Tmp_120, out_Tmp_122, out_Tmp_126, out_Tmp_127, out_Tmp_128, out_Tmp_133, out_i_1, out_depDirLength, out_sbp2Device, out_Tmp_137, out_Tmp_139, out_Tmp_142, out_Tmp_143, out_j, out_Tmp_147, out_Tmp_149, out_Tmp_150, out_Tmp_151, out_Tmp_152, out_devInfo, out_unitDirEntries, out_sdv_73, out_Tmp_155, out_Tmp_158, out_Tmp_159, out_Tmp_161, out_Tmp_162, out_Tmp_164, out_Tmp_165, out_Tmp_166, out_Tmp_170, out_status_3, out_Tmp_174, out_Tmp_176, out_Tmp_177, out_info, out_Tmp_183, out_offset, out_Tmp_185, out_Tmp_186, out_Tmp_187, out_Tmp_188, out_Tmp_189 := in_unitDependentDirectory, in_Tmp_86, in_Tmp_93, in_Tmp_94, in_Tmp_95, in_Tmp_97, in_Tmp_99, in_Tmp_100, in_Tmp_111, in_modelIdCount, in_dirInfoQuad, in_devListSize, in_firstOne, in_Tmp_115, in_Tmp_118, in_sdv_59, in_Tmp_119, in_Tmp_120, in_Tmp_122, in_Tmp_126, in_Tmp_127, in_Tmp_128, in_Tmp_133, in_i_1, in_depDirLength, in_sbp2Device, in_Tmp_137, in_Tmp_139, in_Tmp_142, in_Tmp_143, in_j, in_Tmp_147, in_Tmp_149, in_Tmp_150, in_Tmp_151, in_Tmp_152, in_devInfo, in_unitDirEntries, in_sdv_73, in_Tmp_155, in_Tmp_158, in_Tmp_159, in_Tmp_161, in_Tmp_162, in_Tmp_164, in_Tmp_165, in_Tmp_166, in_Tmp_170, in_status_3, in_Tmp_174, in_Tmp_176, in_Tmp_177, in_info, in_Tmp_183, in_offset, in_Tmp_185, in_Tmp_186, in_Tmp_187, in_Tmp_188, in_Tmp_189;
    goto L141, exit;

  exit:
    return;

  L141:
    goto anon173_Else;

  anon173_Else:
    assume {:partition} in_directoryLength > out_i_1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} in_Sbp2Req != 0;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L169;

  L169:
    out_i_1 := out_i_1 + 1;
    goto L169_dummy;

  L169_dummy:
    call {:si_unique_call 2160} {:si_old_unique_call 1} out_unitDependentDirectory, out_Tmp_86, out_Tmp_93, out_Tmp_94, out_Tmp_95, out_Tmp_97, out_Tmp_99, out_Tmp_100, out_Tmp_111, out_modelIdCount, out_dirInfoQuad, out_devListSize, out_firstOne, out_Tmp_115, out_Tmp_118, out_sdv_59, out_Tmp_119, out_Tmp_120, out_Tmp_122, out_Tmp_126, out_Tmp_127, out_Tmp_128, out_Tmp_133, out_i_1, out_depDirLength, out_sbp2Device, out_Tmp_137, out_Tmp_139, out_Tmp_142, out_Tmp_143, out_j, out_Tmp_147, out_Tmp_149, out_Tmp_150, out_Tmp_151, out_Tmp_152, out_devInfo, out_unitDirEntries, out_sdv_73, out_Tmp_155, out_Tmp_158, out_Tmp_159, out_Tmp_161, out_Tmp_162, out_Tmp_164, out_Tmp_165, out_Tmp_166, out_Tmp_170, out_status_3, out_Tmp_174, out_Tmp_176, out_Tmp_177, out_info, out_Tmp_183, out_offset, out_Tmp_185, out_Tmp_186, out_Tmp_187, out_Tmp_188, out_Tmp_189 := Sbp2Get1394ConfigInfo_loop_L141(in_sdv_42, out_unitDependentDirectory, in_sdv_43, out_Tmp_86, in_sdv_45, in_sdv_47, in_sdv_49, out_Tmp_93, in_cromOffset, out_Tmp_94, out_Tmp_95, out_Tmp_97, out_Tmp_99, out_Tmp_100, in_directoryLength, out_Tmp_111, out_modelIdCount, out_dirInfoQuad, out_devListSize, out_firstOne, in_sdv_57, out_Tmp_115, in_sdv_58, out_Tmp_118, out_sdv_59, out_Tmp_119, out_Tmp_120, in_sdv_60, out_Tmp_122, in_directoryLocation, out_Tmp_126, out_Tmp_127, out_Tmp_128, out_Tmp_133, out_i_1, out_depDirLength, in_sdv_63, out_sbp2Device, in_firstDevInfo, in_cromOffset1, out_Tmp_137, in_ModelLeaf, out_Tmp_139, in_ModelLeaf_1, in_sdv_66, in_sdv_67, out_Tmp_142, out_Tmp_143, out_j, in_sdv_69, out_Tmp_147, out_Tmp_149, out_Tmp_150, out_Tmp_151, out_Tmp_152, out_devInfo, out_unitDirEntries, in_sdv_72, out_sdv_73, out_Tmp_155, in_sdv_74, out_Tmp_158, out_Tmp_159, in_currentGeneration, out_Tmp_161, out_Tmp_162, out_Tmp_164, out_Tmp_165, out_Tmp_166, in_vendorLeaf, out_Tmp_170, in_unitDirectory, in_ModelLeaf_2, out_status_3, in_packet_1, out_Tmp_174, out_Tmp_176, in_sdv_79, out_Tmp_177, out_info, out_Tmp_183, out_offset, out_Tmp_185, in_modelLeaf, out_Tmp_186, out_Tmp_187, in_sdv_80, out_Tmp_188, out_Tmp_189, in_DeviceExtension_1, in_Sbp2Req);
    return;

  anon176_Then:
    out_Tmp_93 := in_unitDirectory;
    assume {:nonnull} out_Tmp_93 != 0;
    assume out_Tmp_93 > 0;
    havoc out_Tmp_150;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} out_Tmp_150 != 129;
    goto L169;

  anon217_Then:
    assume {:partition} out_Tmp_150 == 129;
    out_Tmp_149 := in_unitDirectory;
    assume {:nonnull} out_Tmp_149 != 0;
    assume out_Tmp_149 > 0;
    havoc out_Tmp_165;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon218_Else;

  anon218_Else:
    goto L169;

  anon175_Then:
    assume {:partition} in_Sbp2Req == 0;
    out_Tmp_147 := out_devListSize;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    havoc out_Tmp_94;
    out_devInfo := out_Tmp_94 + out_Tmp_147 * 256;
    out_Tmp_111 := in_unitDirectory;
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} out_Tmp_111 != 0;
    assume out_Tmp_111 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} out_firstOne != 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    havoc out_offset;
    call {:si_unique_call 2155} out_sdv_73 := IoAllocateMdl(0, out_depDirLength, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_143;
    assume {:nonnull} out_Tmp_143 != 0;
    assume out_Tmp_143 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_118;
    assume {:nonnull} out_Tmp_118 != 0;
    assume out_Tmp_118 > 0;
    goto anon223_Else;

  anon223_Else:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_127;
    assume {:nonnull} out_Tmp_127 != 0;
    assume out_Tmp_127 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_189;
    assume {:nonnull} out_Tmp_189 != 0;
    assume out_Tmp_189 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_115;
    assume {:nonnull} out_Tmp_115 != 0;
    assume out_Tmp_115 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_137;
    assume {:nonnull} out_Tmp_137 != 0;
    assume out_Tmp_137 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_186;
    assume {:nonnull} out_Tmp_186 != 0;
    assume out_Tmp_186 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_126;
    assume {:nonnull} out_Tmp_126 != 0;
    assume out_Tmp_126 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_158;
    assume {:nonnull} out_Tmp_158 != 0;
    assume out_Tmp_158 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_166;
    assume {:nonnull} out_Tmp_166 != 0;
    assume out_Tmp_166 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_177;
    assume {:nonnull} out_Tmp_177 != 0;
    assume out_Tmp_177 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_3296;
    call {:si_unique_call 2154} out_status_3 := Sbp2SendRequest#1(in_DeviceExtension_1, vslice_dummy_var_3296, 2);
    goto anon179_Else;

  anon179_Else:
    assume {:partition} out_status_3 >= 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 2152} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_162;
    assume {:nonnull} out_Tmp_162 != 0;
    assume out_Tmp_162 > 0;
    call {:si_unique_call 2153} out_dirInfoQuad := corral_nondet();
    out_depDirLength := out_dirInfoQuad * 4;
    goto anon224_Else;

  anon224_Else:
    assume {:partition} out_depDirLength <= 256;
    call {:si_unique_call 2150} sdv_ExFreePool(0);
    out_Tmp_161 := out_depDirLength + 4;
    call {:si_unique_call 2151} out_unitDependentDirectory := ExAllocatePoolWithTag(0, out_Tmp_161, 846226035);
    goto anon180_Else;

  anon180_Else:
    assume {:partition} out_unitDependentDirectory != 0;
    out_Tmp_183 := out_depDirLength + 4;
    call {:si_unique_call 2149} out_sdv_59 := IoAllocateMdl(0, out_Tmp_183, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_99;
    assume {:nonnull} out_Tmp_99 != 0;
    assume out_Tmp_99 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_100;
    assume {:nonnull} out_Tmp_100 != 0;
    assume out_Tmp_100 > 0;
    goto anon225_Else;

  anon225_Else:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    out_j := 1;
    goto L245;

  L245:
    call {:si_unique_call 2147} out_Tmp_86, out_modelIdCount, out_devListSize, out_Tmp_122, out_Tmp_133, out_Tmp_139, out_j, out_Tmp_152, out_unitDirEntries, out_Tmp_170, out_status_3, out_Tmp_174, out_Tmp_176, out_Tmp_185, out_Tmp_187 := Sbp2Get1394ConfigInfo_loop_L245(out_unitDependentDirectory, out_Tmp_86, in_sdv_45, in_sdv_49, out_modelIdCount, out_devListSize, out_Tmp_122, out_Tmp_133, out_depDirLength, in_firstDevInfo, in_cromOffset1, out_Tmp_139, out_j, out_Tmp_152, out_devInfo, out_unitDirEntries, in_sdv_74, in_vendorLeaf, out_Tmp_170, in_ModelLeaf_2, out_status_3, in_packet_1, out_Tmp_174, out_Tmp_176, in_sdv_79, out_offset, out_Tmp_185, out_Tmp_187, in_DeviceExtension_1);
    goto L245_last;

  L245_last:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_176;
    assume {:nonnull} out_Tmp_176 != 0;
    assume out_Tmp_176 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_122;
    assume {:nonnull} out_Tmp_122 != 0;
    assume out_Tmp_122 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_187;
    assume {:nonnull} out_Tmp_187 != 0;
    assume out_Tmp_187 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_174;
    assume {:nonnull} out_Tmp_174 != 0;
    assume out_Tmp_174 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_185;
    assume {:nonnull} out_Tmp_185 != 0;
    assume out_Tmp_185 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_3295;
    call {:si_unique_call 2148} out_status_3 := Sbp2SendRequest#1(in_DeviceExtension_1, vslice_dummy_var_3295, 2);
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_status_3 >= 0;
    out_Tmp_152 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_152 != 0;
    assume out_Tmp_152 > 0;
    havoc out_Tmp_170;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_Tmp_170 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 2156} out_status_3 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L272;

  L272:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto L277;

  L277:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L281;

  L281:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L283;

  L283:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L258;

  L258:
    out_Tmp_139 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L310;

  L310:
    out_j := out_j + 1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} INTDIV(out_depDirLength, 4) < out_j;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 2134} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_188;
    assume {:nonnull} out_Tmp_188 != 0;
    assume out_Tmp_188 > 0;
    goto L169;

  anon230_Then:
    assume {:partition} out_j <= INTDIV(out_depDirLength, 4);
    assume false;
    return;

  anon208_Then:
    out_Tmp_86 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_86 != 0;
    assume out_Tmp_86 > 0;
    havoc out_Tmp_133;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_133 != 23;
    goto L310;

  anon231_Then:
    assume {:partition} out_Tmp_133 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 2159} Sbp2ParseTextLeaf(in_DeviceExtension_1, out_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_2);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_3297;
    call {:si_unique_call 2157} out_status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3297, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 2158} sdv_ExFreePool(0);
    goto L302;

  L302:
    out_modelIdCount := out_modelIdCount + 1;
    goto L310;

  anon185_Then:
    goto L302;

  anon209_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon229_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L310;

  anon184_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L283;

  anon183_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L281;

  anon182_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L279;

  anon228_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L277;

  anon227_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L272;

  anon226_Then:
    assume {:partition} out_Tmp_170 != 20;
    goto L258;

  anon178_Then:
    assume {:partition} out_firstOne == 0;
    out_firstOne := 1;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 2141} out_depDirLength := corral_nondet();
    out_j := 0;
    goto L333;

  L333:
    call {:si_unique_call 2140} out_Tmp_97, out_modelIdCount, out_devListSize, out_Tmp_119, out_Tmp_120, out_Tmp_128, out_j, out_unitDirEntries, out_Tmp_155, out_Tmp_159, out_status_3 := Sbp2Get1394ConfigInfo_loop_L333(out_unitDependentDirectory, in_sdv_43, out_Tmp_97, out_modelIdCount, out_devListSize, in_sdv_58, out_Tmp_119, out_Tmp_120, out_Tmp_128, out_depDirLength, in_firstDevInfo, in_cromOffset1, in_ModelLeaf_1, in_sdv_67, out_j, in_sdv_69, out_devInfo, out_unitDirEntries, out_Tmp_155, out_Tmp_159, in_vendorLeaf, out_status_3, in_packet_1, in_modelLeaf, in_DeviceExtension_1);
    goto L333_last;

  L333_last:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} out_depDirLength > out_j;
    out_Tmp_128 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_128 != 0;
    assume out_Tmp_128 > 0;
    havoc out_Tmp_155;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} out_Tmp_155 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L347;

  L347:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 2142} out_status_3 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L353;

  L353:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L357;

  L357:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L359;

  L359:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L361;

  L361:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L363;

  L363:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L336;

  L336:
    out_Tmp_120 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_120 != 0;
    assume out_Tmp_120 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} out_Tmp_120 != 0;
    assume out_Tmp_120 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} out_Tmp_120 != 0;
    assume out_Tmp_120 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L396;

  L396:
    out_j := out_j + 1;
    assume false;
    return;

  anon210_Then:
    out_Tmp_119 := out_unitDependentDirectory;
    assume {:nonnull} out_Tmp_119 != 0;
    assume out_Tmp_119 > 0;
    havoc out_Tmp_97;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_Tmp_97 != 23;
    goto L396;

  anon236_Then:
    assume {:partition} out_Tmp_97 == 23;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_159;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 2146} Sbp2ParseTextLeaf(in_DeviceExtension_1, out_unitDependentDirectory, in_cromOffset1, in_ModelLeaf_1);
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_3294;
    call {:si_unique_call 2144} out_status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3294, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 2145} sdv_ExFreePool(0);
    goto L377;

  L377:
    out_modelIdCount := out_modelIdCount + 1;
    goto L396;

  anon193_Then:
    goto L377;

  anon192_Then:
    goto L377;

  anon211_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon235_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L396;

  anon191_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L363;

  anon190_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L361;

  anon189_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L359;

  anon234_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L357;

  anon188_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L353;

  anon233_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} in_modelLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 2143} out_status_3 := Sbp2_ProcessTextualDescriptor(in_modelLeaf, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L347;

  anon187_Then:
    assume {:partition} in_modelLeaf == 0;
    goto L347;

  anon232_Then:
    assume {:partition} out_Tmp_155 != 20;
    goto L336;

  anon186_Then:
    assume {:partition} out_j >= out_depDirLength;
    goto L169;

  anon201_Then:
    goto L169;

  anon202_Then:
    out_Tmp_164 := in_unitDirectory;
    assume {:nonnull} out_Tmp_164 != 0;
    assume out_Tmp_164 > 0;
    havoc out_Tmp_142;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} out_Tmp_142 == 23;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_devListSize >= out_modelIdCount;
    out_Tmp_151 := out_modelIdCount;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    havoc out_Tmp_95;
    out_info := out_Tmp_95 + out_Tmp_151 * 256;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset1 != 0;
    assume in_cromOffset1 > 0;
    call {:si_unique_call 2139} Sbp2ParseTextLeaf(in_DeviceExtension_1, in_unitDirectory, in_cromOffset1, in_ModelLeaf);
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_3293;
    call {:si_unique_call 2137} out_status_3 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_3293, uniModelId__DEVICE_INFORMATION(out_info));
    call {:si_unique_call 2138} sdv_ExFreePool(0);
    goto L416;

  L416:
    out_modelIdCount := out_modelIdCount + 1;
    goto L169;

  anon195_Then:
    goto L416;

  anon222_Then:
    goto L416;

  anon194_Then:
    assume {:partition} out_modelIdCount > out_devListSize;
    goto L169;

  anon221_Then:
    assume {:partition} out_Tmp_142 != 23;
    goto L169;

  anon203_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_sbp2Device := 1;
    goto L169;

  anon204_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L169;

  anon205_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon206_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon207_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon219_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} out_devListSize != 0;
    goto L470;

  L470:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} in_vendorLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 2135} out_status_3 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L476;

  L476:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L169;

  anon197_Then:
    assume {:partition} in_vendorLeaf == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L476;

  anon220_Then:
    assume {:partition} out_devListSize == 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} in_modelLeaf != 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 2136} out_status_3 := Sbp2_ProcessTextualDescriptor(in_modelLeaf, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L470;

  anon196_Then:
    assume {:partition} in_modelLeaf == 0;
    goto L470;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L141(in_sdv_42: int, in_unitDependentDirectory: int, in_sdv_43: int, in_Tmp_86: int, in_sdv_45: int, in_sdv_47: int, in_sdv_49: int, in_Tmp_93: int, in_cromOffset: int, in_Tmp_94: int, in_Tmp_95: int, in_Tmp_97: int, in_Tmp_99: int, in_Tmp_100: int, in_directoryLength: int, in_Tmp_111: int, in_modelIdCount: int, in_dirInfoQuad: int, in_devListSize: int, in_firstOne: int, in_sdv_57: int, in_Tmp_115: int, in_sdv_58: int, in_Tmp_118: int, in_sdv_59: int, in_Tmp_119: int, in_Tmp_120: int, in_sdv_60: int, in_Tmp_122: int, in_directoryLocation: int, in_Tmp_126: int, in_Tmp_127: int, in_Tmp_128: int, in_Tmp_133: int, in_i_1: int, in_depDirLength: int, in_sdv_63: int, in_sbp2Device: int, in_firstDevInfo: int, in_cromOffset1: int, in_Tmp_137: int, in_ModelLeaf: int, in_Tmp_139: int, in_ModelLeaf_1: int, in_sdv_66: int, in_sdv_67: int, in_Tmp_142: int, in_Tmp_143: int, in_j: int, in_sdv_69: int, in_Tmp_147: int, in_Tmp_149: int, in_Tmp_150: int, in_Tmp_151: int, in_Tmp_152: int, in_devInfo: int, in_unitDirEntries: int, in_sdv_72: int, in_sdv_73: int, in_Tmp_155: int, in_sdv_74: int, in_Tmp_158: int, in_Tmp_159: int, in_currentGeneration: int, in_Tmp_161: int, in_Tmp_162: int, in_Tmp_164: int, in_Tmp_165: int, in_Tmp_166: int, in_vendorLeaf: int, in_Tmp_170: int, in_unitDirectory: int, in_ModelLeaf_2: int, in_status_3: int, in_packet_1: int, in_Tmp_174: int, in_Tmp_176: int, in_sdv_79: int, in_Tmp_177: int, in_info: int, in_Tmp_183: int, in_offset: int, in_Tmp_185: int, in_modelLeaf: int, in_Tmp_186: int, in_Tmp_187: int, in_sdv_80: int, in_Tmp_188: int, in_Tmp_189: int, in_DeviceExtension_1: int, in_Sbp2Req: int) returns (out_unitDependentDirectory: int, out_Tmp_86: int, out_Tmp_93: int, out_Tmp_94: int, out_Tmp_95: int, out_Tmp_97: int, out_Tmp_99: int, out_Tmp_100: int, out_Tmp_111: int, out_modelIdCount: int, out_dirInfoQuad: int, out_devListSize: int, out_firstOne: int, out_Tmp_115: int, out_Tmp_118: int, out_sdv_59: int, out_Tmp_119: int, out_Tmp_120: int, out_Tmp_122: int, out_Tmp_126: int, out_Tmp_127: int, out_Tmp_128: int, out_Tmp_133: int, out_i_1: int, out_depDirLength: int, out_sbp2Device: int, out_Tmp_137: int, out_Tmp_139: int, out_Tmp_142: int, out_Tmp_143: int, out_j: int, out_Tmp_147: int, out_Tmp_149: int, out_Tmp_150: int, out_Tmp_151: int, out_Tmp_152: int, out_devInfo: int, out_unitDirEntries: int, out_sdv_73: int, out_Tmp_155: int, out_Tmp_158: int, out_Tmp_159: int, out_Tmp_161: int, out_Tmp_162: int, out_Tmp_164: int, out_Tmp_165: int, out_Tmp_166: int, out_Tmp_170: int, out_status_3: int, out_Tmp_174: int, out_Tmp_176: int, out_Tmp_177: int, out_info: int, out_Tmp_183: int, out_offset: int, out_Tmp_185: int, out_Tmp_186: int, out_Tmp_187: int, out_Tmp_188: int, out_Tmp_189: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_Tmp_93 == in_Tmp_93 || out_Tmp_93 == in_unitDirectory;
  free ensures {:va_keep} out_Tmp_111 == in_Tmp_111 || out_Tmp_111 == in_unitDirectory;
  free ensures {:va_keep} out_firstOne == 1 || out_firstOne == in_firstOne;
  free ensures {:va_keep} out_sbp2Device == 1 || out_sbp2Device == in_sbp2Device;
  free ensures {:va_keep} out_Tmp_149 == in_Tmp_149 || out_Tmp_149 == in_unitDirectory;
  free ensures {:va_keep} out_Tmp_164 == in_Tmp_164 || out_Tmp_164 == in_unitDirectory;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L493(in_Tmp_90: int, in_i_1: int, in_devInfo: int, in_Tmp_153: int, in_DeviceExtension_1: int) returns (out_Tmp_90: int, out_i_1: int, out_devInfo: int, out_Tmp_153: int)
{

  entry:
    out_Tmp_90, out_i_1, out_devInfo, out_Tmp_153 := in_Tmp_90, in_i_1, in_devInfo, in_Tmp_153;
    goto L493, exit;

  exit:
    return;

  L493:
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    goto anon200_Else;

  anon200_Else:
    out_Tmp_90 := out_i_1;
    assume {:nonnull} in_DeviceExtension_1 != 0;
    assume in_DeviceExtension_1 > 0;
    havoc out_Tmp_153;
    out_devInfo := out_Tmp_153 + out_Tmp_90 * 256;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 2161} sdv_ExFreePool(0);
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L497;

  L497:
    out_i_1 := out_i_1 + 1;
    goto L497_dummy;

  L497_dummy:
    call {:si_unique_call 2162} {:si_old_unique_call 1} out_Tmp_90, out_i_1, out_devInfo, out_Tmp_153 := Sbp2Get1394ConfigInfo_loop_L493(out_Tmp_90, out_i_1, out_devInfo, out_Tmp_153, in_DeviceExtension_1);
    return;

  anon237_Then:
    goto L497;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L493(in_Tmp_90: int, in_i_1: int, in_devInfo: int, in_Tmp_153: int, in_DeviceExtension_1: int) returns (out_Tmp_90: int, out_i_1: int, out_devInfo: int, out_Tmp_153: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ParseTextLeaf_loop_L123(in_i_2: int, in_Tmp_243: int, in_Tmp_247: int, in_Tmp_249: int, in_Tmp_261: int, in_Tmp_263: int, in_leafLength: int, in_packet_2: int, in_status_6: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_243: int, out_Tmp_247: int, out_Tmp_249: int, out_Tmp_261: int, out_Tmp_263: int, out_status_6: int)
{
  var vslice_dummy_var_3298: int;

  entry:
    out_i_2, out_Tmp_243, out_Tmp_247, out_Tmp_249, out_Tmp_261, out_Tmp_263, out_status_6 := in_i_2, in_Tmp_243, in_Tmp_247, in_Tmp_249, in_Tmp_261, in_Tmp_263, in_status_6;
    goto L123, exit;

  exit:
    return;

  L123:
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_261;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_261 != 0;
    assume out_Tmp_261 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_263;
    assume {:nonnull} out_Tmp_263 != 0;
    assume out_Tmp_263 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_249;
    assume {:nonnull} out_Tmp_249 != 0;
    assume out_Tmp_249 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_247;
    assume {:nonnull} out_Tmp_247 != 0;
    assume out_Tmp_247 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_243;
    assume {:nonnull} out_Tmp_243 != 0;
    assume out_Tmp_243 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_3298;
    call {:si_unique_call 2163} out_status_6 := Sbp2SendRequest#1(in_DeviceExtension_2, vslice_dummy_var_3298, 2);
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_status_6 >= 0;
    out_i_2 := out_i_2 + 1;
    goto anon33_Then;

  anon33_Then:
    assume {:partition} out_i_2 <= INTDIV(in_leafLength, 4);
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    call {:si_unique_call 2164} {:si_old_unique_call 1} out_i_2, out_Tmp_243, out_Tmp_247, out_Tmp_249, out_Tmp_261, out_Tmp_263, out_status_6 := Sbp2ParseTextLeaf_loop_L123(out_i_2, out_Tmp_243, out_Tmp_247, out_Tmp_249, out_Tmp_261, out_Tmp_263, in_leafLength, in_packet_2, out_status_6, in_DeviceExtension_2, in_ModelLeafLocation);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L123(in_i_2: int, in_Tmp_243: int, in_Tmp_247: int, in_Tmp_249: int, in_Tmp_261: int, in_Tmp_263: int, in_leafLength: int, in_packet_2: int, in_status_6: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_243: int, out_Tmp_247: int, out_Tmp_249: int, out_Tmp_261: int, out_Tmp_263: int, out_status_6: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ParseTextLeaf_loop_L42(in_Tmp_241: int, in_Tmp_244: int, in_Tmp_246: int, in_waitValue_1: int, in_Tmp_248: int, in_Tmp_254: int, in_Tmp_257: int, in_Tmp_258: int, in_Tmp_259: int, in_Tmp_260: int, in_currentGeneration_1: int, in_retries: int, in_tModelLeafMdl: int, in_Tmp_270: int, in_packet_2: int, in_status_6: int, in_Tmp_272: int, in_Tmp_273: int, in_Tmp_274: int, in_event: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int, in_vslice_dummy_var_5: int) returns (out_Tmp_241: int, out_Tmp_244: int, out_Tmp_246: int, out_Tmp_248: int, out_Tmp_254: int, out_Tmp_257: int, out_Tmp_258: int, out_Tmp_259: int, out_Tmp_260: int, out_currentGeneration_1: int, out_retries: int, out_Tmp_270: int, out_status_6: int, out_Tmp_272: int, out_Tmp_273: int, out_Tmp_274: int, out_vslice_dummy_var_5: int)
{
  var vslice_dummy_var_3299: int;
  var vslice_dummy_var_3300: int;

  entry:
    out_Tmp_241, out_Tmp_244, out_Tmp_246, out_Tmp_248, out_Tmp_254, out_Tmp_257, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_currentGeneration_1, out_retries, out_Tmp_270, out_status_6, out_Tmp_272, out_Tmp_273, out_Tmp_274, out_vslice_dummy_var_5 := in_Tmp_241, in_Tmp_244, in_Tmp_246, in_Tmp_248, in_Tmp_254, in_Tmp_257, in_Tmp_258, in_Tmp_259, in_Tmp_260, in_currentGeneration_1, in_retries, in_Tmp_270, in_status_6, in_Tmp_272, in_Tmp_273, in_Tmp_274, in_vslice_dummy_var_5;
    goto L42, exit;

  exit:
    return;

  L42:
    assume {:CounterLoop 3} {:Counter "retries"} true;
    goto anon26_Else;

  anon26_Else:
    assume {:partition} out_retries != 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_258;
    assume {:nonnull} out_Tmp_258 != 0;
    assume out_Tmp_258 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_272;
    assume {:nonnull} out_Tmp_272 != 0;
    assume out_Tmp_272 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_3299;
    call {:si_unique_call 2167} out_status_6 := Sbp2SendRequest#1(in_DeviceExtension_2, vslice_dummy_var_3299, 2);
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_254;
    assume {:nonnull} out_Tmp_254 != 0;
    assume out_Tmp_254 > 0;
    havoc out_currentGeneration_1;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_270;
    assume {:nonnull} out_Tmp_270 != 0;
    assume out_Tmp_270 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_248;
    assume {:nonnull} out_Tmp_248 != 0;
    assume out_Tmp_248 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_241;
    assume {:nonnull} out_Tmp_241 != 0;
    assume out_Tmp_241 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_260;
    assume {:nonnull} out_Tmp_260 != 0;
    assume out_Tmp_260 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_246;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_274;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_273;
    assume {:nonnull} out_Tmp_273 != 0;
    assume out_Tmp_273 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_257;
    assume {:nonnull} out_Tmp_257 != 0;
    assume out_Tmp_257 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_244;
    assume {:nonnull} out_Tmp_244 != 0;
    assume out_Tmp_244 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_259;
    assume {:nonnull} out_Tmp_259 != 0;
    assume out_Tmp_259 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_3300;
    call {:si_unique_call 2168} out_status_6 := Sbp2SendRequest#1(in_DeviceExtension_2, vslice_dummy_var_3300, 2);
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_status_6 < 0;
    call {:si_unique_call 2165} KeInitializeEvent(in_event, 0, 0);
    assume {:nonnull} in_waitValue_1 != 0;
    assume in_waitValue_1 > 0;
    call {:si_unique_call 2166} out_vslice_dummy_var_5 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_1);
    out_retries := out_retries - 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    call {:si_unique_call 2169} {:si_old_unique_call 1} out_Tmp_241, out_Tmp_244, out_Tmp_246, out_Tmp_248, out_Tmp_254, out_Tmp_257, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_currentGeneration_1, out_retries, out_Tmp_270, out_status_6, out_Tmp_272, out_Tmp_273, out_Tmp_274, out_vslice_dummy_var_5 := Sbp2ParseTextLeaf_loop_L42(out_Tmp_241, out_Tmp_244, out_Tmp_246, in_waitValue_1, out_Tmp_248, out_Tmp_254, out_Tmp_257, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_currentGeneration_1, out_retries, in_tModelLeafMdl, out_Tmp_270, in_packet_2, out_status_6, out_Tmp_272, out_Tmp_273, out_Tmp_274, in_event, in_DeviceExtension_2, in_ModelLeafLocation, out_vslice_dummy_var_5);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L42(in_Tmp_241: int, in_Tmp_244: int, in_Tmp_246: int, in_waitValue_1: int, in_Tmp_248: int, in_Tmp_254: int, in_Tmp_257: int, in_Tmp_258: int, in_Tmp_259: int, in_Tmp_260: int, in_currentGeneration_1: int, in_retries: int, in_tModelLeafMdl: int, in_Tmp_270: int, in_packet_2: int, in_status_6: int, in_Tmp_272: int, in_Tmp_273: int, in_Tmp_274: int, in_event: int, in_DeviceExtension_2: int, in_ModelLeafLocation: int, in_vslice_dummy_var_5: int) returns (out_Tmp_241: int, out_Tmp_244: int, out_Tmp_246: int, out_Tmp_248: int, out_Tmp_254: int, out_Tmp_257: int, out_Tmp_258: int, out_Tmp_259: int, out_Tmp_260: int, out_currentGeneration_1: int, out_retries: int, out_Tmp_270: int, out_status_6: int, out_Tmp_272: int, out_Tmp_273: int, out_Tmp_274: int, out_vslice_dummy_var_5: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_vslice_dummy_var_5 == 258 || out_vslice_dummy_var_5 == 0 || out_vslice_dummy_var_5 == in_vslice_dummy_var_5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(in_nextEntry: int, in_queueEntry: int, in_sdv_310: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_310: int)
{

  entry:
    out_nextEntry, out_queueEntry, out_sdv_310 := in_nextEntry, in_queueEntry, in_sdv_310;
    goto L21, exit;

  exit:
    return;

  L21:
    goto anon13_Else;

  anon13_Else:
    call {:si_unique_call 2170} out_sdv_310 := sdv_containing_record(out_nextEntry, 0);
    out_queueEntry := out_sdv_310;
    assume {:nonnull} out_queueEntry != 0;
    assume out_queueEntry > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} out_nextEntry != 0;
    assume out_nextEntry > 0;
    havoc out_nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    havoc out_nextEntry;
    return;
}



procedure {:LoopProcedure} Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L21(in_nextEntry: int, in_queueEntry: int, in_sdv_310: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_310: int);
  free ensures {:va_keep} out_nextEntry == in_nextEntry;
  free ensures {:va_keep} out_queueEntry == in_queueEntry;
  free ensures {:va_keep} out_sdv_310 == in_sdv_310;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InsertByKeyDeviceQueue_loop_L18(in_nextEntry_1: int, in_sdv_345: int, in_queueEntry2: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_sdv_345: int, out_queueEntry2: int)
{

  entry:
    out_nextEntry_1, out_sdv_345, out_queueEntry2 := in_nextEntry_1, in_sdv_345, in_queueEntry2;
    goto L18, exit;

  exit:
    return;

  L18:
    goto anon7_Else;

  anon7_Else:
    call {:si_unique_call 2171} out_sdv_345 := sdv_containing_record(out_nextEntry_1, 0);
    out_queueEntry2 := out_sdv_345;
    assume {:nonnull} out_queueEntry2 != 0;
    assume out_queueEntry2 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:nonnull} out_nextEntry_1 != 0;
    assume out_nextEntry_1 > 0;
    havoc out_nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_nextEntry_1;
    return;
}



procedure {:LoopProcedure} Sbp2InsertByKeyDeviceQueue_loop_L18(in_nextEntry_1: int, in_sdv_345: int, in_queueEntry2: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_sdv_345: int, out_queueEntry2: int);
  free ensures {:va_keep} out_nextEntry_1 == in_nextEntry_1;
  free ensures {:va_keep} out_sdv_345 == in_sdv_345;
  free ensures {:va_keep} out_queueEntry2 == in_queueEntry2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_928: int, in_sdv_395: int, in_sdv_396: int, in_Tmp_938: int, in_Tmp_941: int, in_Tmp_949: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_928: int, out_Tmp_938: int, out_Tmp_941: int, out_Tmp_949: int)
{

  entry:
    out_i_3, out_Tmp_928, out_Tmp_938, out_Tmp_941, out_Tmp_949 := in_i_3, in_Tmp_928, in_Tmp_938, in_Tmp_941, in_Tmp_949;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_949 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_941;
    assume {:nonnull} out_Tmp_941 != 0;
    assume out_Tmp_941 > 0;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_938 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_928;
    assume {:nonnull} out_Tmp_928 != 0;
    assume out_Tmp_928 > 0;
    out_i_3 := out_i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 2172} {:si_old_unique_call 1} out_i_3, out_Tmp_928, out_Tmp_938, out_Tmp_941, out_Tmp_949 := Sbp2InitializeOrb_loop_L46(out_i_3, out_Tmp_928, in_sdv_395, in_sdv_396, out_Tmp_938, out_Tmp_941, out_Tmp_949, in_CallbackContext_1);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_928: int, in_sdv_395: int, in_sdv_396: int, in_Tmp_938: int, in_Tmp_941: int, in_Tmp_949: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_928: int, out_Tmp_938: int, out_Tmp_941: int, out_Tmp_949: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2IssueInternalCommand_loop_L154(in_i_4: int, in_waitValue_3: int, in_event_2: int, in_DeviceExtension_18: int, in_vslice_dummy_var_91: int) returns (out_i_4: int, out_vslice_dummy_var_91: int)
{

  entry:
    out_i_4, out_vslice_dummy_var_91 := in_i_4, in_vslice_dummy_var_91;
    goto L154, exit;

  exit:
    return;

  L154:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon61_Else;

  anon61_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 2173} KeInitializeEvent(in_event_2, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 2174} out_vslice_dummy_var_91 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    goto anon62_Else;

  anon62_Else:
    out_i_4 := out_i_4 + 1;
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    call {:si_unique_call 2175} {:si_old_unique_call 1} out_i_4, out_vslice_dummy_var_91 := Sbp2IssueInternalCommand_loop_L154(out_i_4, in_waitValue_3, in_event_2, in_DeviceExtension_18, out_vslice_dummy_var_91);
    return;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L154(in_i_4: int, in_waitValue_3: int, in_event_2: int, in_DeviceExtension_18: int, in_vslice_dummy_var_91: int) returns (out_i_4: int, out_vslice_dummy_var_91: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_91 == 258 || out_vslice_dummy_var_91 == 0 || out_vslice_dummy_var_91 == in_vslice_dummy_var_91;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2IssueInternalCommand_loop_L50(in_i_4: int, in_Tmp_957: int, in_irpStack_6: int, in_cdb_2: int, in_waitValue_3: int, in_inquiryMdl: int, in_Tmp_958: int, in_modeMdl: int, in_context_3: int, in_Tmp_959: int, in_Tmp_960: int, in_irp_4: int, in_senseInfoBuffer: int, in_srb_4: int, in_status_30: int, in_event_2: int, in_retryCount: int, in_DeviceExtension_18: int, in_Scsiop: int, in_vslice_dummy_var_90: int, in_vslice_dummy_var_91: int) returns (out_i_4: int, out_Tmp_957: int, out_irpStack_6: int, out_cdb_2: int, out_inquiryMdl: int, out_Tmp_958: int, out_modeMdl: int, out_Tmp_959: int, out_Tmp_960: int, out_status_30: int, out_retryCount: int, out_vslice_dummy_var_90: int, out_vslice_dummy_var_91: int)
{
  var vslice_dummy_var_3301: int;

  entry:
    out_i_4, out_Tmp_957, out_irpStack_6, out_cdb_2, out_inquiryMdl, out_Tmp_958, out_modeMdl, out_Tmp_959, out_Tmp_960, out_status_30, out_retryCount, out_vslice_dummy_var_90, out_vslice_dummy_var_91 := in_i_4, in_Tmp_957, in_irpStack_6, in_cdb_2, in_inquiryMdl, in_Tmp_958, in_modeMdl, in_Tmp_959, in_Tmp_960, in_status_30, in_retryCount, in_vslice_dummy_var_90, in_vslice_dummy_var_91;
    goto L50, exit;

  exit:
    return;

  L50:
    call {:si_unique_call 2176} out_irpStack_6 := sdv_IoGetNextIrpStackLocation(in_irp_4);
    assume {:nonnull} out_irpStack_6 != 0;
    assume out_irpStack_6 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_irpStack_6)] := 15;
    assume {:nonnull} out_irpStack_6 != 0;
    assume out_irpStack_6 > 0;
    assume {:nonnull} out_irpStack_6 != 0;
    assume out_irpStack_6 > 0;
    call {:si_unique_call 2177} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    out_cdb_2 := Cdb__SCSI_REQUEST_BLOCK(in_srb_4);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} in_Scsiop != 18;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} in_Scsiop == 26;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_retryCount != 0;
    goto L83;

  L83:
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto L71;

  L71:
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_context_3 != 0;
    assume in_context_3 > 0;
    call {:si_unique_call 2179} KeInitializeEvent(Event__REQUEST_CONTEXT(in_context_3), 0, 0);
    call {:si_unique_call 2180} sdv_IoSetCompletionRoutine(in_irp_4, li2bplFunctionConstant337, in_context_3, 1, 1, 1);
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    havoc vslice_dummy_var_3301;
    call {:si_unique_call 2181} out_status_30 := sdv_IoCallDriver#1(vslice_dummy_var_3301, in_irp_4);
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L139;

  L139:
    call {:si_unique_call 2178} out_vslice_dummy_var_90 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    havoc out_Tmp_958;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_Tmp_958 != 1;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    havoc out_Tmp_960;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} out_Tmp_960 == 18;
    out_status_30 := 0;
    goto L149;

  L149:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_status_30 != 0;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 3 > out_retryCount;
    out_i_4 := 0;
    goto L154;

  L154:
    call {:si_unique_call 2184} out_i_4, out_vslice_dummy_var_91 := Sbp2IssueInternalCommand_loop_L154(out_i_4, in_waitValue_3, in_event_2, in_DeviceExtension_18, out_vslice_dummy_var_91);
    goto L154_last;

  L154_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 2185} KeInitializeEvent(in_event_2, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 2186} out_vslice_dummy_var_91 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_i_4 := out_i_4 + 1;
    assume false;
    return;

  anon62_Then:
    goto L150;

  L150:
    goto anon58_Else;

  anon58_Else:
    assume {:partition} 3 > out_retryCount;
    goto anon63_Then;

  anon63_Then:
    assume {:partition} out_status_30 != 0;
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    call {:si_unique_call 2187} {:si_old_unique_call 1} out_i_4, out_Tmp_957, out_irpStack_6, out_cdb_2, out_inquiryMdl, out_Tmp_958, out_modeMdl, out_Tmp_959, out_Tmp_960, out_status_30, out_retryCount, out_vslice_dummy_var_90, out_vslice_dummy_var_91 := Sbp2IssueInternalCommand_loop_L50(out_i_4, out_Tmp_957, out_irpStack_6, out_cdb_2, in_waitValue_3, out_inquiryMdl, out_Tmp_958, out_modeMdl, in_context_3, out_Tmp_959, out_Tmp_960, in_irp_4, in_senseInfoBuffer, in_srb_4, out_status_30, in_event_2, out_retryCount, in_DeviceExtension_18, in_Scsiop, out_vslice_dummy_var_90, out_vslice_dummy_var_91);
    return;

  anon61_Then:
    assume {:partition} out_i_4 >= 6;
    goto L150;

  anon60_Then:
    assume {:partition} out_retryCount >= 3;
    goto L150;

  anon59_Then:
    goto L150;

  anon57_Then:
    assume {:partition} out_status_30 == 0;
    goto L150;

  anon73_Then:
    assume {:partition} out_Tmp_960 != 18;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} in_senseInfoBuffer != 0;
    assume in_senseInfoBuffer > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_status_30 := -1073741808;
    out_retryCount := out_retryCount + 1;
    goto L149;

  anon64_Then:
    goto L166;

  L166:
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    havoc out_Tmp_959;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_Tmp_959 == 22;
    goto anon65_Then;

  anon65_Then:
    assume {:partition} 0 >= out_retryCount;
    goto L171;

  L171:
    out_retryCount := out_retryCount + 1;
    out_status_30 := -1073741823;
    goto L149;

  anon74_Then:
    assume {:partition} out_Tmp_959 != 22;
    goto L171;

  anon56_Then:
    goto L166;

  anon72_Then:
    assume {:partition} out_Tmp_958 == 1;
    out_status_30 := 0;
    goto L150;

  anon54_Then:
    goto anon55_Then;

  anon55_Then:
    assume {:partition} out_status_30 == 259;
    goto L139;

  anon75_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 2183} out_modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon52_Then;

  anon52_Then:
    assume {:partition} out_modeMdl != 0;
    goto L83;

  anon66_Then:
    assume {:partition} in_Scsiop != 26;
    goto L71;

  anon70_Then:
    assume {:partition} in_Scsiop == 18;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_srb_4 != 0;
    assume in_srb_4 > 0;
    assume {:nonnull} in_DeviceExtension_18 != 0;
    assume in_DeviceExtension_18 > 0;
    havoc out_Tmp_957;
    assume {:nonnull} out_Tmp_957 != 0;
    assume out_Tmp_957 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} out_retryCount != 0;
    goto L118;

  L118:
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto L71;

  anon71_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 2182} out_inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon53_Else;

  anon53_Else:
    assume {:partition} out_inquiryMdl != 0;
    goto L118;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L50(in_i_4: int, in_Tmp_957: int, in_irpStack_6: int, in_cdb_2: int, in_waitValue_3: int, in_inquiryMdl: int, in_Tmp_958: int, in_modeMdl: int, in_context_3: int, in_Tmp_959: int, in_Tmp_960: int, in_irp_4: int, in_senseInfoBuffer: int, in_srb_4: int, in_status_30: int, in_event_2: int, in_retryCount: int, in_DeviceExtension_18: int, in_Scsiop: int, in_vslice_dummy_var_90: int, in_vslice_dummy_var_91: int) returns (out_i_4: int, out_Tmp_957: int, out_irpStack_6: int, out_cdb_2: int, out_inquiryMdl: int, out_Tmp_958: int, out_modeMdl: int, out_Tmp_959: int, out_Tmp_960: int, out_status_30: int, out_retryCount: int, out_vslice_dummy_var_90: int, out_vslice_dummy_var_91: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, alloc, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_cdb_2 == in_cdb_2 || out_cdb_2 == Cdb__SCSI_REQUEST_BLOCK(in_srb_4);
  free ensures {:va_keep} out_status_30 == 0 || out_status_30 == -1073741808 || out_status_30 == -1073741823 || out_status_30 == in_status_30;
  free ensures {:va_keep} out_vslice_dummy_var_90 == 258 || out_vslice_dummy_var_90 == 0 || out_vslice_dummy_var_90 == in_vslice_dummy_var_90;
  free ensures {:va_keep} out_vslice_dummy_var_91 == 258 || out_vslice_dummy_var_91 == 0 || out_vslice_dummy_var_91 == in_vslice_dummy_var_91;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2PreAllocateLists_loop_L117(in_Tmp_1247: int, in_Tmp_1248: int, in_cnt: int, in_Tmp_1250: int, in_Tmp_1252: int, in_Tmp_1253: int, in_Tmp_1254: int, in_context_5: int, in_Tmp_1255: int, in_Tmp_1256: int, in_Tmp_1257: int, in_Tmp_1258: int, in_Tmp_1259: int, in_Tmp_1260: int, in_Tmp_1261: int, in_Tmp_1262: int, in_sdv_598: int, in_Tmp_1264: int, in_Tmp_1265: int, in_status_48: int, in_packet_13: int, in_Tmp_1266: int, in_Tmp_1267: int, in_DeviceExtension_21: int, in_vslice_dummy_var_229: int) returns (out_Tmp_1247: int, out_Tmp_1248: int, out_cnt: int, out_Tmp_1250: int, out_Tmp_1252: int, out_Tmp_1253: int, out_Tmp_1254: int, out_context_5: int, out_Tmp_1255: int, out_Tmp_1256: int, out_Tmp_1257: int, out_Tmp_1258: int, out_Tmp_1259: int, out_Tmp_1260: int, out_Tmp_1261: int, out_Tmp_1262: int, out_sdv_598: int, out_Tmp_1264: int, out_Tmp_1265: int, out_status_48: int, out_Tmp_1266: int, out_Tmp_1267: int, out_vslice_dummy_var_229: int)
{
  var vslice_dummy_var_3302: int;

  entry:
    out_Tmp_1247, out_Tmp_1248, out_cnt, out_Tmp_1250, out_Tmp_1252, out_Tmp_1253, out_Tmp_1254, out_context_5, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_Tmp_1258, out_Tmp_1259, out_Tmp_1260, out_Tmp_1261, out_Tmp_1262, out_sdv_598, out_Tmp_1264, out_Tmp_1265, out_status_48, out_Tmp_1266, out_Tmp_1267, out_vslice_dummy_var_229 := in_Tmp_1247, in_Tmp_1248, in_cnt, in_Tmp_1250, in_Tmp_1252, in_Tmp_1253, in_Tmp_1254, in_context_5, in_Tmp_1255, in_Tmp_1256, in_Tmp_1257, in_Tmp_1258, in_Tmp_1259, in_Tmp_1260, in_Tmp_1261, in_Tmp_1262, in_sdv_598, in_Tmp_1264, in_Tmp_1265, in_status_48, in_Tmp_1266, in_Tmp_1267, in_vslice_dummy_var_229;
    goto L117, exit;

  exit:
    return;

  L117:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} 8 > out_cnt;
    assume {:nonnull} in_DeviceExtension_21 != 0;
    assume in_DeviceExtension_21 > 0;
    havoc out_context_5;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    call {:si_unique_call 2190} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(out_context_5), li2bplFunctionConstant242, 0);
    call {:si_unique_call 2191} KeInitializeTimer(0);
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1252;
    assume {:nonnull} out_Tmp_1252 != 0;
    assume out_Tmp_1252 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1256;
    assume {:nonnull} out_Tmp_1256 != 0;
    assume out_Tmp_1256 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1253;
    assume {:nonnull} out_Tmp_1253 != 0;
    assume out_Tmp_1253 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1260;
    assume {:nonnull} out_Tmp_1260 != 0;
    assume out_Tmp_1260 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1261;
    assume {:nonnull} out_Tmp_1261 != 0;
    assume out_Tmp_1261 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1255;
    assume {:nonnull} out_Tmp_1255 != 0;
    assume out_Tmp_1255 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1264;
    assume {:nonnull} out_Tmp_1264 != 0;
    assume out_Tmp_1264 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1267;
    assume {:nonnull} out_Tmp_1267 != 0;
    assume out_Tmp_1267 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1257;
    assume {:nonnull} out_Tmp_1257 != 0;
    assume out_Tmp_1257 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1259;
    assume {:nonnull} out_Tmp_1259 != 0;
    assume out_Tmp_1259 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1265;
    assume {:nonnull} out_Tmp_1265 != 0;
    assume out_Tmp_1265 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1266;
    assume {:nonnull} out_Tmp_1266 != 0;
    assume out_Tmp_1266 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1258;
    assume {:nonnull} out_Tmp_1258 != 0;
    assume out_Tmp_1258 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1262;
    assume {:nonnull} out_Tmp_1262 != 0;
    assume out_Tmp_1262 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1254;
    assume {:nonnull} out_Tmp_1254 != 0;
    assume out_Tmp_1254 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1247;
    assume {:nonnull} out_Tmp_1247 != 0;
    assume out_Tmp_1247 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc vslice_dummy_var_3302;
    call {:si_unique_call 2192} out_status_48 := Sbp2SendRequest#1(in_DeviceExtension_21, vslice_dummy_var_3302, 2);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_status_48 >= 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1250;
    assume {:nonnull} out_Tmp_1250 != 0;
    assume out_Tmp_1250 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    call {:si_unique_call 2188} out_sdv_598 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc out_Tmp_1248;
    assume {:nonnull} out_Tmp_1248 != 0;
    assume out_Tmp_1248 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} in_DeviceExtension_21 != 0;
    assume in_DeviceExtension_21 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} in_DeviceExtension_21 != 0;
    assume in_DeviceExtension_21 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    assume {:nonnull} out_context_5 != 0;
    assume out_context_5 > 0;
    call {:si_unique_call 2189} out_vslice_dummy_var_229 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 2193} {:si_old_unique_call 1} out_Tmp_1247, out_Tmp_1248, out_cnt, out_Tmp_1250, out_Tmp_1252, out_Tmp_1253, out_Tmp_1254, out_context_5, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_Tmp_1258, out_Tmp_1259, out_Tmp_1260, out_Tmp_1261, out_Tmp_1262, out_sdv_598, out_Tmp_1264, out_Tmp_1265, out_status_48, out_Tmp_1266, out_Tmp_1267, out_vslice_dummy_var_229 := Sbp2PreAllocateLists_loop_L117(out_Tmp_1247, out_Tmp_1248, out_cnt, out_Tmp_1250, out_Tmp_1252, out_Tmp_1253, out_Tmp_1254, out_context_5, out_Tmp_1255, out_Tmp_1256, out_Tmp_1257, out_Tmp_1258, out_Tmp_1259, out_Tmp_1260, out_Tmp_1261, out_Tmp_1262, out_sdv_598, out_Tmp_1264, out_Tmp_1265, out_status_48, in_packet_13, out_Tmp_1266, out_Tmp_1267, in_DeviceExtension_21, out_vslice_dummy_var_229);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L117(in_Tmp_1247: int, in_Tmp_1248: int, in_cnt: int, in_Tmp_1250: int, in_Tmp_1252: int, in_Tmp_1253: int, in_Tmp_1254: int, in_context_5: int, in_Tmp_1255: int, in_Tmp_1256: int, in_Tmp_1257: int, in_Tmp_1258: int, in_Tmp_1259: int, in_Tmp_1260: int, in_Tmp_1261: int, in_Tmp_1262: int, in_sdv_598: int, in_Tmp_1264: int, in_Tmp_1265: int, in_status_48: int, in_packet_13: int, in_Tmp_1266: int, in_Tmp_1267: int, in_DeviceExtension_21: int, in_vslice_dummy_var_229: int) returns (out_Tmp_1247: int, out_Tmp_1248: int, out_cnt: int, out_Tmp_1250: int, out_Tmp_1252: int, out_Tmp_1253: int, out_Tmp_1254: int, out_context_5: int, out_Tmp_1255: int, out_Tmp_1256: int, out_Tmp_1257: int, out_Tmp_1258: int, out_Tmp_1259: int, out_Tmp_1260: int, out_Tmp_1261: int, out_Tmp_1262: int, out_sdv_598: int, out_Tmp_1264: int, out_Tmp_1265: int, out_status_48: int, out_Tmp_1266: int, out_Tmp_1267: int, out_vslice_dummy_var_229: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2PreAllocateLists_loop_L85(in_cnt: int, in_statusFifoElement_1: int, in_DeviceExtension_21: int, in_boogieTmp: int, in_vslice_dummy_var_228: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_228: int)
{

  entry:
    out_cnt, out_statusFifoElement_1, out_boogieTmp, out_vslice_dummy_var_228 := in_cnt, in_statusFifoElement_1, in_boogieTmp, in_vslice_dummy_var_228;
    goto L85, exit;

  exit:
    return;

  L85:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} 15 > out_cnt;
    assume {:nonnull} in_DeviceExtension_21 != 0;
    assume in_DeviceExtension_21 > 0;
    havoc out_statusFifoElement_1;
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    call {:si_unique_call 2195} out_boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 2194} out_vslice_dummy_var_228 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    havoc out_cnt;
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L85(in_cnt: int, in_statusFifoElement_1: int, in_DeviceExtension_21: int, in_boogieTmp: int, in_vslice_dummy_var_228: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_228: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 8} Sbp2PreAllocateLists_loop_L41(in_Tmp_1249: int, in_cnt: int, in_sdv_593: int, in_sdv_597: int, in_packet_13: int, in_DeviceExtension_21: int, in_boogieTmp: int, in_vslice_dummy_var_226: int) returns (out_Tmp_1249: int, out_cnt: int, out_sdv_593: int, out_sdv_597: int, out_boogieTmp: int, out_vslice_dummy_var_226: int)
{
  var vslice_dummy_var_3303: int;

  entry:
    out_Tmp_1249, out_cnt, out_sdv_593, out_sdv_597, out_boogieTmp, out_vslice_dummy_var_226 := in_Tmp_1249, in_cnt, in_sdv_593, in_sdv_597, in_boogieTmp, in_vslice_dummy_var_226;
    goto L41, exit;

  exit:
    return;

  L41:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon25_Else;

  anon25_Else:
    assume {:partition} 8 > out_cnt;
    call {:si_unique_call 2199} out_sdv_593 := ExAllocatePoolWithTag(0, 24, 846226035);
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    goto anon33_Then;

  anon33_Then:
    call {:si_unique_call 2198} out_sdv_597 := ExAllocatePoolWithTag(0, 344, 846226035);
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:nonnull} in_DeviceExtension_21 != 0;
    assume in_DeviceExtension_21 > 0;
    havoc out_Tmp_1249;
    assume {:nonnull} out_Tmp_1249 != 0;
    assume out_Tmp_1249 > 0;
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    havoc vslice_dummy_var_3303;
    call {:si_unique_call 2197} out_boogieTmp := IoAllocateIrp(vslice_dummy_var_3303, 0);
    assume {:nonnull} in_packet_13 != 0;
    assume in_packet_13 > 0;
    goto anon26_Else;

  anon26_Else:
    call {:si_unique_call 2196} out_vslice_dummy_var_226 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon26_Else_dummy;

  anon26_Else_dummy:
    call {:si_unique_call 2200} {:si_old_unique_call 1} out_Tmp_1249, out_cnt, out_sdv_593, out_sdv_597, out_boogieTmp, out_vslice_dummy_var_226 := Sbp2PreAllocateLists_loop_L41(out_Tmp_1249, out_cnt, out_sdv_593, out_sdv_597, in_packet_13, in_DeviceExtension_21, out_boogieTmp, out_vslice_dummy_var_226);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L41(in_Tmp_1249: int, in_cnt: int, in_sdv_593: int, in_sdv_597: int, in_packet_13: int, in_DeviceExtension_21: int, in_boogieTmp: int, in_vslice_dummy_var_226: int) returns (out_Tmp_1249: int, out_cnt: int, out_sdv_593: int, out_sdv_597: int, out_boogieTmp: int, out_vslice_dummy_var_226: int);
  modifies alloc, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2HandleRemove_loop_L45(in_Tmp_1274: int, in_Tmp_1283: int, in_Tmp_1289: int, in_Tmp_1292: int, in_j_1: int, in_Tmp_1294: int, in_Tmp_1299: int, in_Tmp_1302: int, in_Tmp_1304: int, in_fdoExtension_6: int, in_Tmp_1318: int, in_deviceExtension_20: int) returns (out_Tmp_1274: int, out_Tmp_1283: int, out_Tmp_1289: int, out_Tmp_1292: int, out_j_1: int, out_Tmp_1294: int, out_Tmp_1299: int, out_Tmp_1302: int, out_Tmp_1304: int, out_Tmp_1318: int, out_deviceExtension_20: int)
{

  entry:
    out_Tmp_1274, out_Tmp_1283, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1299, out_Tmp_1302, out_Tmp_1304, out_Tmp_1318, out_deviceExtension_20 := in_Tmp_1274, in_Tmp_1283, in_Tmp_1289, in_Tmp_1292, in_j_1, in_Tmp_1294, in_Tmp_1299, in_Tmp_1302, in_Tmp_1304, in_Tmp_1318, in_deviceExtension_20;
    goto L45, exit;

  exit:
    return;

  L45:
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    out_Tmp_1292 := out_j_1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1294;
    out_Tmp_1302 := out_j_1 + 1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1299;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    out_Tmp_1283 := out_j_1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1304;
    assume {:nonnull} out_Tmp_1304 != 0;
    assume out_Tmp_1304 > 0;
    havoc out_Tmp_1289;
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_deviceExtension_20;
    out_Tmp_1274 := out_j_1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1318;
    assume {:nonnull} out_deviceExtension_20 != 0;
    assume out_deviceExtension_20 > 0;
    goto L48;

  L48:
    out_j_1 := out_j_1 + 1;
    goto L48_dummy;

  L48_dummy:
    call {:si_unique_call 2201} {:si_old_unique_call 1} out_Tmp_1274, out_Tmp_1283, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1299, out_Tmp_1302, out_Tmp_1304, out_Tmp_1318, out_deviceExtension_20 := Sbp2HandleRemove_loop_L45(out_Tmp_1274, out_Tmp_1283, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1299, out_Tmp_1302, out_Tmp_1304, in_fdoExtension_6, out_Tmp_1318, out_deviceExtension_20);
    return;

  anon35_Then:
    goto L48;
}



procedure {:LoopProcedure} Sbp2HandleRemove_loop_L45(in_Tmp_1274: int, in_Tmp_1283: int, in_Tmp_1289: int, in_Tmp_1292: int, in_j_1: int, in_Tmp_1294: int, in_Tmp_1299: int, in_Tmp_1302: int, in_Tmp_1304: int, in_fdoExtension_6: int, in_Tmp_1318: int, in_deviceExtension_20: int) returns (out_Tmp_1274: int, out_Tmp_1283: int, out_Tmp_1289: int, out_Tmp_1292: int, out_j_1: int, out_Tmp_1294: int, out_Tmp_1299: int, out_Tmp_1302: int, out_Tmp_1304: int, out_Tmp_1318: int, out_deviceExtension_20: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2HandleRemove_loop_L19(in_i_6: int, in_Tmp_1274: int, in_Tmp_1277: int, in_Tmp_1280: int, in_Tmp_1281: int, in_Tmp_1282: int, in_Tmp_1283: int, in_Tmp_1285: int, in_Tmp_1286: int, in_Tmp_1288: int, in_Tmp_1289: int, in_Tmp_1292: int, in_j_1: int, in_Tmp_1294: int, in_Tmp_1296: int, in_Tmp_1297: int, in_Tmp_1298: int, in_Tmp_1299: int, in_Tmp_1300: int, in_Tmp_1301: int, in_Tmp_1302: int, in_Tmp_1303: int, in_Tmp_1304: int, in_Tmp_1308: int, in_Tmp_1310: int, in_Tmp_1312: int, in_Tmp_1313: int, in_fdoExtension_6: int, in_Tmp_1314: int, in_Tmp_1317: int, in_Tmp_1318: int, in_Tmp_1319: int, in_Tmp_1321: int, in_Tmp_1323: int, in_Tmp_1326: int, in_Tmp_1328: int, in_deviceExtension_20: int, in_Tmp_1329: int, in_Tmp_1332: int, in_DeviceObject_37: int) returns (out_i_6: int, out_Tmp_1274: int, out_Tmp_1277: int, out_Tmp_1280: int, out_Tmp_1281: int, out_Tmp_1282: int, out_Tmp_1283: int, out_Tmp_1285: int, out_Tmp_1286: int, out_Tmp_1288: int, out_Tmp_1289: int, out_Tmp_1292: int, out_j_1: int, out_Tmp_1294: int, out_Tmp_1296: int, out_Tmp_1297: int, out_Tmp_1298: int, out_Tmp_1299: int, out_Tmp_1300: int, out_Tmp_1301: int, out_Tmp_1302: int, out_Tmp_1303: int, out_Tmp_1304: int, out_Tmp_1308: int, out_Tmp_1310: int, out_Tmp_1312: int, out_Tmp_1313: int, out_Tmp_1314: int, out_Tmp_1317: int, out_Tmp_1318: int, out_Tmp_1319: int, out_Tmp_1321: int, out_Tmp_1323: int, out_Tmp_1326: int, out_Tmp_1328: int, out_deviceExtension_20: int, out_Tmp_1329: int, out_Tmp_1332: int)
{

  entry:
    out_i_6, out_Tmp_1274, out_Tmp_1277, out_Tmp_1280, out_Tmp_1281, out_Tmp_1282, out_Tmp_1283, out_Tmp_1285, out_Tmp_1286, out_Tmp_1288, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1296, out_Tmp_1297, out_Tmp_1298, out_Tmp_1299, out_Tmp_1300, out_Tmp_1301, out_Tmp_1302, out_Tmp_1303, out_Tmp_1304, out_Tmp_1308, out_Tmp_1310, out_Tmp_1312, out_Tmp_1313, out_Tmp_1314, out_Tmp_1317, out_Tmp_1318, out_Tmp_1319, out_Tmp_1321, out_Tmp_1323, out_Tmp_1326, out_Tmp_1328, out_deviceExtension_20, out_Tmp_1329, out_Tmp_1332 := in_i_6, in_Tmp_1274, in_Tmp_1277, in_Tmp_1280, in_Tmp_1281, in_Tmp_1282, in_Tmp_1283, in_Tmp_1285, in_Tmp_1286, in_Tmp_1288, in_Tmp_1289, in_Tmp_1292, in_j_1, in_Tmp_1294, in_Tmp_1296, in_Tmp_1297, in_Tmp_1298, in_Tmp_1299, in_Tmp_1300, in_Tmp_1301, in_Tmp_1302, in_Tmp_1303, in_Tmp_1304, in_Tmp_1308, in_Tmp_1310, in_Tmp_1312, in_Tmp_1313, in_Tmp_1314, in_Tmp_1317, in_Tmp_1318, in_Tmp_1319, in_Tmp_1321, in_Tmp_1323, in_Tmp_1326, in_Tmp_1328, in_deviceExtension_20, in_Tmp_1329, in_Tmp_1332;
    goto L19, exit;

  exit:
    return;

  L19:
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    goto anon32_Else;

  anon32_Else:
    out_Tmp_1298 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1281;
    assume {:nonnull} out_Tmp_1281 != 0;
    assume out_Tmp_1281 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    out_Tmp_1314 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1285;
    assume {:nonnull} out_Tmp_1285 != 0;
    assume out_Tmp_1285 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    out_Tmp_1277 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1308;
    assume {:nonnull} out_Tmp_1308 != 0;
    assume out_Tmp_1308 > 0;
    call {:si_unique_call 2205} sdv_ExFreePool(0);
    out_Tmp_1313 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1282;
    assume {:nonnull} out_Tmp_1282 != 0;
    assume out_Tmp_1282 > 0;
    out_Tmp_1319 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1310;
    assume {:nonnull} out_Tmp_1310 != 0;
    assume out_Tmp_1310 > 0;
    goto L24;

  L24:
    out_Tmp_1280 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1321;
    assume {:nonnull} out_Tmp_1321 != 0;
    assume out_Tmp_1321 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    out_Tmp_1297 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1301;
    assume {:nonnull} out_Tmp_1301 != 0;
    assume out_Tmp_1301 > 0;
    call {:si_unique_call 2204} sdv_ExFreePool(0);
    out_Tmp_1303 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1323;
    assume {:nonnull} out_Tmp_1323 != 0;
    assume out_Tmp_1323 > 0;
    out_Tmp_1332 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1317;
    assume {:nonnull} out_Tmp_1317 != 0;
    assume out_Tmp_1317 > 0;
    goto L31;

  L31:
    out_Tmp_1300 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1329;
    assume {:nonnull} out_Tmp_1329 != 0;
    assume out_Tmp_1329 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    out_Tmp_1296 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1326;
    assume {:nonnull} out_Tmp_1326 != 0;
    assume out_Tmp_1326 > 0;
    call {:si_unique_call 2203} sdv_ExFreePool(0);
    out_Tmp_1286 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1288;
    assume {:nonnull} out_Tmp_1288 != 0;
    assume out_Tmp_1288 > 0;
    out_Tmp_1312 := out_i_6;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1328;
    assume {:nonnull} out_Tmp_1328 != 0;
    assume out_Tmp_1328 > 0;
    goto L38;

  L38:
    out_j_1 := out_i_6;
    goto L45;

  L45:
    call {:si_unique_call 2202} out_Tmp_1274, out_Tmp_1283, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1299, out_Tmp_1302, out_Tmp_1304, out_Tmp_1318, out_deviceExtension_20 := Sbp2HandleRemove_loop_L45(out_Tmp_1274, out_Tmp_1283, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1299, out_Tmp_1302, out_Tmp_1304, in_fdoExtension_6, out_Tmp_1318, out_deviceExtension_20);
    goto L45_last;

  L45_last:
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    out_Tmp_1292 := out_j_1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1294;
    out_Tmp_1302 := out_j_1 + 1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1299;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    assume {:nonnull} out_Tmp_1294 != 0;
    assume out_Tmp_1294 > 0;
    assume {:nonnull} out_Tmp_1299 != 0;
    assume out_Tmp_1299 > 0;
    out_Tmp_1283 := out_j_1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1304;
    assume {:nonnull} out_Tmp_1304 != 0;
    assume out_Tmp_1304 > 0;
    havoc out_Tmp_1289;
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_deviceExtension_20;
    out_Tmp_1274 := out_j_1;
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    havoc out_Tmp_1318;
    assume {:nonnull} out_deviceExtension_20 != 0;
    assume out_deviceExtension_20 > 0;
    goto L48;

  L48:
    out_j_1 := out_j_1 + 1;
    assume false;
    return;

  anon35_Then:
    goto L48;

  anon34_Then:
    assume {:nonnull} in_fdoExtension_6 != 0;
    assume in_fdoExtension_6 > 0;
    goto L22;

  L22:
    out_i_6 := out_i_6 + 1;
    goto L22_dummy;

  L22_dummy:
    call {:si_unique_call 2206} {:si_old_unique_call 1} out_i_6, out_Tmp_1274, out_Tmp_1277, out_Tmp_1280, out_Tmp_1281, out_Tmp_1282, out_Tmp_1283, out_Tmp_1285, out_Tmp_1286, out_Tmp_1288, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1296, out_Tmp_1297, out_Tmp_1298, out_Tmp_1299, out_Tmp_1300, out_Tmp_1301, out_Tmp_1302, out_Tmp_1303, out_Tmp_1304, out_Tmp_1308, out_Tmp_1310, out_Tmp_1312, out_Tmp_1313, out_Tmp_1314, out_Tmp_1317, out_Tmp_1318, out_Tmp_1319, out_Tmp_1321, out_Tmp_1323, out_Tmp_1326, out_Tmp_1328, out_deviceExtension_20, out_Tmp_1329, out_Tmp_1332 := Sbp2HandleRemove_loop_L19(out_i_6, out_Tmp_1274, out_Tmp_1277, out_Tmp_1280, out_Tmp_1281, out_Tmp_1282, out_Tmp_1283, out_Tmp_1285, out_Tmp_1286, out_Tmp_1288, out_Tmp_1289, out_Tmp_1292, out_j_1, out_Tmp_1294, out_Tmp_1296, out_Tmp_1297, out_Tmp_1298, out_Tmp_1299, out_Tmp_1300, out_Tmp_1301, out_Tmp_1302, out_Tmp_1303, out_Tmp_1304, out_Tmp_1308, out_Tmp_1310, out_Tmp_1312, out_Tmp_1313, in_fdoExtension_6, out_Tmp_1314, out_Tmp_1317, out_Tmp_1318, out_Tmp_1319, out_Tmp_1321, out_Tmp_1323, out_Tmp_1326, out_Tmp_1328, out_deviceExtension_20, out_Tmp_1329, out_Tmp_1332, in_DeviceObject_37);
    return;

  anon41_Then:
    goto L38;

  anon40_Then:
    goto L31;

  anon39_Then:
    goto L24;

  anon38_Then:
    goto L22;
}



procedure {:LoopProcedure} Sbp2HandleRemove_loop_L19(in_i_6: int, in_Tmp_1274: int, in_Tmp_1277: int, in_Tmp_1280: int, in_Tmp_1281: int, in_Tmp_1282: int, in_Tmp_1283: int, in_Tmp_1285: int, in_Tmp_1286: int, in_Tmp_1288: int, in_Tmp_1289: int, in_Tmp_1292: int, in_j_1: int, in_Tmp_1294: int, in_Tmp_1296: int, in_Tmp_1297: int, in_Tmp_1298: int, in_Tmp_1299: int, in_Tmp_1300: int, in_Tmp_1301: int, in_Tmp_1302: int, in_Tmp_1303: int, in_Tmp_1304: int, in_Tmp_1308: int, in_Tmp_1310: int, in_Tmp_1312: int, in_Tmp_1313: int, in_fdoExtension_6: int, in_Tmp_1314: int, in_Tmp_1317: int, in_Tmp_1318: int, in_Tmp_1319: int, in_Tmp_1321: int, in_Tmp_1323: int, in_Tmp_1326: int, in_Tmp_1328: int, in_deviceExtension_20: int, in_Tmp_1329: int, in_Tmp_1332: int, in_DeviceObject_37: int) returns (out_i_6: int, out_Tmp_1274: int, out_Tmp_1277: int, out_Tmp_1280: int, out_Tmp_1281: int, out_Tmp_1282: int, out_Tmp_1283: int, out_Tmp_1285: int, out_Tmp_1286: int, out_Tmp_1288: int, out_Tmp_1289: int, out_Tmp_1292: int, out_j_1: int, out_Tmp_1294: int, out_Tmp_1296: int, out_Tmp_1297: int, out_Tmp_1298: int, out_Tmp_1299: int, out_Tmp_1300: int, out_Tmp_1301: int, out_Tmp_1302: int, out_Tmp_1303: int, out_Tmp_1304: int, out_Tmp_1308: int, out_Tmp_1310: int, out_Tmp_1312: int, out_Tmp_1313: int, out_Tmp_1314: int, out_Tmp_1317: int, out_Tmp_1318: int, out_Tmp_1319: int, out_Tmp_1321: int, out_Tmp_1323: int, out_Tmp_1326: int, out_Tmp_1328: int, out_deviceExtension_20: int, out_Tmp_1329: int, out_Tmp_1332: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeDeviceExtension_loop_L51(in_i_7: int, in_context_6: int, in_DeviceExtension_22: int) returns (out_i_7: int, out_context_6: int)
{

  entry:
    out_i_7, out_context_6 := in_i_7, in_context_6;
    goto L51, exit;

  exit:
    return;

  L51:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon36_Else;

  anon36_Else:
    assume {:partition} 8 > out_i_7;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    havoc out_context_6;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension_loop_L51(in_i_7: int, in_context_6: int, in_DeviceExtension_22: int) returns (out_i_7: int, out_context_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeDeviceExtension_loop_L89(in_context_6: int, in_oldContext: int, in_vslice_dummy_var_233: int) returns (out_context_6: int, out_oldContext: int, out_vslice_dummy_var_233: int)
{

  entry:
    out_context_6, out_oldContext, out_vslice_dummy_var_233 := in_context_6, in_oldContext, in_vslice_dummy_var_233;
    goto L89, exit;

  exit:
    return;

  L89:
    goto anon39_Else;

  anon39_Else:
    assume {:partition} out_context_6 != 0;
    out_oldContext := out_context_6;
    call {:si_unique_call 2207} out_vslice_dummy_var_233 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    havoc out_context_6;
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    call {:si_unique_call 2208} {:si_old_unique_call 1} out_context_6, out_oldContext, out_vslice_dummy_var_233 := Sbp2InitializeDeviceExtension_loop_L89(out_context_6, out_oldContext, out_vslice_dummy_var_233);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension_loop_L89(in_context_6: int, in_oldContext: int, in_vslice_dummy_var_233: int) returns (out_context_6: int, out_oldContext: int, out_vslice_dummy_var_233: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeDeviceExtension_loop_L88(in_i_7: int, in_Tmp_1335: int, in_Tmp_1337: int, in_Tmp_1338: int, in_Tmp_1339: int, in_Tmp_1340: int, in_context_6: int, in_Tmp_1341: int, in_oldContext: int, in_sdv_609: int, in_sdv_610: int, in_DeviceExtension_22: int) returns (out_i_7: int, out_Tmp_1335: int, out_Tmp_1337: int, out_Tmp_1338: int, out_Tmp_1339: int, out_Tmp_1340: int, out_context_6: int, out_Tmp_1341: int, out_oldContext: int, out_sdv_609: int, out_sdv_610: int)
{

  entry:
    out_i_7, out_Tmp_1335, out_Tmp_1337, out_Tmp_1338, out_Tmp_1339, out_Tmp_1340, out_context_6, out_Tmp_1341, out_oldContext, out_sdv_609, out_sdv_610 := in_i_7, in_Tmp_1335, in_Tmp_1337, in_Tmp_1338, in_Tmp_1339, in_Tmp_1340, in_context_6, in_Tmp_1341, in_oldContext, in_sdv_609, in_sdv_610;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} 8 > out_i_7;
    out_oldContext := out_context_6;
    call {:si_unique_call 2209} out_sdv_610 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_context_6 := out_sdv_610;
    call {:si_unique_call 2210} out_sdv_609 := sdv_containing_record(out_context_6, 8);
    out_context_6 := out_sdv_609;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    out_Tmp_1337 := out_i_7;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    havoc out_Tmp_1341;
    assume {:nonnull} out_Tmp_1341 != 0;
    assume out_Tmp_1341 > 0;
    havoc out_Tmp_1335;
    assume {:nonnull} out_Tmp_1335 != 0;
    assume out_Tmp_1335 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    out_Tmp_1338 := out_i_7;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    havoc out_Tmp_1340;
    assume {:nonnull} out_Tmp_1340 != 0;
    assume out_Tmp_1340 > 0;
    havoc out_Tmp_1339;
    assume {:nonnull} out_Tmp_1339 != 0;
    assume out_Tmp_1339 > 0;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    assume {:nonnull} in_DeviceExtension_22 != 0;
    assume in_DeviceExtension_22 > 0;
    assume {:nonnull} out_context_6 != 0;
    assume out_context_6 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension_loop_L88(in_i_7: int, in_Tmp_1335: int, in_Tmp_1337: int, in_Tmp_1338: int, in_Tmp_1339: int, in_Tmp_1340: int, in_context_6: int, in_Tmp_1341: int, in_oldContext: int, in_sdv_609: int, in_sdv_610: int, in_DeviceExtension_22: int) returns (out_i_7: int, out_Tmp_1335: int, out_Tmp_1337: int, out_Tmp_1338: int, out_Tmp_1339: int, out_Tmp_1340: int, out_context_6: int, out_Tmp_1341: int, out_oldContext: int, out_sdv_609: int, out_sdv_610: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_i_7 == in_i_7;
  free ensures {:va_keep} out_Tmp_1335 == in_Tmp_1335;
  free ensures {:va_keep} out_Tmp_1337 == in_Tmp_1337;
  free ensures {:va_keep} out_Tmp_1338 == in_Tmp_1338;
  free ensures {:va_keep} out_Tmp_1339 == in_Tmp_1339;
  free ensures {:va_keep} out_Tmp_1340 == in_Tmp_1340;
  free ensures {:va_keep} out_context_6 == in_context_6;
  free ensures {:va_keep} out_Tmp_1341 == in_Tmp_1341;
  free ensures {:va_keep} out_oldContext == in_oldContext;
  free ensures {:va_keep} out_sdv_609 == in_sdv_609;
  free ensures {:va_keep} out_sdv_610 == in_sdv_610;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CreateDeviceRelations_loop_L40(in_i_8: int, in_Tmp_1359: int, in_Tmp_1364: int, in_Tmp_1367: int, in_status_50: int, in_instanceNum: int, in_Tmp_1380: int, in_Tmp_1381: int, in_FdoExtension_3: int) returns (out_Tmp_1359: int, out_Tmp_1364: int, out_Tmp_1367: int, out_status_50: int, out_instanceNum: int, out_Tmp_1380: int, out_Tmp_1381: int)
{

  entry:
    out_Tmp_1359, out_Tmp_1364, out_Tmp_1367, out_status_50, out_instanceNum, out_Tmp_1380, out_Tmp_1381 := in_Tmp_1359, in_Tmp_1364, in_Tmp_1367, in_status_50, in_instanceNum, in_Tmp_1380, in_Tmp_1381;
    goto L40, exit;

  exit:
    return;

  L40:
    out_Tmp_1359 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_1364 := out_Tmp_1359;
    out_Tmp_1367 := in_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1381;
    out_Tmp_1380 := out_Tmp_1381 + out_Tmp_1367 * 256;
    call {:si_unique_call 2211} out_status_50 := Sbp2CreatePdo(in_FdoExtension_3, out_Tmp_1380, out_Tmp_1364);
    goto anon21_Then;

  anon21_Then:
    assume {:partition} out_status_50 == -1073741771;
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 2212} {:si_old_unique_call 1} out_Tmp_1359, out_Tmp_1364, out_Tmp_1367, out_status_50, out_instanceNum, out_Tmp_1380, out_Tmp_1381 := Sbp2CreateDeviceRelations_loop_L40(in_i_8, out_Tmp_1359, out_Tmp_1364, out_Tmp_1367, out_status_50, out_instanceNum, out_Tmp_1380, out_Tmp_1381, in_FdoExtension_3);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L40(in_i_8: int, in_Tmp_1359: int, in_Tmp_1364: int, in_Tmp_1367: int, in_status_50: int, in_instanceNum: int, in_Tmp_1380: int, in_Tmp_1381: int, in_FdoExtension_3: int) returns (out_Tmp_1359: int, out_Tmp_1364: int, out_Tmp_1367: int, out_status_50: int, out_instanceNum: int, out_Tmp_1380: int, out_Tmp_1381: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} out_Tmp_1367 == in_Tmp_1367 || out_Tmp_1367 == in_i_8;
  free ensures {:va_keep} out_status_50 == 0 || out_status_50 == -1073741670 || out_status_50 == -1073741824 || out_status_50 == -1073741771 || out_status_50 == -1073741823 || out_status_50 == in_status_50;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CreateDeviceRelations_loop_L24(in_i_8: int, in_Tmp_1357: int, in_Tmp_1358: int, in_Tmp_1359: int, in_Tmp_1360: int, in_pdoExtension_2: int, in_Tmp_1361: int, in_Tmp_1362: int, in_Tmp_1363: int, in_Tmp_1364: int, in_Tmp_1366: int, in_Tmp_1367: int, in_Tmp_1368: int, in_Tmp_1369: int, in_Tmp_1370: int, in_Tmp_1371: int, in_Tmp_1373: int, in_Tmp_1374: int, in_Tmp_1375: int, in_status_50: int, in_instanceNum: int, in_Tmp_1377: int, in_Tmp_1378: int, in_Tmp_1379: int, in_Tmp_1380: int, in_Tmp_1381: int, in_FdoExtension_3: int, in_DeviceRelations: int, in_vslice_dummy_var_237: int, in_vslice_dummy_var_238: int) returns (out_i_8: int, out_Tmp_1357: int, out_Tmp_1358: int, out_Tmp_1359: int, out_Tmp_1360: int, out_pdoExtension_2: int, out_Tmp_1361: int, out_Tmp_1362: int, out_Tmp_1363: int, out_Tmp_1364: int, out_Tmp_1366: int, out_Tmp_1367: int, out_Tmp_1368: int, out_Tmp_1369: int, out_Tmp_1370: int, out_Tmp_1371: int, out_Tmp_1373: int, out_Tmp_1374: int, out_Tmp_1375: int, out_status_50: int, out_instanceNum: int, out_Tmp_1377: int, out_Tmp_1378: int, out_Tmp_1379: int, out_Tmp_1380: int, out_Tmp_1381: int, out_vslice_dummy_var_237: int, out_vslice_dummy_var_238: int)
{

  entry:
    out_i_8, out_Tmp_1357, out_Tmp_1358, out_Tmp_1359, out_Tmp_1360, out_pdoExtension_2, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_Tmp_1369, out_Tmp_1370, out_Tmp_1371, out_Tmp_1373, out_Tmp_1374, out_Tmp_1375, out_status_50, out_instanceNum, out_Tmp_1377, out_Tmp_1378, out_Tmp_1379, out_Tmp_1380, out_Tmp_1381, out_vslice_dummy_var_237, out_vslice_dummy_var_238 := in_i_8, in_Tmp_1357, in_Tmp_1358, in_Tmp_1359, in_Tmp_1360, in_pdoExtension_2, in_Tmp_1361, in_Tmp_1362, in_Tmp_1363, in_Tmp_1364, in_Tmp_1366, in_Tmp_1367, in_Tmp_1368, in_Tmp_1369, in_Tmp_1370, in_Tmp_1371, in_Tmp_1373, in_Tmp_1374, in_Tmp_1375, in_status_50, in_instanceNum, in_Tmp_1377, in_Tmp_1378, in_Tmp_1379, in_Tmp_1380, in_Tmp_1381, in_vslice_dummy_var_237, in_vslice_dummy_var_238;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    goto anon19_Else;

  anon19_Else:
    out_Tmp_1370 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1361;
    assume {:nonnull} out_Tmp_1361 != 0;
    assume out_Tmp_1361 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_1371 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1363;
    assume {:nonnull} out_Tmp_1363 != 0;
    assume out_Tmp_1363 > 0;
    havoc out_Tmp_1375;
    assume {:nonnull} out_Tmp_1375 != 0;
    assume out_Tmp_1375 > 0;
    havoc out_pdoExtension_2;
    assume {:nonnull} out_pdoExtension_2 != 0;
    assume out_pdoExtension_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    out_i_8 := out_i_8 + 1;
    goto L36_dummy;

  L36_dummy:
    call {:si_unique_call 2217} {:si_old_unique_call 1} out_i_8, out_Tmp_1357, out_Tmp_1358, out_Tmp_1359, out_Tmp_1360, out_pdoExtension_2, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_Tmp_1369, out_Tmp_1370, out_Tmp_1371, out_Tmp_1373, out_Tmp_1374, out_Tmp_1375, out_status_50, out_instanceNum, out_Tmp_1377, out_Tmp_1378, out_Tmp_1379, out_Tmp_1380, out_Tmp_1381, out_vslice_dummy_var_237, out_vslice_dummy_var_238 := Sbp2CreateDeviceRelations_loop_L24(out_i_8, out_Tmp_1357, out_Tmp_1358, out_Tmp_1359, out_Tmp_1360, out_pdoExtension_2, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_Tmp_1369, out_Tmp_1370, out_Tmp_1371, out_Tmp_1373, out_Tmp_1374, out_Tmp_1375, out_status_50, out_instanceNum, out_Tmp_1377, out_Tmp_1378, out_Tmp_1379, out_Tmp_1380, out_Tmp_1381, in_FdoExtension_3, in_DeviceRelations, out_vslice_dummy_var_237, out_vslice_dummy_var_238);
    return;

  anon24_Then:
    goto L30;

  L30:
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1357;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1362;
    out_Tmp_1377 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1378;
    assume {:nonnull} out_Tmp_1362 != 0;
    assume out_Tmp_1362 > 0;
    assume {:nonnull} out_Tmp_1378 != 0;
    assume out_Tmp_1378 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_1373 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1379;
    assume {:nonnull} out_Tmp_1379 != 0;
    assume out_Tmp_1379 > 0;
    call {:si_unique_call 2213} out_vslice_dummy_var_237 := sdv_ObReferenceObject(0);
    goto L36;

  anon20_Then:
    goto L30;

  anon23_Then:
    out_instanceNum := 0;
    goto L40;

  L40:
    call {:si_unique_call 2215} out_Tmp_1359, out_Tmp_1364, out_Tmp_1367, out_status_50, out_instanceNum, out_Tmp_1380, out_Tmp_1381 := Sbp2CreateDeviceRelations_loop_L40(out_i_8, out_Tmp_1359, out_Tmp_1364, out_Tmp_1367, out_status_50, out_instanceNum, out_Tmp_1380, out_Tmp_1381, in_FdoExtension_3);
    goto L40_last;

  L40_last:
    out_Tmp_1359 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_1364 := out_Tmp_1359;
    out_Tmp_1367 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1381;
    out_Tmp_1380 := out_Tmp_1381 + out_Tmp_1367 * 256;
    call {:si_unique_call 2216} out_status_50 := Sbp2CreatePdo(in_FdoExtension_3, out_Tmp_1380, out_Tmp_1364);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_status_50 != -1073741771;
    goto anon22_Else;

  anon22_Else:
    assume {:partition} out_status_50 >= 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1368;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_1369;
    out_Tmp_1360 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1374;
    assume {:nonnull} out_Tmp_1369 != 0;
    assume out_Tmp_1369 > 0;
    assume {:nonnull} out_Tmp_1374 != 0;
    assume out_Tmp_1374 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_1366 := out_i_8;
    assume {:nonnull} in_FdoExtension_3 != 0;
    assume in_FdoExtension_3 > 0;
    havoc out_Tmp_1358;
    assume {:nonnull} out_Tmp_1358 != 0;
    assume out_Tmp_1358 > 0;
    call {:si_unique_call 2214} out_vslice_dummy_var_238 := sdv_ObReferenceObject(0);
    goto L36;

  anon21_Then:
    assume {:partition} out_status_50 == -1073741771;
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L24(in_i_8: int, in_Tmp_1357: int, in_Tmp_1358: int, in_Tmp_1359: int, in_Tmp_1360: int, in_pdoExtension_2: int, in_Tmp_1361: int, in_Tmp_1362: int, in_Tmp_1363: int, in_Tmp_1364: int, in_Tmp_1366: int, in_Tmp_1367: int, in_Tmp_1368: int, in_Tmp_1369: int, in_Tmp_1370: int, in_Tmp_1371: int, in_Tmp_1373: int, in_Tmp_1374: int, in_Tmp_1375: int, in_status_50: int, in_instanceNum: int, in_Tmp_1377: int, in_Tmp_1378: int, in_Tmp_1379: int, in_Tmp_1380: int, in_Tmp_1381: int, in_FdoExtension_3: int, in_DeviceRelations: int, in_vslice_dummy_var_237: int, in_vslice_dummy_var_238: int) returns (out_i_8: int, out_Tmp_1357: int, out_Tmp_1358: int, out_Tmp_1359: int, out_Tmp_1360: int, out_pdoExtension_2: int, out_Tmp_1361: int, out_Tmp_1362: int, out_Tmp_1363: int, out_Tmp_1364: int, out_Tmp_1366: int, out_Tmp_1367: int, out_Tmp_1368: int, out_Tmp_1369: int, out_Tmp_1370: int, out_Tmp_1371: int, out_Tmp_1373: int, out_Tmp_1374: int, out_Tmp_1375: int, out_status_50: int, out_instanceNum: int, out_Tmp_1377: int, out_Tmp_1378: int, out_Tmp_1379: int, out_Tmp_1380: int, out_Tmp_1381: int, out_vslice_dummy_var_237: int, out_vslice_dummy_var_238: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_status_50 == 0 || out_status_50 == -1073741670 || out_status_50 == -1073741824 || out_status_50 == -1073741771 || out_status_50 == -1073741823 || out_status_50 == in_status_50;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartDevice_loop_L154(in_waitValue_6: int, in_temp_3: int, in_status_51: int, in_deviceExtension_21: int, in_vslice_dummy_var_246: int, in_vslice_dummy_var_247: int, in_vslice_dummy_var_248: int) returns (out_temp_3: int, out_status_51: int, out_vslice_dummy_var_246: int, out_vslice_dummy_var_247: int, out_vslice_dummy_var_248: int)
{
  var vslice_dummy_var_3304: int;

  entry:
    out_temp_3, out_status_51, out_vslice_dummy_var_246, out_vslice_dummy_var_247, out_vslice_dummy_var_248 := in_temp_3, in_status_51, in_vslice_dummy_var_246, in_vslice_dummy_var_247, in_vslice_dummy_var_248;
    goto L154, exit;

  exit:
    return;

  L154:
    assume {:nonnull} in_deviceExtension_21 != 0;
    assume in_deviceExtension_21 > 0;
    call {:si_unique_call 2218} out_vslice_dummy_var_246 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(in_deviceExtension_21));
    assume {:nonnull} in_waitValue_6 != 0;
    assume in_waitValue_6 > 0;
    call {:si_unique_call 2219} out_status_51 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_6);
    assume {:nonnull} in_deviceExtension_21 != 0;
    assume in_deviceExtension_21 > 0;
    havoc vslice_dummy_var_3304;
    call {:si_unique_call 2220} out_vslice_dummy_var_247 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_3304, 0);
    call {:si_unique_call 2221} out_vslice_dummy_var_248 := Sbp2InitializeDeviceExtension(in_deviceExtension_21);
    call {:si_unique_call 2222} out_status_51 := Sbp2ManagementTransaction#1(in_deviceExtension_21, 0);
    out_temp_3 := out_temp_3 + 1;
    goto anon81_Else;

  anon81_Else:
    assume {:partition} out_status_51 == -1073741248;
    goto anon73_Then;

  anon73_Then:
    assume {:partition} out_temp_3 <= 3;
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    call {:si_unique_call 2223} {:si_old_unique_call 1} out_temp_3, out_status_51, out_vslice_dummy_var_246, out_vslice_dummy_var_247, out_vslice_dummy_var_248 := Sbp2StartDevice_loop_L154(in_waitValue_6, out_temp_3, out_status_51, in_deviceExtension_21, out_vslice_dummy_var_246, out_vslice_dummy_var_247, out_vslice_dummy_var_248);
    return;
}



procedure {:LoopProcedure} Sbp2StartDevice_loop_L154(in_waitValue_6: int, in_temp_3: int, in_status_51: int, in_deviceExtension_21: int, in_vslice_dummy_var_246: int, in_vslice_dummy_var_247: int, in_vslice_dummy_var_248: int) returns (out_temp_3: int, out_status_51: int, out_vslice_dummy_var_246: int, out_vslice_dummy_var_247: int, out_vslice_dummy_var_248: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} out_vslice_dummy_var_247 == 1 || out_vslice_dummy_var_247 == 0 || out_vslice_dummy_var_247 == in_vslice_dummy_var_247;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_712: int, in_sdv_306: int, in_sdv_307: int, in_irp_3: int, in_packet_6: int, in_deviceExtension_4: int, in_DeviceObject_12: int, in_Key: int) returns (out_Tmp_712: int, out_sdv_306: int, out_sdv_307: int, out_irp_3: int, out_packet_6: int)
{

  entry:
    out_Tmp_712, out_sdv_306, out_sdv_307, out_irp_3, out_packet_6 := in_Tmp_712, in_sdv_306, in_sdv_307, in_irp_3, in_packet_6;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_12 != 0;
    assume in_DeviceObject_12 > 0;
    call {:si_unique_call 2224} out_packet_6 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_12), in_Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} out_packet_6 != 0;
    call {:si_unique_call 2227} out_sdv_307 := sdv_containing_record(out_packet_6, 64);
    out_irp_3 := out_sdv_307;
    call {:si_unique_call 2228} Sbp2StartIo#0(in_DeviceObject_12, out_irp_3);
    goto L17;

  L17:
    call {:si_unique_call 2225} out_Tmp_712 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_712 != 0;
    assume out_Tmp_712 > 0;
    assume {:nonnull} in_deviceExtension_4 != 0;
    assume in_deviceExtension_4 > 0;
    call {:si_unique_call 2226} out_sdv_306 := sdv_InterlockedDecrement(out_Tmp_712);
    assume {:nonnull} out_Tmp_712 != 0;
    assume out_Tmp_712 > 0;
    assume {:nonnull} in_deviceExtension_4 != 0;
    assume in_deviceExtension_4 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_306 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 2229} {:si_old_unique_call 1} out_Tmp_712, out_sdv_306, out_sdv_307, out_irp_3, out_packet_6 := Sbp2StartNextPacketByKey#0_loop_L11(out_Tmp_712, out_sdv_306, out_sdv_307, out_irp_3, out_packet_6, in_deviceExtension_4, in_DeviceObject_12, in_Key);
    return;

  anon8_Then:
    assume {:partition} out_packet_6 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_712: int, in_sdv_306: int, in_sdv_307: int, in_irp_3: int, in_packet_6: int, in_deviceExtension_4: int, in_DeviceObject_12: int, in_Key: int) returns (out_Tmp_712: int, out_sdv_306: int, out_sdv_307: int, out_irp_3: int, out_packet_6: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} out_sdv_307 == in_sdv_307;
  free ensures {:va_keep} out_irp_3 == in_irp_3;
  free ensures {:va_keep} out_packet_6 == 0 || out_packet_6 == in_packet_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_712: int, in_sdv_306: int, in_sdv_307: int, in_irp_3: int, in_packet_6: int, in_deviceExtension_4: int, in_DeviceObject_12: int, in_Key: int) returns (out_Tmp_712: int, out_sdv_306: int, out_sdv_307: int, out_irp_3: int, out_packet_6: int)
{

  entry:
    out_Tmp_712, out_sdv_306, out_sdv_307, out_irp_3, out_packet_6 := in_Tmp_712, in_sdv_306, in_sdv_307, in_irp_3, in_packet_6;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_12 != 0;
    assume in_DeviceObject_12 > 0;
    call {:si_unique_call 2230} out_packet_6 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_12), in_Key);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} out_packet_6 != 0;
    call {:si_unique_call 2233} out_sdv_307 := sdv_containing_record(out_packet_6, 64);
    out_irp_3 := out_sdv_307;
    call {:si_unique_call 2234} Sbp2StartIo#1(in_DeviceObject_12, out_irp_3);
    goto L17;

  L17:
    call {:si_unique_call 2231} out_Tmp_712 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_712 != 0;
    assume out_Tmp_712 > 0;
    assume {:nonnull} in_deviceExtension_4 != 0;
    assume in_deviceExtension_4 > 0;
    call {:si_unique_call 2232} out_sdv_306 := sdv_InterlockedDecrement(out_Tmp_712);
    assume {:nonnull} out_Tmp_712 != 0;
    assume out_Tmp_712 > 0;
    assume {:nonnull} in_deviceExtension_4 != 0;
    assume in_deviceExtension_4 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_306 != 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 2235} {:si_old_unique_call 1} out_Tmp_712, out_sdv_306, out_sdv_307, out_irp_3, out_packet_6 := Sbp2StartNextPacketByKey#1_loop_L11(out_Tmp_712, out_sdv_306, out_sdv_307, out_irp_3, out_packet_6, in_deviceExtension_4, in_DeviceObject_12, in_Key);
    return;

  anon8_Then:
    assume {:partition} out_packet_6 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_712: int, in_sdv_306: int, in_sdv_307: int, in_irp_3: int, in_packet_6: int, in_deviceExtension_4: int, in_DeviceObject_12: int, in_Key: int) returns (out_Tmp_712: int, out_sdv_306: int, out_sdv_307: int, out_irp_3: int, out_packet_6: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} out_sdv_307 == in_sdv_307;
  free ensures {:va_keep} out_irp_3 == in_irp_3;
  free ensures {:va_keep} out_packet_6 == 0 || out_packet_6 == in_packet_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartIo#0_loop_L93(in_sdv_382: int, in_qIrp: int, in_entry_1: int, in_Irp_14: int) returns (out_sdv_382: int, out_qIrp: int, out_entry_1: int)
{

  entry:
    out_sdv_382, out_qIrp, out_entry_1 := in_sdv_382, in_qIrp, in_entry_1;
    goto L93, exit;

  exit:
    return;

  L93:
    goto anon61_Else;

  anon61_Else:
    call {:si_unique_call 2236} out_sdv_382 := sdv_containing_record(out_entry_1, 64);
    out_qIrp := out_sdv_382;
    goto anon71_Then;

  anon71_Then:
    assume {:partition} out_qIrp != in_Irp_14;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    havoc out_entry_1;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    havoc out_entry_1;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#0_loop_L93(in_sdv_382: int, in_qIrp: int, in_entry_1: int, in_Irp_14: int) returns (out_sdv_382: int, out_qIrp: int, out_entry_1: int);
  free ensures {:va_keep} out_sdv_382 == in_sdv_382;
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_entry_1 == in_entry_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartIo#1_loop_L93(in_sdv_382: int, in_qIrp: int, in_entry_1: int, in_Irp_14: int) returns (out_sdv_382: int, out_qIrp: int, out_entry_1: int)
{

  entry:
    out_sdv_382, out_qIrp, out_entry_1 := in_sdv_382, in_qIrp, in_entry_1;
    goto L93, exit;

  exit:
    return;

  L93:
    goto anon61_Else;

  anon61_Else:
    call {:si_unique_call 2237} out_sdv_382 := sdv_containing_record(out_entry_1, 64);
    out_qIrp := out_sdv_382;
    goto anon71_Then;

  anon71_Then:
    assume {:partition} out_qIrp != in_Irp_14;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    havoc out_entry_1;
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    havoc out_entry_1;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#1_loop_L93(in_sdv_382: int, in_qIrp: int, in_entry_1: int, in_Irp_14: int) returns (out_sdv_382: int, out_qIrp: int, out_entry_1: int);
  free ensures {:va_keep} out_sdv_382 == in_sdv_382;
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_entry_1 == in_entry_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#0_loop_L74(in_pComplete: int)
{

  entry:
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon39_Then;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    call {:si_unique_call 2238} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L74(in_pComplete);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L74(in_pComplete: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#1_loop_L74(in_pComplete: int)
{

  entry:
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon39_Then;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    call {:si_unique_call 2239} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L74(in_pComplete);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L74(in_pComplete: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CleanupOrbList#0_loop_L38(in_Tmp_747: int, in_Tmp_748: int, in_lastItem: int, in_nextItem: int, in_requestIrp_1: int, in_Tmp_749: int, in_Tmp_751: int, in_Tmp_752: int, in_currentListItem_1: int, in_Tmp_753: int, in_DeviceExtension_11: int, in_CompletionStatus: int, in_vslice_dummy_var_361: int, in_vslice_dummy_var_362: int, in_vslice_dummy_var_363: int, in_vslice_dummy_var_364: int, in_vslice_dummy_var_365: int, in_vslice_dummy_var_366: int) returns (out_Tmp_747: int, out_Tmp_748: int, out_nextItem: int, out_requestIrp_1: int, out_Tmp_749: int, out_Tmp_751: int, out_Tmp_752: int, out_currentListItem_1: int, out_Tmp_753: int, out_vslice_dummy_var_361: int, out_vslice_dummy_var_362: int, out_vslice_dummy_var_363: int, out_vslice_dummy_var_364: int, out_vslice_dummy_var_365: int, out_vslice_dummy_var_366: int)
{
  var vslice_dummy_var_3305: int;

  entry:
    out_Tmp_747, out_Tmp_748, out_nextItem, out_requestIrp_1, out_Tmp_749, out_Tmp_751, out_Tmp_752, out_currentListItem_1, out_Tmp_753, out_vslice_dummy_var_361, out_vslice_dummy_var_362, out_vslice_dummy_var_363, out_vslice_dummy_var_364, out_vslice_dummy_var_365, out_vslice_dummy_var_366 := in_Tmp_747, in_Tmp_748, in_nextItem, in_requestIrp_1, in_Tmp_749, in_Tmp_751, in_Tmp_752, in_currentListItem_1, in_Tmp_753, in_vslice_dummy_var_361, in_vslice_dummy_var_362, in_vslice_dummy_var_363, in_vslice_dummy_var_364, in_vslice_dummy_var_365, in_vslice_dummy_var_366;
    goto L38, exit;

  exit:
    return;

  L38:
    out_currentListItem_1 := out_nextItem;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_nextItem;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2240} out_vslice_dummy_var_361 := FreeAsyncRequestContext(in_DeviceExtension_11, out_currentListItem_1);
    goto L45;

  L45:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} in_lastItem != out_currentListItem_1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 2248} {:si_old_unique_call 1} out_Tmp_747, out_Tmp_748, out_nextItem, out_requestIrp_1, out_Tmp_749, out_Tmp_751, out_Tmp_752, out_currentListItem_1, out_Tmp_753, out_vslice_dummy_var_361, out_vslice_dummy_var_362, out_vslice_dummy_var_363, out_vslice_dummy_var_364, out_vslice_dummy_var_365, out_vslice_dummy_var_366 := CleanupOrbList#0_loop_L38(out_Tmp_747, out_Tmp_748, in_lastItem, out_nextItem, out_requestIrp_1, out_Tmp_749, out_Tmp_751, out_Tmp_752, out_currentListItem_1, out_Tmp_753, in_DeviceExtension_11, in_CompletionStatus, out_vslice_dummy_var_361, out_vslice_dummy_var_362, out_vslice_dummy_var_363, out_vslice_dummy_var_364, out_vslice_dummy_var_365, out_vslice_dummy_var_366);
    return;

  anon26_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 2246} out_vslice_dummy_var_364 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    call {:si_unique_call 2247} out_vslice_dummy_var_362 := KeCancelTimer(0);
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    goto L62;

  L62:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} in_DeviceExtension_11 != 0;
    assume in_DeviceExtension_11 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_747;
    assume {:nonnull} in_DeviceExtension_11 != 0;
    assume in_DeviceExtension_11 > 0;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    havoc vslice_dummy_var_3305;
    call {:si_unique_call 2241} Sbp2StartPacket#0(vslice_dummy_var_3305, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_747));
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 2242} out_vslice_dummy_var_365 := FreeAsyncRequestContext(in_DeviceExtension_11, out_currentListItem_1);
    goto L45;

  anon23_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 2243} out_vslice_dummy_var_366 := FreeAsyncRequestContext(in_DeviceExtension_11, out_currentListItem_1);
    assume {:nonnull} in_DeviceExtension_11 != 0;
    assume in_DeviceExtension_11 > 0;
    call {:si_unique_call 2244} out_vslice_dummy_var_363 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_11), 0);
    call {:si_unique_call 2245} sdv_IoCompleteRequest(0, 0);
    goto L45;

  anon22_Then:
    goto L45;

  anon24_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_748;
    assume {:nonnull} out_Tmp_748 != 0;
    assume out_Tmp_748 > 0;
    goto L62;

  anon25_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_753;
    assume {:nonnull} out_Tmp_753 != 0;
    assume out_Tmp_753 > 0;
    goto L62;

  anon27_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_749;
    assume {:nonnull} out_Tmp_749 != 0;
    assume out_Tmp_749 > 0;
    goto L62;
}



procedure {:LoopProcedure} CleanupOrbList#0_loop_L38(in_Tmp_747: int, in_Tmp_748: int, in_lastItem: int, in_nextItem: int, in_requestIrp_1: int, in_Tmp_749: int, in_Tmp_751: int, in_Tmp_752: int, in_currentListItem_1: int, in_Tmp_753: int, in_DeviceExtension_11: int, in_CompletionStatus: int, in_vslice_dummy_var_361: int, in_vslice_dummy_var_362: int, in_vslice_dummy_var_363: int, in_vslice_dummy_var_364: int, in_vslice_dummy_var_365: int, in_vslice_dummy_var_366: int) returns (out_Tmp_747: int, out_Tmp_748: int, out_nextItem: int, out_requestIrp_1: int, out_Tmp_749: int, out_Tmp_751: int, out_Tmp_752: int, out_currentListItem_1: int, out_Tmp_753: int, out_vslice_dummy_var_361: int, out_vslice_dummy_var_362: int, out_vslice_dummy_var_363: int, out_vslice_dummy_var_364: int, out_vslice_dummy_var_365: int, out_vslice_dummy_var_366: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, LockDepth;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_vslice_dummy_var_362 == 1 || out_vslice_dummy_var_362 == 0 || out_vslice_dummy_var_362 == in_vslice_dummy_var_362;
  free ensures {:va_keep} out_vslice_dummy_var_364 == -1073741670 || out_vslice_dummy_var_364 == -1073741823 || out_vslice_dummy_var_364 == 259 || out_vslice_dummy_var_364 == 0 || out_vslice_dummy_var_364 == in_vslice_dummy_var_364;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CleanupOrbList#1_loop_L38(in_Tmp_747: int, in_Tmp_748: int, in_lastItem: int, in_nextItem: int, in_requestIrp_1: int, in_Tmp_749: int, in_Tmp_751: int, in_Tmp_752: int, in_currentListItem_1: int, in_Tmp_753: int, in_DeviceExtension_11: int, in_CompletionStatus: int, in_vslice_dummy_var_369: int, in_vslice_dummy_var_370: int, in_vslice_dummy_var_371: int, in_vslice_dummy_var_372: int, in_vslice_dummy_var_373: int, in_vslice_dummy_var_374: int) returns (out_Tmp_747: int, out_Tmp_748: int, out_nextItem: int, out_requestIrp_1: int, out_Tmp_749: int, out_Tmp_751: int, out_Tmp_752: int, out_currentListItem_1: int, out_Tmp_753: int, out_vslice_dummy_var_369: int, out_vslice_dummy_var_370: int, out_vslice_dummy_var_371: int, out_vslice_dummy_var_372: int, out_vslice_dummy_var_373: int, out_vslice_dummy_var_374: int)
{
  var vslice_dummy_var_3306: int;

  entry:
    out_Tmp_747, out_Tmp_748, out_nextItem, out_requestIrp_1, out_Tmp_749, out_Tmp_751, out_Tmp_752, out_currentListItem_1, out_Tmp_753, out_vslice_dummy_var_369, out_vslice_dummy_var_370, out_vslice_dummy_var_371, out_vslice_dummy_var_372, out_vslice_dummy_var_373, out_vslice_dummy_var_374 := in_Tmp_747, in_Tmp_748, in_nextItem, in_requestIrp_1, in_Tmp_749, in_Tmp_751, in_Tmp_752, in_currentListItem_1, in_Tmp_753, in_vslice_dummy_var_369, in_vslice_dummy_var_370, in_vslice_dummy_var_371, in_vslice_dummy_var_372, in_vslice_dummy_var_373, in_vslice_dummy_var_374;
    goto L38, exit;

  exit:
    return;

  L38:
    out_currentListItem_1 := out_nextItem;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_nextItem;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2249} out_vslice_dummy_var_369 := FreeAsyncRequestContext(in_DeviceExtension_11, out_currentListItem_1);
    goto L45;

  L45:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} in_lastItem != out_currentListItem_1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 2257} {:si_old_unique_call 1} out_Tmp_747, out_Tmp_748, out_nextItem, out_requestIrp_1, out_Tmp_749, out_Tmp_751, out_Tmp_752, out_currentListItem_1, out_Tmp_753, out_vslice_dummy_var_369, out_vslice_dummy_var_370, out_vslice_dummy_var_371, out_vslice_dummy_var_372, out_vslice_dummy_var_373, out_vslice_dummy_var_374 := CleanupOrbList#1_loop_L38(out_Tmp_747, out_Tmp_748, in_lastItem, out_nextItem, out_requestIrp_1, out_Tmp_749, out_Tmp_751, out_Tmp_752, out_currentListItem_1, out_Tmp_753, in_DeviceExtension_11, in_CompletionStatus, out_vslice_dummy_var_369, out_vslice_dummy_var_370, out_vslice_dummy_var_371, out_vslice_dummy_var_372, out_vslice_dummy_var_373, out_vslice_dummy_var_374);
    return;

  anon26_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 2255} out_vslice_dummy_var_372 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    call {:si_unique_call 2256} out_vslice_dummy_var_370 := KeCancelTimer(0);
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    goto L62;

  L62:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} in_DeviceExtension_11 != 0;
    assume in_DeviceExtension_11 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_747;
    assume {:nonnull} in_DeviceExtension_11 != 0;
    assume in_DeviceExtension_11 > 0;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    havoc vslice_dummy_var_3306;
    call {:si_unique_call 2250} Sbp2StartPacket#1(vslice_dummy_var_3306, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_747));
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 2251} out_vslice_dummy_var_373 := FreeAsyncRequestContext(in_DeviceExtension_11, out_currentListItem_1);
    goto L45;

  anon23_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 2252} out_vslice_dummy_var_374 := FreeAsyncRequestContext(in_DeviceExtension_11, out_currentListItem_1);
    assume {:nonnull} in_DeviceExtension_11 != 0;
    assume in_DeviceExtension_11 > 0;
    call {:si_unique_call 2253} out_vslice_dummy_var_371 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_11), 0);
    call {:si_unique_call 2254} sdv_IoCompleteRequest(0, 0);
    goto L45;

  anon22_Then:
    goto L45;

  anon24_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_748;
    assume {:nonnull} out_Tmp_748 != 0;
    assume out_Tmp_748 > 0;
    goto L62;

  anon25_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_753;
    assume {:nonnull} out_Tmp_753 != 0;
    assume out_Tmp_753 > 0;
    goto L62;

  anon27_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_749;
    assume {:nonnull} out_Tmp_749 != 0;
    assume out_Tmp_749 > 0;
    goto L62;
}



procedure {:LoopProcedure} CleanupOrbList#1_loop_L38(in_Tmp_747: int, in_Tmp_748: int, in_lastItem: int, in_nextItem: int, in_requestIrp_1: int, in_Tmp_749: int, in_Tmp_751: int, in_Tmp_752: int, in_currentListItem_1: int, in_Tmp_753: int, in_DeviceExtension_11: int, in_CompletionStatus: int, in_vslice_dummy_var_369: int, in_vslice_dummy_var_370: int, in_vslice_dummy_var_371: int, in_vslice_dummy_var_372: int, in_vslice_dummy_var_373: int, in_vslice_dummy_var_374: int) returns (out_Tmp_747: int, out_Tmp_748: int, out_nextItem: int, out_requestIrp_1: int, out_Tmp_749: int, out_Tmp_751: int, out_Tmp_752: int, out_currentListItem_1: int, out_Tmp_753: int, out_vslice_dummy_var_369: int, out_vslice_dummy_var_370: int, out_vslice_dummy_var_371: int, out_vslice_dummy_var_372: int, out_vslice_dummy_var_373: int, out_vslice_dummy_var_374: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, sdv_compFset, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} out_vslice_dummy_var_370 == 1 || out_vslice_dummy_var_370 == 0 || out_vslice_dummy_var_370 == in_vslice_dummy_var_370;
  free ensures {:va_keep} out_vslice_dummy_var_372 == -1073741670 || out_vslice_dummy_var_372 == -1073741823 || out_vslice_dummy_var_372 == 259 || out_vslice_dummy_var_372 == 0 || out_vslice_dummy_var_372 == in_vslice_dummy_var_372;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartPacket#0_loop_L24(in_nextEntry_2: int, in_sdv_359: int, in_queueEntry2_1: int, in_Key_1: int) returns (out_nextEntry_2: int, out_sdv_359: int, out_queueEntry2_1: int)
{

  entry:
    out_nextEntry_2, out_sdv_359, out_queueEntry2_1 := in_nextEntry_2, in_sdv_359, in_queueEntry2_1;
    goto L24, exit;

  exit:
    return;

  L24:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 2258} out_sdv_359 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_359;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon18_Else;

  anon18_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#0_loop_L24(in_nextEntry_2: int, in_sdv_359: int, in_queueEntry2_1: int, in_Key_1: int) returns (out_nextEntry_2: int, out_sdv_359: int, out_queueEntry2_1: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_sdv_359 == in_sdv_359;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartPacket#1_loop_L24(in_nextEntry_2: int, in_sdv_359: int, in_queueEntry2_1: int, in_Key_1: int) returns (out_nextEntry_2: int, out_sdv_359: int, out_queueEntry2_1: int)
{

  entry:
    out_nextEntry_2, out_sdv_359, out_queueEntry2_1 := in_nextEntry_2, in_sdv_359, in_queueEntry2_1;
    goto L24, exit;

  exit:
    return;

  L24:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 2259} out_sdv_359 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_359;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon18_Else;

  anon18_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#1_loop_L24(in_nextEntry_2: int, in_sdv_359: int, in_queueEntry2_1: int, in_Key_1: int) returns (out_nextEntry_2: int, out_sdv_359: int, out_queueEntry2_1: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_sdv_359 == in_sdv_359;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2GlobalStatusCallback#0_loop_L153(in_nextListItem: int, in_sdv_96: int, in_entry: int) returns (out_nextListItem: int, out_sdv_96: int, out_entry: int)
{

  entry:
    out_nextListItem, out_sdv_96, out_entry := in_nextListItem, in_sdv_96, in_entry;
    goto L153, exit;

  exit:
    return;

  L153:
    goto anon82_Else;

  anon82_Else:
    call {:si_unique_call 2260} out_sdv_96 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_96;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon98_Else;

  anon98_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon98_Else_dummy;

  anon98_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#0_loop_L153(in_nextListItem: int, in_sdv_96: int, in_entry: int) returns (out_nextListItem: int, out_sdv_96: int, out_entry: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_sdv_96 == in_sdv_96;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2GlobalStatusCallback#1_loop_L153(in_nextListItem: int, in_sdv_96: int, in_entry: int) returns (out_nextListItem: int, out_sdv_96: int, out_entry: int)
{

  entry:
    out_nextListItem, out_sdv_96, out_entry := in_nextListItem, in_sdv_96, in_entry;
    goto L153, exit;

  exit:
    return;

  L153:
    goto anon82_Else;

  anon82_Else:
    call {:si_unique_call 2261} out_sdv_96 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_96;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon98_Else;

  anon98_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon98_Else_dummy;

  anon98_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#1_loop_L153(in_nextListItem: int, in_sdv_96: int, in_entry: int) returns (out_nextListItem: int, out_sdv_96: int, out_entry: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_sdv_96 == in_sdv_96;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2UpdateNodeInformation#1_loop_L63(in_nextListItem_1: int, in_Tmp_353: int, in_sdv_167: int, in_Tmp_359: int, in_sdv_168: int, in_sdv_169: int, in_sdv_172: int, in_currentListItem: int, in_Tmp_362: int, in_sdv_174: int, in_Tmp_364: int, in_Tmp_365: int, in_DeviceExtension_8: int) returns (out_nextListItem_1: int, out_Tmp_353: int, out_Tmp_359: int, out_sdv_168: int, out_currentListItem: int, out_Tmp_362: int, out_Tmp_364: int, out_Tmp_365: int)
{
  var vslice_dummy_var_3307: int;

  entry:
    out_nextListItem_1, out_Tmp_353, out_Tmp_359, out_sdv_168, out_currentListItem, out_Tmp_362, out_Tmp_364, out_Tmp_365 := in_nextListItem_1, in_Tmp_353, in_Tmp_359, in_sdv_168, in_currentListItem, in_Tmp_362, in_Tmp_364, in_Tmp_365;
    goto L63, exit;

  exit:
    return;

  L63:
    out_currentListItem := out_nextListItem_1;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_365;
    assume {:nonnull} out_Tmp_365 != 0;
    assume out_Tmp_365 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_364;
    assume {:nonnull} out_Tmp_364 != 0;
    assume out_Tmp_364 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_362;
    assume {:nonnull} in_DeviceExtension_8 != 0;
    assume in_DeviceExtension_8 > 0;
    assume {:nonnull} out_Tmp_362 != 0;
    assume out_Tmp_362 > 0;
    assume {:nonnull} in_DeviceExtension_8 != 0;
    assume in_DeviceExtension_8 > 0;
    assume {:nonnull} out_Tmp_362 != 0;
    assume out_Tmp_362 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_359;
    assume {:nonnull} out_Tmp_359 != 0;
    assume out_Tmp_359 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_nextListItem_1;
    assume {:nonnull} in_DeviceExtension_8 != 0;
    assume in_DeviceExtension_8 > 0;
    havoc vslice_dummy_var_3307;
    call {:si_unique_call 2262} out_sdv_168 := sdv_containing_record(vslice_dummy_var_3307, 0);
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_currentListItem != out_sdv_168;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 2263} {:si_old_unique_call 1} out_nextListItem_1, out_Tmp_353, out_Tmp_359, out_sdv_168, out_currentListItem, out_Tmp_362, out_Tmp_364, out_Tmp_365 := Sbp2UpdateNodeInformation#1_loop_L63(out_nextListItem_1, out_Tmp_353, in_sdv_167, out_Tmp_359, out_sdv_168, in_sdv_169, in_sdv_172, out_currentListItem, out_Tmp_362, in_sdv_174, out_Tmp_364, out_Tmp_365, in_DeviceExtension_8);
    return;
}



procedure {:LoopProcedure} Sbp2UpdateNodeInformation#1_loop_L63(in_nextListItem_1: int, in_Tmp_353: int, in_sdv_167: int, in_Tmp_359: int, in_sdv_168: int, in_sdv_169: int, in_sdv_172: int, in_currentListItem: int, in_Tmp_362: int, in_sdv_174: int, in_Tmp_364: int, in_Tmp_365: int, in_DeviceExtension_8: int) returns (out_nextListItem_1: int, out_Tmp_353: int, out_Tmp_359: int, out_sdv_168: int, out_currentListItem: int, out_Tmp_362: int, out_Tmp_364: int, out_Tmp_365: int);
  free ensures {:va_keep} out_nextListItem_1 == in_nextListItem_1;
  free ensures {:va_keep} out_Tmp_353 == in_Tmp_353;
  free ensures {:va_keep} out_Tmp_359 == in_Tmp_359;
  free ensures {:va_keep} out_sdv_168 == in_sdv_168;
  free ensures {:va_keep} out_currentListItem == in_currentListItem;
  free ensures {:va_keep} out_Tmp_362 == in_Tmp_362;
  free ensures {:va_keep} out_Tmp_364 == in_Tmp_364;
  free ensures {:va_keep} out_Tmp_365 == in_Tmp_365;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 9} Sbp2CleanDeviceExtension#0_loop_L94(in_i_5: int, in_context_4: int, in_deviceExtension_17: int) returns (out_i_5: int, out_context_4: int)
{

  entry:
    out_i_5, out_context_4 := in_i_5, in_context_4;
    goto L94, exit;

  exit:
    return;

  L94:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_deviceExtension_17 != 0;
    assume in_deviceExtension_17 > 0;
    havoc out_context_4;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    call {:si_unique_call 2264} FreeAddressRange(in_deviceExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_4)));
    goto L101;

  L101:
    out_i_5 := out_i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    call {:si_unique_call 2265} {:si_old_unique_call 1} out_i_5, out_context_4 := Sbp2CleanDeviceExtension#0_loop_L94(out_i_5, out_context_4, in_deviceExtension_17);
    return;

  anon89_Then:
    goto L101;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L94(in_i_5: int, in_context_4: int, in_deviceExtension_17: int) returns (out_i_5: int, out_context_4: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L114(in_statusFifoElement: int, in_sdv_520: int) returns (out_statusFifoElement: int, out_sdv_520: int)
{

  entry:
    out_statusFifoElement, out_sdv_520 := in_statusFifoElement, in_sdv_520;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon78_Else;

  anon78_Else:
    assume {:partition} out_statusFifoElement != 0;
    call {:si_unique_call 2266} IoFreeMdl(0);
    call {:si_unique_call 2267} out_sdv_520 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_520;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    call {:si_unique_call 2268} {:si_old_unique_call 1} out_statusFifoElement, out_sdv_520 := Sbp2CleanDeviceExtension#0_loop_L114(out_statusFifoElement, out_sdv_520);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L114(in_statusFifoElement: int, in_sdv_520: int) returns (out_statusFifoElement: int, out_sdv_520: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L127(in_sdv_514: int, in_packet_12: int, in_Tmp_1165: int) returns (out_sdv_514: int, out_Tmp_1165: int)
{

  entry:
    out_sdv_514, out_Tmp_1165 := in_sdv_514, in_Tmp_1165;
    goto L127, exit;

  exit:
    return;

  L127:
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto anon79_Else;

  anon79_Else:
    call {:si_unique_call 2272} sdv_ExFreePool(0);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1165;
    assume {:nonnull} out_Tmp_1165 != 0;
    assume out_Tmp_1165 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 2271} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 2269} sdv_ExFreePool(0);
    call {:si_unique_call 2270} out_sdv_514 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 2273} {:si_old_unique_call 1} out_sdv_514, out_Tmp_1165 := Sbp2CleanDeviceExtension#0_loop_L127(out_sdv_514, in_packet_12, out_Tmp_1165);
    return;

  anon90_Then:
    goto L135;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L127(in_sdv_514: int, in_packet_12: int, in_Tmp_1165: int) returns (out_sdv_514: int, out_Tmp_1165: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L18(in_i_5: int, in_Tmp_1116: int, in_fdoExtension_3: int, in_Tmp_1170: int, in_DeviceObject_33: int) returns (out_i_5: int, out_Tmp_1116: int, out_Tmp_1170: int)
{

  entry:
    out_i_5, out_Tmp_1116, out_Tmp_1170 := in_i_5, in_Tmp_1116, in_Tmp_1170;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    goto anon67_Else;

  anon67_Else:
    out_Tmp_1116 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1170;
    assume {:nonnull} out_Tmp_1170 != 0;
    assume out_Tmp_1170 > 0;
    goto anon85_Then;

  anon85_Then:
    out_i_5 := out_i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L18(in_i_5: int, in_Tmp_1116: int, in_fdoExtension_3: int, in_Tmp_1170: int, in_DeviceObject_33: int) returns (out_i_5: int, out_Tmp_1116: int, out_Tmp_1170: int);
  free ensures {:va_keep} out_Tmp_1116 == in_i_5 || out_Tmp_1116 == in_Tmp_1116;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L188(in_i_5: int, in_Tmp_1112: int, in_Tmp_1118: int, in_Tmp_1122: int, in_Tmp_1124: int, in_Tmp_1128: int, in_Tmp_1129: int, in_Tmp_1130: int, in_Tmp_1131: int, in_Tmp_1134: int, in_Tmp_1136: int, in_Tmp_1139: int, in_Tmp_1140: int, in_Tmp_1141: int, in_Tmp_1143: int, in_Tmp_1145: int, in_Tmp_1148: int, in_Tmp_1149: int, in_fdoExtension_3: int, in_Tmp_1155: int, in_Tmp_1156: int, in_Tmp_1157: int, in_Tmp_1161: int, in_Tmp_1162: int, in_Tmp_1164: int, in_Tmp_1167: int, in_Tmp_1168: int, in_Tmp_1172: int) returns (out_i_5: int, out_Tmp_1112: int, out_Tmp_1118: int, out_Tmp_1122: int, out_Tmp_1124: int, out_Tmp_1128: int, out_Tmp_1129: int, out_Tmp_1130: int, out_Tmp_1131: int, out_Tmp_1134: int, out_Tmp_1136: int, out_Tmp_1139: int, out_Tmp_1140: int, out_Tmp_1141: int, out_Tmp_1143: int, out_Tmp_1145: int, out_Tmp_1148: int, out_Tmp_1149: int, out_Tmp_1155: int, out_Tmp_1156: int, out_Tmp_1157: int, out_Tmp_1161: int, out_Tmp_1162: int, out_Tmp_1164: int, out_Tmp_1167: int, out_Tmp_1168: int, out_Tmp_1172: int)
{

  entry:
    out_i_5, out_Tmp_1112, out_Tmp_1118, out_Tmp_1122, out_Tmp_1124, out_Tmp_1128, out_Tmp_1129, out_Tmp_1130, out_Tmp_1131, out_Tmp_1134, out_Tmp_1136, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1143, out_Tmp_1145, out_Tmp_1148, out_Tmp_1149, out_Tmp_1155, out_Tmp_1156, out_Tmp_1157, out_Tmp_1161, out_Tmp_1162, out_Tmp_1164, out_Tmp_1167, out_Tmp_1168, out_Tmp_1172 := in_i_5, in_Tmp_1112, in_Tmp_1118, in_Tmp_1122, in_Tmp_1124, in_Tmp_1128, in_Tmp_1129, in_Tmp_1130, in_Tmp_1131, in_Tmp_1134, in_Tmp_1136, in_Tmp_1139, in_Tmp_1140, in_Tmp_1141, in_Tmp_1143, in_Tmp_1145, in_Tmp_1148, in_Tmp_1149, in_Tmp_1155, in_Tmp_1156, in_Tmp_1157, in_Tmp_1161, in_Tmp_1162, in_Tmp_1164, in_Tmp_1167, in_Tmp_1168, in_Tmp_1172;
    goto L188, exit;

  exit:
    return;

  L188:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    goto anon82_Else;

  anon82_Else:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_i_5;
    out_Tmp_1134 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1148;
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    goto anon96_Then;

  anon96_Then:
    goto L194;

  L194:
    out_Tmp_1112 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1164;
    assume {:nonnull} out_Tmp_1164 != 0;
    assume out_Tmp_1164 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    out_Tmp_1141 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1139;
    assume {:nonnull} out_Tmp_1139 != 0;
    assume out_Tmp_1139 > 0;
    call {:si_unique_call 2276} sdv_ExFreePool(0);
    out_Tmp_1168 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1128;
    assume {:nonnull} out_Tmp_1128 != 0;
    assume out_Tmp_1128 > 0;
    out_Tmp_1167 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1172;
    assume {:nonnull} out_Tmp_1172 != 0;
    assume out_Tmp_1172 > 0;
    goto L236;

  L236:
    out_Tmp_1118 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1143;
    assume {:nonnull} out_Tmp_1143 != 0;
    assume out_Tmp_1143 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    out_Tmp_1157 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1145;
    assume {:nonnull} out_Tmp_1145 != 0;
    assume out_Tmp_1145 > 0;
    call {:si_unique_call 2275} sdv_ExFreePool(0);
    out_Tmp_1162 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1140;
    assume {:nonnull} out_Tmp_1140 != 0;
    assume out_Tmp_1140 > 0;
    out_Tmp_1156 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1149;
    assume {:nonnull} out_Tmp_1149 != 0;
    assume out_Tmp_1149 > 0;
    goto L243;

  L243:
    out_Tmp_1131 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1130;
    assume {:nonnull} out_Tmp_1130 != 0;
    assume out_Tmp_1130 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    out_Tmp_1129 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1136;
    assume {:nonnull} out_Tmp_1136 != 0;
    assume out_Tmp_1136 > 0;
    call {:si_unique_call 2274} sdv_ExFreePool(0);
    out_Tmp_1124 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1155;
    assume {:nonnull} out_Tmp_1155 != 0;
    assume out_Tmp_1155 > 0;
    out_Tmp_1161 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1122;
    assume {:nonnull} out_Tmp_1122 != 0;
    assume out_Tmp_1122 > 0;
    goto L250;

  L250:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    goto L250_dummy;

  L250_dummy:
    call {:si_unique_call 2277} {:si_old_unique_call 1} out_i_5, out_Tmp_1112, out_Tmp_1118, out_Tmp_1122, out_Tmp_1124, out_Tmp_1128, out_Tmp_1129, out_Tmp_1130, out_Tmp_1131, out_Tmp_1134, out_Tmp_1136, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1143, out_Tmp_1145, out_Tmp_1148, out_Tmp_1149, out_Tmp_1155, out_Tmp_1156, out_Tmp_1157, out_Tmp_1161, out_Tmp_1162, out_Tmp_1164, out_Tmp_1167, out_Tmp_1168, out_Tmp_1172 := Sbp2CleanDeviceExtension#0_loop_L188(out_i_5, out_Tmp_1112, out_Tmp_1118, out_Tmp_1122, out_Tmp_1124, out_Tmp_1128, out_Tmp_1129, out_Tmp_1130, out_Tmp_1131, out_Tmp_1134, out_Tmp_1136, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1143, out_Tmp_1145, out_Tmp_1148, out_Tmp_1149, in_fdoExtension_3, out_Tmp_1155, out_Tmp_1156, out_Tmp_1157, out_Tmp_1161, out_Tmp_1162, out_Tmp_1164, out_Tmp_1167, out_Tmp_1168, out_Tmp_1172);
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L188(in_i_5: int, in_Tmp_1112: int, in_Tmp_1118: int, in_Tmp_1122: int, in_Tmp_1124: int, in_Tmp_1128: int, in_Tmp_1129: int, in_Tmp_1130: int, in_Tmp_1131: int, in_Tmp_1134: int, in_Tmp_1136: int, in_Tmp_1139: int, in_Tmp_1140: int, in_Tmp_1141: int, in_Tmp_1143: int, in_Tmp_1145: int, in_Tmp_1148: int, in_Tmp_1149: int, in_fdoExtension_3: int, in_Tmp_1155: int, in_Tmp_1156: int, in_Tmp_1157: int, in_Tmp_1161: int, in_Tmp_1162: int, in_Tmp_1164: int, in_Tmp_1167: int, in_Tmp_1168: int, in_Tmp_1172: int) returns (out_i_5: int, out_Tmp_1112: int, out_Tmp_1118: int, out_Tmp_1122: int, out_Tmp_1124: int, out_Tmp_1128: int, out_Tmp_1129: int, out_Tmp_1130: int, out_Tmp_1131: int, out_Tmp_1134: int, out_Tmp_1136: int, out_Tmp_1139: int, out_Tmp_1140: int, out_Tmp_1141: int, out_Tmp_1143: int, out_Tmp_1145: int, out_Tmp_1148: int, out_Tmp_1149: int, out_Tmp_1155: int, out_Tmp_1156: int, out_Tmp_1157: int, out_Tmp_1161: int, out_Tmp_1162: int, out_Tmp_1164: int, out_Tmp_1167: int, out_Tmp_1168: int, out_Tmp_1172: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 9} Sbp2CleanDeviceExtension#1_loop_L94(in_i_5: int, in_context_4: int, in_deviceExtension_17: int) returns (out_i_5: int, out_context_4: int)
{

  entry:
    out_i_5, out_context_4 := in_i_5, in_context_4;
    goto L94, exit;

  exit:
    return;

  L94:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_deviceExtension_17 != 0;
    assume in_deviceExtension_17 > 0;
    havoc out_context_4;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    call {:si_unique_call 2278} FreeAddressRange(in_deviceExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_4)));
    goto L101;

  L101:
    out_i_5 := out_i_5 + 1;
    goto L101_dummy;

  L101_dummy:
    call {:si_unique_call 2279} {:si_old_unique_call 1} out_i_5, out_context_4 := Sbp2CleanDeviceExtension#1_loop_L94(out_i_5, out_context_4, in_deviceExtension_17);
    return;

  anon89_Then:
    goto L101;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L94(in_i_5: int, in_context_4: int, in_deviceExtension_17: int) returns (out_i_5: int, out_context_4: int);
  modifies alloc, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Busy__KDEVICE_QUEUE, Mem_T.DeviceState__POWER_STATE, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L114(in_statusFifoElement: int, in_sdv_520: int) returns (out_statusFifoElement: int, out_sdv_520: int)
{

  entry:
    out_statusFifoElement, out_sdv_520 := in_statusFifoElement, in_sdv_520;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon78_Else;

  anon78_Else:
    assume {:partition} out_statusFifoElement != 0;
    call {:si_unique_call 2280} IoFreeMdl(0);
    call {:si_unique_call 2281} out_sdv_520 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_520;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    call {:si_unique_call 2282} {:si_old_unique_call 1} out_statusFifoElement, out_sdv_520 := Sbp2CleanDeviceExtension#1_loop_L114(out_statusFifoElement, out_sdv_520);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L114(in_statusFifoElement: int, in_sdv_520: int) returns (out_statusFifoElement: int, out_sdv_520: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L127(in_sdv_514: int, in_packet_12: int, in_Tmp_1165: int) returns (out_sdv_514: int, out_Tmp_1165: int)
{

  entry:
    out_sdv_514, out_Tmp_1165 := in_sdv_514, in_Tmp_1165;
    goto L127, exit;

  exit:
    return;

  L127:
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto anon79_Else;

  anon79_Else:
    call {:si_unique_call 2286} sdv_ExFreePool(0);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    havoc out_Tmp_1165;
    assume {:nonnull} out_Tmp_1165 != 0;
    assume out_Tmp_1165 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    call {:si_unique_call 2285} IoFreeIrp(0);
    goto L135;

  L135:
    call {:si_unique_call 2283} sdv_ExFreePool(0);
    call {:si_unique_call 2284} out_sdv_514 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} in_packet_12 != 0;
    assume in_packet_12 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 2287} {:si_old_unique_call 1} out_sdv_514, out_Tmp_1165 := Sbp2CleanDeviceExtension#1_loop_L127(out_sdv_514, in_packet_12, out_Tmp_1165);
    return;

  anon90_Then:
    goto L135;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L127(in_sdv_514: int, in_packet_12: int, in_Tmp_1165: int) returns (out_sdv_514: int, out_Tmp_1165: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L18(in_i_5: int, in_Tmp_1116: int, in_fdoExtension_3: int, in_Tmp_1170: int, in_DeviceObject_33: int) returns (out_i_5: int, out_Tmp_1116: int, out_Tmp_1170: int)
{

  entry:
    out_i_5, out_Tmp_1116, out_Tmp_1170 := in_i_5, in_Tmp_1116, in_Tmp_1170;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    goto anon67_Else;

  anon67_Else:
    out_Tmp_1116 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1170;
    assume {:nonnull} out_Tmp_1170 != 0;
    assume out_Tmp_1170 > 0;
    goto anon85_Then;

  anon85_Then:
    out_i_5 := out_i_5 + 1;
    goto anon85_Then_dummy;

  anon85_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L18(in_i_5: int, in_Tmp_1116: int, in_fdoExtension_3: int, in_Tmp_1170: int, in_DeviceObject_33: int) returns (out_i_5: int, out_Tmp_1116: int, out_Tmp_1170: int);
  free ensures {:va_keep} out_Tmp_1116 == in_i_5 || out_Tmp_1116 == in_Tmp_1116;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L188(in_i_5: int, in_Tmp_1112: int, in_Tmp_1113: int, in_Tmp_1118: int, in_Tmp_1119: int, in_Tmp_1122: int, in_Tmp_1124: int, in_Tmp_1128: int, in_Tmp_1129: int, in_Tmp_1130: int, in_Tmp_1131: int, in_Tmp_1134: int, in_Tmp_1136: int, in_Tmp_1137: int, in_Tmp_1139: int, in_Tmp_1140: int, in_Tmp_1141: int, in_Tmp_1142: int, in_Tmp_1143: int, in_Tmp_1145: int, in_Tmp_1146: int, in_Tmp_1147: int, in_Tmp_1148: int, in_Tmp_1149: int, in_fdoExtension_3: int, in_Tmp_1153: int, in_Tmp_1155: int, in_Tmp_1156: int, in_Tmp_1157: int, in_cIrql_5: int, in_Tmp_1161: int, in_Tmp_1162: int, in_Tmp_1164: int, in_deviceExtension_17: int, in_Tmp_1167: int, in_Tmp_1168: int, in_Tmp_1171: int, in_sdv_521: int, in_Tmp_1172: int, in_DeviceObject_33: int, in_vslice_dummy_var_441: int, in_vslice_dummy_var_445: int) returns (out_i_5: int, out_Tmp_1112: int, out_Tmp_1113: int, out_Tmp_1118: int, out_Tmp_1119: int, out_Tmp_1122: int, out_Tmp_1124: int, out_Tmp_1128: int, out_Tmp_1129: int, out_Tmp_1130: int, out_Tmp_1131: int, out_Tmp_1134: int, out_Tmp_1136: int, out_Tmp_1137: int, out_Tmp_1139: int, out_Tmp_1140: int, out_Tmp_1141: int, out_Tmp_1142: int, out_Tmp_1143: int, out_Tmp_1145: int, out_Tmp_1146: int, out_Tmp_1147: int, out_Tmp_1148: int, out_Tmp_1149: int, out_Tmp_1153: int, out_Tmp_1155: int, out_Tmp_1156: int, out_Tmp_1157: int, out_cIrql_5: int, out_Tmp_1161: int, out_Tmp_1162: int, out_Tmp_1164: int, out_deviceExtension_17: int, out_Tmp_1167: int, out_Tmp_1168: int, out_Tmp_1171: int, out_sdv_521: int, out_Tmp_1172: int, out_DeviceObject_33: int, out_vslice_dummy_var_441: int, out_vslice_dummy_var_445: int)
{

  entry:
    out_i_5, out_Tmp_1112, out_Tmp_1113, out_Tmp_1118, out_Tmp_1119, out_Tmp_1122, out_Tmp_1124, out_Tmp_1128, out_Tmp_1129, out_Tmp_1130, out_Tmp_1131, out_Tmp_1134, out_Tmp_1136, out_Tmp_1137, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1142, out_Tmp_1143, out_Tmp_1145, out_Tmp_1146, out_Tmp_1147, out_Tmp_1148, out_Tmp_1149, out_Tmp_1153, out_Tmp_1155, out_Tmp_1156, out_Tmp_1157, out_cIrql_5, out_Tmp_1161, out_Tmp_1162, out_Tmp_1164, out_deviceExtension_17, out_Tmp_1167, out_Tmp_1168, out_Tmp_1171, out_sdv_521, out_Tmp_1172, out_DeviceObject_33, out_vslice_dummy_var_441, out_vslice_dummy_var_445 := in_i_5, in_Tmp_1112, in_Tmp_1113, in_Tmp_1118, in_Tmp_1119, in_Tmp_1122, in_Tmp_1124, in_Tmp_1128, in_Tmp_1129, in_Tmp_1130, in_Tmp_1131, in_Tmp_1134, in_Tmp_1136, in_Tmp_1137, in_Tmp_1139, in_Tmp_1140, in_Tmp_1141, in_Tmp_1142, in_Tmp_1143, in_Tmp_1145, in_Tmp_1146, in_Tmp_1147, in_Tmp_1148, in_Tmp_1149, in_Tmp_1153, in_Tmp_1155, in_Tmp_1156, in_Tmp_1157, in_cIrql_5, in_Tmp_1161, in_Tmp_1162, in_Tmp_1164, in_deviceExtension_17, in_Tmp_1167, in_Tmp_1168, in_Tmp_1171, in_sdv_521, in_Tmp_1172, in_DeviceObject_33, in_vslice_dummy_var_441, in_vslice_dummy_var_445;
    goto L188, exit;

  exit:
    return;

  L188:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    goto anon82_Else;

  anon82_Else:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_i_5;
    out_Tmp_1134 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1148;
    assume {:nonnull} out_Tmp_1148 != 0;
    assume out_Tmp_1148 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    out_Tmp_1147 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1113;
    assume {:nonnull} out_Tmp_1113 != 0;
    assume out_Tmp_1113 > 0;
    havoc out_Tmp_1137;
    assume {:nonnull} out_Tmp_1137 != 0;
    assume out_Tmp_1137 > 0;
    havoc out_deviceExtension_17;
    assume {:nonnull} out_deviceExtension_17 != 0;
    assume out_deviceExtension_17 > 0;
    out_Tmp_1146 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1171;
    assume {:nonnull} out_Tmp_1171 != 0;
    assume out_Tmp_1171 > 0;
    havoc out_DeviceObject_33;
    call {:si_unique_call 2303} sdv_KeReleaseSpinLock(0, out_cIrql_5);
    call {:si_unique_call 2304} out_sdv_521 := Sbp2CleanDeviceExtension#0(out_DeviceObject_33, 1);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_sdv_521 != 0;
    call {:si_unique_call 2291} out_vslice_dummy_var_441 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 2292} out_Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    call {:si_unique_call 2293} sdv_KeRaiseIrql(2, out_Tmp_1142);
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    havoc out_cIrql_5;
    call {:si_unique_call 2294} Sbp2StartNextPacketByKey#1(out_DeviceObject_33, 0);
    call {:si_unique_call 2295} sdv_KeLowerIrql(out_cIrql_5);
    call {:si_unique_call 2296} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} out_deviceExtension_17 != 0;
    assume out_deviceExtension_17 > 0;
    call {:si_unique_call 2297} out_vslice_dummy_var_445 := KeCancelTimer(0);
    call {:si_unique_call 2298} IoDeleteDevice(0);
    call {:si_unique_call 2299} out_Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    call {:si_unique_call 2300} sdv_KeAcquireSpinLock(0, out_Tmp_1142);
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    havoc out_cIrql_5;
    out_Tmp_1119 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1153;
    assume {:nonnull} out_Tmp_1153 != 0;
    assume out_Tmp_1153 > 0;
    goto L194;

  L194:
    out_Tmp_1112 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1164;
    assume {:nonnull} out_Tmp_1164 != 0;
    assume out_Tmp_1164 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    out_Tmp_1141 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1139;
    assume {:nonnull} out_Tmp_1139 != 0;
    assume out_Tmp_1139 > 0;
    call {:si_unique_call 2290} sdv_ExFreePool(0);
    out_Tmp_1168 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1128;
    assume {:nonnull} out_Tmp_1128 != 0;
    assume out_Tmp_1128 > 0;
    out_Tmp_1167 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1172;
    assume {:nonnull} out_Tmp_1172 != 0;
    assume out_Tmp_1172 > 0;
    goto L236;

  L236:
    out_Tmp_1118 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1143;
    assume {:nonnull} out_Tmp_1143 != 0;
    assume out_Tmp_1143 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    out_Tmp_1157 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1145;
    assume {:nonnull} out_Tmp_1145 != 0;
    assume out_Tmp_1145 > 0;
    call {:si_unique_call 2289} sdv_ExFreePool(0);
    out_Tmp_1162 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1140;
    assume {:nonnull} out_Tmp_1140 != 0;
    assume out_Tmp_1140 > 0;
    out_Tmp_1156 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1149;
    assume {:nonnull} out_Tmp_1149 != 0;
    assume out_Tmp_1149 > 0;
    goto L243;

  L243:
    out_Tmp_1131 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1130;
    assume {:nonnull} out_Tmp_1130 != 0;
    assume out_Tmp_1130 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    out_Tmp_1129 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1136;
    assume {:nonnull} out_Tmp_1136 != 0;
    assume out_Tmp_1136 > 0;
    call {:si_unique_call 2288} sdv_ExFreePool(0);
    out_Tmp_1124 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1155;
    assume {:nonnull} out_Tmp_1155 != 0;
    assume out_Tmp_1155 > 0;
    out_Tmp_1161 := out_i_5;
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    havoc out_Tmp_1122;
    assume {:nonnull} out_Tmp_1122 != 0;
    assume out_Tmp_1122 > 0;
    goto L250;

  L250:
    assume {:nonnull} in_fdoExtension_3 != 0;
    assume in_fdoExtension_3 > 0;
    goto L250_dummy;

  L250_dummy:
    call {:si_unique_call 2305} {:si_old_unique_call 1} out_i_5, out_Tmp_1112, out_Tmp_1113, out_Tmp_1118, out_Tmp_1119, out_Tmp_1122, out_Tmp_1124, out_Tmp_1128, out_Tmp_1129, out_Tmp_1130, out_Tmp_1131, out_Tmp_1134, out_Tmp_1136, out_Tmp_1137, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1142, out_Tmp_1143, out_Tmp_1145, out_Tmp_1146, out_Tmp_1147, out_Tmp_1148, out_Tmp_1149, out_Tmp_1153, out_Tmp_1155, out_Tmp_1156, out_Tmp_1157, out_cIrql_5, out_Tmp_1161, out_Tmp_1162, out_Tmp_1164, out_deviceExtension_17, out_Tmp_1167, out_Tmp_1168, out_Tmp_1171, out_sdv_521, out_Tmp_1172, out_DeviceObject_33, out_vslice_dummy_var_441, out_vslice_dummy_var_445 := Sbp2CleanDeviceExtension#1_loop_L188(out_i_5, out_Tmp_1112, out_Tmp_1113, out_Tmp_1118, out_Tmp_1119, out_Tmp_1122, out_Tmp_1124, out_Tmp_1128, out_Tmp_1129, out_Tmp_1130, out_Tmp_1131, out_Tmp_1134, out_Tmp_1136, out_Tmp_1137, out_Tmp_1139, out_Tmp_1140, out_Tmp_1141, out_Tmp_1142, out_Tmp_1143, out_Tmp_1145, out_Tmp_1146, out_Tmp_1147, out_Tmp_1148, out_Tmp_1149, in_fdoExtension_3, out_Tmp_1153, out_Tmp_1155, out_Tmp_1156, out_Tmp_1157, out_cIrql_5, out_Tmp_1161, out_Tmp_1162, out_Tmp_1164, out_deviceExtension_17, out_Tmp_1167, out_Tmp_1168, out_Tmp_1171, out_sdv_521, out_Tmp_1172, out_DeviceObject_33, out_vslice_dummy_var_441, out_vslice_dummy_var_445);
    return;

  anon99_Then:
    goto L250;

  anon98_Then:
    goto L243;

  anon97_Then:
    goto L236;

  anon83_Then:
    assume {:partition} out_sdv_521 == 0;
    call {:si_unique_call 2301} out_Tmp_1142 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    call {:si_unique_call 2302} sdv_KeAcquireSpinLock(0, out_Tmp_1142);
    assume {:nonnull} out_Tmp_1142 != 0;
    assume out_Tmp_1142 > 0;
    havoc out_cIrql_5;
    goto L194;

  anon96_Then:
    goto L194;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L188(in_i_5: int, in_Tmp_1112: int, in_Tmp_1113: int, in_Tmp_1118: int, in_Tmp_1119: int, in_Tmp_1122: int, in_Tmp_1124: int, in_Tmp_1128: int, in_Tmp_1129: int, in_Tmp_1130: int, in_Tmp_1131: int, in_Tmp_1134: int, in_Tmp_1136: int, in_Tmp_1137: int, in_Tmp_1139: int, in_Tmp_1140: int, in_Tmp_1141: int, in_Tmp_1142: int, in_Tmp_1143: int, in_Tmp_1145: int, in_Tmp_1146: int, in_Tmp_1147: int, in_Tmp_1148: int, in_Tmp_1149: int, in_fdoExtension_3: int, in_Tmp_1153: int, in_Tmp_1155: int, in_Tmp_1156: int, in_Tmp_1157: int, in_cIrql_5: int, in_Tmp_1161: int, in_Tmp_1162: int, in_Tmp_1164: int, in_deviceExtension_17: int, in_Tmp_1167: int, in_Tmp_1168: int, in_Tmp_1171: int, in_sdv_521: int, in_Tmp_1172: int, in_DeviceObject_33: int, in_vslice_dummy_var_441: int, in_vslice_dummy_var_445: int) returns (out_i_5: int, out_Tmp_1112: int, out_Tmp_1113: int, out_Tmp_1118: int, out_Tmp_1119: int, out_Tmp_1122: int, out_Tmp_1124: int, out_Tmp_1128: int, out_Tmp_1129: int, out_Tmp_1130: int, out_Tmp_1131: int, out_Tmp_1134: int, out_Tmp_1136: int, out_Tmp_1137: int, out_Tmp_1139: int, out_Tmp_1140: int, out_Tmp_1141: int, out_Tmp_1142: int, out_Tmp_1143: int, out_Tmp_1145: int, out_Tmp_1146: int, out_Tmp_1147: int, out_Tmp_1148: int, out_Tmp_1149: int, out_Tmp_1153: int, out_Tmp_1155: int, out_Tmp_1156: int, out_Tmp_1157: int, out_cIrql_5: int, out_Tmp_1161: int, out_Tmp_1162: int, out_Tmp_1164: int, out_deviceExtension_17: int, out_Tmp_1167: int, out_Tmp_1168: int, out_Tmp_1171: int, out_sdv_521: int, out_Tmp_1172: int, out_DeviceObject_33: int, out_vslice_dummy_var_441: int, out_vslice_dummy_var_445: int);
  modifies alloc, Mem_T.Busy__KDEVICE_QUEUE, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, LockDepth, Mem_T.DeviceState__POWER_STATE, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} out_sdv_521 == 1 || out_sdv_521 == 0 || out_sdv_521 == in_sdv_521;
  free ensures {:va_keep} out_vslice_dummy_var_441 == -1073741823 || out_vslice_dummy_var_441 == -1073741738 || out_vslice_dummy_var_441 == 0 || out_vslice_dummy_var_441 == in_vslice_dummy_var_441;
  free ensures {:va_keep} out_vslice_dummy_var_445 == 1 || out_vslice_dummy_var_445 == 0 || out_vslice_dummy_var_445 == in_vslice_dummy_var_445;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_474: int, dup_assertVar: bool);
  modifies alloc, Mem_T.CurrentStackLocation_unnamed_tag_6, LockDepth, yogi_error, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Type_unnamed_tag_37, Mem_T.DeviceState__POWER_STATE, Mem_T.Busy__KDEVICE_QUEUE;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_474: int, dup_assertVar: bool)
{

  start:
    call Tmp_474, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


