var {:scalar} alloc: int;

var {:scalar} LockDepth: int;

var {:scalar} yogi_error: int;

var {:scalar} t: int;

var {:scalar} Mem_T.CompletionRoutine__IO_STACK_LOCATION: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const IID_IKsDeviceFunctions: int;

const AvData: int;

const BUS1394_CLASS_GUID: int;

const IID_IUnknown: int;

const IID_IDrmAudioStream: int;

const GUID_61883_CLASS: int;

const IID_IKsFastClock: int;

const IID_IKsControl: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const sdv_cancelFptr: int;

const GUID_SLEEPBUTTON_ACTION_FLAGS: int;

const GUID_VIDEO_ANNOYANCE_TIMEOUT: int;

const GUID_BATTERY_DISCHARGE_FLAGS_3: int;

const GUID_PROCESSOR_THROTTLE_MAXIMUM: int;

const GUID_PROCESSOR_CORE_PARKING_MAX_CORES: int;

const GUID_POWERBUTTON_ACTION: int;

const GUID_LIDOPEN_POWERSTATE: int;

const GUID_PROCESSOR_PARKING_CORE_OVERRIDE: int;

const GUID_PROCESSOR_PARKING_PERF_STATE: int;

const GUID_PCIEXPRESS_SETTINGS_SUBGROUP: int;

const GUID_PROCESSOR_PERF_DECREASE_POLICY: int;

const GUID_PROCESSOR_PERF_INCREASE_TIME: int;

const GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE: int;

const GUID_VIDEO_ADAPTIVE_POWERDOWN: int;

const GUID_USERINTERFACEBUTTON_ACTION: int;

const GUID_PROCESSOR_THROTTLE_POLICY: int;

const GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD: int;

const GUID_PCIEXPRESS_ASPM_POLICY: int;

const GUID_MIN_POWER_SAVINGS: int;

const GUID_ALLOW_STANDBY_STATES: int;

const GUID_BATTERY_PERCENTAGE_REMAINING: int;

const GUID_STANDBY_TIMEOUT: int;

const GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD: int;

const GUID_DEVICE_IDLE_POLICY: int;

const GUID_ALLOW_RTC_WAKE: int;

const GUID_PROCESSOR_PERFSTATE_POLICY: int;

const GUID_PROCESSOR_PERF_BOOST_POLICY: int;

const GUID_LIDCLOSE_ACTION: int;

const GUID_BATTERY_DISCHARGE_ACTION_2: int;

const GUID_BATTERY_DISCHARGE_LEVEL_2: int;

const GUID_APPLAUNCH_BUTTON: int;

const GUID_BATTERY_DISCHARGE_FLAGS_1: int;

const GUID_PROCESSOR_ALLOW_THROTTLING: int;

const GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD: int;

const GUID_MONITOR_POWER_ON: int;

const GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD: int;

const GUID_DISK_BURST_IGNORE_THRESHOLD: int;

const GUID_SLEEP_SUBGROUP: int;

const GUID_SLEEPBUTTON_ACTION: int;

const GUID_BATTERY_DISCHARGE_ACTION_1: int;

const GUID_PROCESSOR_IDLE_DISABLE: int;

const GUID_POWERBUTTON_ACTION_FLAGS: int;

const GUID_PROCESSOR_PERF_INCREASE_POLICY: int;

const GUID_VIDEO_SUBGROUP: int;

const GUID_PROCESSOR_PERF_DECREASE_TIME: int;

const GUID_DISK_POWERDOWN_TIMEOUT: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD: int;

const GUID_MAX_POWER_SAVINGS: int;

const GUID_TYPICAL_POWER_SAVINGS: int;

const GUID_CONSOLE_DISPLAY_STATE: int;

const GUID_HIBERNATE_FASTS4_POLICY: int;

const GUID_BATTERY_SUBGROUP: int;

const GUID_BATTERY_DISCHARGE_FLAGS_0: int;

const GUID_ACDC_POWER_SOURCE: int;

const GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR: int;

const GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS: int;

const GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD: int;

const GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME: int;

const GUID_PROCESSOR_SETTINGS_SUBGROUP: int;

const GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS: int;

const GUID_IDLE_BACKGROUND_TASK: int;

const GUID_BATTERY_DISCHARGE_FLAGS_2: int;

const GUID_PROCESSOR_THROTTLE_MINIMUM: int;

const GUID_ALLOW_AWAYMODE: int;

const NO_SUBGROUP_GUID: int;

const GUID_DISK_SUBGROUP: int;

const GUID_DISK_ADAPTIVE_POWERDOWN: int;

const GUID_HIBERNATE_TIMEOUT: int;

const GUID_SYSTEM_BUTTON_SUBGROUP: int;

const GUID_POWERSCHEME_PERSONALITY: int;

const GUID_SYSTEM_COOLING_POLICY: int;

const GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME: int;

const GUID_BATTERY_DISCHARGE_LEVEL_1: int;

const ALL_POWERSCHEMES_GUID: int;

const GUID_LIDSWITCH_STATE_CHANGE: int;

const GUID_BATTERY_DISCHARGE_LEVEL_3: int;

const GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY: int;

const GUID_SESSION_DISPLAY_STATE: int;

const GUID_ALLOW_SYSTEM_REQUIRED: int;

const GUID_BATTERY_DISCHARGE_ACTION_0: int;

const GUID_ENABLE_SWITCH_FORCED_SHUTDOWN: int;

const GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS: int;

const GUID_BATTERY_DISCHARGE_ACTION_3: int;

const GUID_PROCESSOR_IDLE_ALLOW_SCALING: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING: int;

const GUID_LIDCLOSE_ACTION_FLAGS: int;

const GUID_PROCESSOR_PERF_DECREASE_THRESHOLD: int;

const GUID_LOCK_CONSOLE_ON_WAKE: int;

const GUID_VIDEO_POWERDOWN_TIMEOUT: int;

const GUID_BATTERY_DISCHARGE_LEVEL_0: int;

const GUID_PROCESSOR_CORE_PARKING_MIN_CORES: int;

const GUID_VIDEO_DIM_TIMEOUT: int;

const GUID_PROCESSOR_IDLESTATE_POLICY: int;

const GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD: int;

const GUID_ACTIVE_POWERSCHEME: int;

const GUID_SYSTEM_AWAYMODE: int;

const GUID_PROCESSOR_IDLE_TIME_CHECK: int;

const GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR: int;

const GUID_ALLOW_DISPLAY_REQUIRED: int;

const GUID_UNATTEND_SLEEP_TIMEOUT: int;

const GUID_CRITICAL_POWER_TRANSITION: int;

const GUID_PROCESSOR_PERF_INCREASE_THRESHOLD: int;

const GUID_BACKGROUND_TASK_NOTIFICATION: int;

const GUID_SLEEP_IDLE_THRESHOLD: int;

const GUID_PROCESSOR_PERF_TIME_CHECK: int;

const GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY: int;

const GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING: int;

const GUID_PROCESSOR_PERF_HISTORY: int;

procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    assume AvData == 0;
    return;
}



procedure {:origName "Av_SynchCompletionRoutine"} Av_SynchCompletionRoutine(actual_DeviceObject: int, actual_Irp: int, actual_Event: int) returns (Tmp_3: int);
  free ensures {:va_keep} Tmp_3 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_SynchCompletionRoutine"} Av_SynchCompletionRoutine(actual_DeviceObject: int, actual_Irp: int, actual_Event: int) returns (Tmp_3: int)
{
  var {:pointer} Event: int;
  var vslice_dummy_var_1: int;

  anon0:
    Event := actual_Event;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Event != 0;
    call {:si_unique_call 1} vslice_dummy_var_1 := KeSetEvent(Event, 0, 0);
    goto L4;

  L4:
    Tmp_3 := -1073741802;
    return;

  anon3_Then:
    assume {:partition} Event == 0;
    goto L4;
}



procedure {:origName "Av_SysControl"} Av_SysControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_5: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_SysControl"} Av_SysControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_5: int)
{
  var {:pointer} DeviceExtension: int;
  var {:scalar} ntStatus: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_266: int;

  anon0:
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc DeviceExtension;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L8;

  L8:
    call {:si_unique_call 2} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_1);
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc vslice_dummy_var_266;
    call {:si_unique_call 3} Tmp_5 := sdv_IoCallDriver#1(vslice_dummy_var_266, Irp_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc ntStatus;
    call {:si_unique_call 4} sdv_IoCompleteRequest(0, 0);
    Tmp_5 := ntStatus;
    goto L1;

  anon7_Then:
    goto L8;
}



procedure {:origName "Av_IoControl"} Av_IoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_7: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_IoControl"} Av_IoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_7: int)
{
  var {:scalar} Tmp_8: int;
  var {:pointer} NotifyData: int;
  var {:pointer} Tmp_9: int;
  var {:pointer} Tmp_10: int;
  var {:pointer} IrpStack: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} PdoExtension: int;
  var {:pointer} CommonExtension: int;
  var {:scalar} IoControlCode: int;
  var {:pointer} Request: int;
  var {:scalar} Irql: int;
  var {:pointer} BusExtension: int;
  var {:pointer} AvAdapterData: int;
  var {:scalar} Tmp_11: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_267: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    ntStatus_1 := 0;
    call {:si_unique_call 5} IrpStack := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc CommonExtension;
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto L16;

  L16:
    ntStatus_1 := -1073741810;
    goto L18;

  L18:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 6} sdv_IoCompleteRequest(0, 0);
    Tmp_7 := ntStatus_1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon231_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L25;

  L25:
    BusExtension := CommonExtension;
    goto L26;

  L26:
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    havoc IoControlCode;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} IoControlCode != 2228765;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} IoControlCode != 2228805;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} IoControlCode != 2228820;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} IoControlCode == 3080195;
    call {:si_unique_call 7} ntStatus_1 := corral_nondet();
    goto L39;

  L39:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} ntStatus_1 == 259;
    Tmp_7 := ntStatus_1;
    goto L1;

  anon211_Then:
    assume {:partition} ntStatus_1 != 259;
    goto L18;

  anon221_Then:
    assume {:partition} IoControlCode != 3080195;
    ntStatus_1 := -1073741808;
    goto L39;

  anon222_Then:
    assume {:partition} IoControlCode == 2228820;
    ntStatus_1 := -1073741637;
    goto L18;

  anon223_Then:
    assume {:partition} IoControlCode == 2228805;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    havoc Request;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    ntStatus_1 := -1073741811;
    goto L18;

  anon234_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    ntStatus_1 := -1073741637;
    goto L18;

  anon212_Then:
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto L55;

  L55:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} CommonExtension == BusExtension;
    ntStatus_1 := -1073741811;
    goto L18;

  anon214_Then:
    assume {:partition} CommonExtension != BusExtension;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    havoc Tmp_11;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume Tmp_11 != 23;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume Tmp_11 != 22;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume Tmp_11 != 21;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume Tmp_11 != 20;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume Tmp_11 != 19;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume Tmp_11 != 18;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume Tmp_11 != 17;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume Tmp_11 != 16;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume Tmp_11 != 15;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume Tmp_11 != 14;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume Tmp_11 != 13;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume Tmp_11 != 12;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume Tmp_11 != 11;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume Tmp_11 != 10;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume Tmp_11 != 9;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume Tmp_11 != 8;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume Tmp_11 != 7;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume Tmp_11 != 6;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume Tmp_11 != 5;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume Tmp_11 != 4;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume Tmp_11 != 3;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume Tmp_11 != 2;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume Tmp_11 != 1;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume false;
    return;

  anon272_Then:
    assume Tmp_11 == 0;
    assume {:IndirectCall} true;
    call {:si_unique_call 8} ntStatus_1 := AvCmp_GetUnitCapabilities(CommonExtension, Irp_2, Request);
    goto L39;

  anon270_Then:
    assume Tmp_11 == 1;
    assume {:IndirectCall} true;
    call {:si_unique_call 9} ntStatus_1 := AvCmp_SetUnitCapabilities(CommonExtension, Irp_2, Request);
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon271_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon269_Then:
    assume Tmp_11 == 2;
    assume {:IndirectCall} true;
    call {:si_unique_call 10} ntStatus_1 := AvCmp_SetPlug(CommonExtension, Irp_2, Request);
    goto L39;

  anon268_Then:
    assume Tmp_11 == 3;
    assume {:IndirectCall} true;
    call {:si_unique_call 11} ntStatus_1 := AvCmp_GetPlugHandle(CommonExtension, Irp_2, Request);
    goto L39;

  anon266_Then:
    assume Tmp_11 == 4;
    assume {:IndirectCall} true;
    call {:si_unique_call 12} ntStatus_1 := AvCmp_GetPlugState(CommonExtension, Irp_2, Request);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon264_Then:
    assume Tmp_11 == 5;
    assume {:IndirectCall} true;
    call {:si_unique_call 13} ntStatus_1 := AvCmp_Connect(CommonExtension, Irp_2, Request);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon262_Then:
    assume Tmp_11 == 6;
    assume {:IndirectCall} true;
    call {:si_unique_call 14} ntStatus_1 := AvCmp_Disconnect(CommonExtension, Irp_2, Request);
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon263_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    assume Tmp_11 == 7;
    assume {:IndirectCall} true;
    call {:si_unique_call 15} ntStatus_1 := AvCip_AttachFrames(CommonExtension, Irp_2, Request);
    goto L39;

  anon260_Then:
    assume Tmp_11 == 8;
    assume {:IndirectCall} true;
    call {:si_unique_call 16} ntStatus_1 := AvCip_CancelFrames(CommonExtension, Irp_2, Request);
    goto L39;

  anon258_Then:
    assume Tmp_11 == 9;
    assume {:IndirectCall} true;
    call {:si_unique_call 17} ntStatus_1 := AvCip_Talk(CommonExtension, Irp_2, Request);
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon259_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon256_Then:
    assume Tmp_11 == 10;
    assume {:IndirectCall} true;
    call {:si_unique_call 18} ntStatus_1 := AvCip_Listen(CommonExtension, Irp_2, Request);
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon257_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon254_Then:
    assume Tmp_11 == 11;
    assume {:IndirectCall} true;
    call {:si_unique_call 19} ntStatus_1 := AvCip_Stop(CommonExtension, Irp_2, Request);
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon255_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon252_Then:
    assume Tmp_11 == 12;
    assume {:IndirectCall} true;
    call {:si_unique_call 20} ntStatus_1 := AvFcp_SendFcpRequest(CommonExtension, Irp_2, Request);
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon253_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon250_Then:
    assume Tmp_11 == 13;
    assume {:IndirectCall} true;
    call {:si_unique_call 21} ntStatus_1 := AvFcp_GetFcpResponse(CommonExtension, Irp_2, Request);
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon251_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon248_Then:
    assume Tmp_11 == 14;
    assume {:IndirectCall} true;
    call {:si_unique_call 22} ntStatus_1 := AvFcp_GetFcpRequest(CommonExtension, Irp_2, Request);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon246_Then:
    assume Tmp_11 == 15;
    assume {:IndirectCall} true;
    call {:si_unique_call 23} ntStatus_1 := AvFcp_SendFcpResponse(CommonExtension, Irp_2, Request);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon245_Then:
    assume Tmp_11 == 16;
    assume {:IndirectCall} true;
    call {:si_unique_call 24} ntStatus_1 := AvFcp_SetFcpNotify(CommonExtension, Irp_2, Request);
    goto L39;

  anon244_Then:
    assume Tmp_11 == 17;
    assume {:IndirectCall} true;
    call {:si_unique_call 25} ntStatus_1 := AvCmp_CreatePlug(CommonExtension, Irp_2, Request);
    goto L39;

  anon243_Then:
    assume Tmp_11 == 18;
    assume {:IndirectCall} true;
    call {:si_unique_call 26} ntStatus_1 := AvCmp_DeletePlug(CommonExtension, Irp_2, Request);
    goto L39;

  anon242_Then:
    assume Tmp_11 == 19;
    assume {:IndirectCall} true;
    call {:si_unique_call 27} ntStatus_1 := Av1394_BusResetNotify(CommonExtension, Irp_2, Request);
    goto L39;

  anon240_Then:
    assume Tmp_11 == 20;
    assume {:IndirectCall} true;
    call {:si_unique_call 28} ntStatus_1 := Av1394_BusReset(CommonExtension, Irp_2, Request);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon238_Then:
    assume Tmp_11 == 21;
    assume {:IndirectCall} true;
    call {:si_unique_call 29} ntStatus_1 := Av1394_SetUnitDirectory(CommonExtension, Irp_2, Request);
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon239_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon237_Then:
    assume Tmp_11 == 22;
    assume {:IndirectCall} true;
    call {:si_unique_call 30} ntStatus_1 := AvCmp_MonitorPlugs(CommonExtension, Irp_2, Request);
    goto L39;

  anon236_Then:
    assume Tmp_11 == 23;
    goto L39;

  anon224_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto L70;

  L70:
    PdoExtension := CommonExtension;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    NotifyData := FcpNotifyData__PDO_DEVICE_EXTENSION(PdoExtension);
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    havoc AvAdapterData;
    call {:si_unique_call 31} Tmp_9 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    call {:si_unique_call 32} sdv_KeAcquireSpinLock(0, Tmp_9);
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    havoc Irql;
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L83;

  L83:
    call {:si_unique_call 33} sdv_KeReleaseSpinLock(0, Irql);
    goto L63;

  L63:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    havoc Tmp_8;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume Tmp_8 != 23;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume Tmp_8 != 22;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume Tmp_8 != 21;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume Tmp_8 != 20;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume Tmp_8 != 19;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume Tmp_8 != 18;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume Tmp_8 != 17;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume Tmp_8 != 16;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume Tmp_8 != 15;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume Tmp_8 != 14;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume Tmp_8 != 13;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume Tmp_8 != 12;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume Tmp_8 != 11;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume Tmp_8 != 10;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume Tmp_8 != 9;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume Tmp_8 != 8;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume Tmp_8 != 7;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume Tmp_8 != 6;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume Tmp_8 != 5;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume Tmp_8 != 4;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume Tmp_8 != 3;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume Tmp_8 != 2;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume Tmp_8 != 1;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume false;
    return;

  anon309_Then:
    assume Tmp_8 == 0;
    assume {:IndirectCall} true;
    call {:si_unique_call 34} ntStatus_1 := AvCmp_GetUnitCapabilities(BusExtension, Irp_2, Request);
    goto L39;

  anon307_Then:
    assume Tmp_8 == 1;
    assume {:IndirectCall} true;
    call {:si_unique_call 35} ntStatus_1 := AvCmp_SetUnitCapabilities(BusExtension, Irp_2, Request);
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon308_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon306_Then:
    assume Tmp_8 == 2;
    assume {:IndirectCall} true;
    call {:si_unique_call 36} ntStatus_1 := AvCmp_SetPlug(BusExtension, Irp_2, Request);
    goto L39;

  anon305_Then:
    assume Tmp_8 == 3;
    assume {:IndirectCall} true;
    call {:si_unique_call 37} ntStatus_1 := AvCmp_GetPlugHandle(BusExtension, Irp_2, Request);
    goto L39;

  anon303_Then:
    assume Tmp_8 == 4;
    assume {:IndirectCall} true;
    call {:si_unique_call 38} ntStatus_1 := AvCmp_GetPlugState(BusExtension, Irp_2, Request);
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon304_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon301_Then:
    assume Tmp_8 == 5;
    assume {:IndirectCall} true;
    call {:si_unique_call 39} ntStatus_1 := AvCmp_Connect(BusExtension, Irp_2, Request);
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon302_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon299_Then:
    assume Tmp_8 == 6;
    assume {:IndirectCall} true;
    call {:si_unique_call 40} ntStatus_1 := AvCmp_Disconnect(BusExtension, Irp_2, Request);
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon300_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon298_Then:
    assume Tmp_8 == 7;
    assume {:IndirectCall} true;
    call {:si_unique_call 41} ntStatus_1 := AvCip_AttachFrames(BusExtension, Irp_2, Request);
    goto L39;

  anon297_Then:
    assume Tmp_8 == 8;
    assume {:IndirectCall} true;
    call {:si_unique_call 42} ntStatus_1 := AvCip_CancelFrames(BusExtension, Irp_2, Request);
    goto L39;

  anon295_Then:
    assume Tmp_8 == 9;
    assume {:IndirectCall} true;
    call {:si_unique_call 43} ntStatus_1 := AvCip_Talk(BusExtension, Irp_2, Request);
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon296_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon293_Then:
    assume Tmp_8 == 10;
    assume {:IndirectCall} true;
    call {:si_unique_call 44} ntStatus_1 := AvCip_Listen(BusExtension, Irp_2, Request);
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon294_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon291_Then:
    assume Tmp_8 == 11;
    assume {:IndirectCall} true;
    call {:si_unique_call 45} ntStatus_1 := AvCip_Stop(BusExtension, Irp_2, Request);
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon292_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon289_Then:
    assume Tmp_8 == 12;
    assume {:IndirectCall} true;
    call {:si_unique_call 46} ntStatus_1 := AvFcp_SendFcpRequest(BusExtension, Irp_2, Request);
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon290_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon287_Then:
    assume Tmp_8 == 13;
    assume {:IndirectCall} true;
    call {:si_unique_call 47} ntStatus_1 := AvFcp_GetFcpResponse(BusExtension, Irp_2, Request);
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon288_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon285_Then:
    assume Tmp_8 == 14;
    assume {:IndirectCall} true;
    call {:si_unique_call 48} ntStatus_1 := AvFcp_GetFcpRequest(BusExtension, Irp_2, Request);
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon286_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon283_Then:
    assume Tmp_8 == 15;
    assume {:IndirectCall} true;
    call {:si_unique_call 49} ntStatus_1 := AvFcp_SendFcpResponse(BusExtension, Irp_2, Request);
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon284_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon282_Then:
    assume Tmp_8 == 16;
    assume {:IndirectCall} true;
    call {:si_unique_call 50} ntStatus_1 := AvFcp_SetFcpNotify(BusExtension, Irp_2, Request);
    goto L39;

  anon281_Then:
    assume Tmp_8 == 17;
    assume {:IndirectCall} true;
    call {:si_unique_call 51} ntStatus_1 := AvCmp_CreatePlug(BusExtension, Irp_2, Request);
    goto L39;

  anon280_Then:
    assume Tmp_8 == 18;
    assume {:IndirectCall} true;
    call {:si_unique_call 52} ntStatus_1 := AvCmp_DeletePlug(BusExtension, Irp_2, Request);
    goto L39;

  anon279_Then:
    assume Tmp_8 == 19;
    assume {:IndirectCall} true;
    call {:si_unique_call 53} ntStatus_1 := Av1394_BusResetNotify(BusExtension, Irp_2, Request);
    goto L39;

  anon277_Then:
    assume Tmp_8 == 20;
    assume {:IndirectCall} true;
    call {:si_unique_call 54} ntStatus_1 := Av1394_BusReset(BusExtension, Irp_2, Request);
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon278_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon275_Then:
    assume Tmp_8 == 21;
    assume {:IndirectCall} true;
    call {:si_unique_call 55} ntStatus_1 := Av1394_SetUnitDirectory(BusExtension, Irp_2, Request);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon274_Then:
    assume Tmp_8 == 22;
    assume {:IndirectCall} true;
    call {:si_unique_call 56} ntStatus_1 := AvCmp_MonitorPlugs(BusExtension, Irp_2, Request);
    goto L39;

  anon273_Then:
    assume Tmp_8 == 23;
    goto L39;

  anon218_Then:
    call {:si_unique_call 57} ExInitializeNPagedLookasideList(0, 0, 0, 0, 528, -260872878, 0);
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    assume {:nonnull} AvAdapterData != 0;
    assume AvAdapterData > 0;
    assume {:nonnull} NotifyData != 0;
    assume NotifyData > 0;
    call {:si_unique_call 58} vslice_dummy_var_2 := sdv_InsertTailList(FcpList__AV_ADAPTER_DATA(AvAdapterData), Entry__FCP_NOTIFY_DATA(NotifyData));
    goto L83;

  anon216_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto L70;

  anon217_Then:
    goto L63;

  anon215_Then:
    goto L63;

  anon213_Then:
    goto L63;

  anon225_Then:
    goto L55;

  anon226_Then:
    goto L55;

  anon227_Then:
    goto L55;

  anon228_Then:
    goto L55;

  anon229_Then:
    goto L55;

  anon230_Then:
    goto L55;

  anon235_Then:
    goto L55;

  anon210_Then:
    ntStatus_1 := -1073741637;
    goto L39;

  anon232_Then:
    assume {:partition} IoControlCode == 2228765;
    call {:si_unique_call 59} sdv_IoSkipCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    havoc vslice_dummy_var_267;
    call {:si_unique_call 60} ntStatus_1 := sdv_IoCallDriver#1(vslice_dummy_var_267, Irp_2);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    Tmp_7 := ntStatus_1;
    goto L1;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon208_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto L101;

  L101:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    havoc Tmp_10;
    assume {:nonnull} Tmp_10 != 0;
    assume Tmp_10 > 0;
    havoc BusExtension;
    goto L26;

  anon219_Then:
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    ntStatus_1 := -1073741811;
    goto L18;

  anon220_Then:
    goto L101;

  anon209_Then:
    goto L25;

  anon207_Then:
    goto L16;
}



procedure {:origName "Av_Create"} Av_Create(actual_DeviceObject_3: int, actual_Irp_3: int) returns (Tmp_12: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_12 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_Create"} Av_Create(actual_DeviceObject_3: int, actual_Irp_3: int) returns (Tmp_12: int)
{
  var {:pointer} Irp_3: int;

  anon0:
    Irp_3 := actual_Irp_3;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    call {:si_unique_call 61} sdv_IoCompleteRequest(0, 0);
    Tmp_12 := 0;
    return;
}



procedure {:origName "Av_Close"} Av_Close(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_16: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_16 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_Close"} Av_Close(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_16: int)
{
  var {:pointer} Irp_5: int;

  anon0:
    Irp_5 := actual_Irp_5;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 62} sdv_IoCompleteRequest(0, 0);
    Tmp_16 := 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_21: int, actual_sdv_22: int) returns (Tmp_22: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_21: int, actual_sdv_22: int) returns (Tmp_22: int)
{
  var {:scalar} sdv_23: int;

  anon0:
    call {:si_unique_call 63} Tmp_22 := __HAVOC_malloc(4);
    call {:si_unique_call 64} sdv_23 := __HAVOC_malloc(4);
    call {:si_unique_call 65} SLIC_sdv_IoReleaseRemoveLock_entry(strConst__li2bpl2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    assume {:nonnull} sdv_23 != 0;
    assume sdv_23 > 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_36: int, actual_sdv_37: int) returns (Tmp_32: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_36: int, actual_sdv_37: int) returns (Tmp_32: int)
{
  var {:scalar} sdv_38: int;

  anon0:
    call {:si_unique_call 66} Tmp_32 := __HAVOC_malloc(4);
    call {:si_unique_call 67} sdv_38 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_32 != 0;
    assume Tmp_32 > 0;
    assume {:nonnull} sdv_38 != 0;
    assume sdv_38 > 0;
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 68} vslice_dummy_var_3 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_4: int;

  anon0:
    call {:si_unique_call 69} vslice_dummy_var_4 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_42: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_42: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 70} SLIC_sdv_containing_record_entry(strConst__li2bpl2);
    record := Address;
    Tmp_42 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_5: int;

  anon0:
    call {:si_unique_call 71} vslice_dummy_var_5 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 72} vslice_dummy_var_6 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_48: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_48 == -1073741824 || Tmp_48 == -1073741771 || Tmp_48 == -1073741670 || Tmp_48 == -1073741823 || Tmp_48 == 0 || Tmp_48 == -1073741808 || Tmp_48 == -1073741810;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_48: int)
{
  var {:scalar} status: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status := 0;
    call {:si_unique_call 73} sdv_stub_add_begin();
    call {:si_unique_call 74} status := Av_PnpAddDevice(p1, p2);
    call {:si_unique_call 75} sdv_stub_add_end();
    Tmp_48 := status;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_50: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_50 == 1 || Tmp_50 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_50: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 76} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_50 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_50 := 0;
    goto L1;
}



procedure {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int)
{
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 77} vslice_dummy_var_7 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_54: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_54: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_54 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_54 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_54 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 78} vslice_dummy_var_8 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag_1: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag_1: int)
{
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 79} vslice_dummy_var_9 := __HAVOC_malloc(4);
    call {:si_unique_call 80} SLIC_sdv_IoReleaseRemoveLockAndWait_entry(strConst__li2bpl2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_6: int) returns (Tmp_60: int);
  free ensures {:va_keep} Tmp_60 == -1073741824 || Tmp_60 == -1073741771 || Tmp_60 == -1073741670 || Tmp_60 == -1073741823 || Tmp_60 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_6: int) returns (Tmp_60: int)
{
  var {:pointer} DeviceObject_6: int;

  anon0:
    DeviceObject_6 := actual_DeviceObject_6;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    Tmp_60 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    Tmp_60 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    Tmp_60 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    Tmp_60 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    goto L21;

  L21:
    Tmp_60 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var {:scalar} WorkerRoutine: int;
  var {:scalar} QueueType: int;
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 81} vslice_dummy_var_10 := __HAVOC_malloc(4);
    WorkerRoutine := actual_WorkerRoutine;
    QueueType := actual_QueueType;
    call {:si_unique_call 82} sdv_RunIoQueueWorkItems(0, WorkerRoutine, QueueType, 0);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 83} vslice_dummy_var_11 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_68: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_68: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_68 := r;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 84} vslice_dummy_var_12 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int)
{
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 85} vslice_dummy_var_13 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems(actual_IoWorkItem_1: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems(actual_IoWorkItem_1: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int)
{
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 86} vslice_dummy_var_14 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_2: int, actual_Environment: int) returns (Tmp_76: int);
  free ensures {:va_keep} Tmp_76 == 0 || Tmp_76 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_2: int, actual_Environment: int) returns (Tmp_76: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_76 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_76 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 87} vslice_dummy_var_15 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 88} vslice_dummy_var_16 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, t, yogi_error, LockDepth;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1 || t == old(t);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} Tmp_83: int;
  var {:scalar} status_1: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 89} vslice_dummy_var_17 := __HAVOC_malloc(4);
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    call {:si_unique_call 90} status_1 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_1 < 0;
    Tmp_83 := 0;
    goto L44;

  L44:
    assume Tmp_83 != 0;
    call {:si_unique_call 91} sdv_stub_driver_init();
    call {:si_unique_call 92} vslice_dummy_var_18 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} 0 <= status_1;
    Tmp_83 := 1;
    goto L44;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_7: int, actual_Irp_6: int) returns (Tmp_85: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_7: int, actual_Irp_6: int) returns (Tmp_85: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_2: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;

  anon0:
    call {:si_unique_call 93} completion := __HAVOC_malloc(4);
    Irp_6 := actual_Irp_6;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_2 := 259;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L29;

  L29:
    Tmp_85 := status_2;
    goto LM2;

  LM2:
    return;

  anon56_Then:
    havoc vslice_dummy_var_268;
    call {:si_unique_call 94} vslice_dummy_var_19 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, vslice_dummy_var_268, completion);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L23;

  anon54_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L19;

  anon69_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc vslice_dummy_var_269;
    call {:si_unique_call 95} vslice_dummy_var_22 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, vslice_dummy_var_269, completion);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L29;

  anon67_Then:
    goto L29;

  anon66_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L62;

  anon65_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L58;

  anon70_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc vslice_dummy_var_270;
    call {:si_unique_call 96} vslice_dummy_var_20 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, vslice_dummy_var_270, completion);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L29;

  anon59_Then:
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L36;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L32;

  anon53_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc vslice_dummy_var_271;
    call {:si_unique_call 97} vslice_dummy_var_21 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_6, vslice_dummy_var_271, completion);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L29;

  anon63_Then:
    goto L29;

  anon62_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L49;

  anon61_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L45;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_8: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_8: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 98} State := __HAVOC_malloc(8);
    call {:si_unique_call 99} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 100} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_88: int);
  free ensures {:va_keep} Tmp_88 == 1 || Tmp_88 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_88: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_88 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_88 := 0;
    goto L1;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_3: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_3: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_3: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 101} vslice_dummy_var_23 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_3 := actual_Context_3;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 102} irpSp := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpSp)] := CompletionRoutine;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_24: int;

  anon0:
    call {:si_unique_call 103} vslice_dummy_var_24 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 104} vslice_dummy_var_25 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_96: int);
  free ensures {:va_keep} Tmp_96 == 1 || Tmp_96 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_96: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_96 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_96 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_7: int)
{
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 105} vslice_dummy_var_26 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_100: int);
  free ensures {:va_keep} Tmp_100 == 258 || Tmp_100 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_100: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_100 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_100 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_100 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_9: int)
{
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 106} vslice_dummy_var_27 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_2: int, actual_Increment: int, actual_Wait: int) returns (Tmp_104: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_2: int, actual_Increment: int, actual_Wait: int) returns (Tmp_104: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event_2: int;

  anon0:
    Event_2 := actual_Event_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    havoc OldState;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    Tmp_104 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_108: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_108: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc Tmp_108;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_1: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_1: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_1: int)
{
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 107} vslice_dummy_var_28 := __HAVOC_malloc(4);
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_112: int, dup_assertVar: bool);
  modifies alloc, LockDepth, t, yogi_error, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} t == 1 || t == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_112: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_113: int;
  var {:scalar} Tmp_115: int;
  var boogieTmp: int;
  var IID_IKsDeviceFunctions__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var IID_IUnknown__Loc: int;
  var IID_IDrmAudioStream__Loc: int;
  var GUID_61883_CLASS__Loc: int;
  var IID_IKsFastClock__Loc: int;
  var IID_IKsControl__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var GUID_SLEEPBUTTON_ACTION_FLAGS__Loc: int;
  var GUID_VIDEO_ANNOYANCE_TIMEOUT__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_3__Loc: int;
  var GUID_PROCESSOR_THROTTLE_MAXIMUM__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_MAX_CORES__Loc: int;
  var GUID_POWERBUTTON_ACTION__Loc: int;
  var GUID_LIDOPEN_POWERSTATE__Loc: int;
  var GUID_PROCESSOR_PARKING_CORE_OVERRIDE__Loc: int;
  var GUID_PROCESSOR_PARKING_PERF_STATE__Loc: int;
  var GUID_PCIEXPRESS_SETTINGS_SUBGROUP__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_POLICY__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_TIME__Loc: int;
  var GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE__Loc: int;
  var GUID_VIDEO_ADAPTIVE_POWERDOWN__Loc: int;
  var GUID_USERINTERFACEBUTTON_ACTION__Loc: int;
  var GUID_PROCESSOR_THROTTLE_POLICY__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD__Loc: int;
  var GUID_PCIEXPRESS_ASPM_POLICY__Loc: int;
  var GUID_MIN_POWER_SAVINGS__Loc: int;
  var GUID_ALLOW_STANDBY_STATES__Loc: int;
  var GUID_BATTERY_PERCENTAGE_REMAINING__Loc: int;
  var GUID_STANDBY_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD__Loc: int;
  var GUID_DEVICE_IDLE_POLICY__Loc: int;
  var GUID_ALLOW_RTC_WAKE__Loc: int;
  var GUID_PROCESSOR_PERFSTATE_POLICY__Loc: int;
  var GUID_PROCESSOR_PERF_BOOST_POLICY__Loc: int;
  var GUID_LIDCLOSE_ACTION__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_2__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_2__Loc: int;
  var GUID_APPLAUNCH_BUTTON__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_1__Loc: int;
  var GUID_PROCESSOR_ALLOW_THROTTLING__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD__Loc: int;
  var GUID_MONITOR_POWER_ON__Loc: int;
  var GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD__Loc: int;
  var GUID_DISK_BURST_IGNORE_THRESHOLD__Loc: int;
  var GUID_SLEEP_SUBGROUP__Loc: int;
  var GUID_SLEEPBUTTON_ACTION__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_1__Loc: int;
  var GUID_PROCESSOR_IDLE_DISABLE__Loc: int;
  var GUID_POWERBUTTON_ACTION_FLAGS__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_POLICY__Loc: int;
  var GUID_VIDEO_SUBGROUP__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_TIME__Loc: int;
  var GUID_DISK_POWERDOWN_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD__Loc: int;
  var GUID_MAX_POWER_SAVINGS__Loc: int;
  var GUID_TYPICAL_POWER_SAVINGS__Loc: int;
  var GUID_CONSOLE_DISPLAY_STATE__Loc: int;
  var GUID_HIBERNATE_FASTS4_POLICY__Loc: int;
  var GUID_BATTERY_SUBGROUP__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_0__Loc: int;
  var GUID_ACDC_POWER_SOURCE__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR__Loc: int;
  var GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS__Loc: int;
  var GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME__Loc: int;
  var GUID_PROCESSOR_SETTINGS_SUBGROUP__Loc: int;
  var GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS__Loc: int;
  var GUID_IDLE_BACKGROUND_TASK__Loc: int;
  var GUID_BATTERY_DISCHARGE_FLAGS_2__Loc: int;
  var GUID_PROCESSOR_THROTTLE_MINIMUM__Loc: int;
  var GUID_ALLOW_AWAYMODE__Loc: int;
  var NO_SUBGROUP_GUID__Loc: int;
  var GUID_DISK_SUBGROUP__Loc: int;
  var GUID_DISK_ADAPTIVE_POWERDOWN__Loc: int;
  var GUID_HIBERNATE_TIMEOUT__Loc: int;
  var GUID_SYSTEM_BUTTON_SUBGROUP__Loc: int;
  var GUID_POWERSCHEME_PERSONALITY__Loc: int;
  var GUID_SYSTEM_COOLING_POLICY__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_1__Loc: int;
  var ALL_POWERSCHEMES_GUID__Loc: int;
  var GUID_LIDSWITCH_STATE_CHANGE__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_3__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY__Loc: int;
  var GUID_SESSION_DISPLAY_STATE__Loc: int;
  var GUID_ALLOW_SYSTEM_REQUIRED__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_0__Loc: int;
  var GUID_ENABLE_SWITCH_FORCED_SHUTDOWN__Loc: int;
  var GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS__Loc: int;
  var GUID_BATTERY_DISCHARGE_ACTION_3__Loc: int;
  var GUID_PROCESSOR_IDLE_ALLOW_SCALING__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING__Loc: int;
  var GUID_LIDCLOSE_ACTION_FLAGS__Loc: int;
  var GUID_PROCESSOR_PERF_DECREASE_THRESHOLD__Loc: int;
  var GUID_LOCK_CONSOLE_ON_WAKE__Loc: int;
  var GUID_VIDEO_POWERDOWN_TIMEOUT__Loc: int;
  var GUID_BATTERY_DISCHARGE_LEVEL_0__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_MIN_CORES__Loc: int;
  var GUID_VIDEO_DIM_TIMEOUT__Loc: int;
  var GUID_PROCESSOR_IDLESTATE_POLICY__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD__Loc: int;
  var GUID_ACTIVE_POWERSCHEME__Loc: int;
  var GUID_SYSTEM_AWAYMODE__Loc: int;
  var GUID_PROCESSOR_IDLE_TIME_CHECK__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR__Loc: int;
  var GUID_ALLOW_DISPLAY_REQUIRED__Loc: int;
  var GUID_UNATTEND_SLEEP_TIMEOUT__Loc: int;
  var GUID_CRITICAL_POWER_TRANSITION__Loc: int;
  var GUID_PROCESSOR_PERF_INCREASE_THRESHOLD__Loc: int;
  var GUID_BACKGROUND_TASK_NOTIFICATION__Loc: int;
  var GUID_SLEEP_IDLE_THRESHOLD__Loc: int;
  var GUID_PROCESSOR_PERF_TIME_CHECK__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY__Loc: int;
  var GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING__Loc: int;
  var GUID_PROCESSOR_PERF_HISTORY__Loc: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 108} IID_IKsDeviceFunctions__Loc := __HAVOC_malloc_or_null(16);
    assume IID_IKsDeviceFunctions__Loc == IID_IKsDeviceFunctions;
    assume IID_IKsDeviceFunctions != 0;
    call {:si_unique_call 109} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 110} IID_IUnknown__Loc := __HAVOC_malloc_or_null(16);
    assume IID_IUnknown__Loc == IID_IUnknown;
    assume IID_IUnknown != 0;
    call {:si_unique_call 111} IID_IDrmAudioStream__Loc := __HAVOC_malloc_or_null(16);
    assume IID_IDrmAudioStream__Loc == IID_IDrmAudioStream;
    assume IID_IDrmAudioStream != 0;
    call {:si_unique_call 112} GUID_61883_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_61883_CLASS__Loc == GUID_61883_CLASS;
    assume GUID_61883_CLASS != 0;
    call {:si_unique_call 113} IID_IKsFastClock__Loc := __HAVOC_malloc_or_null(16);
    assume IID_IKsFastClock__Loc == IID_IKsFastClock;
    assume IID_IKsFastClock != 0;
    call {:si_unique_call 114} IID_IKsControl__Loc := __HAVOC_malloc_or_null(16);
    assume IID_IKsControl__Loc == IID_IKsControl;
    assume IID_IKsControl != 0;
    call {:si_unique_call 115} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 116} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 117} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 118} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 119} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 120} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 121} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 122} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 123} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 124} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 125} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 126} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 127} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 128} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 129} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 130} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 131} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 132} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 133} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 134} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 135} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 136} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 137} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 138} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 139} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 140} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 141} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 142} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 143} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 144} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 145} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 146} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 147} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 148} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 149} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 150} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 151} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 152} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 153} GUID_SLEEPBUTTON_ACTION_FLAGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEPBUTTON_ACTION_FLAGS__Loc == GUID_SLEEPBUTTON_ACTION_FLAGS;
    assume GUID_SLEEPBUTTON_ACTION_FLAGS != 0;
    call {:si_unique_call 154} GUID_VIDEO_ANNOYANCE_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ANNOYANCE_TIMEOUT__Loc == GUID_VIDEO_ANNOYANCE_TIMEOUT;
    assume GUID_VIDEO_ANNOYANCE_TIMEOUT != 0;
    call {:si_unique_call 155} GUID_BATTERY_DISCHARGE_FLAGS_3__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_3__Loc == GUID_BATTERY_DISCHARGE_FLAGS_3;
    assume GUID_BATTERY_DISCHARGE_FLAGS_3 != 0;
    call {:si_unique_call 156} GUID_PROCESSOR_THROTTLE_MAXIMUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_THROTTLE_MAXIMUM__Loc == GUID_PROCESSOR_THROTTLE_MAXIMUM;
    assume GUID_PROCESSOR_THROTTLE_MAXIMUM != 0;
    call {:si_unique_call 157} GUID_PROCESSOR_CORE_PARKING_MAX_CORES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_MAX_CORES__Loc == GUID_PROCESSOR_CORE_PARKING_MAX_CORES;
    assume GUID_PROCESSOR_CORE_PARKING_MAX_CORES != 0;
    call {:si_unique_call 158} GUID_POWERBUTTON_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWERBUTTON_ACTION__Loc == GUID_POWERBUTTON_ACTION;
    assume GUID_POWERBUTTON_ACTION != 0;
    call {:si_unique_call 159} GUID_LIDOPEN_POWERSTATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDOPEN_POWERSTATE__Loc == GUID_LIDOPEN_POWERSTATE;
    assume GUID_LIDOPEN_POWERSTATE != 0;
    call {:si_unique_call 160} GUID_PROCESSOR_PARKING_CORE_OVERRIDE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PARKING_CORE_OVERRIDE__Loc == GUID_PROCESSOR_PARKING_CORE_OVERRIDE;
    assume GUID_PROCESSOR_PARKING_CORE_OVERRIDE != 0;
    call {:si_unique_call 161} GUID_PROCESSOR_PARKING_PERF_STATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PARKING_PERF_STATE__Loc == GUID_PROCESSOR_PARKING_PERF_STATE;
    assume GUID_PROCESSOR_PARKING_PERF_STATE != 0;
    call {:si_unique_call 162} GUID_PCIEXPRESS_SETTINGS_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCIEXPRESS_SETTINGS_SUBGROUP__Loc == GUID_PCIEXPRESS_SETTINGS_SUBGROUP;
    assume GUID_PCIEXPRESS_SETTINGS_SUBGROUP != 0;
    call {:si_unique_call 163} GUID_PROCESSOR_PERF_DECREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_POLICY__Loc == GUID_PROCESSOR_PERF_DECREASE_POLICY;
    assume GUID_PROCESSOR_PERF_DECREASE_POLICY != 0;
    call {:si_unique_call 164} GUID_PROCESSOR_PERF_INCREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_TIME__Loc == GUID_PROCESSOR_PERF_INCREASE_TIME;
    assume GUID_PROCESSOR_PERF_INCREASE_TIME != 0;
    call {:si_unique_call 165} GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE__Loc == GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE;
    assume GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE != 0;
    call {:si_unique_call 166} GUID_VIDEO_ADAPTIVE_POWERDOWN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ADAPTIVE_POWERDOWN__Loc == GUID_VIDEO_ADAPTIVE_POWERDOWN;
    assume GUID_VIDEO_ADAPTIVE_POWERDOWN != 0;
    call {:si_unique_call 167} GUID_USERINTERFACEBUTTON_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_USERINTERFACEBUTTON_ACTION__Loc == GUID_USERINTERFACEBUTTON_ACTION;
    assume GUID_USERINTERFACEBUTTON_ACTION != 0;
    call {:si_unique_call 168} GUID_PROCESSOR_THROTTLE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_THROTTLE_POLICY__Loc == GUID_PROCESSOR_THROTTLE_POLICY;
    assume GUID_PROCESSOR_THROTTLE_POLICY != 0;
    call {:si_unique_call 169} GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD != 0;
    call {:si_unique_call 170} GUID_PCIEXPRESS_ASPM_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCIEXPRESS_ASPM_POLICY__Loc == GUID_PCIEXPRESS_ASPM_POLICY;
    assume GUID_PCIEXPRESS_ASPM_POLICY != 0;
    call {:si_unique_call 171} GUID_MIN_POWER_SAVINGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MIN_POWER_SAVINGS__Loc == GUID_MIN_POWER_SAVINGS;
    assume GUID_MIN_POWER_SAVINGS != 0;
    call {:si_unique_call 172} GUID_ALLOW_STANDBY_STATES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_STANDBY_STATES__Loc == GUID_ALLOW_STANDBY_STATES;
    assume GUID_ALLOW_STANDBY_STATES != 0;
    call {:si_unique_call 173} GUID_BATTERY_PERCENTAGE_REMAINING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_PERCENTAGE_REMAINING__Loc == GUID_BATTERY_PERCENTAGE_REMAINING;
    assume GUID_BATTERY_PERCENTAGE_REMAINING != 0;
    call {:si_unique_call 174} GUID_STANDBY_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_STANDBY_TIMEOUT__Loc == GUID_STANDBY_TIMEOUT;
    assume GUID_STANDBY_TIMEOUT != 0;
    call {:si_unique_call 175} GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD__Loc == GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD;
    assume GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD != 0;
    call {:si_unique_call 176} GUID_DEVICE_IDLE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_IDLE_POLICY__Loc == GUID_DEVICE_IDLE_POLICY;
    assume GUID_DEVICE_IDLE_POLICY != 0;
    call {:si_unique_call 177} GUID_ALLOW_RTC_WAKE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_RTC_WAKE__Loc == GUID_ALLOW_RTC_WAKE;
    assume GUID_ALLOW_RTC_WAKE != 0;
    call {:si_unique_call 178} GUID_PROCESSOR_PERFSTATE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERFSTATE_POLICY__Loc == GUID_PROCESSOR_PERFSTATE_POLICY;
    assume GUID_PROCESSOR_PERFSTATE_POLICY != 0;
    call {:si_unique_call 179} GUID_PROCESSOR_PERF_BOOST_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_BOOST_POLICY__Loc == GUID_PROCESSOR_PERF_BOOST_POLICY;
    assume GUID_PROCESSOR_PERF_BOOST_POLICY != 0;
    call {:si_unique_call 180} GUID_LIDCLOSE_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDCLOSE_ACTION__Loc == GUID_LIDCLOSE_ACTION;
    assume GUID_LIDCLOSE_ACTION != 0;
    call {:si_unique_call 181} GUID_BATTERY_DISCHARGE_ACTION_2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_2__Loc == GUID_BATTERY_DISCHARGE_ACTION_2;
    assume GUID_BATTERY_DISCHARGE_ACTION_2 != 0;
    call {:si_unique_call 182} GUID_BATTERY_DISCHARGE_LEVEL_2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_2__Loc == GUID_BATTERY_DISCHARGE_LEVEL_2;
    assume GUID_BATTERY_DISCHARGE_LEVEL_2 != 0;
    call {:si_unique_call 183} GUID_APPLAUNCH_BUTTON__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_APPLAUNCH_BUTTON__Loc == GUID_APPLAUNCH_BUTTON;
    assume GUID_APPLAUNCH_BUTTON != 0;
    call {:si_unique_call 184} GUID_BATTERY_DISCHARGE_FLAGS_1__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_1__Loc == GUID_BATTERY_DISCHARGE_FLAGS_1;
    assume GUID_BATTERY_DISCHARGE_FLAGS_1 != 0;
    call {:si_unique_call 185} GUID_PROCESSOR_ALLOW_THROTTLING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_ALLOW_THROTTLING__Loc == GUID_PROCESSOR_ALLOW_THROTTLING;
    assume GUID_PROCESSOR_ALLOW_THROTTLING != 0;
    call {:si_unique_call 186} GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD != 0;
    call {:si_unique_call 187} GUID_MONITOR_POWER_ON__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MONITOR_POWER_ON__Loc == GUID_MONITOR_POWER_ON;
    assume GUID_MONITOR_POWER_ON != 0;
    call {:si_unique_call 188} GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS__Loc == GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS;
    assume GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS != 0;
    call {:si_unique_call 189} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD != 0;
    call {:si_unique_call 190} GUID_DISK_BURST_IGNORE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_BURST_IGNORE_THRESHOLD__Loc == GUID_DISK_BURST_IGNORE_THRESHOLD;
    assume GUID_DISK_BURST_IGNORE_THRESHOLD != 0;
    call {:si_unique_call 191} GUID_SLEEP_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEP_SUBGROUP__Loc == GUID_SLEEP_SUBGROUP;
    assume GUID_SLEEP_SUBGROUP != 0;
    call {:si_unique_call 192} GUID_SLEEPBUTTON_ACTION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEPBUTTON_ACTION__Loc == GUID_SLEEPBUTTON_ACTION;
    assume GUID_SLEEPBUTTON_ACTION != 0;
    call {:si_unique_call 193} GUID_BATTERY_DISCHARGE_ACTION_1__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_1__Loc == GUID_BATTERY_DISCHARGE_ACTION_1;
    assume GUID_BATTERY_DISCHARGE_ACTION_1 != 0;
    call {:si_unique_call 194} GUID_PROCESSOR_IDLE_DISABLE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_DISABLE__Loc == GUID_PROCESSOR_IDLE_DISABLE;
    assume GUID_PROCESSOR_IDLE_DISABLE != 0;
    call {:si_unique_call 195} GUID_POWERBUTTON_ACTION_FLAGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWERBUTTON_ACTION_FLAGS__Loc == GUID_POWERBUTTON_ACTION_FLAGS;
    assume GUID_POWERBUTTON_ACTION_FLAGS != 0;
    call {:si_unique_call 196} GUID_PROCESSOR_PERF_INCREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_POLICY__Loc == GUID_PROCESSOR_PERF_INCREASE_POLICY;
    assume GUID_PROCESSOR_PERF_INCREASE_POLICY != 0;
    call {:si_unique_call 197} GUID_VIDEO_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_SUBGROUP__Loc == GUID_VIDEO_SUBGROUP;
    assume GUID_VIDEO_SUBGROUP != 0;
    call {:si_unique_call 198} GUID_PROCESSOR_PERF_DECREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_TIME__Loc == GUID_PROCESSOR_PERF_DECREASE_TIME;
    assume GUID_PROCESSOR_PERF_DECREASE_TIME != 0;
    call {:si_unique_call 199} GUID_DISK_POWERDOWN_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_POWERDOWN_TIMEOUT__Loc == GUID_DISK_POWERDOWN_TIMEOUT;
    assume GUID_DISK_POWERDOWN_TIMEOUT != 0;
    call {:si_unique_call 200} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD != 0;
    call {:si_unique_call 201} GUID_MAX_POWER_SAVINGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MAX_POWER_SAVINGS__Loc == GUID_MAX_POWER_SAVINGS;
    assume GUID_MAX_POWER_SAVINGS != 0;
    call {:si_unique_call 202} GUID_TYPICAL_POWER_SAVINGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TYPICAL_POWER_SAVINGS__Loc == GUID_TYPICAL_POWER_SAVINGS;
    assume GUID_TYPICAL_POWER_SAVINGS != 0;
    call {:si_unique_call 203} GUID_CONSOLE_DISPLAY_STATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_CONSOLE_DISPLAY_STATE__Loc == GUID_CONSOLE_DISPLAY_STATE;
    assume GUID_CONSOLE_DISPLAY_STATE != 0;
    call {:si_unique_call 204} GUID_HIBERNATE_FASTS4_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HIBERNATE_FASTS4_POLICY__Loc == GUID_HIBERNATE_FASTS4_POLICY;
    assume GUID_HIBERNATE_FASTS4_POLICY != 0;
    call {:si_unique_call 205} GUID_BATTERY_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_SUBGROUP__Loc == GUID_BATTERY_SUBGROUP;
    assume GUID_BATTERY_SUBGROUP != 0;
    call {:si_unique_call 206} GUID_BATTERY_DISCHARGE_FLAGS_0__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_0__Loc == GUID_BATTERY_DISCHARGE_FLAGS_0;
    assume GUID_BATTERY_DISCHARGE_FLAGS_0 != 0;
    call {:si_unique_call 207} GUID_ACDC_POWER_SOURCE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACDC_POWER_SOURCE__Loc == GUID_ACDC_POWER_SOURCE;
    assume GUID_ACDC_POWER_SOURCE != 0;
    call {:si_unique_call 208} GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR__Loc == GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR;
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR != 0;
    call {:si_unique_call 209} GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS__Loc == GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS;
    assume GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS != 0;
    call {:si_unique_call 210} GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD__Loc == GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD;
    assume GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD != 0;
    call {:si_unique_call 211} GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME__Loc == GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME;
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME != 0;
    call {:si_unique_call 212} GUID_PROCESSOR_SETTINGS_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_SETTINGS_SUBGROUP__Loc == GUID_PROCESSOR_SETTINGS_SUBGROUP;
    assume GUID_PROCESSOR_SETTINGS_SUBGROUP != 0;
    call {:si_unique_call 213} GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS__Loc == GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS;
    assume GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS != 0;
    call {:si_unique_call 214} GUID_IDLE_BACKGROUND_TASK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_IDLE_BACKGROUND_TASK__Loc == GUID_IDLE_BACKGROUND_TASK;
    assume GUID_IDLE_BACKGROUND_TASK != 0;
    call {:si_unique_call 215} GUID_BATTERY_DISCHARGE_FLAGS_2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_FLAGS_2__Loc == GUID_BATTERY_DISCHARGE_FLAGS_2;
    assume GUID_BATTERY_DISCHARGE_FLAGS_2 != 0;
    call {:si_unique_call 216} GUID_PROCESSOR_THROTTLE_MINIMUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_THROTTLE_MINIMUM__Loc == GUID_PROCESSOR_THROTTLE_MINIMUM;
    assume GUID_PROCESSOR_THROTTLE_MINIMUM != 0;
    call {:si_unique_call 217} GUID_ALLOW_AWAYMODE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_AWAYMODE__Loc == GUID_ALLOW_AWAYMODE;
    assume GUID_ALLOW_AWAYMODE != 0;
    call {:si_unique_call 218} NO_SUBGROUP_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume NO_SUBGROUP_GUID__Loc == NO_SUBGROUP_GUID;
    assume NO_SUBGROUP_GUID != 0;
    call {:si_unique_call 219} GUID_DISK_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_SUBGROUP__Loc == GUID_DISK_SUBGROUP;
    assume GUID_DISK_SUBGROUP != 0;
    call {:si_unique_call 220} GUID_DISK_ADAPTIVE_POWERDOWN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DISK_ADAPTIVE_POWERDOWN__Loc == GUID_DISK_ADAPTIVE_POWERDOWN;
    assume GUID_DISK_ADAPTIVE_POWERDOWN != 0;
    call {:si_unique_call 221} GUID_HIBERNATE_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HIBERNATE_TIMEOUT__Loc == GUID_HIBERNATE_TIMEOUT;
    assume GUID_HIBERNATE_TIMEOUT != 0;
    call {:si_unique_call 222} GUID_SYSTEM_BUTTON_SUBGROUP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SYSTEM_BUTTON_SUBGROUP__Loc == GUID_SYSTEM_BUTTON_SUBGROUP;
    assume GUID_SYSTEM_BUTTON_SUBGROUP != 0;
    call {:si_unique_call 223} GUID_POWERSCHEME_PERSONALITY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWERSCHEME_PERSONALITY__Loc == GUID_POWERSCHEME_PERSONALITY;
    assume GUID_POWERSCHEME_PERSONALITY != 0;
    call {:si_unique_call 224} GUID_SYSTEM_COOLING_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SYSTEM_COOLING_POLICY__Loc == GUID_SYSTEM_COOLING_POLICY;
    assume GUID_SYSTEM_COOLING_POLICY != 0;
    call {:si_unique_call 225} GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME__Loc == GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME;
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME != 0;
    call {:si_unique_call 226} GUID_BATTERY_DISCHARGE_LEVEL_1__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_1__Loc == GUID_BATTERY_DISCHARGE_LEVEL_1;
    assume GUID_BATTERY_DISCHARGE_LEVEL_1 != 0;
    call {:si_unique_call 227} ALL_POWERSCHEMES_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume ALL_POWERSCHEMES_GUID__Loc == ALL_POWERSCHEMES_GUID;
    assume ALL_POWERSCHEMES_GUID != 0;
    call {:si_unique_call 228} GUID_LIDSWITCH_STATE_CHANGE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDSWITCH_STATE_CHANGE__Loc == GUID_LIDSWITCH_STATE_CHANGE;
    assume GUID_LIDSWITCH_STATE_CHANGE != 0;
    call {:si_unique_call 229} GUID_BATTERY_DISCHARGE_LEVEL_3__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_3__Loc == GUID_BATTERY_DISCHARGE_LEVEL_3;
    assume GUID_BATTERY_DISCHARGE_LEVEL_3 != 0;
    call {:si_unique_call 230} GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY__Loc == GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY;
    assume GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY != 0;
    call {:si_unique_call 231} GUID_SESSION_DISPLAY_STATE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SESSION_DISPLAY_STATE__Loc == GUID_SESSION_DISPLAY_STATE;
    assume GUID_SESSION_DISPLAY_STATE != 0;
    call {:si_unique_call 232} GUID_ALLOW_SYSTEM_REQUIRED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_SYSTEM_REQUIRED__Loc == GUID_ALLOW_SYSTEM_REQUIRED;
    assume GUID_ALLOW_SYSTEM_REQUIRED != 0;
    call {:si_unique_call 233} GUID_BATTERY_DISCHARGE_ACTION_0__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_0__Loc == GUID_BATTERY_DISCHARGE_ACTION_0;
    assume GUID_BATTERY_DISCHARGE_ACTION_0 != 0;
    call {:si_unique_call 234} GUID_ENABLE_SWITCH_FORCED_SHUTDOWN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ENABLE_SWITCH_FORCED_SHUTDOWN__Loc == GUID_ENABLE_SWITCH_FORCED_SHUTDOWN;
    assume GUID_ENABLE_SWITCH_FORCED_SHUTDOWN != 0;
    call {:si_unique_call 235} GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS__Loc == GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS;
    assume GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS != 0;
    call {:si_unique_call 236} GUID_BATTERY_DISCHARGE_ACTION_3__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_ACTION_3__Loc == GUID_BATTERY_DISCHARGE_ACTION_3;
    assume GUID_BATTERY_DISCHARGE_ACTION_3 != 0;
    call {:si_unique_call 237} GUID_PROCESSOR_IDLE_ALLOW_SCALING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_ALLOW_SCALING__Loc == GUID_PROCESSOR_IDLE_ALLOW_SCALING;
    assume GUID_PROCESSOR_IDLE_ALLOW_SCALING != 0;
    call {:si_unique_call 238} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING != 0;
    call {:si_unique_call 239} GUID_LIDCLOSE_ACTION_FLAGS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LIDCLOSE_ACTION_FLAGS__Loc == GUID_LIDCLOSE_ACTION_FLAGS;
    assume GUID_LIDCLOSE_ACTION_FLAGS != 0;
    call {:si_unique_call 240} GUID_PROCESSOR_PERF_DECREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_DECREASE_THRESHOLD__Loc == GUID_PROCESSOR_PERF_DECREASE_THRESHOLD;
    assume GUID_PROCESSOR_PERF_DECREASE_THRESHOLD != 0;
    call {:si_unique_call 241} GUID_LOCK_CONSOLE_ON_WAKE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LOCK_CONSOLE_ON_WAKE__Loc == GUID_LOCK_CONSOLE_ON_WAKE;
    assume GUID_LOCK_CONSOLE_ON_WAKE != 0;
    call {:si_unique_call 242} GUID_VIDEO_POWERDOWN_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_POWERDOWN_TIMEOUT__Loc == GUID_VIDEO_POWERDOWN_TIMEOUT;
    assume GUID_VIDEO_POWERDOWN_TIMEOUT != 0;
    call {:si_unique_call 243} GUID_BATTERY_DISCHARGE_LEVEL_0__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BATTERY_DISCHARGE_LEVEL_0__Loc == GUID_BATTERY_DISCHARGE_LEVEL_0;
    assume GUID_BATTERY_DISCHARGE_LEVEL_0 != 0;
    call {:si_unique_call 244} GUID_PROCESSOR_CORE_PARKING_MIN_CORES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_MIN_CORES__Loc == GUID_PROCESSOR_CORE_PARKING_MIN_CORES;
    assume GUID_PROCESSOR_CORE_PARKING_MIN_CORES != 0;
    call {:si_unique_call 245} GUID_VIDEO_DIM_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIDEO_DIM_TIMEOUT__Loc == GUID_VIDEO_DIM_TIMEOUT;
    assume GUID_VIDEO_DIM_TIMEOUT != 0;
    call {:si_unique_call 246} GUID_PROCESSOR_IDLESTATE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLESTATE_POLICY__Loc == GUID_PROCESSOR_IDLESTATE_POLICY;
    assume GUID_PROCESSOR_IDLESTATE_POLICY != 0;
    call {:si_unique_call 247} GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD__Loc == GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD;
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD != 0;
    call {:si_unique_call 248} GUID_ACTIVE_POWERSCHEME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACTIVE_POWERSCHEME__Loc == GUID_ACTIVE_POWERSCHEME;
    assume GUID_ACTIVE_POWERSCHEME != 0;
    call {:si_unique_call 249} GUID_SYSTEM_AWAYMODE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SYSTEM_AWAYMODE__Loc == GUID_SYSTEM_AWAYMODE;
    assume GUID_SYSTEM_AWAYMODE != 0;
    call {:si_unique_call 250} GUID_PROCESSOR_IDLE_TIME_CHECK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_IDLE_TIME_CHECK__Loc == GUID_PROCESSOR_IDLE_TIME_CHECK;
    assume GUID_PROCESSOR_IDLE_TIME_CHECK != 0;
    call {:si_unique_call 251} GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR__Loc == GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR;
    assume GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR != 0;
    call {:si_unique_call 252} GUID_ALLOW_DISPLAY_REQUIRED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ALLOW_DISPLAY_REQUIRED__Loc == GUID_ALLOW_DISPLAY_REQUIRED;
    assume GUID_ALLOW_DISPLAY_REQUIRED != 0;
    call {:si_unique_call 253} GUID_UNATTEND_SLEEP_TIMEOUT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_UNATTEND_SLEEP_TIMEOUT__Loc == GUID_UNATTEND_SLEEP_TIMEOUT;
    assume GUID_UNATTEND_SLEEP_TIMEOUT != 0;
    call {:si_unique_call 254} GUID_CRITICAL_POWER_TRANSITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_CRITICAL_POWER_TRANSITION__Loc == GUID_CRITICAL_POWER_TRANSITION;
    assume GUID_CRITICAL_POWER_TRANSITION != 0;
    call {:si_unique_call 255} GUID_PROCESSOR_PERF_INCREASE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_INCREASE_THRESHOLD__Loc == GUID_PROCESSOR_PERF_INCREASE_THRESHOLD;
    assume GUID_PROCESSOR_PERF_INCREASE_THRESHOLD != 0;
    call {:si_unique_call 256} GUID_BACKGROUND_TASK_NOTIFICATION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BACKGROUND_TASK_NOTIFICATION__Loc == GUID_BACKGROUND_TASK_NOTIFICATION;
    assume GUID_BACKGROUND_TASK_NOTIFICATION != 0;
    call {:si_unique_call 257} GUID_SLEEP_IDLE_THRESHOLD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_SLEEP_IDLE_THRESHOLD__Loc == GUID_SLEEP_IDLE_THRESHOLD;
    assume GUID_SLEEP_IDLE_THRESHOLD != 0;
    call {:si_unique_call 258} GUID_PROCESSOR_PERF_TIME_CHECK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_TIME_CHECK__Loc == GUID_PROCESSOR_PERF_TIME_CHECK;
    assume GUID_PROCESSOR_PERF_TIME_CHECK != 0;
    call {:si_unique_call 259} GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY__Loc == GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY;
    assume GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY != 0;
    call {:si_unique_call 260} GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING__Loc == GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING;
    assume GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING != 0;
    call {:si_unique_call 261} GUID_PROCESSOR_PERF_HISTORY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PERF_HISTORY__Loc == GUID_PROCESSOR_PERF_HISTORY;
    assume GUID_PROCESSOR_PERF_HISTORY != 0;
    call {:si_unique_call 262} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 263} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 264} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 265} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 266} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 267} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 268} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 269} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 270} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 271} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 272} vslice_dummy_var_293 := __HAVOC_malloc(4);
    call {:si_unique_call 273} vslice_dummy_var_294 := __HAVOC_malloc(4);
    call {:si_unique_call 274} vslice_dummy_var_295 := __HAVOC_malloc(4);
    call {:si_unique_call 275} vslice_dummy_var_296 := __HAVOC_malloc(4);
    call {:si_unique_call 276} vslice_dummy_var_297 := __HAVOC_malloc(4);
    call {:si_unique_call 277} vslice_dummy_var_272 := __HAVOC_malloc(96);
    call {:si_unique_call 278} vslice_dummy_var_273 := __HAVOC_malloc(96);
    call {:si_unique_call 279} vslice_dummy_var_298 := __HAVOC_malloc(4);
    call {:si_unique_call 280} vslice_dummy_var_299 := __HAVOC_malloc(4);
    call {:si_unique_call 281} vslice_dummy_var_300 := __HAVOC_malloc(4);
    call {:si_unique_call 282} vslice_dummy_var_301 := __HAVOC_malloc(4);
    call {:si_unique_call 283} vslice_dummy_var_302 := __HAVOC_malloc(4);
    call {:si_unique_call 284} vslice_dummy_var_303 := __HAVOC_malloc(4);
    call {:si_unique_call 285} vslice_dummy_var_304 := __HAVOC_malloc(4);
    call {:si_unique_call 286} vslice_dummy_var_305 := __HAVOC_malloc(4);
    call {:si_unique_call 287} vslice_dummy_var_306 := __HAVOC_malloc(4);
    call {:si_unique_call 288} vslice_dummy_var_307 := __HAVOC_malloc(4);
    call {:si_unique_call 289} vslice_dummy_var_308 := __HAVOC_malloc(4);
    call {:si_unique_call 290} vslice_dummy_var_309 := __HAVOC_malloc(4);
    call {:si_unique_call 291} vslice_dummy_var_310 := __HAVOC_malloc(4);
    call {:si_unique_call 292} vslice_dummy_var_311 := __HAVOC_malloc(4);
    call {:si_unique_call 293} vslice_dummy_var_312 := __HAVOC_malloc(4);
    call {:si_unique_call 294} vslice_dummy_var_313 := __HAVOC_malloc(4);
    call {:si_unique_call 295} vslice_dummy_var_314 := __HAVOC_malloc(4);
    call {:si_unique_call 296} vslice_dummy_var_315 := __HAVOC_malloc(4);
    call {:si_unique_call 297} vslice_dummy_var_316 := __HAVOC_malloc(4);
    call {:si_unique_call 298} vslice_dummy_var_317 := __HAVOC_malloc(4);
    call {:si_unique_call 299} vslice_dummy_var_318 := __HAVOC_malloc(4);
    call {:si_unique_call 300} vslice_dummy_var_319 := __HAVOC_malloc(4);
    call {:si_unique_call 301} vslice_dummy_var_320 := __HAVOC_malloc(4);
    call {:si_unique_call 302} vslice_dummy_var_321 := __HAVOC_malloc(4);
    call {:si_unique_call 303} vslice_dummy_var_322 := __HAVOC_malloc(4);
    call {:si_unique_call 304} vslice_dummy_var_323 := __HAVOC_malloc(4);
    call {:si_unique_call 305} vslice_dummy_var_324 := __HAVOC_malloc(4);
    call {:si_unique_call 306} vslice_dummy_var_325 := __HAVOC_malloc(4);
    call {:si_unique_call 307} vslice_dummy_var_326 := __HAVOC_malloc(4);
    call {:si_unique_call 308} vslice_dummy_var_327 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 309} corralExtraInit();
    call {:si_unique_call 310} corralExplainErrorInit();
    call {:si_unique_call 311} _sdv_init9();
    call {:si_unique_call 312} _sdv_init1();
    call {:si_unique_call 313} _sdv_init4();
    call {:si_unique_call 314} _sdv_init5();
    call {:si_unique_call 315} _sdv_init3();
    call {:si_unique_call 316} _sdv_init6();
    call {:si_unique_call 317} _sdv_init7();
    call {:si_unique_call 318} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_113 := 0;
    goto L32;

  L32:
    assume Tmp_113 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_115 := 0;
    goto L36;

  L36:
    assume Tmp_115 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 319} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L30;

  L30:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L30;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_115 := 1;
    goto L36;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_113 := 1;
    goto L32;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 320} vslice_dummy_var_29 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 321} vslice_dummy_var_30 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_8: int) returns (Tmp_120: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_8: int) returns (Tmp_120: int)
{
  var {:pointer} sdv_65: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 322} sdv_65 := __HAVOC_malloc(1);
    Tmp_120 := sdv_65;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_120 := 0;
    goto L1;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_122: int);
  free ensures {:va_keep} Tmp_122 == 0 || Tmp_122 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_122: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_122 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_122 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_1: int)
{
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 323} vslice_dummy_var_31 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl: int)
{
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 324} vslice_dummy_var_32 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_128: int);
  free ensures {:va_keep} Tmp_128 == 0 || Tmp_128 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_128: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_128 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_128 := -1073741823;
    goto L1;
}



procedure {:origName "_sdv_init7"} {:osmodel} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init7"} {:osmodel} _sdv_init7()
{
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 325} vslice_dummy_var_33 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_isr_routine == li2bplFunctionConstant527;
    assume sdv_ke_dpc == li2bplFunctionConstant529;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant532;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ZwCreateKey"} {:osmodel} ZwCreateKey(actual_KeyHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int, actual_TitleIndex: int, actual_Class: int, actual_CreateOptions: int, actual_Disposition: int) returns (Tmp_132: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_132 == 0 || Tmp_132 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwCreateKey"} {:osmodel} ZwCreateKey(actual_KeyHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int, actual_TitleIndex: int, actual_Class: int, actual_CreateOptions: int, actual_Disposition: int) returns (Tmp_132: int)
{
  var {:pointer} sdv_68: int;
  var {:pointer} KeyHandle: int;

  anon0:
    KeyHandle := actual_KeyHandle;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 326} sdv_68 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle != 0;
    assume KeyHandle > 0;
    Tmp_132 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle != 0;
    assume KeyHandle > 0;
    Tmp_132 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int)
{
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 327} vslice_dummy_var_34 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInterlockedInsertTailList"} {:osmodel} sdv_ExInterlockedInsertTailList(actual_ListHead: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_136: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInterlockedInsertTailList"} {:osmodel} sdv_ExInterlockedInsertTailList(actual_ListHead: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_136: int)
{
  var {:pointer} sdv_70: int;
  var {:pointer} p_2: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 328} sdv_70 := __HAVOC_malloc(1);
    p_2 := sdv_70;
    Tmp_136 := p_2;
    goto L1;

  L1:
    return;

  anon3_Then:
    p_2 := 0;
    Tmp_136 := p_2;
    goto L1;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_10: int) returns (Tmp_138: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, t, yogi_error, LockDepth;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1 || t == old(t);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_10: int) returns (Tmp_138: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_139: int;
  var {:scalar} Tmp_140: int;
  var {:scalar} sdv_79: int;
  var {:scalar} status_3: int;
  var {:pointer} po: int;
  var {:pointer} pirp_10: int;

  anon0:
    po := actual_po;
    pirp_10 := actual_pirp_10;
    status_3 := 0;
    minor := sdv_79;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 329} sdv_SetStatus(pirp_10);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(ps)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation)] := 0;
    call {:si_unique_call 330} sdv_stub_dispatch_begin();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_139 := 0;
    goto L215;

  L215:
    assume Tmp_139 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 331} SdvExit#1();
    goto L66;

  L66:
    call {:si_unique_call 332} status_3 := Av_Pnp(po, pirp_10);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  L75:
    call {:si_unique_call 333} sdv_stub_dispatch_end(status_3, 0);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    Tmp_138 := status_3;
    goto LM2;

  LM2:
    return;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L66;

  anon57_Then:
    Tmp_139 := 1;
    goto L215;

  anon55_Then:
    goto L61;

  anon77_Then:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_140 := 0;
    goto L221;

  L221:
    assume Tmp_140 != 0;
    goto L60;

  anon54_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_140 := 1;
    goto L221;

  anon58_Then:
    call {:si_unique_call 334} status_3 := sdv_DoNothing();
    goto L75;

  anon59_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 335} status_3 := Av_SysControl(po, pirp_10);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 336} sdv_SetPowerIrpMinorFunction(pirp_10);
    call {:si_unique_call 337} status_3 := Av_Power(po, pirp_10);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 338} status_3 := sdv_DoNothing();
    goto L75;

  anon62_Then:
    call {:si_unique_call 339} status_3 := sdv_DoNothing();
    goto L75;

  anon63_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 340} status_3 := sdv_DoNothing();
    goto L75;

  anon64_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 341} status_3 := Av_IoControl(po, pirp_10);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 342} status_3 := Av_IoControl(po, pirp_10);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    call {:si_unique_call 343} status_3 := sdv_DoNothing();
    goto L75;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 344} status_3 := sdv_DoNothing();
    goto L75;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 345} status_3 := sdv_DoNothing();
    goto L75;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 346} status_3 := sdv_DoNothing();
    goto L75;

  anon70_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 347} status_3 := sdv_DoNothing();
    goto L75;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 348} status_3 := sdv_DoNothing();
    goto L75;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 349} status_3 := Av_Close(po, pirp_10);
    goto L75;

  anon53_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 350} status_3 := Av_Create(po, pirp_10);
    goto L75;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 351} vslice_dummy_var_35 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_144: int);
  free ensures {:va_keep} Tmp_144 == -1073741823 || Tmp_144 == -1073741808 || Tmp_144 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_144: int)
{
  var {:scalar} Tmp_146: int;
  var {:pointer} SymbolicLinkName: int;

  anon0:
    SymbolicLinkName := actual_SymbolicLinkName;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_144 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_144 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName != 0;
    assume SymbolicLinkName > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_146 := 0;
    goto L22;

  L22:
    assume Tmp_146 != 0;
    Tmp_144 := 0;
    goto L1;

  anon8_Then:
    Tmp_146 := 1;
    goto L22;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 352} vslice_dummy_var_36 := __HAVOC_malloc(4);
    new := actual_new;
    return;
}



procedure {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_9: int, actual_Status_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_9: int, actual_Status_1: int)
{
  var {:pointer} Irp_9: int;
  var {:scalar} Status_1: int;
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 353} vslice_dummy_var_37 := __HAVOC_malloc(4);
    Irp_9 := actual_Irp_9;
    Status_1 := actual_Status_1;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 354} vslice_dummy_var_38 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int, actual_AllocateDestinationString: int) returns (Tmp_153: int);
  free ensures {:va_keep} Tmp_153 == 0 || Tmp_153 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int, actual_AllocateDestinationString: int) returns (Tmp_153: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_153 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_153 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_2: int)
{
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 355} vslice_dummy_var_39 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle_1: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_157: int);
  free ensures {:va_keep} Tmp_157 == -1073741811 || Tmp_157 == -1073741823 || Tmp_157 == 0 || Tmp_157 == 5 || Tmp_157 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle_1: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_157: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_92: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength := actual_ResultLength;
    L := sdv_92;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_157 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_157 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_157 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_3;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_157 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_157 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_3;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 356} vslice_dummy_var_40 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_163: int);
  modifies LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_163 == -1073741823 || Tmp_163 == -1073741738 || Tmp_163 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_2: int) returns (Tmp_163: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_163 := -1073741823;
    goto L1;

  L1:
    call {:si_unique_call 357} SLIC_sdv_IoAcquireRemoveLock_exit(0, Tmp_163);
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_163 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_163 := 0;
    goto L1;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 358} vslice_dummy_var_41 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 359} vslice_dummy_var_42 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_1: int) returns (Tmp_169: int);
  free ensures {:va_keep} Tmp_169 == 1 || Tmp_169 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_1: int) returns (Tmp_169: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_169 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_169 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize_1: int, actual_ChargeQuota_1: int) returns (Tmp_171: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize_1: int, actual_ChargeQuota_1: int) returns (Tmp_171: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 360} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpSp_1)] := 0;
    Tmp_171 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_171 := 0;
    goto L1;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_175: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_175: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_175 := p_4;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_3: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 361} vslice_dummy_var_43 := __HAVOC_malloc(4);
    Event_3 := actual_Event_3;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 362} vslice_dummy_var_44 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int)
{
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 363} vslice_dummy_var_45 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 364} vslice_dummy_var_46 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_189: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_3: int) returns (Tmp_189: int)
{
  var {:pointer} sdv_112: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 365} sdv_112 := __HAVOC_malloc(NumberOfBytes);
    Tmp_189 := sdv_112;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_189 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_13: int) returns (Tmp_191: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_13: int) returns (Tmp_191: int)
{
  var {:scalar} Tmp_192: int;
  var {:pointer} ioWorkItem: int;
  var {:pointer} sdv_114: int;

  anon0:
    call {:si_unique_call 366} sdv_114 := __HAVOC_malloc(1);
    ioWorkItem := sdv_114;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_192 := 0;
    goto L27;

  L27:
    assume Tmp_192 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_191 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_192 := 1;
    goto L27;

  anon6_Then:
    Tmp_191 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 367} vslice_dummy_var_47 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 368} vslice_dummy_var_48 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_14: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_198: int);
  free ensures {:va_keep} Tmp_198 == -1073741811 || Tmp_198 == -1073741808 || Tmp_198 == -1073741823 || Tmp_198 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_14: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_198: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_198 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_198 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_198 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_198 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_200: int);
  free ensures {:va_keep} Tmp_200 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_200: int)
{

  anon0:
    Tmp_200 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_202: int);
  free ensures {:va_keep} Tmp_202 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_202: int)
{

  anon0:
    Tmp_202 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_204: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_204: int)
{
  var {:pointer} sdv_117: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 369} sdv_117 := __HAVOC_malloc(1);
    Tmp_204 := sdv_117;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_204 := 0;
    goto L1;
}



procedure {:origName "SLIC_Av_Pnp_exit"} {:osmodel} SLIC_Av_Pnp_exit(actual_caller: int, actual_Av: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_Av_Pnp_exit"} {:osmodel} SLIC_Av_Pnp_exit(actual_caller: int, actual_Av: int)
{
  var {:pointer} Tmp_206: int;
  var {:pointer} caller: int;
  var {:pointer} Av: int;

  anon0:
    caller := actual_caller;
    Av := actual_Av;
    assume {:nonnull} Av != 0;
    assume Av > 0;
    havoc Tmp_206;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} 0 < LockDepth;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} t != 1;
    goto L6;

  L6:
    call {:si_unique_call 370} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} t == 1;
    call {:si_unique_call 371} SLIC_ABORT_9_0(caller, Av);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    goto L6;

  anon11_Then:
    assume {:partition} LockDepth <= 0;
    goto L6;
}



procedure {:origName "SLIC_ABORT_9_0"} SLIC_ABORT_9_0(actual_caller_1: int, actual_Av_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_9_0"} SLIC_ABORT_9_0(actual_caller_1: int, actual_Av_1: int)
{
  var {:pointer} caller_1: int;
  var {:pointer} Av_1: int;

  anon0:
    caller_1 := actual_caller_1;
    Av_1 := actual_Av_1;
    call {:si_unique_call 372} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_IoReleaseRemoveLockAndWait_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLockAndWait_entry(actual_caller_2: int);
  modifies LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoReleaseRemoveLockAndWait_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLockAndWait_entry(actual_caller_2: int)
{
  var {:pointer} caller_2: int;

  anon0:
    caller_2 := actual_caller_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} LockDepth == 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} t != 1;
    goto L5;

  L5:
    LockDepth := LockDepth - 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} t == 1;
    call {:si_unique_call 373} SLIC_ABORT_5_0(caller_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} LockDepth != 0;
    goto L5;
}



procedure {:origName "SLIC_sdv_IoAcquireRemoveLock_exit"} {:osmodel} SLIC_sdv_IoAcquireRemoveLock_exit(actual_caller_3: int, actual_sdv_118: int);
  modifies LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoAcquireRemoveLock_exit"} {:osmodel} SLIC_sdv_IoAcquireRemoveLock_exit(actual_caller_3: int, actual_sdv_118: int)
{
  var {:scalar} sdv_118: int;

  anon0:
    sdv_118 := actual_sdv_118;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} 0 < LockDepth;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_118 == 0;
    goto L7;

  L7:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_118 == 0;
    LockDepth := LockDepth + 1;
    goto L2;

  L2:
    return;

  anon7_Then:
    assume {:partition} sdv_118 != 0;
    goto L2;

  anon9_Then:
    assume {:partition} sdv_118 != 0;
    call {:si_unique_call 374} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  anon8_Then:
    assume {:partition} LockDepth <= 0;
    goto L7;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_4: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_4: int)
{

  anon0:
    call {:si_unique_call 375} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "SLIC_Av_Pnp_entry"} {:osmodel} SLIC_Av_Pnp_entry(actual_caller_5: int, actual_Av_2: int);
  modifies t;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} old(t) == 0 ==> t != 0;
  free ensures {:va_keep} t == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_Av_Pnp_entry"} {:osmodel} SLIC_Av_Pnp_entry(actual_caller_5: int, actual_Av_2: int)
{
  var {:pointer} Tmp_207: int;
  var {:pointer} Av_2: int;

  anon0:
    Av_2 := actual_Av_2;
    assume {:nonnull} Av_2 != 0;
    assume Av_2 > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 376} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    return;

  anon3_Then:
    t := 1;
    goto L2;
}



procedure {:origName "SLIC_ABORT_7_0"} SLIC_ABORT_7_0(actual_caller_6: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_7_0"} SLIC_ABORT_7_0(actual_caller_6: int)
{
  var {:pointer} caller_6: int;

  anon0:
    caller_6 := actual_caller_6;
    call {:si_unique_call 377} SLIC_ERROR_ROUTINE(strConst__li2bpl5);
    return;
}



procedure {:origName "_sdv_init9"} {:osmodel} _sdv_init9();
  modifies LockDepth, t, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 1 ==> t != 1;
  free ensures {:va_keep} old(t) == 0 ==> t != 1;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} t == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init9"} {:osmodel} _sdv_init9()
{

  anon0:
    LockDepth := 0;
    t := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_7: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_7: int)
{

  anon0:
    call {:si_unique_call 378} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_8: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_8: int)
{
  var {:pointer} caller_8: int;

  anon0:
    caller_8 := actual_caller_8;
    call {:si_unique_call 379} SLIC_ERROR_ROUTINE(strConst__li2bpl6);
    return;
}



procedure {:origName "SLIC_sdv_IoReleaseRemoveLock_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLock_entry(actual_caller_9: int);
  modifies LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoReleaseRemoveLock_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLock_entry(actual_caller_9: int)
{
  var {:pointer} caller_9: int;

  anon0:
    caller_9 := actual_caller_9;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} LockDepth == 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} t != 1;
    goto L5;

  L5:
    LockDepth := LockDepth - 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} t == 1;
    call {:si_unique_call 380} SLIC_ABORT_7_0(caller_9);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} LockDepth != 0;
    goto L5;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "Av_FDO_StartDevice"} Av_FDO_StartDevice(actual_BusExtension_1: int, actual_Irp_13: int) returns (Tmp_208: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_FDO_StartDevice"} Av_FDO_StartDevice(actual_BusExtension_1: int, actual_Irp_13: int) returns (Tmp_208: int)
{
  var {:scalar} sdv_124: int;
  var {:pointer} sdv_127: int;
  var {:scalar} ntStatus_2: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} Irql_1: int;
  var {:pointer} AvAdapterData_1: int;
  var {:scalar} AdapterId: int;
  var {:scalar} bFound: int;
  var {:pointer} AvOwner: int;
  var {:pointer} sdv_135: int;
  var {:pointer} BusExtension_1: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_274: int;

  anon0:
    call {:si_unique_call 381} AdapterId := __HAVOC_malloc(20);
    BusExtension_1 := actual_BusExtension_1;
    Irp_13 := actual_Irp_13;
    ntStatus_2 := 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    ntStatus_2 := 0;
    goto L12;

  L12:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto L16;

  L16:
    Tmp_208 := ntStatus_2;
    goto LM2;

  LM2:
    return;

  anon69_Then:
    assume {:partition} 0 > ntStatus_2;
    call {:si_unique_call 382} vslice_dummy_var_49 := AvCmp_DestroyPlugs(BusExtension_1);
    goto L16;

  anon87_Then:
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    havoc vslice_dummy_var_274;
    call {:si_unique_call 383} ntStatus_2 := Av_SubmitIrpSynch#1(vslice_dummy_var_274, Irp_13, 0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 384} ntStatus_2 := Av1394_GetGenerationCount#1(BusExtension_1);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 385} ntStatus_2 := Av1394_GetHostCapabilities(BusExtension_1);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 386} ntStatus_2 := Av1394_GetDeviceSpeed#1(BusExtension_1);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 387} ntStatus_2 := Av1394_GetNodeID#1(BusExtension_1);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 388} ntStatus_2 := Av1394_GetLocalHostUniqueId(BusExtension_1, AdapterId);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} yogi_error != 1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} ntStatus_2 >= 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto L59;

  L59:
    AvAdapterData_1 := 0;
    bFound := 0;
    call {:si_unique_call 389} Tmp_209 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    call {:si_unique_call 390} sdv_KeAcquireSpinLock(0, Tmp_209);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    havoc Irql_1;
    call {:si_unique_call 391} sdv_124 := sdv_IsListEmpty(0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} sdv_124 != 0;
    goto L71;

  L71:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} bFound != 0;
    goto L75;

  L75:
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 392} sdv_KeReleaseSpinLock(0, Irql_1);
    call {:si_unique_call 393} sdv_127 := ExAllocatePoolWithTag(0, 12, 943206710);
    AvOwner := sdv_127;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} AvOwner != 0;
    call {:si_unique_call 394} Tmp_209 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    call {:si_unique_call 395} sdv_KeAcquireSpinLock(0, Tmp_209);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    havoc Irql_1;
    assume {:nonnull} AvOwner != 0;
    assume AvOwner > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AvOwner != 0;
    assume AvOwner > 0;
    call {:si_unique_call 396} vslice_dummy_var_54 := sdv_InsertTailList(OwnerList__AV_ADAPTER_DATA(AvAdapterData_1), Entry__AV_DATA_OWNERS(AvOwner));
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto L95;

  L95:
    call {:si_unique_call 397} sdv_KeReleaseSpinLock(0, Irql_1);
    call {:si_unique_call 398} ntStatus_2 := Av1394_SetBusResetNotify(BusExtension_1, 1);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} yogi_error != 1;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} ntStatus_2 >= 0;
    call {:si_unique_call 399} ntStatus_2 := Av1394_GetDeviceSpeed#1(BusExtension_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} ntStatus_2 >= 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto L12;

  anon83_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon82_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon81_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon97_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon96_Then:
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 400} ntStatus_2 := Av_CreateAvAdapterData(BusExtension_1, AvAdapterData_1);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} ntStatus_2 < 0;
    call {:si_unique_call 401} vslice_dummy_var_50 := sdv_RemoveEntryList(0);
    call {:si_unique_call 402} sdv_ExFreePool(0);
    call {:si_unique_call 403} sdv_KeReleaseSpinLock(0, Irql_1);
    call {:si_unique_call 404} Tmp_209 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    call {:si_unique_call 405} sdv_KeAcquireSpinLock(0, Tmp_209);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    havoc Irql_1;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} bFound != 0;
    goto L134;

  L134:
    call {:si_unique_call 406} sdv_KeReleaseSpinLock(0, Irql_1);
    goto L12;

  anon100_Then:
    assume {:partition} bFound == 0;
    call {:si_unique_call 407} vslice_dummy_var_51 := sdv_RemoveEntryList(0);
    call {:si_unique_call 408} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto L134;

  anon84_Then:
    assume {:partition} 0 <= ntStatus_2;
    goto L95;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} AvOwner == 0;
    ntStatus_2 := -1073741670;
    call {:si_unique_call 409} Tmp_209 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    call {:si_unique_call 410} sdv_KeAcquireSpinLock(0, Tmp_209);
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    havoc Irql_1;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} bFound != 0;
    goto L150;

  L150:
    call {:si_unique_call 411} sdv_KeReleaseSpinLock(0, Irql_1);
    goto L12;

  anon101_Then:
    assume {:partition} bFound == 0;
    call {:si_unique_call 412} vslice_dummy_var_52 := sdv_RemoveEntryList(0);
    call {:si_unique_call 413} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto L150;

  anon80_Then:
    assume {:partition} bFound == 0;
    call {:si_unique_call 414} sdv_135 := ExAllocatePoolWithTag(0, 80, 943206710);
    AvAdapterData_1 := sdv_135;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} AvAdapterData_1 != 0;
    call {:si_unique_call 415} sdv_RtlZeroMemory(0, 80);
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 416} InitializeListHead(OwnerList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 417} InitializeListHead(FcpList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 418} InitializeListHead(CromList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    call {:si_unique_call 419} InitializeListHead(MonitorList__AV_ADAPTER_DATA(AvAdapterData_1));
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    assume {:nonnull} AvData != 0;
    assume AvData > 0;
    call {:si_unique_call 420} vslice_dummy_var_53 := sdv_InsertTailList(AvDataList__AV_DATA(AvData), Entry__AV_ADAPTER_DATA(AvAdapterData_1));
    goto L75;

  anon102_Then:
    assume {:partition} AvAdapterData_1 == 0;
    call {:si_unique_call 421} sdv_KeReleaseSpinLock(0, Irql_1);
    ntStatus_2 := -1073741670;
    goto L12;

  anon78_Then:
    assume {:partition} sdv_124 == 0;
    goto L70;

  L70:
    call {:si_unique_call 422} AvAdapterData_1 := Av_FDO_StartDevice_loop_L70(AvAdapterData_1, AdapterId);
    goto L70_last;

  L70_last:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} AvAdapterData_1 != 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    havoc AvAdapterData_1;
    goto L186;

  L186:
    assume {:nonnull} AdapterId != 0;
    assume AdapterId > 0;
    assume {:nonnull} AvAdapterData_1 != 0;
    assume AvAdapterData_1 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    bFound := 1;
    goto L71;

  anon85_Then:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L71;

  anon86_Then:
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    assume false;
    return;

  anon79_Then:
    assume {:partition} AvAdapterData_1 == 0;
    assume {:nonnull} AvData != 0;
    assume AvData > 0;
    havoc AvAdapterData_1;
    goto L186;

  anon76_Then:
    call {:si_unique_call 423} ntStatus_2 := AvCmp_CreatePlugs(BusExtension_1);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} yogi_error != 1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} ntStatus_2 >= 0;
    goto L59;

  anon77_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon94_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon93_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    assume {:partition} 0 > ntStatus_2;
    goto L12;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av_CreatePDO"} Av_CreatePDO(actual_BusExtension_2: int, actual_PdoData: int, actual_DeviceType_1: int, actual_ppPdoDeviceObject: int) returns (Tmp_210: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_210 == -1073741824 || Tmp_210 == -1073741771 || Tmp_210 == -1073741670 || Tmp_210 == -1073741823 || Tmp_210 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_CreatePDO"} Av_CreatePDO(actual_BusExtension_2: int, actual_PdoData: int, actual_DeviceType_1: int, actual_ppPdoDeviceObject: int) returns (Tmp_210: int)
{
  var {:pointer} Tmp_212: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} sdv_137: int;
  var {:pointer} PdoExtension_1: int;
  var {:scalar} ntStatus_3: int;
  var {:pointer} Tmp_216: int;
  var {:pointer} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:pointer} PdoDeviceObject: int;
  var {:pointer} Tmp_219: int;
  var {:pointer} BusExtension_2: int;
  var {:pointer} PdoData: int;
  var {:scalar} DeviceType_1: int;
  var {:pointer} ppPdoDeviceObject: int;
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 424} PdoDeviceObject := __HAVOC_malloc(4);
    BusExtension_2 := actual_BusExtension_2;
    PdoData := actual_PdoData;
    DeviceType_1 := actual_DeviceType_1;
    ppPdoDeviceObject := actual_ppPdoDeviceObject;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    call {:si_unique_call 425} ntStatus_3 := IoCreateDevice(0, 312, 0, 42, 128, 0, PdoDeviceObject);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_3 >= 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    havoc PdoExtension_1;
    call {:si_unique_call 426} sdv_RtlZeroMemory(0, 312);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L28;

  L28:
    call {:si_unique_call 427} Tmp_212 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    call {:si_unique_call 428} sdv_KeInitializeSpinLock(Tmp_212);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 429} Tmp_212 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    call {:si_unique_call 430} sdv_KeInitializeSpinLock(Tmp_212);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 431} InitializeListHead(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 432} InitializeListHead(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    call {:si_unique_call 433} Tmp_212 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    call {:si_unique_call 434} sdv_KeInitializeSpinLock(Tmp_212);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 435} InitializeListHead(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 436} InitializeListHead(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    call {:si_unique_call 437} InitializeListHead(PdoCromList__PDO_DEVICE_EXTENSION(PdoExtension_1));
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} PdoData != 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    havoc Tmp_213;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto L64;

  L64:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    havoc Tmp_216;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} ppPdoDeviceObject != 0;
    assume ppPdoDeviceObject > 0;
    Tmp_210 := ntStatus_3;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto L64;

  anon17_Then:
    goto L64;

  anon14_Then:
    assume {:partition} PdoData == 0;
    call {:si_unique_call 438} sdv_137 := ExAllocatePoolWithTag(0, 48, 943206710);
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_217;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_218;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} Tmp_218 != 0;
    assume Tmp_218 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_219;
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    call {:si_unique_call 439} vslice_dummy_var_55 := sdv_InsertTailList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_2), PdoList__PDO_DATA(Tmp_219));
    assume {:nonnull} BusExtension_2 != 0;
    assume BusExtension_2 > 0;
    goto L61;

  anon18_Then:
    ntStatus_3 := -1073741670;
    Tmp_210 := ntStatus_3;
    goto L1;

  anon15_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L28;

  anon13_Then:
    assume {:partition} 0 > ntStatus_3;
    Tmp_210 := ntStatus_3;
    goto L1;
}



procedure {:origName "Av_PnpAddDevice"} Av_PnpAddDevice(actual_DriverObject_1: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_220: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_220 == -1073741824 || Tmp_220 == -1073741771 || Tmp_220 == -1073741670 || Tmp_220 == -1073741823 || Tmp_220 == 0 || Tmp_220 == -1073741808 || Tmp_220 == -1073741810;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_PnpAddDevice"} Av_PnpAddDevice(actual_DriverObject_1: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_220: int)
{
  var {:pointer} NodeExtension: int;
  var {:pointer} Tmp_221: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} DeviceObject_15: int;
  var {:scalar} ntStatus_4: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} BusExtension_3: int;
  var {:pointer} DriverObject_1: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 440} DeviceObject_15 := __HAVOC_malloc(4);
    DriverObject_1 := actual_DriverObject_1;
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    ntStatus_4 := 0;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc NodeExtension;
    call {:si_unique_call 441} ntStatus_4 := IoCreateDevice(0, 312, 0, 42, 0, 0, DeviceObject_15);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_4 < 0;
    goto L71;

  L71:
    Tmp_220 := ntStatus_4;
    return;

  anon13_Then:
    assume {:partition} 0 <= ntStatus_4;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc BusExtension_3;
    call {:si_unique_call 442} sdv_RtlZeroMemory(0, 312);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 443} boogieTmp := IoAttachDeviceToDeviceStack(0, PhysicalDeviceObject_1);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} NodeExtension != 0;
    assume NodeExtension > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto L33;

  L33:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 444} ExInitializeNPagedLookasideList(0, 0, 0, 0, 344, 543322697, 0);
    call {:si_unique_call 445} Tmp_224 := __HAVOC_malloc(4);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    call {:si_unique_call 446} sdv_KeInitializeSpinLock(Tmp_224);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 447} InitializeListHead(ConnectList__BUS_DEVICE_EXTENSION(BusExtension_3));
    call {:si_unique_call 448} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 449} InitializeListHead(PdoList__BUS_DEVICE_EXTENSION(BusExtension_3));
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    goto L65;

  L65:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    call {:si_unique_call 450} ntStatus_4 := IoRegisterDeviceInterface(0, 0, 0, SymbolicLinkName__BUS_DEVICE_EXTENSION(BusExtension_3));
    goto L71;

  anon17_Then:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    goto L65;

  anon18_Then:
    goto L65;

  anon16_Then:
    assume {:nonnull} NodeExtension != 0;
    assume NodeExtension > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto L33;

  anon15_Then:
    goto L33;

  anon14_Then:
    call {:si_unique_call 451} IoDeleteDevice(0);
    ntStatus_4 := -1073741810;
    goto L71;
}



procedure {:origName "Av_GetDiagFlags"} Av_GetDiagFlags(actual_BusExtension_4: int) returns (Tmp_225: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_GetDiagFlags"} Av_GetDiagFlags(actual_BusExtension_4: int) returns (Tmp_225: int)
{
  var {:pointer} Tmp_227: int;
  var {:pointer} QueryTable_1: int;
  var {:pointer} sdv_145: int;
  var {:scalar} Irql_2: int;
  var {:pointer} AvAdapterData_2: int;
  var {:pointer} BusExtension_4: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;

  anon0:
    BusExtension_4 := actual_BusExtension_4;
    call {:si_unique_call 452} vslice_dummy_var_59 := __HAVOC_malloc(24);
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    havoc AvAdapterData_2;
    QueryTable_1 := 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    call {:si_unique_call 453} Tmp_227 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_227 != 0;
    assume Tmp_227 > 0;
    call {:si_unique_call 454} sdv_KeAcquireSpinLock(0, Tmp_227);
    assume {:nonnull} Tmp_227 != 0;
    assume Tmp_227 > 0;
    havoc Irql_2;
    assume {:nonnull} AvAdapterData_2 != 0;
    assume AvAdapterData_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} AvAdapterData_2 != 0;
    assume AvAdapterData_2 > 0;
    call {:si_unique_call 455} sdv_KeReleaseSpinLock(0, Irql_2);
    goto L8;

  L8:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L36;

  L36:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L42;

  L42:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L48;

  L48:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L54;

  L54:
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    call {:si_unique_call 456} sdv_145 := ExAllocatePoolWithTag(1, 56, 943206710);
    QueryTable_1 := sdv_145;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} QueryTable_1 != 0;
    call {:si_unique_call 457} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    call {:si_unique_call 458} vslice_dummy_var_60 := sdv_RtlQueryRegistryValues(1, 0, 0, 0, 0);
    call {:si_unique_call 459} sdv_ExFreePool(0);
    goto L63;

  L63:
    Tmp_225 := 0;
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:partition} QueryTable_1 == 0;
    goto L63;

  anon64_Then:
    goto L54;

  anon60_Then:
    goto L54;

  anon63_Then:
    goto L48;

  anon62_Then:
    goto L48;

  anon61_Then:
    goto L48;

  anon56_Then:
    goto L48;

  anon59_Then:
    goto L42;

  anon58_Then:
    goto L42;

  anon57_Then:
    goto L42;

  anon52_Then:
    goto L42;

  anon55_Then:
    goto L36;

  anon54_Then:
    goto L36;

  anon53_Then:
    goto L36;

  anon47_Then:
    goto L36;

  anon51_Then:
    assume {:nonnull} AvAdapterData_2 != 0;
    assume AvAdapterData_2 > 0;
    call {:si_unique_call 460} sdv_KeReleaseSpinLock(0, Irql_2);
    call {:si_unique_call 461} vslice_dummy_var_56 := Av1394_SetPacketSize(BusExtension_4, 1024);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 462} vslice_dummy_var_57 := Av1394_BusReset(BusExtension_4, 0, 0);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 463} vslice_dummy_var_58 := Av1394_GetGenerationCount#1(BusExtension_4);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    goto L8;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto L8;

  anon49_Then:
    goto L8;

  anon48_Then:
    goto L8;

  anon65_Then:
    goto L8;
}



procedure {:origName "Av_FDO_StopDevice"} Av_FDO_StopDevice(actual_BusExtension_5: int) returns (Tmp_228: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_FDO_StopDevice"} Av_FDO_StopDevice(actual_BusExtension_5: int) returns (Tmp_228: int)
{
  var {:pointer} MyOwner: int;
  var {:pointer} CurrCrom: int;
  var {:pointer} CmpData: int;
  var {:scalar} ntStatus_5: int;
  var {:pointer} Tmp_229: int;
  var {:pointer} FcpData: int;
  var {:scalar} sdv_155: int;
  var {:scalar} sdv_157: int;
  var {:pointer} NewOwner: int;
  var {:scalar} Irql_3: int;
  var {:pointer} AvAdapterData_3: int;
  var {:pointer} BusExtension_5: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;

  anon0:
    BusExtension_5 := actual_BusExtension_5;
    ntStatus_5 := 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 464} vslice_dummy_var_67 := Av1394_SetBusResetNotify(BusExtension_5, 0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    havoc vslice_dummy_var_275;
    call {:si_unique_call 465} vslice_dummy_var_61 := AvCmp_DestroyCmpData(BusExtension_5, vslice_dummy_var_275);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto L12;

  L12:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L23;

  L23:
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    havoc AvAdapterData_3;
    call {:si_unique_call 466} Tmp_229 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    call {:si_unique_call 467} sdv_KeAcquireSpinLock(0, Tmp_229);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc MyOwner;
    goto L28;

  L28:
    call {:si_unique_call 468} MyOwner := Av_FDO_StopDevice_loop_L28(MyOwner, BusExtension_5);
    goto L28_last;

  L28_last:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} MyOwner != 0;
    assume MyOwner > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} MyOwner != 0;
    assume MyOwner > 0;
    havoc MyOwner;
    goto anon48_Else_dummy;

  anon48_Else_dummy:
    assume false;
    return;

  anon48_Then:
    goto L29;

  L29:
    call {:si_unique_call 469} vslice_dummy_var_63 := sdv_RemoveEntryList(0);
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} MyOwner != 0;
    assume MyOwner > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 470} sdv_155 := sdv_IsListEmpty(0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_155 == 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc NewOwner;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} NewOwner != 0;
    assume NewOwner > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_276;
    havoc vslice_dummy_var_277;
    call {:si_unique_call 471} ntStatus_5 := AvCmp_CreateCMPAddressRange(vslice_dummy_var_276, vslice_dummy_var_277, 0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_278;
    havoc vslice_dummy_var_279;
    call {:si_unique_call 472} ntStatus_5 := AvCmp_CreateCMPAddressRange(vslice_dummy_var_278, vslice_dummy_var_279, 1);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_280;
    havoc vslice_dummy_var_281;
    call {:si_unique_call 473} ntStatus_5 := AvFcp_CreateRequestAddressRange(vslice_dummy_var_280, vslice_dummy_var_281);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc vslice_dummy_var_282;
    havoc vslice_dummy_var_283;
    call {:si_unique_call 474} ntStatus_5 := AvFcp_CreateResponseAddressRange(vslice_dummy_var_282, vslice_dummy_var_283);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 475} sdv_157 := sdv_IsListEmpty(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_157 == 0;
    CurrCrom := 0;
    goto L122;

  L122:
    call {:si_unique_call 476} CurrCrom, ntStatus_5 := Av_FDO_StopDevice_loop_L122(CurrCrom, ntStatus_5, AvAdapterData_3);
    goto L122_last;

  L122_last:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} CurrCrom != 0;
    assume {:nonnull} CurrCrom != 0;
    assume CurrCrom > 0;
    havoc CurrCrom;
    goto L125;

  L125:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} CurrCrom != 0;
    call {:si_unique_call 477} ntStatus_5 := Av1394_AddConfigRomEntry(CurrCrom);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto L126;

  L126:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    assume false;
    return;

  anon55_Then:
    goto L111;

  L111:
    call {:si_unique_call 478} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 479} Tmp_229 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    call {:si_unique_call 480} sdv_KeAcquireSpinLock(0, Tmp_229);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    call {:si_unique_call 481} sdv_KeReleaseSpinLock(0, Irql_3);
    goto L76;

  L76:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} MyOwner != 0;
    call {:si_unique_call 482} sdv_ExFreePool(0);
    goto L6;

  L6:
    Tmp_228 := ntStatus_5;
    goto LM2;

  LM2:
    return;

  anon51_Then:
    assume {:partition} MyOwner == 0;
    goto L6;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} CurrCrom == 0;
    goto L126;

  anon53_Then:
    assume {:partition} CurrCrom == 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc CurrCrom;
    goto L125;

  anon52_Then:
    assume {:partition} sdv_157 != 0;
    goto L111;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon62_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    assume {:partition} sdv_155 != 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc CmpData;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    havoc FcpData;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    call {:si_unique_call 483} vslice_dummy_var_68 := sdv_IsListEmpty(0);
    call {:si_unique_call 484} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 485} vslice_dummy_var_64 := AvCmp_DestroyCmpData(BusExtension_5, CmpData);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 486} vslice_dummy_var_65 := AvFcp_DestroyFcpData(BusExtension_5, FcpData);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 487} Tmp_229 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    call {:si_unique_call 488} sdv_KeAcquireSpinLock(0, Tmp_229);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto L73;

  L73:
    call {:si_unique_call 489} sdv_KeReleaseSpinLock(0, Irql_3);
    goto L76;

  anon61_Then:
    call {:si_unique_call 490} vslice_dummy_var_66 := sdv_RemoveEntryList(0);
    call {:si_unique_call 491} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto L73;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    call {:si_unique_call 492} sdv_KeReleaseSpinLock(0, Irql_3);
    call {:si_unique_call 493} Tmp_229 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    call {:si_unique_call 494} sdv_KeAcquireSpinLock(0, Tmp_229);
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Irql_3;
    assume {:nonnull} AvAdapterData_3 != 0;
    assume AvAdapterData_3 > 0;
    call {:si_unique_call 495} sdv_KeReleaseSpinLock(0, Irql_3);
    goto L76;

  anon47_Then:
    goto L29;

  anon46_Then:
    call {:si_unique_call 496} vslice_dummy_var_62 := AvCmp_DestroyPlugs(BusExtension_5);
    goto L23;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    goto L12;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L6;
}



procedure {:origName "Av_Power"} Av_Power(actual_DeviceObject_16: int, actual_Irp_14: int) returns (Tmp_230: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_Power"} Av_Power(actual_DeviceObject_16: int, actual_Irp_14: int) returns (Tmp_230: int)
{
  var {:scalar} Status_3: int;
  var {:pointer} CommonExtension_1: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_14: int;

  anon0:
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_14 := actual_Irp_14;
    Status_3 := 0;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc CommonExtension_1;
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L9;

  L9:
    call {:si_unique_call 497} Status_3 := Av_PDO_Power(DeviceObject_16, Irp_14);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_230 := Status_3;
    goto LM2;

  LM2:
    return;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L16;

  L16:
    call {:si_unique_call 498} Status_3 := Av_FDO_Power(DeviceObject_16, Irp_14);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 499} sdv_IoCompleteRequest(0, 0);
    goto L13;

  anon15_Then:
    goto L16;

  anon13_Then:
    goto L9;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 500} vslice_dummy_var_69 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av_Pnp"} Av_Pnp(actual_DeviceObject_17: int, actual_Irp_15: int) returns (Tmp_234: int);
  modifies t, alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error, LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} old(t) == 0 ==> t != 0;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_Pnp"} Av_Pnp(actual_DeviceObject_17: int, actual_Irp_15: int) returns (Tmp_234: int)
{
  var {:scalar} Status_4: int;
  var {:pointer} CommonExtension_2: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_15: int;

  anon0:
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 501} SLIC_Av_Pnp_entry(0, Irp_15);
    Status_4 := 0;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc CommonExtension_2;
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L9;

  L9:
    call {:si_unique_call 502} Status_4 := Av_PDO_Pnp(DeviceObject_17, Irp_15);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_234 := Status_4;
    call {:si_unique_call 503} SLIC_Av_Pnp_exit(strConst__li2bpl2, Irp_15);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L16;

  L16:
    call {:si_unique_call 504} Status_4 := Av_FDO_Pnp(DeviceObject_17, Irp_15);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    havoc Status_4;
    call {:si_unique_call 505} sdv_IoCompleteRequest(0, 0);
    goto L13;

  anon17_Then:
    goto L16;

  anon15_Then:
    goto L9;
}



procedure {:origName "Av_PDO_Power"} Av_PDO_Power(actual_DeviceObject_18: int, actual_Irp_16: int) returns (Tmp_236: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_PDO_Power"} Av_PDO_Power(actual_DeviceObject_18: int, actual_Irp_16: int) returns (Tmp_236: int)
{
  var {:pointer} SD3: int;
  var {:scalar} State_2: int;
  var {:pointer} IrpStack_1: int;
  var {:scalar} sdv_3: int;
  var {:scalar} ntStatus_6: int;
  var {:pointer} PdoExtension_2: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;

  anon0:
    call {:si_unique_call 506} State_2 := __HAVOC_malloc(8);
    call {:si_unique_call 507} sdv_3 := __HAVOC_malloc(8);
    DeviceObject_18 := actual_DeviceObject_18;
    Irp_16 := actual_Irp_16;
    ntStatus_6 := 0;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc PdoExtension_2;
    call {:si_unique_call 508} IrpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    ntStatus_6 := 0;
    goto L23;

  L23:
    call {:si_unique_call 509} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 510} sdv_IoCompleteRequest(0, 0);
    goto L30;

  L30:
    Tmp_236 := ntStatus_6;
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 511} PoStartNextPowerIrp(0);
    call {:si_unique_call 512} sdv_IoSkipCurrentIrpStackLocation(Irp_16);
    call {:si_unique_call 513} ntStatus_6 := PoCallDriver(0, Irp_16);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L30;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    havoc vslice_dummy_var_284;
    havoc vslice_dummy_var_285;
    call {:si_unique_call 514} SD3 := PoSetPowerState(0, vslice_dummy_var_284, vslice_dummy_var_285);
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} sdv_3 != 0;
    assume sdv_3 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto L23;

  anon11_Then:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    goto L23;

  anon12_Then:
    goto L23;
}



procedure {:origName "Av_BuildIDs"} Av_BuildIDs(actual_BusExtension_6: int, actual_PdoExtension_3: int) returns (Tmp_238: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_238 == 0 || Tmp_238 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_BuildIDs"} Av_BuildIDs(actual_BusExtension_6: int, actual_PdoExtension_3: int) returns (Tmp_238: int)
{
  var {:pointer} PdoData_1: int;
  var {:scalar} uniVendorName: int;
  var {:scalar} Tmp_243: int;
  var {:pointer} sdv_176: int;
  var {:scalar} Tmp_246: int;
  var {:pointer} sdv_177: int;
  var {:scalar} Tmp_247: int;
  var {:pointer} sdv_178: int;
  var {:scalar} Tmp_251: int;
  var {:scalar} uniUniqueId: int;
  var {:scalar} Tmp_254: int;
  var {:scalar} Tmp_255: int;
  var {:pointer} sdv_183: int;
  var {:pointer} uniModelId: int;
  var {:scalar} ntStatus_7: int;
  var {:scalar} Tmp_257: int;
  var {:scalar} Tmp_258: int;
  var {:scalar} uniSwVersion: int;
  var {:scalar} Tmp_259: int;
  var {:pointer} sdv_190: int;
  var {:scalar} Tmp_262: int;
  var {:pointer} UnitData: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} Tmp_265: int;
  var {:pointer} uniVendorId: int;
  var {:scalar} Tmp_268: int;
  var {:pointer} sdv_200: int;
  var {:pointer} sdv_201: int;
  var {:scalar} uniModelName: int;
  var {:pointer} BusExtension_6: int;
  var {:pointer} PdoExtension_3: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;

  anon0:
    call {:si_unique_call 515} uniVendorName := __HAVOC_malloc(12);
    call {:si_unique_call 516} uniUniqueId := __HAVOC_malloc(12);
    call {:si_unique_call 517} uniSwVersion := __HAVOC_malloc(12);
    call {:si_unique_call 518} uniModelName := __HAVOC_malloc(12);
    BusExtension_6 := actual_BusExtension_6;
    PdoExtension_3 := actual_PdoExtension_3;
    call {:si_unique_call 519} vslice_dummy_var_85 := __HAVOC_malloc(28);
    call {:si_unique_call 520} vslice_dummy_var_86 := __HAVOC_malloc(28);
    call {:si_unique_call 521} vslice_dummy_var_87 := __HAVOC_malloc(32);
    call {:si_unique_call 522} vslice_dummy_var_88 := __HAVOC_malloc(32);
    call {:si_unique_call 523} vslice_dummy_var_89 := __HAVOC_malloc(8);
    call {:si_unique_call 524} vslice_dummy_var_90 := __HAVOC_malloc(8);
    call {:si_unique_call 525} vslice_dummy_var_91 := __HAVOC_malloc(8);
    call {:si_unique_call 526} vslice_dummy_var_92 := __HAVOC_malloc(8);
    call {:si_unique_call 527} vslice_dummy_var_93 := __HAVOC_malloc(28);
    call {:si_unique_call 528} vslice_dummy_var_94 := __HAVOC_malloc(32);
    call {:si_unique_call 529} vslice_dummy_var_95 := __HAVOC_malloc(28);
    call {:si_unique_call 530} vslice_dummy_var_96 := __HAVOC_malloc(32);
    call {:si_unique_call 531} vslice_dummy_var_97 := __HAVOC_malloc(32);
    ntStatus_7 := 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    UnitData := UnitData__BUS_DEVICE_EXTENSION(BusExtension_6);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    uniVendorId := uniVendorId__UNIT_DATA(UnitData);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc PdoData_1;
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    uniModelId := uniModelId__UNIT_DATA(UnitData);
    goto L19;

  L19:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_255;
    call {:si_unique_call 532} sdv_177 := ExAllocatePoolWithTag(0, Tmp_255, 943206710);
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_251;
    call {:si_unique_call 533} sdv_RtlZeroMemory(0, Tmp_251);
    assume {:nonnull} uniVendorId != 0;
    assume uniVendorId > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 534} vslice_dummy_var_71 := corral_nondet();
    call {:si_unique_call 535} vslice_dummy_var_98 := corral_nondet();
    goto L42;

  L42:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_259;
    call {:si_unique_call 536} sdv_190 := ExAllocatePoolWithTag(0, Tmp_259, 943206710);
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_262;
    call {:si_unique_call 537} sdv_RtlZeroMemory(0, Tmp_262);
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 538} vslice_dummy_var_72 := corral_nondet();
    call {:si_unique_call 539} vslice_dummy_var_99 := corral_nondet();
    goto L63;

  L63:
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    havoc Tmp_247;
    call {:si_unique_call 540} sdv_183 := ExAllocatePoolWithTag(0, Tmp_247, 943206710);
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} uniSwVersion != 0;
    assume uniSwVersion > 0;
    havoc Tmp_246;
    call {:si_unique_call 541} sdv_RtlZeroMemory(0, Tmp_246);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_286;
    call {:si_unique_call 542} vslice_dummy_var_73 := RtlIntegerToUnicodeString(vslice_dummy_var_286, 16, 0);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_265;
    call {:si_unique_call 543} sdv_200 := ExAllocatePoolWithTag(0, Tmp_265, 943206710);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_243;
    call {:si_unique_call 544} sdv_RtlZeroMemory(0, Tmp_243);
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 545} vslice_dummy_var_100 := corral_nondet();
    goto L97;

  L97:
    call {:si_unique_call 546} vslice_dummy_var_74 := corral_nondet();
    call {:si_unique_call 547} vslice_dummy_var_75 := corral_nondet();
    call {:si_unique_call 548} vslice_dummy_var_76 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 549} vslice_dummy_var_101 := corral_nondet();
    goto L112;

  L112:
    call {:si_unique_call 550} vslice_dummy_var_77 := corral_nondet();
    call {:si_unique_call 551} vslice_dummy_var_78 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_257;
    call {:si_unique_call 552} sdv_178 := ExAllocatePoolWithTag(0, Tmp_257, 943206710);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_268;
    call {:si_unique_call 553} sdv_RtlZeroMemory(0, Tmp_268);
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    call {:si_unique_call 554} vslice_dummy_var_102 := corral_nondet();
    goto L137;

  L137:
    call {:si_unique_call 555} vslice_dummy_var_79 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 556} vslice_dummy_var_103 := corral_nondet();
    goto L146;

  L146:
    call {:si_unique_call 557} vslice_dummy_var_104 := corral_nondet();
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_264;
    call {:si_unique_call 558} sdv_176 := ExAllocatePoolWithTag(0, Tmp_264, 943206710);
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc Tmp_254;
    call {:si_unique_call 559} sdv_RtlZeroMemory(0, Tmp_254);
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    call {:si_unique_call 560} sdv_201 := ExAllocatePoolWithTag(0, 100, 943206710);
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} uniUniqueId != 0;
    assume uniUniqueId > 0;
    havoc Tmp_258;
    call {:si_unique_call 561} sdv_RtlZeroMemory(0, Tmp_258);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_287;
    call {:si_unique_call 562} vslice_dummy_var_80 := RtlIntegerToUnicodeString(vslice_dummy_var_287, 16, 0);
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_288;
    call {:si_unique_call 563} vslice_dummy_var_81 := RtlIntegerToUnicodeString(vslice_dummy_var_288, 16, 0);
    call {:si_unique_call 564} vslice_dummy_var_82 := corral_nondet();
    call {:si_unique_call 565} RtlFreeUnicodeString(0);
    call {:si_unique_call 566} RtlFreeUnicodeString(0);
    call {:si_unique_call 567} RtlFreeUnicodeString(0);
    call {:si_unique_call 568} RtlFreeUnicodeString(0);
    goto L195;

  L195:
    Tmp_238 := ntStatus_7;
    return;

  anon75_Then:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 569} sdv_ExFreePool(0);
    goto L196;

  L196:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 570} sdv_ExFreePool(0);
    goto L200;

  L200:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 571} sdv_ExFreePool(0);
    goto L204;

  L204:
    ntStatus_7 := -1073741670;
    goto L195;

  anon64_Then:
    goto L204;

  anon63_Then:
    goto L200;

  anon62_Then:
    goto L196;

  anon74_Then:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 572} sdv_ExFreePool(0);
    goto L209;

  L209:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 573} sdv_ExFreePool(0);
    goto L213;

  L213:
    ntStatus_7 := -1073741670;
    goto L195;

  anon65_Then:
    goto L213;

  anon61_Then:
    goto L209;

  anon73_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 574} vslice_dummy_var_105 := corral_nondet();
    goto L146;

  anon60_Then:
    goto L146;

  anon58_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 575} vslice_dummy_var_106 := corral_nondet();
    goto L137;

  anon59_Then:
    goto L137;

  anon72_Then:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    call {:si_unique_call 576} sdv_ExFreePool(0);
    goto L224;

  L224:
    ntStatus_7 := -1073741670;
    goto L195;

  anon57_Then:
    goto L224;

  anon71_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 577} vslice_dummy_var_107 := corral_nondet();
    goto L112;

  anon56_Then:
    goto L112;

  anon54_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 578} vslice_dummy_var_108 := corral_nondet();
    goto L97;

  anon55_Then:
    goto L97;

  anon70_Then:
    ntStatus_7 := -1073741670;
    goto L195;

  anon69_Then:
    ntStatus_7 := -1073741670;
    goto L195;

  anon52_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_289;
    call {:si_unique_call 579} vslice_dummy_var_84 := RtlIntegerToUnicodeString(vslice_dummy_var_289, 16, 0);
    goto L243;

  L243:
    call {:si_unique_call 580} vslice_dummy_var_109 := corral_nondet();
    goto L63;

  anon53_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_290;
    call {:si_unique_call 581} vslice_dummy_var_83 := RtlIntegerToUnicodeString(vslice_dummy_var_290, 16, 0);
    goto L243;

  anon68_Then:
    ntStatus_7 := -1073741670;
    goto L195;

  anon51_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    havoc vslice_dummy_var_291;
    call {:si_unique_call 582} vslice_dummy_var_70 := RtlIntegerToUnicodeString(vslice_dummy_var_291, 16, 0);
    call {:si_unique_call 583} vslice_dummy_var_110 := corral_nondet();
    goto L42;

  anon67_Then:
    ntStatus_7 := -1073741670;
    goto L195;

  anon66_Then:
    assume {:nonnull} UnitData != 0;
    assume UnitData > 0;
    uniModelId := uniUnitModelId__UNIT_DATA(UnitData);
    goto L19;
}



procedure {:origName "Av_PDO_StartDevice"} Av_PDO_StartDevice(actual_PdoExtension_4: int) returns (Tmp_272: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_PDO_StartDevice"} Av_PDO_StartDevice(actual_PdoExtension_4: int) returns (Tmp_272: int)
{
  var {:scalar} ntStatus_8: int;
  var {:pointer} PdoExtension_4: int;

  anon0:
    PdoExtension_4 := actual_PdoExtension_4;
    ntStatus_8 := 0;
    call {:si_unique_call 584} ntStatus_8 := Av1394_GetDeviceNodeId#1(PdoExtension_4);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ntStatus_8 >= 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto L12;

  L12:
    Tmp_272 := ntStatus_8;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} 0 > ntStatus_8;
    goto L12;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av_FDO_PowerComplete"} Av_FDO_PowerComplete(actual_DeviceObject_19: int, actual_Irp_17: int, actual_BusExtensionIn: int) returns (Tmp_274: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_FDO_PowerComplete"} Av_FDO_PowerComplete(actual_DeviceObject_19: int, actual_Irp_17: int, actual_BusExtensionIn: int) returns (Tmp_274: int)
{
  var {:pointer} SD2: int;
  var {:pointer} IrpStack_2: int;
  var {:scalar} sdv_2: int;
  var {:scalar} ntStatus_9: int;
  var {:pointer} BusExtension_7: int;
  var {:pointer} Irp_17: int;
  var {:pointer} BusExtensionIn: int;
  var vslice_dummy_var_292: int;

  anon0:
    call {:si_unique_call 585} sdv_2 := __HAVOC_malloc(8);
    Irp_17 := actual_Irp_17;
    BusExtensionIn := actual_BusExtensionIn;
    BusExtension_7 := BusExtensionIn;
    call {:si_unique_call 586} IrpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_17);
    assume {:nonnull} IrpStack_2 != 0;
    assume IrpStack_2 > 0;
    havoc vslice_dummy_var_292;
    call {:si_unique_call 587} SD2 := PoSetPowerState(0, 1, vslice_dummy_var_292);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} IrpStack_2 != 0;
    assume IrpStack_2 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    havoc ntStatus_9;
    Tmp_274 := ntStatus_9;
    return;
}



procedure {:origName "Av_FDO_Power"} Av_FDO_Power(actual_DeviceObject_20: int, actual_Irp_18: int) returns (Tmp_276: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_FDO_Power"} Av_FDO_Power(actual_DeviceObject_20: int, actual_Irp_18: int) returns (Tmp_276: int)
{
  var {:pointer} SD1: int;
  var {:pointer} structPtr888sdv: int;
  var {:scalar} State_3: int;
  var {:pointer} IrpStack_3: int;
  var {:scalar} Type_2: int;
  var {:scalar} ntStatus_10: int;
  var {:scalar} sdv: int;
  var {:scalar} sdv_1: int;
  var {:pointer} BusExtension_8: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Irp_18: int;

  anon0:
    call {:si_unique_call 588} State_3 := __HAVOC_malloc(8);
    call {:si_unique_call 589} sdv := __HAVOC_malloc(8);
    call {:si_unique_call 590} sdv_1 := __HAVOC_malloc(8);
    DeviceObject_20 := actual_DeviceObject_20;
    Irp_18 := actual_Irp_18;
    ntStatus_10 := 0;
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc BusExtension_8;
    call {:si_unique_call 591} IrpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    havoc Type_2;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    ntStatus_10 := 0;
    goto L21;

  L21:
    call {:si_unique_call 592} PoStartNextPowerIrp(0);
    call {:si_unique_call 593} sdv_IoSkipCurrentIrpStackLocation(Irp_18);
    call {:si_unique_call 594} ntStatus_10 := PoCallDriver(0, Irp_18);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  L31:
    Tmp_276 := ntStatus_10;
    goto LM2;

  LM2:
    return;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    ntStatus_10 := -1073741822;
    goto L21;

  anon27_Then:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Type_2 == 1;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 595} structPtr888sdv := PoSetPowerState(0, Type_2, State_3);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    goto L21;

  anon24_Then:
    goto L35;

  L35:
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 596} PoStartNextPowerIrp(0);
    call {:si_unique_call 597} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_18);
    call {:si_unique_call 598} sdv_IoSetCompletionRoutine(Irp_18, li2bplFunctionConstant452, BusExtension_8, 1, 1, 1);
    call {:si_unique_call 599} ntStatus_10 := PoCallDriver(0, Irp_18);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon25_Then:
    goto L41;

  L41:
    call {:si_unique_call 600} SD1 := PoSetPowerState(0, Type_2, State_3);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    goto L21;

  anon23_Then:
    goto L41;

  anon28_Then:
    goto L35;

  anon21_Then:
    assume {:partition} Type_2 != 1;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Type_2 == 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto L21;

  anon22_Then:
    assume {:partition} Type_2 != 0;
    goto L21;
}



procedure {:origName "Av_PDO_StopDevice"} Av_PDO_StopDevice(actual_PdoExtension_5: int) returns (Tmp_278: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} Tmp_278 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_PDO_StopDevice"} Av_PDO_StopDevice(actual_PdoExtension_5: int) returns (Tmp_278: int)
{
  var {:scalar} Notify: int;
  var {:pointer} NotifyData_1: int;
  var {:pointer} Tmp_279: int;
  var {:pointer} CromData: int;
  var {:pointer} Tmp_280: int;
  var {:scalar} ntStatus_11: int;
  var {:scalar} sdv_211: int;
  var {:pointer} sdv_212: int;
  var {:pointer} PdoCromData: int;
  var {:scalar} Irql_4: int;
  var {:pointer} BusExtension_9: int;
  var {:pointer} MonitorData: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;

  anon0:
    PdoExtension_5 := actual_PdoExtension_5;
    ntStatus_11 := 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    NotifyData_1 := FcpNotifyData__PDO_DEVICE_EXTENSION(PdoExtension_5);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    MonitorData := MonitorData__PDO_DEVICE_EXTENSION(PdoExtension_5);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    havoc Tmp_280;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    havoc BusExtension_9;
    assume {:nonnull} BusExtension_9 != 0;
    assume BusExtension_9 > 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 601} Tmp_279 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    call {:si_unique_call 602} sdv_KeAcquireSpinLock(0, Tmp_279);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    havoc Irql_4;
    assume {:nonnull} NotifyData_1 != 0;
    assume NotifyData_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} NotifyData_1 != 0;
    assume NotifyData_1 > 0;
    havoc Notify;
    assume {:nonnull} NotifyData_1 != 0;
    assume NotifyData_1 > 0;
    call {:si_unique_call 603} vslice_dummy_var_116 := sdv_RemoveEntryList(0);
    call {:si_unique_call 604} sdv_KeReleaseSpinLock(0, Irql_4);
    call {:si_unique_call 605} vslice_dummy_var_111 := AvFcp_CompleteQueuedFcp(PdoExtension_5, Notify);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(Notify, 2) != 0;
    call {:si_unique_call 606} ExDeleteNPagedLookasideList(0);
    goto L35;

  L35:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} BAND(Notify, 1) != 0;
    call {:si_unique_call 607} ExDeleteNPagedLookasideList(0);
    goto L39;

  L39:
    call {:si_unique_call 608} Tmp_279 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    call {:si_unique_call 609} sdv_KeAcquireSpinLock(0, Tmp_279);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    havoc Irql_4;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 610} sdv_KeReleaseSpinLock(0, Irql_4);
    call {:si_unique_call 611} Tmp_279 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    call {:si_unique_call 612} sdv_KeAcquireSpinLock(0, Tmp_279);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    havoc Irql_4;
    goto L53;

  L53:
    call {:si_unique_call 613} CromData, sdv_211, sdv_212, PdoCromData, vslice_dummy_var_113, vslice_dummy_var_114, vslice_dummy_var_115 := Av_PDO_StopDevice_loop_L53(CromData, sdv_211, sdv_212, PdoCromData, BusExtension_9, PdoExtension_5, vslice_dummy_var_113, vslice_dummy_var_114, vslice_dummy_var_115);
    goto L53_last;

  L53_last:
    call {:si_unique_call 623} sdv_211 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_211 == 0;
    PdoCromData := 0;
    CromData := 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 614} sdv_212 := RemoveHeadList(PdoCromList__PDO_DEVICE_EXTENSION(PdoExtension_5));
    PdoCromData := sdv_212;
    assume {:nonnull} PdoCromData != 0;
    assume PdoCromData > 0;
    havoc CromData;
    assume {:nonnull} CromData != 0;
    assume CromData > 0;
    assume {:nonnull} CromData != 0;
    assume CromData > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L82;

  L82:
    call {:si_unique_call 615} sdv_ExFreePool(0);
    goto L82_dummy;

  L82_dummy:
    assume false;
    return;

  anon22_Then:
    call {:si_unique_call 616} vslice_dummy_var_113 := Av1394_RemoveConfigRomEntry(CromData);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 617} vslice_dummy_var_114 := sdv_RemoveEntryList(0);
    call {:si_unique_call 618} sdv_ExFreePool(0);
    call {:si_unique_call 619} vslice_dummy_var_115 := Av1394_BusReset(BusExtension_9, 0, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L82;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} sdv_211 != 0;
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 620} vslice_dummy_var_112 := sdv_RemoveEntryList(0);
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    assume {:nonnull} MonitorData != 0;
    assume MonitorData > 0;
    goto L59;

  L59:
    call {:si_unique_call 621} sdv_KeReleaseSpinLock(0, Irql_4);
    Tmp_278 := ntStatus_11;
    goto LM2;

  anon21_Then:
    goto L59;

  anon19_Then:
    assume {:partition} BAND(Notify, 1) == 0;
    goto L39;

  anon18_Then:
    assume {:partition} BAND(Notify, 2) == 0;
    goto L35;

  anon17_Then:
    call {:si_unique_call 622} sdv_KeReleaseSpinLock(0, Irql_4);
    goto L39;
}



procedure {:origName "Av_EnumerateChildren"} Av_EnumerateChildren(actual_BusExtension_10: int) returns (Tmp_281: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_EnumerateChildren"} Av_EnumerateChildren(actual_BusExtension_10: int) returns (Tmp_281: int)
{
  var {:scalar} sdv_215: int;
  var {:scalar} ntStatus_12: int;
  var {:pointer} PdoDeviceObject_1: int;
  var {:pointer} CurrPdoData: int;
  var {:pointer} BusExtension_10: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;

  anon0:
    call {:si_unique_call 624} PdoDeviceObject_1 := __HAVOC_malloc(4);
    BusExtension_10 := actual_BusExtension_10;
    ntStatus_12 := 0;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    call {:si_unique_call 625} sdv_215 := sdv_IsListEmpty(0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sdv_215 == 0;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc CurrPdoData;
    goto L51;

  L51:
    call {:si_unique_call 626} ntStatus_12, CurrPdoData := Av_EnumerateChildren_loop_L51(ntStatus_12, PdoDeviceObject_1, CurrPdoData, BusExtension_10);
    goto L51_last;

  L51_last:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    goto L58;

  L58:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    havoc CurrPdoData;
    goto L58_dummy;

  L58_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:nonnull} CurrPdoData != 0;
    assume CurrPdoData > 0;
    havoc vslice_dummy_var_293;
    call {:si_unique_call 627} ntStatus_12 := Av_CreatePDO(BusExtension_10, CurrPdoData, vslice_dummy_var_293, PdoDeviceObject_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} ntStatus_12 < 0;
    Tmp_281 := ntStatus_12;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon38_Then:
    assume {:partition} 0 <= ntStatus_12;
    goto L58;

  anon37_Then:
    goto L36;

  L36:
    Tmp_281 := ntStatus_12;
    goto L1;

  anon29_Then:
    assume {:partition} sdv_215 != 0;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 628} ntStatus_12 := Av1394_GetUnitInfo(BusExtension_10, UnitData__BUS_DEVICE_EXTENSION(BusExtension_10));
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_12 >= 0;
    call {:si_unique_call 629} ntStatus_12 := Av_GetDiagFlags(BusExtension_10);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 630} ntStatus_12 := Av_CreatePDO(BusExtension_10, 0, -858989091, PdoDeviceObject_1);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} ntStatus_12 >= 0;
    goto L30;

  L30:
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    havoc vslice_dummy_var_294;
    call {:si_unique_call 631} ntStatus_12 := Av_BuildIDs(BusExtension_10, vslice_dummy_var_294);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_12 >= 0;
    goto L36;

  anon34_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_281 := ntStatus_12;
    goto L1;

  anon33_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_281 := ntStatus_12;
    goto L1;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_281 := ntStatus_12;
    goto L1;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 632} ntStatus_12 := Av1394_GetVirtualUnitInfo(BusExtension_10, UnitData__BUS_DEVICE_EXTENSION(BusExtension_10));
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} ntStatus_12 >= 0;
    call {:si_unique_call 633} ntStatus_12 := Av_CreatePDO(BusExtension_10, 0, -572666676, PdoDeviceObject_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} ntStatus_12 < 0;
    Tmp_281 := ntStatus_12;
    goto L1;

  anon36_Then:
    assume {:partition} 0 <= ntStatus_12;
    goto L30;

  anon35_Then:
    assume {:partition} 0 > ntStatus_12;
    Tmp_281 := ntStatus_12;
    goto L1;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    Tmp_281 := -1073741823;
    goto L1;
}



procedure {:origName "Av_CreateAvAdapterData"} Av_CreateAvAdapterData(actual_BusExtension_11: int, actual_AvAdapterData_5: int) returns (Tmp_283: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_CreateAvAdapterData"} Av_CreateAvAdapterData(actual_BusExtension_11: int, actual_AvAdapterData_5: int) returns (Tmp_283: int)
{
  var {:scalar} Status_5: int;
  var {:pointer} BusExtension_11: int;
  var {:pointer} AvAdapterData_5: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_295: int;

  anon0:
    BusExtension_11 := actual_BusExtension_11;
    AvAdapterData_5 := actual_AvAdapterData_5;
    Status_5 := 0;
    assume {:nonnull} AvAdapterData_5 != 0;
    assume AvAdapterData_5 > 0;
    call {:si_unique_call 634} Status_5 := AvCmp_CreateCmpData(BusExtension_11, 1, CmpData__AV_ADAPTER_DATA(AvAdapterData_5));
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Status_5 < 0;
    goto L19;

  L19:
    Tmp_283 := Status_5;
    goto LM2;

  LM2:
    return;

  anon11_Then:
    assume {:partition} 0 <= Status_5;
    assume {:nonnull} AvAdapterData_5 != 0;
    assume AvAdapterData_5 > 0;
    call {:si_unique_call 635} Status_5 := AvFcp_CreateFcpData(BusExtension_11, FcpData__AV_ADAPTER_DATA(AvAdapterData_5));
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_5 >= 0;
    goto L19;

  anon12_Then:
    assume {:partition} 0 > Status_5;
    assume {:nonnull} BusExtension_11 != 0;
    assume BusExtension_11 > 0;
    havoc vslice_dummy_var_295;
    call {:si_unique_call 636} vslice_dummy_var_117 := AvCmp_DestroyCmpData(BusExtension_11, vslice_dummy_var_295);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_11 != 0;
    assume BusExtension_11 > 0;
    goto L19;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av_PDO_Pnp"} Av_PDO_Pnp(actual_DeviceObject_21: int, actual_Irp_19: int) returns (Tmp_285: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_PDO_Pnp"} Av_PDO_Pnp(actual_DeviceObject_21: int, actual_Irp_19: int) returns (Tmp_285: int)
{
  var {:pointer} PdoData_2: int;
  var {:pointer} Tmp_287: int;
  var {:scalar} uniRetString: int;
  var {:pointer} Tmp_288: int;
  var {:pointer} Tmp_289: int;
  var {:scalar} uniRetString_1: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} Tmp_291: int;
  var {:pointer} Tmp_292: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} IrpStack_4: int;
  var {:pointer} Tmp_294: int;
  var {:scalar} Tmp_295: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} sdv_230: int;
  var {:scalar} Tmp_298: int;
  var {:pointer} sdv_231: int;
  var {:pointer} DeviceCapabilities: int;
  var {:pointer} uniModelId_1: int;
  var {:scalar} ntStatus_13: int;
  var {:pointer} PdoExtension_6: int;
  var {:scalar} Tmp_299: int;
  var {:pointer} sdv_235: int;
  var {:pointer} sdv_236: int;
  var {:pointer} sdv_237: int;
  var {:scalar} Tmp_300: int;
  var {:scalar} Tmp_301: int;
  var {:pointer} BusInfo: int;
  var {:pointer} sdv_239: int;
  var {:scalar} Tmp_302: int;
  var {:pointer} BusExtension_12: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} uniVendorId_1: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} DeviceRelations: int;
  var {:scalar} Tmp_305: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_296: int;

  anon0:
    call {:si_unique_call 637} uniRetString := __HAVOC_malloc(12);
    call {:si_unique_call 638} uniRetString_1 := __HAVOC_malloc(12);
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 639} vslice_dummy_var_120 := __HAVOC_malloc(8);
    call {:si_unique_call 640} Tmp_287 := __HAVOC_malloc(28);
    call {:si_unique_call 641} Tmp_288 := __HAVOC_malloc(28);
    call {:si_unique_call 642} Tmp_292 := __HAVOC_malloc(4);
    call {:si_unique_call 643} Tmp_293 := __HAVOC_malloc(28);
    call {:si_unique_call 644} Tmp_294 := __HAVOC_malloc(28);
    call {:si_unique_call 645} vslice_dummy_var_121 := __HAVOC_malloc(76);
    call {:si_unique_call 646} Tmp_297 := __HAVOC_malloc(28);
    call {:si_unique_call 647} Tmp_304 := __HAVOC_malloc(28);
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    havoc PdoExtension_6;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_289;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    havoc BusExtension_12;
    call {:si_unique_call 648} IrpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc ntStatus_13;
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L42;

  L42:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    call {:si_unique_call 649} sdv_IoCompleteRequest(0, 0);
    Tmp_285 := ntStatus_13;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon84_Then:
    goto L20;

  L20:
    ntStatus_13 := 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    call {:si_unique_call 650} ntStatus_13 := Av_PDO_StopDevice(PdoExtension_6);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    goto L206;

  L206:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_291;
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    call {:si_unique_call 651} IoDeleteDevice(0);
    goto L42;

  anon83_Then:
    goto L42;

  anon101_Then:
    goto L42;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    goto L206;

  anon85_Then:
    call {:si_unique_call 652} sdv_235 := ExAllocatePoolWithTag(1, 24, 943206710);
    BusInfo := sdv_235;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} BusInfo != 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    ntStatus_13 := 0;
    goto L42;

  anon111_Then:
    assume {:partition} BusInfo == 0;
    ntStatus_13 := -1073741670;
    goto L42;

  anon86_Then:
    ntStatus_13 := 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc PdoData_2;
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_301;
    call {:si_unique_call 653} sdv_236 := ExAllocatePoolWithTag(1, Tmp_301, 943206710);
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_298;
    call {:si_unique_call 654} sdv_RtlZeroMemory(0, Tmp_298);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L42;

  anon109_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon79_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon78_Then:
    call {:si_unique_call 655} sdv_IoSkipCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_296;
    call {:si_unique_call 656} ntStatus_13 := sdv_IoCallDriver#1(vslice_dummy_var_296, Irp_19);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    Tmp_285 := ntStatus_13;
    goto L1;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon94_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc ntStatus_13;
    goto L42;

  anon95_Then:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_290;
    call {:si_unique_call 657} sdv_239 := ExAllocatePoolWithTag(1, Tmp_290, 943206710);
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_295;
    call {:si_unique_call 658} sdv_RtlZeroMemory(0, Tmp_295);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L42;

  anon108_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon77_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon96_Then:
    goto L53;

  L53:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_302;
    call {:si_unique_call 659} sdv_231 := ExAllocatePoolWithTag(1, Tmp_302, 943206710);
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc Tmp_299;
    call {:si_unique_call 660} sdv_RtlZeroMemory(0, Tmp_299);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto L42;

  anon107_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon76_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon106_Then:
    goto L53;

  anon87_Then:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    uniVendorId_1 := uniVendorId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_12));
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    uniModelId_1 := uniModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_12));
    goto L137;

  L137:
    ntStatus_13 := 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    havoc Tmp_300;
    call {:si_unique_call 661} sdv_230 := ExAllocatePoolWithTag(1, Tmp_300, 943206710);
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    havoc Tmp_305;
    call {:si_unique_call 662} sdv_RtlZeroMemory(0, Tmp_305);
    assume {:nonnull} uniVendorId_1 != 0;
    assume uniVendorId_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} uniModelId_1 != 0;
    assume uniModelId_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    call {:si_unique_call 663} vslice_dummy_var_118 := corral_nondet();
    call {:si_unique_call 664} vslice_dummy_var_123 := corral_nondet();
    call {:si_unique_call 665} vslice_dummy_var_119 := corral_nondet();
    goto L166;

  L166:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} uniRetString_1 != 0;
    assume uniRetString_1 > 0;
    goto L42;

  anon81_Then:
    goto L153;

  L153:
    call {:si_unique_call 666} vslice_dummy_var_124 := corral_nondet();
    goto L166;

  anon80_Then:
    goto L153;

  anon105_Then:
    ntStatus_13 := -1073741670;
    goto L42;

  anon104_Then:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    uniModelId_1 := uniUnitModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_12));
    goto L137;

  anon75_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc ntStatus_13;
    goto L42;

  anon88_Then:
    ntStatus_13 := 0;
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    havoc DeviceCapabilities;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_294;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_304;
    assume {:nonnull} Tmp_304 != 0;
    assume Tmp_304 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_293;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_297;
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_287;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    havoc Tmp_288;
    assume {:nonnull} Tmp_288 != 0;
    assume Tmp_288 > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto L42;

  anon89_Then:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    call {:si_unique_call 667} sdv_237 := ExAllocatePoolWithTag(1, 8, 943206710);
    DeviceRelations := sdv_237;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} DeviceRelations != 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_292;
    assume {:nonnull} Tmp_292 != 0;
    assume Tmp_292 > 0;
    call {:si_unique_call 668} vslice_dummy_var_122 := sdv_ObReferenceObject(0);
    ntStatus_13 := 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L42;

  anon103_Then:
    assume {:partition} DeviceRelations == 0;
    ntStatus_13 := -1073741670;
    goto L42;

  anon82_Then:
    goto L42;

  anon90_Then:
    ntStatus_13 := 0;
    goto L42;

  anon91_Then:
    call {:si_unique_call 669} ntStatus_13 := Av_PDO_StopDevice(PdoExtension_6);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    goto L20;

  anon93_Then:
    ntStatus_13 := 0;
    goto L42;

  anon97_Then:
    call {:si_unique_call 670} ntStatus_13 := Av_PDO_StartDevice(PdoExtension_6);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av_FDO_Pnp"} Av_FDO_Pnp(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_307: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_FDO_Pnp"} Av_FDO_Pnp(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_307: int)
{
  var {:scalar} i: int;
  var {:pointer} Relations: int;
  var {:pointer} PdoData_4: int;
  var {:scalar} sdv_242: int;
  var {:scalar} numPDO: int;
  var {:scalar} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:pointer} IrpStack_5: int;
  var {:scalar} ulLength: int;
  var {:pointer} Tmp_312: int;
  var {:scalar} Tmp_314: int;
  var {:pointer} sdv_252: int;
  var {:pointer} Tmp_315: int;
  var {:pointer} DeviceCapabilities_1: int;
  var {:scalar} ntStatus_14: int;
  var {:pointer} sdv_256: int;
  var {:scalar} Tmp_319: int;
  var {:scalar} Irql_5: int;
  var {:pointer} BusExtension_13: int;
  var {:pointer} CurrPdoData_1: int;
  var {:pointer} PdoData_5: int;
  var {:pointer} AvAdapterData_6: int;
  var {:pointer} Tmp_320: int;
  var {:pointer} ParentDeviceObject: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_297: int;

  anon0:
    DeviceObject_22 := actual_DeviceObject_22;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 671} Tmp_309 := __HAVOC_malloc(4);
    ntStatus_14 := 0;
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    havoc BusExtension_13;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc ParentDeviceObject;
    call {:si_unique_call 672} IrpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    goto L166;

  L166:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    call {:si_unique_call 673} vslice_dummy_var_126 := Av_FDO_StopDevice(BusExtension_13);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} yogi_error != 1;
    goto L167;

  L167:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto L172;

  L172:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    goto L174;

  L174:
    call {:si_unique_call 674} PdoData_4, sdv_242, sdv_256 := Av_FDO_Pnp_loop_L174(PdoData_4, sdv_242, sdv_256, BusExtension_13);
    goto L174_last;

  L174_last:
    call {:si_unique_call 734} sdv_242 := sdv_IsListEmpty(0);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} sdv_242 == 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 675} sdv_256 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_13));
    PdoData_4 := sdv_256;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    call {:si_unique_call 676} IoDeleteDevice(0);
    goto L199;

  L199:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 677} sdv_ExFreePool(0);
    goto L203;

  L203:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 678} sdv_ExFreePool(0);
    goto L207;

  L207:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 679} sdv_ExFreePool(0);
    goto L211;

  L211:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} PdoData_4 != 0;
    call {:si_unique_call 680} sdv_ExFreePool(0);
    goto anon135_Else_dummy;

  anon135_Else_dummy:
    assume false;
    return;

  anon135_Then:
    assume {:partition} PdoData_4 == 0;
    goto anon135_Then_dummy;

  anon135_Then_dummy:
    assume false;
    return;

  anon134_Then:
    goto L211;

  anon133_Then:
    goto L207;

  anon132_Then:
    goto L203;

  anon158_Then:
    goto L199;

  anon131_Then:
    assume {:partition} sdv_242 != 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 681} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_297;
    call {:si_unique_call 682} ntStatus_14 := sdv_IoCallDriver#1(vslice_dummy_var_297, Irp_20);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 683} IoDetachDevice(0);
    call {:si_unique_call 684} IoDeleteDevice(0);
    goto L193;

  L193:
    Tmp_307 := ntStatus_14;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon157_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon130_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 685} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 686} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    goto L193;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon129_Then:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc AvAdapterData_6;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} AvAdapterData_6 != 0;
    call {:si_unique_call 687} Tmp_315 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    call {:si_unique_call 688} sdv_KeAcquireSpinLock(0, Tmp_315);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    havoc Irql_5;
    assume {:nonnull} AvAdapterData_6 != 0;
    assume AvAdapterData_6 > 0;
    assume {:nonnull} AvAdapterData_6 != 0;
    assume AvAdapterData_6 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    call {:si_unique_call 689} sdv_KeReleaseSpinLock(0, Irql_5);
    goto L226;

  L226:
    call {:si_unique_call 690} RtlFreeUnicodeString(0);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 691} sdv_ExFreePool(0);
    goto L258;

  L258:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 692} sdv_ExFreePool(0);
    goto L262;

  L262:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 693} sdv_ExFreePool(0);
    goto L266;

  L266:
    call {:si_unique_call 694} ExDeleteNPagedLookasideList(0);
    PdoData_5 := 0;
    goto L274;

  L274:
    call {:si_unique_call 695} PdoData_5 := Av_FDO_Pnp_loop_L274(BusExtension_13, PdoData_5);
    goto L274_last;

  L274_last:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} PdoData_5 != 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc PdoData_5;
    goto L277;

  L277:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto anon161_Else_dummy;

  anon161_Else_dummy:
    assume false;
    return;

  anon161_Then:
    goto L172;

  anon142_Then:
    assume {:partition} PdoData_5 == 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc PdoData_5;
    goto L277;

  anon141_Then:
    goto L266;

  anon140_Then:
    goto L262;

  anon139_Then:
    goto L258;

  anon163_Then:
    call {:si_unique_call 696} sdv_KeReleaseSpinLock(0, Irql_5);
    call {:si_unique_call 697} vslice_dummy_var_128 := Av1394_SetPacketSize(BusExtension_13, 0);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 698} vslice_dummy_var_129 := Av1394_BusReset(BusExtension_13, 0, 0);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    goto L226;

  anon165_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon164_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon162_Then:
    assume {:partition} AvAdapterData_6 == 0;
    call {:si_unique_call 699} vslice_dummy_var_127 := Av1394_SetPacketSize(BusExtension_13, 0);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 700} vslice_dummy_var_130 := Av1394_BusReset(BusExtension_13, 0, 0);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    goto L226;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon166_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon138_Then:
    goto L226;

  anon137_Then:
    goto L226;

  anon136_Then:
    goto L226;

  anon160_Then:
    goto L226;

  anon156_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon128_Then:
    goto L167;

  anon143_Then:
    call {:si_unique_call 701} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 702} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon183_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon144_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 703} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 704} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon182_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon145_Then:
    call {:si_unique_call 705} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 706} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon181_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon146_Then:
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc DeviceCapabilities_1;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 707} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 708} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon180_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    Relations := 0;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 709} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 710} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon174_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon173_Then:
    call {:si_unique_call 711} ntStatus_14 := Av_EnumerateChildren(BusExtension_13);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} yogi_error != 1;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} ntStatus_14 >= 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    havoc Tmp_314;
    goto L81;

  L81:
    i := Tmp_314;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc ulLength;
    call {:si_unique_call 712} sdv_252 := ExAllocatePoolWithTag(0, ulLength, 943206710);
    Relations := sdv_252;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Relations != 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} i != 0;
    Tmp_308 := i * 4;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    call {:si_unique_call 713} sdv_RtlCopyMemory(0, 0, Tmp_308);
    goto L90;

  L90:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    numPDO := 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc CurrPdoData_1;
    goto L102;

  L102:
    call {:si_unique_call 714} numPDO, Tmp_309, Tmp_319, CurrPdoData_1, vslice_dummy_var_131 := Av_FDO_Pnp_loop_L102(i, Relations, numPDO, Tmp_309, Tmp_319, CurrPdoData_1, vslice_dummy_var_131);
    goto L102_last;

  L102_last:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    Tmp_319 := i + numPDO;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_309;
    assume {:nonnull} CurrPdoData_1 != 0;
    assume CurrPdoData_1 > 0;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    call {:si_unique_call 715} vslice_dummy_var_131 := sdv_ObReferenceObject(0);
    assume {:nonnull} CurrPdoData_1 != 0;
    assume CurrPdoData_1 > 0;
    havoc CurrPdoData_1;
    numPDO := numPDO + 1;
    goto anon127_Else_dummy;

  anon127_Else_dummy:
    assume false;
    return;

  anon127_Then:
    goto L97;

  L97:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    call {:si_unique_call 716} sdv_ExFreePool(0);
    goto L110;

  L110:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 717} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 718} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon179_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon178_Then:
    goto L110;

  anon177_Then:
    goto L97;

  anon126_Then:
    assume {:partition} i == 0;
    goto L90;

  anon176_Then:
    assume {:partition} Relations == 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 719} sdv_IoCompleteRequest(0, 0);
    Tmp_307 := -1073741670;
    goto L1;

  anon125_Then:
    Tmp_314 := 0;
    goto L81;

  anon124_Then:
    assume {:partition} 0 > ntStatus_14;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 720} sdv_IoCompleteRequest(0, 0);
    Tmp_307 := ntStatus_14;
    goto L1;

  anon175_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 721} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 722} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon149_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 723} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 724} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon171_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon150_Then:
    call {:si_unique_call 725} vslice_dummy_var_125 := Av_FDO_StopDevice(BusExtension_13);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 726} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 727} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon170_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon151_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 728} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 729} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon168_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon152_Then:
    goto L166;

  anon153_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 730} sdv_IoSkipCurrentIrpStackLocation(Irp_20);
    call {:si_unique_call 731} ntStatus_14 := sdv_IoCallDriver#1(ParentDeviceObject, Irp_20);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} yogi_error != 1;
    Tmp_307 := ntStatus_14;
    goto L1;

  anon155_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    call {:si_unique_call 732} ntStatus_14 := Av_FDO_StartDevice(BusExtension_13, Irp_20);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 733} sdv_IoCompleteRequest(0, 0);
    Tmp_307 := ntStatus_14;
    goto L1;

  anon154_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av1394_Talk"} Av1394_Talk(actual_CipData: int) returns (Tmp_322: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_Talk"} Av1394_Talk(actual_CipData: int) returns (Tmp_322: int)
{
  var {:pointer} Irb_1: int;
  var {:pointer} sdv_268: int;
  var {:scalar} Status_6: int;
  var {:pointer} CipData: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;

  anon0:
    CipData := actual_CipData;
    Status_6 := 0;
    Irb_1 := 0;
    call {:si_unique_call 735} sdv_268 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_1 := sdv_268;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irb_1 != 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} CipData != 0;
    assume CipData > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} CipData != 0;
    assume CipData > 0;
    havoc vslice_dummy_var_298;
    call {:si_unique_call 736} Status_6 := Av_SubmitIrpSynch#1(vslice_dummy_var_298, 0, Irb_1);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CipData != 0;
    assume CipData > 0;
    havoc vslice_dummy_var_299;
    call {:si_unique_call 737} ExFreeToNPagedLookasideList#1(vslice_dummy_var_299, Irb_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L27;

  L27:
    Tmp_322 := Status_6;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Irb_1 == 0;
    Status_6 := -1073741670;
    goto L27;
}



procedure {:origName "Av1394_UpdateCycleTime"} Av1394_UpdateCycleTime(actual_CycleTime: int, actual_Count: int) returns (Tmp_324: int);
  free ensures {:va_keep} Tmp_324 == 1 || Tmp_324 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_UpdateCycleTime"} Av1394_UpdateCycleTime(actual_CycleTime: int, actual_Count: int) returns (Tmp_324: int)
{
  var {:scalar} bCountFlipped: int;
  var {:pointer} CycleTime: int;
  var {:scalar} Count: int;

  anon0:
    CycleTime := actual_CycleTime;
    Count := actual_Count;
    bCountFlipped := 0;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    havoc Count;
    goto L6;

  L6:
    call {:si_unique_call 738} bCountFlipped, Count := Av1394_UpdateCycleTime_loop_L6(bCountFlipped, CycleTime, Count);
    goto L6_last;

  L6_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Count >= 3072;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    Count := Count - 3072;
    goto L10;

  L10:
    call {:si_unique_call 739} bCountFlipped := Av1394_UpdateCycleTime_loop_L10(bCountFlipped, CycleTime);
    goto L10_last;

  L10_last:
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    bCountFlipped := 1;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto L14;

  L14:
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    goto L14_dummy;

  L14_dummy:
    assume false;
    return;

  anon9_Then:
    goto L14;

  anon8_Then:
    goto anon8_Then_dummy;

  anon8_Then_dummy:
    assume false;
    return;

  anon7_Then:
    assume {:partition} 3072 > Count;
    assume {:nonnull} CycleTime != 0;
    assume CycleTime > 0;
    Tmp_324 := bCountFlipped;
    return;
}



procedure {:origName "AvCip_ConvertCipDataFormat"} AvCip_ConvertCipDataFormat(actual_Format: int) returns (Tmp_326: int);
  free ensures {:va_keep} Tmp_326 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ConvertCipDataFormat"} AvCip_ConvertCipDataFormat(actual_Format: int) returns (Tmp_326: int)
{
  var {:pointer} Format: int;

  anon0:
    Format := actual_Format;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L5;

  L5:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  L7:
    Tmp_326 := 0;
    return;

  anon13_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L10;

  L10:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon15_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon17_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon18_Then:
    assume {:nonnull} Format != 0;
    assume Format > 0;
    goto L7;

  anon16_Then:
    goto L10;

  anon14_Then:
    goto L5;
}



procedure {:origName "Av1394_AttachBuffer"} Av1394_AttachBuffer(actual_CipData_1: int, actual_DescriptorData: int) returns (Tmp_328: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_AttachBuffer"} Av1394_AttachBuffer(actual_CipData_1: int, actual_DescriptorData: int) returns (Tmp_328: int)
{
  var {:pointer} Irb_2: int;
  var {:pointer} sdv_270: int;
  var {:scalar} Status_7: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} CipData_1: int;
  var {:pointer} DescriptorData: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;

  anon0:
    CipData_1 := actual_CipData_1;
    DescriptorData := actual_DescriptorData;
    call {:si_unique_call 740} Tmp_330 := __HAVOC_malloc(360);
    Status_7 := 0;
    Irb_2 := 0;
    call {:si_unique_call 741} sdv_270 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_2 := sdv_270;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Irb_2 != 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} DescriptorData != 0;
    assume DescriptorData > 0;
    havoc Tmp_330;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    goto L20;

  L20:
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    havoc vslice_dummy_var_300;
    call {:si_unique_call 742} Status_7 := Av_SubmitIrpSynch#1(vslice_dummy_var_300, 0, Irb_2);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CipData_1 != 0;
    assume CipData_1 > 0;
    havoc vslice_dummy_var_301;
    call {:si_unique_call 743} ExFreeToNPagedLookasideList#1(vslice_dummy_var_301, Irb_2);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L28;

  L28:
    Tmp_328 := Status_7;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    goto L20;

  anon9_Then:
    assume {:partition} Irb_2 == 0;
    Status_7 := -1073741670;
    goto L28;
}



procedure {:origName "AvCip_Stop"} AvCip_Stop(actual_BusExtension_14: int, actual_Irp_21: int, actual_Request_1: int) returns (Tmp_331: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_Stop"} AvCip_Stop(actual_BusExtension_14: int, actual_Irp_21: int, actual_Request_1: int) returns (Tmp_331: int)
{
  var {:scalar} Status_8: int;
  var {:pointer} Tmp_332: int;
  var {:pointer} CipData_2: int;
  var {:pointer} Connect: int;
  var {:scalar} sdv_274: int;
  var {:scalar} Irql_6: int;
  var {:pointer} FrameContext: int;
  var {:pointer} BusExtension_14: int;
  var {:pointer} Request_1: int;

  anon0:
    BusExtension_14 := actual_BusExtension_14;
    Request_1 := actual_Request_1;
    Status_8 := 0;
    assume {:nonnull} Request_1 != 0;
    assume Request_1 > 0;
    havoc Connect;
    assume {:nonnull} Connect != 0;
    assume Connect > 0;
    havoc CipData_2;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} BusExtension_14 != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Connect != 0;
    assume {:nonnull} Connect != 0;
    assume Connect > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L15;

  L15:
    Status_8 := -1073741811;
    goto L18;

  L18:
    Tmp_331 := Status_8;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    goto L10;

  L10:
    call {:si_unique_call 744} Status_8 := Av1394_Stop(CipData_2);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Status_8 >= 0;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    call {:si_unique_call 745} Status_8 := AvCip_FreeResources(CipData_2);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Status_8 >= 0;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 746} Tmp_332 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    call {:si_unique_call 747} sdv_KeAcquireSpinLock(0, Tmp_332);
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    havoc Irql_6;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    call {:si_unique_call 748} sdv_274 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_274 != 0;
    goto L42;

  L42:
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    call {:si_unique_call 749} sdv_KeReleaseSpinLock(0, Irql_6);
    goto L18;

  anon30_Then:
    assume {:partition} sdv_274 == 0;
    assume {:nonnull} CipData_2 != 0;
    assume CipData_2 > 0;
    havoc FrameContext;
    assume {:nonnull} FrameContext != 0;
    assume FrameContext > 0;
    goto L42;

  anon29_Then:
    goto L18;

  anon28_Then:
    goto L18;

  anon27_Then:
    assume {:partition} 0 > Status_8;
    goto L18;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} 0 > Status_8;
    goto L18;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    goto L15;

  anon23_Then:
    assume {:partition} Connect == 0;
    goto L10;

  anon31_Then:
    assume {:partition} BusExtension_14 == 0;
    goto L10;
}



procedure {:origName "AvCip_Listen"} AvCip_Listen(actual_BusExtension_15: int, actual_Irp_22: int, actual_Request_2: int) returns (Tmp_333: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_Listen"} AvCip_Listen(actual_BusExtension_15: int, actual_Irp_22: int, actual_Request_2: int) returns (Tmp_333: int)
{
  var {:scalar} Status_9: int;
  var {:pointer} CipData_3: int;
  var {:pointer} Connect_1: int;
  var {:pointer} BusExtension_15: int;
  var {:pointer} Request_2: int;
  var vslice_dummy_var_132: int;

  anon0:
    BusExtension_15 := actual_BusExtension_15;
    Request_2 := actual_Request_2;
    Status_9 := 0;
    assume {:nonnull} Request_2 != 0;
    assume Request_2 > 0;
    havoc Connect_1;
    assume {:nonnull} Connect_1 != 0;
    assume Connect_1 > 0;
    havoc CipData_3;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Status_9 := -1073741811;
    goto L14;

  L14:
    Tmp_333 := Status_9;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} BusExtension_15 != 0;
    assume {:nonnull} Connect_1 != 0;
    assume Connect_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L19;

  L19:
    Status_9 := -1073741811;
    goto L14;

  anon21_Then:
    goto L15;

  L15:
    call {:si_unique_call 750} Status_9 := AvCip_AllocateResources(CipData_3);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_9 >= 0;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    call {:si_unique_call 751} Status_9 := Av1394_Listen(CipData_3);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status_9 < 0;
    assume {:nonnull} CipData_3 != 0;
    assume CipData_3 > 0;
    call {:si_unique_call 752} vslice_dummy_var_132 := AvCip_FreeResources(CipData_3);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} 0 <= Status_9;
    goto L14;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} 0 > Status_9;
    goto L14;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    goto L19;

  anon19_Then:
    assume {:partition} BusExtension_15 == 0;
    goto L15;
}



procedure {:origName "AvCip_ProcessAttachBuffer_CR"} AvCip_ProcessAttachBuffer_CR(actual_DeviceObject_24: int, actual_Irp_24: int, actual_DescriptorData_2: int) returns (Tmp_349: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessAttachBuffer_CR"} AvCip_ProcessAttachBuffer_CR(actual_DeviceObject_24: int, actual_Irp_24: int, actual_DescriptorData_2: int) returns (Tmp_349: int)
{
  var {:pointer} CipData_5: int;
  var {:pointer} Irp_24: int;
  var {:pointer} DescriptorData_2: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;

  anon0:
    Irp_24 := actual_Irp_24;
    DescriptorData_2 := actual_DescriptorData_2;
    assume {:nonnull} DescriptorData_2 != 0;
    assume DescriptorData_2 > 0;
    havoc CipData_5;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L7;

  L7:
    assume {:nonnull} DescriptorData_2 != 0;
    assume DescriptorData_2 > 0;
    call {:si_unique_call 753} vslice_dummy_var_133 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_2), 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    Tmp_349 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:nonnull} CipData_5 != 0;
    assume CipData_5 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto L14;

  L14:
    call {:si_unique_call 754} vslice_dummy_var_135 := corral_nondet();
    goto L7;

  anon7_Then:
    call {:si_unique_call 755} vslice_dummy_var_134 := KeCancelTimer(0);
    goto L14;
}



procedure {:origName "Av1394_AllocateResources"} Av1394_AllocateResources(actual_CipData_6: int) returns (Tmp_351: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_AllocateResources"} Av1394_AllocateResources(actual_CipData_6: int) returns (Tmp_351: int)
{
  var {:pointer} Irb_3: int;
  var {:pointer} sdv_285: int;
  var {:scalar} Status_11: int;
  var {:pointer} CipData_6: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;

  anon0:
    CipData_6 := actual_CipData_6;
    Status_11 := 0;
    Irb_3 := 0;
    call {:si_unique_call 756} sdv_285 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_3 := sdv_285;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Irb_3 != 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    goto L22;

  L22:
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    havoc vslice_dummy_var_302;
    call {:si_unique_call 757} Status_11 := Av_SubmitIrpSynch#1(vslice_dummy_var_302, 0, Irb_3);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Status_11 >= 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    goto L30;

  L30:
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    havoc vslice_dummy_var_303;
    call {:si_unique_call 758} ExFreeToNPagedLookasideList#1(vslice_dummy_var_303, Irb_3);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  L34:
    Tmp_351 := Status_11;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 > Status_11;
    goto L30;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    assume {:nonnull} CipData_6 != 0;
    assume CipData_6 > 0;
    assume {:nonnull} Irb_3 != 0;
    assume Irb_3 > 0;
    goto L22;

  anon12_Then:
    assume {:partition} Irb_3 == 0;
    Status_11 := -1073741670;
    goto L34;
}



procedure {:origName "AvCip_HandleFrameNotification"} AvCip_HandleFrameNotification(actual_CipData_7: int, actual_DescriptorData_3: int) returns (Tmp_353: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_353 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_HandleFrameNotification"} AvCip_HandleFrameNotification(actual_CipData_7: int, actual_DescriptorData_3: int) returns (Tmp_353: int)
{
  var {:pointer} NotifyFrameContext: int;
  var {:scalar} sdv_287: int;
  var {:pointer} sdv_288: int;
  var {:pointer} NotifyFrame: int;
  var {:scalar} NotifyInfo: int;
  var {:pointer} CipData_7: int;
  var {:pointer} DescriptorData_3: int;

  anon0:
    call {:si_unique_call 759} NotifyInfo := __HAVOC_malloc(12);
    CipData_7 := actual_CipData_7;
    DescriptorData_3 := actual_DescriptorData_3;
    goto L6;

  L6:
    call {:si_unique_call 760} NotifyFrameContext, sdv_287, sdv_288, NotifyFrame := AvCip_HandleFrameNotification_loop_L6(NotifyFrameContext, sdv_287, sdv_288, NotifyFrame, NotifyInfo, CipData_7, DescriptorData_3);
    goto L6_last;

  L6_last:
    call {:si_unique_call 763} sdv_287 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_287 != 0;
    Tmp_353 := 0;
    return;

  anon3_Then:
    assume {:partition} sdv_287 == 0;
    assume {:nonnull} DescriptorData_3 != 0;
    assume DescriptorData_3 > 0;
    call {:si_unique_call 761} sdv_288 := RemoveHeadList(NotifyFrameList__CIP_DESCRIPTOR_DATA(DescriptorData_3));
    NotifyFrameContext := sdv_288;
    assume {:nonnull} NotifyFrameContext != 0;
    assume NotifyFrameContext > 0;
    havoc NotifyFrame;
    assume {:nonnull} NotifyFrame != 0;
    assume NotifyFrame > 0;
    assume {:nonnull} CipData_7 != 0;
    assume CipData_7 > 0;
    assume {:nonnull} CipData_7 != 0;
    assume CipData_7 > 0;
    assume {:nonnull} NotifyInfo != 0;
    assume NotifyInfo > 0;
    assume {:nonnull} NotifyFrame != 0;
    assume NotifyFrame > 0;
    assume {:nonnull} NotifyInfo != 0;
    assume NotifyInfo > 0;
    assume {:nonnull} NotifyInfo != 0;
    assume NotifyInfo > 0;
    assume {:nonnull} NotifyFrame != 0;
    assume NotifyFrame > 0;
    call {:si_unique_call 762} sdv_ExFreePool(0);
    goto anon3_Then_dummy;

  anon3_Then_dummy:
    assume false;
    return;
}



procedure {:origName "AvCip_Talk"} AvCip_Talk(actual_BusExtension_16: int, actual_Irp_25: int, actual_Request_3: int) returns (Tmp_355: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_Talk"} AvCip_Talk(actual_BusExtension_16: int, actual_Irp_25: int, actual_Request_3: int) returns (Tmp_355: int)
{
  var {:pointer} Tmp_356: int;
  var {:scalar} ResultLength_1: int;
  var {:scalar} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} Status_12: int;
  var {:pointer} CipData_8: int;
  var {:pointer} Connect_2: int;
  var {:pointer} sdv_294: int;
  var {:pointer} sdv_296: int;
  var {:scalar} KeyLength: int;
  var {:scalar} Tmp_360: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} BusExtension_16: int;
  var {:pointer} Request_3: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;

  anon0:
    call {:si_unique_call 764} uniTempName := __HAVOC_malloc(12);
    BusExtension_16 := actual_BusExtension_16;
    Request_3 := actual_Request_3;
    call {:si_unique_call 765} vslice_dummy_var_137 := __HAVOC_malloc(36);
    Status_12 := 0;
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    havoc Connect_2;
    assume {:nonnull} Connect_2 != 0;
    assume Connect_2 > 0;
    havoc CipData_8;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BusExtension_16 != 0;
    assume {:nonnull} Connect_2 != 0;
    assume Connect_2 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L14;

  L14:
    Status_12 := -1073741811;
    goto L17;

  L17:
    Tmp_355 := Status_12;
    goto LM2;

  LM2:
    return;

  anon39_Then:
    goto L12;

  L12:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    Status_12 := -1073741811;
    goto L17;

  anon37_Then:
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    Status_12 := -1073741811;
    goto L17;

  anon42_Then:
    goto L21;

  L21:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} Request_3 != 0;
    assume Request_3 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BusExtension_16 != 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 766} Status_12 := IoOpenDeviceRegistryKey(0, 2, 1, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status_12 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_360;
    call {:si_unique_call 767} sdv_294 := ExAllocatePoolWithTag(0, Tmp_360, 943206710);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    KeyLength := 20;
    call {:si_unique_call 768} sdv_296 := ExAllocatePoolWithTag(0, KeyLength, 943206710);
    KeyInfo := sdv_296;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_357;
    call {:si_unique_call 769} sdv_RtlZeroMemory(0, Tmp_357);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 770} vslice_dummy_var_138 := corral_nondet();
    call {:si_unique_call 771} Tmp_358 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    call {:si_unique_call 772} Status_12 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_358);
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    havoc ResultLength_1;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status_12 >= 0;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_356 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    goto L73;

  L73:
    call {:si_unique_call 773} sdv_ExFreePool(0);
    goto L57;

  L57:
    call {:si_unique_call 774} sdv_ExFreePool(0);
    goto L45;

  L45:
    call {:si_unique_call 775} vslice_dummy_var_136 := ZwClose(0);
    goto L27;

  L27:
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 776} Status_12 := AvCip_AllocateResources(CipData_8);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_12 >= 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 777} Status_12 := Av1394_Talk(CipData_8);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Status_12 < 0;
    assume {:nonnull} CipData_8 != 0;
    assume CipData_8 > 0;
    call {:si_unique_call 778} vslice_dummy_var_139 := AvCip_FreeResources(CipData_8);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon47_Then:
    assume {:partition} 0 <= Status_12;
    goto L17;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:partition} 0 > Status_12;
    goto L17;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    goto L73;

  anon44_Then:
    assume {:partition} 0 > Status_12;
    goto L73;

  anon51_Then:
    assume {:partition} KeyInfo == 0;
    goto L57;

  anon50_Then:
    goto L45;

  anon43_Then:
    assume {:partition} 0 > Status_12;
    goto L27;

  anon49_Then:
    assume {:partition} BusExtension_16 == 0;
    goto L27;

  anon41_Then:
    goto L21;

  anon40_Then:
    goto L21;

  anon38_Then:
    goto L14;

  anon48_Then:
    assume {:partition} BusExtension_16 == 0;
    goto L12;
}



procedure {:origName "Av1394_Stop"} Av1394_Stop(actual_CipData_9: int) returns (Tmp_361: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_Stop"} Av1394_Stop(actual_CipData_9: int) returns (Tmp_361: int)
{
  var {:pointer} Irb_4: int;
  var {:pointer} sdv_299: int;
  var {:scalar} Status_13: int;
  var {:pointer} CipData_9: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;

  anon0:
    CipData_9 := actual_CipData_9;
    Status_13 := 0;
    Irb_4 := 0;
    call {:si_unique_call 779} sdv_299 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_4 := sdv_299;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irb_4 != 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} CipData_9 != 0;
    assume CipData_9 > 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} Irb_4 != 0;
    assume Irb_4 > 0;
    assume {:nonnull} CipData_9 != 0;
    assume CipData_9 > 0;
    havoc vslice_dummy_var_304;
    call {:si_unique_call 780} Status_13 := Av_SubmitIrpSynch#1(vslice_dummy_var_304, 0, Irb_4);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CipData_9 != 0;
    assume CipData_9 > 0;
    havoc vslice_dummy_var_305;
    call {:si_unique_call 781} ExFreeToNPagedLookasideList#1(vslice_dummy_var_305, Irb_4);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  L25:
    Tmp_361 := Status_13;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Irb_4 == 0;
    Status_13 := -1073741670;
    goto L25;
}



procedure {:origName "AvCip_SetChannel"} AvCip_SetChannel(actual_CipData_10: int, actual_Channel: int) returns (Tmp_363: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_SetChannel"} AvCip_SetChannel(actual_CipData_10: int, actual_Channel: int) returns (Tmp_363: int)
{
  var {:scalar} Status_14: int;
  var {:scalar} AvRequest: int;
  var {:pointer} CipData_10: int;
  var {:scalar} Channel: int;

  anon0:
    call {:si_unique_call 782} AvRequest := __HAVOC_malloc(460);
    CipData_10 := actual_CipData_10;
    Channel := actual_Channel;
    Status_14 := 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 783} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 784} Status_14 := AvCip_Stop(0, 0, AvRequest);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Status_14 >= 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 785} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 786} Status_14 := AvCip_Listen(0, 0, AvRequest);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L9;

  L9:
    Tmp_363 := Status_14;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    call {:si_unique_call 787} Status_14 := AvCip_Talk(0, 0, AvRequest);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L9;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:partition} 0 > Status_14;
    goto L9;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    goto L9;

  anon18_Then:
    assume {:nonnull} CipData_10 != 0;
    assume CipData_10 > 0;
    goto L9;
}



procedure {:origName "AvCip_Destroy"} AvCip_Destroy(actual_CipData_11: int) returns (Tmp_365: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_Destroy"} AvCip_Destroy(actual_CipData_11: int) returns (Tmp_365: int)
{
  var {:scalar} sdv_304: int;
  var {:scalar} Status_15: int;
  var {:pointer} sdv_306: int;
  var {:scalar} AvRequest_1: int;
  var {:pointer} FrameContext_2: int;
  var {:pointer} CipData_11: int;

  anon0:
    call {:si_unique_call 788} AvRequest_1 := __HAVOC_malloc(460);
    CipData_11 := actual_CipData_11;
    Status_15 := 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} CipData_11 != 0;
    assume {:nonnull} CipData_11 != 0;
    assume CipData_11 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 789} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    assume {:nonnull} CipData_11 != 0;
    assume CipData_11 > 0;
    call {:si_unique_call 790} Status_15 := AvCip_Stop(0, 0, AvRequest_1);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L10;

  L10:
    call {:si_unique_call 791} sdv_304, sdv_306, FrameContext_2 := AvCip_Destroy_loop_L10(sdv_304, sdv_306, FrameContext_2, CipData_11);
    goto L10_last;

  L10_last:
    call {:si_unique_call 795} sdv_304 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_304 != 0;
    call {:si_unique_call 792} sdv_ExFreePool(0);
    goto L8;

  L8:
    Tmp_365 := Status_15;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} sdv_304 == 0;
    assume {:nonnull} CipData_11 != 0;
    assume CipData_11 > 0;
    call {:si_unique_call 793} sdv_306 := RemoveHeadList(FrameList__CIP_DATA(CipData_11));
    FrameContext_2 := sdv_306;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} FrameContext_2 != 0;
    call {:si_unique_call 794} sdv_ExFreePool(0);
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} FrameContext_2 == 0;
    goto anon15_Then_dummy;

  anon15_Then_dummy:
    assume false;
    return;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    goto L10;

  anon13_Then:
    assume {:partition} CipData_11 == 0;
    goto L8;
}



procedure {:origName "AvCip_SetSpeed"} AvCip_SetSpeed(actual_CipData_12: int, actual_Speed: int) returns (Tmp_367: int);
  free ensures {:va_keep} Tmp_367 == -1073741790 || Tmp_367 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_SetSpeed"} AvCip_SetSpeed(actual_CipData_12: int, actual_Speed: int) returns (Tmp_367: int)
{
  var {:scalar} Status_16: int;
  var {:pointer} CipData_12: int;
  var {:scalar} Speed: int;

  anon0:
    CipData_12 := actual_CipData_12;
    Speed := actual_Speed;
    Status_16 := 0;
    assume {:nonnull} CipData_12 != 0;
    assume CipData_12 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Status_16 := -1073741790;
    goto L8;

  L8:
    Tmp_367 := Status_16;
    return;

  anon3_Then:
    assume {:nonnull} CipData_12 != 0;
    assume CipData_12 > 0;
    goto L8;
}



procedure {:origName "AvCip_CancelFrames"} AvCip_CancelFrames(actual_BusExtension_17: int, actual_Irp_26: int, actual_Request_4: int) returns (Tmp_369: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_369 == 0 || Tmp_369 == -1073741275 || Tmp_369 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_CancelFrames"} AvCip_CancelFrames(actual_BusExtension_17: int, actual_Irp_26: int, actual_Request_4: int) returns (Tmp_369: int)
{
  var {:pointer} Frame: int;
  var {:pointer} CancelFrame: int;
  var {:scalar} Status_17: int;
  var {:pointer} CipData_13: int;
  var {:pointer} Connect_3: int;
  var {:scalar} Irql_8: int;
  var {:pointer} FrameContext_3: int;
  var {:pointer} Tmp_370: int;
  var {:pointer} Request_4: int;
  var vslice_dummy_var_140: int;

  anon0:
    Request_4 := actual_Request_4;
    Status_17 := 0;
    assume {:nonnull} Request_4 != 0;
    assume Request_4 > 0;
    CancelFrame := CancelFrame__AV_61883_REQUEST(Request_4);
    assume {:nonnull} CancelFrame != 0;
    assume CancelFrame > 0;
    havoc Connect_3;
    assume {:nonnull} Connect_3 != 0;
    assume Connect_3 > 0;
    havoc CipData_13;
    assume {:nonnull} CancelFrame != 0;
    assume CancelFrame > 0;
    havoc Frame;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Connect_3 != 0;
    assume {:nonnull} Connect_3 != 0;
    assume Connect_3 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Frame != 0;
    assume {:nonnull} Frame != 0;
    assume Frame > 0;
    havoc FrameContext_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} FrameContext_3 != 0;
    call {:si_unique_call 796} Tmp_370 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    call {:si_unique_call 797} sdv_KeAcquireSpinLock(0, Tmp_370);
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    havoc Irql_8;
    assume {:nonnull} CipData_13 != 0;
    assume CipData_13 > 0;
    call {:si_unique_call 798} vslice_dummy_var_140 := sdv_RemoveEntryList(0);
    call {:si_unique_call 799} sdv_ExFreePool(0);
    assume {:nonnull} Frame != 0;
    assume Frame > 0;
    assume {:nonnull} CipData_13 != 0;
    assume CipData_13 > 0;
    assume {:nonnull} CipData_13 != 0;
    assume CipData_13 > 0;
    call {:si_unique_call 800} sdv_KeReleaseSpinLock(0, Irql_8);
    goto L40;

  L40:
    Tmp_369 := Status_17;
    return;

  anon12_Then:
    assume {:partition} FrameContext_3 == 0;
    Status_17 := -1073741275;
    goto L40;

  anon10_Then:
    assume {:partition} Frame == 0;
    Status_17 := -1073741811;
    goto L40;

  anon9_Then:
    Status_17 := -1073741811;
    goto L40;

  anon11_Then:
    assume {:partition} Connect_3 == 0;
    Status_17 := -1073741811;
    goto L40;
}



procedure {:origName "Av1394_Listen"} Av1394_Listen(actual_CipData_14: int) returns (Tmp_371: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_Listen"} Av1394_Listen(actual_CipData_14: int) returns (Tmp_371: int)
{
  var {:pointer} Irb_5: int;
  var {:pointer} sdv_308: int;
  var {:scalar} Status_18: int;
  var {:pointer} CipData_14: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;

  anon0:
    CipData_14 := actual_CipData_14;
    Status_18 := 0;
    Irb_5 := 0;
    call {:si_unique_call 801} sdv_308 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_5 := sdv_308;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irb_5 != 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} CipData_14 != 0;
    assume CipData_14 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} Irb_5 != 0;
    assume Irb_5 > 0;
    assume {:nonnull} CipData_14 != 0;
    assume CipData_14 > 0;
    havoc vslice_dummy_var_306;
    call {:si_unique_call 802} Status_18 := Av_SubmitIrpSynch#1(vslice_dummy_var_306, 0, Irb_5);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CipData_14 != 0;
    assume CipData_14 > 0;
    havoc vslice_dummy_var_307;
    call {:si_unique_call 803} ExFreeToNPagedLookasideList#1(vslice_dummy_var_307, Irb_5);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L27;

  L27:
    Tmp_371 := Status_18;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Irb_5 == 0;
    Status_18 := -1073741670;
    goto L27;
}



procedure {:origName "AvCip_CopyBlock"} AvCip_CopyBlock(actual_CipData_15: int) returns (Tmp_373: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_373 == 1 || Tmp_373 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_CopyBlock"} AvCip_CopyBlock(actual_CipData_15: int) returns (Tmp_373: int)
{
  var {:scalar} TransmitTime: int;
  var {:scalar} Tmp_375: int;
  var {:pointer} CipData_15: int;
  var vslice_dummy_var_141: int;

  anon0:
    call {:si_unique_call 804} TransmitTime := __HAVOC_malloc(40);
    CipData_15 := actual_CipData_15;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    Tmp_373 := 1;
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L6;

  L6:
    Tmp_373 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    havoc Tmp_375;
    call {:si_unique_call 805} vslice_dummy_var_141 := Av1394_UpdateCycleTime(TransmitTime, Tmp_375);
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    assume {:nonnull} TransmitTime != 0;
    assume TransmitTime > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_373 := 1;
    goto L1;

  anon15_Then:
    goto L6;

  anon12_Then:
    assume {:nonnull} CipData_15 != 0;
    assume CipData_15 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_373 := 1;
    goto L1;

  anon14_Then:
    goto L6;
}



procedure {:origName "AvCip_SetCipIsochParameters"} AvCip_SetCipIsochParameters(actual_CipData_17: int, actual_RX: int, actual_RX_1: int, actual_TX: int, actual_TX_1: int) returns (Tmp_378: int);
  free ensures {:va_keep} Tmp_378 == -1073741790 || Tmp_378 == -1073741811 || Tmp_378 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_SetCipIsochParameters"} AvCip_SetCipIsochParameters(actual_CipData_17: int, actual_RX: int, actual_RX_1: int, actual_TX: int, actual_TX_1: int) returns (Tmp_378: int)
{
  var {:scalar} Status_20: int;
  var {:pointer} CipData_17: int;
  var {:scalar} RX: int;
  var {:scalar} RX_1: int;
  var {:scalar} TX: int;
  var {:scalar} TX_1: int;

  anon0:
    CipData_17 := actual_CipData_17;
    RX := actual_RX;
    RX_1 := actual_RX_1;
    TX := actual_TX;
    TX_1 := actual_TX_1;
    Status_20 := 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Status_20 := -1073741790;
    goto L8;

  L8:
    Tmp_378 := Status_20;
    return;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} RX > 10;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TX > 10;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} RX_1 > 5000;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} TX_1 > 5000;
    Status_20 := -1073741811;
    goto L8;

  anon14_Then:
    assume {:partition} 5000 >= TX_1;
    goto L9;

  L9:
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    assume {:nonnull} CipData_17 != 0;
    assume CipData_17 > 0;
    goto L8;

  anon13_Then:
    assume {:partition} 5000 >= RX_1;
    goto L9;

  anon12_Then:
    assume {:partition} 10 >= TX;
    goto L9;

  anon11_Then:
    assume {:partition} 10 >= RX;
    goto L9;
}



procedure {:origName "AvCip_FreeResources"} AvCip_FreeResources(actual_CipData_18: int) returns (Tmp_380: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_FreeResources"} AvCip_FreeResources(actual_CipData_18: int) returns (Tmp_380: int)
{
  var {:pointer} Tmp_381: int;
  var {:pointer} Tmp_382: int;
  var {:scalar} sdv_314: int;
  var {:scalar} Status_21: int;
  var {:scalar} sdv_315: int;
  var {:pointer} DescriptorData_5: int;
  var {:pointer} sdv_318: int;
  var {:scalar} sdv_321: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} PriorState: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:scalar} Irql_10: int;
  var {:pointer} CipData_18: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;

  anon0:
    CipData_18 := actual_CipData_18;
    call {:si_unique_call 806} Tmp_381 := __HAVOC_malloc(360);
    call {:si_unique_call 807} Tmp_382 := __HAVOC_malloc(360);
    call {:si_unique_call 808} Tmp_385 := __HAVOC_malloc(360);
    call {:si_unique_call 809} Tmp_386 := __HAVOC_malloc(360);
    Status_21 := 0;
    call {:si_unique_call 810} Tmp_387 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    call {:si_unique_call 811} sdv_KeAcquireSpinLock(0, Tmp_387);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    havoc Irql_10;
    goto L11;

  L11:
    call {:si_unique_call 812} Tmp_381, Tmp_382, sdv_314, Status_21, sdv_315, DescriptorData_5, sdv_318, sdv_321, Tmp_385, PriorState, Tmp_386, Tmp_387, Irql_10, vslice_dummy_var_142, vslice_dummy_var_143, vslice_dummy_var_144 := AvCip_FreeResources_loop_L11(Tmp_381, Tmp_382, sdv_314, Status_21, sdv_315, DescriptorData_5, sdv_318, sdv_321, Tmp_385, PriorState, Tmp_386, Tmp_387, Irql_10, CipData_18, vslice_dummy_var_142, vslice_dummy_var_143, vslice_dummy_var_144);
    goto L11_last;

  L11_last:
    call {:si_unique_call 838} sdv_314 := sdv_IsListEmpty(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_314 != 0;
    call {:si_unique_call 813} sdv_KeReleaseSpinLock(0, Irql_10);
    call {:si_unique_call 814} Status_21 := Av1394_FreeResources(CipData_18);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto L27;

  L27:
    Tmp_380 := Status_21;
    goto LM2;

  LM2:
    return;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:partition} sdv_314 == 0;
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    call {:si_unique_call 815} sdv_318 := RemoveHeadList(DescriptorList__CIP_DATA(CipData_18));
    DescriptorData_5 := sdv_318;
    call {:si_unique_call 816} sdv_KeReleaseSpinLock(0, Irql_10);
    call {:si_unique_call 817} vslice_dummy_var_142 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 818} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 819} Tmp_387 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    call {:si_unique_call 820} sdv_KeAcquireSpinLock(0, Tmp_387);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    havoc Irql_10;
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L45;

  L45:
    call {:si_unique_call 821} sdv_KeReleaseSpinLock(0, Irql_10);
    call {:si_unique_call 822} sdv_315 := corral_nondet();
    PriorState := sdv_315;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} PriorState == 1;
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L58;

  L58:
    call {:si_unique_call 823} Status_21 := Av1394_DetachBuffer(CipData_18, DescriptorData_5);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Status_21 >= 0;
    goto L53;

  L53:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} DescriptorData_5 != 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 824} IoFreeIrp(0);
    goto L68;

  L68:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc vslice_dummy_var_308;
    havoc vslice_dummy_var_309;
    call {:si_unique_call 825} ExFreeToNPagedLookasideList#1(vslice_dummy_var_308, vslice_dummy_var_309);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    call {:si_unique_call 826} IoFreeIrp(0);
    goto L76;

  L76:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc vslice_dummy_var_310;
    havoc vslice_dummy_var_311;
    call {:si_unique_call 827} ExFreeToNPagedLookasideList#1(vslice_dummy_var_310, vslice_dummy_var_311);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L80;

  L80:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    call {:si_unique_call 828} IoFreeMdl(0);
    goto L84;

  L84:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_382;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    call {:si_unique_call 829} IoFreeMdl(0);
    goto L89;

  L89:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 830} sdv_ExFreePool(0);
    goto L94;

  L94:
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 831} sdv_ExFreePool(0);
    goto L98;

  L98:
    call {:si_unique_call 832} sdv_ExFreePool(0);
    goto L64;

  L64:
    call {:si_unique_call 833} Tmp_387 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    call {:si_unique_call 834} sdv_KeAcquireSpinLock(0, Tmp_387);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    havoc Irql_10;
    goto L64_dummy;

  L64_dummy:
    assume false;
    return;

  anon51_Then:
    goto L98;

  anon50_Then:
    goto L94;

  anon60_Then:
    goto L89;

  anon59_Then:
    goto L84;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    goto L80;

  anon48_Then:
    goto L76;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon47_Then:
    goto L72;

  anon46_Then:
    goto L68;

  anon43_Then:
    assume {:partition} DescriptorData_5 == 0;
    goto L64;

  anon45_Then:
    assume {:partition} 0 > Status_21;
    goto L27;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    call {:si_unique_call 835} vslice_dummy_var_143 := KeCancelTimer(0);
    goto L58;

  anon55_Then:
    assume {:partition} PriorState != 1;
    goto L53;

  anon42_Then:
    call {:si_unique_call 836} sdv_321 := sdv_IsListEmpty(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_321 != 0;
    goto L108;

  L108:
    assume {:nonnull} CipData_18 != 0;
    assume CipData_18 > 0;
    assume {:nonnull} DescriptorData_5 != 0;
    assume DescriptorData_5 > 0;
    goto L45;

  anon52_Then:
    assume {:partition} sdv_321 == 0;
    call {:si_unique_call 837} vslice_dummy_var_144 := AvCip_HandleFrameNotification(CipData_18, DescriptorData_5);
    goto L108;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av1394_DetachBuffer"} Av1394_DetachBuffer(actual_CipData_19: int, actual_DescriptorData_6: int) returns (Tmp_388: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_DetachBuffer"} Av1394_DetachBuffer(actual_CipData_19: int, actual_DescriptorData_6: int) returns (Tmp_388: int)
{
  var {:pointer} Irb_6: int;
  var {:pointer} sdv_323: int;
  var {:scalar} Status_22: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} CipData_19: int;
  var {:pointer} DescriptorData_6: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;

  anon0:
    CipData_19 := actual_CipData_19;
    DescriptorData_6 := actual_DescriptorData_6;
    call {:si_unique_call 839} Tmp_390 := __HAVOC_malloc(360);
    Status_22 := 0;
    Irb_6 := 0;
    call {:si_unique_call 840} sdv_323 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_6 := sdv_323;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Irb_6 != 0;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} DescriptorData_6 != 0;
    assume DescriptorData_6 > 0;
    havoc Tmp_390;
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    goto L20;

  L20:
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    havoc vslice_dummy_var_312;
    call {:si_unique_call 841} Status_22 := Av_SubmitIrpSynch#1(vslice_dummy_var_312, 0, Irb_6);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CipData_19 != 0;
    assume CipData_19 > 0;
    havoc vslice_dummy_var_313;
    call {:si_unique_call 842} ExFreeToNPagedLookasideList#1(vslice_dummy_var_313, Irb_6);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L28;

  L28:
    Tmp_388 := Status_22;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:nonnull} Irb_6 != 0;
    assume Irb_6 > 0;
    goto L20;

  anon9_Then:
    assume {:partition} Irb_6 == 0;
    Status_22 := -1073741670;
    goto L28;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_145: int;

  anon0:
    call {:si_unique_call 843} vslice_dummy_var_145 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av1394_FreeResources"} Av1394_FreeResources(actual_CipData_20: int) returns (Tmp_393: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_FreeResources"} Av1394_FreeResources(actual_CipData_20: int) returns (Tmp_393: int)
{
  var {:pointer} Irb_7: int;
  var {:pointer} sdv_325: int;
  var {:scalar} Status_23: int;
  var {:pointer} CipData_20: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;

  anon0:
    CipData_20 := actual_CipData_20;
    Status_23 := 0;
    Irb_7 := 0;
    call {:si_unique_call 844} sdv_325 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_7 := sdv_325;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Irb_7 != 0;
    assume {:nonnull} Irb_7 != 0;
    assume Irb_7 > 0;
    assume {:nonnull} Irb_7 != 0;
    assume Irb_7 > 0;
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    assume {:nonnull} Irb_7 != 0;
    assume Irb_7 > 0;
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    havoc vslice_dummy_var_314;
    call {:si_unique_call 845} Status_23 := Av_SubmitIrpSynch#1(vslice_dummy_var_314, 0, Irb_7);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Status_23 >= 0;
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    goto L21;

  L21:
    assume {:nonnull} CipData_20 != 0;
    assume CipData_20 > 0;
    havoc vslice_dummy_var_315;
    call {:si_unique_call 846} ExFreeToNPagedLookasideList#1(vslice_dummy_var_315, Irb_7);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  L25:
    Tmp_393 := Status_23;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} 0 > Status_23;
    goto L21;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} Irb_7 == 0;
    Status_23 := -1073741670;
    goto L25;
}



procedure {:origName "AvCip_SetCipPacketSize"} AvCip_SetCipPacketSize(actual_CipData_21: int, actual_CipPacketSize: int) returns (Tmp_395: int);
  free ensures {:va_keep} Tmp_395 == -1073741790 || Tmp_395 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_SetCipPacketSize"} AvCip_SetCipPacketSize(actual_CipData_21: int, actual_CipPacketSize: int) returns (Tmp_395: int)
{
  var {:scalar} Status_24: int;
  var {:pointer} CipData_21: int;
  var {:scalar} CipPacketSize: int;

  anon0:
    CipData_21 := actual_CipData_21;
    CipPacketSize := actual_CipPacketSize;
    Status_24 := 0;
    assume {:nonnull} CipData_21 != 0;
    assume CipData_21 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Status_24 := -1073741790;
    goto L8;

  L8:
    Tmp_395 := Status_24;
    return;

  anon3_Then:
    assume {:nonnull} CipData_21 != 0;
    assume CipData_21 > 0;
    goto L8;
}



procedure {:origName "AvCip_AllocateResources"} AvCip_AllocateResources(actual_CipData_22: int) returns (Tmp_397: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_AllocateResources"} AvCip_AllocateResources(actual_CipData_22: int) returns (Tmp_397: int)
{
  var {:pointer} sdv_327: int;
  var {:pointer} Tmp_399: int;
  var {:scalar} Tmp_400: int;
  var {:scalar} iPacket: int;
  var {:pointer} Tmp_401: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:scalar} Tmp_407: int;
  var {:pointer} Tmp_409: int;
  var {:scalar} Status_25: int;
  var {:scalar} NumDescriptors: int;
  var {:scalar} Tmp_410: int;
  var {:pointer} Tmp_411: int;
  var {:pointer} Tmp_412: int;
  var {:pointer} Tmp_413: int;
  var {:pointer} Tmp_414: int;
  var {:pointer} sdv_329: int;
  var {:pointer} DescriptorData_7: int;
  var {:pointer} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} sdv_331: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} sdv_332: int;
  var {:pointer} sdv_333: int;
  var {:pointer} Tmp_418: int;
  var {:scalar} NumPackets: int;
  var {:scalar} iAttach: int;
  var {:scalar} Tmp_419: int;
  var {:pointer} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:pointer} sdv_336: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} Irql_11: int;
  var {:pointer} sdv_337: int;
  var {:pointer} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:pointer} Tmp_429: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:pointer} Tmp_434: int;
  var {:pointer} CipData_22: int;
  var boogieTmp: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;

  anon0:
    CipData_22 := actual_CipData_22;
    call {:si_unique_call 847} Tmp_399 := __HAVOC_malloc(360);
    call {:si_unique_call 848} Tmp_401 := __HAVOC_malloc(360);
    call {:si_unique_call 849} Tmp_402 := __HAVOC_malloc(360);
    call {:si_unique_call 850} Tmp_406 := __HAVOC_malloc(360);
    call {:si_unique_call 851} Tmp_409 := __HAVOC_malloc(360);
    call {:si_unique_call 852} Tmp_411 := __HAVOC_malloc(360);
    call {:si_unique_call 853} Tmp_412 := __HAVOC_malloc(360);
    call {:si_unique_call 854} Tmp_413 := __HAVOC_malloc(360);
    call {:si_unique_call 855} Tmp_414 := __HAVOC_malloc(360);
    call {:si_unique_call 856} Tmp_415 := __HAVOC_malloc(360);
    call {:si_unique_call 857} Tmp_416 := __HAVOC_malloc(360);
    call {:si_unique_call 858} Tmp_417 := __HAVOC_malloc(360);
    call {:si_unique_call 859} Tmp_420 := __HAVOC_malloc(360);
    call {:si_unique_call 860} Tmp_421 := __HAVOC_malloc(360);
    call {:si_unique_call 861} Tmp_422 := __HAVOC_malloc(360);
    call {:si_unique_call 862} Tmp_423 := __HAVOC_malloc(360);
    call {:si_unique_call 863} Tmp_424 := __HAVOC_malloc(360);
    call {:si_unique_call 864} Tmp_425 := __HAVOC_malloc(360);
    call {:si_unique_call 865} Tmp_426 := __HAVOC_malloc(360);
    call {:si_unique_call 866} Tmp_427 := __HAVOC_malloc(360);
    call {:si_unique_call 867} Tmp_429 := __HAVOC_malloc(360);
    call {:si_unique_call 868} Tmp_431 := __HAVOC_malloc(360);
    call {:si_unique_call 869} Tmp_432 := __HAVOC_malloc(360);
    call {:si_unique_call 870} Tmp_433 := __HAVOC_malloc(360);
    call {:si_unique_call 871} Tmp_434 := __HAVOC_malloc(360);
    Status_25 := 0;
    DescriptorData_7 := 0;
    call {:si_unique_call 872} Status_25 := Av1394_AllocateResources(CipData_22);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Status_25 < 0;
    goto L110;

  L110:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} DescriptorData_7 != 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    call {:si_unique_call 873} IoFreeIrp(0);
    goto L115;

  L115:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc vslice_dummy_var_316;
    havoc vslice_dummy_var_317;
    call {:si_unique_call 874} ExFreeToNPagedLookasideList#1(vslice_dummy_var_316, vslice_dummy_var_317);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto L119;

  L119:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 875} IoFreeIrp(0);
    goto L123;

  L123:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc vslice_dummy_var_318;
    havoc vslice_dummy_var_319;
    call {:si_unique_call 876} ExFreeToNPagedLookasideList#1(vslice_dummy_var_318, vslice_dummy_var_319);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L127;

  L127:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_433;
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_401;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    call {:si_unique_call 877} IoFreeMdl(0);
    goto L131;

  L131:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    call {:si_unique_call 878} sdv_ExFreePool(0);
    goto L136;

  L136:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 879} sdv_ExFreePool(0);
    goto L140;

  L140:
    call {:si_unique_call 880} sdv_ExFreePool(0);
    goto L111;

  L111:
    call {:si_unique_call 881} vslice_dummy_var_147 := AvCip_FreeResources(CipData_22);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    Tmp_397 := Status_25;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    goto L140;

  anon78_Then:
    goto L136;

  anon90_Then:
    goto L131;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    goto L127;

  anon76_Then:
    goto L123;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    goto L119;

  anon74_Then:
    goto L115;

  anon73_Then:
    assume {:partition} DescriptorData_7 == 0;
    goto L111;

  anon63_Then:
    assume {:partition} 0 <= Status_25;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumDescriptors;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumPackets;
    goto L22;

  L22:
    iAttach := 0;
    goto L23;

  L23:
    call {:si_unique_call 882} sdv_327, Tmp_399, Tmp_400, iPacket, Tmp_402, Tmp_403, Tmp_404, Tmp_405, Tmp_406, Tmp_407, Tmp_409, Status_25, Tmp_410, Tmp_411, Tmp_412, Tmp_413, Tmp_414, sdv_329, DescriptorData_7, Tmp_415, Tmp_416, sdv_331, Tmp_417, sdv_332, sdv_333, Tmp_418, iAttach, Tmp_419, Tmp_420, Tmp_421, sdv_336, Tmp_422, Tmp_423, Tmp_424, Tmp_425, Irql_11, sdv_337, Tmp_426, Tmp_427, Tmp_429, Tmp_430, Tmp_431, Tmp_432, Tmp_434, boogieTmp, vslice_dummy_var_146 := AvCip_AllocateResources_loop_L23(sdv_327, Tmp_399, Tmp_400, iPacket, Tmp_402, Tmp_403, Tmp_404, Tmp_405, Tmp_406, Tmp_407, Tmp_409, Status_25, NumDescriptors, Tmp_410, Tmp_411, Tmp_412, Tmp_413, Tmp_414, sdv_329, DescriptorData_7, Tmp_415, Tmp_416, sdv_331, Tmp_417, sdv_332, sdv_333, Tmp_418, NumPackets, iAttach, Tmp_419, Tmp_420, Tmp_421, sdv_336, Tmp_422, Tmp_423, Tmp_424, Tmp_425, Irql_11, sdv_337, Tmp_426, Tmp_427, Tmp_429, Tmp_430, Tmp_431, Tmp_432, Tmp_434, CipData_22, boogieTmp, vslice_dummy_var_146);
    goto L23_last;

  L23_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} NumDescriptors > iAttach;
    call {:si_unique_call 883} sdv_332 := ExAllocatePoolWithTag(0, 496, 943206710);
    DescriptorData_7 := sdv_332;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} DescriptorData_7 != 0;
    call {:si_unique_call 884} sdv_RtlZeroMemory(0, 496);
    call {:si_unique_call 885} sdv_IoInitializeRemoveLock(0, -462395037, 1, 50);
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_404;
    assume {:nonnull} Tmp_404 != 0;
    assume Tmp_404 > 0;
    havoc Tmp_400;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 886} boogieTmp := IoAllocateIrp(Tmp_400, 0);
    call {:si_unique_call 887} sdv_336 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_403;
    assume {:nonnull} Tmp_403 != 0;
    assume Tmp_403 > 0;
    havoc Tmp_407;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 888} boogieTmp := IoAllocateIrp(Tmp_407, 0);
    call {:si_unique_call 889} sdv_329 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L63;

  L63:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L65;

  L65:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_405;
    call {:si_unique_call 890} sdv_337 := ExAllocatePoolWithTag(0, Tmp_405, 943206710);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L72;

  L72:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc Tmp_430;
    call {:si_unique_call 891} sdv_331 := IoAllocateMdl(0, Tmp_430, 0, 0, 0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_423;
    assume {:nonnull} Tmp_423 != 0;
    assume Tmp_423 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_420;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_417;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_413;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_432;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_421;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_415;
    assume {:nonnull} Tmp_415 != 0;
    assume Tmp_415 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_426;
    assume {:nonnull} Tmp_426 != 0;
    assume Tmp_426 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_422;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    goto L92;

  L92:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 892} Status_25 := Av1394_AttachBuffer(CipData_22, DescriptorData_7);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Status_25 < 0;
    goto L110;

  anon72_Then:
    assume {:partition} 0 <= Status_25;
    call {:si_unique_call 893} Tmp_418 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    call {:si_unique_call 894} sdv_KeAcquireSpinLock(0, Tmp_418);
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    havoc Irql_11;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 895} vslice_dummy_var_146 := sdv_InsertTailList(DescriptorList__CIP_DATA(CipData_22), ListEntry__CIP_DESCRIPTOR_DATA(DescriptorData_7));
    call {:si_unique_call 896} sdv_KeReleaseSpinLock(0, Irql_11);
    iAttach := iAttach + 1;
    goto anon72_Then_dummy;

  anon72_Then_dummy:
    assume false;
    return;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    Status_25 := -1073741670;
    goto L110;

  anon71_Then:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_425;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_424;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_402;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_409;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_406;
    assume {:nonnull} Tmp_406 != 0;
    assume Tmp_406 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_431;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} Tmp_431 != 0;
    assume Tmp_431 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_434;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_414;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_412;
    assume {:nonnull} Tmp_412 != 0;
    assume Tmp_412 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 897} InitializeListHead(NotifyFrameList__CIP_DESCRIPTOR_DATA(DescriptorData_7));
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 898} KeInitializeDpc(TimerDpc__CIP_DESCRIPTOR_DATA(DescriptorData_7), li2bplFunctionConstant243, 0);
    call {:si_unique_call 899} KeInitializeTimer(0);
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto L92;

  anon85_Then:
    Status_25 := -1073741670;
    goto L110;

  anon69_Then:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto L72;

  anon70_Then:
    goto L65;

  anon68_Then:
    Tmp_410 := NumPackets * 12;
    call {:si_unique_call 900} sdv_333 := ExAllocatePoolWithTag(0, Tmp_410, 943206710);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    iPacket := 0;
    goto L176;

  L176:
    call {:si_unique_call 901} iPacket := AvCip_AllocateResources_loop_L176(iPacket, DescriptorData_7, NumPackets);
    goto L176_last;

  L176_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} NumPackets > iPacket;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    call {:si_unique_call 902} sdv_RtlCopyMemory(0, 0, 12);
    iPacket := iPacket + 1;
    goto anon80_Else_dummy;

  anon80_Else_dummy:
    assume false;
    return;

  anon80_Then:
    assume {:partition} iPacket >= NumPackets;
    Tmp_419 := 12 * NumPackets;
    call {:si_unique_call 903} sdv_327 := IoAllocateMdl(0, Tmp_419, 0, 0, 0);
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_399;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_416;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} DescriptorData_7 != 0;
    assume DescriptorData_7 > 0;
    havoc Tmp_427;
    assume {:nonnull} Tmp_427 != 0;
    assume Tmp_427 > 0;
    goto L63;

  anon93_Then:
    Status_25 := -1073741670;
    goto L110;

  anon92_Then:
    Status_25 := -1073741670;
    goto L110;

  anon67_Then:
    goto L59;

  L59:
    Status_25 := -1073741670;
    goto L110;

  anon84_Then:
    goto L59;

  anon66_Then:
    goto L47;

  L47:
    Status_25 := -1073741670;
    goto L110;

  anon83_Then:
    goto L47;

  anon82_Then:
    assume {:partition} DescriptorData_7 == 0;
    Status_25 := -1073741670;
    goto L110;

  anon65_Then:
    assume {:partition} iAttach >= NumDescriptors;
    Tmp_397 := Status_25;
    goto L1;

  anon64_Then:
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumDescriptors;
    assume {:nonnull} CipData_22 != 0;
    assume CipData_22 > 0;
    havoc NumPackets;
    goto L22;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCip_ValidateSourcePacket"} AvCip_ValidateSourcePacket(actual_CipData_24: int, actual_FrameContext_4: int) returns (Tmp_445: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_445 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ValidateSourcePacket"} AvCip_ValidateSourcePacket(actual_CipData_24: int, actual_FrameContext_4: int) returns (Tmp_445: int)
{
  var {:pointer} Frame_1: int;
  var {:scalar} ValidateInfo: int;
  var {:scalar} SkipPacket: int;
  var {:pointer} CipData_24: int;
  var {:pointer} FrameContext_4: int;

  anon0:
    call {:si_unique_call 904} ValidateInfo := __HAVOC_malloc(24);
    CipData_24 := actual_CipData_24;
    FrameContext_4 := actual_FrameContext_4;
    SkipPacket := 0;
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    havoc Frame_1;
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L10;

  L10:
    assume {:nonnull} CipData_24 != 0;
    assume CipData_24 > 0;
    assume {:nonnull} ValidateInfo != 0;
    assume ValidateInfo > 0;
    assume {:nonnull} Frame_1 != 0;
    assume Frame_1 > 0;
    assume {:nonnull} ValidateInfo != 0;
    assume ValidateInfo > 0;
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    assume {:nonnull} ValidateInfo != 0;
    assume ValidateInfo > 0;
    assume {:nonnull} Frame_1 != 0;
    assume Frame_1 > 0;
    goto L17;

  L17:
    Tmp_445 := SkipPacket;
    return;

  anon9_Then:
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} FrameContext_4 != 0;
    assume FrameContext_4 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L17;

  anon8_Then:
    goto L10;

  anon7_Then:
    goto L17;
}



procedure {:origName "AvCip_ListenFrameNotification"} AvCip_ListenFrameNotification(actual_CipData_25: int, actual_FrameContext_5: int, actual_Status_27: int) returns (Tmp_447: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ListenFrameNotification"} AvCip_ListenFrameNotification(actual_CipData_25: int, actual_FrameContext_5: int, actual_Status_27: int) returns (Tmp_447: int)
{
  var {:pointer} Frame_2: int;
  var {:scalar} sdv_348: int;
  var {:scalar} NotifyInfo_1: int;
  var {:pointer} CipData_25: int;
  var {:pointer} FrameContext_5: int;
  var {:scalar} Status_27: int;
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 905} NotifyInfo_1 := __HAVOC_malloc(12);
    CipData_25 := actual_CipData_25;
    FrameContext_5 := actual_FrameContext_5;
    Status_27 := actual_Status_27;
    call {:si_unique_call 906} vslice_dummy_var_148 := sdv_RemoveEntryList(0);
    assume {:nonnull} FrameContext_5 != 0;
    assume FrameContext_5 > 0;
    havoc Frame_2;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} NotifyInfo_1 != 0;
    assume NotifyInfo_1 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    assume {:nonnull} NotifyInfo_1 != 0;
    assume NotifyInfo_1 > 0;
    assume {:nonnull} NotifyInfo_1 != 0;
    assume NotifyInfo_1 > 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    assume {:nonnull} Frame_2 != 0;
    assume Frame_2 > 0;
    call {:si_unique_call 907} sdv_ExFreePool(0);
    call {:si_unique_call 908} sdv_348 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_348 != 0;
    FrameContext_5 := 0;
    goto L29;

  L29:
    Tmp_447 := FrameContext_5;
    return;

  anon3_Then:
    assume {:partition} sdv_348 == 0;
    assume {:nonnull} CipData_25 != 0;
    assume CipData_25 > 0;
    havoc FrameContext_5;
    goto L29;
}



procedure {:origName "AvCip_ProcessTalkPacket_2"} AvCip_ProcessTalkPacket_2(actual_CipData_26: int, actual_DescriptorData_9: int) returns (Tmp_449: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_449 == 0 || Tmp_449 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessTalkPacket_2"} AvCip_ProcessTalkPacket_2(actual_CipData_26: int, actual_DescriptorData_9: int) returns (Tmp_449: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Frame_3: int;
  var {:scalar} BlockTime: int;
  var {:pointer} Tmp_451: int;
  var {:scalar} UniTime: int;
  var {:scalar} sdv_350: int;
  var {:pointer} IsochDescriptor: int;
  var {:scalar} sdv_351: int;
  var {:scalar} Count_1: int;
  var {:scalar} MaxFrameSize: int;
  var {:pointer} Tmp_455: int;
  var {:scalar} Status_28: int;
  var {:scalar} UniTime_1: int;
  var {:scalar} LastCount: int;
  var {:pointer} DriftData: int;
  var {:scalar} sdv_353: int;
  var {:scalar} sdv_354: int;
  var {:scalar} sdv_356: int;
  var {:pointer} Cip: int;
  var {:scalar} bDone: int;
  var {:scalar} sdv_358: int;
  var {:scalar} sdv_360: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} sdv_361: int;
  var {:scalar} UniTime_2: int;
  var {:scalar} sdv_362: int;
  var {:scalar} sdv_363: int;
  var {:scalar} Count_2: int;
  var {:scalar} SpTime: int;
  var {:pointer} FrameContext_6: int;
  var {:scalar} currLength: int;
  var {:pointer} SpHeader: int;
  var {:scalar} sdv_365: int;
  var {:pointer} pThisFrame: int;
  var {:scalar} Tmp_462: int;
  var {:pointer} CipData_26: int;
  var {:pointer} DescriptorData_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;

  anon0:
    call {:si_unique_call 909} UniTime := __HAVOC_malloc(40);
    call {:si_unique_call 910} UniTime_1 := __HAVOC_malloc(40);
    call {:si_unique_call 911} UniTime_2 := __HAVOC_malloc(40);
    call {:si_unique_call 912} SpTime := __HAVOC_malloc(40);
    CipData_26 := actual_CipData_26;
    DescriptorData_9 := actual_DescriptorData_9;
    call {:si_unique_call 913} Tmp_455 := __HAVOC_malloc(360);
    Status_28 := 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc Tmp_455;
    IsochDescriptor := Tmp_455;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc Cip;
    pThisFrame := 0;
    currLength := 0;
    i_2 := 0;
    MaxFrameSize := 0;
    FrameContext_6 := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    DriftData := DriftData__CIP_DATA(CipData_26);
    bDone := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    Count_1 := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Count_1;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 914} vslice_dummy_var_151 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), Count_1);
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 915} sdv_358 := sdv_IsListEmpty(0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} sdv_358 != 0;
    goto L51;

  L51:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L52;

  L52:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Tmp_459;
    call {:si_unique_call 916} sdv_RtlZeroMemory(0, Tmp_459);
    goto L53;

  L53:
    i_2 := 0;
    goto L58;

  L58:
    call {:si_unique_call 917} i_2, Frame_3, BlockTime, Tmp_451, MaxFrameSize, sdv_354, bDone, sdv_360, FrameContext_6, currLength, SpHeader, pThisFrame, Tmp_462, boogieTmp, vslice_dummy_var_149, vslice_dummy_var_150, vslice_dummy_var_152, vslice_dummy_var_153 := AvCip_ProcessTalkPacket_2_loop_L58(i_2, Frame_3, BlockTime, Tmp_451, MaxFrameSize, UniTime_1, sdv_353, sdv_354, Cip, bDone, sdv_360, sdv_363, SpTime, FrameContext_6, currLength, SpHeader, sdv_365, pThisFrame, Tmp_462, CipData_26, DescriptorData_9, boogieTmp, vslice_dummy_var_149, vslice_dummy_var_150, vslice_dummy_var_152, vslice_dummy_var_153);
    goto L58_last;

  L58_last:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Tmp_451;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    call {:si_unique_call 918} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 919} vslice_dummy_var_149 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), 3072);
    goto L69;

  L69:
    call {:si_unique_call 920} Frame_3, BlockTime, sdv_354, bDone, sdv_360, FrameContext_6, SpHeader, pThisFrame, Tmp_462, boogieTmp, vslice_dummy_var_150, vslice_dummy_var_152, vslice_dummy_var_153 := AvCip_ProcessTalkPacket_2_loop_L69(Frame_3, BlockTime, UniTime_1, sdv_353, sdv_354, Cip, bDone, sdv_360, sdv_363, SpTime, FrameContext_6, SpHeader, sdv_365, pThisFrame, Tmp_462, CipData_26, DescriptorData_9, boogieTmp, vslice_dummy_var_150, vslice_dummy_var_152, vslice_dummy_var_153);
    goto L69_last;

  L69_last:
    call {:si_unique_call 933} sdv_360 := AvCip_CopyBlock(CipData_26);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} sdv_360 != 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    BlockTime := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L76;

  L76:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} FrameContext_6 != 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Tmp_462;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    call {:si_unique_call 921} sdv_RtlCopyMemory(0, 0, Tmp_462);
    goto L86;

  L86:
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc SpHeader;
    goto L97;

  L97:
    assume {:nonnull} SpTime != 0;
    assume SpTime > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} SpTime != 0;
    assume SpTime > 0;
    assume {:nonnull} SpHeader != 0;
    assume SpHeader > 0;
    goto L87;

  L87:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L103;

  L103:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    call {:si_unique_call 922} vslice_dummy_var_150 := sdv_RemoveEntryList(0);
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    havoc Frame_3;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Frame_3 != 0;
    assume Frame_3 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Frame_3 != 0;
    assume Frame_3 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} Frame_3 != 0;
    assume Frame_3 > 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    call {:si_unique_call 923} vslice_dummy_var_152 := sdv_InsertTailList(NotifyFrameList__CIP_DESCRIPTOR_DATA(DescriptorData_9), ListEntry__CIP_FRAME_CONTEXT(FrameContext_6));
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L124;

  L124:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    call {:si_unique_call 924} sdv_354 := sdv_IsListEmpty(0);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} sdv_354 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    goto L132;

  L132:
    bDone := 1;
    goto L111;

  L111:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L134;

  L134:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 925} boogieTmp := corral_nondet();
    goto L77;

  L77:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L139;

  L139:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} FrameContext_6 == 0;
    goto L73;

  L73:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L165;

  L165:
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc MaxFrameSize;
    goto L168;

  L168:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} currLength != 0;
    goto L171;

  L171:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc currLength;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} bDone != 0;
    i_2 := i_2 + 1;
    goto L59;

  L59:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    call {:si_unique_call 926} IoFreeMdl(0);
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto L184;

  L184:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} currLength != 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    call {:si_unique_call 927} boogieTmp := IoAllocateMdl(0, currLength, 0, 0, 0);
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto L203;

  L203:
    Tmp_449 := Status_28;
    return;

  anon143_Then:
    Status_28 := -1073741670;
    goto L203;

  anon128_Then:
    assume {:partition} currLength == 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto L203;

  anon142_Then:
    goto L184;

  anon141_Then:
    assume {:partition} bDone == 0;
    i_2 := i_2 + 1;
    goto anon141_Then_dummy;

  anon141_Then_dummy:
    assume false;
    return;

  anon126_Then:
    assume {:partition} currLength == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    goto L171;

  anon127_Then:
    goto L171;

  anon140_Then:
    goto L168;

  anon139_Then:
    goto L165;

  anon106_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L165;

  anon144_Then:
    goto L165;

  anon123_Then:
    assume {:partition} FrameContext_6 != 0;
    goto anon123_Then_dummy;

  anon123_Then_dummy:
    assume false;
    return;

  anon121_Then:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} FrameContext_6 != 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime_1 != 0;
    assume UniTime_1 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime_1 != 0;
    assume UniTime_1 > 0;
    goto L139;

  anon122_Then:
    assume {:partition} FrameContext_6 == 0;
    goto L139;

  anon109_Then:
    goto anon109_Then_dummy;

  anon109_Then_dummy:
    assume false;
    return;

  anon117_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L134;

  anon120_Then:
    assume {:partition} sdv_354 != 0;
    goto L126;

  L126:
    FrameContext_6 := 0;
    goto L132;

  anon119_Then:
    goto L126;

  anon118_Then:
    goto L124;

  anon138_Then:
    goto L111;

  anon116_Then:
    goto L103;

  anon113_Then:
    goto L103;

  anon115_Then:
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    havoc SpHeader;
    goto L97;

  anon114_Then:
    goto L87;

  anon112_Then:
    goto L87;

  anon110_Then:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} pThisFrame == 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    havoc pThisFrame;
    goto L86;

  anon111_Then:
    assume {:partition} pThisFrame != 0;
    goto L86;

  anon108_Then:
    assume {:partition} FrameContext_6 == 0;
    goto L77;

  anon145_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    BlockTime := BlockTime + 1;
    goto L153;

  L153:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc BlockTime;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 928} vslice_dummy_var_153 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), BlockTime);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} bDone != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} FrameContext_6 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L76;

  anon125_Then:
    assume {:partition} FrameContext_6 != 0;
    goto L76;

  anon124_Then:
    assume {:partition} bDone == 0;
    goto L76;

  anon146_Then:
    goto L153;

  anon107_Then:
    goto L76;

  anon105_Then:
    assume {:partition} sdv_360 == 0;
    goto L73;

  anon137_Then:
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    assume {:nonnull} Cip != 0;
    assume Cip > 0;
    goto L69;

  anon104_Then:
    goto L59;

  anon103_Then:
    goto L53;

  anon102_Then:
    assume {:partition} sdv_358 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime != 0;
    assume UniTime > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime != 0;
    assume UniTime > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L51;

  anon136_Then:
    call {:si_unique_call 929} sdv_356 := sdv_IsListEmpty(0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} sdv_356 == 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    goto L225;

  L225:
    call {:si_unique_call 930} AvCip_ProcessTalkPacket_2_loop_L225(UniTime_2, sdv_362, FrameContext_6, CipData_26);
    goto L225_last;

  L225_last:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} FrameContext_6 != 0;
    assume FrameContext_6 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} UniTime_2 != 0;
    assume UniTime_2 > 0;
    goto anon130_Else_dummy;

  anon130_Else_dummy:
    assume false;
    return;

  anon130_Then:
    goto L52;

  anon147_Then:
    goto L52;

  anon129_Then:
    assume {:partition} sdv_356 != 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L52;

  anon135_Then:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    Count_2 := 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc Count_2;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    call {:si_unique_call 931} vslice_dummy_var_154 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(CipData_26), Count_2);
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto L250;

  L250:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L251;

  L251:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    call {:si_unique_call 932} sdv_350 := sdv_IsListEmpty(0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_350 != 0;
    goto L257;

  L257:
    FrameContext_6 := 0;
    goto L52;

  anon132_Then:
    assume {:partition} sdv_350 == 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    havoc FrameContext_6;
    goto L52;

  anon133_Then:
    goto L257;

  anon148_Then:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto L250;

  anon101_Then:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    havoc LastCount;
    assume {:nonnull} DescriptorData_9 != 0;
    assume DescriptorData_9 > 0;
    havoc LastCount;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} LastCount >= 8000;
    LastCount := LastCount - 8000;
    goto L266;

  L266:
    assume {:nonnull} IsochDescriptor != 0;
    assume IsochDescriptor > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto L251;

  anon134_Then:
    goto L251;

  anon150_Then:
    assume {:partition} 8000 > LastCount;
    goto L266;

  anon131_Then:
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    assume {:nonnull} DriftData != 0;
    assume DriftData > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} CipData_26 != 0;
    assume CipData_26 > 0;
    goto L251;

  anon149_Then:
    goto L251;
}



procedure {:origName "AvCip_SetTalkFormat"} AvCip_SetTalkFormat(actual_CipData_27: int, actual_Format_1: int, actual_LocalNodeId: int) returns (Tmp_463: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_463 == -1073741790 || Tmp_463 == 0 || Tmp_463 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_SetTalkFormat"} AvCip_SetTalkFormat(actual_CipData_27: int, actual_Format_1: int, actual_LocalNodeId: int) returns (Tmp_463: int)
{
  var {:scalar} Status_29: int;
  var {:scalar} Tmp_464: int;
  var {:scalar} Irql_12: int;
  var {:pointer} Tmp_465: int;
  var {:pointer} CipData_27: int;
  var {:pointer} Format_1: int;
  var {:pointer} LocalNodeId: int;
  var vslice_dummy_var_155: int;

  anon0:
    CipData_27 := actual_CipData_27;
    Format_1 := actual_Format_1;
    LocalNodeId := actual_LocalNodeId;
    Status_29 := 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Status_29 := -1073741790;
    goto L11;

  L11:
    Tmp_463 := Status_29;
    return;

  anon9_Then:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    call {:si_unique_call 934} Tmp_465 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    call {:si_unique_call 935} sdv_KeAcquireSpinLock(0, Tmp_465);
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    havoc Irql_12;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 936} vslice_dummy_var_155 := AvCip_ConvertCipDataFormat(Format_1);
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto L38;

  L38:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    havoc Tmp_464;
    goto L43;

  L43:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    call {:si_unique_call 937} sdv_KeReleaseSpinLock(0, Irql_12);
    goto L11;

  anon12_Then:
    Tmp_464 := 1024;
    goto L43;

  anon10_Then:
    assume {:nonnull} CipData_27 != 0;
    assume CipData_27 > 0;
    assume {:nonnull} Format_1 != 0;
    assume Format_1 > 0;
    goto L38;

  anon11_Then:
    Status_29 := -1073741811;
    goto L11;
}



procedure {:origName "AvCip_Create"} AvCip_Create(actual_pCipData: int, actual_DDIVersion: int, actual_ParentDeviceObject_1: int, actual_IrbPool: int, actual_Connect_4: int, actual_Type_3: int, actual_LocalNodeId_1: int) returns (Tmp_466: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_466 == 0 || Tmp_466 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_Create"} AvCip_Create(actual_pCipData: int, actual_DDIVersion: int, actual_ParentDeviceObject_1: int, actual_IrbPool: int, actual_Connect_4: int, actual_Type_3: int, actual_LocalNodeId_1: int) returns (Tmp_466: int)
{
  var {:pointer} sdv_367: int;
  var {:pointer} Tmp_467: int;
  var {:scalar} Status_30: int;
  var {:pointer} CipData_28: int;
  var {:pointer} pCipData: int;
  var {:scalar} DDIVersion: int;
  var {:pointer} ParentDeviceObject_1: int;
  var {:pointer} IrbPool: int;
  var {:pointer} Connect_4: int;
  var {:scalar} Type_3: int;
  var {:pointer} LocalNodeId_1: int;

  anon0:
    pCipData := actual_pCipData;
    DDIVersion := actual_DDIVersion;
    ParentDeviceObject_1 := actual_ParentDeviceObject_1;
    IrbPool := actual_IrbPool;
    Connect_4 := actual_Connect_4;
    Type_3 := actual_Type_3;
    LocalNodeId_1 := actual_LocalNodeId_1;
    Status_30 := 0;
    CipData_28 := 0;
    call {:si_unique_call 938} sdv_367 := ExAllocatePoolWithTag(0, 212, 943206710);
    CipData_28 := sdv_367;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} CipData_28 != 0;
    call {:si_unique_call 939} sdv_RtlZeroMemory(0, 212);
    call {:si_unique_call 940} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    call {:si_unique_call 941} sdv_KeInitializeSpinLock(Tmp_467);
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    call {:si_unique_call 942} InitializeListHead(FrameList__CIP_DATA(CipData_28));
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    call {:si_unique_call 943} InitializeListHead(DescriptorList__CIP_DATA(CipData_28));
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} CipData_28 != 0;
    assume CipData_28 > 0;
    assume {:nonnull} pCipData != 0;
    assume pCipData > 0;
    goto L37;

  L37:
    Tmp_466 := Status_30;
    return;

  anon3_Then:
    assume {:partition} CipData_28 == 0;
    Status_30 := -1073741670;
    assume {:nonnull} pCipData != 0;
    assume pCipData > 0;
    goto L37;
}



procedure {:origName "AvCip_AttachFrames"} AvCip_AttachFrames(actual_BusExtension_18: int, actual_Irp_28: int, actual_Request_5: int) returns (Tmp_468: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_468 == 0 || Tmp_468 == -1073741670 || Tmp_468 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_AttachFrames"} AvCip_AttachFrames(actual_BusExtension_18: int, actual_Irp_28: int, actual_Request_5: int) returns (Tmp_468: int)
{
  var {:pointer} sdv_368: int;
  var {:scalar} Status_31: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} CipData_29: int;
  var {:pointer} Connect_5: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Irql_13: int;
  var {:pointer} AttachFrame: int;
  var {:pointer} Tmp_475: int;
  var {:pointer} FrameContext_7: int;
  var {:pointer} Request_5: int;
  var vslice_dummy_var_156: int;

  anon0:
    Request_5 := actual_Request_5;
    Status_31 := 0;
    assume {:nonnull} Request_5 != 0;
    assume Request_5 > 0;
    AttachFrame := AttachFrame__AV_61883_REQUEST(Request_5);
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Connect_5;
    assume {:nonnull} Connect_5 != 0;
    assume Connect_5 > 0;
    havoc CipData_29;
    assume {:nonnull} Connect_5 != 0;
    assume Connect_5 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_473;
    assume {:nonnull} Tmp_473 != 0;
    assume Tmp_473 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 944} sdv_368 := ExAllocatePoolWithTag(0, 32, 943206710);
    FrameContext_7 := sdv_368;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} FrameContext_7 != 0;
    call {:si_unique_call 945} sdv_RtlZeroMemory(0, 32);
    call {:si_unique_call 946} Tmp_474 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    call {:si_unique_call 947} sdv_KeAcquireSpinLock(0, Tmp_474);
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    havoc Irql_13;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_469;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} Tmp_469 != 0;
    assume Tmp_469 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L38;

  L38:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto L39;

  L39:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_472;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_470;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    assume {:nonnull} Tmp_470 != 0;
    assume Tmp_470 > 0;
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    havoc Tmp_475;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} FrameContext_7 != 0;
    assume FrameContext_7 > 0;
    call {:si_unique_call 948} vslice_dummy_var_156 := sdv_InsertTailList(FrameList__CIP_DATA(CipData_29), ListEntry__CIP_FRAME_CONTEXT(FrameContext_7));
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    call {:si_unique_call 949} sdv_KeReleaseSpinLock(0, Irql_13);
    goto L55;

  L55:
    Tmp_468 := Status_31;
    return;

  anon28_Then:
    goto L39;

  anon33_Then:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto L38;

  anon27_Then:
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} AttachFrame != 0;
    assume AttachFrame > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    assume {:nonnull} CipData_29 != 0;
    assume CipData_29 > 0;
    goto L38;

  anon29_Then:
    goto L38;

  anon32_Then:
    assume {:partition} FrameContext_7 == 0;
    Status_31 := -1073741670;
    goto L55;

  anon26_Then:
    goto L19;

  L19:
    Status_31 := -1073741811;
    goto L55;

  anon25_Then:
    goto L19;

  anon24_Then:
    goto L19;

  anon31_Then:
    goto L16;

  L16:
    Status_31 := -1073741811;
    goto L55;

  anon23_Then:
    goto L16;

  anon30_Then:
    Status_31 := -1073741811;
    goto L55;
}



procedure {:origName "AvFcp_CreateRequestAddressRange"} AvFcp_CreateRequestAddressRange(actual_BusExtension_19: int, actual_FcpData_1: int) returns (Tmp_476: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_CreateRequestAddressRange"} AvFcp_CreateRequestAddressRange(actual_BusExtension_19: int, actual_FcpData_1: int) returns (Tmp_476: int)
{
  var {:pointer} Irp_29: int;
  var {:pointer} Irb_8: int;
  var {:scalar} StackSize_2: int;
  var {:pointer} sdv_370: int;
  var {:scalar} ntStatus_15: int;
  var {:pointer} Tmp_478: int;
  var {:pointer} BusExtension_19: int;
  var {:pointer} FcpData_1: int;
  var vslice_dummy_var_320: int;

  anon0:
    BusExtension_19 := actual_BusExtension_19;
    FcpData_1 := actual_FcpData_1;
    ntStatus_15 := 0;
    Irp_29 := 0;
    Irb_8 := 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    havoc Tmp_478;
    assume {:nonnull} Tmp_478 != 0;
    assume Tmp_478 > 0;
    havoc StackSize_2;
    call {:si_unique_call 950} Irp_29 := IoAllocateIrp(StackSize_2, 0);
    call {:si_unique_call 951} sdv_370 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_8 := sdv_370;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irp_29 != 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_8 != 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} FcpData_1 != 0;
    assume FcpData_1 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} FcpData_1 != 0;
    assume FcpData_1 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    havoc vslice_dummy_var_320;
    call {:si_unique_call 952} ntStatus_15 := Av_SubmitIrpSynch#1(vslice_dummy_var_320, Irp_29, Irb_8);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} ntStatus_15 >= 0;
    assume {:nonnull} FcpData_1 != 0;
    assume FcpData_1 > 0;
    assume {:nonnull} Irb_8 != 0;
    assume Irb_8 > 0;
    goto L45;

  L45:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irp_29 != 0;
    call {:si_unique_call 953} IoFreeIrp(0);
    goto L47;

  L47:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_8 != 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    call {:si_unique_call 954} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_19), Irb_8);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  L51:
    Tmp_476 := ntStatus_15;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} Irb_8 == 0;
    goto L51;

  anon17_Then:
    assume {:partition} Irp_29 == 0;
    goto L47;

  anon16_Then:
    assume {:partition} 0 > ntStatus_15;
    goto L45;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} Irb_8 == 0;
    goto L20;

  L20:
    ntStatus_15 := -1073741670;
    goto L45;

  anon19_Then:
    assume {:partition} Irp_29 == 0;
    goto L20;
}



procedure {:origName "AvFcp_CreateFcpData"} AvFcp_CreateFcpData(actual_BusExtension_20: int, actual_ppFcpData: int) returns (Tmp_479: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_CreateFcpData"} AvFcp_CreateFcpData(actual_BusExtension_20: int, actual_ppFcpData: int) returns (Tmp_479: int)
{
  var {:pointer} sdv_372: int;
  var {:pointer} sdv_374: int;
  var {:scalar} ntStatus_16: int;
  var {:pointer} FcpData_2: int;
  var {:pointer} sdv_377: int;
  var {:pointer} BusExtension_20: int;
  var {:pointer} ppFcpData: int;
  var boogieTmp: int;

  anon0:
    BusExtension_20 := actual_BusExtension_20;
    ppFcpData := actual_ppFcpData;
    ntStatus_16 := 0;
    call {:si_unique_call 955} sdv_372 := ExAllocatePoolWithTag(0, 44, 943206710);
    FcpData_2 := sdv_372;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} FcpData_2 != 0;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    call {:si_unique_call 956} sdv_374 := ExAllocatePoolWithTag(0, 512, 943206710);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    call {:si_unique_call 957} boogieTmp := IoAllocateMdl(0, 512, 0, 0, 0);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 958} ntStatus_16 := AvFcp_CreateRequestAddressRange(BusExtension_20, FcpData_2);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} yogi_error != 1;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_16 < 0;
    goto L57;

  L57:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} FcpData_2 != 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 959} IoFreeMdl(0);
    goto L60;

  L60:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 960} sdv_ExFreePool(0);
    goto L64;

  L64:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 961} IoFreeMdl(0);
    goto L68;

  L68:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 962} sdv_ExFreePool(0);
    goto L72;

  L72:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} FcpData_2 != 0;
    call {:si_unique_call 963} sdv_ExFreePool(0);
    goto L58;

  L58:
    assume {:nonnull} ppFcpData != 0;
    assume ppFcpData > 0;
    Tmp_479 := ntStatus_16;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon40_Then:
    assume {:partition} FcpData_2 == 0;
    goto L58;

  anon39_Then:
    goto L72;

  anon38_Then:
    goto L68;

  anon37_Then:
    goto L64;

  anon36_Then:
    goto L60;

  anon35_Then:
    assume {:partition} FcpData_2 == 0;
    goto L58;

  anon32_Then:
    assume {:partition} 0 <= ntStatus_16;
    call {:si_unique_call 964} sdv_377 := ExAllocatePoolWithTag(0, 512, 943206710);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    call {:si_unique_call 965} boogieTmp := IoAllocateMdl(0, 512, 0, 0, 0);
    assume {:nonnull} FcpData_2 != 0;
    assume FcpData_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 966} ntStatus_16 := AvFcp_CreateResponseAddressRange(BusExtension_20, FcpData_2);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_16 < 0;
    goto L57;

  anon34_Then:
    assume {:partition} 0 <= ntStatus_16;
    assume {:nonnull} ppFcpData != 0;
    assume ppFcpData > 0;
    Tmp_479 := ntStatus_16;
    goto L1;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    ntStatus_16 := -1073741670;
    goto L57;

  anon44_Then:
    ntStatus_16 := -1073741670;
    goto L57;

  anon43_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    ntStatus_16 := -1073741670;
    goto L57;

  anon42_Then:
    ntStatus_16 := -1073741670;
    goto L57;

  anon41_Then:
    assume {:partition} FcpData_2 == 0;
    ntStatus_16 := -1073741670;
    goto L57;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 967} vslice_dummy_var_157 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AvFcp_GetFcpResponse"} AvFcp_GetFcpResponse(actual_PdoExtension_7: int, actual_Irp_30: int, actual_Request_6: int) returns (Tmp_483: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} Tmp_483 == -1073741536 || Tmp_483 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_GetFcpResponse"} AvFcp_GetFcpResponse(actual_PdoExtension_7: int, actual_Irp_30: int, actual_Request_6: int) returns (Tmp_483: int)
{
  var {:scalar} sdv_379: int;
  var {:pointer} pEntry: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} pResponse: int;
  var {:scalar} sdv_380: int;
  var {:scalar} ntStatus_17: int;
  var {:pointer} sdv_383: int;
  var {:pointer} FcpResponse: int;
  var {:pointer} Length_4: int;
  var {:scalar} Irql_14: int;
  var {:pointer} FcpResponse_1: int;
  var {:pointer} NodeAddress: int;
  var {:pointer} PdoExtension_7: int;
  var {:pointer} Irp_30: int;
  var {:pointer} Request_6: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_321: int;

  anon0:
    PdoExtension_7 := actual_PdoExtension_7;
    Irp_30 := actual_Irp_30;
    Request_6 := actual_Request_6;
    ntStatus_17 := 0;
    pEntry := 0;
    call {:si_unique_call 968} Tmp_484 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    call {:si_unique_call 969} sdv_KeAcquireSpinLock(0, Tmp_484);
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    havoc Irql_14;
    call {:si_unique_call 970} sdv_379 := sdv_IsListEmpty(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_379 != 0;
    goto L18;

  L18:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 971} sdv_383 := sdv_containing_record(pEntry, 0);
    pResponse := sdv_383;
    assume {:nonnull} Request_6 != 0;
    assume Request_6 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Request_6 != 0;
    assume Request_6 > 0;
    FcpResponse_1 := Request__AV_61883_REQUEST(Request_6);
    assume {:nonnull} FcpResponse_1 != 0;
    assume FcpResponse_1 > 0;
    NodeAddress := NodeAddress__FCP_GET_REQUEST(FcpResponse_1);
    assume {:nonnull} FcpResponse_1 != 0;
    assume FcpResponse_1 > 0;
    Length_4 := Length__FCP_GET_REQUEST(FcpResponse_1);
    assume {:nonnull} FcpResponse_1 != 0;
    assume FcpResponse_1 > 0;
    goto L37;

  L37:
    assume {:nonnull} Length_4 != 0;
    assume Length_4 > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_17 := -1073741811;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 972} InsertHeadList(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_7), pEntry);
    goto L46;

  L46:
    call {:si_unique_call 973} sdv_KeReleaseSpinLock(0, Irql_14);
    Tmp_483 := ntStatus_17;
    goto LM2;

  LM2:
    return;

  anon19_Then:
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    havoc vslice_dummy_var_321;
    call {:si_unique_call 974} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_321);
    assume {:nonnull} Length_4 != 0;
    assume Length_4 > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} NodeAddress != 0;
    assume {:nonnull} NodeAddress != 0;
    assume NodeAddress > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    assume {:nonnull} NodeAddress != 0;
    assume NodeAddress > 0;
    assume {:nonnull} pResponse != 0;
    assume pResponse > 0;
    goto L52;

  L52:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 975} ExFreeToNPagedLookasideList#1(FcpRspPktPool__PDO_DEVICE_EXTENSION(PdoExtension_7), pResponse);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 976} vslice_dummy_var_159 := sdv_IoSetCancelRoutine(Irp_30, 0);
    ntStatus_17 := 0;
    goto L46;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} NodeAddress == 0;
    goto L52;

  anon22_Then:
    assume {:nonnull} Request_6 != 0;
    assume Request_6 > 0;
    FcpResponse := Request__AV_61883_REQUEST(Request_6);
    NodeAddress := 0;
    assume {:nonnull} FcpResponse != 0;
    assume FcpResponse > 0;
    Length_4 := Length_unnamed_tag_16(FcpResponse);
    assume {:nonnull} FcpResponse != 0;
    assume FcpResponse > 0;
    goto L37;

  anon18_Then:
    call {:si_unique_call 977} vslice_dummy_var_158 := sdv_IoSetCancelRoutine(Irp_30, li2bplFunctionConstant316);
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 978} sdv_380 := sdv_IoSetCancelRoutine(Irp_30, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_380 != 0;
    ntStatus_17 := -1073741536;
    goto L46;

  anon21_Then:
    assume {:partition} sdv_380 == 0;
    goto L65;

  L65:
    ntStatus_17 := 259;
    call {:si_unique_call 979} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 980} vslice_dummy_var_160 := sdv_InsertTailList(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_7), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_30))));
    goto L46;

  anon20_Then:
    goto L65;

  anon17_Then:
    assume {:partition} sdv_379 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 981} pEntry := RemoveHeadList(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_7));
    goto L18;
}



procedure {:origName "AvFcp_DestroyFcpData"} AvFcp_DestroyFcpData(actual_BusExtension_21: int, actual_FcpData_3: int) returns (Tmp_485: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_DestroyFcpData"} AvFcp_DestroyFcpData(actual_BusExtension_21: int, actual_FcpData_3: int) returns (Tmp_485: int)
{
  var {:scalar} ntStatus_18: int;
  var {:pointer} BusExtension_21: int;
  var {:pointer} FcpData_3: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;

  anon0:
    BusExtension_21 := actual_BusExtension_21;
    FcpData_3 := actual_FcpData_3;
    ntStatus_18 := 0;
    call {:si_unique_call 982} vslice_dummy_var_162 := AvFcp_FreeRequestAddressRange(BusExtension_21, FcpData_3);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 983} vslice_dummy_var_161 := AvFcp_FreeResponseAddressRange(BusExtension_21, FcpData_3);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 984} IoFreeMdl(0);
    goto L12;

  L12:
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 985} sdv_ExFreePool(0);
    goto L16;

  L16:
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 986} IoFreeMdl(0);
    goto L20;

  L20:
    assume {:nonnull} FcpData_3 != 0;
    assume FcpData_3 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 987} sdv_ExFreePool(0);
    goto L24;

  L24:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} FcpData_3 != 0;
    call {:si_unique_call 988} sdv_ExFreePool(0);
    goto L28;

  L28:
    Tmp_485 := ntStatus_18;
    goto LM2;

  LM2:
    return;

  anon19_Then:
    assume {:partition} FcpData_3 == 0;
    goto L28;

  anon18_Then:
    goto L24;

  anon17_Then:
    goto L20;

  anon16_Then:
    goto L16;

  anon15_Then:
    goto L12;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvFcp_GetFcpRequest"} AvFcp_GetFcpRequest(actual_PdoExtension_8: int, actual_Irp_31: int, actual_Request_7: int) returns (Tmp_487: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} Tmp_487 == -1073741536 || Tmp_487 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_GetFcpRequest"} AvFcp_GetFcpRequest(actual_PdoExtension_8: int, actual_Irp_31: int, actual_Request_7: int) returns (Tmp_487: int)
{
  var {:pointer} pRequest: int;
  var {:pointer} FcpRequest: int;
  var {:scalar} sdv_387: int;
  var {:pointer} pEntry_1: int;
  var {:scalar} sdv_388: int;
  var {:pointer} Tmp_488: int;
  var {:scalar} ntStatus_19: int;
  var {:pointer} sdv_391: int;
  var {:scalar} Irql_15: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} Irp_31: int;
  var {:pointer} Request_7: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_322: int;

  anon0:
    PdoExtension_8 := actual_PdoExtension_8;
    Irp_31 := actual_Irp_31;
    Request_7 := actual_Request_7;
    ntStatus_19 := 0;
    pEntry_1 := 0;
    assume {:nonnull} Request_7 != 0;
    assume Request_7 > 0;
    FcpRequest := GetRequest__AV_61883_REQUEST(Request_7);
    call {:si_unique_call 989} Tmp_488 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    call {:si_unique_call 990} sdv_KeAcquireSpinLock(0, Tmp_488);
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    havoc Irql_15;
    call {:si_unique_call 991} sdv_387 := sdv_IsListEmpty(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_387 != 0;
    goto L20;

  L20:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 992} sdv_391 := sdv_containing_record(pEntry_1, 0);
    pRequest := sdv_391;
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_19 := -1073741811;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 993} InsertHeadList(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_8), pEntry_1);
    goto L38;

  L38:
    call {:si_unique_call 994} sdv_KeReleaseSpinLock(0, Irql_15);
    Tmp_487 := ntStatus_19;
    goto LM2;

  LM2:
    return;

  anon17_Then:
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    havoc vslice_dummy_var_322;
    call {:si_unique_call 995} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_322);
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    assume {:nonnull} FcpRequest != 0;
    assume FcpRequest > 0;
    assume {:nonnull} pRequest != 0;
    assume pRequest > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 996} ExFreeToNPagedLookasideList#1(FcpReqPktPool__PDO_DEVICE_EXTENSION(PdoExtension_8), pRequest);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 997} vslice_dummy_var_164 := sdv_IoSetCancelRoutine(Irp_31, 0);
    ntStatus_19 := 0;
    goto L38;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    call {:si_unique_call 998} vslice_dummy_var_163 := sdv_IoSetCancelRoutine(Irp_31, li2bplFunctionConstant317);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 999} sdv_388 := sdv_IoSetCancelRoutine(Irp_31, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_388 != 0;
    ntStatus_19 := -1073741536;
    goto L38;

  anon16_Then:
    assume {:partition} sdv_388 == 0;
    goto L52;

  L52:
    ntStatus_19 := 259;
    call {:si_unique_call 1000} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1001} vslice_dummy_var_165 := sdv_InsertTailList(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_8), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_31))));
    goto L38;

  anon15_Then:
    goto L52;

  anon13_Then:
    assume {:partition} sdv_387 == 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1002} pEntry_1 := RemoveHeadList(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_8));
    goto L20;
}



procedure {:origName "AvFcp_CompleteQueuedFcp"} AvFcp_CompleteQueuedFcp(actual_PdoExtension_9: int, actual_Notify_1: int) returns (Tmp_489: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_489 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_CompleteQueuedFcp"} AvFcp_CompleteQueuedFcp(actual_PdoExtension_9: int, actual_Notify_1: int) returns (Tmp_489: int)
{
  var {:pointer} FcpIrp: int;
  var {:scalar} sdv_393: int;
  var {:scalar} Irql_16: int;
  var {:pointer} FcpIrp_1: int;
  var {:scalar} sdv_395: int;
  var {:pointer} sdv_397: int;
  var {:scalar} sdv_398: int;
  var {:scalar} sdv_399: int;
  var {:pointer} IrpEntry: int;
  var {:pointer} sdv_400: int;
  var {:scalar} Irql_17: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} IrpEntry_1: int;
  var {:pointer} PdoExtension_9: int;
  var {:scalar} Notify_1: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Notify_1 := actual_Notify_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} BAND(Notify_1, 1) != 0;
    FcpIrp := 0;
    call {:si_unique_call 1003} Tmp_490 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    call {:si_unique_call 1004} sdv_KeAcquireSpinLock(0, Tmp_490);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    havoc Irql_17;
    goto L12;

  L12:
    call {:si_unique_call 1005} FcpIrp, sdv_393, sdv_397, sdv_398, IrpEntry, Irql_17, Tmp_490 := AvFcp_CompleteQueuedFcp_loop_L12(FcpIrp, sdv_393, sdv_397, sdv_398, IrpEntry, Irql_17, Tmp_490, PdoExtension_9);
    goto L12_last;

  L12_last:
    call {:si_unique_call 1028} sdv_393 := sdv_IsListEmpty(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_393 != 0;
    call {:si_unique_call 1006} sdv_KeReleaseSpinLock(0, Irql_17);
    goto L4;

  L4:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Notify_1, 2) != 0;
    FcpIrp_1 := 0;
    call {:si_unique_call 1007} Tmp_490 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    call {:si_unique_call 1008} sdv_KeAcquireSpinLock(0, Tmp_490);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    havoc Irql_16;
    goto L53;

  L53:
    call {:si_unique_call 1009} Irql_16, FcpIrp_1, sdv_395, sdv_399, sdv_400, Tmp_490, IrpEntry_1 := AvFcp_CompleteQueuedFcp_loop_L53(Irql_16, FcpIrp_1, sdv_395, sdv_399, sdv_400, Tmp_490, IrpEntry_1, PdoExtension_9);
    goto L53_last;

  L53_last:
    call {:si_unique_call 1027} sdv_399 := sdv_IsListEmpty(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_399 != 0;
    call {:si_unique_call 1010} sdv_KeReleaseSpinLock(0, Irql_16);
    goto L45;

  L45:
    Tmp_489 := 0;
    return;

  anon17_Then:
    assume {:partition} sdv_399 == 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    call {:si_unique_call 1011} IrpEntry_1 := RemoveHeadList(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_9));
    call {:si_unique_call 1012} sdv_400 := sdv_containing_record(IrpEntry_1, 88);
    FcpIrp_1 := sdv_400;
    call {:si_unique_call 1013} sdv_395 := sdv_IoSetCancelRoutine(FcpIrp_1, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} sdv_395 != 0;
    call {:si_unique_call 1014} sdv_KeReleaseSpinLock(0, Irql_16);
    assume {:nonnull} FcpIrp_1 != 0;
    assume FcpIrp_1 > 0;
    call {:si_unique_call 1015} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1016} Tmp_490 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    call {:si_unique_call 1017} sdv_KeAcquireSpinLock(0, Tmp_490);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    havoc Irql_16;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:partition} sdv_395 == 0;
    assume {:nonnull} FcpIrp_1 != 0;
    assume FcpIrp_1 > 0;
    call {:si_unique_call 1018} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(FcpIrp_1))));
    FcpIrp_1 := 0;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    assume false;
    return;

  anon14_Then:
    assume {:partition} BAND(Notify_1, 2) == 0;
    goto L45;

  anon15_Then:
    assume {:partition} sdv_393 == 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    call {:si_unique_call 1019} IrpEntry := RemoveHeadList(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_9));
    call {:si_unique_call 1020} sdv_397 := sdv_containing_record(IrpEntry, 88);
    FcpIrp := sdv_397;
    call {:si_unique_call 1021} sdv_398 := sdv_IoSetCancelRoutine(FcpIrp, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_398 != 0;
    call {:si_unique_call 1022} sdv_KeReleaseSpinLock(0, Irql_17);
    assume {:nonnull} FcpIrp != 0;
    assume FcpIrp > 0;
    call {:si_unique_call 1023} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1024} Tmp_490 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    call {:si_unique_call 1025} sdv_KeAcquireSpinLock(0, Tmp_490);
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    havoc Irql_17;
    goto anon16_Else_dummy;

  anon16_Else_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} sdv_398 == 0;
    assume {:nonnull} FcpIrp != 0;
    assume FcpIrp > 0;
    call {:si_unique_call 1026} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(FcpIrp))));
    FcpIrp := 0;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon13_Then:
    assume {:partition} BAND(Notify_1, 1) == 0;
    goto L4;
}



procedure {:origName "AvFcp_CreateResponseAddressRange"} AvFcp_CreateResponseAddressRange(actual_BusExtension_22: int, actual_FcpData_4: int) returns (Tmp_491: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_CreateResponseAddressRange"} AvFcp_CreateResponseAddressRange(actual_BusExtension_22: int, actual_FcpData_4: int) returns (Tmp_491: int)
{
  var {:pointer} Irp_32: int;
  var {:pointer} Irb_9: int;
  var {:scalar} StackSize_3: int;
  var {:pointer} sdv_402: int;
  var {:scalar} ntStatus_20: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} BusExtension_22: int;
  var {:pointer} FcpData_4: int;
  var vslice_dummy_var_323: int;

  anon0:
    BusExtension_22 := actual_BusExtension_22;
    FcpData_4 := actual_FcpData_4;
    ntStatus_20 := 0;
    Irp_32 := 0;
    Irb_9 := 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    havoc StackSize_3;
    call {:si_unique_call 1029} Irp_32 := IoAllocateIrp(StackSize_3, 0);
    call {:si_unique_call 1030} sdv_402 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_9 := sdv_402;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irp_32 != 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_9 != 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} FcpData_4 != 0;
    assume FcpData_4 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} FcpData_4 != 0;
    assume FcpData_4 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc vslice_dummy_var_323;
    call {:si_unique_call 1031} ntStatus_20 := Av_SubmitIrpSynch#1(vslice_dummy_var_323, Irp_32, Irb_9);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} ntStatus_20 >= 0;
    assume {:nonnull} FcpData_4 != 0;
    assume FcpData_4 > 0;
    assume {:nonnull} Irb_9 != 0;
    assume Irb_9 > 0;
    goto L45;

  L45:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irp_32 != 0;
    call {:si_unique_call 1032} IoFreeIrp(0);
    goto L47;

  L47:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irb_9 != 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    call {:si_unique_call 1033} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_22), Irb_9);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  L51:
    Tmp_491 := ntStatus_20;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} Irb_9 == 0;
    goto L51;

  anon17_Then:
    assume {:partition} Irp_32 == 0;
    goto L47;

  anon16_Then:
    assume {:partition} 0 > ntStatus_20;
    goto L45;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} Irb_9 == 0;
    goto L20;

  L20:
    ntStatus_20 := -1073741670;
    goto L45;

  anon19_Then:
    assume {:partition} Irp_32 == 0;
    goto L20;
}



procedure {:origName "AvFcp_SendFcpRequest"} AvFcp_SendFcpRequest(actual_BusExtension_23: int, actual_RequestIrp: int, actual_Request_8: int) returns (Tmp_494: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_SendFcpRequest"} AvFcp_SendFcpRequest(actual_BusExtension_23: int, actual_RequestIrp: int, actual_Request_8: int) returns (Tmp_494: int)
{
  var {:pointer} FcpRequest_1: int;
  var {:pointer} CRStruct: int;
  var {:pointer} Irp_33: int;
  var {:pointer} Irb_10: int;
  var {:pointer} Mdl_1: int;
  var {:pointer} sdv_404: int;
  var {:pointer} FcpRequest_2: int;
  var {:scalar} StackSize_4: int;
  var {:scalar} ntStatus_21: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} NextIrpStack_2: int;
  var {:pointer} sdv_407: int;
  var {:scalar} Length_5: int;
  var {:scalar} NodeAddress_1: int;
  var {:pointer} BusExtension_23: int;
  var {:pointer} RequestIrp: int;
  var {:pointer} Request_8: int;
  var boogieTmp: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_324: int;

  anon0:
    call {:si_unique_call 1034} NodeAddress_1 := __HAVOC_malloc(8);
    BusExtension_23 := actual_BusExtension_23;
    RequestIrp := actual_RequestIrp;
    Request_8 := actual_Request_8;
    ntStatus_21 := 0;
    CRStruct := 0;
    Mdl_1 := 0;
    Irp_33 := 0;
    Irb_10 := 0;
    assume {:nonnull} Request_8 != 0;
    assume Request_8 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Request_8 != 0;
    assume Request_8 > 0;
    FcpRequest_2 := Request__AV_61883_REQUEST(Request_8);
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    havoc Length_5;
    assume {:nonnull} FcpRequest_2 != 0;
    assume FcpRequest_2 > 0;
    goto L24;

  L24:
    call {:si_unique_call 1035} sdv_404 := ExAllocatePoolWithTag(0, 20, 943206710);
    CRStruct := sdv_404;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} CRStruct == 0;
    goto L87;

  L87:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mdl_1 != 0;
    call {:si_unique_call 1036} IoFreeMdl(0);
    goto L88;

  L88:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irp_33 != 0;
    call {:si_unique_call 1037} IoFreeIrp(0);
    goto L92;

  L92:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Irb_10 != 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    call {:si_unique_call 1038} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_23), Irb_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  L96:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} CRStruct != 0;
    call {:si_unique_call 1039} sdv_ExFreePool(0);
    goto L100;

  L100:
    Tmp_494 := ntStatus_21;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon29_Then:
    assume {:partition} CRStruct == 0;
    goto L100;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} Irb_10 == 0;
    goto L96;

  anon27_Then:
    assume {:partition} Irp_33 == 0;
    goto L92;

  anon26_Then:
    assume {:partition} Mdl_1 == 0;
    goto L88;

  anon31_Then:
    assume {:partition} CRStruct != 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    havoc Tmp_496;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    havoc StackSize_4;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    call {:si_unique_call 1040} boogieTmp := IoAllocateIrp(StackSize_4, 0);
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    havoc Irp_33;
    call {:si_unique_call 1041} sdv_407 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    havoc Irb_10;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Irp_33 != 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irb_10 != 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    call {:si_unique_call 1042} boogieTmp := IoAllocateMdl(0, Length_5, 0, 0, 0);
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    havoc Mdl_1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mdl_1 != 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    assume {:nonnull} CRStruct != 0;
    assume CRStruct > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} NodeAddress_1 != 0;
    assume NodeAddress_1 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    goto L68;

  L68:
    call {:si_unique_call 1043} NextIrpStack_2 := sdv_IoGetNextIrpStackLocation(Irp_33);
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    ntStatus_21 := 259;
    call {:si_unique_call 1044} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1045} sdv_IoSetCompletionRoutine(Irp_33, li2bplFunctionConstant318, CRStruct, 1, 1, 1);
    assume {:nonnull} BusExtension_23 != 0;
    assume BusExtension_23 > 0;
    havoc vslice_dummy_var_324;
    call {:si_unique_call 1046} vslice_dummy_var_166 := sdv_IoCallDriver#1(vslice_dummy_var_324, Irp_33);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    Tmp_494 := ntStatus_21;
    goto L1;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    assume {:nonnull} Irb_10 != 0;
    assume Irb_10 > 0;
    goto L68;

  anon33_Then:
    assume {:partition} Mdl_1 == 0;
    ntStatus_21 := -1073741670;
    goto L87;

  anon25_Then:
    assume {:partition} Irb_10 == 0;
    goto L42;

  L42:
    ntStatus_21 := -1073741670;
    goto L87;

  anon32_Then:
    assume {:partition} Irp_33 == 0;
    goto L42;

  anon30_Then:
    assume {:nonnull} Request_8 != 0;
    assume Request_8 > 0;
    FcpRequest_1 := Request__AV_61883_REQUEST(Request_8);
    assume {:nonnull} FcpRequest_1 != 0;
    assume FcpRequest_1 > 0;
    havoc Length_5;
    assume {:nonnull} FcpRequest_1 != 0;
    assume FcpRequest_1 > 0;
    goto L24;
}



procedure {:origName "AvFcp_SendFcpResponse"} AvFcp_SendFcpResponse(actual_BusExtension_24: int, actual_RequestIrp_1: int, actual_Request_9: int) returns (Tmp_497: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_SendFcpResponse"} AvFcp_SendFcpResponse(actual_BusExtension_24: int, actual_RequestIrp_1: int, actual_Request_9: int) returns (Tmp_497: int)
{
  var {:pointer} CRStruct_1: int;
  var {:pointer} Irp_34: int;
  var {:pointer} Mdl_2: int;
  var {:pointer} Irb_11: int;
  var {:pointer} sdv_410: int;
  var {:scalar} StackSize_5: int;
  var {:scalar} ntStatus_22: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} NextIrpStack_3: int;
  var {:pointer} sdv_413: int;
  var {:pointer} FcpResponse_2: int;
  var {:pointer} BusExtension_24: int;
  var {:pointer} RequestIrp_1: int;
  var {:pointer} Request_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;

  anon0:
    BusExtension_24 := actual_BusExtension_24;
    RequestIrp_1 := actual_RequestIrp_1;
    Request_9 := actual_Request_9;
    ntStatus_22 := 0;
    assume {:nonnull} Request_9 != 0;
    assume Request_9 > 0;
    FcpResponse_2 := Response__AV_61883_REQUEST(Request_9);
    CRStruct_1 := 0;
    Mdl_2 := 0;
    Irp_34 := 0;
    Irb_11 := 0;
    call {:si_unique_call 1047} sdv_410 := ExAllocatePoolWithTag(0, 20, 943206710);
    CRStruct_1 := sdv_410;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} CRStruct_1 == 0;
    goto L80;

  L80:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mdl_2 != 0;
    call {:si_unique_call 1048} IoFreeMdl(0);
    goto L81;

  L81:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irp_34 != 0;
    call {:si_unique_call 1049} IoFreeIrp(0);
    goto L85;

  L85:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irb_11 != 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    call {:si_unique_call 1050} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_24), Irb_11);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L89;

  L89:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} CRStruct_1 != 0;
    call {:si_unique_call 1051} sdv_ExFreePool(0);
    goto L93;

  L93:
    Tmp_497 := ntStatus_22;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} CRStruct_1 == 0;
    goto L93;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} Irb_11 == 0;
    goto L89;

  anon25_Then:
    assume {:partition} Irp_34 == 0;
    goto L85;

  anon24_Then:
    assume {:partition} Mdl_2 == 0;
    goto L81;

  anon28_Then:
    assume {:partition} CRStruct_1 != 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    havoc StackSize_5;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    call {:si_unique_call 1052} boogieTmp := IoAllocateIrp(StackSize_5, 0);
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    havoc Irp_34;
    call {:si_unique_call 1053} sdv_413 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    havoc Irb_11;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_34 != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irb_11 != 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    havoc vslice_dummy_var_325;
    call {:si_unique_call 1054} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_325, 0, 0, 0);
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    havoc Mdl_2;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mdl_2 != 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} CRStruct_1 != 0;
    assume CRStruct_1 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} FcpResponse_2 != 0;
    assume FcpResponse_2 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    goto L61;

  L61:
    call {:si_unique_call 1055} NextIrpStack_3 := sdv_IoGetNextIrpStackLocation(Irp_34);
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    ntStatus_22 := 259;
    call {:si_unique_call 1056} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1057} sdv_IoSetCompletionRoutine(Irp_34, li2bplFunctionConstant318, CRStruct_1, 1, 1, 1);
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    havoc vslice_dummy_var_326;
    call {:si_unique_call 1058} vslice_dummy_var_167 := sdv_IoCallDriver#1(vslice_dummy_var_326, Irp_34);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    Tmp_497 := ntStatus_22;
    goto L1;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:nonnull} Irb_11 != 0;
    assume Irb_11 > 0;
    goto L61;

  anon30_Then:
    assume {:partition} Mdl_2 == 0;
    ntStatus_22 := -1073741670;
    goto L80;

  anon23_Then:
    assume {:partition} Irb_11 == 0;
    goto L35;

  L35:
    ntStatus_22 := -1073741670;
    goto L80;

  anon29_Then:
    assume {:partition} Irp_34 == 0;
    goto L35;
}



procedure {:origName "AvFcp_FreeRequestAddressRange"} AvFcp_FreeRequestAddressRange(actual_BusExtension_25: int, actual_FcpData_5: int) returns (Tmp_500: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_FreeRequestAddressRange"} AvFcp_FreeRequestAddressRange(actual_BusExtension_25: int, actual_FcpData_5: int) returns (Tmp_500: int)
{
  var {:pointer} Irp_35: int;
  var {:pointer} Irb_12: int;
  var {:pointer} Tmp_501: int;
  var {:scalar} StackSize_6: int;
  var {:pointer} sdv_417: int;
  var {:scalar} ntStatus_23: int;
  var {:pointer} BusExtension_25: int;
  var {:pointer} FcpData_5: int;
  var vslice_dummy_var_327: int;

  anon0:
    BusExtension_25 := actual_BusExtension_25;
    FcpData_5 := actual_FcpData_5;
    ntStatus_23 := 0;
    Irp_35 := 0;
    Irb_12 := 0;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    havoc Tmp_501;
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    havoc StackSize_6;
    call {:si_unique_call 1059} Irp_35 := IoAllocateIrp(StackSize_6, 0);
    call {:si_unique_call 1060} sdv_417 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_12 := sdv_417;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_35 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irb_12 != 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} FcpData_5 != 0;
    assume FcpData_5 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} FcpData_5 != 0;
    assume FcpData_5 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} Irb_12 != 0;
    assume Irb_12 > 0;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    havoc vslice_dummy_var_327;
    call {:si_unique_call 1061} ntStatus_23 := Av_SubmitIrpSynch#1(vslice_dummy_var_327, Irp_35, Irb_12);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  L33:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irp_35 != 0;
    call {:si_unique_call 1062} IoFreeIrp(0);
    goto L34;

  L34:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_12 != 0;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    call {:si_unique_call 1063} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_25), Irb_12);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L38;

  L38:
    Tmp_500 := ntStatus_23;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} Irb_12 == 0;
    goto L38;

  anon14_Then:
    assume {:partition} Irp_35 == 0;
    goto L34;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} Irb_12 == 0;
    goto L20;

  L20:
    ntStatus_23 := -1073741670;
    goto L33;

  anon16_Then:
    assume {:partition} Irp_35 == 0;
    goto L20;
}



procedure {:origName "AvFcp_ProcessRequest"} AvFcp_ProcessRequest(actual_pInfo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_ProcessRequest"} AvFcp_ProcessRequest(actual_pInfo: int)
{
  var {:pointer} pRequest_1: int;
  var {:pointer} Irp_36: int;
  var {:pointer} CurrNotify: int;
  var {:scalar} sdv_419: int;
  var {:pointer} AsyncPacket: int;
  var {:pointer} IrpStack_6: int;
  var {:pointer} Tmp_504: int;
  var {:scalar} sdv_421: int;
  var {:pointer} PdoExtension_10: int;
  var {:pointer} FcpData_6: int;
  var {:pointer} sdv_423: int;
  var {:pointer} sdv_424: int;
  var {:pointer} DefaultPdoExtension: int;
  var {:pointer} Request_10: int;
  var {:pointer} IrpEntry_2: int;
  var {:scalar} Irql_18: int;
  var {:scalar} sdv_425: int;
  var {:scalar} PdoCts: int;
  var {:pointer} AvAdapterData_7: int;
  var {:scalar} bFound_1: int;
  var {:pointer} pInfo: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;

  anon0:
    call {:si_unique_call 1064} vslice_dummy_var_168 := __HAVOC_malloc(4);
    pInfo := actual_pInfo;
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    havoc FcpData_6;
    assume {:nonnull} FcpData_6 != 0;
    assume FcpData_6 > 0;
    havoc AvAdapterData_7;
    PdoExtension_10 := 0;
    DefaultPdoExtension := 0;
    assume {:nonnull} FcpData_6 != 0;
    assume FcpData_6 > 0;
    call {:si_unique_call 1065} PdoCts := corral_nondet();
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    havoc AsyncPacket;
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 1066} Tmp_504 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    call {:si_unique_call 1067} sdv_KeAcquireSpinLock(0, Tmp_504);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    havoc Irql_18;
    call {:si_unique_call 1068} sdv_419 := sdv_IsListEmpty(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_419 == 0;
    CurrNotify := 0;
    bFound_1 := 0;
    goto L36;

  L36:
    call {:si_unique_call 1069} CurrNotify, PdoExtension_10, DefaultPdoExtension := AvFcp_ProcessRequest_loop_L36(CurrNotify, AsyncPacket, PdoExtension_10, DefaultPdoExtension, PdoCts, AvAdapterData_7);
    goto L36_last;

  L36_last:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} CurrNotify != 0;
    assume {:nonnull} CurrNotify != 0;
    assume CurrNotify > 0;
    havoc CurrNotify;
    goto L39;

  L39:
    assume {:nonnull} CurrNotify != 0;
    assume CurrNotify > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CurrNotify != 0;
    assume CurrNotify > 0;
    havoc PdoExtension_10;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} AsyncPacket != 0;
    assume AsyncPacket > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    bFound_1 := 1;
    goto L47;

  L47:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} bFound_1 != 0;
    goto L49;

  L49:
    call {:si_unique_call 1070} sdv_KeReleaseSpinLock(0, Irql_18);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} PdoExtension_10 != 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    IrpEntry_2 := 0;
    call {:si_unique_call 1071} Tmp_504 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    call {:si_unique_call 1072} sdv_KeAcquireSpinLock(0, Tmp_504);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    havoc Irql_18;
    call {:si_unique_call 1073} sdv_421 := sdv_IsListEmpty(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_421 != 0;
    goto L70;

  L70:
    call {:si_unique_call 1074} sdv_424 := sdv_ExAllocateFromNPagedLookasideList(0);
    pRequest_1 := sdv_424;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} pRequest_1 != 0;
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    havoc vslice_dummy_var_328;
    call {:si_unique_call 1075} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_328);
    assume {:nonnull} AsyncPacket != 0;
    assume AsyncPacket > 0;
    assume {:nonnull} pRequest_1 != 0;
    assume pRequest_1 > 0;
    assume {:nonnull} AsyncPacket != 0;
    assume AsyncPacket > 0;
    assume {:nonnull} pRequest_1 != 0;
    assume pRequest_1 > 0;
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    assume {:nonnull} pRequest_1 != 0;
    assume pRequest_1 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} pRequest_1 != 0;
    assume pRequest_1 > 0;
    call {:si_unique_call 1076} vslice_dummy_var_169 := sdv_InsertTailList(FcpReqPktList__PDO_DEVICE_EXTENSION(PdoExtension_10), ListEntry__FCP_REQUEST_ENTRY(pRequest_1));
    call {:si_unique_call 1077} sdv_KeReleaseSpinLock(0, Irql_18);
    goto L1;

  L1:
    return;

  anon47_Then:
    assume {:partition} pRequest_1 == 0;
    goto L1;

  anon42_Then:
    assume {:partition} sdv_421 == 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    call {:si_unique_call 1078} IrpEntry_2 := RemoveHeadList(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_10));
    call {:si_unique_call 1079} sdv_423 := sdv_containing_record(IrpEntry_2, 88);
    Irp_36 := sdv_423;
    call {:si_unique_call 1080} IrpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_36);
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    havoc Request_10;
    assume {:nonnull} Request_10 != 0;
    assume Request_10 > 0;
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Irp_36 != 0;
    assume Irp_36 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    call {:si_unique_call 1081} InsertHeadList(FcpReqIrpList__PDO_DEVICE_EXTENSION(PdoExtension_10), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_36))));
    call {:si_unique_call 1082} sdv_KeReleaseSpinLock(0, Irql_18);
    goto L1;

  anon48_Then:
    call {:si_unique_call 1083} sdv_425 := sdv_IoSetCancelRoutine(Irp_36, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_425 != 0;
    call {:si_unique_call 1084} sdv_KeReleaseSpinLock(0, Irql_18);
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    havoc vslice_dummy_var_329;
    call {:si_unique_call 1085} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_329);
    assume {:nonnull} AsyncPacket != 0;
    assume AsyncPacket > 0;
    assume {:nonnull} Request_10 != 0;
    assume Request_10 > 0;
    assume {:nonnull} AsyncPacket != 0;
    assume AsyncPacket > 0;
    assume {:nonnull} Request_10 != 0;
    assume Request_10 > 0;
    assume {:nonnull} Request_10 != 0;
    assume Request_10 > 0;
    assume {:nonnull} pInfo != 0;
    assume pInfo > 0;
    assume {:nonnull} Irp_36 != 0;
    assume Irp_36 > 0;
    call {:si_unique_call 1086} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon43_Then:
    assume {:partition} sdv_425 == 0;
    assume {:nonnull} Irp_36 != 0;
    assume Irp_36 > 0;
    call {:si_unique_call 1087} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_36))));
    goto L70;

  anon41_Then:
    goto L1;

  anon40_Then:
    assume {:partition} PdoExtension_10 == 0;
    goto L1;

  anon39_Then:
    assume {:partition} bFound_1 == 0;
    PdoExtension_10 := DefaultPdoExtension;
    goto L49;

  anon38_Then:
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    DefaultPdoExtension := PdoExtension_10;
    goto L40;

  L40:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L47;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    assume false;
    return;

  anon44_Then:
    goto L40;

  anon37_Then:
    goto L40;

  anon46_Then:
    goto L43;

  anon35_Then:
    goto L40;

  anon34_Then:
    assume {:partition} CurrNotify == 0;
    assume {:nonnull} AvAdapterData_7 != 0;
    assume AvAdapterData_7 > 0;
    havoc CurrNotify;
    goto L39;

  anon33_Then:
    assume {:partition} sdv_419 != 0;
    call {:si_unique_call 1088} sdv_KeReleaseSpinLock(0, Irql_18);
    goto L1;

  anon45_Then:
    goto L1;
}



procedure {:origName "AvFcp_ProcessResponse"} AvFcp_ProcessResponse(actual_pInfo_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_ProcessResponse"} AvFcp_ProcessResponse(actual_pInfo_1: int)
{
  var {:pointer} Irp_37: int;
  var {:pointer} CurrNotify_1: int;
  var {:scalar} sdv_426: int;
  var {:pointer} AsyncPacket_1: int;
  var {:pointer} IrpStack_7: int;
  var {:pointer} pResponse_1: int;
  var {:pointer} Tmp_506: int;
  var {:scalar} sdv_428: int;
  var {:pointer} PdoExtension_11: int;
  var {:pointer} FcpData_7: int;
  var {:pointer} sdv_430: int;
  var {:pointer} sdv_431: int;
  var {:pointer} FcpResponse_3: int;
  var {:pointer} DefaultPdoExtension_1: int;
  var {:pointer} Length_6: int;
  var {:pointer} Request_11: int;
  var {:pointer} IrpEntry_3: int;
  var {:pointer} FcpResponse_4: int;
  var {:scalar} sdv_432: int;
  var {:scalar} Irql_19: int;
  var {:scalar} PdoCts_1: int;
  var {:pointer} AvAdapterData_8: int;
  var {:pointer} NodeAddress_2: int;
  var {:scalar} bFound_2: int;
  var {:pointer} pInfo_1: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;

  anon0:
    call {:si_unique_call 1089} vslice_dummy_var_170 := __HAVOC_malloc(4);
    pInfo_1 := actual_pInfo_1;
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    havoc FcpData_7;
    assume {:nonnull} FcpData_7 != 0;
    assume FcpData_7 > 0;
    havoc AvAdapterData_8;
    PdoExtension_11 := 0;
    DefaultPdoExtension_1 := 0;
    assume {:nonnull} FcpData_7 != 0;
    assume FcpData_7 > 0;
    call {:si_unique_call 1090} PdoCts_1 := corral_nondet();
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    havoc AsyncPacket_1;
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1091} Tmp_506 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    call {:si_unique_call 1092} sdv_KeAcquireSpinLock(0, Tmp_506);
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    havoc Irql_19;
    call {:si_unique_call 1093} sdv_426 := sdv_IsListEmpty(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_426 == 0;
    CurrNotify_1 := 0;
    bFound_2 := 0;
    goto L36;

  L36:
    call {:si_unique_call 1094} CurrNotify_1, PdoExtension_11, DefaultPdoExtension_1 := AvFcp_ProcessResponse_loop_L36(CurrNotify_1, AsyncPacket_1, PdoExtension_11, DefaultPdoExtension_1, PdoCts_1, AvAdapterData_8);
    goto L36_last;

  L36_last:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} CurrNotify_1 != 0;
    assume {:nonnull} CurrNotify_1 != 0;
    assume CurrNotify_1 > 0;
    havoc CurrNotify_1;
    goto L39;

  L39:
    assume {:nonnull} CurrNotify_1 != 0;
    assume CurrNotify_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} CurrNotify_1 != 0;
    assume CurrNotify_1 > 0;
    havoc PdoExtension_11;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} AsyncPacket_1 != 0;
    assume AsyncPacket_1 > 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    bFound_2 := 1;
    goto L47;

  L47:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} bFound_2 != 0;
    goto L49;

  L49:
    call {:si_unique_call 1095} sdv_KeReleaseSpinLock(0, Irql_19);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} PdoExtension_11 != 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    IrpEntry_3 := 0;
    call {:si_unique_call 1096} Tmp_506 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    call {:si_unique_call 1097} sdv_KeAcquireSpinLock(0, Tmp_506);
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    havoc Irql_19;
    call {:si_unique_call 1098} sdv_428 := sdv_IsListEmpty(0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_428 != 0;
    goto L73;

  L73:
    call {:si_unique_call 1099} sdv_430 := sdv_ExAllocateFromNPagedLookasideList(0);
    pResponse_1 := sdv_430;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} pResponse_1 != 0;
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    havoc vslice_dummy_var_330;
    call {:si_unique_call 1100} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_330);
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    assume {:nonnull} pResponse_1 != 0;
    assume pResponse_1 > 0;
    assume {:nonnull} AsyncPacket_1 != 0;
    assume AsyncPacket_1 > 0;
    assume {:nonnull} pResponse_1 != 0;
    assume pResponse_1 > 0;
    assume {:nonnull} AsyncPacket_1 != 0;
    assume AsyncPacket_1 > 0;
    assume {:nonnull} pResponse_1 != 0;
    assume pResponse_1 > 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    assume {:nonnull} pResponse_1 != 0;
    assume pResponse_1 > 0;
    call {:si_unique_call 1101} vslice_dummy_var_171 := sdv_InsertTailList(FcpRspPktList__PDO_DEVICE_EXTENSION(PdoExtension_11), ListEntry__FCP_REQUEST_ENTRY(pResponse_1));
    call {:si_unique_call 1102} sdv_KeReleaseSpinLock(0, Irql_19);
    goto L1;

  L1:
    return;

  anon52_Then:
    assume {:partition} pResponse_1 == 0;
    goto L1;

  anon46_Then:
    assume {:partition} sdv_428 == 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 1103} IrpEntry_3 := RemoveHeadList(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_11));
    call {:si_unique_call 1104} sdv_431 := sdv_containing_record(IrpEntry_3, 88);
    Irp_37 := sdv_431;
    call {:si_unique_call 1105} IrpStack_7 := sdv_IoGetCurrentIrpStackLocation(Irp_37);
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc Request_11;
    assume {:nonnull} Request_11 != 0;
    assume Request_11 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Request_11 != 0;
    assume Request_11 > 0;
    FcpResponse_4 := Request__AV_61883_REQUEST(Request_11);
    assume {:nonnull} FcpResponse_4 != 0;
    assume FcpResponse_4 > 0;
    NodeAddress_2 := NodeAddress__FCP_GET_REQUEST(FcpResponse_4);
    assume {:nonnull} FcpResponse_4 != 0;
    assume FcpResponse_4 > 0;
    Length_6 := Length__FCP_GET_REQUEST(FcpResponse_4);
    assume {:nonnull} FcpResponse_4 != 0;
    assume FcpResponse_4 > 0;
    goto L107;

  L107:
    assume {:nonnull} Length_6 != 0;
    assume Length_6 > 0;
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Irp_37 != 0;
    assume Irp_37 > 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 1106} InsertHeadList(FcpRspIrpList__PDO_DEVICE_EXTENSION(PdoExtension_11), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_37))));
    call {:si_unique_call 1107} sdv_KeReleaseSpinLock(0, Irql_19);
    goto L1;

  anon47_Then:
    call {:si_unique_call 1108} sdv_432 := sdv_IoSetCancelRoutine(Irp_37, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_432 != 0;
    call {:si_unique_call 1109} sdv_KeReleaseSpinLock(0, Irql_19);
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    havoc vslice_dummy_var_331;
    call {:si_unique_call 1110} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_331);
    assume {:nonnull} Length_6 != 0;
    assume Length_6 > 0;
    assume {:nonnull} pInfo_1 != 0;
    assume pInfo_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} NodeAddress_2 != 0;
    assume {:nonnull} AsyncPacket_1 != 0;
    assume AsyncPacket_1 > 0;
    assume {:nonnull} NodeAddress_2 != 0;
    assume NodeAddress_2 > 0;
    assume {:nonnull} AsyncPacket_1 != 0;
    assume AsyncPacket_1 > 0;
    assume {:nonnull} NodeAddress_2 != 0;
    assume NodeAddress_2 > 0;
    goto L130;

  L130:
    assume {:nonnull} Irp_37 != 0;
    assume Irp_37 > 0;
    call {:si_unique_call 1111} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon54_Then:
    assume {:partition} NodeAddress_2 == 0;
    goto L130;

  anon48_Then:
    assume {:partition} sdv_432 == 0;
    assume {:nonnull} Irp_37 != 0;
    assume Irp_37 > 0;
    call {:si_unique_call 1112} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_37))));
    goto L73;

  anon53_Then:
    assume {:nonnull} Request_11 != 0;
    assume Request_11 > 0;
    FcpResponse_3 := Request__AV_61883_REQUEST(Request_11);
    NodeAddress_2 := 0;
    assume {:nonnull} FcpResponse_3 != 0;
    assume FcpResponse_3 > 0;
    Length_6 := Length_unnamed_tag_16(FcpResponse_3);
    assume {:nonnull} FcpResponse_3 != 0;
    assume FcpResponse_3 > 0;
    goto L107;

  anon45_Then:
    goto L1;

  anon44_Then:
    assume {:partition} PdoExtension_11 == 0;
    goto L1;

  anon43_Then:
    assume {:partition} bFound_2 == 0;
    PdoExtension_11 := DefaultPdoExtension_1;
    goto L49;

  anon42_Then:
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    DefaultPdoExtension_1 := PdoExtension_11;
    goto L40;

  L40:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L47;

  anon40_Then:
    goto anon40_Then_dummy;

  anon40_Then_dummy:
    assume false;
    return;

  anon49_Then:
    goto L40;

  anon41_Then:
    goto L40;

  anon51_Then:
    goto L43;

  anon39_Then:
    goto L40;

  anon38_Then:
    assume {:partition} CurrNotify_1 == 0;
    assume {:nonnull} AvAdapterData_8 != 0;
    assume AvAdapterData_8 > 0;
    havoc CurrNotify_1;
    goto L39;

  anon37_Then:
    assume {:partition} sdv_426 != 0;
    call {:si_unique_call 1113} sdv_KeReleaseSpinLock(0, Irql_19);
    goto L1;

  anon50_Then:
    goto L1;
}



procedure {:origName "AvFcp_SetFcpNotify"} AvFcp_SetFcpNotify(actual_PdoExtension_12: int, actual_Irp_38: int, actual_Request_12: int) returns (Tmp_507: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_507 == 0 || Tmp_507 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_SetFcpNotify"} AvFcp_SetFcpNotify(actual_PdoExtension_12: int, actual_Irp_38: int, actual_Request_12: int) returns (Tmp_507: int)
{
  var {:scalar} Notify_2: int;
  var {:pointer} NotifyData_2: int;
  var {:scalar} Status_32: int;
  var {:pointer} Tmp_508: int;
  var {:scalar} Irql_20: int;
  var {:pointer} BusExtension_26: int;
  var {:pointer} AvAdapterData_9: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} SetFcpNotify: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Request_12: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;

  anon0:
    PdoExtension_12 := actual_PdoExtension_12;
    Request_12 := actual_Request_12;
    Status_32 := 0;
    assume {:nonnull} Request_12 != 0;
    assume Request_12 > 0;
    SetFcpNotify := SetFcpNotify__AV_61883_REQUEST(Request_12);
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    NotifyData_2 := FcpNotifyData__PDO_DEVICE_EXTENSION(PdoExtension_12);
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_508;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    havoc BusExtension_26;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    havoc AvAdapterData_9;
    call {:si_unique_call 1114} Tmp_509 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    call {:si_unique_call 1115} sdv_KeAcquireSpinLock(0, Tmp_509);
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    havoc Irql_20;
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    havoc Notify_2;
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    call {:si_unique_call 1116} vslice_dummy_var_174 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1117} sdv_KeReleaseSpinLock(0, Irql_20);
    call {:si_unique_call 1118} vslice_dummy_var_172 := AvFcp_CompleteQueuedFcp(PdoExtension_12, Notify_2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} BAND(Notify_2, 2) != 0;
    call {:si_unique_call 1119} ExDeleteNPagedLookasideList(0);
    goto L54;

  L54:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(Notify_2, 1) != 0;
    call {:si_unique_call 1120} ExDeleteNPagedLookasideList(0);
    goto L37;

  L37:
    Tmp_507 := Status_32;
    return;

  anon18_Then:
    assume {:partition} BAND(Notify_2, 1) == 0;
    goto L37;

  anon17_Then:
    assume {:partition} BAND(Notify_2, 2) == 0;
    goto L54;

  anon16_Then:
    call {:si_unique_call 1121} sdv_KeReleaseSpinLock(0, Irql_20);
    Status_32 := -1073741811;
    goto L37;

  anon13_Then:
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1122} ExInitializeNPagedLookasideList(0, 0, 0, 0, 528, -260872878, 0);
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    goto L20;

  L20:
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1123} ExInitializeNPagedLookasideList(0, 0, 0, 0, 528, -210672302, 0);
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    goto L25;

  L25:
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    assume {:nonnull} SetFcpNotify != 0;
    assume SetFcpNotify > 0;
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    assume {:nonnull} AvAdapterData_9 != 0;
    assume AvAdapterData_9 > 0;
    assume {:nonnull} NotifyData_2 != 0;
    assume NotifyData_2 > 0;
    call {:si_unique_call 1124} vslice_dummy_var_173 := sdv_InsertTailList(FcpList__AV_ADAPTER_DATA(AvAdapterData_9), Entry__FCP_NOTIFY_DATA(NotifyData_2));
    call {:si_unique_call 1125} sdv_KeReleaseSpinLock(0, Irql_20);
    goto L37;

  anon15_Then:
    goto L25;

  anon14_Then:
    goto L20;
}



procedure {:origName "AvFcp_FreeResponseAddressRange"} AvFcp_FreeResponseAddressRange(actual_BusExtension_27: int, actual_FcpData_8: int) returns (Tmp_510: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_FreeResponseAddressRange"} AvFcp_FreeResponseAddressRange(actual_BusExtension_27: int, actual_FcpData_8: int) returns (Tmp_510: int)
{
  var {:pointer} Irp_39: int;
  var {:pointer} Irb_13: int;
  var {:pointer} Tmp_511: int;
  var {:scalar} StackSize_7: int;
  var {:pointer} sdv_436: int;
  var {:scalar} ntStatus_24: int;
  var {:pointer} BusExtension_27: int;
  var {:pointer} FcpData_8: int;
  var vslice_dummy_var_332: int;

  anon0:
    BusExtension_27 := actual_BusExtension_27;
    FcpData_8 := actual_FcpData_8;
    ntStatus_24 := 0;
    Irp_39 := 0;
    Irb_13 := 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    havoc Tmp_511;
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    havoc StackSize_7;
    call {:si_unique_call 1126} Irp_39 := IoAllocateIrp(StackSize_7, 0);
    call {:si_unique_call 1127} sdv_436 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_13 := sdv_436;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_39 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irb_13 != 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} FcpData_8 != 0;
    assume FcpData_8 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} FcpData_8 != 0;
    assume FcpData_8 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} Irb_13 != 0;
    assume Irb_13 > 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    havoc vslice_dummy_var_332;
    call {:si_unique_call 1128} ntStatus_24 := Av_SubmitIrpSynch#1(vslice_dummy_var_332, Irp_39, Irb_13);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  L33:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Irp_39 != 0;
    call {:si_unique_call 1129} IoFreeIrp(0);
    goto L34;

  L34:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irb_13 != 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    call {:si_unique_call 1130} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_27), Irb_13);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L38;

  L38:
    Tmp_510 := ntStatus_24;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} Irb_13 == 0;
    goto L38;

  anon14_Then:
    assume {:partition} Irp_39 == 0;
    goto L34;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} Irb_13 == 0;
    goto L20;

  L20:
    ntStatus_24 := -1073741670;
    goto L33;

  anon16_Then:
    assume {:partition} Irp_39 == 0;
    goto L20;
}



procedure {:origName "AvCmp_MonitorPlugs"} AvCmp_MonitorPlugs(actual_PdoExtension_13: int, actual_Irp_41: int, actual_Request_13: int) returns (Tmp_515: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_515 == 0 || Tmp_515 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_MonitorPlugs"} AvCmp_MonitorPlugs(actual_PdoExtension_13: int, actual_Irp_41: int, actual_Request_13: int) returns (Tmp_515: int)
{
  var {:pointer} Tmp_516: int;
  var {:pointer} MonitorPlugs: int;
  var {:pointer} Tmp_517: int;
  var {:scalar} ntStatus_26: int;
  var {:scalar} Irql_21: int;
  var {:pointer} BusExtension_29: int;
  var {:pointer} AvAdapterData_10: int;
  var {:pointer} MonitorData_1: int;
  var {:pointer} PdoExtension_13: int;
  var {:pointer} Request_13: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    Request_13 := actual_Request_13;
    ntStatus_26 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_517;
    assume {:nonnull} Tmp_517 != 0;
    assume Tmp_517 > 0;
    havoc BusExtension_29;
    assume {:nonnull} BusExtension_29 != 0;
    assume BusExtension_29 > 0;
    havoc AvAdapterData_10;
    assume {:nonnull} Request_13 != 0;
    assume Request_13 > 0;
    MonitorPlugs := MonitorPlugs__AV_61883_REQUEST(Request_13);
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    MonitorData_1 := MonitorData__PDO_DEVICE_EXTENSION(PdoExtension_13);
    call {:si_unique_call 1131} Tmp_516 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_516 != 0;
    assume Tmp_516 > 0;
    call {:si_unique_call 1132} sdv_KeAcquireSpinLock(0, Tmp_516);
    assume {:nonnull} Tmp_516 != 0;
    assume Tmp_516 > 0;
    havoc Irql_21;
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1133} vslice_dummy_var_175 := sdv_RemoveEntryList(0);
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    goto L25;

  L25:
    call {:si_unique_call 1134} sdv_KeReleaseSpinLock(0, Irql_21);
    Tmp_515 := ntStatus_26;
    return;

  anon5_Then:
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    assume {:nonnull} MonitorPlugs != 0;
    assume MonitorPlugs > 0;
    assume {:nonnull} AvAdapterData_10 != 0;
    assume AvAdapterData_10 > 0;
    assume {:nonnull} MonitorData_1 != 0;
    assume MonitorData_1 > 0;
    call {:si_unique_call 1135} vslice_dummy_var_176 := sdv_InsertTailList(MonitorList__AV_ADAPTER_DATA(AvAdapterData_10), Entry__CMP_MONITOR_DATA(MonitorData_1));
    goto L25;

  anon6_Then:
    ntStatus_26 := -1073741811;
    goto L25;
}



procedure {:origName "AvCmp_Process_oMap"} AvCmp_Process_oMap(actual_NotifyInfo_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_Process_oMap"} AvCmp_Process_oMap(actual_NotifyInfo_2: int)
{
  var {:scalar} MonitorInfo: int;
  var {:scalar} Tmp_518: int;
  var {:scalar} Tmp_519: int;
  var {:pointer} Tmp_520: int;
  var {:scalar} PlugNum: int;
  var {:scalar} sdv_439: int;
  var {:pointer} CmpData_1: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:scalar} Tmp_523: int;
  var {:scalar} CmpNotifyInfo: int;
  var {:scalar} sdv_440: int;
  var {:pointer} CurrMonitor: int;
  var {:scalar} sdv_441: int;
  var {:pointer} Plug: int;
  var {:scalar} Pcr: int;
  var {:pointer} Tmp_525: int;
  var {:pointer} Tmp_526: int;
  var {:scalar} Irql_22: int;
  var {:pointer} oPCR: int;
  var {:pointer} AvAdapterData_11: int;
  var {:scalar} Tmp_527: int;
  var {:scalar} Tmp_528: int;
  var {:pointer} Tmp_529: int;
  var {:pointer} NotifyInfo_2: int;
  var vslice_dummy_var_177: int;

  anon0:
    call {:si_unique_call 1136} MonitorInfo := __HAVOC_malloc(76);
    call {:si_unique_call 1137} vslice_dummy_var_177 := __HAVOC_malloc(4);
    call {:si_unique_call 1138} CmpNotifyInfo := __HAVOC_malloc(68);
    call {:si_unique_call 1139} Pcr := __HAVOC_malloc(60);
    NotifyInfo_2 := actual_NotifyInfo_2;
    call {:si_unique_call 1140} Tmp_520 := __HAVOC_malloc(992);
    call {:si_unique_call 1141} Tmp_521 := __HAVOC_malloc(1860);
    call {:si_unique_call 1142} Tmp_522 := __HAVOC_malloc(1860);
    call {:si_unique_call 1143} Tmp_525 := __HAVOC_malloc(1860);
    call {:si_unique_call 1144} Tmp_529 := __HAVOC_malloc(1860);
    assume {:nonnull} NotifyInfo_2 != 0;
    assume NotifyInfo_2 > 0;
    havoc CmpData_1;
    assume {:nonnull} NotifyInfo_2 != 0;
    assume NotifyInfo_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} NotifyInfo_2 != 0;
    assume NotifyInfo_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} NotifyInfo_2 != 0;
    assume NotifyInfo_2 > 0;
    havoc PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_518 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_520;
    Plug := Tmp_520 + Tmp_518 * 32;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    Tmp_519 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_521;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    oPCR := oPCR__AV_PCR(Tmp_521 + Tmp_519 * 60);
    Tmp_528 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_525;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CmpNotifyInfo != 0;
    assume CmpNotifyInfo > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Plug != 0;
    assume Plug > 0;
    goto L30;

  L30:
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc AvAdapterData_11;
    CurrMonitor := 0;
    call {:si_unique_call 1145} Tmp_526 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    call {:si_unique_call 1146} sdv_KeAcquireSpinLock(0, Tmp_526);
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    havoc Irql_22;
    call {:si_unique_call 1147} sdv_440 := sdv_IsListEmpty(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_440 != 0;
    goto L48;

  L48:
    call {:si_unique_call 1148} sdv_KeReleaseSpinLock(0, Irql_22);
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} sdv_440 == 0;
    goto L47;

  L47:
    call {:si_unique_call 1149} CurrMonitor := AvCmp_Process_oMap_loop_L47(MonitorInfo, PlugNum, CurrMonitor, oPCR, AvAdapterData_11);
    goto L47_last;

  L47_last:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} CurrMonitor != 0;
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    havoc CurrMonitor;
    goto L53;

  L53:
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} oPCR != 0;
    assume oPCR > 0;
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    assume {:nonnull} MonitorInfo != 0;
    assume MonitorInfo > 0;
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} CurrMonitor != 0;
    assume CurrMonitor > 0;
    goto L59;

  L59:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L48;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    assume false;
    return;

  anon30_Then:
    goto L59;

  anon24_Then:
    assume {:partition} CurrMonitor == 0;
    assume {:nonnull} AvAdapterData_11 != 0;
    assume AvAdapterData_11 > 0;
    havoc CurrMonitor;
    goto L53;

  anon22_Then:
    goto L1;

  anon29_Then:
    goto L30;

  anon28_Then:
    Tmp_523 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_529;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    Tmp_527 := PlugNum;
    assume {:nonnull} CmpData_1 != 0;
    assume CmpData_1 > 0;
    havoc Tmp_522;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Pcr != 0;
    assume Pcr > 0;
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    goto L1;

  anon27_Then:
    goto L1;

  anon21_Then:
    goto L1;

  anon26_Then:
    goto L1;
}



procedure {:origName "AvCmp_DeletePlug"} AvCmp_DeletePlug(actual_BusExtension_30: int, actual_Irp_42: int, actual_Request_14: int) returns (Tmp_530: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_530 == 0 || Tmp_530 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_DeletePlug"} AvCmp_DeletePlug(actual_BusExtension_30: int, actual_Irp_42: int, actual_Request_14: int) returns (Tmp_530: int)
{
  var {:scalar} MonitorInfo_1: int;
  var {:scalar} Tmp_531: int;
  var {:pointer} DeletePlug: int;
  var {:scalar} PlugNum_1: int;
  var {:scalar} u: int;
  var {:pointer} Tmp_532: int;
  var {:scalar} sdv_442: int;
  var {:pointer} Tmp_533: int;
  var {:pointer} CmpData_2: int;
  var {:pointer} Tmp_534: int;
  var {:pointer} Tmp_535: int;
  var {:scalar} Tmp_536: int;
  var {:scalar} sdv_443: int;
  var {:scalar} ntStatus_27: int;
  var {:pointer} Tmp_537: int;
  var {:scalar} sdv_444: int;
  var {:pointer} CurrMonitor_1: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Plug_1: int;
  var {:scalar} Tmp_539: int;
  var {:scalar} Irql_23: int;
  var {:pointer} AvAdapterData_12: int;
  var {:scalar} Tmp_540: int;
  var {:pointer} BusExtension_30: int;
  var {:pointer} Request_14: int;

  anon0:
    call {:si_unique_call 1150} MonitorInfo_1 := __HAVOC_malloc(76);
    call {:si_unique_call 1151} u := __HAVOC_malloc(28);
    BusExtension_30 := actual_BusExtension_30;
    Request_14 := actual_Request_14;
    call {:si_unique_call 1152} Tmp_534 := __HAVOC_malloc(1860);
    call {:si_unique_call 1153} Tmp_535 := __HAVOC_malloc(1860);
    call {:si_unique_call 1154} Tmp_537 := __HAVOC_malloc(1860);
    call {:si_unique_call 1155} Tmp_538 := __HAVOC_malloc(1860);
    ntStatus_27 := 0;
    assume {:nonnull} Request_14 != 0;
    assume Request_14 > 0;
    DeletePlug := DeletePlug__AV_61883_REQUEST(Request_14);
    assume {:nonnull} DeletePlug != 0;
    assume DeletePlug > 0;
    havoc Plug_1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Plug_1 != 0;
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    havoc CmpData_2;
    goto L19;

  L19:
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    havoc AvAdapterData_12;
    CurrMonitor_1 := 0;
    call {:si_unique_call 1156} Tmp_532 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    call {:si_unique_call 1157} sdv_KeAcquireSpinLock(0, Tmp_532);
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    havoc Irql_23;
    call {:si_unique_call 1158} sdv_442 := sdv_IsListEmpty(0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sdv_442 != 0;
    goto L36;

  L36:
    call {:si_unique_call 1159} sdv_KeReleaseSpinLock(0, Irql_23);
    goto L20;

  L20:
    call {:si_unique_call 1160} Tmp_532 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    call {:si_unique_call 1161} sdv_KeAcquireSpinLock(0, Tmp_532);
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    havoc Irql_23;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    havoc PlugNum_1;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto L61;

  L61:
    Tmp_539 := PlugNum_1;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    Tmp_536 := PlugNum_1;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_534;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    goto L53;

  L53:
    call {:si_unique_call 1162} sdv_KeReleaseSpinLock(0, Irql_23);
    goto L70;

  L70:
    Tmp_530 := ntStatus_27;
    return;

  anon31_Then:
    goto L61;

  anon29_Then:
    goto L53;

  anon28_Then:
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    havoc PlugNum_1;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto L75;

  L75:
    Tmp_540 := PlugNum_1;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_535;
    assume {:nonnull} Tmp_535 != 0;
    assume Tmp_535 > 0;
    Tmp_531 := PlugNum_1;
    assume {:nonnull} CmpData_2 != 0;
    assume CmpData_2 > 0;
    havoc Tmp_538;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    goto L53;

  anon32_Then:
    goto L75;

  anon25_Then:
    assume {:partition} sdv_442 == 0;
    goto L35;

  L35:
    call {:si_unique_call 1163} CurrMonitor_1 := AvCmp_DeletePlug_loop_L35(MonitorInfo_1, CurrMonitor_1, Plug_1, AvAdapterData_12);
    goto L35_last;

  L35_last:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} CurrMonitor_1 != 0;
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    havoc CurrMonitor_1;
    goto L41;

  L41:
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} Plug_1 != 0;
    assume Plug_1 > 0;
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    assume {:nonnull} MonitorInfo_1 != 0;
    assume MonitorInfo_1 > 0;
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CurrMonitor_1 != 0;
    assume CurrMonitor_1 > 0;
    goto L46;

  L46:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L36;

  anon27_Then:
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    assume false;
    return;

  anon33_Then:
    goto L46;

  anon26_Then:
    assume {:partition} CurrMonitor_1 == 0;
    assume {:nonnull} AvAdapterData_12 != 0;
    assume AvAdapterData_12 > 0;
    havoc CurrMonitor_1;
    goto L41;

  anon24_Then:
    goto L20;

  anon23_Then:
    assume {:nonnull} BusExtension_30 != 0;
    assume BusExtension_30 > 0;
    havoc Tmp_533;
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    havoc CmpData_2;
    goto L19;

  anon30_Then:
    assume {:partition} Plug_1 == 0;
    ntStatus_27 := -1073741811;
    goto L70;
}



procedure {:origName "AvCmp_P2PCR_oPlug"} AvCmp_P2PCR_oPlug(actual_BusExtension_31: int, actual_CmpData_3: int, actual_Connect_6: int, actual_bReconnect: int, actual_Generation: int) returns (Tmp_541: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_P2PCR_oPlug"} AvCmp_P2PCR_oPlug(actual_BusExtension_31: int, actual_CmpData_3: int, actual_Connect_6: int, actual_bReconnect: int, actual_Generation: int) returns (Tmp_541: int)
{
  var {:scalar} Pcr1: int;
  var {:scalar} Tmp_542: int;
  var {:scalar} MonitorInfo_2: int;
  var {:pointer} Tmp_543: int;
  var {:scalar} Tmp_544: int;
  var {:scalar} bBandwidth: int;
  var {:pointer} Tmp_545: int;
  var {:pointer} iPlug: int;
  var {:pointer} oPlug: int;
  var {:scalar} Tmp_546: int;
  var {:scalar} Pcr2: int;
  var {:scalar} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} sdv_449: int;
  var {:pointer} iPCR: int;
  var {:scalar} ntStatus_28: int;
  var {:pointer} Tmp_550: int;
  var {:scalar} PcrOrg: int;
  var {:scalar} Tmp_551: int;
  var {:scalar} BandwidthUnits: int;
  var {:pointer} Tmp_552: int;
  var {:pointer} CurrMonitor_2: int;
  var {:scalar} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:scalar} Pcr_1: int;
  var {:scalar} bChannel: int;
  var {:scalar} Irql_24: int;
  var {:scalar} sdv_455: int;
  var {:pointer} AvAdapterData_13: int;
  var {:scalar} Tmp_558: int;
  var {:scalar} Tmp_559: int;
  var {:scalar} newSpeed: int;
  var {:pointer} BusExtension_31: int;
  var {:pointer} CmpData_3: int;
  var {:pointer} Connect_6: int;
  var {:scalar} bReconnect: int;
  var {:scalar} Generation: int;
  var boogieTmp: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;

  anon0:
    call {:si_unique_call 1164} Pcr1 := __HAVOC_malloc(60);
    call {:si_unique_call 1165} MonitorInfo_2 := __HAVOC_malloc(76);
    call {:si_unique_call 1166} Pcr2 := __HAVOC_malloc(60);
    call {:si_unique_call 1167} PcrOrg := __HAVOC_malloc(60);
    call {:si_unique_call 1168} Pcr_1 := __HAVOC_malloc(60);
    BusExtension_31 := actual_BusExtension_31;
    CmpData_3 := actual_CmpData_3;
    Connect_6 := actual_Connect_6;
    bReconnect := actual_bReconnect;
    Generation := actual_Generation;
    call {:si_unique_call 1169} Tmp_543 := __HAVOC_malloc(1860);
    call {:si_unique_call 1170} Tmp_545 := __HAVOC_malloc(1860);
    call {:si_unique_call 1171} Tmp_548 := __HAVOC_malloc(1860);
    call {:si_unique_call 1172} Tmp_550 := __HAVOC_malloc(1860);
    call {:si_unique_call 1173} Tmp_552 := __HAVOC_malloc(1860);
    call {:si_unique_call 1174} Tmp_554 := __HAVOC_malloc(1860);
    call {:si_unique_call 1175} Tmp_555 := __HAVOC_malloc(1860);
    call {:si_unique_call 1176} Tmp_557 := __HAVOC_malloc(1860);
    ntStatus_28 := 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc oPlug;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc iPlug;
    BandwidthUnits := 0;
    bChannel := 0;
    bBandwidth := 0;
    assume {:nonnull} BusExtension_31 != 0;
    assume BusExtension_31 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto L24;

  L24:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} ntStatus_28 >= 0;
    goto L26;

  L26:
    Tmp_541 := ntStatus_28;
    goto LM2;

  LM2:
    return;

  anon90_Then:
    assume {:partition} 0 > ntStatus_28;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} bChannel == 1;
    call {:si_unique_call 1177} vslice_dummy_var_178 := Av1394_FreeChannel(BusExtension_31, Connect_6);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L27;

  L27:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} bBandwidth == 1;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc vslice_dummy_var_333;
    call {:si_unique_call 1178} vslice_dummy_var_179 := Av1394_FreeBandwidth(BusExtension_31, Connect_6, vslice_dummy_var_333, BandwidthUnits);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    goto L26;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    assume {:partition} bBandwidth != 1;
    goto L26;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} bChannel != 1;
    goto L27;

  anon113_Then:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} bReconnect == 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_334;
    havoc vslice_dummy_var_335;
    call {:si_unique_call 1179} ntStatus_28 := Av1394_ReadPCR(BusExtension_31, Generation, vslice_dummy_var_334, vslice_dummy_var_335, Pcr1);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} ntStatus_28 >= 0;
    goto L43;

  L43:
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L46;

  L46:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} iPlug != 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_542;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_554;
    assume {:nonnull} Tmp_554 != 0;
    assume Tmp_554 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L51;

  L51:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_544;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_557;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Tmp_557 != 0;
    assume Tmp_557 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    ntStatus_28 := -1073741790;
    goto L24;

  anon124_Then:
    goto L47;

  L47:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    call {:si_unique_call 1180} boogieTmp := corral_nondet();
    goto L55;

  L55:
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} bReconnect == 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_336;
    havoc vslice_dummy_var_337;
    call {:si_unique_call 1181} ntStatus_28 := AvCmp_SetPlugPCR(BusExtension_31, vslice_dummy_var_336, vslice_dummy_var_337, Pcr1, Pcr2, PcrOrg, 1, Generation);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    goto L64;

  L64:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} ntStatus_28 >= 0;
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    assume {:nonnull} PcrOrg != 0;
    assume PcrOrg > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    ntStatus_28 := -1073741823;
    goto L24;

  anon98_Then:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} iPlug != 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_559;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_552;
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    iPCR := iPCR__AV_PCR(Tmp_552 + Tmp_559 * 60);
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_551;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_555;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Pcr_1 != 0;
    assume Pcr_1 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} BusExtension_31 != 0;
    assume BusExtension_31 > 0;
    havoc AvAdapterData_13;
    CurrMonitor_2 := 0;
    call {:si_unique_call 1182} Tmp_549 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    call {:si_unique_call 1183} sdv_KeAcquireSpinLock(0, Tmp_549);
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    havoc Irql_24;
    call {:si_unique_call 1184} sdv_449 := sdv_IsListEmpty(0);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_449 != 0;
    goto L97;

  L97:
    call {:si_unique_call 1185} sdv_KeReleaseSpinLock(0, Irql_24);
    goto L24;

  anon101_Then:
    assume {:partition} sdv_449 == 0;
    goto L96;

  L96:
    call {:si_unique_call 1186} CurrMonitor_2 := AvCmp_P2PCR_oPlug_loop_L96(MonitorInfo_2, iPlug, iPCR, CurrMonitor_2, AvAdapterData_13);
    goto L96_last;

  L96_last:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} CurrMonitor_2 != 0;
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    havoc CurrMonitor_2;
    goto L102;

  L102:
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} iPCR != 0;
    assume iPCR > 0;
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    assume {:nonnull} MonitorInfo_2 != 0;
    assume MonitorInfo_2 > 0;
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} CurrMonitor_2 != 0;
    assume CurrMonitor_2 > 0;
    goto L108;

  L108:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto L97;

  anon103_Then:
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon121_Then:
    goto L108;

  anon102_Then:
    assume {:partition} CurrMonitor_2 == 0;
    assume {:nonnull} AvAdapterData_13 != 0;
    assume AvAdapterData_13 > 0;
    havoc CurrMonitor_2;
    goto L102;

  anon120_Then:
    goto L24;

  anon100_Then:
    goto L24;

  anon99_Then:
    assume {:partition} iPlug == 0;
    goto L24;

  anon97_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon119_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    assume {:partition} bReconnect != 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_338;
    havoc vslice_dummy_var_339;
    call {:si_unique_call 1187} ntStatus_28 := AvCmp_SetPlugPCR(BusExtension_31, vslice_dummy_var_338, vslice_dummy_var_339, Pcr1, Pcr2, PcrOrg, 0, 0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} yogi_error != 1;
    goto L64;

  anon122_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_556;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_545;
    assume {:nonnull} Tmp_545 != 0;
    assume Tmp_545 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    goto L51;

  anon125_Then:
    goto L47;

  anon96_Then:
    goto L47;

  anon95_Then:
    assume {:partition} iPlug == 0;
    goto L47;

  anon117_Then:
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} iPlug != 0;
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_546;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_543;
    assume {:nonnull} Tmp_543 != 0;
    assume Tmp_543 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto L118;

  L118:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_558;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_548;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    assume {:nonnull} Tmp_548 != 0;
    assume Tmp_548 > 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto L120;

  L120:
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    call {:si_unique_call 1188} boogieTmp := corral_nondet();
    goto L55;

  anon129_Then:
    assume {:nonnull} iPlug != 0;
    assume iPlug > 0;
    havoc Tmp_553;
    assume {:nonnull} CmpData_3 != 0;
    assume CmpData_3 > 0;
    havoc Tmp_550;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    goto L118;

  anon130_Then:
    goto L114;

  L114:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} bReconnect != 0;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc Tmp_547;
    goto L123;

  L123:
    call {:si_unique_call 1189} ntStatus_28 := Av1394_AllocateChannel(BusExtension_31, Connect_6, Tmp_547);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} bReconnect != 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} ntStatus_28 == -1073741791;
    call {:si_unique_call 1190} ntStatus_28 := Av1394_AllocateChannel(BusExtension_31, Connect_6, -1);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} yogi_error != 1;
    goto L128;

  L128:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} ntStatus_28 >= 0;
    bChannel := 1;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    havoc vslice_dummy_var_340;
    havoc vslice_dummy_var_341;
    call {:si_unique_call 1191} BandwidthUnits := AvCmp_CalculateBWUnits(Connect_6, vslice_dummy_var_340, vslice_dummy_var_341);
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    havoc vslice_dummy_var_342;
    call {:si_unique_call 1192} ntStatus_28 := Av1394_AllocateBandwidth(BusExtension_31, Connect_6, vslice_dummy_var_342, BandwidthUnits);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} yogi_error != 1;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} ntStatus_28 >= 0;
    bBandwidth := 1;
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr2 != 0;
    assume Pcr2 > 0;
    goto L120;

  anon110_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon128_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon127_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon109_Then:
    assume {:partition} ntStatus_28 != -1073741791;
    goto L128;

  anon107_Then:
    assume {:partition} bReconnect == 0;
    goto L128;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:partition} bReconnect == 0;
    Tmp_547 := -1;
    goto L123;

  anon106_Then:
    goto L114;

  anon104_Then:
    assume {:partition} iPlug == 0;
    goto L114;

  anon94_Then:
    goto L46;

  anon93_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon116_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon89_Then:
    assume {:partition} bReconnect != 1;
    assume {:nonnull} oPlug != 0;
    assume oPlug > 0;
    havoc vslice_dummy_var_343;
    havoc vslice_dummy_var_344;
    call {:si_unique_call 1193} ntStatus_28 := AvCmp_GetPlugPCR(BusExtension_31, vslice_dummy_var_343, vslice_dummy_var_344, Pcr1);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} yogi_error != 1;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} ntStatus_28 >= 0;
    call {:si_unique_call 1194} newSpeed := corral_nondet();
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    goto L154;

  L154:
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    assume {:nonnull} Pcr1 != 0;
    assume Pcr1 > 0;
    goto L43;

  anon112_Then:
    assume {:nonnull} Connect_6 != 0;
    assume Connect_6 > 0;
    goto L43;

  anon132_Then:
    goto L154;

  anon111_Then:
    assume {:partition} 0 > ntStatus_28;
    goto L24;

  anon131_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCmp_InitCipModule"} AvCmp_InitCipModule(actual_BusExtension_32: int, actual_Connect_7: int, actual_TalkFormat: int) returns (Tmp_560: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_InitCipModule"} AvCmp_InitCipModule(actual_BusExtension_32: int, actual_Connect_7: int, actual_TalkFormat: int) returns (Tmp_560: int)
{
  var {:pointer} iPlug_1: int;
  var {:scalar} Status_33: int;
  var {:pointer} oPlug_1: int;
  var {:pointer} BusExtension_32: int;
  var {:pointer} Connect_7: int;
  var {:pointer} TalkFormat: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;

  anon0:
    BusExtension_32 := actual_BusExtension_32;
    Connect_7 := actual_Connect_7;
    TalkFormat := actual_TalkFormat;
    Status_33 := 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc iPlug_1;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc oPlug_1;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} iPlug_1 != 0;
    assume {:nonnull} iPlug_1 != 0;
    assume iPlug_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} oPlug_1 != 0;
    assume {:nonnull} oPlug_1 != 0;
    assume oPlug_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L15;

  L15:
    Tmp_560 := Status_33;
    goto LM2;

  LM2:
    return;

  anon38_Then:
    goto L10;

  L10:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} iPlug_1 != 0;
    assume {:nonnull} iPlug_1 != 0;
    assume iPlug_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L18;

  L18:
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_345;
    havoc vslice_dummy_var_346;
    call {:si_unique_call 1195} Status_33 := AvCip_Create(CipData__AV_CONNECT(Connect_7), vslice_dummy_var_345, vslice_dummy_var_346, IrbPool__BUS_DEVICE_EXTENSION(BusExtension_32), Connect_7, 0, NodeID__BUS_DEVICE_EXTENSION(BusExtension_32));
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status_33 >= 0;
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_347;
    call {:si_unique_call 1196} Status_33 := AvCip_SetTalkFormat(vslice_dummy_var_347, TalkFormat, NodeID__BUS_DEVICE_EXTENSION(BusExtension_32));
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status_33 >= 0;
    goto L30;

  L30:
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_348;
    havoc vslice_dummy_var_349;
    havoc vslice_dummy_var_350;
    havoc vslice_dummy_var_351;
    havoc vslice_dummy_var_352;
    call {:si_unique_call 1197} Status_33 := AvCip_SetCipIsochParameters(vslice_dummy_var_348, vslice_dummy_var_349, vslice_dummy_var_350, vslice_dummy_var_351, vslice_dummy_var_352);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status_33 >= 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_353;
    havoc vslice_dummy_var_354;
    call {:si_unique_call 1198} vslice_dummy_var_180 := AvCip_SetCipPacketSize(vslice_dummy_var_353, vslice_dummy_var_354);
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_355;
    havoc vslice_dummy_var_356;
    call {:si_unique_call 1199} vslice_dummy_var_181 := AvCip_SetSpeed(vslice_dummy_var_355, vslice_dummy_var_356);
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_357;
    havoc vslice_dummy_var_358;
    call {:si_unique_call 1200} vslice_dummy_var_182 := AvCip_SetChannel(vslice_dummy_var_357, vslice_dummy_var_358);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L15;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} 0 > Status_33;
    goto L15;

  anon42_Then:
    assume {:partition} 0 > Status_33;
    goto L15;

  anon41_Then:
    assume {:partition} 0 > Status_33;
    goto L15;

  anon40_Then:
    goto L16;

  L16:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} oPlug_1 != 0;
    assume {:nonnull} oPlug_1 != 0;
    assume oPlug_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L45;

  L45:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} oPlug_1 != 0;
    assume {:nonnull} oPlug_1 != 0;
    assume oPlug_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L49;

  L49:
    assume {:nonnull} BusExtension_32 != 0;
    assume BusExtension_32 > 0;
    assume {:nonnull} Connect_7 != 0;
    assume Connect_7 > 0;
    havoc vslice_dummy_var_359;
    havoc vslice_dummy_var_360;
    call {:si_unique_call 1201} Status_33 := AvCip_Create(CipData__AV_CONNECT(Connect_7), vslice_dummy_var_359, vslice_dummy_var_360, IrbPool__BUS_DEVICE_EXTENSION(BusExtension_32), Connect_7, 1, NodeID__BUS_DEVICE_EXTENSION(BusExtension_32));
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Status_33 >= 0;
    goto L30;

  anon48_Then:
    assume {:partition} 0 > Status_33;
    goto L15;

  anon47_Then:
    goto L47;

  L47:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} iPlug_1 != 0;
    assume {:nonnull} iPlug_1 != 0;
    assume iPlug_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L49;

  anon49_Then:
    goto L30;

  anon46_Then:
    assume {:partition} iPlug_1 == 0;
    goto L30;

  anon44_Then:
    assume {:partition} oPlug_1 == 0;
    goto L47;

  anon45_Then:
    goto L18;

  anon39_Then:
    assume {:partition} oPlug_1 == 0;
    goto L45;

  anon35_Then:
    assume {:partition} iPlug_1 == 0;
    goto L16;

  anon37_Then:
    assume {:partition} oPlug_1 == 0;
    goto L10;

  anon36_Then:
    goto L10;

  anon50_Then:
    assume {:partition} iPlug_1 == 0;
    goto L10;
}



procedure {:origName "AvCmp_CreateCMPAddressRange"} AvCmp_CreateCMPAddressRange(actual_BusExtension_33: int, actual_CmpData_4: int, actual_PlugType: int) returns (Tmp_562: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_CreateCMPAddressRange"} AvCmp_CreateCMPAddressRange(actual_BusExtension_33: int, actual_CmpData_4: int, actual_PlugType: int) returns (Tmp_562: int)
{
  var {:pointer} Irp_43: int;
  var {:pointer} Irb_14: int;
  var {:scalar} StackSize_8: int;
  var {:pointer} sdv_465: int;
  var {:scalar} ntStatus_29: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} BusExtension_33: int;
  var {:pointer} CmpData_4: int;
  var {:scalar} PlugType: int;
  var vslice_dummy_var_361: int;

  anon0:
    BusExtension_33 := actual_BusExtension_33;
    CmpData_4 := actual_CmpData_4;
    PlugType := actual_PlugType;
    ntStatus_29 := 0;
    Irp_43 := 0;
    Irb_14 := 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    havoc Tmp_564;
    assume {:nonnull} Tmp_564 != 0;
    assume Tmp_564 > 0;
    havoc StackSize_8;
    call {:si_unique_call 1202} Irp_43 := IoAllocateIrp(StackSize_8, 0);
    call {:si_unique_call 1203} sdv_465 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_14 := sdv_465;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp_43 != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irb_14 != 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L30;

  L30:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} PlugType != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} PlugType == 1;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L38;

  L38:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    havoc vslice_dummy_var_361;
    call {:si_unique_call 1204} ntStatus_29 := Av_SubmitIrpSynch#1(vslice_dummy_var_361, Irp_43, Irb_14);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} ntStatus_29 >= 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} PlugType != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} PlugType == 1;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L50;

  L50:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Irp_43 != 0;
    call {:si_unique_call 1205} IoFreeIrp(0);
    goto L55;

  L55:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irb_14 != 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    call {:si_unique_call 1206} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_33), Irb_14);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L59;

  L59:
    Tmp_562 := ntStatus_29;
    goto LM2;

  LM2:
    return;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} Irb_14 == 0;
    goto L59;

  anon30_Then:
    assume {:partition} Irp_43 == 0;
    goto L55;

  anon32_Then:
    assume {:partition} PlugType != 1;
    goto L50;

  anon31_Then:
    assume {:partition} PlugType == 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L50;

  anon29_Then:
    assume {:partition} 0 > ntStatus_29;
    goto L50;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} PlugType != 1;
    goto L38;

  anon36_Then:
    assume {:partition} PlugType == 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} CmpData_4 != 0;
    assume CmpData_4 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} BusExtension_33 != 0;
    assume BusExtension_33 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L38;

  anon39_Then:
    goto L38;

  anon35_Then:
    assume {:nonnull} Irb_14 != 0;
    assume Irb_14 > 0;
    goto L30;

  anon27_Then:
    assume {:partition} Irb_14 == 0;
    goto L20;

  L20:
    ntStatus_29 := -1073741670;
    goto L50;

  anon34_Then:
    assume {:partition} Irp_43 == 0;
    goto L20;
}



procedure {:origName "AvCmp_SetPlugPCR"} AvCmp_SetPlugPCR(actual_BusExtension_34: int, actual_Type_4: int, actual_Index: int, actual_PcrRef: int, actual_PcrSet: int, actual_PcrOrg_1: int, actual_bGeneration: int, actual_Generation_1: int) returns (Tmp_565: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_SetPlugPCR"} AvCmp_SetPlugPCR(actual_BusExtension_34: int, actual_Type_4: int, actual_Index: int, actual_PcrRef: int, actual_PcrSet: int, actual_PcrOrg_1: int, actual_bGeneration: int, actual_Generation_1: int) returns (Tmp_565: int)
{
  var {:pointer} pUlong1: int;
  var {:scalar} sdv_467: int;
  var {:pointer} pUlong3: int;
  var {:scalar} Tmp_567: int;
  var {:pointer} pUlong2: int;
  var {:scalar} sdv_469: int;
  var {:scalar} ntStatus_30: int;
  var {:scalar} sdv_470: int;
  var {:scalar} sdv_471: int;
  var {:scalar} sdv_472: int;
  var {:scalar} Tmp_568: int;
  var {:pointer} BusExtension_34: int;
  var {:scalar} Type_4: int;
  var {:scalar} Index: int;
  var {:pointer} PcrRef: int;
  var {:pointer} PcrSet: int;
  var {:pointer} PcrOrg_1: int;
  var {:scalar} bGeneration: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;

  anon0:
    BusExtension_34 := actual_BusExtension_34;
    Type_4 := actual_Type_4;
    Index := actual_Index;
    PcrRef := actual_PcrRef;
    PcrSet := actual_PcrSet;
    PcrOrg_1 := actual_PcrOrg_1;
    bGeneration := actual_bGeneration;
    Generation_1 := actual_Generation_1;
    ntStatus_30 := 0;
    pUlong1 := PcrRef;
    pUlong2 := PcrSet;
    pUlong3 := PcrOrg_1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Index <= 30;
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Type_4 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Type_4 == 1;
    Tmp_568 := -268433020 + Index * 4;
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    havoc vslice_dummy_var_362;
    havoc vslice_dummy_var_363;
    call {:si_unique_call 1207} ntStatus_30 := Av1394_LockedSwap(BusExtension_34, vslice_dummy_var_362, vslice_dummy_var_363, pUlong3, Tmp_568, bGeneration, Generation_1);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    assume {:nonnull} pUlong3 != 0;
    assume pUlong3 > 0;
    Tmp_565 := ntStatus_30;
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} Type_4 != 1;
    ntStatus_30 := -1073741811;
    goto L20;

  anon13_Then:
    assume {:partition} Type_4 == 0;
    Tmp_567 := -268433148 + Index * 4;
    assume {:nonnull} pUlong1 != 0;
    assume pUlong1 > 0;
    assume {:nonnull} pUlong2 != 0;
    assume pUlong2 > 0;
    havoc vslice_dummy_var_364;
    havoc vslice_dummy_var_365;
    call {:si_unique_call 1208} ntStatus_30 := Av1394_LockedSwap(BusExtension_34, vslice_dummy_var_364, vslice_dummy_var_365, pUlong3, Tmp_567, bGeneration, Generation_1);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} 30 < Index;
    ntStatus_30 := -1073741811;
    goto L20;
}



procedure {:origName "AvCmp_GetUnitCapabilities"} AvCmp_GetUnitCapabilities(actual_BusExtension_35: int, actual_Irp_44: int, actual_Request_15: int) returns (Tmp_569: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_569 == -1073741811 || Tmp_569 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_GetUnitCapabilities"} AvCmp_GetUnitCapabilities(actual_BusExtension_35: int, actual_Irp_44: int, actual_Request_15: int) returns (Tmp_569: int)
{
  var {:pointer} pVersion: int;
  var {:pointer} Tmp_570: int;
  var {:pointer} GetUnitCaps: int;
  var {:scalar} ulUnitModelLength: int;
  var {:scalar} uniVendorText: int;
  var {:pointer} GetUnitInfo: int;
  var {:pointer} pDiagLevel: int;
  var {:pointer} CmpData_5: int;
  var {:scalar} uniUnitModelText: int;
  var {:pointer} uniUnitModelId: int;
  var {:scalar} ulModelLength: int;
  var {:scalar} uniModelText: int;
  var {:pointer} UnitIsochParams: int;
  var {:pointer} uniModelId_2: int;
  var {:scalar} ntStatus_31: int;
  var {:scalar} ulVendorLength: int;
  var {:pointer} BusGenNode: int;
  var {:pointer} GetUnitIds: int;
  var {:pointer} uniVendorId_2: int;
  var {:pointer} BusExtension_35: int;
  var {:pointer} Request_15: int;

  anon0:
    call {:si_unique_call 1209} uniVendorText := __HAVOC_malloc(12);
    call {:si_unique_call 1210} uniUnitModelText := __HAVOC_malloc(12);
    call {:si_unique_call 1211} uniModelText := __HAVOC_malloc(12);
    BusExtension_35 := actual_BusExtension_35;
    Request_15 := actual_Request_15;
    ntStatus_31 := 0;
    assume {:nonnull} Request_15 != 0;
    assume Request_15 > 0;
    GetUnitInfo := GetUnitInfo__AV_61883_REQUEST(Request_15);
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc GetUnitIds;
    ulVendorLength := 0;
    ulModelLength := 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L21;

  L21:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L23;

  L23:
    assume {:nonnull} Request_15 != 0;
    assume Request_15 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    ntStatus_31 := -1073741811;
    goto L29;

  L29:
    Tmp_569 := ntStatus_31;
    return;

  anon55_Then:
    goto L24;

  L24:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    uniVendorId_2 := uniVendorId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_35));
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    uniModelId_2 := uniModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_35));
    assume {:nonnull} uniVendorId_2 != 0;
    assume uniVendorId_2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} uniVendorId_2 != 0;
    assume uniVendorId_2 > 0;
    havoc ulVendorLength;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} uniVendorText != 0;
    assume uniVendorText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniVendorText != 0;
    assume uniVendorText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniVendorText != 0;
    assume uniVendorText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L46;

  L46:
    assume {:nonnull} uniModelId_2 != 0;
    assume uniModelId_2 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} uniModelId_2 != 0;
    assume uniModelId_2 > 0;
    havoc ulModelLength;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} uniModelText != 0;
    assume uniModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniModelText != 0;
    assume uniModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniModelText != 0;
    assume uniModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L58;

  L58:
    assume {:nonnull} Request_15 != 0;
    assume Request_15 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    ulUnitModelLength := 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    uniUnitModelId := uniUnitModelId__UNIT_DATA(UnitData__BUS_DEVICE_EXTENSION(BusExtension_35));
    assume {:nonnull} uniUnitModelId != 0;
    assume uniUnitModelId > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} uniUnitModelId != 0;
    assume uniUnitModelId > 0;
    havoc ulUnitModelLength;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} uniUnitModelText != 0;
    assume uniUnitModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniUnitModelText != 0;
    assume uniUnitModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} uniUnitModelText != 0;
    assume uniUnitModelText > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L29;

  anon71_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L29;

  anon70_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L29;

  anon57_Then:
    goto L29;

  anon69_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L58;

  anon56_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L58;

  anon68_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L46;

  anon67_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto L46;

  anon54_Then:
    goto L24;

  anon53_Then:
    goto L24;

  anon51_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    ntStatus_31 := -1073741811;
    goto L29;

  anon52_Then:
    goto L23;

  anon66_Then:
    assume {:nonnull} GetUnitIds != 0;
    assume GetUnitIds > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    ntStatus_31 := -1073741811;
    goto L29;

  anon50_Then:
    goto L21;

  anon65_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc GetUnitCaps;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L90;

  L90:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    havoc CmpData_5;
    goto L93;

  L93:
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} CmpData_5 != 0;
    assume CmpData_5 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    goto L29;

  anon60_Then:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    havoc Tmp_570;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    havoc CmpData_5;
    goto L93;

  anon72_Then:
    assume {:nonnull} Request_15 != 0;
    assume Request_15 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} GetUnitCaps != 0;
    assume GetUnitCaps > 0;
    goto L29;

  anon61_Then:
    ntStatus_31 := -1073741811;
    goto L29;

  anon59_Then:
    goto L90;

  anon49_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc UnitIsochParams;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} UnitIsochParams != 0;
    assume UnitIsochParams > 0;
    goto L29;

  anon58_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc BusGenNode;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} BusGenNode != 0;
    assume BusGenNode > 0;
    goto L29;

  anon62_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc pVersion;
    assume {:nonnull} pVersion != 0;
    assume pVersion > 0;
    goto L29;

  anon63_Then:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} GetUnitInfo != 0;
    assume GetUnitInfo > 0;
    havoc pDiagLevel;
    assume {:nonnull} BusExtension_35 != 0;
    assume BusExtension_35 > 0;
    assume {:nonnull} pDiagLevel != 0;
    assume pDiagLevel > 0;
    goto L29;

  anon64_Then:
    ntStatus_31 := -1073741811;
    goto L29;
}



procedure {:origName "AvCmp_SetPlug"} AvCmp_SetPlug(actual_PdoExtension_14: int, actual_Irp_45: int, actual_Request_16: int) returns (Tmp_572: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_572 == 0 || Tmp_572 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_SetPlug"} AvCmp_SetPlug(actual_PdoExtension_14: int, actual_Irp_45: int, actual_Request_16: int) returns (Tmp_572: int)
{
  var {:pointer} Tmp_573: int;
  var {:scalar} MonitorInfo_3: int;
  var {:pointer} SetPlug: int;
  var {:pointer} Tmp_574: int;
  var {:scalar} PlugNum_2: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} Tmp_576: int;
  var {:scalar} sdv_474: int;
  var {:pointer} CmpData_6: int;
  var {:pointer} Tmp_577: int;
  var {:pointer} Tmp_578: int;
  var {:scalar} sdv_475: int;
  var {:pointer} iPCR_1: int;
  var {:scalar} ntStatus_32: int;
  var {:scalar} sdv_476: int;
  var {:pointer} CurrMonitor_3: int;
  var {:pointer} Plug_2: int;
  var {:scalar} Tmp_579: int;
  var {:scalar} Pcr_2: int;
  var {:pointer} Tmp_580: int;
  var {:pointer} oPCR_1: int;
  var {:scalar} Irql_25: int;
  var {:pointer} BusExtension_36: int;
  var {:pointer} AvAdapterData_14: int;
  var {:pointer} Tmp_581: int;
  var {:scalar} Tmp_582: int;
  var {:scalar} Tmp_583: int;
  var {:pointer} PdoExtension_14: int;
  var {:pointer} Request_16: int;

  anon0:
    call {:si_unique_call 1212} MonitorInfo_3 := __HAVOC_malloc(76);
    call {:si_unique_call 1213} Pcr_2 := __HAVOC_malloc(60);
    PdoExtension_14 := actual_PdoExtension_14;
    Request_16 := actual_Request_16;
    call {:si_unique_call 1214} Tmp_573 := __HAVOC_malloc(1860);
    call {:si_unique_call 1215} Tmp_575 := __HAVOC_malloc(1860);
    call {:si_unique_call 1216} Tmp_578 := __HAVOC_malloc(1860);
    call {:si_unique_call 1217} Tmp_581 := __HAVOC_malloc(1860);
    ntStatus_32 := 0;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc Tmp_574;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    havoc BusExtension_36;
    assume {:nonnull} Request_16 != 0;
    assume Request_16 > 0;
    SetPlug := SetPlug__AV_61883_REQUEST(Request_16);
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    havoc CmpData_6;
    goto L18;

  L18:
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    havoc Plug_2;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Plug_2 != 0;
    call {:si_unique_call 1218} Tmp_580 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 1219} sdv_KeAcquireSpinLock(0, Tmp_580);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc Irql_25;
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    havoc PlugNum_2;
    Tmp_576 := PlugNum_2;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    havoc Tmp_573;
    assume {:nonnull} Tmp_573 != 0;
    assume Tmp_573 > 0;
    oPCR_1 := oPCR__AV_PCR(Tmp_573 + Tmp_576 * 60);
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} oPCR_1 != 0;
    assume oPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    Tmp_579 := PlugNum_2;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    havoc Tmp_581;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    goto L40;

  L40:
    call {:si_unique_call 1220} sdv_KeReleaseSpinLock(0, Irql_25);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_32 < 0;
    goto L46;

  L46:
    Tmp_572 := ntStatus_32;
    return;

  anon28_Then:
    assume {:partition} 0 <= ntStatus_32;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    havoc AvAdapterData_14;
    CurrMonitor_3 := 0;
    call {:si_unique_call 1221} Tmp_580 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 1222} sdv_KeAcquireSpinLock(0, Tmp_580);
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc Irql_25;
    call {:si_unique_call 1223} sdv_475 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_475 != 0;
    goto L60;

  L60:
    call {:si_unique_call 1224} sdv_KeReleaseSpinLock(0, Irql_25);
    goto L46;

  anon30_Then:
    assume {:partition} sdv_475 == 0;
    goto L59;

  L59:
    call {:si_unique_call 1225} CurrMonitor_3 := AvCmp_SetPlug_loop_L59(MonitorInfo_3, PlugNum_2, CurrMonitor_3, Plug_2, Pcr_2, AvAdapterData_14);
    goto L59_last;

  L59_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} CurrMonitor_3 != 0;
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    havoc CurrMonitor_3;
    goto L65;

  L65:
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    goto L72;

  L72:
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CurrMonitor_3 != 0;
    assume CurrMonitor_3 > 0;
    goto L73;

  L73:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L60;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon32_Then:
    goto L73;

  anon36_Then:
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} MonitorInfo_3 != 0;
    assume MonitorInfo_3 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    goto L72;

  anon31_Then:
    assume {:partition} CurrMonitor_3 == 0;
    assume {:nonnull} AvAdapterData_14 != 0;
    assume AvAdapterData_14 > 0;
    havoc CurrMonitor_3;
    goto L65;

  anon29_Then:
    goto L46;

  anon26_Then:
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Plug_2 != 0;
    assume Plug_2 > 0;
    havoc PlugNum_2;
    Tmp_582 := PlugNum_2;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    havoc Tmp_578;
    assume {:nonnull} Tmp_578 != 0;
    assume Tmp_578 > 0;
    iPCR_1 := iPCR__AV_PCR(Tmp_578 + Tmp_582 * 60);
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} SetPlug != 0;
    assume SetPlug > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} iPCR_1 != 0;
    assume iPCR_1 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    Tmp_583 := PlugNum_2;
    assume {:nonnull} CmpData_6 != 0;
    assume CmpData_6 > 0;
    havoc Tmp_575;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Pcr_2 != 0;
    assume Pcr_2 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    goto L40;

  anon27_Then:
    ntStatus_32 := -1073741811;
    goto L40;

  anon25_Then:
    ntStatus_32 := -1073741811;
    goto L40;

  anon35_Then:
    assume {:partition} Plug_2 == 0;
    ntStatus_32 := -1073741811;
    goto L46;

  anon34_Then:
    assume {:nonnull} BusExtension_36 != 0;
    assume BusExtension_36 > 0;
    havoc Tmp_577;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    havoc CmpData_6;
    goto L18;
}



procedure {:origName "AvCmp_SetUnitCapabilities"} AvCmp_SetUnitCapabilities(actual_BusExtension_37: int, actual_Irp_46: int, actual_Request_17: int) returns (Tmp_584: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_SetUnitCapabilities"} AvCmp_SetUnitCapabilities(actual_BusExtension_37: int, actual_Irp_46: int, actual_Request_17: int) returns (Tmp_584: int)
{
  var {:pointer} AddressType: int;
  var {:pointer} pDiagLevel_1: int;
  var {:pointer} SetUnitInfo: int;
  var {:pointer} UnitIsochParams_1: int;
  var {:scalar} ntStatus_33: int;
  var {:pointer} BusExtension_37: int;
  var {:pointer} Request_17: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_366: int;

  anon0:
    BusExtension_37 := actual_BusExtension_37;
    Request_17 := actual_Request_17;
    ntStatus_33 := 0;
    assume {:nonnull} Request_17 != 0;
    assume Request_17 > 0;
    SetUnitInfo := SetUnitInfo__AV_61883_REQUEST(Request_17);
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    havoc pDiagLevel_1;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} pDiagLevel_1 != 0;
    assume pDiagLevel_1 > 0;
    goto L12;

  L12:
    Tmp_584 := ntStatus_33;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    havoc UnitIsochParams_1;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    assume {:nonnull} UnitIsochParams_1 != 0;
    assume UnitIsochParams_1 > 0;
    goto L12;

  anon19_Then:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} SetUnitInfo != 0;
    assume SetUnitInfo > 0;
    havoc AddressType;
    assume {:nonnull} AddressType != 0;
    assume AddressType > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    call {:si_unique_call 1226} ntStatus_33 := AvCmp_CreateCmpData(BusExtension_37, 2, CmpData__BUS_DEVICE_EXTENSION(BusExtension_37));
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto L12;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    goto L12;

  anon25_Then:
    assume {:nonnull} AddressType != 0;
    assume AddressType > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    havoc vslice_dummy_var_366;
    call {:si_unique_call 1227} vslice_dummy_var_183 := AvCmp_DestroyCmpData(BusExtension_37, vslice_dummy_var_366);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_37 != 0;
    assume BusExtension_37 > 0;
    goto L12;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    goto L12;

  anon21_Then:
    ntStatus_33 := -1073741811;
    goto L12;

  anon20_Then:
    ntStatus_33 := -1073741811;
    goto L12;
}



procedure {:origName "AvCmp_InitPlugInstance"} AvCmp_InitPlugInstance(actual_BusExtension_38: int, actual_PlugNum_3: int, actual_PlugType_1: int) returns (Tmp_586: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_InitPlugInstance"} AvCmp_InitPlugInstance(actual_BusExtension_38: int, actual_PlugNum_3: int, actual_PlugType_1: int) returns (Tmp_586: int)
{
  var {:pointer} Tmp_587: int;
  var {:scalar} Tmp_588: int;
  var {:pointer} Tmp_590: int;
  var {:scalar} Tmp_591: int;
  var {:scalar} ntStatus_34: int;
  var {:pointer} Plug_3: int;
  var {:scalar} Pcr_3: int;
  var {:pointer} BusExtension_38: int;
  var {:scalar} PlugNum_3: int;
  var {:scalar} PlugType_1: int;

  anon0:
    call {:si_unique_call 1228} Pcr_3 := __HAVOC_malloc(60);
    BusExtension_38 := actual_BusExtension_38;
    PlugNum_3 := actual_PlugNum_3;
    PlugType_1 := actual_PlugType_1;
    ntStatus_34 := 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} PlugType_1 != 0;
    Tmp_591 := PlugNum_3;
    assume {:nonnull} BusExtension_38 != 0;
    assume BusExtension_38 > 0;
    havoc Tmp_587;
    Plug_3 := Tmp_587 + Tmp_591 * 32;
    goto L10;

  L10:
    call {:si_unique_call 1229} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    call {:si_unique_call 1230} ntStatus_34 := AvCmp_GetPlugPCR(BusExtension_38, PlugType_1, PlugNum_3, Pcr_3);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_34 >= 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} PlugType_1 != 0;
    goto L23;

  L23:
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    Tmp_586 := ntStatus_34;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} PlugType_1 == 0;
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L27;

  L27:
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    assume {:nonnull} Plug_3 != 0;
    assume Plug_3 > 0;
    goto L23;

  anon13_Then:
    assume {:nonnull} Pcr_3 != 0;
    assume Pcr_3 > 0;
    goto L27;

  anon11_Then:
    assume {:partition} 0 > ntStatus_34;
    Tmp_586 := ntStatus_34;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} PlugType_1 == 0;
    Tmp_588 := PlugNum_3;
    assume {:nonnull} BusExtension_38 != 0;
    assume BusExtension_38 > 0;
    havoc Tmp_590;
    Plug_3 := Tmp_590 + Tmp_588 * 32;
    goto L10;
}



procedure {:origName "AvCmp_Process_iMap"} AvCmp_Process_iMap(actual_NotifyInfo_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_Process_iMap"} AvCmp_Process_iMap(actual_NotifyInfo_3: int)
{
  var {:scalar} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:scalar} MonitorInfo_4: int;
  var {:scalar} Tmp_595: int;
  var {:scalar} PlugNum_4: int;
  var {:pointer} Tmp_596: int;
  var {:scalar} sdv_480: int;
  var {:scalar} Tmp_597: int;
  var {:pointer} CmpData_7: int;
  var {:scalar} Tmp_598: int;
  var {:scalar} CmpNotifyInfo_1: int;
  var {:scalar} sdv_481: int;
  var {:pointer} iPCR_2: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:scalar} sdv_482: int;
  var {:pointer} CurrMonitor_4: int;
  var {:pointer} Plug_4: int;
  var {:scalar} Pcr_4: int;
  var {:pointer} Tmp_601: int;
  var {:scalar} Tmp_602: int;
  var {:pointer} Tmp_603: int;
  var {:scalar} Irql_26: int;
  var {:pointer} AvAdapterData_15: int;
  var {:pointer} NotifyInfo_3: int;
  var vslice_dummy_var_184: int;

  anon0:
    call {:si_unique_call 1231} vslice_dummy_var_184 := __HAVOC_malloc(4);
    call {:si_unique_call 1232} MonitorInfo_4 := __HAVOC_malloc(76);
    call {:si_unique_call 1233} CmpNotifyInfo_1 := __HAVOC_malloc(68);
    call {:si_unique_call 1234} Pcr_4 := __HAVOC_malloc(60);
    NotifyInfo_3 := actual_NotifyInfo_3;
    call {:si_unique_call 1235} Tmp_594 := __HAVOC_malloc(992);
    call {:si_unique_call 1236} Tmp_599 := __HAVOC_malloc(1860);
    call {:si_unique_call 1237} Tmp_600 := __HAVOC_malloc(1860);
    call {:si_unique_call 1238} Tmp_601 := __HAVOC_malloc(1860);
    call {:si_unique_call 1239} Tmp_603 := __HAVOC_malloc(1860);
    assume {:nonnull} NotifyInfo_3 != 0;
    assume NotifyInfo_3 > 0;
    havoc CmpData_7;
    assume {:nonnull} NotifyInfo_3 != 0;
    assume NotifyInfo_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} NotifyInfo_3 != 0;
    assume NotifyInfo_3 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} NotifyInfo_3 != 0;
    assume NotifyInfo_3 > 0;
    havoc PlugNum_4;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_595 := PlugNum_4;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_594;
    Plug_4 := Tmp_594 + Tmp_595 * 32;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    Tmp_593 := PlugNum_4;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_603;
    assume {:nonnull} Tmp_603 != 0;
    assume Tmp_603 > 0;
    iPCR_2 := iPCR__AV_PCR(Tmp_603 + Tmp_593 * 60);
    Tmp_597 := PlugNum_4;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_599;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CmpNotifyInfo_1 != 0;
    assume CmpNotifyInfo_1 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Plug_4 != 0;
    assume Plug_4 > 0;
    goto L30;

  L30:
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc AvAdapterData_15;
    CurrMonitor_4 := 0;
    call {:si_unique_call 1240} Tmp_596 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_596 != 0;
    assume Tmp_596 > 0;
    call {:si_unique_call 1241} sdv_KeAcquireSpinLock(0, Tmp_596);
    assume {:nonnull} Tmp_596 != 0;
    assume Tmp_596 > 0;
    havoc Irql_26;
    call {:si_unique_call 1242} sdv_481 := sdv_IsListEmpty(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_481 != 0;
    goto L48;

  L48:
    call {:si_unique_call 1243} sdv_KeReleaseSpinLock(0, Irql_26);
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} sdv_481 == 0;
    goto L47;

  L47:
    call {:si_unique_call 1244} CurrMonitor_4 := AvCmp_Process_iMap_loop_L47(MonitorInfo_4, PlugNum_4, iPCR_2, CurrMonitor_4, AvAdapterData_15);
    goto L47_last;

  L47_last:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} CurrMonitor_4 != 0;
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    havoc CurrMonitor_4;
    goto L53;

  L53:
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} iPCR_2 != 0;
    assume iPCR_2 > 0;
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    assume {:nonnull} MonitorInfo_4 != 0;
    assume MonitorInfo_4 > 0;
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} CurrMonitor_4 != 0;
    assume CurrMonitor_4 > 0;
    goto L59;

  L59:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L48;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    assume false;
    return;

  anon30_Then:
    goto L59;

  anon24_Then:
    assume {:partition} CurrMonitor_4 == 0;
    assume {:nonnull} AvAdapterData_15 != 0;
    assume AvAdapterData_15 > 0;
    havoc CurrMonitor_4;
    goto L53;

  anon22_Then:
    goto L1;

  anon29_Then:
    goto L30;

  anon28_Then:
    Tmp_602 := PlugNum_4;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_600;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    Tmp_598 := PlugNum_4;
    assume {:nonnull} CmpData_7 != 0;
    assume CmpData_7 > 0;
    havoc Tmp_601;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    assume {:nonnull} Pcr_4 != 0;
    assume Pcr_4 > 0;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    goto L1;

  anon27_Then:
    goto L1;

  anon21_Then:
    goto L1;

  anon26_Then:
    goto L1;
}



procedure {:origName "AvCmp_CreatePlugs"} AvCmp_CreatePlugs(actual_BusExtension_39: int) returns (Tmp_604: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_CreatePlugs"} AvCmp_CreatePlugs(actual_BusExtension_39: int) returns (Tmp_604: int)
{
  var {:scalar} Tmp_605: int;
  var {:scalar} numPcr: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} sdv_484: int;
  var {:scalar} ntStatus_35: int;
  var {:pointer} sdv_485: int;
  var {:scalar} Tmp_607: int;
  var {:scalar} oMPR: int;
  var {:scalar} iMPR: int;
  var {:pointer} BusExtension_39: int;

  anon0:
    call {:si_unique_call 1245} oMPR := __HAVOC_malloc(24);
    call {:si_unique_call 1246} iMPR := __HAVOC_malloc(24);
    BusExtension_39 := actual_BusExtension_39;
    ntStatus_35 := 0;
    call {:si_unique_call 1247} ntStatus_35 := AvCmp_GetPlugMPR(BusExtension_39, oMPR, iMPR);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} ntStatus_35 < 0;
    goto L40;

  L40:
    Tmp_604 := ntStatus_35;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    assume {:partition} 0 <= ntStatus_35;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    havoc Tmp_607;
    goto L19;

  L19:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    havoc Tmp_606;
    call {:si_unique_call 1248} sdv_484 := ExAllocatePoolWithTag(0, Tmp_606, 943206710);
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    ntStatus_35 := -1073741670;
    goto L30;

  L30:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1249} sdv_ExFreePool(0);
    goto L31;

  L31:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 1250} sdv_ExFreePool(0);
    goto L35;

  L35:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto L40;

  anon34_Then:
    goto L35;

  anon33_Then:
    goto L31;

  anon42_Then:
    goto L21;

  L21:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    havoc Tmp_605;
    call {:si_unique_call 1251} sdv_485 := ExAllocatePoolWithTag(0, Tmp_605, 943206710);
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    assume {:nonnull} BusExtension_39 != 0;
    assume BusExtension_39 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    ntStatus_35 := -1073741670;
    goto L30;

  anon43_Then:
    goto L41;

  L41:
    numPcr := 0;
    goto L50;

  L50:
    call {:si_unique_call 1252} numPcr, ntStatus_35 := AvCmp_CreatePlugs_loop_L50(numPcr, ntStatus_35, oMPR, BusExtension_39);
    goto L50_last;

  L50_last:
    assume {:nonnull} oMPR != 0;
    assume oMPR > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1253} ntStatus_35 := AvCmp_InitPlugInstance(BusExtension_39, numPcr, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} ntStatus_35 >= 0;
    numPcr := numPcr + 1;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} 0 > ntStatus_35;
    goto L30;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    numPcr := 0;
    goto L59;

  L59:
    call {:si_unique_call 1254} numPcr, ntStatus_35 := AvCmp_CreatePlugs_loop_L59(numPcr, ntStatus_35, iMPR, BusExtension_39);
    goto L59_last;

  L59_last:
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 1255} ntStatus_35 := AvCmp_InitPlugInstance(BusExtension_39, numPcr, 1);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} ntStatus_35 >= 0;
    numPcr := numPcr + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} 0 > ntStatus_35;
    goto L30;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    Tmp_604 := ntStatus_35;
    goto L1;

  anon32_Then:
    goto L41;

  anon41_Then:
    goto L21;

  anon40_Then:
    assume {:nonnull} iMPR != 0;
    assume iMPR > 0;
    havoc Tmp_607;
    goto L19;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCmp_Connect"} AvCmp_Connect(actual_BusExtension_40: int, actual_Irp_47: int, actual_Request_18: int) returns (Tmp_609: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_Connect"} AvCmp_Connect(actual_BusExtension_40: int, actual_Irp_47: int, actual_Request_18: int) returns (Tmp_609: int)
{
  var {:pointer} iPlug_2: int;
  var {:pointer} Ver2Connect: int;
  var {:pointer} oPlug_2: int;
  var {:pointer} Connect_8: int;
  var {:scalar} ntStatus_36: int;
  var {:pointer} phConnect: int;
  var {:pointer} BusExtension_40: int;
  var {:pointer} Request_18: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;

  anon0:
    BusExtension_40 := actual_BusExtension_40;
    Request_18 := actual_Request_18;
    ntStatus_36 := 0;
    assume {:nonnull} Request_18 != 0;
    assume Request_18 > 0;
    Connect_8 := Connect__AV_61883_REQUEST(Request_18);
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    havoc iPlug_2;
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    havoc oPlug_2;
    assume {:nonnull} Request_18 != 0;
    assume Request_18 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Request_18 != 0;
    assume Request_18 > 0;
    Ver2Connect := Connect__AV_61883_REQUEST(Request_18);
    assume {:nonnull} Ver2Connect != 0;
    assume Ver2Connect > 0;
    phConnect := hConnect__CMP_CONNECT_VER2(Ver2Connect);
    goto L19;

  L19:
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    assume {:nonnull} Request_18 != 0;
    assume Request_18 > 0;
    havoc vslice_dummy_var_367;
    havoc vslice_dummy_var_368;
    call {:si_unique_call 1256} ntStatus_36 := AvCmp_P2PConnect(BusExtension_40, vslice_dummy_var_367, iPlug_2, oPlug_2, Format__CMP_CONNECT_VER3(Connect_8), vslice_dummy_var_368, phConnect);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  L25:
    Tmp_609 := ntStatus_36;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:nonnull} Connect_8 != 0;
    assume Connect_8 > 0;
    phConnect := hConnect__CMP_CONNECT_VER3(Connect_8);
    goto L19;

  anon7_Then:
    ntStatus_36 := -1073741637;
    goto L25;
}



procedure {:origName "AvCmp_DestroyPlugs"} AvCmp_DestroyPlugs(actual_BusExtension_41: int) returns (Tmp_611: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_611 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_DestroyPlugs"} AvCmp_DestroyPlugs(actual_BusExtension_41: int) returns (Tmp_611: int)
{
  var {:scalar} ntStatus_37: int;
  var {:pointer} BusExtension_41: int;

  anon0:
    BusExtension_41 := actual_BusExtension_41;
    ntStatus_37 := 0;
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1257} sdv_ExFreePool(0);
    goto L6;

  L6:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1258} sdv_ExFreePool(0);
    goto L11;

  L11:
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    assume {:nonnull} BusExtension_41 != 0;
    assume BusExtension_41 > 0;
    Tmp_611 := ntStatus_37;
    return;

  anon11_Then:
    goto L11;

  anon9_Then:
    goto L11;

  anon10_Then:
    goto L6;

  anon12_Then:
    goto L6;
}



procedure {:origName "AvCmp_CalculatePlugSize"} AvCmp_CalculatePlugSize(actual_Format_2: int, actual_DDIVersion_1: int) returns (Tmp_613: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_CalculatePlugSize"} AvCmp_CalculatePlugSize(actual_Format_2: int, actual_DDIVersion_1: int) returns (Tmp_613: int)
{
  var {:scalar} MaxBlocksPerFrame: int;
  var {:scalar} Tmp_614: int;
  var {:scalar} Tmp_616: int;
  var {:scalar} BlocksPerPacket: int;
  var {:pointer} Format_2: int;
  var {:scalar} DDIVersion_1: int;
  var vslice_dummy_var_185: int;

  anon0:
    Format_2 := actual_Format_2;
    DDIVersion_1 := actual_DDIVersion_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} 2 >= DDIVersion_1;
    call {:si_unique_call 1259} vslice_dummy_var_185 := AvCip_ConvertCipDataFormat(Format_2);
    BlocksPerPacket := 0;
    goto L11;

  L11:
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_616 := 1;
    goto L14;

  L14:
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    havoc MaxBlocksPerFrame;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} MaxBlocksPerFrame > BlocksPerPacket;
    Tmp_614 := MaxBlocksPerFrame;
    goto L18;

  L18:
    MaxBlocksPerFrame := Tmp_614;
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    havoc Tmp_613;
    return;

  anon9_Then:
    assume {:partition} BlocksPerPacket >= MaxBlocksPerFrame;
    Tmp_614 := BlocksPerPacket;
    goto L18;

  anon8_Then:
    Tmp_616 := 0;
    goto L14;

  anon7_Then:
    assume {:partition} DDIVersion_1 > 2;
    assume {:nonnull} Format_2 != 0;
    assume Format_2 > 0;
    havoc BlocksPerPacket;
    goto L11;
}



procedure {:origName "AvCmp_GetPlugState"} AvCmp_GetPlugState(actual_BusExtension_42: int, actual_Irp_48: int, actual_Request_19: int) returns (Tmp_617: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_GetPlugState"} AvCmp_GetPlugState(actual_BusExtension_42: int, actual_Irp_48: int, actual_Request_19: int) returns (Tmp_617: int)
{
  var {:scalar} PlugNum_5: int;
  var {:pointer} CmpData_8: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} Tmp_620: int;
  var {:scalar} Tmp_621: int;
  var {:scalar} Tmp_622: int;
  var {:pointer} iPCR_3: int;
  var {:scalar} ntStatus_38: int;
  var {:pointer} Plug_5: int;
  var {:scalar} Pcr_5: int;
  var {:pointer} GetPlugState: int;
  var {:pointer} oPCR_2: int;
  var {:pointer} Tmp_623: int;
  var {:pointer} BusExtension_42: int;
  var {:pointer} Request_19: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;

  anon0:
    call {:si_unique_call 1260} Pcr_5 := __HAVOC_malloc(60);
    BusExtension_42 := actual_BusExtension_42;
    Request_19 := actual_Request_19;
    call {:si_unique_call 1261} Tmp_620 := __HAVOC_malloc(1860);
    call {:si_unique_call 1262} Tmp_623 := __HAVOC_malloc(1860);
    ntStatus_38 := 0;
    assume {:nonnull} Request_19 != 0;
    assume Request_19 > 0;
    GetPlugState := GetPlugState__AV_61883_REQUEST(Request_19);
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    havoc Plug_5;
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L14;

  L14:
    assume {:nonnull} Plug_5 != 0;
    assume Plug_5 > 0;
    havoc PlugNum_5;
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    havoc CmpData_8;
    goto L18;

  L18:
    assume {:nonnull} Plug_5 != 0;
    assume Plug_5 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Tmp_622 := PlugNum_5;
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    havoc Tmp_620;
    assume {:nonnull} Tmp_620 != 0;
    assume Tmp_620 > 0;
    oPCR_2 := oPCR__AV_PCR(Tmp_620 + Tmp_622 * 60);
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} oPCR_2 != 0;
    assume oPCR_2 > 0;
    goto L27;

  L27:
    Tmp_617 := ntStatus_38;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    Tmp_621 := PlugNum_5;
    assume {:nonnull} CmpData_8 != 0;
    assume CmpData_8 > 0;
    havoc Tmp_623;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    iPCR_3 := iPCR__AV_PCR(Tmp_623 + Tmp_621 * 60);
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} iPCR_3 != 0;
    assume iPCR_3 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    goto L27;

  anon23_Then:
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    havoc Tmp_619;
    assume {:nonnull} Tmp_619 != 0;
    assume Tmp_619 > 0;
    havoc CmpData_8;
    goto L18;

  anon22_Then:
    assume {:nonnull} Request_19 != 0;
    assume Request_19 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} BusExtension_42 != 0;
    assume BusExtension_42 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Plug_5 != 0;
    assume Plug_5 > 0;
    havoc vslice_dummy_var_369;
    havoc vslice_dummy_var_370;
    call {:si_unique_call 1263} ntStatus_38 := AvCmp_GetPlugPCR(BusExtension_42, vslice_dummy_var_369, vslice_dummy_var_370, Pcr_5);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} ntStatus_38 >= 0;
    assume {:nonnull} Plug_5 != 0;
    assume Plug_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    goto L27;

  anon21_Then:
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    assume {:nonnull} GetPlugState != 0;
    assume GetPlugState > 0;
    assume {:nonnull} Pcr_5 != 0;
    assume Pcr_5 > 0;
    goto L27;

  anon20_Then:
    assume {:partition} 0 > ntStatus_38;
    goto L27;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    ntStatus_38 := -1073741811;
    goto L27;

  anon17_Then:
    goto L14;
}



procedure {:origName "AvCmp_P2PConnect"} AvCmp_P2PConnect(actual_BusExtension_43: int, actual_ConnectType: int, actual_iPlug_3: int, actual_oPlug_3: int, actual_Format_3: int, actual_DDIVersion_2: int, actual_pConnect: int) returns (Tmp_624: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_P2PConnect"} AvCmp_P2PConnect(actual_BusExtension_43: int, actual_ConnectType: int, actual_iPlug_3: int, actual_oPlug_3: int, actual_Format_3: int, actual_DDIVersion_2: int, actual_pConnect: int) returns (Tmp_624: int)
{
  var {:pointer} Tmp_625: int;
  var {:scalar} Retries: int;
  var {:pointer} Tmp_627: int;
  var {:pointer} sdv_491: int;
  var {:pointer} CmpData_9: int;
  var {:scalar} Tmp_628: int;
  var {:pointer} Connect_9: int;
  var {:scalar} Tmp_629: int;
  var {:scalar} Retries_1: int;
  var {:scalar} ntStatus_39: int;
  var {:scalar} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:scalar} Tmp_632: int;
  var {:scalar} Tmp_633: int;
  var {:pointer} BusExtension_43: int;
  var {:scalar} ConnectType: int;
  var {:pointer} iPlug_3: int;
  var {:pointer} oPlug_3: int;
  var {:pointer} Format_3: int;
  var {:scalar} DDIVersion_2: int;
  var {:pointer} pConnect: int;
  var boogieTmp: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;

  anon0:
    BusExtension_43 := actual_BusExtension_43;
    ConnectType := actual_ConnectType;
    iPlug_3 := actual_iPlug_3;
    oPlug_3 := actual_oPlug_3;
    Format_3 := actual_Format_3;
    DDIVersion_2 := actual_DDIVersion_2;
    pConnect := actual_pConnect;
    call {:si_unique_call 1264} vslice_dummy_var_186 := __HAVOC_malloc(1860);
    call {:si_unique_call 1265} Tmp_627 := __HAVOC_malloc(1860);
    call {:si_unique_call 1266} Tmp_631 := __HAVOC_malloc(1860);
    ntStatus_39 := 0;
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    havoc CmpData_9;
    goto L13;

  L13:
    call {:si_unique_call 1267} ExAcquireFastMutex(0);
    call {:si_unique_call 1268} sdv_491 := ExAllocatePoolWithTag(0, 44, 943206710);
    Connect_9 := sdv_491;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Connect_9 != 0;
    call {:si_unique_call 1269} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} oPlug_3 != 0;
    goto L31;

  L31:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1270} boogieTmp := corral_nondet();
    goto L34;

  L34:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    havoc Tmp_633;
    goto L37;

  L37:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} iPlug_3 != 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L41;

  L41:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1271} boogieTmp := AvCmp_CalculatePlugSize(Format_3, DDIVersion_2);
    goto L45;

  L45:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} oPlug_3 != 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} iPlug_3 == 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    havoc Tmp_630;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    havoc Tmp_627;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1272} boogieTmp := corral_nondet();
    goto L46;

  L46:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} iPlug_3 != 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} oPlug_3 == 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    havoc Tmp_629;
    assume {:nonnull} CmpData_9 != 0;
    assume CmpData_9 > 0;
    havoc Tmp_631;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1273} boogieTmp := corral_nondet();
    goto L51;

  L51:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} oPlug_3 != 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    Retries := 4;
    goto L60;

  L60:
    call {:si_unique_call 1274} Retries, ntStatus_39, Tmp_632 := AvCmp_P2PConnect_loop_L60(Retries, CmpData_9, Connect_9, ntStatus_39, Tmp_632, oPlug_3);
    goto L60_last;

  L60_last:
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    havoc vslice_dummy_var_371;
    call {:si_unique_call 1281} ntStatus_39 := AvCmp_P2PCR_oPlug(vslice_dummy_var_371, CmpData_9, Connect_9, 0, 0);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} ntStatus_39 >= 0;
    goto L67;

  L67:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} ntStatus_39 >= 0;
    call {:si_unique_call 1275} ntStatus_39 := AvCmp_InitCipModule(BusExtension_43, Connect_9, Format_3);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} yogi_error != 1;
    goto L68;

  L68:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} ntStatus_39 >= 0;
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1276} vslice_dummy_var_187 := sdv_ExInterlockedInsertTailList(0, 0, 0);
    assume {:nonnull} pConnect != 0;
    assume pConnect > 0;
    goto L80;

  L80:
    call {:si_unique_call 1277} ExReleaseFastMutex(0);
    Tmp_624 := ntStatus_39;
    goto LM2;

  LM2:
    return;

  anon82_Then:
    assume {:partition} 0 > ntStatus_39;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Connect_9 != 0;
    call {:si_unique_call 1278} sdv_ExFreePool(0);
    goto L84;

  L84:
    assume {:nonnull} pConnect != 0;
    assume pConnect > 0;
    goto L80;

  anon83_Then:
    assume {:partition} Connect_9 == 0;
    goto L84;

  anon93_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon81_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L68;

  anon79_Then:
    assume {:partition} 0 > ntStatus_39;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} ntStatus_39 != -1073741823;
    Tmp_632 := Retries;
    Retries := Retries - 1;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Tmp_632 != 0;
    goto anon94_Else_dummy;

  anon94_Else_dummy:
    assume false;
    return;

  anon94_Then:
    assume {:partition} Tmp_632 == 0;
    goto L56;

  L56:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} iPlug_3 != 0;
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    Retries_1 := 4;
    goto L92;

  L92:
    call {:si_unique_call 1279} Tmp_628, Retries_1, ntStatus_39 := AvCmp_P2PConnect_loop_L92(CmpData_9, Tmp_628, Connect_9, Retries_1, ntStatus_39, iPlug_3);
    goto L92_last;

  L92_last:
    assume {:nonnull} iPlug_3 != 0;
    assume iPlug_3 > 0;
    havoc vslice_dummy_var_372;
    call {:si_unique_call 1282} ntStatus_39 := AvCmp_P2PCR_iPlug(vslice_dummy_var_372, CmpData_9, Connect_9, 0, 0);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} ntStatus_39 < 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} ntStatus_39 != -1073741823;
    Tmp_628 := Retries_1;
    Retries_1 := Retries_1 - 1;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Tmp_628 != 0;
    goto anon96_Else_dummy;

  anon96_Else_dummy:
    assume false;
    return;

  anon96_Then:
    assume {:partition} Tmp_628 == 0;
    goto L67;

  anon86_Then:
    assume {:partition} ntStatus_39 == -1073741823;
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    assume false;
    return;

  anon85_Then:
    assume {:partition} 0 <= ntStatus_39;
    goto L67;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    goto L67;

  anon77_Then:
    assume {:partition} iPlug_3 == 0;
    goto L67;

  anon80_Then:
    assume {:partition} ntStatus_39 == -1073741823;
    goto anon80_Then_dummy;

  anon80_Then_dummy:
    assume false;
    return;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    goto L56;

  anon74_Then:
    assume {:partition} oPlug_3 == 0;
    goto L56;

  anon76_Then:
    assume {:partition} oPlug_3 != 0;
    goto L51;

  anon75_Then:
    goto L51;

  anon71_Then:
    assume {:partition} iPlug_3 == 0;
    goto L51;

  anon73_Then:
    assume {:partition} iPlug_3 != 0;
    goto L46;

  anon72_Then:
    goto L46;

  anon70_Then:
    assume {:partition} oPlug_3 == 0;
    goto L46;

  anon69_Then:
    goto L39;

  L39:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} oPlug_3 != 0;
    assume {:nonnull} oPlug_3 != 0;
    assume oPlug_3 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto L100;

  L100:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    goto L45;

  anon87_Then:
    goto L41;

  anon68_Then:
    assume {:partition} oPlug_3 == 0;
    goto L100;

  anon91_Then:
    assume {:partition} iPlug_3 == 0;
    goto L39;

  anon67_Then:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    havoc Tmp_633;
    goto L37;

  anon66_Then:
    assume {:nonnull} Connect_9 != 0;
    assume Connect_9 > 0;
    call {:si_unique_call 1280} boogieTmp := corral_nondet();
    goto L34;

  anon90_Then:
    assume {:partition} oPlug_3 == 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} iPlug_3 == 0;
    ntStatus_39 := -1073741811;
    goto L67;

  anon65_Then:
    assume {:partition} iPlug_3 != 0;
    goto L31;

  anon89_Then:
    assume {:partition} Connect_9 == 0;
    ntStatus_39 := -1073741670;
    goto L67;

  anon88_Then:
    assume {:nonnull} BusExtension_43 != 0;
    assume BusExtension_43 > 0;
    havoc Tmp_625;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    havoc CmpData_9;
    goto L13;
}



procedure {:origName "AvCmp_GetPlugPCR"} AvCmp_GetPlugPCR(actual_BusExtension_44: int, actual_Type_5: int, actual_Index_1: int, actual_Pcr_6: int) returns (Tmp_636: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_GetPlugPCR"} AvCmp_GetPlugPCR(actual_BusExtension_44: int, actual_Type_5: int, actual_Index_1: int, actual_Pcr_6: int) returns (Tmp_636: int)
{
  var {:pointer} pUlong: int;
  var {:scalar} sdv_498: int;
  var {:scalar} ntStatus_40: int;
  var {:scalar} Tmp_637: int;
  var {:scalar} Tmp_638: int;
  var {:pointer} BusExtension_44: int;
  var {:scalar} Type_5: int;
  var {:scalar} Index_1: int;
  var {:pointer} Pcr_6: int;

  anon0:
    BusExtension_44 := actual_BusExtension_44;
    Type_5 := actual_Type_5;
    Index_1 := actual_Index_1;
    Pcr_6 := actual_Pcr_6;
    ntStatus_40 := 0;
    pUlong := Pcr_6;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Index_1 > 30;
    ntStatus_40 := -1073741811;
    goto L11;

  L11:
    Tmp_636 := ntStatus_40;
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} 30 >= Index_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Type_5 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Type_5 == 1;
    Tmp_637 := -268433020 + Index_1 * 4;
    call {:si_unique_call 1283} ntStatus_40 := Av1394_QuadletRead(BusExtension_44, Pcr_6, Tmp_637);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} ntStatus_40 >= 0;
    assume {:nonnull} pUlong != 0;
    assume pUlong > 0;
    goto L11;

  anon15_Then:
    assume {:partition} 0 > ntStatus_40;
    goto L11;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} Type_5 != 1;
    ntStatus_40 := -1073741811;
    goto L11;

  anon13_Then:
    assume {:partition} Type_5 == 0;
    Tmp_638 := -268433148 + Index_1 * 4;
    call {:si_unique_call 1284} ntStatus_40 := Av1394_QuadletRead(BusExtension_44, Pcr_6, Tmp_638);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCmp_GetPlugHandle"} AvCmp_GetPlugHandle(actual_BusExtension_45: int, actual_Irp_49: int, actual_Request_20: int) returns (Tmp_640: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_640 == -1073741811 || Tmp_640 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_GetPlugHandle"} AvCmp_GetPlugHandle(actual_BusExtension_45: int, actual_Irp_49: int, actual_Request_20: int) returns (Tmp_640: int)
{
  var {:scalar} Tmp_641: int;
  var {:pointer} CmpData_10: int;
  var {:scalar} Status_34: int;
  var {:pointer} GetPlugHandle: int;
  var {:scalar} Tmp_642: int;
  var {:scalar} Tmp_643: int;
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:scalar} Tmp_648: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} Tmp_650: int;
  var {:scalar} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:scalar} Tmp_654: int;
  var {:pointer} BusExtension_45: int;
  var {:pointer} Request_20: int;

  anon0:
    BusExtension_45 := actual_BusExtension_45;
    Request_20 := actual_Request_20;
    call {:si_unique_call 1285} Tmp_645 := __HAVOC_malloc(992);
    call {:si_unique_call 1286} Tmp_646 := __HAVOC_malloc(992);
    call {:si_unique_call 1287} Tmp_649 := __HAVOC_malloc(992);
    call {:si_unique_call 1288} Tmp_650 := __HAVOC_malloc(992);
    Status_34 := 0;
    assume {:nonnull} Request_20 != 0;
    assume Request_20 > 0;
    GetPlugHandle := GetPlugHandle__AV_61883_REQUEST(Request_20);
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Status_34 := -1073741811;
    goto L11;

  L11:
    Tmp_640 := Status_34;
    return;

  anon43_Then:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L14;

  L14:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc CmpData_10;
    goto L17;

  L17:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L19;

  L19:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_648;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_649;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_651;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_650;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon44_Then:
    goto L20;

  L20:
    Status_34 := -1073741811;
    goto L11;

  anon37_Then:
    goto L20;

  anon36_Then:
    goto L20;

  anon34_Then:
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_642;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_641;
    assume {:nonnull} CmpData_10 != 0;
    assume CmpData_10 > 0;
    havoc Tmp_645;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon45_Then:
    goto L19;

  anon35_Then:
    goto L19;

  anon33_Then:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc Tmp_652;
    assume {:nonnull} Tmp_652 != 0;
    assume Tmp_652 > 0;
    havoc CmpData_10;
    goto L17;

  anon31_Then:
    assume {:nonnull} Request_20 != 0;
    assume Request_20 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L30;

  L30:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_643;
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc Tmp_647;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon42_Then:
    goto L31;

  L31:
    Status_34 := -1073741811;
    goto L11;

  anon41_Then:
    goto L31;

  anon39_Then:
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    havoc Tmp_654;
    assume {:nonnull} BusExtension_45 != 0;
    assume BusExtension_45 > 0;
    havoc Tmp_653;
    assume {:nonnull} GetPlugHandle != 0;
    assume GetPlugHandle > 0;
    goto L11;

  anon40_Then:
    goto L30;

  anon38_Then:
    Status_34 := -1073741811;
    goto L11;

  anon32_Then:
    goto L14;
}



procedure {:origName "AvCmp_FreeCMPAddressRange"} AvCmp_FreeCMPAddressRange(actual_BusExtension_46: int, actual_CmpData_11: int, actual_PlugType_2: int) returns (Tmp_655: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_FreeCMPAddressRange"} AvCmp_FreeCMPAddressRange(actual_BusExtension_46: int, actual_CmpData_11: int, actual_PlugType_2: int) returns (Tmp_655: int)
{
  var {:pointer} Irp_50: int;
  var {:pointer} Irb_15: int;
  var {:scalar} StackSize_9: int;
  var {:pointer} sdv_501: int;
  var {:scalar} ntStatus_41: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} BusExtension_46: int;
  var {:pointer} CmpData_11: int;
  var {:scalar} PlugType_2: int;
  var vslice_dummy_var_373: int;

  anon0:
    BusExtension_46 := actual_BusExtension_46;
    CmpData_11 := actual_CmpData_11;
    PlugType_2 := actual_PlugType_2;
    ntStatus_41 := 0;
    Irp_50 := 0;
    Irb_15 := 0;
    assume {:nonnull} BusExtension_46 != 0;
    assume BusExtension_46 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    havoc StackSize_9;
    call {:si_unique_call 1289} Irp_50 := IoAllocateIrp(StackSize_9, 0);
    call {:si_unique_call 1290} sdv_501 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_15 := sdv_501;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irp_50 != 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irb_15 != 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} PlugType_2 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} PlugType_2 == 1;
    assume {:nonnull} CmpData_11 != 0;
    assume CmpData_11 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} CmpData_11 != 0;
    assume CmpData_11 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    goto L28;

  L28:
    assume {:nonnull} BusExtension_46 != 0;
    assume BusExtension_46 > 0;
    havoc vslice_dummy_var_373;
    call {:si_unique_call 1291} ntStatus_41 := Av_SubmitIrpSynch#1(vslice_dummy_var_373, Irp_50, Irb_15);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    goto L35;

  L35:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irp_50 != 0;
    call {:si_unique_call 1292} IoFreeIrp(0);
    goto L36;

  L36:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irb_15 != 0;
    assume {:nonnull} BusExtension_46 != 0;
    assume BusExtension_46 > 0;
    call {:si_unique_call 1293} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_46), Irb_15);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  L40:
    Tmp_655 := ntStatus_41;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} Irb_15 == 0;
    goto L40;

  anon19_Then:
    assume {:partition} Irp_50 == 0;
    goto L36;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} PlugType_2 != 1;
    goto L28;

  anon22_Then:
    assume {:partition} PlugType_2 == 0;
    assume {:nonnull} CmpData_11 != 0;
    assume CmpData_11 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    assume {:nonnull} CmpData_11 != 0;
    assume CmpData_11 > 0;
    assume {:nonnull} Irb_15 != 0;
    assume Irb_15 > 0;
    goto L28;

  anon17_Then:
    assume {:partition} Irb_15 == 0;
    goto L20;

  L20:
    ntStatus_41 := -1073741670;
    goto L35;

  anon21_Then:
    assume {:partition} Irp_50 == 0;
    goto L20;
}



procedure {:origName "AvCmp_Disconnect"} AvCmp_Disconnect(actual_BusExtension_47: int, actual_Irp_51: int, actual_Request_21: int) returns (Tmp_658: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_Disconnect"} AvCmp_Disconnect(actual_BusExtension_47: int, actual_Irp_51: int, actual_Request_21: int) returns (Tmp_658: int)
{
  var {:pointer} Connect_10: int;
  var {:scalar} ntStatus_42: int;
  var {:pointer} Disconnect: int;
  var {:pointer} BusExtension_47: int;
  var {:pointer} Request_21: int;

  anon0:
    BusExtension_47 := actual_BusExtension_47;
    Request_21 := actual_Request_21;
    ntStatus_42 := 0;
    assume {:nonnull} Request_21 != 0;
    assume Request_21 > 0;
    Disconnect := Disconnect__AV_61883_REQUEST(Request_21);
    assume {:nonnull} Disconnect != 0;
    assume Disconnect > 0;
    havoc Connect_10;
    assume {:nonnull} Connect_10 != 0;
    assume Connect_10 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1294} ntStatus_42 := AvCmp_P2PDisconnect(BusExtension_47, Connect_10);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    Tmp_658 := ntStatus_42;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    ntStatus_42 := -1073741637;
    goto L17;
}



procedure {:origName "AvCmp_CalculateBWUnits"} AvCmp_CalculateBWUnits(actual_Connect_11: int, actual_Payload: int, actual_OverheadId: int) returns (Tmp_660: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_CalculateBWUnits"} AvCmp_CalculateBWUnits(actual_Connect_11: int, actual_Payload: int, actual_OverheadId: int) returns (Tmp_660: int)
{
  var {:scalar} BandwidthUnits_1: int;
  var {:scalar} DR: int;
  var {:pointer} Connect_11: int;
  var {:scalar} Payload: int;
  var {:scalar} OverheadId: int;

  anon0:
    Connect_11 := actual_Connect_11;
    Payload := actual_Payload;
    OverheadId := actual_OverheadId;
    BandwidthUnits_1 := 0;
    assume {:nonnull} Connect_11 != 0;
    assume Connect_11 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Connect_11 != 0;
    assume Connect_11 > 0;
    havoc DR;
    goto L9;

  L9:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} OverheadId != 0;
    BandwidthUnits_1 := OverheadId * 32 + (Payload + 3) * DR;
    goto L12;

  L12:
    Tmp_660 := BandwidthUnits_1;
    return;

  anon5_Then:
    assume {:partition} OverheadId == 0;
    BandwidthUnits_1 := 512 + (Payload + 3) * DR;
    goto L12;

  anon6_Then:
    DR := 16;
    goto L9;
}



procedure {:origName "AvCmp_GetPlugMPR"} AvCmp_GetPlugMPR(actual_BusExtension_48: int, actual_oMPR_1: int, actual_iMPR_1: int) returns (Tmp_662: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_GetPlugMPR"} AvCmp_GetPlugMPR(actual_BusExtension_48: int, actual_oMPR_1: int, actual_iMPR_1: int) returns (Tmp_662: int)
{
  var {:pointer} pUlong1_1: int;
  var {:pointer} pUlong2_1: int;
  var {:scalar} sdv_505: int;
  var {:scalar} ntStatus_43: int;
  var {:scalar} sdv_507: int;
  var {:pointer} BusExtension_48: int;
  var {:pointer} oMPR_1: int;
  var {:pointer} iMPR_1: int;

  anon0:
    BusExtension_48 := actual_BusExtension_48;
    oMPR_1 := actual_oMPR_1;
    iMPR_1 := actual_iMPR_1;
    ntStatus_43 := 0;
    pUlong1_1 := oMPR_1;
    pUlong2_1 := iMPR_1;
    call {:si_unique_call 1295} ntStatus_43 := Av1394_QuadletRead(BusExtension_48, oMPR_1, -268433152);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_43 >= 0;
    goto L18;

  L18:
    assume {:nonnull} pUlong1_1 != 0;
    assume pUlong1_1 > 0;
    call {:si_unique_call 1296} ntStatus_43 := Av1394_QuadletRead(BusExtension_48, iMPR_1, -268433024);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} ntStatus_43 >= 0;
    goto L28;

  L28:
    assume {:nonnull} pUlong2_1 != 0;
    assume pUlong2_1 > 0;
    goto L29;

  L29:
    Tmp_662 := ntStatus_43;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} 0 > ntStatus_43;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} ntStatus_43 == -1073741668;
    assume {:nonnull} pUlong2_1 != 0;
    assume pUlong2_1 > 0;
    ntStatus_43 := 0;
    goto L28;

  anon16_Then:
    assume {:partition} ntStatus_43 != -1073741668;
    goto L29;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} 0 > ntStatus_43;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} ntStatus_43 == -1073741668;
    assume {:nonnull} pUlong1_1 != 0;
    assume pUlong1_1 > 0;
    ntStatus_43 := 0;
    goto L18;

  anon14_Then:
    assume {:partition} ntStatus_43 != -1073741668;
    goto L29;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCmp_P2PDisconnect"} AvCmp_P2PDisconnect(actual_BusExtension_49: int, actual_Connect_12: int) returns (Tmp_664: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_P2PDisconnect"} AvCmp_P2PDisconnect(actual_BusExtension_49: int, actual_Connect_12: int) returns (Tmp_664: int)
{
  var {:scalar} Pcr1_1: int;
  var {:pointer} Tmp_665: int;
  var {:scalar} MonitorInfo_5: int;
  var {:scalar} sdv_508: int;
  var {:pointer} Tmp_666: int;
  var {:scalar} sdv_510: int;
  var {:scalar} MonitorInfo_6: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} iPlug_4: int;
  var {:pointer} CmpData_12: int;
  var {:scalar} BandwidthUnits_2: int;
  var {:pointer} oPlug_4: int;
  var {:scalar} sdv_513: int;
  var {:scalar} Tmp_668: int;
  var {:scalar} Pcr2_1: int;
  var {:scalar} BandwidthUnits_3: int;
  var {:scalar} Pcr_7: int;
  var {:pointer} iPCR_4: int;
  var {:pointer} Tmp_669: int;
  var {:scalar} ntStatus_44: int;
  var {:scalar} PcrOrg_2: int;
  var {:pointer} Tmp_670: int;
  var {:scalar} BandwidthUnits_4: int;
  var {:pointer} CurrMonitor_5: int;
  var {:scalar} Tmp_671: int;
  var {:pointer} CurrMonitor_6: int;
  var {:scalar} Tmp_672: int;
  var {:scalar} sdv_521: int;
  var {:scalar} Pcr_8: int;
  var {:pointer} Tmp_673: int;
  var {:scalar} Irql_27: int;
  var {:pointer} oPCR_3: int;
  var {:scalar} Tmp_674: int;
  var {:pointer} AvAdapterData_16: int;
  var {:pointer} AvAdapterData_17: int;
  var {:scalar} Tmp_675: int;
  var {:scalar} Tmp_676: int;
  var {:pointer} BusExtension_49: int;
  var {:pointer} Connect_12: int;
  var boogieTmp: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;

  anon0:
    call {:si_unique_call 1297} Pcr1_1 := __HAVOC_malloc(60);
    call {:si_unique_call 1298} MonitorInfo_5 := __HAVOC_malloc(76);
    call {:si_unique_call 1299} MonitorInfo_6 := __HAVOC_malloc(76);
    call {:si_unique_call 1300} Pcr2_1 := __HAVOC_malloc(60);
    call {:si_unique_call 1301} Pcr_7 := __HAVOC_malloc(60);
    call {:si_unique_call 1302} PcrOrg_2 := __HAVOC_malloc(60);
    call {:si_unique_call 1303} Pcr_8 := __HAVOC_malloc(60);
    BusExtension_49 := actual_BusExtension_49;
    Connect_12 := actual_Connect_12;
    call {:si_unique_call 1304} Tmp_665 := __HAVOC_malloc(1860);
    call {:si_unique_call 1305} Tmp_666 := __HAVOC_malloc(1860);
    call {:si_unique_call 1306} Tmp_669 := __HAVOC_malloc(1860);
    call {:si_unique_call 1307} Tmp_673 := __HAVOC_malloc(1860);
    ntStatus_44 := 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc iPlug_4;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc oPlug_4;
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc CmpData_12;
    goto L18;

  L18:
    call {:si_unique_call 1308} ExAcquireFastMutex(0);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Connect_12 != 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} oPlug_4 != 0;
    goto L27;

  L27:
    call {:si_unique_call 1309} Tmp_667 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    call {:si_unique_call 1310} sdv_KeAcquireSpinLock(0, Tmp_667);
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    havoc Irql_27;
    call {:si_unique_call 1311} vslice_dummy_var_188 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1312} sdv_KeReleaseSpinLock(0, Irql_27);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_374;
    call {:si_unique_call 1313} vslice_dummy_var_189 := AvCip_Destroy(vslice_dummy_var_374);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    goto L38;

  L38:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} oPlug_4 != 0;
    goto L43;

  L43:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} iPlug_4 != 0;
    goto L46;

  L46:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} oPlug_4 != 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc vslice_dummy_var_375;
    havoc vslice_dummy_var_376;
    havoc vslice_dummy_var_377;
    call {:si_unique_call 1314} ntStatus_44 := AvCmp_GetPlugPCR(vslice_dummy_var_375, vslice_dummy_var_376, vslice_dummy_var_377, Pcr1_1);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} yogi_error != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} ntStatus_44 < 0;
    goto L73;

  L73:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Connect_12 != 0;
    call {:si_unique_call 1315} sdv_ExFreePool(0);
    goto L74;

  L74:
    call {:si_unique_call 1316} ExReleaseFastMutex(0);
    Tmp_664 := ntStatus_44;
    goto LM2;

  LM2:
    return;

  anon141_Then:
    assume {:partition} Connect_12 == 0;
    goto L74;

  anon137_Then:
    assume {:partition} 0 <= ntStatus_44;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc vslice_dummy_var_378;
    havoc vslice_dummy_var_379;
    havoc vslice_dummy_var_380;
    call {:si_unique_call 1317} ntStatus_44 := AvCmp_SetPlugPCR(vslice_dummy_var_378, vslice_dummy_var_379, vslice_dummy_var_380, Pcr1_1, Pcr2_1, PcrOrg_2, 0, 0);
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} yogi_error != 1;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} ntStatus_44 < 0;
    goto L73;

  anon138_Then:
    assume {:partition} 0 <= ntStatus_44;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} PcrOrg_2 != 0;
    assume PcrOrg_2 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    ntStatus_44 := -1073741823;
    goto L73;

  anon139_Then:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} iPlug_4 != 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc Tmp_672;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_669;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    iPCR_4 := iPCR__AV_PCR(Tmp_669 + Tmp_672 * 60);
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc Tmp_674;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_666;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} Pcr_8 != 0;
    assume Pcr_8 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc AvAdapterData_17;
    CurrMonitor_6 := 0;
    call {:si_unique_call 1318} Tmp_667 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    call {:si_unique_call 1319} sdv_KeAcquireSpinLock(0, Tmp_667);
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    havoc Irql_27;
    call {:si_unique_call 1320} sdv_513 := sdv_IsListEmpty(0);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} sdv_513 != 0;
    goto L107;

  L107:
    call {:si_unique_call 1321} sdv_KeReleaseSpinLock(0, Irql_27);
    goto L81;

  L81:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    BandwidthUnits_4 := 0;
    call {:si_unique_call 1322} ntStatus_44 := Av1394_FreeChannel(BusExtension_49, Connect_12);
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} yogi_error != 1;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    call {:si_unique_call 1323} boogieTmp := corral_nondet();
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    havoc vslice_dummy_var_381;
    havoc vslice_dummy_var_382;
    call {:si_unique_call 1324} BandwidthUnits_4 := AvCmp_CalculateBWUnits(Connect_12, vslice_dummy_var_381, vslice_dummy_var_382);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_383;
    call {:si_unique_call 1325} ntStatus_44 := Av1394_FreeBandwidth(BusExtension_49, Connect_12, vslice_dummy_var_383, BandwidthUnits_4);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} yogi_error != 1;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} ntStatus_44 < 0;
    goto L73;

  anon149_Then:
    assume {:partition} 0 <= ntStatus_44;
    goto L49;

  L49:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} iPlug_4 != 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    oPlug_4 := 0;
    goto L147;

  L147:
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc vslice_dummy_var_384;
    havoc vslice_dummy_var_385;
    havoc vslice_dummy_var_386;
    call {:si_unique_call 1326} ntStatus_44 := AvCmp_GetPlugPCR(vslice_dummy_var_384, vslice_dummy_var_385, vslice_dummy_var_386, Pcr1_1);
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} yogi_error != 1;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L160;

  L160:
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    havoc vslice_dummy_var_387;
    havoc vslice_dummy_var_388;
    havoc vslice_dummy_var_389;
    call {:si_unique_call 1327} ntStatus_44 := AvCmp_SetPlugPCR(vslice_dummy_var_387, vslice_dummy_var_388, vslice_dummy_var_389, Pcr1_1, Pcr2_1, PcrOrg_2, 0, 0);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} yogi_error != 1;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Pcr1_1 != 0;
    assume Pcr1_1 > 0;
    assume {:nonnull} PcrOrg_2 != 0;
    assume PcrOrg_2 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    ntStatus_44 := -1073741823;
    goto L73;

  anon156_Then:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} oPlug_4 != 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc Tmp_675;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    oPCR_3 := oPCR__AV_PCR(Tmp_665 + Tmp_675 * 60);
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    havoc Tmp_668;
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    havoc Tmp_673;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Pcr_7 != 0;
    assume Pcr_7 > 0;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L184;

  L184:
    assume {:nonnull} CmpData_12 != 0;
    assume CmpData_12 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc AvAdapterData_16;
    CurrMonitor_5 := 0;
    call {:si_unique_call 1328} Tmp_667 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    call {:si_unique_call 1329} sdv_KeAcquireSpinLock(0, Tmp_667);
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    havoc Irql_27;
    call {:si_unique_call 1330} sdv_510 := sdv_IsListEmpty(0);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} sdv_510 != 0;
    goto L198;

  L198:
    call {:si_unique_call 1331} sdv_KeReleaseSpinLock(0, Irql_27);
    goto L73;

  anon162_Then:
    assume {:partition} sdv_510 == 0;
    goto L197;

  L197:
    call {:si_unique_call 1332} CurrMonitor_5 := AvCmp_P2PDisconnect_loop_L197(MonitorInfo_6, oPlug_4, CurrMonitor_5, oPCR_3, AvAdapterData_16);
    goto L197_last;

  L197_last:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} CurrMonitor_5 != 0;
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    havoc CurrMonitor_5;
    goto L203;

  L203:
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    assume {:nonnull} MonitorInfo_6 != 0;
    assume MonitorInfo_6 > 0;
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} CurrMonitor_5 != 0;
    assume CurrMonitor_5 > 0;
    goto L209;

  L209:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    goto L198;

  anon164_Then:
    goto anon164_Then_dummy;

  anon164_Then_dummy:
    assume false;
    return;

  anon180_Then:
    goto L209;

  anon163_Then:
    assume {:partition} CurrMonitor_5 == 0;
    assume {:nonnull} AvAdapterData_16 != 0;
    assume AvAdapterData_16 > 0;
    havoc CurrMonitor_5;
    goto L203;

  anon161_Then:
    goto L73;

  anon179_Then:
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    BandwidthUnits_2 := 0;
    call {:si_unique_call 1333} ntStatus_44 := Av1394_FreeChannel(BusExtension_49, Connect_12);
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} yogi_error != 1;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    call {:si_unique_call 1334} boogieTmp := corral_nondet();
    assume {:nonnull} oPCR_3 != 0;
    assume oPCR_3 > 0;
    havoc vslice_dummy_var_390;
    havoc vslice_dummy_var_391;
    call {:si_unique_call 1335} BandwidthUnits_2 := AvCmp_CalculateBWUnits(Connect_12, vslice_dummy_var_390, vslice_dummy_var_391);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_392;
    call {:si_unique_call 1336} ntStatus_44 := Av1394_FreeBandwidth(BusExtension_49, Connect_12, vslice_dummy_var_392, BandwidthUnits_2);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} yogi_error != 1;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} ntStatus_44 >= 0;
    goto L184;

  anon166_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon182_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon165_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon181_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon160_Then:
    goto L184;

  anon159_Then:
    goto L170;

  L170:
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} oPlug_4 != 0;
    assume {:nonnull} oPlug_4 != 0;
    assume oPlug_4 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    goto L232;

  L232:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    BandwidthUnits_3 := 0;
    call {:si_unique_call 1337} ntStatus_44 := Av1394_FreeChannel(BusExtension_49, Connect_12);
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} yogi_error != 1;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc Tmp_676;
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc Tmp_671;
    call {:si_unique_call 1338} BandwidthUnits_3 := AvCmp_CalculateBWUnits(Connect_12, Tmp_671, Tmp_676);
    assume {:nonnull} Connect_12 != 0;
    assume Connect_12 > 0;
    havoc vslice_dummy_var_393;
    call {:si_unique_call 1339} ntStatus_44 := Av1394_FreeBandwidth(BusExtension_49, Connect_12, vslice_dummy_var_393, BandwidthUnits_3);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} yogi_error != 1;
    goto L73;

  anon178_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon169_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon177_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    goto L73;

  anon168_Then:
    goto L73;

  anon158_Then:
    assume {:partition} oPlug_4 == 0;
    goto L232;

  anon157_Then:
    assume {:partition} oPlug_4 == 0;
    goto L170;

  anon155_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon176_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Pcr2_1 != 0;
    assume Pcr2_1 > 0;
    goto L160;

  anon154_Then:
    goto L160;

  anon174_Then:
    ntStatus_44 := -1073741811;
    goto L73;

  anon153_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon173_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon152_Then:
    goto L147;

  anon151_Then:
    goto L73;

  anon150_Then:
    goto L73;

  anon134_Then:
    assume {:partition} iPlug_4 == 0;
    goto L73;

  anon187_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L73;

  anon186_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    goto L49;

  anon142_Then:
    goto L49;

  anon144_Then:
    assume {:partition} sdv_513 == 0;
    goto L106;

  L106:
    call {:si_unique_call 1340} CurrMonitor_6 := AvCmp_P2PDisconnect_loop_L106(MonitorInfo_5, iPlug_4, iPCR_4, CurrMonitor_6, AvAdapterData_17);
    goto L106_last;

  L106_last:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} CurrMonitor_6 != 0;
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    havoc CurrMonitor_6;
    goto L112;

  L112:
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPlug_4 != 0;
    assume iPlug_4 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} iPCR_4 != 0;
    assume iPCR_4 > 0;
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    assume {:nonnull} MonitorInfo_5 != 0;
    assume MonitorInfo_5 > 0;
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} CurrMonitor_6 != 0;
    assume CurrMonitor_6 > 0;
    goto L118;

  L118:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    goto L107;

  anon146_Then:
    goto anon146_Then_dummy;

  anon146_Then_dummy:
    assume false;
    return;

  anon189_Then:
    goto L118;

  anon145_Then:
    assume {:partition} CurrMonitor_6 == 0;
    assume {:nonnull} AvAdapterData_17 != 0;
    assume AvAdapterData_17 > 0;
    havoc CurrMonitor_6;
    goto L112;

  anon188_Then:
    goto L81;

  anon143_Then:
    goto L81;

  anon140_Then:
    assume {:partition} iPlug_4 == 0;
    goto L81;

  anon185_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon184_Then:
    ntStatus_44 := -1073741811;
    goto L73;

  anon183_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon136_Then:
    goto L49;

  anon135_Then:
    goto L49;

  anon133_Then:
    assume {:partition} oPlug_4 == 0;
    goto L49;

  anon132_Then:
    assume {:partition} iPlug_4 == 0;
    goto L46;

  anon131_Then:
    assume {:partition} oPlug_4 == 0;
    goto L43;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon171_Then:
    goto L38;

  anon129_Then:
    assume {:partition} oPlug_4 == 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} iPlug_4 == 0;
    ntStatus_44 := -1073741811;
    goto L73;

  anon130_Then:
    assume {:partition} iPlug_4 != 0;
    goto L27;

  anon128_Then:
    ntStatus_44 := -1073741811;
    goto L73;

  anon127_Then:
    assume {:partition} Connect_12 == 0;
    ntStatus_44 := -1073741811;
    goto L73;

  anon170_Then:
    assume {:nonnull} BusExtension_49 != 0;
    assume BusExtension_49 > 0;
    havoc Tmp_670;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    havoc CmpData_12;
    goto L18;
}



procedure {:origName "AvCmp_DestroyCmpData"} AvCmp_DestroyCmpData(actual_BusExtension_50: int, actual_CmpData_13: int) returns (Tmp_677: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_DestroyCmpData"} AvCmp_DestroyCmpData(actual_BusExtension_50: int, actual_CmpData_13: int) returns (Tmp_677: int)
{
  var {:scalar} ntStatus_45: int;
  var {:pointer} BusExtension_50: int;
  var {:pointer} CmpData_13: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;

  anon0:
    BusExtension_50 := actual_BusExtension_50;
    CmpData_13 := actual_CmpData_13;
    ntStatus_45 := 0;
    call {:si_unique_call 1341} vslice_dummy_var_191 := AvCmp_FreeCMPAddressRange(BusExtension_50, CmpData_13, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1342} vslice_dummy_var_190 := AvCmp_FreeCMPAddressRange(BusExtension_50, CmpData_13, 1);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1343} IoFreeMdl(0);
    goto L12;

  L12:
    assume {:nonnull} CmpData_13 != 0;
    assume CmpData_13 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 1344} IoFreeMdl(0);
    goto L16;

  L16:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} CmpData_13 != 0;
    call {:si_unique_call 1345} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_677 := ntStatus_45;
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} CmpData_13 == 0;
    goto L20;

  anon12_Then:
    goto L16;

  anon11_Then:
    goto L12;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_192: int;

  anon0:
    call {:si_unique_call 1346} vslice_dummy_var_192 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AvCmp_CreatePlug"} AvCmp_CreatePlug(actual_PdoExtension_15: int, actual_Irp_52: int, actual_Request_22: int) returns (Tmp_681: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_681 == -1073741670 || Tmp_681 == 0 || Tmp_681 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_CreatePlug"} AvCmp_CreatePlug(actual_PdoExtension_15: int, actual_Irp_52: int, actual_Request_22: int) returns (Tmp_681: int)
{
  var {:scalar} Tmp_682: int;
  var {:scalar} MonitorInfo_7: int;
  var {:scalar} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:scalar} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:scalar} PlugNum_6: int;
  var {:scalar} u_1: int;
  var {:scalar} sdv_529: int;
  var {:pointer} Tmp_687: int;
  var {:scalar} Tmp_688: int;
  var {:pointer} CmpData_14: int;
  var {:pointer} Tmp_689: int;
  var {:scalar} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} iPCR_5: int;
  var {:scalar} sdv_530: int;
  var {:scalar} ntStatus_46: int;
  var {:scalar} Tmp_693: int;
  var {:pointer} CurrMonitor_7: int;
  var {:scalar} sdv_531: int;
  var {:pointer} Tmp_694: int;
  var {:scalar} Tmp_695: int;
  var {:scalar} sdv_532: int;
  var {:scalar} sdv_533: int;
  var {:pointer} Plug_6: int;
  var {:pointer} Tmp_696: int;
  var {:scalar} Pcr_9: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} oPCR_4: int;
  var {:scalar} Irql_28: int;
  var {:pointer} BusExtension_51: int;
  var {:pointer} CreatePlug: int;
  var {:pointer} AvAdapterData_18: int;
  var {:scalar} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} PdoExtension_15: int;
  var {:pointer} Request_22: int;

  anon0:
    call {:si_unique_call 1347} MonitorInfo_7 := __HAVOC_malloc(76);
    call {:si_unique_call 1348} u_1 := __HAVOC_malloc(28);
    call {:si_unique_call 1349} Pcr_9 := __HAVOC_malloc(60);
    PdoExtension_15 := actual_PdoExtension_15;
    Request_22 := actual_Request_22;
    call {:si_unique_call 1350} Tmp_684 := __HAVOC_malloc(992);
    call {:si_unique_call 1351} Tmp_686 := __HAVOC_malloc(1860);
    call {:si_unique_call 1352} Tmp_687 := __HAVOC_malloc(1860);
    call {:si_unique_call 1353} Tmp_691 := __HAVOC_malloc(992);
    call {:si_unique_call 1354} Tmp_692 := __HAVOC_malloc(1860);
    call {:si_unique_call 1355} Tmp_694 := __HAVOC_malloc(1860);
    call {:si_unique_call 1356} Tmp_699 := __HAVOC_malloc(992);
    call {:si_unique_call 1357} Tmp_700 := __HAVOC_malloc(992);
    ntStatus_46 := 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_696;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    havoc BusExtension_51;
    assume {:nonnull} Request_22 != 0;
    assume Request_22 > 0;
    CreatePlug := CreatePlug__AV_61883_REQUEST(Request_22);
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    havoc CmpData_14;
    goto L18;

  L18:
    call {:si_unique_call 1358} Tmp_697 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    call {:si_unique_call 1359} sdv_KeAcquireSpinLock(0, Tmp_697);
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    havoc Irql_28;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    PlugNum_6 := 0;
    goto L95;

  L95:
    call {:si_unique_call 1360} Tmp_682, Tmp_684, PlugNum_6 := AvCmp_CreatePlug_loop_L95(Tmp_682, Tmp_684, PlugNum_6, CmpData_14);
    goto L95_last;

  L95_last:
    Tmp_682 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    PlugNum_6 := PlugNum_6 + 1;
    goto anon48_Else_dummy;

  anon48_Else_dummy:
    assume false;
    return;

  anon48_Then:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} PlugNum_6 > 30;
    ntStatus_46 := -1073741670;
    goto L33;

  L33:
    call {:si_unique_call 1361} sdv_KeReleaseSpinLock(0, Irql_28);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} ntStatus_46 != 0;
    goto L38;

  L38:
    Tmp_681 := ntStatus_46;
    return;

  anon37_Then:
    assume {:partition} ntStatus_46 == 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    havoc AvAdapterData_18;
    CurrMonitor_7 := 0;
    call {:si_unique_call 1362} Tmp_697 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    call {:si_unique_call 1363} sdv_KeAcquireSpinLock(0, Tmp_697);
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    havoc Irql_28;
    call {:si_unique_call 1364} sdv_529 := sdv_IsListEmpty(0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_529 != 0;
    goto L52;

  L52:
    call {:si_unique_call 1365} sdv_KeReleaseSpinLock(0, Irql_28);
    goto L38;

  anon39_Then:
    assume {:partition} sdv_529 == 0;
    goto L51;

  L51:
    call {:si_unique_call 1366} CurrMonitor_7 := AvCmp_CreatePlug_loop_L51(MonitorInfo_7, PlugNum_6, CurrMonitor_7, Plug_6, Pcr_9, AvAdapterData_18);
    goto L51_last;

  L51_last:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} CurrMonitor_7 != 0;
    assume {:nonnull} CurrMonitor_7 != 0;
    assume CurrMonitor_7 > 0;
    havoc CurrMonitor_7;
    goto L57;

  L57:
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} CurrMonitor_7 != 0;
    assume CurrMonitor_7 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    goto L64;

  L64:
    assume {:nonnull} CurrMonitor_7 != 0;
    assume CurrMonitor_7 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} CurrMonitor_7 != 0;
    assume CurrMonitor_7 > 0;
    goto L65;

  L65:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L52;

  anon42_Then:
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    assume false;
    return;

  anon41_Then:
    goto L65;

  anon47_Then:
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} MonitorInfo_7 != 0;
    assume MonitorInfo_7 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    goto L64;

  anon40_Then:
    assume {:partition} CurrMonitor_7 == 0;
    assume {:nonnull} AvAdapterData_18 != 0;
    assume AvAdapterData_18 > 0;
    havoc CurrMonitor_7;
    goto L57;

  anon38_Then:
    goto L38;

  anon43_Then:
    assume {:partition} 30 >= PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto L101;

  L101:
    Tmp_695 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_700;
    Plug_6 := Tmp_700 + Tmp_695 * 32;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    Tmp_693 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    oPCR_4 := oPCR__AV_PCR(Tmp_694 + Tmp_693 * 60);
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} oPCR_4 != 0;
    assume oPCR_4 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    Tmp_698 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_686;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto L33;

  anon44_Then:
    goto L101;

  anon33_Then:
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    PlugNum_6 := 0;
    goto L27;

  L27:
    call {:si_unique_call 1367} PlugNum_6, Tmp_690, Tmp_691 := AvCmp_CreatePlug_loop_L27(PlugNum_6, CmpData_14, Tmp_690, Tmp_691);
    goto L27_last;

  L27_last:
    Tmp_690 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    PlugNum_6 := PlugNum_6 + 1;
    goto anon46_Else_dummy;

  anon46_Else_dummy:
    assume false;
    return;

  anon46_Then:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} PlugNum_6 > 30;
    ntStatus_46 := -1073741670;
    goto L33;

  anon35_Then:
    assume {:partition} 30 >= PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    goto L70;

  L70:
    Tmp_685 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_699;
    Plug_6 := Tmp_699 + Tmp_685 * 32;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    Tmp_688 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    iPCR_5 := iPCR__AV_PCR(Tmp_692 + Tmp_688 * 60);
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} iPCR_5 != 0;
    assume iPCR_5 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    Tmp_683 := PlugNum_6;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    havoc Tmp_687;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Pcr_9 != 0;
    assume Pcr_9 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} CmpData_14 != 0;
    assume CmpData_14 > 0;
    assume {:nonnull} u_1 != 0;
    assume u_1 > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} Plug_6 != 0;
    assume Plug_6 > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    assume {:nonnull} CreatePlug != 0;
    assume CreatePlug > 0;
    goto L33;

  anon36_Then:
    goto L70;

  anon34_Then:
    ntStatus_46 := -1073741811;
    goto L33;

  anon45_Then:
    assume {:nonnull} BusExtension_51 != 0;
    assume BusExtension_51 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    havoc CmpData_14;
    goto L18;
}



procedure {:origName "AvCmp_Hide_oMap"} AvCmp_Hide_oMap(actual_NotifyInfo_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_Hide_oMap"} AvCmp_Hide_oMap(actual_NotifyInfo_4: int)
{
  var {:pointer} NotifyInfo_4: int;
  var vslice_dummy_var_193: int;

  anon0:
    call {:si_unique_call 1368} vslice_dummy_var_193 := __HAVOC_malloc(4);
    NotifyInfo_4 := actual_NotifyInfo_4;
    assume {:nonnull} NotifyInfo_4 != 0;
    assume NotifyInfo_4 > 0;
    return;
}



procedure {:origName "AvCmp_P2PCR_iPlug"} AvCmp_P2PCR_iPlug(actual_BusExtension_52: int, actual_CmpData_15: int, actual_Connect_13: int, actual_bReconnect_1: int, actual_Generation_2: int) returns (Tmp_703: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_P2PCR_iPlug"} AvCmp_P2PCR_iPlug(actual_BusExtension_52: int, actual_CmpData_15: int, actual_Connect_13: int, actual_bReconnect_1: int, actual_Generation_2: int) returns (Tmp_703: int)
{
  var {:scalar} Pcr1_2: int;
  var {:scalar} Tmp_704: int;
  var {:scalar} Tmp_705: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} MonitorInfo_8: int;
  var {:scalar} Tmp_707: int;
  var {:pointer} Tmp_708: int;
  var {:scalar} Tmp_709: int;
  var {:pointer} Tmp_710: int;
  var {:scalar} bBandwidth_1: int;
  var {:pointer} Tmp_711: int;
  var {:scalar} Tmp_712: int;
  var {:scalar} Tmp_714: int;
  var {:scalar} Tmp_715: int;
  var {:scalar} Tmp_716: int;
  var {:scalar} Tmp_717: int;
  var {:pointer} iPlug_5: int;
  var {:pointer} oPlug_5: int;
  var {:scalar} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:pointer} Tmp_721: int;
  var {:scalar} Pcr2_2: int;
  var {:scalar} sdv_539: int;
  var {:scalar} Tmp_722: int;
  var {:scalar} ntStatus_47: int;
  var {:scalar} PcrOrg_3: int;
  var {:pointer} Tmp_723: int;
  var {:scalar} BandwidthUnits_5: int;
  var {:pointer} CurrMonitor_8: int;
  var {:pointer} Tmp_725: int;
  var {:scalar} Tmp_726: int;
  var {:scalar} Tmp_727: int;
  var {:pointer} Tmp_728: int;
  var {:scalar} Pcr_10: int;
  var {:pointer} Tmp_729: int;
  var {:scalar} bChannel_1: int;
  var {:scalar} Tmp_730: int;
  var {:scalar} Irql_29: int;
  var {:scalar} sdv_547: int;
  var {:pointer} oPCR_5: int;
  var {:pointer} AvAdapterData_19: int;
  var {:scalar} Tmp_731: int;
  var {:scalar} Tmp_732: int;
  var {:pointer} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:pointer} BusExtension_52: int;
  var {:pointer} CmpData_15: int;
  var {:pointer} Connect_13: int;
  var {:scalar} bReconnect_1: int;
  var {:scalar} Generation_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;

  anon0:
    call {:si_unique_call 1369} Pcr1_2 := __HAVOC_malloc(60);
    call {:si_unique_call 1370} MonitorInfo_8 := __HAVOC_malloc(76);
    call {:si_unique_call 1371} Pcr2_2 := __HAVOC_malloc(60);
    call {:si_unique_call 1372} PcrOrg_3 := __HAVOC_malloc(60);
    call {:si_unique_call 1373} Pcr_10 := __HAVOC_malloc(60);
    BusExtension_52 := actual_BusExtension_52;
    CmpData_15 := actual_CmpData_15;
    Connect_13 := actual_Connect_13;
    bReconnect_1 := actual_bReconnect_1;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 1374} Tmp_708 := __HAVOC_malloc(1860);
    call {:si_unique_call 1375} Tmp_710 := __HAVOC_malloc(1860);
    call {:si_unique_call 1376} Tmp_711 := __HAVOC_malloc(1860);
    call {:si_unique_call 1377} vslice_dummy_var_196 := __HAVOC_malloc(1860);
    call {:si_unique_call 1378} Tmp_720 := __HAVOC_malloc(1860);
    call {:si_unique_call 1379} Tmp_721 := __HAVOC_malloc(1860);
    call {:si_unique_call 1380} vslice_dummy_var_197 := __HAVOC_malloc(1860);
    call {:si_unique_call 1381} Tmp_725 := __HAVOC_malloc(1860);
    call {:si_unique_call 1382} Tmp_728 := __HAVOC_malloc(1860);
    call {:si_unique_call 1383} Tmp_729 := __HAVOC_malloc(1860);
    call {:si_unique_call 1384} Tmp_734 := __HAVOC_malloc(1860);
    call {:si_unique_call 1385} Tmp_735 := __HAVOC_malloc(1860);
    ntStatus_47 := 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc oPlug_5;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc iPlug_5;
    BandwidthUnits_5 := 0;
    bChannel_1 := 0;
    bBandwidth_1 := 0;
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L23;

  L23:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} ntStatus_47 >= 0;
    goto L25;

  L25:
    Tmp_703 := ntStatus_47;
    goto LM2;

  LM2:
    return;

  anon106_Then:
    assume {:partition} 0 > ntStatus_47;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} bChannel_1 == 1;
    call {:si_unique_call 1386} vslice_dummy_var_194 := Av1394_FreeChannel(BusExtension_52, Connect_13);
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} yogi_error != 1;
    goto L26;

  L26:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} bBandwidth_1 == 1;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc vslice_dummy_var_394;
    call {:si_unique_call 1387} vslice_dummy_var_195 := Av1394_FreeBandwidth(BusExtension_52, Connect_13, vslice_dummy_var_394, BandwidthUnits_5);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  anon137_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} bBandwidth_1 != 1;
    goto L25;

  anon136_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon107_Then:
    assume {:partition} bChannel_1 != 1;
    goto L26;

  anon135_Then:
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    oPlug_5 := 0;
    goto L33;

  L33:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} bReconnect_1 == 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_395;
    havoc vslice_dummy_var_396;
    call {:si_unique_call 1388} ntStatus_47 := Av1394_ReadPCR(BusExtension_52, Generation_2, vslice_dummy_var_395, vslice_dummy_var_396, Pcr1_2);
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} yogi_error != 1;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} ntStatus_47 >= 0;
    goto L44;

  L44:
    assume {:nonnull} Pcr1_2 != 0;
    assume Pcr1_2 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    ntStatus_47 := -1073741790;
    goto L23;

  anon116_Then:
    goto L52;

  L52:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L56;

  L56:
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} bReconnect_1 == 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_397;
    havoc vslice_dummy_var_398;
    call {:si_unique_call 1389} ntStatus_47 := AvCmp_SetPlugPCR(BusExtension_52, vslice_dummy_var_397, vslice_dummy_var_398, Pcr1_2, Pcr2_2, PcrOrg_3, 1, Generation_2);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} yogi_error != 1;
    goto L65;

  L65:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} ntStatus_47 >= 0;
    assume {:nonnull} Pcr1_2 != 0;
    assume Pcr1_2 > 0;
    assume {:nonnull} PcrOrg_3 != 0;
    assume PcrOrg_3 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    ntStatus_47 := -1073741823;
    goto L23;

  anon118_Then:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_709;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_710;
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    oPCR_5 := oPCR__AV_PCR(Tmp_710 + Tmp_709 * 60);
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    call {:si_unique_call 1390} boogieTmp := corral_nondet();
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_731;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_728;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} Pcr_10 != 0;
    assume Pcr_10 > 0;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    havoc AvAdapterData_19;
    CurrMonitor_8 := 0;
    call {:si_unique_call 1391} Tmp_723 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    call {:si_unique_call 1392} sdv_KeAcquireSpinLock(0, Tmp_723);
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    havoc Irql_29;
    call {:si_unique_call 1393} sdv_539 := sdv_IsListEmpty(0);
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} sdv_539 != 0;
    goto L99;

  L99:
    call {:si_unique_call 1394} sdv_KeReleaseSpinLock(0, Irql_29);
    goto L23;

  anon121_Then:
    assume {:partition} sdv_539 == 0;
    goto L98;

  L98:
    call {:si_unique_call 1395} CurrMonitor_8 := AvCmp_P2PCR_iPlug_loop_L98(MonitorInfo_8, oPlug_5, CurrMonitor_8, oPCR_5, AvAdapterData_19);
    goto L98_last;

  L98_last:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} CurrMonitor_8 != 0;
    assume {:nonnull} CurrMonitor_8 != 0;
    assume CurrMonitor_8 > 0;
    havoc CurrMonitor_8;
    goto L104;

  L104:
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} oPCR_5 != 0;
    assume oPCR_5 > 0;
    assume {:nonnull} CurrMonitor_8 != 0;
    assume CurrMonitor_8 > 0;
    assume {:nonnull} MonitorInfo_8 != 0;
    assume MonitorInfo_8 > 0;
    assume {:nonnull} CurrMonitor_8 != 0;
    assume CurrMonitor_8 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} CurrMonitor_8 != 0;
    assume CurrMonitor_8 > 0;
    goto L110;

  L110:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L99;

  anon123_Then:
    goto anon123_Then_dummy;

  anon123_Then_dummy:
    assume false;
    return;

  anon143_Then:
    goto L110;

  anon122_Then:
    assume {:partition} CurrMonitor_8 == 0;
    assume {:nonnull} AvAdapterData_19 != 0;
    assume AvAdapterData_19 > 0;
    havoc CurrMonitor_8;
    goto L104;

  anon142_Then:
    goto L23;

  anon120_Then:
    goto L23;

  anon119_Then:
    assume {:partition} oPlug_5 == 0;
    goto L23;

  anon117_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon141_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon140_Then:
    assume {:partition} bReconnect_1 != 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_399;
    havoc vslice_dummy_var_400;
    call {:si_unique_call 1396} ntStatus_47 := AvCmp_SetPlugPCR(BusExtension_52, vslice_dummy_var_399, vslice_dummy_var_400, Pcr1_2, Pcr2_2, PcrOrg_3, 0, 0);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} yogi_error != 1;
    goto L65;

  anon144_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    goto L52;

  anon114_Then:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_717;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_734;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    goto L116;

  L116:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_722;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_708;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    ntStatus_47 := -1073741790;
    goto L23;

  anon146_Then:
    goto L117;

  L117:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    call {:si_unique_call 1397} boogieTmp := corral_nondet();
    goto L52;

  anon145_Then:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_727;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    goto L117;

  anon147_Then:
    goto L116;

  anon112_Then:
    assume {:partition} oPlug_5 == 0;
    assume {:nonnull} BusExtension_52 != 0;
    assume BusExtension_52 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    havoc vslice_dummy_var_401;
    call {:si_unique_call 1398} ntStatus_47 := Av1394_AllocateChannel(BusExtension_52, Connect_13, vslice_dummy_var_401);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} yogi_error != 1;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} ntStatus_47 >= 0;
    bChannel_1 := 1;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_707;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_719;
    call {:si_unique_call 1399} BandwidthUnits_5 := AvCmp_CalculateBWUnits(Connect_13, Tmp_719, Tmp_707);
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc vslice_dummy_var_402;
    call {:si_unique_call 1400} ntStatus_47 := Av1394_AllocateBandwidth(BusExtension_52, Connect_13, vslice_dummy_var_402, BandwidthUnits_5);
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} yogi_error != 1;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} ntStatus_47 >= 0;
    bBandwidth_1 := 1;
    goto L52;

  anon125_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon149_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon124_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon148_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    goto L52;

  anon139_Then:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L56;

  anon127_Then:
    goto L140;

  L140:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_712;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    goto L147;

  L147:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_706;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_711;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    call {:si_unique_call 1401} boogieTmp := corral_nondet();
    goto L56;

  anon154_Then:
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_704;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    goto L147;

  anon155_Then:
    goto L143;

  L143:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} bReconnect_1 != 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_732;
    goto L152;

  L152:
    call {:si_unique_call 1402} ntStatus_47 := Av1394_AllocateChannel(BusExtension_52, Connect_13, Tmp_732);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} bReconnect_1 != 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} ntStatus_47 == -1073741791;
    call {:si_unique_call 1403} ntStatus_47 := Av1394_AllocateChannel(BusExtension_52, Connect_13, -1);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} yogi_error != 1;
    goto L157;

  L157:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} ntStatus_47 >= 0;
    bChannel_1 := 1;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} oPlug_5 != 0;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_726;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_725;
    assume {:nonnull} Tmp_725 != 0;
    assume Tmp_725 > 0;
    havoc Tmp_714;
    assume {:nonnull} oPlug_5 != 0;
    assume oPlug_5 > 0;
    havoc Tmp_715;
    assume {:nonnull} CmpData_15 != 0;
    assume CmpData_15 > 0;
    havoc Tmp_735;
    assume {:nonnull} Tmp_735 != 0;
    assume Tmp_735 > 0;
    havoc Tmp_705;
    call {:si_unique_call 1404} BandwidthUnits_5 := AvCmp_CalculateBWUnits(Connect_13, Tmp_705, Tmp_714);
    goto L173;

  L173:
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc vslice_dummy_var_403;
    call {:si_unique_call 1405} ntStatus_47 := Av1394_AllocateBandwidth(BusExtension_52, Connect_13, vslice_dummy_var_403, BandwidthUnits_5);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} yogi_error != 1;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} ntStatus_47 >= 0;
    bBandwidth_1 := 1;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    assume {:nonnull} Pcr2_2 != 0;
    assume Pcr2_2 > 0;
    goto L56;

  anon133_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon153_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon152_Then:
    assume {:partition} oPlug_5 == 0;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_716;
    assume {:nonnull} Connect_13 != 0;
    assume Connect_13 > 0;
    havoc Tmp_730;
    call {:si_unique_call 1406} BandwidthUnits_5 := AvCmp_CalculateBWUnits(Connect_13, Tmp_730, Tmp_716);
    goto L173;

  anon131_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon151_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon132_Then:
    assume {:partition} ntStatus_47 != -1073741791;
    goto L157;

  anon130_Then:
    assume {:partition} bReconnect_1 == 0;
    goto L157;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon128_Then:
    assume {:partition} bReconnect_1 == 0;
    Tmp_732 := -1;
    goto L152;

  anon129_Then:
    goto L143;

  anon126_Then:
    assume {:partition} oPlug_5 == 0;
    goto L143;

  anon111_Then:
    assume {:partition} oPlug_5 == 0;
    goto L140;

  anon110_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon138_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon109_Then:
    assume {:partition} bReconnect_1 != 1;
    assume {:nonnull} iPlug_5 != 0;
    assume iPlug_5 > 0;
    havoc vslice_dummy_var_404;
    havoc vslice_dummy_var_405;
    call {:si_unique_call 1407} ntStatus_47 := AvCmp_GetPlugPCR(BusExtension_52, vslice_dummy_var_404, vslice_dummy_var_405, Pcr1_2);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} yogi_error != 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} ntStatus_47 >= 0;
    goto L44;

  anon134_Then:
    assume {:partition} 0 > ntStatus_47;
    goto L23;

  anon156_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    goto L33;
}



procedure {:origName "AvCmp_CreateCmpData"} AvCmp_CreateCmpData(actual_BusExtension_53: int, actual_Type_6: int, actual_ppCmpData: int) returns (Tmp_736: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCmp_CreateCmpData"} AvCmp_CreateCmpData(actual_BusExtension_53: int, actual_Type_6: int, actual_ppCmpData: int) returns (Tmp_736: int)
{
  var {:scalar} u_2: int;
  var {:pointer} sdv_550: int;
  var {:pointer} CmpData_16: int;
  var {:scalar} Tmp_737: int;
  var {:scalar} sdv_552: int;
  var {:scalar} ntStatus_48: int;
  var {:scalar} sdv_553: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} oMPR_2: int;
  var {:pointer} iMPR_2: int;
  var {:pointer} BusExtension_53: int;
  var {:scalar} Type_6: int;
  var {:pointer} ppCmpData: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 1408} u_2 := __HAVOC_malloc(28);
    BusExtension_53 := actual_BusExtension_53;
    Type_6 := actual_Type_6;
    ppCmpData := actual_ppCmpData;
    ntStatus_48 := 0;
    call {:si_unique_call 1409} sdv_550 := ExAllocatePoolWithTag(0, 2544, 943206710);
    CmpData_16 := sdv_550;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} CmpData_16 != 0;
    call {:si_unique_call 1410} sdv_RtlZeroMemory(0, 992);
    call {:si_unique_call 1411} sdv_RtlZeroMemory(0, 992);
    call {:si_unique_call 1412} Tmp_738 := __HAVOC_malloc(4);
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    call {:si_unique_call 1413} sdv_KeInitializeSpinLock(Tmp_738);
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} BusExtension_53 != 0;
    assume BusExtension_53 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    goto L29;

  L29:
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    oMPR_2 := Mpr__PCR_MAP(oMap__CMP_DATA(CmpData_16));
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    call {:si_unique_call 1414} boogieTmp := corral_nondet();
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    iMPR_2 := Mpr__PCR_MAP(iMap__CMP_DATA(CmpData_16));
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    call {:si_unique_call 1415} boogieTmp := corral_nondet();
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} u_2 != 0;
    assume u_2 > 0;
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} oMPR_2 != 0;
    assume oMPR_2 > 0;
    havoc Tmp_737;
    goto L59;

  L59:
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    call {:si_unique_call 1416} boogieTmp := IoAllocateMdl(0, 128, 0, 0, 0);
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    call {:si_unique_call 1417} boogieTmp := IoAllocateMdl(0, 128, 0, 0, 0);
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1418} ntStatus_48 := AvCmp_CreateCMPAddressRange(BusExtension_53, CmpData_16, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_48 < 0;
    goto L92;

  L92:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} CmpData_16 != 0;
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1419} IoFreeMdl(0);
    goto L95;

  L95:
    assume {:nonnull} CmpData_16 != 0;
    assume CmpData_16 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1420} IoFreeMdl(0);
    goto L99;

  L99:
    call {:si_unique_call 1421} sdv_ExFreePool(0);
    goto L93;

  L93:
    assume {:nonnull} ppCmpData != 0;
    assume ppCmpData > 0;
    Tmp_736 := ntStatus_48;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    goto L99;

  anon30_Then:
    goto L95;

  anon29_Then:
    assume {:partition} CmpData_16 == 0;
    goto L93;

  anon27_Then:
    assume {:partition} 0 <= ntStatus_48;
    call {:si_unique_call 1422} ntStatus_48 := AvCmp_CreateCMPAddressRange(BusExtension_53, CmpData_16, 1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_48 < 0;
    goto L92;

  anon28_Then:
    assume {:partition} 0 <= ntStatus_48;
    assume {:nonnull} ppCmpData != 0;
    assume ppCmpData > 0;
    Tmp_736 := ntStatus_48;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    ntStatus_48 := -1073741670;
    goto L92;

  anon25_Then:
    ntStatus_48 := -1073741670;
    goto L92;

  anon34_Then:
    assume {:nonnull} iMPR_2 != 0;
    assume iMPR_2 > 0;
    havoc Tmp_737;
    goto L59;

  anon33_Then:
    goto L29;

  anon32_Then:
    assume {:partition} CmpData_16 == 0;
    ntStatus_48 := -1073741670;
    goto L92;
}



procedure {:origName "Av1394_GetLocalHostUniqueId"} Av1394_GetLocalHostUniqueId(actual_BusExtension_54: int, actual_UniqueId: int) returns (Tmp_739: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetLocalHostUniqueId"} Av1394_GetLocalHostUniqueId(actual_BusExtension_54: int, actual_UniqueId: int) returns (Tmp_739: int)
{
  var {:scalar} HostCaps: int;
  var {:pointer} Irp_53: int;
  var {:pointer} Irb_16: int;
  var {:pointer} Tmp_740: int;
  var {:scalar} StackSize_10: int;
  var {:pointer} sdv_558: int;
  var {:scalar} ntStatus_49: int;
  var {:pointer} BusExtension_54: int;
  var {:pointer} UniqueId: int;
  var vslice_dummy_var_406: int;

  anon0:
    call {:si_unique_call 1423} HostCaps := __HAVOC_malloc(20);
    BusExtension_54 := actual_BusExtension_54;
    UniqueId := actual_UniqueId;
    ntStatus_49 := 0;
    Irp_53 := 0;
    Irb_16 := 0;
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_49 := -1073741811;
    goto L16;

  L16:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_53 != 0;
    call {:si_unique_call 1424} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_16 != 0;
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    call {:si_unique_call 1425} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_54), Irb_16);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L21;

  L21:
    Tmp_739 := ntStatus_49;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_16 == 0;
    goto L21;

  anon20_Then:
    assume {:partition} Irp_53 == 0;
    goto L17;

  anon19_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    havoc Tmp_740;
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    havoc StackSize_10;
    call {:si_unique_call 1426} Irp_53 := IoAllocateIrp(StackSize_10, 0);
    call {:si_unique_call 1427} sdv_558 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_16 := sdv_558;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_53 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_16 != 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} Irb_16 != 0;
    assume Irb_16 > 0;
    assume {:nonnull} BusExtension_54 != 0;
    assume BusExtension_54 > 0;
    havoc vslice_dummy_var_406;
    call {:si_unique_call 1428} ntStatus_49 := Av_SubmitIrpSynch#1(vslice_dummy_var_406, Irp_53, Irb_16);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_49 >= 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    assume {:nonnull} HostCaps != 0;
    assume HostCaps > 0;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    goto L16;

  anon23_Then:
    assume {:partition} 0 > ntStatus_49;
    assume {:nonnull} UniqueId != 0;
    assume UniqueId > 0;
    goto L16;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Irb_16 == 0;
    goto L34;

  L34:
    ntStatus_49 := -1073741670;
    goto L16;

  anon26_Then:
    assume {:partition} Irp_53 == 0;
    goto L34;

  anon24_Then:
    goto L12;
}



procedure {:origName "Av1394_GetHostCapabilities"} Av1394_GetHostCapabilities(actual_BusExtension_55: int) returns (Tmp_742: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetHostCapabilities"} Av1394_GetHostCapabilities(actual_BusExtension_55: int) returns (Tmp_742: int)
{
  var {:scalar} HostCaps_1: int;
  var {:pointer} Irp_54: int;
  var {:pointer} Irb_17: int;
  var {:scalar} StackSize_11: int;
  var {:pointer} sdv_561: int;
  var {:scalar} ntStatus_50: int;
  var {:pointer} Tmp_744: int;
  var {:pointer} BusExtension_55: int;
  var vslice_dummy_var_407: int;

  anon0:
    call {:si_unique_call 1429} HostCaps_1 := __HAVOC_malloc(12);
    BusExtension_55 := actual_BusExtension_55;
    ntStatus_50 := 0;
    Irp_54 := 0;
    Irb_17 := 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    ntStatus_50 := -1073741811;
    goto L16;

  L16:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irp_54 != 0;
    call {:si_unique_call 1430} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irb_17 != 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    call {:si_unique_call 1431} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_55), Irb_17);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L21;

  L21:
    Tmp_742 := ntStatus_50;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} Irb_17 == 0;
    goto L21;

  anon22_Then:
    assume {:partition} Irp_54 == 0;
    goto L17;

  anon21_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    havoc Tmp_744;
    assume {:nonnull} Tmp_744 != 0;
    assume Tmp_744 > 0;
    havoc StackSize_11;
    call {:si_unique_call 1432} Irp_54 := IoAllocateIrp(StackSize_11, 0);
    call {:si_unique_call 1433} sdv_561 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_17 := sdv_561;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Irp_54 != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Irb_17 != 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} Irb_17 != 0;
    assume Irb_17 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    havoc vslice_dummy_var_407;
    call {:si_unique_call 1434} ntStatus_50 := Av_SubmitIrpSynch#1(vslice_dummy_var_407, Irp_54, Irb_17);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} ntStatus_50 >= 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} HostCaps_1 != 0;
    assume HostCaps_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    assume {:nonnull} BusExtension_55 != 0;
    assume BusExtension_55 > 0;
    goto L16;

  anon30_Then:
    goto L16;

  anon25_Then:
    assume {:partition} 0 > ntStatus_50;
    goto L16;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:partition} Irb_17 == 0;
    goto L34;

  L34:
    ntStatus_50 := -1073741670;
    goto L16;

  anon28_Then:
    assume {:partition} Irp_54 == 0;
    goto L34;

  anon26_Then:
    goto L12;
}



procedure {:origName "Av1394_SetPacketSize"} Av1394_SetPacketSize(actual_BusExtension_57: int, actual_PacketSize: int) returns (Tmp_752: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_SetPacketSize"} Av1394_SetPacketSize(actual_BusExtension_57: int, actual_PacketSize: int) returns (Tmp_752: int)
{
  var {:pointer} Irp_56: int;
  var {:pointer} Irb_19: int;
  var {:pointer} Tmp_754: int;
  var {:scalar} StackSize_13: int;
  var {:scalar} SetLocalProps: int;
  var {:pointer} sdv_568: int;
  var {:scalar} ntStatus_52: int;
  var {:pointer} BusExtension_57: int;
  var {:scalar} PacketSize: int;
  var vslice_dummy_var_408: int;

  anon0:
    call {:si_unique_call 1435} SetLocalProps := __HAVOC_malloc(8);
    BusExtension_57 := actual_BusExtension_57;
    PacketSize := actual_PacketSize;
    ntStatus_52 := 0;
    Irp_56 := 0;
    Irb_19 := 0;
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_52 := -1073741811;
    goto L16;

  L16:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_56 != 0;
    call {:si_unique_call 1436} IoFreeIrp(0);
    goto L17;

  L17:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irb_19 != 0;
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    call {:si_unique_call 1437} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_57), Irb_19);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} yogi_error != 1;
    goto L21;

  L21:
    Tmp_752 := ntStatus_52;
    goto LM2;

  LM2:
    return;

  anon22_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} Irb_19 == 0;
    goto L21;

  anon18_Then:
    assume {:partition} Irp_56 == 0;
    goto L17;

  anon17_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    havoc Tmp_754;
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    havoc StackSize_13;
    call {:si_unique_call 1438} Irp_56 := IoAllocateIrp(StackSize_13, 0);
    call {:si_unique_call 1439} sdv_568 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_19 := sdv_568;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_56 != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irb_19 != 0;
    assume {:nonnull} SetLocalProps != 0;
    assume SetLocalProps > 0;
    assume {:nonnull} SetLocalProps != 0;
    assume SetLocalProps > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} Irb_19 != 0;
    assume Irb_19 > 0;
    assume {:nonnull} BusExtension_57 != 0;
    assume BusExtension_57 > 0;
    havoc vslice_dummy_var_408;
    call {:si_unique_call 1440} ntStatus_52 := Av_SubmitIrpSynch#1(vslice_dummy_var_408, Irp_56, Irb_19);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L16;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} Irb_19 == 0;
    goto L34;

  L34:
    ntStatus_52 := -1073741670;
    goto L16;

  anon23_Then:
    assume {:partition} Irp_56 == 0;
    goto L34;

  anon21_Then:
    goto L12;
}



procedure {:origName "Av1394_GetVirtualUnitInfo"} Av1394_GetVirtualUnitInfo(actual_BusExtension_58: int, actual_UnitData_1: int) returns (Tmp_755: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetVirtualUnitInfo"} Av1394_GetVirtualUnitInfo(actual_BusExtension_58: int, actual_UnitData_1: int) returns (Tmp_755: int)
{
  var {:scalar} Tmp_756: int;
  var {:pointer} sdv_572: int;
  var {:pointer} Tmp_757: int;
  var {:scalar} Tmp_758: int;
  var {:pointer} Tmp_759: int;
  var {:pointer} Irp_57: int;
  var {:pointer} Irb_20: int;
  var {:pointer} RootHandle_1: int;
  var {:pointer} sdv_575: int;
  var {:scalar} ResultLength_2: int;
  var {:scalar} Tmp_760: int;
  var {:scalar} KeyLength_1: int;
  var {:pointer} KeyInfo_1: int;
  var {:scalar} Tmp_761: int;
  var {:pointer} sdv_576: int;
  var {:scalar} ResultLength_3: int;
  var {:scalar} Tmp_763: int;
  var {:scalar} Tmp_764: int;
  var {:scalar} Tmp_765: int;
  var {:pointer} sdv_578: int;
  var {:pointer} sdv_579: int;
  var {:scalar} KeyLength_2: int;
  var {:scalar} Tmp_766: int;
  var {:pointer} sdv_582: int;
  var {:scalar} uniKeyName: int;
  var {:scalar} StackSize_14: int;
  var {:pointer} sdv_584: int;
  var {:scalar} KeyLength_3: int;
  var {:scalar} ntStatus_53: int;
  var {:pointer} uniModelId_3: int;
  var {:pointer} KeyHandle_2: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} KeyInfo_2: int;
  var {:scalar} ResultLength_4: int;
  var {:scalar} ResultLength_5: int;
  var {:pointer} sdv_589: int;
  var {:pointer} sdv_591: int;
  var {:scalar} Tmp_771: int;
  var {:scalar} KeyLength_4: int;
  var {:scalar} KeyLength_5: int;
  var {:pointer} Tmp_772: int;
  var {:pointer} KeyInfo_3: int;
  var {:pointer} KeyInfo_4: int;
  var {:pointer} sdv_595: int;
  var {:scalar} uniTempName_1: int;
  var {:scalar} Tmp_773: int;
  var {:scalar} ResultLength_6: int;
  var {:pointer} KeyInfo_5: int;
  var {:pointer} uniVendorId_3: int;
  var {:scalar} Tmp_776: int;
  var {:scalar} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} BusExtension_58: int;
  var {:pointer} UnitData_1: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 1441} uniKeyName := __HAVOC_malloc(12);
    call {:si_unique_call 1442} KeyHandle_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1443} uniTempName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1444} vslice_dummy_var_198 := __HAVOC_malloc(24);
    BusExtension_58 := actual_BusExtension_58;
    UnitData_1 := actual_UnitData_1;
    call {:si_unique_call 1445} vslice_dummy_var_203 := __HAVOC_malloc(40);
    call {:si_unique_call 1446} vslice_dummy_var_204 := __HAVOC_malloc(36);
    call {:si_unique_call 1447} vslice_dummy_var_205 := __HAVOC_malloc(32);
    call {:si_unique_call 1448} vslice_dummy_var_206 := __HAVOC_malloc(44);
    call {:si_unique_call 1449} vslice_dummy_var_207 := __HAVOC_malloc(16);
    call {:si_unique_call 1450} vslice_dummy_var_208 := __HAVOC_malloc(40);
    ntStatus_53 := 0;
    RootHandle_1 := 0;
    assume {:nonnull} KeyHandle_2 != 0;
    assume KeyHandle_2 > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1451} ntStatus_53 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ntStatus_53 < 0;
    goto L259;

  L259:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} RootHandle_1 != 0;
    call {:si_unique_call 1452} vslice_dummy_var_201 := ZwClose(0);
    goto L260;

  L260:
    assume {:nonnull} KeyHandle_2 != 0;
    assume KeyHandle_2 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    call {:si_unique_call 1453} vslice_dummy_var_202 := ZwClose(0);
    goto L264;

  L264:
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1454} sdv_ExFreePool(0);
    goto L268;

  L268:
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 1455} sdv_ExFreePool(0);
    goto L272;

  L272:
    Tmp_755 := ntStatus_53;
    goto LM2;

  LM2:
    return;

  anon60_Then:
    goto L272;

  anon59_Then:
    goto L268;

  anon58_Then:
    goto L264;

  anon57_Then:
    assume {:partition} RootHandle_1 == 0;
    goto L260;

  anon49_Then:
    assume {:partition} 0 <= ntStatus_53;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    havoc Tmp_766;
    call {:si_unique_call 1456} sdv_584 := ExAllocatePoolWithTag(0, Tmp_766, 943206710);
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} uniKeyName != 0;
    assume uniKeyName > 0;
    havoc Tmp_771;
    call {:si_unique_call 1457} sdv_RtlZeroMemory(0, Tmp_771);
    call {:si_unique_call 1458} vslice_dummy_var_209 := corral_nondet();
    call {:si_unique_call 1459} sdv_InitializeObjectAttributes(0, 0, 64, 0, 0);
    call {:si_unique_call 1460} ntStatus_53 := ZwCreateKey(KeyHandle_2, 983103, 0, 0, 0, 0, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} ntStatus_53 < 0;
    goto L259;

  anon50_Then:
    assume {:partition} 0 <= ntStatus_53;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_776;
    call {:si_unique_call 1461} sdv_589 := ExAllocatePoolWithTag(0, Tmp_776, 943206710);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    KeyLength_4 := 20;
    call {:si_unique_call 1462} sdv_579 := ExAllocatePoolWithTag(0, KeyLength_4, 943206710);
    KeyInfo_5 := sdv_579;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} KeyInfo_5 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_761;
    call {:si_unique_call 1463} sdv_RtlZeroMemory(0, Tmp_761);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1464} vslice_dummy_var_210 := corral_nondet();
    call {:si_unique_call 1465} Tmp_759 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    call {:si_unique_call 1466} ntStatus_53 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_4, Tmp_759);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    havoc ResultLength_2;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} ntStatus_53 >= 0;
    assume {:nonnull} KeyInfo_5 != 0;
    assume KeyInfo_5 > 0;
    Tmp_778 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo_5);
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    goto L79;

  L79:
    call {:si_unique_call 1467} sdv_ExFreePool(0);
    KeyLength_3 := 20;
    call {:si_unique_call 1468} sdv_582 := ExAllocatePoolWithTag(0, KeyLength_3, 943206710);
    KeyInfo_2 := sdv_582;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} KeyInfo_2 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_756;
    call {:si_unique_call 1469} sdv_RtlZeroMemory(0, Tmp_756);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1470} vslice_dummy_var_211 := corral_nondet();
    call {:si_unique_call 1471} Tmp_759 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    call {:si_unique_call 1472} ntStatus_53 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_3, Tmp_759);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    havoc ResultLength_3;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} ntStatus_53 >= 0;
    assume {:nonnull} KeyInfo_2 != 0;
    assume KeyInfo_2 > 0;
    Tmp_767 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo_2);
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    goto L107;

  L107:
    call {:si_unique_call 1473} sdv_ExFreePool(0);
    KeyLength_1 := 20;
    call {:si_unique_call 1474} sdv_572 := ExAllocatePoolWithTag(0, KeyLength_1, 943206710);
    KeyInfo_3 := sdv_572;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} KeyInfo_3 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_777;
    call {:si_unique_call 1475} sdv_RtlZeroMemory(0, Tmp_777);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1476} vslice_dummy_var_212 := corral_nondet();
    call {:si_unique_call 1477} Tmp_759 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    call {:si_unique_call 1478} ntStatus_53 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_1, Tmp_759);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    havoc ResultLength_6;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ntStatus_53 >= 0;
    assume {:nonnull} KeyInfo_3 != 0;
    assume KeyInfo_3 > 0;
    Tmp_757 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo_3);
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    goto L136;

  L136:
    call {:si_unique_call 1479} sdv_ExFreePool(0);
    assume {:nonnull} BusExtension_58 != 0;
    assume BusExtension_58 > 0;
    havoc Tmp_772;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    havoc StackSize_14;
    call {:si_unique_call 1480} Irp_57 := IoAllocateIrp(StackSize_14, 0);
    call {:si_unique_call 1481} sdv_595 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_20 := sdv_595;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Irp_57 != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Irb_20 != 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} Irb_20 != 0;
    assume Irb_20 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} BusExtension_58 != 0;
    assume BusExtension_58 > 0;
    havoc vslice_dummy_var_409;
    call {:si_unique_call 1482} ntStatus_53 := Av_SubmitIrpSynch#1(vslice_dummy_var_409, Irp_57, Irb_20);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1483} IoFreeIrp(0);
    assume {:nonnull} BusExtension_58 != 0;
    assume BusExtension_58 > 0;
    call {:si_unique_call 1484} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_58), Irb_20);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    uniVendorId_3 := uniVendorId__UNIT_DATA(UnitData_1);
    KeyLength_5 := 216;
    call {:si_unique_call 1485} sdv_578 := ExAllocatePoolWithTag(0, KeyLength_5, 943206710);
    KeyInfo_1 := sdv_578;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} KeyInfo_1 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_763;
    call {:si_unique_call 1486} sdv_RtlZeroMemory(0, Tmp_763);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1487} vslice_dummy_var_213 := corral_nondet();
    call {:si_unique_call 1488} Tmp_759 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    call {:si_unique_call 1489} ntStatus_53 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_5, Tmp_759);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    havoc ResultLength_5;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} ntStatus_53 >= 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    havoc Tmp_764;
    call {:si_unique_call 1490} sdv_575 := ExAllocatePoolWithTag(0, Tmp_764, 943206710);
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    havoc Tmp_758;
    call {:si_unique_call 1491} sdv_RtlZeroMemory(0, Tmp_758);
    call {:si_unique_call 1492} vslice_dummy_var_199 := corral_nondet();
    goto L211;

  L211:
    call {:si_unique_call 1493} sdv_ExFreePool(0);
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    uniModelId_3 := uniModelId__UNIT_DATA(UnitData_1);
    KeyLength_2 := 216;
    call {:si_unique_call 1494} sdv_576 := ExAllocatePoolWithTag(0, KeyLength_2, 943206710);
    KeyInfo_4 := sdv_576;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} KeyInfo_4 != 0;
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    havoc Tmp_760;
    call {:si_unique_call 1495} sdv_RtlZeroMemory(0, Tmp_760);
    assume {:nonnull} uniTempName_1 != 0;
    assume uniTempName_1 > 0;
    call {:si_unique_call 1496} vslice_dummy_var_214 := corral_nondet();
    call {:si_unique_call 1497} Tmp_759 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    call {:si_unique_call 1498} ntStatus_53 := ZwQueryValueKey(0, 0, 2, 0, KeyLength_2, Tmp_759);
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    havoc ResultLength_4;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} ntStatus_53 >= 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    havoc Tmp_765;
    call {:si_unique_call 1499} sdv_591 := ExAllocatePoolWithTag(0, Tmp_765, 943206710);
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    havoc Tmp_773;
    call {:si_unique_call 1500} sdv_RtlZeroMemory(0, Tmp_773);
    call {:si_unique_call 1501} vslice_dummy_var_200 := corral_nondet();
    goto L256;

  L256:
    call {:si_unique_call 1502} sdv_ExFreePool(0);
    goto L259;

  anon72_Then:
    ntStatus_53 := -1073741670;
    goto L259;

  anon56_Then:
    assume {:partition} 0 > ntStatus_53;
    ntStatus_53 := 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    assume {:nonnull} uniModelId_3 != 0;
    assume uniModelId_3 > 0;
    goto L256;

  anon71_Then:
    assume {:partition} KeyInfo_4 == 0;
    ntStatus_53 := -1073741670;
    goto L259;

  anon70_Then:
    ntStatus_53 := -1073741670;
    goto L259;

  anon55_Then:
    assume {:partition} 0 > ntStatus_53;
    ntStatus_53 := 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    assume {:nonnull} uniVendorId_3 != 0;
    assume uniVendorId_3 > 0;
    goto L211;

  anon69_Then:
    assume {:partition} KeyInfo_1 == 0;
    ntStatus_53 := -1073741670;
    goto L259;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} Irb_20 == 0;
    goto L152;

  L152:
    ntStatus_53 := -1073741670;
    goto L259;

  anon66_Then:
    assume {:partition} Irp_57 == 0;
    goto L152;

  anon53_Then:
    assume {:partition} 0 > ntStatus_53;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    goto L136;

  anon65_Then:
    assume {:partition} KeyInfo_3 == 0;
    ntStatus_53 := -1073741670;
    goto L259;

  anon52_Then:
    assume {:partition} 0 > ntStatus_53;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    ntStatus_53 := 0;
    goto L107;

  anon64_Then:
    assume {:partition} KeyInfo_2 == 0;
    ntStatus_53 := -1073741670;
    goto L259;

  anon51_Then:
    assume {:partition} 0 > ntStatus_53;
    assume {:nonnull} UnitData_1 != 0;
    assume UnitData_1 > 0;
    goto L79;

  anon63_Then:
    assume {:partition} KeyInfo_5 == 0;
    ntStatus_53 := -1073741670;
    goto L259;

  anon62_Then:
    ntStatus_53 := -1073741670;
    goto L259;

  anon61_Then:
    ntStatus_53 := -1073741670;
    goto L259;
}



procedure {:origName "Av1394_RemoveConfigRomEntry"} Av1394_RemoveConfigRomEntry(actual_CromData_1: int) returns (Tmp_779: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_RemoveConfigRomEntry"} Av1394_RemoveConfigRomEntry(actual_CromData_1: int) returns (Tmp_779: int)
{
  var {:pointer} Irp_58: int;
  var {:pointer} Irb_21: int;
  var {:scalar} StackSize_15: int;
  var {:pointer} sdv_600: int;
  var {:scalar} ntStatus_54: int;
  var {:pointer} sdv_601: int;
  var {:pointer} BusExtension_59: int;
  var {:pointer} AvAdapterData_20: int;
  var {:pointer} Tmp_781: int;
  var {:pointer} SetLocalHostProps3: int;
  var {:pointer} CromData_1: int;
  var vslice_dummy_var_410: int;

  anon0:
    CromData_1 := actual_CromData_1;
    ntStatus_54 := 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    havoc AvAdapterData_20;
    assume {:nonnull} AvAdapterData_20 != 0;
    assume AvAdapterData_20 > 0;
    havoc BusExtension_59;
    Irp_58 := 0;
    Irb_21 := 0;
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    havoc Tmp_781;
    assume {:nonnull} Tmp_781 != 0;
    assume Tmp_781 > 0;
    havoc StackSize_15;
    call {:si_unique_call 1503} Irp_58 := IoAllocateIrp(StackSize_15, 0);
    call {:si_unique_call 1504} sdv_600 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_21 := sdv_600;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irp_58 != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_21 != 0;
    call {:si_unique_call 1505} sdv_601 := ExAllocatePoolWithTag(0, 16, 943206710);
    SetLocalHostProps3 := sdv_601;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} SetLocalHostProps3 != 0;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    assume {:nonnull} SetLocalHostProps3 != 0;
    assume SetLocalHostProps3 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} Irb_21 != 0;
    assume Irb_21 > 0;
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    havoc vslice_dummy_var_410;
    call {:si_unique_call 1506} ntStatus_54 := Av_SubmitIrpSynch#1(vslice_dummy_var_410, Irp_58, Irb_21);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} ntStatus_54 >= 0;
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 1507} sdv_ExFreePool(0);
    goto L47;

  L47:
    assume {:nonnull} CromData_1 != 0;
    assume CromData_1 > 0;
    goto L45;

  L45:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SetLocalHostProps3 != 0;
    call {:si_unique_call 1508} sdv_ExFreePool(0);
    goto L51;

  L51:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irp_58 != 0;
    call {:si_unique_call 1509} IoFreeIrp(0);
    goto L55;

  L55:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irb_21 != 0;
    assume {:nonnull} BusExtension_59 != 0;
    assume BusExtension_59 > 0;
    call {:si_unique_call 1510} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_59), Irb_21);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L59;

  L59:
    Tmp_779 := ntStatus_54;
    goto LM2;

  LM2:
    return;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} Irb_21 == 0;
    goto L59;

  anon25_Then:
    assume {:partition} Irp_58 == 0;
    goto L55;

  anon23_Then:
    assume {:partition} SetLocalHostProps3 == 0;
    goto L51;

  anon24_Then:
    goto L47;

  anon22_Then:
    assume {:partition} 0 > ntStatus_54;
    goto L45;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} SetLocalHostProps3 == 0;
    ntStatus_54 := -1073741670;
    goto L51;

  anon21_Then:
    assume {:partition} Irb_21 == 0;
    goto L25;

  L25:
    ntStatus_54 := -1073741670;
    goto L51;

  anon27_Then:
    assume {:partition} Irp_58 == 0;
    goto L25;
}



procedure {:origName "Av1394_GetUnitInfo"} Av1394_GetUnitInfo(actual_BusExtension_60: int, actual_UnitData_2: int) returns (Tmp_782: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetUnitInfo"} Av1394_GetUnitInfo(actual_BusExtension_60: int, actual_UnitData_2: int) returns (Tmp_782: int)
{
  var {:scalar} CurrAddress: int;
  var {:scalar} i_3: int;
  var {:pointer} Irp_59: int;
  var {:pointer} Irb_22: int;
  var {:scalar} u_3: int;
  var {:scalar} sdv_607: int;
  var {:scalar} ConfigRom: int;
  var {:scalar} Tmp_784: int;
  var {:scalar} Tmp_785: int;
  var {:scalar} LastKey: int;
  var {:scalar} DescAddress: int;
  var {:scalar} Tmp_786: int;
  var {:pointer} UnitDir: int;
  var {:scalar} sdv_611: int;
  var {:scalar} StackSize_16: int;
  var {:scalar} sdv_614: int;
  var {:scalar} Tmp_787: int;
  var {:scalar} sdv_615: int;
  var {:scalar} ntStatus_55: int;
  var {:pointer} Tmp_788: int;
  var {:scalar} sdv_616: int;
  var {:scalar} DescAddress_1: int;
  var {:scalar} sdv_619: int;
  var {:pointer} sdv_620: int;
  var {:scalar} Tmp_789: int;
  var {:scalar} maxRecPkt: int;
  var {:scalar} Tmp_790: int;
  var {:scalar} DescAddress_2: int;
  var {:dopa} {:scalar} ulQuadlet: int;
  var {:scalar} sdv_622: int;
  var {:scalar} u3: int;
  var {:scalar} u2: int;
  var {:pointer} BusExtension_60: int;
  var {:pointer} UnitData_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;

  anon0:
    call {:si_unique_call 1511} u_3 := __HAVOC_malloc(24);
    call {:si_unique_call 1512} ConfigRom := __HAVOC_malloc(20);
    call {:si_unique_call 1513} ulQuadlet := __HAVOC_malloc(4);
    call {:si_unique_call 1514} u3 := __HAVOC_malloc(24);
    call {:si_unique_call 1515} u2 := __HAVOC_malloc(24);
    BusExtension_60 := actual_BusExtension_60;
    UnitData_2 := actual_UnitData_2;
    ntStatus_55 := 0;
    LastKey := 0;
    UnitDir := 0;
    CurrAddress := -268434412;
    call {:si_unique_call 1516} ntStatus_55 := Av1394_QuadletRead(BusExtension_60, ulQuadlet, CurrAddress);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} ntStatus_55 < 0;
    goto L92;

  L92:
    Tmp_782 := ntStatus_55;
    goto LM2;

  LM2:
    return;

  anon87_Then:
    assume {:partition} 0 <= ntStatus_55;
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    i_3 := 0;
    goto L31;

  L31:
    call {:si_unique_call 1517} CurrAddress, i_3, Tmp_784, LastKey, Tmp_787, ntStatus_55, DescAddress_1, Tmp_789, Tmp_790, DescAddress_2, vslice_dummy_var_215, vslice_dummy_var_216, vslice_dummy_var_217, vslice_dummy_var_218, vslice_dummy_var_219, vslice_dummy_var_220 := Av1394_GetUnitInfo_loop_L31(CurrAddress, i_3, u_3, Tmp_784, LastKey, Tmp_787, sdv_615, ntStatus_55, DescAddress_1, sdv_619, Tmp_789, Tmp_790, DescAddress_2, ulQuadlet, sdv_622, u3, u2, BusExtension_60, UnitData_2, vslice_dummy_var_215, vslice_dummy_var_216, vslice_dummy_var_217, vslice_dummy_var_218, vslice_dummy_var_219, vslice_dummy_var_220);
    goto L31_last;

  L31_last:
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    CurrAddress := CurrAddress + 4;
    call {:si_unique_call 1518} ntStatus_55 := Av1394_QuadletRead(BusExtension_60, ulQuadlet, CurrAddress);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} ntStatus_55 < 0;
    goto L92;

  anon89_Then:
    assume {:partition} 0 <= ntStatus_55;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L45;

  L45:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} LastKey == 3;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc Tmp_787;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1519} vslice_dummy_var_215 := Av1394_ReadTextualDescriptor(BusExtension_60, uniVendorId__UNIT_DATA(UnitData_2), Tmp_787);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L47;

  L47:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} LastKey == 3;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc DescAddress_2;
    call {:si_unique_call 1520} vslice_dummy_var_216 := Av1394_QuadletRead(BusExtension_60, ulQuadlet, DescAddress_2);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    havoc Tmp_789;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1521} vslice_dummy_var_217 := Av1394_ReadTextualDescriptor(BusExtension_60, uniVendorId__UNIT_DATA(UnitData_2), Tmp_789);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto L53;

  L53:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L68;

  L68:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc Tmp_784;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1522} vslice_dummy_var_218 := Av1394_ReadTextualDescriptor(BusExtension_60, uniModelId__UNIT_DATA(UnitData_2), Tmp_784);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto L70;

  L70:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc DescAddress_1;
    call {:si_unique_call 1523} vslice_dummy_var_219 := Av1394_QuadletRead(BusExtension_60, ulQuadlet, DescAddress_1);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    havoc Tmp_790;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1524} vslice_dummy_var_220 := Av1394_ReadTextualDescriptor(BusExtension_60, uniModelId__UNIT_DATA(UnitData_2), Tmp_790);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  L76:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc LastKey;
    i_3 := i_3 + 1;
    goto L76_dummy;

  L76_dummy:
    assume false;
    return;

  anon119_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon98_Then:
    assume {:partition} LastKey != 23;
    goto L76;

  anon96_Then:
    goto L76;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon97_Then:
    assume {:partition} LastKey != 23;
    goto L70;

  anon95_Then:
    goto L70;

  anon93_Then:
    goto L68;

  anon116_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon94_Then:
    assume {:partition} LastKey != 3;
    goto L53;

  anon91_Then:
    goto L53;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    assume {:partition} LastKey != 3;
    goto L47;

  anon90_Then:
    goto L47;

  anon113_Then:
    goto L45;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon88_Then:
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    havoc Tmp_788;
    assume {:nonnull} Tmp_788 != 0;
    assume Tmp_788 > 0;
    havoc StackSize_16;
    call {:si_unique_call 1525} Irp_59 := IoAllocateIrp(StackSize_16, 0);
    call {:si_unique_call 1526} sdv_620 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_22 := sdv_620;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} Irp_59 != 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} Irb_22 != 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    havoc vslice_dummy_var_411;
    call {:si_unique_call 1527} ntStatus_55 := Av_SubmitIrpSynch#1(vslice_dummy_var_411, Irp_59, Irb_22);
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} yogi_error != 1;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    havoc vslice_dummy_var_412;
    call {:si_unique_call 1528} boogieTmp := ExAllocatePoolWithTag(0, vslice_dummy_var_412, 943206710);
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    havoc UnitDir;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    havoc vslice_dummy_var_413;
    call {:si_unique_call 1529} ntStatus_55 := Av_SubmitIrpSynch#1(vslice_dummy_var_413, Irp_59, Irb_22);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} yogi_error != 1;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} ntStatus_55 >= 0;
    assume {:nonnull} ConfigRom != 0;
    assume ConfigRom > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} ConfigRom != 0;
    assume ConfigRom > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1530} maxRecPkt := corral_nondet();
    maxRecPkt := BAND(maxRecPkt, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} maxRecPkt != 0;
    goto L150;

  L150:
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    havoc CurrAddress;
    i_3 := 0;
    goto L157;

  L157:
    call {:si_unique_call 1531} CurrAddress, i_3, Tmp_785, LastKey, DescAddress, Tmp_786, vslice_dummy_var_221, vslice_dummy_var_222, vslice_dummy_var_223 := Av1394_GetUnitInfo_loop_L157(CurrAddress, i_3, u_3, sdv_607, Tmp_785, LastKey, DescAddress, Tmp_786, UnitDir, sdv_611, ulQuadlet, u3, u2, BusExtension_60, UnitData_2, vslice_dummy_var_221, vslice_dummy_var_222, vslice_dummy_var_223);
    goto L157_last;

  L157_last:
    assume {:nonnull} u_3 != 0;
    assume u_3 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    CurrAddress := CurrAddress + 4;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L166;

  L166:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto L169;

  L169:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc Tmp_785;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1532} vslice_dummy_var_221 := Av1394_ReadTextualDescriptor(BusExtension_60, uniUnitModelId__UNIT_DATA(UnitData_2), Tmp_785);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto L171;

  L171:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} LastKey == 23;
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc DescAddress;
    call {:si_unique_call 1533} vslice_dummy_var_222 := Av1394_QuadletRead(BusExtension_60, ulQuadlet, DescAddress);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    assume {:nonnull} u3 != 0;
    assume u3 > 0;
    havoc Tmp_786;
    assume {:nonnull} UnitData_2 != 0;
    assume UnitData_2 > 0;
    call {:si_unique_call 1534} vslice_dummy_var_223 := Av1394_ReadTextualDescriptor(BusExtension_60, uniModelId__UNIT_DATA(UnitData_2), Tmp_786);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} yogi_error != 1;
    goto L177;

  L177:
    assume {:nonnull} u2 != 0;
    assume u2 > 0;
    havoc LastKey;
    i_3 := i_3 + 1;
    goto L177_dummy;

  L177_dummy:
    assume false;
    return;

  anon128_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon127_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} LastKey != 23;
    goto L177;

  anon108_Then:
    goto L177;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon109_Then:
    assume {:partition} LastKey != 23;
    goto L171;

  anon107_Then:
    goto L171;

  anon106_Then:
    goto L169;

  anon125_Then:
    goto L166;

  anon104_Then:
    assume {:nonnull} Irb_22 != 0;
    assume Irb_22 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    call {:si_unique_call 1535} sdv_ExFreePool(0);
    goto L193;

  L193:
    call {:si_unique_call 1536} IoFreeIrp(0);
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    call {:si_unique_call 1537} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_60), Irb_22);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon129_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    goto L193;

  anon124_Then:
    assume {:partition} maxRecPkt == 0;
    assume {:nonnull} BusExtension_60 != 0;
    assume BusExtension_60 > 0;
    goto L150;

  anon102_Then:
    assume {:partition} 0 > ntStatus_55;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} UnitDir != 0;
    call {:si_unique_call 1538} sdv_ExFreePool(0);
    goto L92;

  anon103_Then:
    assume {:partition} UnitDir == 0;
    goto L92;

  anon123_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon122_Then:
    ntStatus_55 := -1073741670;
    goto L92;

  anon101_Then:
    ntStatus_55 := -1073741621;
    goto L92;

  anon100_Then:
    assume {:partition} 0 > ntStatus_55;
    goto L92;

  anon121_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    assume {:partition} Irb_22 == 0;
    goto L102;

  L102:
    ntStatus_55 := -1073741670;
    goto L92;

  anon120_Then:
    assume {:partition} Irp_59 == 0;
    goto L102;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_2: int)
{
  var {:pointer} ListHead_2: int;
  var vslice_dummy_var_224: int;

  anon0:
    call {:si_unique_call 1539} vslice_dummy_var_224 := __HAVOC_malloc(4);
    ListHead_2 := actual_ListHead_2;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    return;
}



procedure {:origName "Av1394_FreeBandwidth"} Av1394_FreeBandwidth(actual_BusExtension_61: int, actual_Connect_14: int, actual_Speed_1: int, actual_BandwidthUnits_6: int) returns (Tmp_793: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_FreeBandwidth"} Av1394_FreeBandwidth(actual_BusExtension_61: int, actual_Connect_14: int, actual_Speed_1: int, actual_BandwidthUnits_6: int) returns (Tmp_793: int)
{
  var {:pointer} Irp_60: int;
  var {:pointer} Irb_23: int;
  var {:scalar} StackSize_17: int;
  var {:pointer} sdv_628: int;
  var {:scalar} ntStatus_56: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} BusExtension_61: int;
  var {:scalar} Speed_1: int;
  var {:scalar} BandwidthUnits_6: int;
  var vslice_dummy_var_414: int;

  anon0:
    BusExtension_61 := actual_BusExtension_61;
    Speed_1 := actual_Speed_1;
    BandwidthUnits_6 := actual_BandwidthUnits_6;
    ntStatus_56 := 0;
    Irp_60 := 0;
    Irb_23 := 0;
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_56 := -1073741811;
    goto L15;

  L15:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_60 != 0;
    call {:si_unique_call 1540} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irb_23 != 0;
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    call {:si_unique_call 1541} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_61), Irb_23);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_793 := ntStatus_56;
    goto LM2;

  LM2:
    return;

  anon22_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} Irb_23 == 0;
    goto L20;

  anon18_Then:
    assume {:partition} Irp_60 == 0;
    goto L16;

  anon17_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    havoc StackSize_17;
    call {:si_unique_call 1542} Irp_60 := IoAllocateIrp(StackSize_17, 0);
    call {:si_unique_call 1543} sdv_628 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_23 := sdv_628;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_60 != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irb_23 != 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} Irb_23 != 0;
    assume Irb_23 > 0;
    assume {:nonnull} BusExtension_61 != 0;
    assume BusExtension_61 > 0;
    havoc vslice_dummy_var_414;
    call {:si_unique_call 1544} ntStatus_56 := Av_SubmitIrpSynch#1(vslice_dummy_var_414, Irp_60, Irb_23);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L15;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} Irb_23 == 0;
    goto L33;

  L33:
    ntStatus_56 := -1073741670;
    goto L15;

  anon23_Then:
    assume {:partition} Irp_60 == 0;
    goto L33;

  anon21_Then:
    goto L11;
}



procedure {:origName "Av1394_FreeChannel"} Av1394_FreeChannel(actual_BusExtension_62: int, actual_Connect_15: int) returns (Tmp_796: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_FreeChannel"} Av1394_FreeChannel(actual_BusExtension_62: int, actual_Connect_15: int) returns (Tmp_796: int)
{
  var {:pointer} Irp_61: int;
  var {:pointer} Irb_24: int;
  var {:pointer} Tmp_797: int;
  var {:scalar} StackSize_18: int;
  var {:pointer} sdv_631: int;
  var {:scalar} ntStatus_57: int;
  var {:pointer} BusExtension_62: int;
  var {:pointer} Connect_15: int;
  var vslice_dummy_var_415: int;

  anon0:
    BusExtension_62 := actual_BusExtension_62;
    Connect_15 := actual_Connect_15;
    ntStatus_57 := 0;
    Irp_61 := 0;
    Irb_24 := 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    ntStatus_57 := -1073741811;
    goto L15;

  L15:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Irp_61 != 0;
    call {:si_unique_call 1545} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Irb_24 != 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    call {:si_unique_call 1546} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_62), Irb_24);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_796 := ntStatus_57;
    goto LM2;

  LM2:
    return;

  anon22_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} Irb_24 == 0;
    goto L20;

  anon18_Then:
    assume {:partition} Irp_61 == 0;
    goto L16;

  anon17_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    havoc Tmp_797;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    havoc StackSize_18;
    call {:si_unique_call 1547} Irp_61 := IoAllocateIrp(StackSize_18, 0);
    call {:si_unique_call 1548} sdv_631 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_24 := sdv_631;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_61 != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irb_24 != 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} Connect_15 != 0;
    assume Connect_15 > 0;
    assume {:nonnull} Irb_24 != 0;
    assume Irb_24 > 0;
    assume {:nonnull} BusExtension_62 != 0;
    assume BusExtension_62 > 0;
    havoc vslice_dummy_var_415;
    call {:si_unique_call 1549} ntStatus_57 := Av_SubmitIrpSynch#1(vslice_dummy_var_415, Irp_61, Irb_24);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L15;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} Irb_24 == 0;
    goto L33;

  L33:
    ntStatus_57 := -1073741670;
    goto L15;

  anon23_Then:
    assume {:partition} Irp_61 == 0;
    goto L33;

  anon21_Then:
    goto L11;
}



procedure {:origName "Av1394_AllocateChannel"} Av1394_AllocateChannel(actual_BusExtension_63: int, actual_Connect_16: int, actual_Channel_1: int) returns (Tmp_799: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_AllocateChannel"} Av1394_AllocateChannel(actual_BusExtension_63: int, actual_Connect_16: int, actual_Channel_1: int) returns (Tmp_799: int)
{
  var {:pointer} Irp_62: int;
  var {:pointer} Irb_25: int;
  var {:scalar} StackSize_19: int;
  var {:pointer} sdv_634: int;
  var {:scalar} ntStatus_58: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} BusExtension_63: int;
  var {:pointer} Connect_16: int;
  var {:scalar} Channel_1: int;
  var vslice_dummy_var_416: int;

  anon0:
    BusExtension_63 := actual_BusExtension_63;
    Connect_16 := actual_Connect_16;
    Channel_1 := actual_Channel_1;
    ntStatus_58 := 0;
    Irp_62 := 0;
    Irb_25 := 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_58 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_62 != 0;
    call {:si_unique_call 1550} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_25 != 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    call {:si_unique_call 1551} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_63), Irb_25);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_799 := ntStatus_58;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_25 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_62 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    havoc Tmp_801;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    havoc StackSize_19;
    call {:si_unique_call 1552} Irp_62 := IoAllocateIrp(StackSize_19, 0);
    call {:si_unique_call 1553} sdv_634 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_25 := sdv_634;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_62 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_25 != 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    assume {:nonnull} BusExtension_63 != 0;
    assume BusExtension_63 > 0;
    havoc vslice_dummy_var_416;
    call {:si_unique_call 1554} ntStatus_58 := Av_SubmitIrpSynch#1(vslice_dummy_var_416, Irp_62, Irb_25);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_58 >= 0;
    assume {:nonnull} Connect_16 != 0;
    assume Connect_16 > 0;
    assume {:nonnull} Irb_25 != 0;
    assume Irb_25 > 0;
    goto L15;

  anon23_Then:
    assume {:partition} 0 > ntStatus_58;
    goto L15;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Irb_25 == 0;
    goto L33;

  L33:
    ntStatus_58 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_62 == 0;
    goto L33;

  anon24_Then:
    goto L11;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_3: int) returns (Tmp_802: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_3: int) returns (Tmp_802: int)
{
  var {:pointer} Entry_2: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_3: int;

  anon0:
    ListHead_3 := actual_ListHead_3;
    call {:si_unique_call 1555} SLIC_RemoveHeadList_entry(strConst__li2bpl2);
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc Flink;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_802 := Entry_2;
    return;
}



procedure {:origName "Av1394_ReadTextualDescriptor"} Av1394_ReadTextualDescriptor(actual_BusExtension_64: int, actual_uniString: int, actual_Address_1: int) returns (Tmp_804: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_ReadTextualDescriptor"} Av1394_ReadTextualDescriptor(actual_BusExtension_64: int, actual_uniString: int, actual_Address_1: int) returns (Tmp_804: int)
{
  var {:scalar} i_4: int;
  var {:scalar} DataLength: int;
  var {:scalar} u_4: int;
  var {:scalar} Tmp_805: int;
  var {:pointer} pData: int;
  var {:scalar} n_1: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} sdv_640: int;
  var {:scalar} ntStatus_59: int;
  var {:scalar} Tmp_807: int;
  var {:scalar} sdv_642: int;
  var {:pointer} sdv_643: int;
  var {:scalar} Tmp_808: int;
  var {:dopa} {:scalar} ulQuadlet_1: int;
  var {:pointer} sdv_644: int;
  var {:scalar} Tmp_810: int;
  var {:scalar} Tmp_812: int;
  var {:scalar} Tmp_814: int;
  var {:scalar} Tmp_815: int;
  var {:scalar} Tmp_816: int;
  var {:scalar} Tmp_817: int;
  var {:scalar} Tmp_818: int;
  var {:pointer} BusExtension_64: int;
  var {:pointer} uniString: int;
  var {:scalar} Address_1: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;

  anon0:
    call {:si_unique_call 1556} u_4 := __HAVOC_malloc(20);
    call {:si_unique_call 1557} vslice_dummy_var_225 := __HAVOC_malloc(12);
    call {:si_unique_call 1558} ulQuadlet_1 := __HAVOC_malloc(4);
    BusExtension_64 := actual_BusExtension_64;
    uniString := actual_uniString;
    Address_1 := actual_Address_1;
    ntStatus_59 := 0;
    pData := 0;
    call {:si_unique_call 1559} ntStatus_59 := Av1394_QuadletRead(BusExtension_64, ulQuadlet_1, Address_1);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} ntStatus_59 < 0;
    goto L28;

  L28:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 1560} sdv_ExFreePool(0);
    goto L29;

  L29:
    Tmp_804 := ntStatus_59;
    goto LM2;

  LM2:
    return;

  anon38_Then:
    assume {:partition} pData == 0;
    goto L29;

  anon37_Then:
    assume {:partition} 0 <= ntStatus_59;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    havoc DataLength;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} DataLength * 4 + 2 > DataLength;
    ntStatus_59 := -1073741670;
    goto L28;

  anon46_Then:
    assume {:partition} DataLength >= DataLength * 4 + 2;
    Address_1 := Address_1 + 4;
    call {:si_unique_call 1561} ntStatus_59 := Av1394_QuadletRead(BusExtension_64, ulQuadlet_1, Address_1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} ntStatus_59 >= 0;
    ulUnicode := sdv_642;
    Tmp_805 := DataLength * 4 + 2;
    call {:si_unique_call 1562} sdv_643 := ExAllocatePoolWithTag(0, Tmp_805, 943206710);
    pData := sdv_643;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} pData != 0;
    Tmp_810 := DataLength * 4 + 2;
    call {:si_unique_call 1563} sdv_RtlZeroMemory(0, Tmp_810);
    Address_1 := Address_1 + 8;
    i_4 := 0;
    goto L56;

  L56:
    call {:si_unique_call 1564} i_4, n_1, ntStatus_59, Tmp_807, Tmp_812, Tmp_815, Tmp_816, Tmp_817, Tmp_818 := Av1394_ReadTextualDescriptor_loop_L56(i_4, DataLength, u_4, pData, n_1, ulUnicode, ntStatus_59, Tmp_807, Tmp_812, Tmp_815, Tmp_816, Tmp_817, Tmp_818, BusExtension_64, Address_1);
    goto L56_last;

  L56_last:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} DataLength <= i_4;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_808;
    call {:si_unique_call 1565} sdv_644 := ExAllocatePoolWithTag(0, Tmp_808, 943206710);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_814;
    call {:si_unique_call 1566} sdv_RtlZeroMemory(0, Tmp_814);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 1567} vslice_dummy_var_227 := corral_nondet();
    goto L28;

  anon44_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 1568} RtlInitAnsiString(0, 0);
    call {:si_unique_call 1569} vslice_dummy_var_226 := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L28;

  anon54_Then:
    ntStatus_59 := -1073741670;
    goto L28;

  anon40_Then:
    assume {:partition} i_4 < DataLength;
    Tmp_815 := Address_1 + 4 * i_4;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    call {:si_unique_call 1570} ntStatus_59 := Av1394_QuadletRead(BusExtension_64, asUlong_unnamed_tag_66(u_4), Tmp_815);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ntStatus_59 >= 0;
    n_1 := 0;
    goto L66;

  L66:
    call {:si_unique_call 1571} n_1, Tmp_807, Tmp_812, Tmp_816, Tmp_817, Tmp_818 := Av1394_ReadTextualDescriptor_loop_L66(u_4, n_1, ulUnicode, Tmp_807, Tmp_812, Tmp_816, Tmp_817, Tmp_818);
    goto L66_last;

  L66_last:
    assume {:CounterLoop 4} {:Counter "n_1"} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} 4 > n_1;
    Tmp_807 := n_1;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    Tmp_818 := n_1;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L72;

  L72:
    Tmp_816 := n_1;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto L73;

  L73:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    n_1 := n_1 + 1;
    goto L74;

  L74:
    n_1 := n_1 + 1;
    goto L74_dummy;

  L74_dummy:
    assume false;
    return;

  anon43_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L74;

  anon51_Then:
    Tmp_812 := n_1;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_817 := n_1;
    assume {:nonnull} u_4 != 0;
    assume u_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L73;

  anon53_Then:
    goto L72;

  anon52_Then:
    goto L72;

  anon50_Then:
    goto L67;

  L67:
    call {:si_unique_call 1572} sdv_RtlCopyMemory(0, 0, 4);
    i_4 := i_4 + 1;
    goto L67_dummy;

  L67_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} n_1 >= 4;
    goto L67;

  anon41_Then:
    assume {:partition} 0 > ntStatus_59;
    goto L28;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    assume {:partition} pData == 0;
    ntStatus_59 := -1073741670;
    goto L28;

  anon39_Then:
    assume {:partition} 0 > ntStatus_59;
    goto L28;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Av1394_AllocateBandwidth"} Av1394_AllocateBandwidth(actual_BusExtension_66: int, actual_Connect_17: int, actual_Speed_2: int, actual_BandwidthUnits_7: int) returns (Tmp_822: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_AllocateBandwidth"} Av1394_AllocateBandwidth(actual_BusExtension_66: int, actual_Connect_17: int, actual_Speed_2: int, actual_BandwidthUnits_7: int) returns (Tmp_822: int)
{
  var {:pointer} Irp_64: int;
  var {:pointer} Irb_27: int;
  var {:scalar} StackSize_21: int;
  var {:pointer} sdv_649: int;
  var {:scalar} ntStatus_61: int;
  var {:pointer} Tmp_824: int;
  var {:pointer} BusExtension_66: int;
  var {:pointer} Connect_17: int;
  var {:scalar} Speed_2: int;
  var {:scalar} BandwidthUnits_7: int;
  var vslice_dummy_var_417: int;

  anon0:
    BusExtension_66 := actual_BusExtension_66;
    Connect_17 := actual_Connect_17;
    Speed_2 := actual_Speed_2;
    BandwidthUnits_7 := actual_BandwidthUnits_7;
    ntStatus_61 := 0;
    Irp_64 := 0;
    Irb_27 := 0;
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_61 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_64 != 0;
    call {:si_unique_call 1573} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_27 != 0;
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    call {:si_unique_call 1574} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_66), Irb_27);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_822 := ntStatus_61;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_27 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_64 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    havoc Tmp_824;
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    havoc StackSize_21;
    call {:si_unique_call 1575} Irp_64 := IoAllocateIrp(StackSize_21, 0);
    call {:si_unique_call 1576} sdv_649 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_27 := sdv_649;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_64 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_27 != 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    assume {:nonnull} BusExtension_66 != 0;
    assume BusExtension_66 > 0;
    havoc vslice_dummy_var_417;
    call {:si_unique_call 1577} ntStatus_61 := Av_SubmitIrpSynch#1(vslice_dummy_var_417, Irp_64, Irb_27);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_61 >= 0;
    assume {:nonnull} Connect_17 != 0;
    assume Connect_17 > 0;
    assume {:nonnull} Irb_27 != 0;
    assume Irb_27 > 0;
    goto L15;

  anon23_Then:
    assume {:partition} 0 > ntStatus_61;
    goto L15;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Irb_27 == 0;
    goto L33;

  L33:
    ntStatus_61 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_64 == 0;
    goto L33;

  anon24_Then:
    goto L11;
}



procedure {:origName "Av1394_SetUnitDirectory"} Av1394_SetUnitDirectory(actual_PdoExtension_16: int, actual_Irp_65: int, actual_Request_23: int) returns (Tmp_825: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_SetUnitDirectory"} Av1394_SetUnitDirectory(actual_PdoExtension_16: int, actual_Irp_65: int, actual_Request_23: int) returns (Tmp_825: int)
{
  var {:pointer} CurrPdoCrom: int;
  var {:pointer} Tmp_826: int;
  var {:pointer} PdoCromData_1: int;
  var {:scalar} sdv_651: int;
  var {:pointer} CurrCrom_1: int;
  var {:pointer} Tmp_827: int;
  var {:pointer} CromData_2: int;
  var {:scalar} sdv_655: int;
  var {:scalar} ntStatus_62: int;
  var {:pointer} sdv_656: int;
  var {:pointer} sdv_657: int;
  var {:pointer} PdoCromData_2: int;
  var {:scalar} Irql_30: int;
  var {:pointer} CromData_3: int;
  var {:pointer} BusExtension_67: int;
  var {:pointer} AvAdapterData_21: int;
  var {:pointer} SetUnitDir: int;
  var {:pointer} PdoExtension_16: int;
  var {:pointer} Request_23: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;

  anon0:
    PdoExtension_16 := actual_PdoExtension_16;
    Request_23 := actual_Request_23;
    ntStatus_62 := 0;
    assume {:nonnull} Request_23 != 0;
    assume Request_23 > 0;
    SetUnitDir := SetUnitDirectory__AV_61883_REQUEST(Request_23);
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc Tmp_826;
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc BusExtension_67;
    assume {:nonnull} BusExtension_67 != 0;
    assume BusExtension_67 > 0;
    havoc AvAdapterData_21;
    call {:si_unique_call 1578} Tmp_827 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    call {:si_unique_call 1579} sdv_KeAcquireSpinLock(0, Tmp_827);
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    havoc Irql_30;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    CurrCrom_1 := 0;
    CromData_2 := 0;
    CurrPdoCrom := 0;
    call {:si_unique_call 1580} sdv_651 := sdv_IsListEmpty(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_651 != 0;
    goto L28;

  L28:
    call {:si_unique_call 1581} sdv_655 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_655 != 0;
    goto L33;

  L33:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} CromData_2 != 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    goto L39;

  L39:
    call {:si_unique_call 1582} sdv_657 := ExAllocatePoolWithTag(0, 20, 943206710);
    PdoCromData_2 := sdv_657;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} PdoCromData_2 != 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} PdoCromData_2 != 0;
    assume PdoCromData_2 > 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 1583} vslice_dummy_var_234 := sdv_InsertTailList(PdoCromList__PDO_DEVICE_EXTENSION(PdoExtension_16), Entry__PDO_CROM_DATA(PdoCromData_2));
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto L52;

  L52:
    call {:si_unique_call 1584} sdv_KeReleaseSpinLock(0, Irql_30);
    Tmp_825 := ntStatus_62;
    goto LM2;

  LM2:
    return;

  anon65_Then:
    assume {:partition} PdoCromData_2 == 0;
    ntStatus_62 := -1073741670;
    goto L52;

  anon55_Then:
    assume {:partition} CromData_2 == 0;
    call {:si_unique_call 1585} sdv_656 := ExAllocatePoolWithTag(0, 44, 943206710);
    CromData_2 := sdv_656;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} CromData_2 != 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    call {:si_unique_call 1586} ntStatus_62 := Av1394_AddConfigRomEntry(CromData_2);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} ntStatus_62 >= 0;
    assume {:nonnull} AvAdapterData_21 != 0;
    assume AvAdapterData_21 > 0;
    assume {:nonnull} CromData_2 != 0;
    assume CromData_2 > 0;
    call {:si_unique_call 1587} vslice_dummy_var_228 := sdv_InsertTailList(CromList__AV_ADAPTER_DATA(AvAdapterData_21), Entry__CROM_DATA(CromData_2));
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 1588} vslice_dummy_var_229 := Av1394_BusReset(BusExtension_67, 0, 0);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L39;

  anon56_Then:
    assume {:partition} 0 > ntStatus_62;
    call {:si_unique_call 1589} sdv_ExFreePool(0);
    goto L52;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    assume {:partition} CromData_2 == 0;
    ntStatus_62 := -1073741670;
    goto L52;

  anon53_Then:
    assume {:partition} sdv_655 == 0;
    goto L32;

  L32:
    call {:si_unique_call 1590} CurrCrom_1 := Av1394_SetUnitDirectory_loop_L32(CurrCrom_1, AvAdapterData_21, SetUnitDir);
    goto L32_last;

  L32_last:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} CurrCrom_1 != 0;
    assume {:nonnull} CurrCrom_1 != 0;
    assume CurrCrom_1 > 0;
    havoc CurrCrom_1;
    goto L83;

  L83:
    assume {:nonnull} CurrCrom_1 != 0;
    assume CurrCrom_1 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} CurrCrom_1 != 0;
    assume CurrCrom_1 > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    CromData_2 := CurrCrom_1;
    goto L33;

  anon60_Then:
    goto L84;

  L84:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L33;

  anon59_Then:
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    assume false;
    return;

  anon58_Then:
    goto L84;

  anon54_Then:
    assume {:partition} CurrCrom_1 == 0;
    assume {:nonnull} AvAdapterData_21 != 0;
    assume AvAdapterData_21 > 0;
    havoc CurrCrom_1;
    goto L83;

  anon51_Then:
    assume {:partition} sdv_651 == 0;
    goto L27;

  L27:
    call {:si_unique_call 1591} CurrPdoCrom := Av1394_SetUnitDirectory_loop_L27(CurrPdoCrom, SetUnitDir, PdoExtension_16);
    goto L27_last;

  L27_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} CurrPdoCrom != 0;
    assume {:nonnull} CurrPdoCrom != 0;
    assume CurrPdoCrom > 0;
    havoc CurrPdoCrom;
    goto L90;

  L90:
    assume {:nonnull} CurrPdoCrom != 0;
    assume CurrPdoCrom > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} CurrPdoCrom != 0;
    assume CurrPdoCrom > 0;
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    ntStatus_62 := -1073741811;
    goto L52;

  anon63_Then:
    goto L91;

  L91:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L28;

  anon62_Then:
    goto anon62_Then_dummy;

  anon62_Then_dummy:
    assume false;
    return;

  anon61_Then:
    goto L91;

  anon52_Then:
    assume {:partition} CurrPdoCrom == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc CurrPdoCrom;
    goto L90;

  anon49_Then:
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    havoc PdoCromData_1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} PdoCromData_1 != 0;
    call {:si_unique_call 1592} vslice_dummy_var_230 := sdv_RemoveEntryList(0);
    assume {:nonnull} PdoCromData_1 != 0;
    assume PdoCromData_1 > 0;
    havoc CromData_3;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    assume {:nonnull} CromData_3 != 0;
    assume CromData_3 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto L110;

  L110:
    call {:si_unique_call 1593} sdv_ExFreePool(0);
    goto L52;

  anon70_Then:
    call {:si_unique_call 1594} vslice_dummy_var_231 := Av1394_RemoveConfigRomEntry(CromData_3);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1595} vslice_dummy_var_232 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1596} sdv_ExFreePool(0);
    assume {:nonnull} SetUnitDir != 0;
    assume SetUnitDir > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 1597} vslice_dummy_var_233 := Av1394_BusReset(BusExtension_67, 0, 0);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L110;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L110;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:partition} PdoCromData_1 == 0;
    ntStatus_62 := -1073741811;
    goto L52;

  anon50_Then:
    ntStatus_62 := -1073741811;
    goto L52;
}



procedure {:origName "Av1394_BusReset"} Av1394_BusReset(actual_BusExtension_68: int, actual_UnusedIrp: int, actual_Request_24: int) returns (Tmp_828: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_BusReset"} Av1394_BusReset(actual_BusExtension_68: int, actual_UnusedIrp: int, actual_Request_24: int) returns (Tmp_828: int)
{
  var {:pointer} Irp_66: int;
  var {:pointer} Irb_28: int;
  var {:scalar} StackSize_22: int;
  var {:pointer} sdv_662: int;
  var {:scalar} ntStatus_63: int;
  var {:pointer} Tmp_830: int;
  var {:pointer} BusExtension_68: int;
  var {:pointer} Request_24: int;
  var vslice_dummy_var_418: int;

  anon0:
    BusExtension_68 := actual_BusExtension_68;
    Request_24 := actual_Request_24;
    ntStatus_63 := 0;
    Irp_66 := 0;
    Irb_28 := 0;
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_63 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_66 != 0;
    call {:si_unique_call 1598} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_28 != 0;
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    call {:si_unique_call 1599} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_68), Irb_28);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_828 := ntStatus_63;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_28 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_66 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    havoc Tmp_830;
    assume {:nonnull} Tmp_830 != 0;
    assume Tmp_830 > 0;
    havoc StackSize_22;
    call {:si_unique_call 1600} Irp_66 := IoAllocateIrp(StackSize_22, 0);
    call {:si_unique_call 1601} sdv_662 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_28 := sdv_662;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irp_66 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_28 != 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Request_24 != 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    assume {:nonnull} Request_24 != 0;
    assume Request_24 > 0;
    goto L40;

  L40:
    assume {:nonnull} BusExtension_68 != 0;
    assume BusExtension_68 > 0;
    havoc vslice_dummy_var_418;
    call {:si_unique_call 1602} ntStatus_63 := Av_SubmitIrpSynch#1(vslice_dummy_var_418, Irp_66, Irb_28);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L15;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} Request_24 == 0;
    assume {:nonnull} Irb_28 != 0;
    assume Irb_28 > 0;
    goto L40;

  anon22_Then:
    assume {:partition} Irb_28 == 0;
    goto L33;

  L33:
    ntStatus_63 := -1073741670;
    goto L15;

  anon25_Then:
    assume {:partition} Irp_66 == 0;
    goto L33;

  anon23_Then:
    goto L11;
}



procedure {:origName "Av1394_BusResetNotify"} Av1394_BusResetNotify(actual_PdoExtension_17: int, actual_Irp_67: int, actual_Request_25: int) returns (Tmp_831: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_831 == 0 || Tmp_831 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_BusResetNotify"} Av1394_BusResetNotify(actual_PdoExtension_17: int, actual_Irp_67: int, actual_Request_25: int) returns (Tmp_831: int)
{
  var {:scalar} ntStatus_64: int;
  var {:pointer} ResetNotify: int;
  var {:scalar} Irql_31: int;
  var {:pointer} Tmp_832: int;
  var {:pointer} PdoExtension_17: int;
  var {:pointer} Request_25: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    Request_25 := actual_Request_25;
    ntStatus_64 := 0;
    assume {:nonnull} Request_25 != 0;
    assume Request_25 > 0;
    ResetNotify := GetPlugHandle__AV_61883_REQUEST(Request_25);
    call {:si_unique_call 1603} Tmp_832 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_832 != 0;
    assume Tmp_832 > 0;
    call {:si_unique_call 1604} sdv_KeAcquireSpinLock(0, Tmp_832);
    assume {:nonnull} Tmp_832 != 0;
    assume Tmp_832 > 0;
    havoc Irql_31;
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto L17;

  L17:
    call {:si_unique_call 1605} sdv_KeReleaseSpinLock(0, Irql_31);
    Tmp_831 := ntStatus_64;
    return;

  anon6_Then:
    ntStatus_64 := -1073741811;
    goto L17;

  anon5_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    assume {:nonnull} ResetNotify != 0;
    assume ResetNotify > 0;
    goto L17;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_235: int;

  anon0:
    call {:si_unique_call 1606} vslice_dummy_var_235 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Av1394_SetBusResetNotify"} Av1394_SetBusResetNotify(actual_BusExtension_71: int, actual_bEnable: int) returns (Tmp_859: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_SetBusResetNotify"} Av1394_SetBusResetNotify(actual_BusExtension_71: int, actual_bEnable: int) returns (Tmp_859: int)
{
  var {:pointer} Irp_69: int;
  var {:pointer} Irb_30: int;
  var {:scalar} StackSize_24: int;
  var {:pointer} sdv_675: int;
  var {:scalar} ntStatus_67: int;
  var {:pointer} Tmp_861: int;
  var {:pointer} BusExtension_71: int;
  var {:scalar} bEnable: int;
  var vslice_dummy_var_419: int;

  anon0:
    BusExtension_71 := actual_BusExtension_71;
    bEnable := actual_bEnable;
    ntStatus_67 := 0;
    Irp_69 := 0;
    Irb_30 := 0;
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_67 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_69 != 0;
    call {:si_unique_call 1607} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_30 != 0;
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    call {:si_unique_call 1608} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_71), Irb_30);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_859 := ntStatus_67;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_30 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_69 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    havoc Tmp_861;
    assume {:nonnull} Tmp_861 != 0;
    assume Tmp_861 > 0;
    havoc StackSize_24;
    call {:si_unique_call 1609} Irp_69 := IoAllocateIrp(StackSize_24, 0);
    call {:si_unique_call 1610} sdv_675 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_30 := sdv_675;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irp_69 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_30 != 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} bEnable != 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    goto L40;

  L40:
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    assume {:nonnull} BusExtension_71 != 0;
    assume BusExtension_71 > 0;
    havoc vslice_dummy_var_419;
    call {:si_unique_call 1611} ntStatus_67 := Av_SubmitIrpSynch#1(vslice_dummy_var_419, Irp_69, Irb_30);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L15;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} bEnable == 0;
    assume {:nonnull} Irb_30 != 0;
    assume Irb_30 > 0;
    goto L40;

  anon22_Then:
    assume {:partition} Irb_30 == 0;
    goto L33;

  L33:
    ntStatus_67 := -1073741670;
    goto L15;

  anon25_Then:
    assume {:partition} Irp_69 == 0;
    goto L33;

  anon23_Then:
    goto L11;
}



procedure {:origName "Av1394_ReadPCR"} Av1394_ReadPCR(actual_BusExtension_72: int, actual_GenerationCount: int, actual_Type_7: int, actual_Index_2: int, actual_Pcr_11: int) returns (Tmp_862: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_ReadPCR"} Av1394_ReadPCR(actual_BusExtension_72: int, actual_GenerationCount: int, actual_Type_7: int, actual_Index_2: int, actual_Pcr_11: int) returns (Tmp_862: int)
{
  var {:scalar} Retries_2: int;
  var {:pointer} Irp_70: int;
  var {:pointer} Irb_31: int;
  var {:pointer} Mdl_3: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} pData_1: int;
  var {:scalar} StackSize_25: int;
  var {:pointer} sdv_678: int;
  var {:scalar} ntStatus_68: int;
  var {:scalar} Tmp_864: int;
  var {:scalar} sdv_680: int;
  var {:pointer} BusExtension_72: int;
  var {:scalar} GenerationCount: int;
  var {:scalar} Type_7: int;
  var {:scalar} Index_2: int;
  var {:pointer} Pcr_11: int;
  var vslice_dummy_var_420: int;

  anon0:
    BusExtension_72 := actual_BusExtension_72;
    GenerationCount := actual_GenerationCount;
    Type_7 := actual_Type_7;
    Index_2 := actual_Index_2;
    Pcr_11 := actual_Pcr_11;
    ntStatus_68 := 0;
    Retries_2 := 4;
    pData_1 := Pcr_11;
    assume {:nonnull} BusExtension_72 != 0;
    assume BusExtension_72 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} BusExtension_72 != 0;
    assume BusExtension_72 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    ntStatus_68 := -1073741811;
    goto L18;

  L18:
    Tmp_862 := ntStatus_68;
    goto LM2;

  LM2:
    return;

  anon30_Then:
    goto L14;

  L14:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Index_2 > 30;
    ntStatus_68 := -1073741811;
    goto L18;

  anon29_Then:
    assume {:partition} 30 >= Index_2;
    assume {:nonnull} BusExtension_72 != 0;
    assume BusExtension_72 > 0;
    havoc Tmp_863;
    assume {:nonnull} Tmp_863 != 0;
    assume Tmp_863 > 0;
    havoc StackSize_25;
    goto L22;

  L22:
    call {:si_unique_call 1612} Retries_2, Irp_70, Irb_31, Mdl_3, sdv_678, ntStatus_68, Tmp_864 := Av1394_ReadPCR_loop_L22(Retries_2, Irp_70, Irb_31, Mdl_3, StackSize_25, sdv_678, ntStatus_68, Tmp_864, BusExtension_72, GenerationCount, Type_7, Index_2);
    goto L22_last;

  L22_last:
    call {:si_unique_call 1618} Irp_70 := IoAllocateIrp(StackSize_25, 0);
    call {:si_unique_call 1619} sdv_678 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_31 := sdv_678;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Irp_70 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Irb_31 != 0;
    call {:si_unique_call 1613} Mdl_3 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mdl_3 != 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Type_7 != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Type_7 == 1;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    goto L57;

  L57:
    assume {:nonnull} BusExtension_72 != 0;
    assume BusExtension_72 > 0;
    havoc vslice_dummy_var_420;
    call {:si_unique_call 1614} ntStatus_68 := Av_SubmitIrpSynch#1(vslice_dummy_var_420, Irp_70, Irb_31);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1615} IoFreeIrp(0);
    assume {:nonnull} BusExtension_72 != 0;
    assume BusExtension_72 > 0;
    call {:si_unique_call 1616} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_72), Irb_31);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mdl_3 != 0;
    call {:si_unique_call 1617} IoFreeMdl(0);
    goto L69;

  L69:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} ntStatus_68 != -1072562032;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} ntStatus_68 >= 0;
    assume {:nonnull} pData_1 != 0;
    assume pData_1 > 0;
    goto L18;

  anon36_Then:
    assume {:partition} 0 > ntStatus_68;
    Tmp_864 := Retries_2;
    Retries_2 := Retries_2 - 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Tmp_864 != 0;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} Tmp_864 == 0;
    goto L18;

  anon35_Then:
    assume {:partition} ntStatus_68 == -1072562032;
    goto L18;

  anon34_Then:
    assume {:partition} Mdl_3 == 0;
    goto L69;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} Type_7 != 1;
    goto L57;

  anon39_Then:
    assume {:partition} Type_7 == 0;
    assume {:nonnull} Irb_31 != 0;
    assume Irb_31 > 0;
    goto L57;

  anon32_Then:
    assume {:partition} Mdl_3 == 0;
    ntStatus_68 := -1073741670;
    goto L18;

  anon31_Then:
    assume {:partition} Irb_31 == 0;
    goto L31;

  L31:
    ntStatus_68 := -1073741670;
    goto L18;

  anon38_Then:
    assume {:partition} Irp_70 == 0;
    goto L31;

  anon37_Then:
    goto L14;
}



procedure {:origName "Av1394_AddConfigRomEntry"} Av1394_AddConfigRomEntry(actual_CromData_4: int) returns (Tmp_866: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_AddConfigRomEntry"} Av1394_AddConfigRomEntry(actual_CromData_4: int) returns (Tmp_866: int)
{
  var {:scalar} i_6: int;
  var {:pointer} Irp_71: int;
  var {:pointer} Irb_32: int;
  var {:scalar} StackSize_26: int;
  var {:pointer} Tmp_867: int;
  var {:pointer} sdv_684: int;
  var {:scalar} ntStatus_69: int;
  var {:pointer} sdv_685: int;
  var {:scalar} sdv_686: int;
  var {:pointer} CromEntry: int;
  var {:pointer} BusExtension_73: int;
  var {:pointer} AvAdapterData_22: int;
  var {:pointer} Tmp_870: int;
  var {:pointer} SetLocalHostProps3_1: int;
  var {:pointer} CromData_4: int;
  var boogieTmp: int;
  var vslice_dummy_var_421: int;

  anon0:
    CromData_4 := actual_CromData_4;
    ntStatus_69 := 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    havoc AvAdapterData_22;
    assume {:nonnull} AvAdapterData_22 != 0;
    assume AvAdapterData_22 > 0;
    havoc BusExtension_73;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    CromEntry := CromEntry__CROM_DATA(CromData_4);
    Irp_71 := 0;
    Irb_32 := 0;
    SetLocalHostProps3_1 := 0;
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    havoc Tmp_867;
    assume {:nonnull} Tmp_867 != 0;
    assume Tmp_867 > 0;
    havoc StackSize_26;
    call {:si_unique_call 1620} Irp_71 := IoAllocateIrp(StackSize_26, 0);
    call {:si_unique_call 1621} sdv_684 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_32 := sdv_684;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irp_71 != 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Irb_32 != 0;
    call {:si_unique_call 1622} sdv_685 := ExAllocatePoolWithTag(0, 16, 943206710);
    SetLocalHostProps3_1 := sdv_685;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} SetLocalHostProps3_1 != 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    call {:si_unique_call 1623} boogieTmp := IoAllocateMdl(0, 12, 0, 0, 0);
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1624} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    assume {:nonnull} CromEntry != 0;
    assume CromEntry > 0;
    i_6 := 0;
    goto L55;

  L55:
    call {:si_unique_call 1625} i_6, Tmp_870 := Av1394_AddConfigRomEntry_loop_L55(i_6, sdv_686, CromEntry, Tmp_870);
    goto L55_last;

  L55_last:
    assume {:CounterLoop 3} {:Counter "i_6"} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 3 > i_6;
    Tmp_870 := CromEntry;
    assume {:nonnull} Tmp_870 != 0;
    assume Tmp_870 > 0;
    i_6 := i_6 + 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} i_6 >= 3;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} Irb_32 != 0;
    assume Irb_32 > 0;
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    havoc vslice_dummy_var_421;
    call {:si_unique_call 1626} ntStatus_69 := Av_SubmitIrpSynch#1(vslice_dummy_var_421, Irp_71, Irb_32);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_69 >= 0;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    assume {:nonnull} SetLocalHostProps3_1 != 0;
    assume SetLocalHostProps3_1 > 0;
    goto L76;

  L76:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} SetLocalHostProps3_1 != 0;
    call {:si_unique_call 1627} sdv_ExFreePool(0);
    goto L77;

  L77:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Irp_71 != 0;
    call {:si_unique_call 1628} IoFreeIrp(0);
    goto L81;

  L81:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Irb_32 != 0;
    assume {:nonnull} BusExtension_73 != 0;
    assume BusExtension_73 > 0;
    call {:si_unique_call 1629} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_73), Irb_32);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L85;

  L85:
    Tmp_866 := ntStatus_69;
    goto LM2;

  LM2:
    return;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} Irb_32 == 0;
    goto L85;

  anon31_Then:
    assume {:partition} Irp_71 == 0;
    goto L81;

  anon30_Then:
    assume {:partition} SetLocalHostProps3_1 == 0;
    goto L77;

  anon28_Then:
    assume {:partition} 0 > ntStatus_69;
    assume {:nonnull} CromData_4 != 0;
    assume CromData_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1630} sdv_ExFreePool(0);
    goto L76;

  anon29_Then:
    goto L76;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    ntStatus_69 := -1073741670;
    goto L76;

  anon34_Then:
    assume {:partition} SetLocalHostProps3_1 == 0;
    ntStatus_69 := -1073741670;
    goto L76;

  anon25_Then:
    assume {:partition} Irb_32 == 0;
    goto L29;

  L29:
    ntStatus_69 := -1073741670;
    goto L76;

  anon33_Then:
    assume {:partition} Irp_71 == 0;
    goto L29;
}



procedure {:origName "Av1394_QuadletRead"} Av1394_QuadletRead(actual_BusExtension_74: int, actual_pData_2: int, actual_Address_2: int) returns (Tmp_871: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_QuadletRead"} Av1394_QuadletRead(actual_BusExtension_74: int, actual_pData_2: int, actual_Address_2: int) returns (Tmp_871: int)
{
  var {:scalar} Retries_3: int;
  var {:pointer} Irp_72: int;
  var {:pointer} Mdl_4: int;
  var {:pointer} Irb_33: int;
  var {:scalar} Tmp_872: int;
  var {:scalar} StackSize_27: int;
  var {:pointer} sdv_689: int;
  var {:scalar} ntStatus_70: int;
  var {:pointer} Tmp_874: int;
  var {:pointer} BusExtension_74: int;
  var {:scalar} Address_2: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_422: int;

  anon0:
    BusExtension_74 := actual_BusExtension_74;
    Address_2 := actual_Address_2;
    ntStatus_70 := 0;
    Retries_3 := 4;
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    ntStatus_70 := -1073741811;
    goto L16;

  L16:
    Tmp_871 := ntStatus_70;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    goto L12;

  L12:
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    havoc Tmp_874;
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc StackSize_27;
    goto L17;

  L17:
    call {:si_unique_call 1631} Retries_3, Irp_72, Mdl_4, Irb_33, Tmp_872, sdv_689, ntStatus_70, vslice_dummy_var_236 := Av1394_QuadletRead_loop_L17(Retries_3, Irp_72, Mdl_4, Irb_33, Tmp_872, StackSize_27, sdv_689, ntStatus_70, BusExtension_74, Address_2, vslice_dummy_var_236);
    goto L17_last;

  L17_last:
    call {:si_unique_call 1638} Irp_72 := IoAllocateIrp(StackSize_27, 0);
    call {:si_unique_call 1639} sdv_689 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_33 := sdv_689;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Irp_72 != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Irb_33 != 0;
    call {:si_unique_call 1632} Mdl_4 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mdl_4 != 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} Irb_33 != 0;
    assume Irb_33 > 0;
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    havoc vslice_dummy_var_422;
    call {:si_unique_call 1633} ntStatus_70 := Av_SubmitIrpSynch#1(vslice_dummy_var_422, Irp_72, Irb_33);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1634} IoFreeIrp(0);
    assume {:nonnull} BusExtension_74 != 0;
    assume BusExtension_74 > 0;
    call {:si_unique_call 1635} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_74), Irb_33);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mdl_4 != 0;
    call {:si_unique_call 1636} IoFreeMdl(0);
    goto L61;

  L61:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} ntStatus_70 == -1072562032;
    call {:si_unique_call 1637} vslice_dummy_var_236 := Av1394_GetGenerationCount#1(BusExtension_74);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L69;

  L69:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} ntStatus_70 != -1072562032;
    Tmp_872 := Retries_3;
    Retries_3 := Retries_3 - 1;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Tmp_872 != 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} Tmp_872 == 0;
    goto L16;

  anon33_Then:
    assume {:partition} ntStatus_70 == -1072562032;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} ntStatus_70 != -1072562032;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_70 < 0;
    goto L69;

  anon32_Then:
    assume {:partition} 0 <= ntStatus_70;
    goto L16;

  anon30_Then:
    assume {:partition} Mdl_4 == 0;
    goto L61;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:partition} Mdl_4 == 0;
    ntStatus_70 := -1073741670;
    goto L16;

  anon28_Then:
    assume {:partition} Irb_33 == 0;
    goto L26;

  L26:
    ntStatus_70 := -1073741670;
    goto L16;

  anon35_Then:
    assume {:partition} Irp_72 == 0;
    goto L26;

  anon34_Then:
    goto L12;
}



procedure {:origName "Av1394_LockedSwap"} Av1394_LockedSwap(actual_BusExtension_76: int, actual_Argument: int, actual_Data: int, actual_pOldValue: int, actual_Address_3: int, actual_bGeneration_1: int, actual_Generation_3: int) returns (Tmp_878: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_LockedSwap"} Av1394_LockedSwap(actual_BusExtension_76: int, actual_Argument: int, actual_Data: int, actual_pOldValue: int, actual_Address_3: int, actual_bGeneration_1: int, actual_Generation_3: int) returns (Tmp_878: int)
{
  var {:scalar} Retries_4: int;
  var {:pointer} Irp_74: int;
  var {:pointer} Irb_35: int;
  var {:pointer} Tmp_879: int;
  var {:pointer} Tmp_881: int;
  var {:scalar} StackSize_29: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} sdv_697: int;
  var {:scalar} ntStatus_72: int;
  var {:scalar} Tmp_883: int;
  var {:pointer} BusExtension_76: int;
  var {:scalar} Argument: int;
  var {:scalar} Data: int;
  var {:pointer} pOldValue: int;
  var {:scalar} Address_3: int;
  var {:scalar} bGeneration_1: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_423: int;

  anon0:
    BusExtension_76 := actual_BusExtension_76;
    Argument := actual_Argument;
    Data := actual_Data;
    pOldValue := actual_pOldValue;
    Address_3 := actual_Address_3;
    bGeneration_1 := actual_bGeneration_1;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 1640} Tmp_881 := __HAVOC_malloc(8);
    call {:si_unique_call 1641} Tmp_882 := __HAVOC_malloc(8);
    ntStatus_72 := 0;
    Retries_4 := 4;
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    ntStatus_72 := -1073741811;
    goto L15;

  L15:
    Tmp_878 := ntStatus_72;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    havoc Tmp_879;
    assume {:nonnull} Tmp_879 != 0;
    assume Tmp_879 > 0;
    havoc StackSize_29;
    goto L16;

  L16:
    call {:si_unique_call 1642} Retries_4, Irp_74, Irb_35, Tmp_881, Tmp_882, sdv_697, ntStatus_72, Tmp_883, vslice_dummy_var_237 := Av1394_LockedSwap_loop_L16(Retries_4, Irp_74, Irb_35, Tmp_881, StackSize_29, Tmp_882, sdv_697, ntStatus_72, Tmp_883, BusExtension_76, Argument, Data, pOldValue, Address_3, bGeneration_1, Generation_3, vslice_dummy_var_237);
    goto L16_last;

  L16_last:
    call {:si_unique_call 1647} Irp_74 := IoAllocateIrp(StackSize_29, 0);
    call {:si_unique_call 1648} sdv_697 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_35 := sdv_697;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp_74 != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Irb_35 != 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    havoc Tmp_882;
    assume {:nonnull} Tmp_882 != 0;
    assume Tmp_882 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    havoc Tmp_881;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} bGeneration_1 != 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    goto L45;

  L45:
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    havoc vslice_dummy_var_423;
    call {:si_unique_call 1643} ntStatus_72 := Av_SubmitIrpSynch#1(vslice_dummy_var_423, Irp_74, Irb_35);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1644} IoFreeIrp(0);
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    call {:si_unique_call 1645} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_76), Irb_35);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} ntStatus_72 == -1072562032;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} bGeneration_1 == 0;
    call {:si_unique_call 1646} vslice_dummy_var_237 := Av1394_GetGenerationCount#1(BusExtension_76);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_72 != -1072562032;
    Tmp_883 := Retries_4;
    Retries_4 := Retries_4 - 1;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Tmp_883 != 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} Tmp_883 == 0;
    goto L15;

  anon32_Then:
    assume {:partition} ntStatus_72 == -1072562032;
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} bGeneration_1 != 0;
    goto L15;

  anon29_Then:
    assume {:partition} ntStatus_72 != -1072562032;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_72 < 0;
    goto L62;

  anon30_Then:
    assume {:partition} 0 <= ntStatus_72;
    goto L15;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    assume {:partition} bGeneration_1 == 0;
    assume {:nonnull} BusExtension_76 != 0;
    assume BusExtension_76 > 0;
    assume {:nonnull} Irb_35 != 0;
    assume Irb_35 > 0;
    goto L45;

  anon28_Then:
    assume {:partition} Irb_35 == 0;
    goto L25;

  L25:
    ntStatus_72 := -1073741670;
    goto L15;

  anon34_Then:
    assume {:partition} Irp_74 == 0;
    goto L25;

  anon33_Then:
    goto L11;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_4: int, actual_Entry_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_4: int, actual_Entry_3: int)
{
  var {:pointer} Flink_1: int;
  var {:pointer} ListHead_4: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_238: int;

  anon0:
    call {:si_unique_call 1649} vslice_dummy_var_238 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    havoc Flink_1;
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    assume {:nonnull} Flink_1 != 0;
    assume Flink_1 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    assume (forall x: int :: { Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] } Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] <= 0 || Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] > 532);
    return;
}



function {:inline true} {:fieldmap "Mem_T.AP_Source_ID__ASYNC_PACKET"} {:fieldname "AP_Source_ID"} AP_Source_ID__ASYNC_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_63"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_63(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_40"} {:fieldname "Argument1"} Argument1_unnamed_tag_40(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Arguments__IRB_REQ_ASYNC_LOCK"} {:fieldname "Arguments"} Arguments__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.AsyncLock_unnamed_tag_63"} {:fieldname "AsyncLock"} AsyncLock_unnamed_tag_63(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_63"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_63(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_63"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_63(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T._CIP_ATTACH_FRAME"} {:fieldname "AttachFrame"} AttachFrame__AV_61883_REQUEST(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.AttachIrb__CIP_DESCRIPTOR_DATA"} {:fieldname "AttachIrb"} AttachIrb__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.AttachIrp__CIP_DESCRIPTOR_DATA"} {:fieldname "AttachIrp"} AttachIrp__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__BUS_DEVICE_EXTENSION"} {:fieldname "AvAdapterData"} AvAdapterData__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__CMP_DATA"} {:fieldname "AvAdapterData"} AvAdapterData__CMP_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__CROM_DATA"} {:fieldname "AvAdapterData"} AvAdapterData__CROM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AvAdapterData__FCP_DATA"} {:fieldname "AvAdapterData"} AvAdapterData__FCP_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AvDataList"} AvDataList__AV_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BCCCounter__IPCR"} {:fieldname "BCCCounter"} BCCCounter__IPCR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BCCCounter__OPCR"} {:fieldname "BCCCounter"} BCCCounter__OPCR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.BC_Connections__CMP_GET_PLUG_STATE"} {:fieldname "BC_Connections"} BC_Connections__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriodRemainder__CIP_DATA"} {:fieldname "BlockPeriodRemainder"} BlockPeriodRemainder__CIP_DATA(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriodRemainder__CIP_DATA_FORMAT_VER3"} {:fieldname "BlockPeriodRemainder"} BlockPeriodRemainder__CIP_DATA_FORMAT_VER3(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriodResidue__CIP_DATA"} {:fieldname "BlockPeriodResidue"} BlockPeriodResidue__CIP_DATA(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriod__CIP_DATA"} {:fieldname "BlockPeriod"} BlockPeriod__CIP_DATA(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.BlockPeriod__CIP_DATA_FORMAT_VER2"} {:fieldname "BlockPeriod"} BlockPeriod__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.BlockSize__CIP_DATA"} {:fieldname "BlockSize"} BlockSize__CIP_DATA(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.BlockSize__CIP_DATA_FORMAT_VER2"} {:fieldname "BlockSize"} BlockSize__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.BlocksPerPacket__CIP_DATA"} {:fieldname "BlocksPerPacket"} BlocksPerPacket__CIP_DATA(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.BlocksPerPacket__CIP_DATA_FORMAT_VER3"} {:fieldname "BlocksPerPacket"} BlocksPerPacket__CIP_DATA_FORMAT_VER3(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Buffer__STRING"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusBuffer__CIP_DESCRIPTOR_DATA"} {:fieldname "BusBuffer"} BusBuffer__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T.BusExtension__COMPLETION_STRUCT"} {:fieldname "BusExtension"} BusExtension__COMPLETION_STRUCT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.BusHeader__CIP_DESCRIPTOR_DATA"} {:fieldname "BusHeader"} BusHeader__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 524
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__PNP_BUS_INFORMATION"} {:fieldname "BusNumber"} BusNumber__PNP_BUS_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.BusOwner__AV_CONNECT"} {:fieldname "BusOwner"} BusOwner__AV_CONNECT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_63"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_63(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_63"} {:fieldname "BusReset"} BusReset_unnamed_tag_63(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusTypeGuid__PNP_BUS_INFORMATION"} {:fieldname "BusTypeGuid"} BusTypeGuid__PNP_BUS_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1__UNICYCLE_TIME"} {:fieldname "Byte1"} Byte1__UNICYCLE_TIME(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte2__UNICYCLE_TIME"} {:fieldname "Byte2"} Byte2__UNICYCLE_TIME(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte3__UNICYCLE_TIME"} {:fieldname "Byte3"} Byte3__UNICYCLE_TIME(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte4__UNICYCLE_TIME"} {:fieldname "Byte4"} Byte4__UNICYCLE_TIME(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BytesInFrame__CIP_DATA"} {:fieldname "BytesInFrame"} BytesInFrame__CIP_DATA(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.BytesPerFrameAvailable__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "BytesPerFrameAvailable"} BytesPerFrameAvailable__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CL_CycleCount__CYCLE_TIME"} {:fieldname "CL_CycleCount"} CL_CycleCount__CYCLE_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CL_CycleOffset__CYCLE_TIME"} {:fieldname "CL_CycleOffset"} CL_CycleOffset__CYCLE_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CL_SecondCount__CYCLE_TIME"} {:fieldname "CL_SecondCount"} CL_SecondCount__CYCLE_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CR_UnitInfo__CROM_ENTRY"} {:fieldname "CR_UnitInfo"} CR_UnitInfo__CROM_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CR_UnitSpecId__CROM_ENTRY"} {:fieldname "CR_UnitSpecId"} CR_UnitSpecId__CROM_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CR_UnitSwVersion__CROM_ENTRY"} {:fieldname "CR_UnitSwVersion"} CR_UnitSwVersion__CROM_ENTRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.CTSFlags__GET_UNIT_CAPABILITIES"} {:fieldname "CTSFlags"} CTSFlags__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CTS__PDO_DEVICE_EXTENSION"} {:fieldname "CTS"} CTS__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Callback__ISOCH_DESCRIPTOR"} {:fieldname "Callback"} Callback__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._CIP_CANCEL_FRAME"} {:fieldname "CancelFrame"} CancelFrame__AV_61883_REQUEST(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.CanonCount__AV_ADAPTER_DATA"} {:fieldname "CanonCount"} CanonCount__AV_ADAPTER_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ChannelBase__MPR"} {:fieldname "ChannelBase"} ChannelBase__MPR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Channel__AV_CONNECT"} {:fieldname "Channel"} Channel__AV_CONNECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Channel__CIP_DATA"} {:fieldname "Channel"} Channel__CIP_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Channel__IPCR"} {:fieldname "Channel"} Channel__IPCR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Channel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL"} {:fieldname "Channel"} Channel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Channel__ISO_HEADER"} {:fieldname "Channel"} Channel__ISO_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Channel__OPCR"} {:fieldname "Channel"} Channel__OPCR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ChannelsAvailable__IRB_REQ_ISOCH_ALLOCATE_CHANNEL"} {:fieldname "ChannelsAvailable"} ChannelsAvailable__IRB_REQ_ISOCH_ALLOCATE_CHANNEL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CipDataLock__CIP_DATA"} {:fieldname "CipDataLock"} CipDataLock__CIP_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "CipData"} CipData__AV_CONNECT(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.CipData__CIP_DESCRIPTOR_DATA"} {:fieldname "CipData"} CipData__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.CipDelay__CIP_DATA"} {:fieldname "CipDelay"} CipDelay__CIP_DATA(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.CipFlags__CIP_DATA"} {:fieldname "CipFlags"} CipFlags__CIP_DATA(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.CipHeader__CIP_DATA"} {:fieldname "CipHeader"} CipHeader__CIP_DATA(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.CipPacketSize__CIP_DATA"} {:fieldname "CipPacketSize"} CipPacketSize__CIP_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.P_CMP_DATA"} {:fieldname "CmpData"} CmpData__AV_ADAPTER_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.P_CMP_DATA"} {:fieldname "CmpData"} CmpData__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 480
}

function {:inline true} {:fieldmap "Mem_T.CmpLock__CMP_DATA"} {:fieldname "CmpLock"} CmpLock__CMP_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CmpPacketSize__AV_CONNECT"} {:fieldname "CmpPacketSize"} CmpPacketSize__AV_CONNECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "CompatIds"} CompatIds__PDO_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CompletedBytes__CIP_FRAME"} {:fieldname "CompletedBytes"} CompletedBytes__CIP_FRAME(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ConnectList"} ConnectList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T.ConnectLock__BUS_DEVICE_EXTENSION"} {:fieldname "ConnectLock"} ConnectLock__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.ConnectType__AV_CONNECT"} {:fieldname "ConnectType"} ConnectType__AV_CONNECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CMP_CONNECT_VER3"} {:fieldname "Connect"} Connect__AV_61883_REQUEST(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Connect__CIP_DATA"} {:fieldname "Connect"} Connect__CIP_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Context1__ISOCH_DESCRIPTOR"} {:fieldname "Context1"} Context1__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Context2__ISOCH_DESCRIPTOR"} {:fieldname "Context2"} Context2__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Context__AV_PLUG"} {:fieldname "Context"} Context__AV_PLUG(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__BUS_RESET_NOTIFY"} {:fieldname "Context"} Context__BUS_RESET_NOTIFY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Context__CIP_NOTIFY_INFO"} {:fieldname "Context"} Context__CIP_NOTIFY_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Context__CIP_VALIDATE_INFO"} {:fieldname "Context"} Context__CIP_VALIDATE_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_CREATE_PLUG"} {:fieldname "Context"} Context__CMP_CREATE_PLUG(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_MONITOR_DATA"} {:fieldname "Context"} Context__CMP_MONITOR_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_MONITOR_INFO"} {:fieldname "Context"} Context__CMP_MONITOR_INFO(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.Context__CMP_NOTIFY_INFO"} {:fieldname "Context"} Context__CMP_NOTIFY_INFO(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__NOTIFICATION_INFO_WXP"} {:fieldname "Context"} Context__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._CMP_CREATE_PLUG"} {:fieldname "CreatePlug"} CreatePlug__AV_61883_REQUEST(x: int) : int
{
  x + 272
}

function {:inline true} {:fieldmap "Mem_T.CromData__PDO_CROM_DATA"} {:fieldname "CromData"} CromData__PDO_CROM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._CROM_ENTRY"} {:fieldname "CromEntry"} CromEntry__CROM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CromList"} CromList__AV_ADAPTER_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.CromMdl__CROM_DATA"} {:fieldname "CromMdl"} CromMdl__CROM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.CtsMask__UNIT_DATA"} {:fieldname "CtsMask"} CtsMask__UNIT_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CurrCount__CIP_DATA"} {:fieldname "CurrCount"} CurrCount__CIP_DATA(x: int) : int
{
  x + 296
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CycleCount__CIP_DATA"} {:fieldname "CycleCount"} CycleCount__CIP_DATA(x: int) : int
{
  x + 248
}

function {:inline true} {:fieldmap "Mem_T._UNICYCLE_TIME"} {:fieldname "CycleTime"} CycleTime__CIP_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.CycleTime__ISOCH_DESCRIPTOR"} {:fieldname "CycleTime"} CycleTime__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.DBC__CIP_HEADER"} {:fieldname "DBC"} DBC__CIP_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.DBC__TX_HEADER"} {:fieldname "DBC"} DBC__TX_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.DBS__CIP_HEADER"} {:fieldname "DBS"} DBS__CIP_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DDIVersion__BUS_DEVICE_EXTENSION"} {:fieldname "DDIVersion"} DDIVersion__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.DDIVersion__CIP_DATA"} {:fieldname "DDIVersion"} DDIVersion__CIP_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__TX_HEADER1"} {:fieldname "DataLength"} DataLength__TX_HEADER1(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DataRate__CMP_GET_PLUG_STATE"} {:fieldname "DataRate"} DataRate__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DataRate__MPR"} {:fieldname "DataRate"} DataRate__MPR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DataRate__OPCR"} {:fieldname "DataRate"} DataRate__OPCR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DataValues__IRB_REQ_ASYNC_LOCK"} {:fieldname "DataValues"} DataValues__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DefaultData__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultData"} DefaultData__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DefaultLength__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultLength"} DefaultLength__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DefaultType__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultType"} DefaultType__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._CMP_DELETE_PLUG"} {:fieldname "DeletePlug"} DeletePlug__AV_61883_REQUEST(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DescriptorList"} DescriptorList__CIP_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Descriptor__CIP_DESCRIPTOR_DATA"} {:fieldname "Descriptor"} Descriptor__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_LOCK"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DetachIrb__CIP_DESCRIPTOR_DATA"} {:fieldname "DetachIrb"} DetachIrb__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.DetachIrp__CIP_DESCRIPTOR_DATA"} {:fieldname "DetachIrp"} DetachIrp__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 532
}

function {:inline true} {:fieldmap "Mem_T.DetectedDrift__CIP_DRIFT_DATA"} {:fieldname "DetectedDrift"} DetectedDrift__CIP_DRIFT_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceId"} DeviceId__PDO_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeAddress__BUS_DEVICE_EXTENSION"} {:fieldname "DeviceNodeAddress"} DeviceNodeAddress__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 468
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeAddress__BUS_GENERATION_NODE"} {:fieldname "DeviceNodeAddress"} DeviceNodeAddress__BUS_GENERATION_NODE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeId__PDO_DEVICE_EXTENSION"} {:fieldname "DeviceNodeId"} DeviceNodeId__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__PDO_DATA"} {:fieldname "DeviceObject"} DeviceObject__PDO_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__COMMON_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_33"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_33(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DiagLevel__UNIT_DIAG_LEVEL"} {:fieldname "DiagLevel"} DiagLevel__UNIT_DIAG_LEVEL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DirInfo_unnamed_tag_67"} {:fieldname "DirInfo"} DirInfo_unnamed_tag_67(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_66"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_66(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._CMP_DISCONNECT"} {:fieldname "Disconnect"} Disconnect__AV_61883_REQUEST(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T._CIP_DRIFT_DATA"} {:fieldname "DriftData"} DriftData__CIP_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.DriftIteration__CIP_DRIFT_DATA"} {:fieldname "DriftIteration"} DriftIteration__CIP_DRIFT_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__COMMON_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.EOH_0__CIP_HEADER"} {:fieldname "EOH_0"} EOH_0__CIP_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.EOH_1__CIP_HEADER"} {:fieldname "EOH_1"} EOH_1__CIP_HEADER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__AV_ADAPTER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__AV_DATA_OWNERS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__CMP_MONITOR_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__CROM_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__FCP_NOTIFY_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Entry"} Entry__PDO_CROM_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Entry_unnamed_tag_67"} {:fieldname "Entry"} Entry_unnamed_tag_67(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Enumerated__PDO_DATA"} {:fieldname "Enumerated"} Enumerated__PDO_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Extension__AV_DATA_OWNERS"} {:fieldname "Extension"} Extension__AV_DATA_OWNERS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Extension__FCP_NOTIFY_DATA"} {:fieldname "Extension"} Extension__FCP_NOTIFY_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FDF_hi__CIP_DATA_FORMAT_VER2"} {:fieldname "FDF_hi"} FDF_hi__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FDF_hi__CIP_HEADER"} {:fieldname "FDF_hi"} FDF_hi__CIP_HEADER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.FDF_lo__CIP_DATA_FORMAT_VER2"} {:fieldname "FDF_lo"} FDF_lo__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FDF_lo__CIP_HEADER"} {:fieldname "FDF_lo"} FDF_lo__CIP_HEADER(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.FDF_mid__CIP_DATA_FORMAT_VER2"} {:fieldname "FDF_mid"} FDF_mid__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FDF_mid__CIP_HEADER"} {:fieldname "FDF_mid"} FDF_mid__CIP_HEADER(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.FMT__CIP_DATA_FORMAT_VER2"} {:fieldname "FMT"} FMT__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FMT__CIP_HEADER"} {:fieldname "FMT"} FMT__CIP_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.FN__CIP_HEADER"} {:fieldname "FN"} FN__CIP_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.P_FCP_DATA"} {:fieldname "FcpData"} FcpData__AV_ADAPTER_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpList"} FcpList__AV_ADAPTER_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T._FCP_NOTIFY_DATA"} {:fieldname "FcpNotifyData"} FcpNotifyData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FcpReqFrame__FCP_DATA"} {:fieldname "FcpReqFrame"} FcpReqFrame__FCP_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpReqIrpList"} FcpReqIrpList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.FcpReqMdl__FCP_DATA"} {:fieldname "FcpReqMdl"} FcpReqMdl__FCP_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpReqPktList"} FcpReqPktList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.FcpReqPktLock__PDO_DEVICE_EXTENSION"} {:fieldname "FcpReqPktLock"} FcpReqPktLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "FcpReqPktPool"} FcpReqPktPool__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "FcpReqRange"} FcpReqRange__FCP_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FcpRspFrame__FCP_DATA"} {:fieldname "FcpRspFrame"} FcpRspFrame__FCP_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpRspIrpList"} FcpRspIrpList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.FcpRspMdl__FCP_DATA"} {:fieldname "FcpRspMdl"} FcpRspMdl__FCP_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FcpRspPktList"} FcpRspPktList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.FcpRspPktLock__PDO_DEVICE_EXTENSION"} {:fieldname "FcpRspPktLock"} FcpRspPktLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "FcpRspPktPool"} FcpRspPktPool__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "FcpRspRange"} FcpRspRange__FCP_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Flags__AV_61883_REQUEST"} {:fieldname "Flags"} Flags__AV_61883_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__BUS_RESET_NOTIFY"} {:fieldname "Flags"} Flags__BUS_RESET_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__CIP_DATA"} {:fieldname "Flags"} Flags__CIP_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__CIP_FRAME"} {:fieldname "Flags"} Flags__CIP_FRAME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__CIP_FRAME_CONTEXT"} {:fieldname "Flags"} Flags__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__CMP_MONITOR_DATA"} {:fieldname "Flags"} Flags__CMP_MONITOR_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__FCP_NOTIFY_DATA"} {:fieldname "Flags"} Flags__FCP_NOTIFY_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_FCP_NOTIFY"} {:fieldname "Flags"} Flags__SET_FCP_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_UNIT_DIRECTORY"} {:fieldname "Flags"} Flags__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Form_0__CIP_HEADER"} {:fieldname "Form_0"} Form_0__CIP_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Form_1__CIP_HEADER"} {:fieldname "Form_1"} Form_1__CIP_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._CIP_DATA_FORMAT_VER3"} {:fieldname "Format"} Format__CMP_CONNECT_VER3(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Fraction__CIP_DATA_FORMAT_VER2"} {:fieldname "Fraction"} Fraction__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.FrameLength__CIP_ATTACH_FRAME"} {:fieldname "FrameLength"} FrameLength__CIP_ATTACH_FRAME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FrameLength__CIP_FRAME_CONTEXT"} {:fieldname "FrameLength"} FrameLength__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FrameList"} FrameList__CIP_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.FrameSize__AV_PLUG"} {:fieldname "FrameSize"} FrameSize__AV_PLUG(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_ATTACH_FRAME"} {:fieldname "Frame"} Frame__CIP_ATTACH_FRAME(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_CANCEL_FRAME"} {:fieldname "Frame"} Frame__CIP_CANCEL_FRAME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_FRAME_CONTEXT"} {:fieldname "Frame"} Frame__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Frame__CIP_NOTIFY_INFO"} {:fieldname "Frame"} Frame__CIP_NOTIFY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Frame__FCP_GET_REQUEST"} {:fieldname "Frame"} Frame__FCP_GET_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Frame__FCP_REQUEST_VER1"} {:fieldname "Frame"} Frame__FCP_REQUEST_VER1(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_63"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_63(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__AV_61883_REQUEST"} {:fieldname "Function"} Function__AV_61883_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FutureCount__CIP_DATA"} {:fieldname "FutureCount"} FutureCount__CIP_DATA(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__BUS_DEVICE_EXTENSION"} {:fieldname "GenerationCount"} GenerationCount__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_63"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_63(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.GetConfigurationInformation_unnamed_tag_63"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_63(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_63"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_63(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_63"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_63(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_63"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_63(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._CMP_GET_PLUG_HANDLE"} {:fieldname "GetPlugHandle"} GetPlugHandle__AV_61883_REQUEST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._CMP_GET_PLUG_STATE"} {:fieldname "GetPlugState"} GetPlugState__AV_61883_REQUEST(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._FCP_GET_REQUEST"} {:fieldname "GetRequest"} GetRequest__AV_61883_REQUEST(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T._GET_UNIT_INFO"} {:fieldname "GetUnitInfo"} GetUnitInfo__AV_61883_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.HardwareFlags__BUS_DEVICE_EXTENSION"} {:fieldname "HardwareFlags"} HardwareFlags__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 476
}

function {:inline true} {:fieldmap "Mem_T.HardwareFlags__GET_UNIT_CAPABILITIES"} {:fieldname "HardwareFlags"} HardwareFlags__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.HeaderLength__TX_HEADER1"} {:fieldname "HeaderLength"} HeaderLength__TX_HEADER1(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HostCapabilities__GET_LOCAL_HOST_INFO2"} {:fieldname "HostCapabilities"} HostCapabilities__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IE_Key__IMMEDIATE_ENTRY"} {:fieldname "IE_Key"} IE_Key__IMMEDIATE_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IE_Value__IMMEDIATE_ENTRY"} {:fieldname "IE_Value"} IE_Value__IMMEDIATE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__GET_UNIT_INFO"} {:fieldname "Information"} Information__GET_UNIT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InitStream__CIP_DATA"} {:fieldname "InitStream"} InitStream__CIP_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.InputPlugs__CMP_DATA"} {:fieldname "InputPlugs"} InputPlugs__CMP_DATA(x: int) : int
{
  x + 1008
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "IoLock"} IoLock__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "IrbPool"} IrbPool__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.IrbPool__CIP_DATA"} {:fieldname "IrbPool"} IrbPool__CIP_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Irb__COMPLETION_STRUCT"} {:fieldname "Irb"} Irb__COMPLETION_STRUCT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Irp__COMPLETION_STRUCT"} {:fieldname "Irp"} Irp__COMPLETION_STRUCT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IsochAllocateBandwidth_unnamed_tag_63"} {:fieldname "IsochAllocateBandwidth"} IsochAllocateBandwidth_unnamed_tag_63(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.IsochAllocateChannel_unnamed_tag_63"} {:fieldname "IsochAllocateChannel"} IsochAllocateChannel_unnamed_tag_63(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.IsochAllocateResources_unnamed_tag_63"} {:fieldname "IsochAllocateResources"} IsochAllocateResources_unnamed_tag_63(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.IsochAttachBuffers_unnamed_tag_63"} {:fieldname "IsochAttachBuffers"} IsochAttachBuffers_unnamed_tag_63(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.IsochDetachBuffers_unnamed_tag_63"} {:fieldname "IsochDetachBuffers"} IsochDetachBuffers_unnamed_tag_63(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.IsochFreeBandwidth_unnamed_tag_63"} {:fieldname "IsochFreeBandwidth"} IsochFreeBandwidth_unnamed_tag_63(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.IsochFreeChannel_unnamed_tag_63"} {:fieldname "IsochFreeChannel"} IsochFreeChannel_unnamed_tag_63(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.IsochFreeResources_unnamed_tag_63"} {:fieldname "IsochFreeResources"} IsochFreeResources_unnamed_tag_63(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.IsochHeader__CIP_DATA"} {:fieldname "IsochHeader"} IsochHeader__CIP_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.IsochListen_unnamed_tag_63"} {:fieldname "IsochListen"} IsochListen_unnamed_tag_63(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.IsochStop_unnamed_tag_63"} {:fieldname "IsochStop"} IsochStop_unnamed_tag_63(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.IsochTalk_unnamed_tag_63"} {:fieldname "IsochTalk"} IsochTalk_unnamed_tag_63(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastBlock__CIP_DATA"} {:fieldname "LastBlock"} LastBlock__CIP_DATA(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.LastCount__CIP_DATA"} {:fieldname "LastCount"} LastCount__CIP_DATA(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.LastCycleCount__CIP_DRIFT_DATA"} {:fieldname "LastCycleCount"} LastCycleCount__CIP_DRIFT_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LegacyBusType__PNP_BUS_INFORMATION"} {:fieldname "LegacyBusType"} LegacyBusType__PNP_BUS_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Length"} Length__FCP_GET_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Length__FCP_REQUEST_ENTRY"} {:fieldname "Length"} Length__FCP_REQUEST_ENTRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry__FCP_REQUEST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_6(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Listen__AV_61883_REQUEST"} {:fieldname "Listen"} Listen__AV_61883_REQUEST(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.LocalNodeAddress__BUS_DEVICE_EXTENSION"} {:fieldname "LocalNodeAddress"} LocalNodeAddress__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T.LocalNodeAddress__BUS_GENERATION_NODE"} {:fieldname "LocalNodeAddress"} LocalNodeAddress__BUS_GENERATION_NODE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LocalNodeId__CIP_DATA"} {:fieldname "LocalNodeId"} LocalNodeId__CIP_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Location__AV_PLUG"} {:fieldname "Location"} Location__AV_PLUG(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncPayloadRequested__SET_LOCAL_HOST_PROPS4"} {:fieldname "MaxAsyncPayloadRequested"} MaxAsyncPayloadRequested__SET_LOCAL_HOST_PROPS4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncPayloadResult__SET_LOCAL_HOST_PROPS4"} {:fieldname "MaxAsyncPayloadResult"} MaxAsyncPayloadResult__SET_LOCAL_HOST_PROPS4(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxDataRate__BUS_DEVICE_EXTENSION"} {:fieldname "MaxDataRate"} MaxDataRate__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 448
}

function {:inline true} {:fieldmap "Mem_T.MaxDataRate__CMP_DATA"} {:fieldname "MaxDataRate"} MaxDataRate__CMP_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaxDataRate__GET_UNIT_CAPABILITIES"} {:fieldname "MaxDataRate"} MaxDataRate__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxDriftIteration__CIP_DRIFT_DATA"} {:fieldname "MaxDriftIteration"} MaxDriftIteration__CIP_DRIFT_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaxSpeed__BUS_DEVICE_EXTENSION"} {:fieldname "MaxSpeed"} MaxSpeed__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Mdl__COMPLETION_STRUCT"} {:fieldname "Mdl"} Mdl__COMPLETION_STRUCT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__ISOCH_DESCRIPTOR"} {:fieldname "Mdl"} Mdl__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Mdl__SET_LOCAL_HOST_PROPS3"} {:fieldname "Mdl"} Mdl__SET_LOCAL_HOST_PROPS3(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MissedBlock__CIP_DATA"} {:fieldname "MissedBlock"} MissedBlock__CIP_DATA(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.ModelID__GET_UNIT_IDS"} {:fieldname "ModelID"} ModelID__GET_UNIT_IDS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ModelId__UNIT_DATA"} {:fieldname "ModelId"} ModelId__UNIT_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.ModelText__GET_UNIT_IDS"} {:fieldname "ModelText"} ModelText__GET_UNIT_IDS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._CMP_MONITOR_DATA"} {:fieldname "MonitorData"} MonitorData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MonitorList"} MonitorList__AV_ADAPTER_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T._CMP_MONITOR_PLUGS"} {:fieldname "MonitorPlugs"} MonitorPlugs__AV_61883_REQUEST(x: int) : int
{
  x + 448
}

function {:inline true} {:fieldmap "Mem_T._MPR"} {:fieldname "Mpr"} Mpr__PCR_MAP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mpr_unnamed_tag_68"} {:fieldname "Mpr"} Mpr_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "NodeAddress"} NodeAddress__FCP_GET_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__FCP_REQUEST_ENTRY"} {:fieldname "NodeAddress"} NodeAddress__FCP_REQUEST_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "NodeID"} NodeID__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.NotifyContext__CIP_FRAME"} {:fieldname "NotifyContext"} NotifyContext__CIP_FRAME(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "NotifyFrameList"} NotifyFrameList__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.NumBlocks__CIP_DATA"} {:fieldname "NumBlocks"} NumBlocks__CIP_DATA(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.NumInputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "NumInputPlugs"} NumInputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 444
}

function {:inline true} {:fieldmap "Mem_T.NumInputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumInputPlugs"} NumInputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumOutputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "NumOutputPlugs"} NumOutputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.NumOutputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumOutputPlugs"} NumOutputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NumPackets__CIP_DESCRIPTOR_DATA"} {:fieldname "NumPackets"} NumPackets__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.NumPlugs__MPR"} {:fieldname "NumPlugs"} NumPlugs__MPR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NumberCompatIds__PDO_DATA"} {:fieldname "NumberCompatIds"} NumberCompatIds__PDO_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NumberPDOs__BUS_DEVICE_EXTENSION"} {:fieldname "NumberPDOs"} NumberPDOs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.PP_DEVICE_OBJECT"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OnLine__IPCR"} {:fieldname "OnLine"} OnLine__IPCR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.OnLine__OPCR"} {:fieldname "OnLine"} OnLine__OPCR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OutputPlugs__CMP_DATA"} {:fieldname "OutputPlugs"} OutputPlugs__CMP_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.OverheadID__OPCR"} {:fieldname "OverheadID"} OverheadID__OPCR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OwnerList"} OwnerList__AV_ADAPTER_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Owner__AV_ADAPTER_DATA"} {:fieldname "Owner"} Owner__AV_ADAPTER_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Owner__AV_PLUG"} {:fieldname "Owner"} Owner__AV_PLUG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PPCCounter__IPCR"} {:fieldname "PPCCounter"} PPCCounter__IPCR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PPCCounter__OPCR"} {:fieldname "PPCCounter"} PPCCounter__OPCR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PP_Connections__CMP_GET_PLUG_STATE"} {:fieldname "PP_Connections"} PP_Connections__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PacketOffset__CIP_FRAME_CONTEXT"} {:fieldname "PacketOffset"} PacketOffset__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Packet__CIP_FRAME"} {:fieldname "Packet"} Packet__CIP_FRAME(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Packet__CIP_FRAME_CONTEXT"} {:fieldname "Packet"} Packet__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Packet__CIP_VALIDATE_INFO"} {:fieldname "Packet"} Packet__CIP_VALIDATE_INFO(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Padding__CIP_DATA_FORMAT_VER2"} {:fieldname "Padding"} Padding__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__CIP_DATA"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__CIP_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Payload__CMP_GET_PLUG_STATE"} {:fieldname "Payload"} Payload__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Payload__OPCR"} {:fieldname "Payload"} Payload__OPCR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pcr__CMP_CREATE_PLUG"} {:fieldname "Pcr"} Pcr__CMP_CREATE_PLUG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Pcr__CMP_MONITOR_INFO"} {:fieldname "Pcr"} Pcr__CMP_MONITOR_INFO(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Pcr__CMP_SET_PLUG"} {:fieldname "Pcr"} Pcr__CMP_SET_PLUG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Pcr__PCR_MAP"} {:fieldname "Pcr"} Pcr__PCR_MAP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoCromList"} PdoCromList__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.PdoData__PDO_DEVICE_EXTENSION"} {:fieldname "PdoData"} PdoData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__PDO_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PersistentExt__MPR"} {:fieldname "PersistentExt"} PersistentExt__MPR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PhysicalDeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "PhysicalDeviceObject"} PhysicalDeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__AV_PLUG"} {:fieldname "PlugNum"} PlugNum__AV_PLUG(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__CMP_CREATE_PLUG"} {:fieldname "PlugNum"} PlugNum__CMP_CREATE_PLUG(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__CMP_GET_PLUG_HANDLE"} {:fieldname "PlugNum"} PlugNum__CMP_GET_PLUG_HANDLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PlugNum__CMP_MONITOR_INFO"} {:fieldname "PlugNum"} PlugNum__CMP_MONITOR_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PlugType__AV_PLUG"} {:fieldname "PlugType"} PlugType__AV_PLUG(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PlugType__CMP_CREATE_PLUG"} {:fieldname "PlugType"} PlugType__CMP_CREATE_PLUG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PlugType__CMP_MONITOR_INFO"} {:fieldname "PlugType"} PlugType__CMP_MONITOR_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QPC__CIP_HEADER"} {:fieldname "QPC"} QPC__CIP_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryRoutine__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "QueryRoutine"} QueryRoutine__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RX_NumDescriptors__BUS_DEVICE_EXTENSION"} {:fieldname "RX_NumDescriptors"} RX_NumDescriptors__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.RX_NumDescriptors__CIP_DATA"} {:fieldname "RX_NumDescriptors"} RX_NumDescriptors__CIP_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.RX_NumDescriptors__UNIT_ISOCH_PARAMS"} {:fieldname "RX_NumDescriptors"} RX_NumDescriptors__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RX_NumPackets__BUS_DEVICE_EXTENSION"} {:fieldname "RX_NumPackets"} RX_NumPackets__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.RX_NumPackets__CIP_DATA"} {:fieldname "RX_NumPackets"} RX_NumPackets__CIP_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.RX_NumPackets__UNIT_ISOCH_PARAMS"} {:fieldname "RX_NumPackets"} RX_NumPackets__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RefCount__AV_ADAPTER_DATA"} {:fieldname "RefCount"} RefCount__AV_ADAPTER_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.RefCount__CROM_DATA"} {:fieldname "RefCount"} RefCount__CROM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Removed__COMMON_DEVICE_EXTENSION"} {:fieldname "Removed"} Removed__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.RequestIrp__COMPLETION_STRUCT"} {:fieldname "RequestIrp"} RequestIrp__COMPLETION_STRUCT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.RequestPacket__NOTIFICATION_INFO_WXP"} {:fieldname "RequestPacket"} RequestPacket__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._FCP_SEND_REQUEST"} {:fieldname "Request"} Request__AV_61883_REQUEST(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved0__IPCR"} {:fieldname "Reserved0"} Reserved0__IPCR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__IPCR"} {:fieldname "Reserved1"} Reserved1__IPCR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Reserved__CIP_FRAME"} {:fieldname "Reserved"} Reserved__CIP_FRAME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IRB_REQ_ASYNC_LOCK"} {:fieldname "Reserved"} Reserved__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IRB_REQ_ASYNC_READ"} {:fieldname "Reserved"} Reserved__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Reserved__MPR"} {:fieldname "Reserved"} Reserved__MPR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved__OPCR"} {:fieldname "Reserved"} Reserved__OPCR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__PDO_DEVICE_EXTENSION"} {:fieldname "ResetContext"} ResetContext__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.ResetLock__PDO_DEVICE_EXTENSION"} {:fieldname "ResetLock"} ResetLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__PDO_DEVICE_EXTENSION"} {:fieldname "ResetRoutine"} ResetRoutine__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.ResponseCode__NOTIFICATION_INFO_WXP"} {:fieldname "ResponseCode"} ResponseCode__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._FCP_GET_RESPONSE"} {:fieldname "Response"} Response__AV_61883_REQUEST(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.SID__TX_HEADER"} {:fieldname "SID"} SID__TX_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SPH__CIP_HEADER"} {:fieldname "SPH"} SPH__CIP_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SPH__TX_HEADER"} {:fieldname "SPH"} SPH__TX_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SYT_hi__CIP_HEADER"} {:fieldname "SYT_hi"} SYT_hi__CIP_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SYT_hi__TX_HEADER"} {:fieldname "SYT_hi"} SYT_hi__TX_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SYT_lo__CIP_HEADER"} {:fieldname "SYT_lo"} SYT_lo__CIP_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SYT_lo__TX_HEADER"} {:fieldname "SYT_lo"} SYT_lo__TX_HEADER(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T._SET_FCP_NOTIFY"} {:fieldname "SetFcpNotify"} SetFcpNotify__AV_61883_REQUEST(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.SetLocalHostProperties_unnamed_tag_63"} {:fieldname "SetLocalHostProperties"} SetLocalHostProperties_unnamed_tag_63(x: int) : int
{
  x + 872
}

function {:inline true} {:fieldmap "Mem_T._CMP_SET_PLUG"} {:fieldname "SetPlug"} SetPlug__AV_61883_REQUEST(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T._SET_UNIT_DIRECTORY"} {:fieldname "SetUnitDirectory"} SetUnitDirectory__AV_61883_REQUEST(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T._SET_UNIT_INFO"} {:fieldname "SetUnitInfo"} SetUnitInfo__AV_61883_REQUEST(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Short1__UNICYCLE_TIME"} {:fieldname "Short1"} Short1__UNICYCLE_TIME(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Short2__UNICYCLE_TIME"} {:fieldname "Short2"} Short2__UNICYCLE_TIME(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SourceCount__CIP_DATA"} {:fieldname "SourceCount"} SourceCount__CIP_DATA(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.SourceLength__CIP_ATTACH_FRAME"} {:fieldname "SourceLength"} SourceLength__CIP_ATTACH_FRAME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SourceLength__CIP_FRAME_CONTEXT"} {:fieldname "SourceLength"} SourceLength__CIP_FRAME_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SpeedSelected__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "SpeedSelected"} SpeedSelected__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Speed__AV_CONNECT"} {:fieldname "Speed"} Speed__AV_CONNECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Speed__CIP_DATA"} {:fieldname "Speed"} Speed__CIP_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.StartTime__IRB_REQ_ISOCH_LISTEN"} {:fieldname "StartTime"} StartTime__IRB_REQ_ISOCH_LISTEN(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Started__COMMON_DEVICE_EXTENSION"} {:fieldname "Started"} Started__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.State__AV_CONNECT"} {:fieldname "State"} State__AV_CONNECT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.State__CIP_DATA"} {:fieldname "State"} State__CIP_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State__CIP_DESCRIPTOR_DATA"} {:fieldname "State"} State__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.State__CMP_GET_PLUG_STATE"} {:fieldname "State"} State__CMP_GET_PLUG_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.State__CMP_MONITOR_INFO"} {:fieldname "State"} State__CMP_MONITOR_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__CIP_FRAME"} {:fieldname "Status"} Status__CIP_FRAME(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Stop__AV_61883_REQUEST"} {:fieldname "Stop"} Stop__AV_61883_REQUEST(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.StreamType__CIP_DATA"} {:fieldname "StreamType"} StreamType__CIP_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SwVersion__UNIT_DATA"} {:fieldname "SwVersion"} SwVersion__UNIT_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__COMMON_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.SytCount__CIP_DATA"} {:fieldname "SytCount"} SytCount__CIP_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.SytInterval__CIP_DATA"} {:fieldname "SytInterval"} SytInterval__CIP_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.TX_NumDescriptors__BUS_DEVICE_EXTENSION"} {:fieldname "TX_NumDescriptors"} TX_NumDescriptors__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.TX_NumDescriptors__CIP_DATA"} {:fieldname "TX_NumDescriptors"} TX_NumDescriptors__CIP_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.TX_NumDescriptors__UNIT_ISOCH_PARAMS"} {:fieldname "TX_NumDescriptors"} TX_NumDescriptors__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TX_NumPackets__BUS_DEVICE_EXTENSION"} {:fieldname "TX_NumPackets"} TX_NumPackets__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.TX_NumPackets__CIP_DATA"} {:fieldname "TX_NumPackets"} TX_NumPackets__CIP_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.TX_NumPackets__UNIT_ISOCH_PARAMS"} {:fieldname "TX_NumPackets"} TX_NumPackets__UNIT_ISOCH_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Tag__COMMON_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tag__ISO_HEADER"} {:fieldname "Tag"} Tag__ISO_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Tag__NODE_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__NODE_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tag__PDO_DATA"} {:fieldname "Tag"} Tag__PDO_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Talk__AV_61883_REQUEST"} {:fieldname "Talk"} Talk__AV_61883_REQUEST(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.Tcode__ISO_HEADER"} {:fieldname "Tcode"} Tcode__ISO_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ThisBlock__CIP_DATA"} {:fieldname "ThisBlock"} ThisBlock__CIP_DATA(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.TimeStamp__TS_HEADER"} {:fieldname "TimeStamp"} TimeStamp__TS_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__CIP_DESCRIPTOR_DATA(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.Timestamp__CIP_FRAME"} {:fieldname "Timestamp"} Timestamp__CIP_FRAME(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TotalPackets__CIP_DATA"} {:fieldname "TotalPackets"} TotalPackets__CIP_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.TxHeader__CIP_DATA"} {:fieldname "TxHeader"} TxHeader__CIP_DATA(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Type__CMP_CONNECT_VER3"} {:fieldname "Type"} Type__CMP_CONNECT_VER3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Type__CMP_DATA"} {:fieldname "Type"} Type__CMP_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type__CMP_GET_PLUG_HANDLE"} {:fieldname "Type"} Type__CMP_GET_PLUG_HANDLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type__KEY_VALUE_PARTIAL_INFORMATION"} {:fieldname "Type"} Type__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type__SET_CMP_ADDRESS_TYPE"} {:fieldname "Type"} Type__SET_CMP_ADDRESS_TYPE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__GET_UNIT_IDS"} {:fieldname "UniqueID"} UniqueID__GET_UNIT_IDS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.UniqueId__AV_ADAPTER_DATA"} {:fieldname "UniqueId"} UniqueId__AV_ADAPTER_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UniqueId__GET_LOCAL_HOST_INFO1"} {:fieldname "UniqueId"} UniqueId__GET_LOCAL_HOST_INFO1(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniqueId"} UniqueId__PDO_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "UniqueId"} UniqueId__UNIT_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._UNIT_DATA"} {:fieldname "UnitData"} UnitData__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UnitModelID__GET_UNIT_IDS"} {:fieldname "UnitModelID"} UnitModelID__GET_UNIT_IDS(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.UnitModelId__UNIT_DATA"} {:fieldname "UnitModelId"} UnitModelId__UNIT_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.UnitModelText__GET_UNIT_IDS"} {:fieldname "UnitModelText"} UnitModelText__GET_UNIT_IDS(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__CROM_DATA"} {:fieldname "UnitSpecId"} UnitSpecId__CROM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__PDO_CROM_DATA"} {:fieldname "UnitSpecId"} UnitSpecId__PDO_CROM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__SET_UNIT_DIRECTORY"} {:fieldname "UnitSpecId"} UnitSpecId__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__CROM_DATA"} {:fieldname "UnitSwVersion"} UnitSwVersion__CROM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__PDO_CROM_DATA"} {:fieldname "UnitSwVersion"} UnitSwVersion__PDO_CROM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__SET_UNIT_DIRECTORY"} {:fieldname "UnitSwVersion"} UnitSwVersion__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ValidateContext__CIP_FRAME"} {:fieldname "ValidateContext"} ValidateContext__CIP_FRAME(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.VendorID__GET_UNIT_IDS"} {:fieldname "VendorID"} VendorID__GET_UNIT_IDS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VendorId__UNIT_DATA"} {:fieldname "VendorId"} VendorId__UNIT_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VendorText__GET_UNIT_IDS"} {:fieldname "VendorText"} VendorText__GET_UNIT_IDS(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Version__AV_61883_REQUEST"} {:fieldname "Version"} Version__AV_61883_REQUEST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__UNIT_DDI_VERSION"} {:fieldname "Version"} Version__UNIT_DDI_VERSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VolatileExt__MPR"} {:fieldname "VolatileExt"} VolatileExt__MPR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.asUchar_unnamed_tag_66"} {:fieldname "asUchar"} asUchar_unnamed_tag_66(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "asUlong"} asUlong_unnamed_tag_66(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_67"} {:fieldname "asUlong"} asUlong_unnamed_tag_67(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.attachref__CIP_DATA"} {:fieldname "attachref"} attachref__CIP_DATA(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.bHeader__CIP_DATA_FORMAT_VER2"} {:fieldname "bHeader"} bHeader__CIP_DATA_FORMAT_VER2(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.cbref__CIP_DATA"} {:fieldname "cbref"} cbref__CIP_DATA(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.chPriority__IRB_REQ_ASYNC_LOCK"} {:fieldname "chPriority"} chPriority__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.chPriority__IRB_REQ_ASYNC_READ"} {:fieldname "chPriority"} chPriority__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_LOCK"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ISOCH_STOP"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ISOCH_STOP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__NOTIFICATION_INFO_WXP"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_ISOCH_FREE_BANDWIDTH"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_ISOCH_FREE_BANDWIDTH(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.fulTransactionType__IRB_REQ_ASYNC_LOCK"} {:fieldname "fulTransactionType"} fulTransactionType__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.hBandwidth__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "hBandwidth"} hBandwidth__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.hBandwidth__IRB_REQ_ISOCH_FREE_BANDWIDTH"} {:fieldname "hBandwidth"} hBandwidth__IRB_REQ_ISOCH_FREE_BANDWIDTH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hConnect__CIP_LISTEN"} {:fieldname "hConnect"} hConnect__CIP_LISTEN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hConnect"} hConnect__CMP_CONNECT_VER2(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hConnect"} hConnect__CMP_CONNECT_VER3(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.hCromData__CROM_DATA"} {:fieldname "hCromData"} hCromData__CROM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.hCromData__SET_LOCAL_HOST_PROPS3"} {:fieldname "hCromData"} hCromData__SET_LOCAL_HOST_PROPS3(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.hCromEntry__SET_UNIT_DIRECTORY"} {:fieldname "hCromEntry"} hCromEntry__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.hDestinationDeviceObjects__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "hDestinationDeviceObjects"} hDestinationDeviceObjects__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hFcpReqRange"} hFcpReqRange__FCP_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "hFcpRspRange"} hFcpRspRange__FCP_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.hInputPlug__CMP_CONNECT_VER3"} {:fieldname "hInputPlug"} hInputPlug__CMP_CONNECT_VER3(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.hOutputPlug__CMP_CONNECT_VER3"} {:fieldname "hOutputPlug"} hOutputPlug__CMP_CONNECT_VER3(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hPlug__CMP_CREATE_PLUG"} {:fieldname "hPlug"} hPlug__CMP_CREATE_PLUG(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.hPlug__CMP_DELETE_PLUG"} {:fieldname "hPlug"} hPlug__CMP_DELETE_PLUG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hPlug__CMP_GET_PLUG_HANDLE"} {:fieldname "hPlug"} hPlug__CMP_GET_PLUG_HANDLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.hResource__CIP_DATA"} {:fieldname "hResource"} hResource__CIP_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.hResource__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "hResource"} hResource__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.hResource__IRB_REQ_ISOCH_FREE_RESOURCES"} {:fieldname "hResource"} hResource__IRB_REQ_ISOCH_FREE_RESOURCES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "iHandle"} iHandle__CMP_DATA(x: int) : int
{
  x + 9572
}

function {:inline true} {:fieldmap "Mem_T.iMap_Bus__CMP_DATA"} {:fieldname "iMap_Bus"} iMap_Bus__CMP_DATA(x: int) : int
{
  x + 7652
}

function {:inline true} {:fieldmap "Mem_T.iMap__CMP_DATA"} {:fieldname "iMap"} iMap__CMP_DATA(x: int) : int
{
  x + 3884
}

function {:inline true} {:fieldmap "Mem_T.iMdl__CMP_DATA"} {:fieldname "iMdl"} iMdl__CMP_DATA(x: int) : int
{
  x + 9540
}

function {:inline true} {:fieldmap "Mem_T._IPCR"} {:fieldname "iPCR"} iPCR__AV_PCR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.iPlug__AV_CONNECT"} {:fieldname "iPlug"} iPlug__AV_CONNECT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "iRange"} iRange__CMP_DATA(x: int) : int
{
  x + 9560
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBandwidthUnitsRequired__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "nBandwidthUnitsRequired"} nBandwidthUnitsRequired__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nChannel__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nChannel"} nChannel__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nChannel__IRB_REQ_ISOCH_FREE_CHANNEL"} {:fieldname "nChannel"} nChannel__IRB_REQ_ISOCH_FREE_CHANNEL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLength__NOTIFICATION_INFO_WXP"} {:fieldname "nLength"} nLength__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLength__SET_LOCAL_HOST_PROPS3"} {:fieldname "nLength"} nLength__SET_LOCAL_HOST_PROPS3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__GET_UNIT_INFO"} {:fieldname "nLevel"} nLevel__GET_UNIT_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nMaxBufferSize__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nMaxBufferSize"} nMaxBufferSize__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH"} {:fieldname "nMaxBytesPerFrameRequested"} nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_FREE_BANDWIDTH"} {:fieldname "nMaxBytesPerFrameRequested"} nMaxBytesPerFrameRequested__IRB_REQ_ISOCH_FREE_BANDWIDTH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrame__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nMaxBytesPerFrame"} nMaxBytesPerFrame__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.nMaxBytesPerFrame__ISOCH_DESCRIPTOR"} {:fieldname "nMaxBytesPerFrame"} nMaxBytesPerFrame__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfArgBytes__IRB_REQ_ASYNC_LOCK"} {:fieldname "nNumberOfArgBytes"} nNumberOfArgBytes__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBuffers__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nNumberOfBuffers"} nNumberOfBuffers__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfDataBytes__IRB_REQ_ASYNC_LOCK"} {:fieldname "nNumberOfDataBytes"} nNumberOfDataBytes__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfDescriptors__IRB_REQ_ISOCH_ATTACH_BUFFERS"} {:fieldname "nNumberOfDescriptors"} nNumberOfDescriptors__IRB_REQ_ISOCH_ATTACH_BUFFERS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.nQuadletsToStrip__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP"} {:fieldname "nQuadletsToStrip"} nQuadletsToStrip__IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.nRequestedChannel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL"} {:fieldname "nRequestedChannel"} nRequestedChannel__IRB_REQ_ISOCH_ALLOCATE_CHANNEL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_LOCK"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.numAttached__CIP_DATA"} {:fieldname "numAttached"} numAttached__CIP_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "oHandle"} oHandle__CMP_DATA(x: int) : int
{
  x + 9556
}

function {:inline true} {:fieldmap "Mem_T.oMap_Bus__CMP_DATA"} {:fieldname "oMap_Bus"} oMap_Bus__CMP_DATA(x: int) : int
{
  x + 5768
}

function {:inline true} {:fieldmap "Mem_T.oMap__CMP_DATA"} {:fieldname "oMap"} oMap__CMP_DATA(x: int) : int
{
  x + 2000
}

function {:inline true} {:fieldmap "Mem_T.oMdl__CMP_DATA"} {:fieldname "oMdl"} oMdl__CMP_DATA(x: int) : int
{
  x + 9536
}

function {:inline true} {:fieldmap "Mem_T._OPCR"} {:fieldname "oPCR"} oPCR__AV_PCR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.oPlug__AV_CONNECT"} {:fieldname "oPlug"} oPlug__AV_CONNECT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_RANGE"} {:fieldname "oRange"} oRange__CMP_DATA(x: int) : int
{
  x + 9544
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.pBuffer__IRB_REQ_ASYNC_LOCK"} {:fieldname "pBuffer"} pBuffer__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.pInputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "pInputPlugs"} pInputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.pIsochDescriptor__IRB_REQ_ISOCH_ATTACH_BUFFERS"} {:fieldname "pIsochDescriptor"} pIsochDescriptor__IRB_REQ_ISOCH_ATTACH_BUFFERS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.pOutputPlugs__BUS_DEVICE_EXTENSION"} {:fieldname "pOutputPlugs"} pOutputPlugs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 452
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__AV_PLUG"} {:fieldname "pfnNotify"} pfnNotify__AV_PLUG(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__BUS_RESET_NOTIFY"} {:fieldname "pfnNotify"} pfnNotify__BUS_RESET_NOTIFY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__CIP_FRAME"} {:fieldname "pfnNotify"} pfnNotify__CIP_FRAME(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__CMP_CREATE_PLUG"} {:fieldname "pfnNotify"} pfnNotify__CMP_CREATE_PLUG(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__CMP_MONITOR_DATA"} {:fieldname "pfnNotify"} pfnNotify__CMP_MONITOR_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.pfnValidate__CIP_FRAME"} {:fieldname "pfnValidate"} pfnValidate__CIP_FRAME(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.rsv__CIP_HEADER"} {:fieldname "rsv"} rsv__CIP_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.tCode__IRB_REQ_ASYNC_LOCK"} {:fieldname "tCode"} tCode__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.tCode__IRB_REQ_ASYNC_READ"} {:fieldname "tCode"} tCode__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ulDiagLevel"} ulDiagLevel__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_LOCK"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_LOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength__ISOCH_DESCRIPTOR"} {:fieldname "ulLength"} ulLength__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulModelLength__GET_UNIT_IDS"} {:fieldname "ulModelLength"} ulModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ulOffset__NOTIFICATION_INFO_WXP"} {:fieldname "ulOffset"} ulOffset__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ulTag__ISOCH_DESCRIPTOR"} {:fieldname "ulTag"} ulTag__ISOCH_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ulUnitModelLength__GET_UNIT_IDS"} {:fieldname "ulUnitModelLength"} ulUnitModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ulVendorLength__GET_UNIT_IDS"} {:fieldname "ulVendorLength"} ulVendorLength__GET_UNIT_IDS(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ulongData__AV_PCR"} {:fieldname "ulongData"} ulongData__AV_PCR(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.ulongData_unnamed_tag_68"} {:fieldname "ulongData"} ulongData_unnamed_tag_68(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ulong__UNICYCLE_TIME"} {:fieldname "ulong"} ulong__UNICYCLE_TIME(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__UNIT_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniUnitModelId"} uniUnitModelId__UNIT_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__UNIT_DATA(x: int) : int
{
  x + 36
}

const {:string ""} unique strConst__li2bpl0: int;

const {:string " "} unique strConst__li2bpl14: int;

const {:string "&"} unique strConst__li2bpl9: int;

const {:string "61883"} unique strConst__li2bpl8: int;

const {:string "61883\\"} unique strConst__li2bpl10: int;

const {:string "AvCmp_GetUnitCapabilities"} unique strConst__li2bpl1: int;

const {:string "CipDelay"} unique strConst__li2bpl15: int;

const {:string "DiagLevel"} unique strConst__li2bpl7: int;

const {:string "GENERIC"} unique strConst__li2bpl11: int;

const {:string "IEEE1394 AV Device"} unique strConst__li2bpl13: int;

const {:string "ModelId"} unique strConst__li2bpl18: int;

const {:string "SwVersion"} unique strConst__li2bpl19: int;

const {:string "The driver is calling sdv_IoReleaseRemoveLock without first acquiring the Removelock."} unique strConst__li2bpl5: int;

const {:string "The driver is calling sdv_IoReleaseRemoveLockAndWait without first acquiring the Removelock."} unique strConst__li2bpl6: int;

const {:string "The routine has returned without releasing a Removelock."} unique strConst__li2bpl4: int;

const {:string "V61883\\"} unique strConst__li2bpl12: int;

const {:string "VDL"} unique strConst__li2bpl16: int;

const {:string "VendorId"} unique strConst__li2bpl17: int;

const {:string "callee"} unique strConst__li2bpl2: int;

const {:string "halt"} unique strConst__li2bpl3: int;

const {:string "szModelId"} unique strConst__li2bpl21: int;

const {:string "szVendorId"} unique strConst__li2bpl20: int;

const {:allocated} li2bplFunctionConstant102: int;

axiom li2bplFunctionConstant102 == 102;

const {:allocated} li2bplFunctionConstant103: int;

axiom li2bplFunctionConstant103 == 103;

const {:allocated} li2bplFunctionConstant119: int;

axiom li2bplFunctionConstant119 == 119;

const {:allocated} li2bplFunctionConstant120: int;

axiom li2bplFunctionConstant120 == 120;

const {:allocated} li2bplFunctionConstant121: int;

axiom li2bplFunctionConstant121 == 121;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant200: int;

axiom li2bplFunctionConstant200 == 200;

const {:allocated} li2bplFunctionConstant201: int;

axiom li2bplFunctionConstant201 == 201;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant206: int;

axiom li2bplFunctionConstant206 == 206;

const {:allocated} li2bplFunctionConstant207: int;

axiom li2bplFunctionConstant207 == 207;

const {:allocated} li2bplFunctionConstant208: int;

axiom li2bplFunctionConstant208 == 208;

const {:allocated} li2bplFunctionConstant209: int;

axiom li2bplFunctionConstant209 == 209;

const {:allocated} li2bplFunctionConstant210: int;

axiom li2bplFunctionConstant210 == 210;

const {:allocated} li2bplFunctionConstant211: int;

axiom li2bplFunctionConstant211 == 211;

const {:allocated} li2bplFunctionConstant212: int;

axiom li2bplFunctionConstant212 == 212;

const {:allocated} li2bplFunctionConstant213: int;

axiom li2bplFunctionConstant213 == 213;

const {:allocated} li2bplFunctionConstant214: int;

axiom li2bplFunctionConstant214 == 214;

const {:allocated} li2bplFunctionConstant219: int;

axiom li2bplFunctionConstant219 == 219;

const {:allocated} li2bplFunctionConstant242: int;

axiom li2bplFunctionConstant242 == 242;

const {:allocated} li2bplFunctionConstant243: int;

axiom li2bplFunctionConstant243 == 243;

const {:allocated} li2bplFunctionConstant246: int;

axiom li2bplFunctionConstant246 == 246;

const {:allocated} li2bplFunctionConstant247: int;

axiom li2bplFunctionConstant247 == 247;

const {:allocated} li2bplFunctionConstant253: int;

axiom li2bplFunctionConstant253 == 253;

const {:allocated} li2bplFunctionConstant277: int;

axiom li2bplFunctionConstant277 == 277;

const {:allocated} li2bplFunctionConstant278: int;

axiom li2bplFunctionConstant278 == 278;

const {:allocated} li2bplFunctionConstant279: int;

axiom li2bplFunctionConstant279 == 279;

const {:allocated} li2bplFunctionConstant311: int;

axiom li2bplFunctionConstant311 == 311;

const {:allocated} li2bplFunctionConstant314: int;

axiom li2bplFunctionConstant314 == 314;

const {:allocated} li2bplFunctionConstant316: int;

axiom li2bplFunctionConstant316 == 316;

const {:allocated} li2bplFunctionConstant317: int;

axiom li2bplFunctionConstant317 == 317;

const {:allocated} li2bplFunctionConstant318: int;

axiom li2bplFunctionConstant318 == 318;

const {:allocated} li2bplFunctionConstant452: int;

axiom li2bplFunctionConstant452 == 452;

const {:allocated} li2bplFunctionConstant527: int;

axiom li2bplFunctionConstant527 == 527;

const {:allocated} li2bplFunctionConstant529: int;

axiom li2bplFunctionConstant529 == 529;

const {:allocated} li2bplFunctionConstant532: int;

axiom li2bplFunctionConstant532 == 532;

implementation {:origName "SdvExit"} {:osmodel} SdvExit#0()
{
  var vslice_dummy_var_239: int;

  anon0:
    call {:si_unique_call 1650} vslice_dummy_var_239 := __HAVOC_malloc(4);
    assume false;
    assume false;
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#0();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SdvExit"} {:osmodel} SdvExit#1()
{
  var vslice_dummy_var_240: int;

  anon0:
    call {:si_unique_call 1651} vslice_dummy_var_240 := __HAVOC_malloc(4);
    assume false;
    call {:si_unique_call 1652} SdvExit#0();
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#1();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_SubmitIrpSynch"} Av_SubmitIrpSynch#0(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Irb: int) returns (Tmp_14: int)
{
  var {:scalar} bFreeIrp: int;
  var {:scalar} Status: int;
  var {:scalar} Event_1: int;
  var {:scalar} StackSize: int;
  var {:pointer} NextIrpStack: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var {:pointer} Irb: int;
  var vslice_dummy_var_241: int;

  anon0:
    call {:si_unique_call 1653} Event_1 := __HAVOC_malloc(124);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    Irb := actual_Irb;
    Status := 0;
    bFreeIrp := 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irp_4 != 0;
    goto L12;

  L12:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irb != 0;
    call {:si_unique_call 1654} NextIrpStack := sdv_IoGetNextIrpStackLocation(Irp_4);
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    goto L23;

  L23:
    call {:si_unique_call 1655} KeInitializeEvent(Event_1, 1, 0);
    call {:si_unique_call 1656} sdv_IoSetCompletionRoutine(Irp_4, li2bplFunctionConstant219, Event_1, 1, 1, 1);
    call {:si_unique_call 1657} Status := sdv_IoCallDriver#0(DeviceObject_4, Irp_4);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status == 259;
    call {:si_unique_call 1658} vslice_dummy_var_241 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    havoc Status;
    goto L34;

  L34:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} bFreeIrp != 0;
    call {:si_unique_call 1659} IoFreeIrp(0);
    goto L39;

  L39:
    Tmp_14 := Status;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} bFreeIrp == 0;
    goto L39;

  anon14_Then:
    assume {:partition} Status != 259;
    goto L34;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} Irb == 0;
    call {:si_unique_call 1660} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_4);
    goto L23;

  anon17_Then:
    assume {:partition} Irp_4 == 0;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc StackSize;
    call {:si_unique_call 1661} Irp_4 := IoAllocateIrp(StackSize, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_4 != 0;
    bFreeIrp := 1;
    goto L12;

  anon16_Then:
    assume {:partition} Irp_4 == 0;
    Tmp_14 := -1073741670;
    goto L1;
}



procedure {:origName "Av_SubmitIrpSynch"} Av_SubmitIrpSynch#0(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Irb: int) returns (Tmp_14: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av_SubmitIrpSynch"} Av_SubmitIrpSynch#1(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Irb: int) returns (Tmp_14: int)
{
  var {:scalar} bFreeIrp: int;
  var {:scalar} Status: int;
  var {:scalar} Event_1: int;
  var {:scalar} StackSize: int;
  var {:pointer} NextIrpStack: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var {:pointer} Irb: int;
  var vslice_dummy_var_242: int;

  anon0:
    call {:si_unique_call 1662} Event_1 := __HAVOC_malloc(124);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    Irb := actual_Irb;
    Status := 0;
    bFreeIrp := 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Irp_4 != 0;
    goto L12;

  L12:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irb != 0;
    call {:si_unique_call 1663} NextIrpStack := sdv_IoGetNextIrpStackLocation(Irp_4);
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    goto L23;

  L23:
    call {:si_unique_call 1664} KeInitializeEvent(Event_1, 1, 0);
    call {:si_unique_call 1665} sdv_IoSetCompletionRoutine(Irp_4, li2bplFunctionConstant219, Event_1, 1, 1, 1);
    call {:si_unique_call 1666} Status := sdv_IoCallDriver#1(DeviceObject_4, Irp_4);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status == 259;
    call {:si_unique_call 1667} vslice_dummy_var_242 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    havoc Status;
    goto L34;

  L34:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} bFreeIrp != 0;
    call {:si_unique_call 1668} IoFreeIrp(0);
    goto L39;

  L39:
    Tmp_14 := Status;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} bFreeIrp == 0;
    goto L39;

  anon14_Then:
    assume {:partition} Status != 259;
    goto L34;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} Irb == 0;
    call {:si_unique_call 1669} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_4);
    goto L23;

  anon17_Then:
    assume {:partition} Irp_4 == 0;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc StackSize;
    call {:si_unique_call 1670} Irp_4 := IoAllocateIrp(StackSize, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Irp_4 != 0;
    bFreeIrp := 1;
    goto L12;

  anon16_Then:
    assume {:partition} Irp_4 == 0;
    Tmp_14 := -1073741670;
    goto L1;
}



procedure {:origName "Av_SubmitIrpSynch"} Av_SubmitIrpSynch#1(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Irb: int) returns (Tmp_14: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_12: int, actual_Irp_12: int) returns (Tmp_183: int)
{
  var {:pointer} Irp_12: int;

  anon0:
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 1671} Tmp_183 := IofCallDriver#0(0, Irp_12);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_12: int, actual_Irp_12: int) returns (Tmp_183: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_12: int, actual_Irp_12: int) returns (Tmp_183: int)
{
  var {:pointer} Irp_12: int;

  anon0:
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 1672} Tmp_183 := IofCallDriver#1(0, Irp_12);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_12: int, actual_Irp_12: int) returns (Tmp_183: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_10: int, actual_Irp_10: int) returns (Tmp_173: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_4: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;

  anon0:
    call {:si_unique_call 1673} completion_1 := __HAVOC_malloc(4);
    Irp_10 := actual_Irp_10;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_4 := 259;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L29;

  L29:
    Tmp_173 := status_4;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    havoc vslice_dummy_var_424;
    call {:si_unique_call 1674} vslice_dummy_var_243 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_424, completion_1);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L23;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L19;

  anon68_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc vslice_dummy_var_425;
    call {:si_unique_call 1675} vslice_dummy_var_246 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_425, completion_1);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L29;

  anon66_Then:
    goto L29;

  anon65_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L62;

  anon64_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L58;

  anon69_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc vslice_dummy_var_426;
    call {:si_unique_call 1676} vslice_dummy_var_244 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_426, completion_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L29;

  anon58_Then:
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L36;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L32;

  anon70_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc vslice_dummy_var_427;
    call {:si_unique_call 1677} vslice_dummy_var_245 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_427, completion_1);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L29;

  anon62_Then:
    goto L29;

  anon61_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L49;

  anon60_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_10: int, actual_Irp_10: int) returns (Tmp_173: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_10: int, actual_Irp_10: int) returns (Tmp_173: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_4: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;

  anon0:
    call {:si_unique_call 1678} completion_1 := __HAVOC_malloc(4);
    Irp_10 := actual_Irp_10;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_4 := 259;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L29;

  L29:
    Tmp_173 := status_4;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    havoc vslice_dummy_var_428;
    call {:si_unique_call 1679} vslice_dummy_var_247 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_428, completion_1);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L23;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L19;

  anon68_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc vslice_dummy_var_429;
    call {:si_unique_call 1680} vslice_dummy_var_250 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_429, completion_1);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L29;

  anon66_Then:
    goto L29;

  anon65_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L62;

  anon64_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L58;

  anon69_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc vslice_dummy_var_430;
    call {:si_unique_call 1681} vslice_dummy_var_248 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_430, completion_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L29;

  anon58_Then:
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L36;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L32;

  anon70_Then:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_10;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc vslice_dummy_var_431;
    call {:si_unique_call 1682} vslice_dummy_var_249 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_10, vslice_dummy_var_431, completion_1);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L29;

  anon62_Then:
    goto L29;

  anon61_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_10;
    goto L49;

  anon60_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_10;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_10;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_10: int, actual_Irp_10: int) returns (Tmp_173: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_11: int, actual_Irp_11: int, actual_Context_4: int, actual_Completion: int) returns (Tmp_177: int)
{
  var {:scalar} Status_2: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_11: int;
  var {:pointer} Context_4: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_11 := actual_Irp_11;
    Context_4 := actual_Context_4;
    Completion := actual_Completion;
    call {:si_unique_call 1683} irpsp := sdv_IoGetNextIrpStackLocation(Irp_11);
    Status_2 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant253;
    call {:si_unique_call 1684} Status_2 := AvCip_ProcessAttachBuffer_CR(DeviceObject_11, Irp_11, Context_4);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant247;
    call {:si_unique_call 1685} Status_2 := AvCip_ProcessListenPacket#0(DeviceObject_11, Irp_11, Context_4);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant246;
    call {:si_unique_call 1686} Status_2 := AvCip_ProcessTalkPacket#0(DeviceObject_11, Irp_11, Context_4);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant318;
    call {:si_unique_call 1687} Status_2 := AvFcp_SendFcpCR#0(DeviceObject_11, Irp_11, Context_4);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant452;
    call {:si_unique_call 1688} Status_2 := Av_FDO_PowerComplete(DeviceObject_11, Irp_11, Context_4);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant219;
    call {:si_unique_call 1689} Status_2 := Av_SynchCompletionRoutine(DeviceObject_11, Irp_11, Context_4);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L96;

  L96:
    Tmp_177 := Status_2;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant219;
    goto L96;

  anon24_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant452;
    goto L79;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant318;
    goto L62;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant246;
    goto L45;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant247;
    goto L28;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant253;
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_11: int, actual_Irp_11: int, actual_Context_4: int, actual_Completion: int) returns (Tmp_177: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_11: int, actual_Irp_11: int, actual_Context_4: int, actual_Completion: int) returns (Tmp_177: int)
{
  var {:scalar} Status_2: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_11: int;
  var {:pointer} Context_4: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_11 := actual_Irp_11;
    Context_4 := actual_Context_4;
    Completion := actual_Completion;
    call {:si_unique_call 1690} irpsp := sdv_IoGetNextIrpStackLocation(Irp_11);
    Status_2 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant253;
    call {:si_unique_call 1691} Status_2 := AvCip_ProcessAttachBuffer_CR(DeviceObject_11, Irp_11, Context_4);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant247;
    call {:si_unique_call 1692} Status_2 := AvCip_ProcessListenPacket#1(DeviceObject_11, Irp_11, Context_4);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant246;
    call {:si_unique_call 1693} Status_2 := AvCip_ProcessTalkPacket#1(DeviceObject_11, Irp_11, Context_4);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant318;
    call {:si_unique_call 1694} Status_2 := AvFcp_SendFcpCR#1(DeviceObject_11, Irp_11, Context_4);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant452;
    call {:si_unique_call 1695} Status_2 := Av_FDO_PowerComplete(DeviceObject_11, Irp_11, Context_4);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant219;
    call {:si_unique_call 1696} Status_2 := Av_SynchCompletionRoutine(DeviceObject_11, Irp_11, Context_4);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L96;

  L96:
    Tmp_177 := Status_2;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant219;
    goto L96;

  anon24_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant452;
    goto L79;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant318;
    goto L62;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant246;
    goto L45;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant247;
    goto L28;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant253;
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_11: int, actual_Irp_11: int, actual_Context_4: int, actual_Completion: int) returns (Tmp_177: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#0(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorData_1: int) returns (Tmp_335: int)
{
  var {:scalar} i_1: int;
  var {:pointer} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:scalar} sdv_278: int;
  var {:scalar} Status_10: int;
  var {:scalar} Tmp_338: int;
  var {:pointer} CipData_4: int;
  var {:scalar} sdv_279: int;
  var {:pointer} Tmp_339: int;
  var {:scalar} CopySize: int;
  var {:pointer} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:scalar} TsHeader: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_345: int;
  var {:scalar} Irql_7: int;
  var {:scalar} timestamp: int;
  var {:pointer} BusBuffer: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} FrameContext_1: int;
  var {:scalar} SourceLength: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Irp_23: int;
  var {:pointer} DescriptorData_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;

  anon0:
    call {:si_unique_call 1697} TsHeader := __HAVOC_malloc(8);
    call {:si_unique_call 1698} timestamp := __HAVOC_malloc(40);
    Irp_23 := actual_Irp_23;
    DescriptorData_1 := actual_DescriptorData_1;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc Status_10;
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc CipData_4;
    FrameContext_1 := 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Status_10 >= 0;
    call {:si_unique_call 1699} Tmp_345 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    call {:si_unique_call 1700} sdv_KeAcquireSpinLock(0, Tmp_345);
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    havoc Irql_7;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1701} sdv_278 := sdv_IsListEmpty(0);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_278 != 0;
    goto L26;

  L26:
    i_1 := 0;
    goto L27;

  L27:
    call {:si_unique_call 1702} i_1, Tmp_336, Tmp_337, Tmp_338, sdv_279, Tmp_339, CopySize, Tmp_342, Tmp_343, Tmp_344, BusBuffer, Tmp_346, FrameContext_1, SourceLength, Tmp_348, boogieTmp, vslice_dummy_var_252 := AvCip_ProcessListenPacket#0_loop_L27(i_1, Tmp_336, Tmp_337, Tmp_338, CipData_4, sdv_279, Tmp_339, CopySize, Tmp_342, Tmp_343, TsHeader, Tmp_344, timestamp, BusBuffer, Tmp_346, FrameContext_1, SourceLength, Tmp_348, DescriptorData_1, boogieTmp, vslice_dummy_var_252);
    goto L27_last;

  L27_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc BusBuffer;
    call {:si_unique_call 1703} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} TsHeader != 0;
    assume TsHeader > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1704} boogieTmp := corral_nondet();
    call {:si_unique_call 1705} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1706} boogieTmp := corral_nondet();
    call {:si_unique_call 1707} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L50;

  L50:
    i_1 := i_1 + 1;
    goto L50_dummy;

  L50_dummy:
    assume false;
    return;

  anon101_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc Tmp_338;
    goto L53;

  L53:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1708} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1709} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc SourceLength;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    SourceLength := SourceLength - 4;
    goto L65;

  L65:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L61;

  L61:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto L68;

  L68:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L131;

  L131:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} FrameContext_1 != 0;
    call {:si_unique_call 1710} vslice_dummy_var_252 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, 1);
    FrameContext_1 := 0;
    goto L50;

  anon99_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L50;

  anon82_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L131;

  anon84_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L131;

  anon85_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L131;

  anon86_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto L131;

  anon87_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L131;

  anon88_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L131;

  anon89_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L131;

  anon90_Then:
    goto L87;

  L87:
    call {:si_unique_call 1711} Tmp_336, Tmp_337, sdv_279, Tmp_339, CopySize, Tmp_343, Tmp_344, Tmp_346, FrameContext_1, Tmp_348, boogieTmp := AvCip_ProcessListenPacket#0_loop_L87(Tmp_336, Tmp_337, CipData_4, sdv_279, Tmp_339, CopySize, Tmp_343, Tmp_344, timestamp, BusBuffer, Tmp_346, FrameContext_1, Tmp_348, boogieTmp);
    goto L87_last;

  L87_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc CopySize;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_339 := BusBuffer;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    goto L93;

  L93:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    CopySize := CopySize - 4;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1712} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L108;

  L108:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_337;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_343;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    goto L110;

  L110:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 1713} sdv_279 := AvCip_ValidateSourcePacket(CipData_4, FrameContext_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} sdv_279 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_344;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_348;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_336;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_346;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    goto L112;

  L112:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 1714} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, 0);
    goto L89;

  L89:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1715} boogieTmp := corral_nondet();
    goto L89_dummy;

  L89_dummy:
    assume false;
    return;

  anon97_Then:
    goto L89;

  anon106_Then:
    goto L112;

  anon98_Then:
    assume {:partition} sdv_279 == 0;
    goto L112;

  anon96_Then:
    goto L112;

  anon105_Then:
    goto L110;

  anon95_Then:
    goto L100;

  L100:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1716} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L108;

  anon93_Then:
    goto L100;

  anon94_Then:
    goto L93;

  anon104_Then:
    goto L93;

  anon92_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L89;

  anon91_Then:
    goto L50;

  anon83_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_342;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    goto L68;

  anon109_Then:
    goto L68;

  anon108_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L68;

  anon107_Then:
    goto L68;

  anon80_Then:
    goto L68;

  anon81_Then:
    goto L50;

  anon103_Then:
    goto L65;

  anon79_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L61;

  anon78_Then:
    goto L50;

  anon102_Then:
    goto L50;

  anon77_Then:
    Tmp_338 := 1024;
    goto L53;

  anon76_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1717} sdv_KeReleaseSpinLock(0, Irql_7);
    call {:si_unique_call 1718} vslice_dummy_var_253 := AvCip_ProcessAttachBuffer#0(CipData_4, DescriptorData_1);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto L143;

  L143:
    Tmp_335 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    assume {:partition} sdv_278 == 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc FrameContext_1;
    goto L26;

  anon100_Then:
    assume {:partition} 0 > Status_10;
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    call {:si_unique_call 1719} vslice_dummy_var_251 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_1), 0);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L143;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#0(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorData_1: int) returns (Tmp_335: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#1(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorData_1: int) returns (Tmp_335: int)
{
  var {:scalar} i_1: int;
  var {:pointer} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:scalar} sdv_278: int;
  var {:scalar} Status_10: int;
  var {:scalar} Tmp_338: int;
  var {:pointer} CipData_4: int;
  var {:scalar} sdv_279: int;
  var {:pointer} Tmp_339: int;
  var {:scalar} CopySize: int;
  var {:pointer} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:scalar} TsHeader: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_345: int;
  var {:scalar} Irql_7: int;
  var {:scalar} timestamp: int;
  var {:pointer} BusBuffer: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} FrameContext_1: int;
  var {:scalar} SourceLength: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Irp_23: int;
  var {:pointer} DescriptorData_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;

  anon0:
    call {:si_unique_call 1720} TsHeader := __HAVOC_malloc(8);
    call {:si_unique_call 1721} timestamp := __HAVOC_malloc(40);
    Irp_23 := actual_Irp_23;
    DescriptorData_1 := actual_DescriptorData_1;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc Status_10;
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc CipData_4;
    FrameContext_1 := 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Status_10 >= 0;
    call {:si_unique_call 1722} Tmp_345 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    call {:si_unique_call 1723} sdv_KeAcquireSpinLock(0, Tmp_345);
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    havoc Irql_7;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1724} sdv_278 := sdv_IsListEmpty(0);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_278 != 0;
    goto L26;

  L26:
    i_1 := 0;
    goto L27;

  L27:
    call {:si_unique_call 1725} i_1, Tmp_336, Tmp_337, Tmp_338, sdv_279, Tmp_339, CopySize, Tmp_342, Tmp_343, Tmp_344, BusBuffer, Tmp_346, FrameContext_1, SourceLength, Tmp_348, boogieTmp, vslice_dummy_var_255 := AvCip_ProcessListenPacket#1_loop_L27(i_1, Tmp_336, Tmp_337, Tmp_338, CipData_4, sdv_279, Tmp_339, CopySize, Tmp_342, Tmp_343, TsHeader, Tmp_344, timestamp, BusBuffer, Tmp_346, FrameContext_1, SourceLength, Tmp_348, DescriptorData_1, boogieTmp, vslice_dummy_var_255);
    goto L27_last;

  L27_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    havoc BusBuffer;
    call {:si_unique_call 1726} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} TsHeader != 0;
    assume TsHeader > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1727} boogieTmp := corral_nondet();
    call {:si_unique_call 1728} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1729} boogieTmp := corral_nondet();
    call {:si_unique_call 1730} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L50;

  L50:
    i_1 := i_1 + 1;
    goto L50_dummy;

  L50_dummy:
    assume false;
    return;

  anon101_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc Tmp_338;
    goto L53;

  L53:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1731} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1732} boogieTmp := corral_nondet();
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc SourceLength;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    SourceLength := SourceLength - 4;
    goto L65;

  L65:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L61;

  L61:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto L68;

  L68:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L131;

  L131:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} FrameContext_1 != 0;
    call {:si_unique_call 1733} vslice_dummy_var_255 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, 1);
    FrameContext_1 := 0;
    goto L50;

  anon99_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L50;

  anon82_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L131;

  anon84_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L131;

  anon85_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L131;

  anon86_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto L131;

  anon87_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L131;

  anon88_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L131;

  anon89_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L131;

  anon90_Then:
    goto L87;

  L87:
    call {:si_unique_call 1734} Tmp_336, Tmp_337, sdv_279, Tmp_339, CopySize, Tmp_343, Tmp_344, Tmp_346, FrameContext_1, Tmp_348, boogieTmp := AvCip_ProcessListenPacket#1_loop_L87(Tmp_336, Tmp_337, CipData_4, sdv_279, Tmp_339, CopySize, Tmp_343, Tmp_344, timestamp, BusBuffer, Tmp_346, FrameContext_1, Tmp_348, boogieTmp);
    goto L87_last;

  L87_last:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc CopySize;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_339 := BusBuffer;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} timestamp != 0;
    assume timestamp > 0;
    goto L93;

  L93:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    CopySize := CopySize - 4;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1735} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L108;

  L108:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_337;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_343;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    goto L110;

  L110:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 1736} sdv_279 := AvCip_ValidateSourcePacket(CipData_4, FrameContext_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} sdv_279 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_344;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_348;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_336;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_346;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    goto L112;

  L112:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 1737} FrameContext_1 := AvCip_ListenFrameNotification(CipData_4, FrameContext_1, 0);
    goto L89;

  L89:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1738} boogieTmp := corral_nondet();
    goto L89_dummy;

  L89_dummy:
    assume false;
    return;

  anon97_Then:
    goto L89;

  anon106_Then:
    goto L112;

  anon98_Then:
    assume {:partition} sdv_279 == 0;
    goto L112;

  anon96_Then:
    goto L112;

  anon105_Then:
    goto L110;

  anon95_Then:
    goto L100;

  L100:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    call {:si_unique_call 1739} sdv_RtlCopyMemory(0, 0, CopySize);
    goto L108;

  anon93_Then:
    goto L100;

  anon94_Then:
    goto L93;

  anon104_Then:
    goto L93;

  anon92_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L89;

  anon91_Then:
    goto L50;

  anon83_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} FrameContext_1 != 0;
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} FrameContext_1 != 0;
    assume FrameContext_1 > 0;
    havoc Tmp_342;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    goto L68;

  anon109_Then:
    goto L68;

  anon108_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L68;

  anon107_Then:
    goto L68;

  anon80_Then:
    goto L68;

  anon81_Then:
    goto L50;

  anon103_Then:
    goto L65;

  anon79_Then:
    assume {:partition} FrameContext_1 == 0;
    goto L61;

  anon78_Then:
    goto L50;

  anon102_Then:
    goto L50;

  anon77_Then:
    Tmp_338 := 1024;
    goto L53;

  anon76_Then:
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    call {:si_unique_call 1740} sdv_KeReleaseSpinLock(0, Irql_7);
    call {:si_unique_call 1741} vslice_dummy_var_256 := AvCip_ProcessAttachBuffer#1(CipData_4, DescriptorData_1);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto L143;

  L143:
    Tmp_335 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    assume {:partition} sdv_278 == 0;
    assume {:nonnull} CipData_4 != 0;
    assume CipData_4 > 0;
    havoc FrameContext_1;
    goto L26;

  anon100_Then:
    assume {:partition} 0 > Status_10;
    assume {:nonnull} DescriptorData_1 != 0;
    assume DescriptorData_1 > 0;
    call {:si_unique_call 1742} vslice_dummy_var_254 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_1), 0);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L143;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCip_ProcessListenPacket"} AvCip_ProcessListenPacket#1(actual_DeviceObject_23: int, actual_Irp_23: int, actual_DescriptorData_1: int) returns (Tmp_335: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#0(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_436: int)
{
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:scalar} Time: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} sdv_339: int;
  var {:pointer} Tmp_441: int;
  var {:scalar} Status_26: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} NextIrpStack_1: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} CipData_23: int;
  var {:pointer} DescriptorData_8: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;

  anon0:
    call {:si_unique_call 1743} Time := __HAVOC_malloc(20);
    CipData_23 := actual_CipData_23;
    DescriptorData_8 := actual_DescriptorData_8;
    call {:si_unique_call 1744} Tmp_442 := __HAVOC_malloc(360);
    Status_26 := 0;
    call {:si_unique_call 1745} sdv_339 := corral_nondet();
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_339 != 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    call {:si_unique_call 1746} vslice_dummy_var_257 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_8), 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L16;

  L16:
    Tmp_436 := Status_26;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} sdv_339 == 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_432;
    call {:si_unique_call 1747} IoReuseIrp(vslice_dummy_var_432, 0);
    call {:si_unique_call 1748} sdv_RtlZeroMemory(0, 344);
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_438;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_444;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_441;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_441 != 0;
    assume Tmp_441 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    goto L27;

  L27:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_433;
    call {:si_unique_call 1749} NextIrpStack_1 := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_433);
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    call {:si_unique_call 1750} vslice_dummy_var_261 := KeSetTimer(0, Time, 0);
    goto L36;

  L36:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_434;
    call {:si_unique_call 1751} sdv_IoSetCompletionRoutine(vslice_dummy_var_434, li2bplFunctionConstant253, DescriptorData_8, 1, 1, 1);
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    assume false;
    return;

  anon22_Then:
    goto L36;

  anon21_Then:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    goto L27;
}



procedure {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#0(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_436: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#1(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_436: int)
{
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:scalar} Time: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} sdv_339: int;
  var {:pointer} Tmp_441: int;
  var {:scalar} Status_26: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} NextIrpStack_1: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} CipData_23: int;
  var {:pointer} DescriptorData_8: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;

  anon0:
    call {:si_unique_call 1752} Time := __HAVOC_malloc(20);
    CipData_23 := actual_CipData_23;
    DescriptorData_8 := actual_DescriptorData_8;
    call {:si_unique_call 1753} Tmp_442 := __HAVOC_malloc(360);
    Status_26 := 0;
    call {:si_unique_call 1754} sdv_339 := corral_nondet();
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_339 != 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    call {:si_unique_call 1755} vslice_dummy_var_262 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_8), 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L16;

  L16:
    Tmp_436 := Status_26;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} sdv_339 == 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_435;
    call {:si_unique_call 1756} IoReuseIrp(vslice_dummy_var_435, 0);
    call {:si_unique_call 1757} sdv_RtlZeroMemory(0, 344);
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_438;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_444;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_441;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_441 != 0;
    assume Tmp_441 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    goto L27;

  L27:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_436;
    call {:si_unique_call 1758} NextIrpStack_1 := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_436);
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    call {:si_unique_call 1759} vslice_dummy_var_266 := KeSetTimer(0, Time, 0);
    goto L36;

  L36:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_437;
    call {:si_unique_call 1760} sdv_IoSetCompletionRoutine(vslice_dummy_var_437, li2bplFunctionConstant253, DescriptorData_8, 1, 1, 1);
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc vslice_dummy_var_438;
    havoc vslice_dummy_var_439;
    call {:si_unique_call 1761} Status_26 := sdv_IoCallDriver#0(vslice_dummy_var_438, vslice_dummy_var_439);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Status_26 < 0;
    assume {:nonnull} CipData_23 != 0;
    assume CipData_23 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L48;

  L48:
    call {:si_unique_call 1762} vslice_dummy_var_264 := corral_nondet();
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    call {:si_unique_call 1763} vslice_dummy_var_265 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_8), 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L16;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    call {:si_unique_call 1764} vslice_dummy_var_263 := KeCancelTimer(0);
    goto L48;

  anon18_Then:
    assume {:partition} 0 <= Status_26;
    goto L16;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    goto L36;

  anon21_Then:
    assume {:nonnull} DescriptorData_8 != 0;
    assume DescriptorData_8 > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    goto L27;
}



procedure {:origName "AvCip_ProcessAttachBuffer"} AvCip_ProcessAttachBuffer#1(actual_CipData_23: int, actual_DescriptorData_8: int) returns (Tmp_436: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#0(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorData_4: int) returns (Tmp_376: int)
{
  var {:scalar} Status_19: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} CipData_16: int;
  var {:scalar} Irql_9: int;
  var {:pointer} Irp_27: int;
  var {:pointer} DescriptorData_4: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;

  anon0:
    Irp_27 := actual_Irp_27;
    DescriptorData_4 := actual_DescriptorData_4;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    havoc Status_19;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    havoc CipData_16;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_19 >= 0;
    call {:si_unique_call 1765} Tmp_377 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    call {:si_unique_call 1766} sdv_KeAcquireSpinLock(0, Tmp_377);
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    havoc Irql_9;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1767} vslice_dummy_var_270 := AvCip_HandleFrameNotification(CipData_16, DescriptorData_4);
    call {:si_unique_call 1768} Status_19 := AvCip_ProcessTalkPacket_2(CipData_16, DescriptorData_4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Status_19 >= 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1769} sdv_KeReleaseSpinLock(0, Irql_9);
    call {:si_unique_call 1770} vslice_dummy_var_268 := AvCip_ProcessAttachBuffer#0(CipData_16, DescriptorData_4);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  L34:
    Tmp_376 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 > Status_19;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1771} sdv_KeReleaseSpinLock(0, Irql_9);
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1772} vslice_dummy_var_269 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} 0 > Status_19;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1773} vslice_dummy_var_267 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#0(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorData_4: int) returns (Tmp_376: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#1(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorData_4: int) returns (Tmp_376: int)
{
  var {:scalar} Status_19: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} CipData_16: int;
  var {:scalar} Irql_9: int;
  var {:pointer} Irp_27: int;
  var {:pointer} DescriptorData_4: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;

  anon0:
    Irp_27 := actual_Irp_27;
    DescriptorData_4 := actual_DescriptorData_4;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    havoc Status_19;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    havoc CipData_16;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_19 >= 0;
    call {:si_unique_call 1774} Tmp_377 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    call {:si_unique_call 1775} sdv_KeAcquireSpinLock(0, Tmp_377);
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    havoc Irql_9;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1776} vslice_dummy_var_274 := AvCip_HandleFrameNotification(CipData_16, DescriptorData_4);
    call {:si_unique_call 1777} Status_19 := AvCip_ProcessTalkPacket_2(CipData_16, DescriptorData_4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Status_19 >= 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1778} sdv_KeReleaseSpinLock(0, Irql_9);
    call {:si_unique_call 1779} vslice_dummy_var_272 := AvCip_ProcessAttachBuffer#1(CipData_16, DescriptorData_4);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  L34:
    Tmp_376 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 > Status_19;
    assume {:nonnull} CipData_16 != 0;
    assume CipData_16 > 0;
    call {:si_unique_call 1780} sdv_KeReleaseSpinLock(0, Irql_9);
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1781} vslice_dummy_var_273 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} 0 > Status_19;
    assume {:nonnull} DescriptorData_4 != 0;
    assume DescriptorData_4 > 0;
    call {:si_unique_call 1782} vslice_dummy_var_271 := sdv_IoReleaseRemoveLock(IoLock__CIP_DESCRIPTOR_DATA(DescriptorData_4), 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvCip_ProcessTalkPacket"} AvCip_ProcessTalkPacket#1(actual_DeviceObject_25: int, actual_Irp_27: int, actual_DescriptorData_4: int) returns (Tmp_376: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_SendFcpCR"} AvFcp_SendFcpCR#0(actual_DeviceObject_26: int, actual_Irp_40: int, actual_CRStructIn: int) returns (Tmp_513: int)
{
  var {:pointer} CRStruct_2: int;
  var {:pointer} RequestIrp_2: int;
  var {:scalar} ntStatus_25: int;
  var {:pointer} BusExtension_28: int;
  var {:pointer} Irp_40: int;
  var {:pointer} CRStructIn: int;
  var vslice_dummy_var_440: int;

  anon0:
    Irp_40 := actual_Irp_40;
    CRStructIn := actual_CRStructIn;
    CRStruct_2 := CRStructIn;
    assume {:nonnull} Irp_40 != 0;
    assume Irp_40 > 0;
    havoc ntStatus_25;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc BusExtension_28;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc RequestIrp_2;
    call {:si_unique_call 1783} IoFreeMdl(0);
    call {:si_unique_call 1784} IoFreeIrp(0);
    assume {:nonnull} BusExtension_28 != 0;
    assume BusExtension_28 > 0;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc vslice_dummy_var_440;
    call {:si_unique_call 1785} ExFreeToNPagedLookasideList#0(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_28), vslice_dummy_var_440);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1786} sdv_ExFreePool(0);
    assume {:nonnull} RequestIrp_2 != 0;
    assume RequestIrp_2 > 0;
    call {:si_unique_call 1787} sdv_IoCompleteRequest(0, 0);
    Tmp_513 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvFcp_SendFcpCR"} AvFcp_SendFcpCR#0(actual_DeviceObject_26: int, actual_Irp_40: int, actual_CRStructIn: int) returns (Tmp_513: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AvFcp_SendFcpCR"} AvFcp_SendFcpCR#1(actual_DeviceObject_26: int, actual_Irp_40: int, actual_CRStructIn: int) returns (Tmp_513: int)
{
  var {:pointer} CRStruct_2: int;
  var {:pointer} RequestIrp_2: int;
  var {:scalar} ntStatus_25: int;
  var {:pointer} BusExtension_28: int;
  var {:pointer} Irp_40: int;
  var {:pointer} CRStructIn: int;
  var vslice_dummy_var_441: int;

  anon0:
    Irp_40 := actual_Irp_40;
    CRStructIn := actual_CRStructIn;
    CRStruct_2 := CRStructIn;
    assume {:nonnull} Irp_40 != 0;
    assume Irp_40 > 0;
    havoc ntStatus_25;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc BusExtension_28;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc RequestIrp_2;
    call {:si_unique_call 1788} IoFreeMdl(0);
    call {:si_unique_call 1789} IoFreeIrp(0);
    assume {:nonnull} BusExtension_28 != 0;
    assume BusExtension_28 > 0;
    assume {:nonnull} CRStruct_2 != 0;
    assume CRStruct_2 > 0;
    havoc vslice_dummy_var_441;
    call {:si_unique_call 1790} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_28), vslice_dummy_var_441);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1791} sdv_ExFreePool(0);
    assume {:nonnull} RequestIrp_2 != 0;
    assume RequestIrp_2 > 0;
    call {:si_unique_call 1792} sdv_IoCompleteRequest(0, 0);
    Tmp_513 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvFcp_SendFcpCR"} AvFcp_SendFcpCR#1(actual_DeviceObject_26: int, actual_Irp_40: int, actual_CRStructIn: int) returns (Tmp_513: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_1: int)
{
  var {:pointer} Tmp_750: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;

  anon0:
    call {:si_unique_call 1793} vslice_dummy_var_275 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_750 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1794} Av1394_BusResetCallback#0(Entry_1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1795} AvCmp_Hide_oMap(Entry_1);
    goto L1;

  anon20_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1796} AvCmp_Process_iMap(Entry_1);
    goto L1;

  anon19_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1797} AvCmp_Process_oMap(Entry_1);
    goto L1;

  anon18_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1798} AvFcp_ProcessRequest(Entry_1);
    goto L1;

  anon23_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1799} AvFcp_ProcessResponse(Entry_1);
    goto L1;

  anon22_Then:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L1;

  anon17_Then:
    call {:si_unique_call 1800} vslice_dummy_var_276 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_1: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_1: int)
{
  var {:pointer} Tmp_750: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;

  anon0:
    call {:si_unique_call 1801} vslice_dummy_var_277 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_750 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1802} Av1394_BusResetCallback#1(Entry_1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1803} AvCmp_Hide_oMap(Entry_1);
    goto L1;

  anon20_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1804} AvCmp_Process_iMap(Entry_1);
    goto L1;

  anon19_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1805} AvCmp_Process_oMap(Entry_1);
    goto L1;

  anon18_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1806} AvFcp_ProcessRequest(Entry_1);
    goto L1;

  anon23_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1807} AvFcp_ProcessResponse(Entry_1);
    goto L1;

  anon22_Then:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L1;

  anon17_Then:
    call {:si_unique_call 1808} vslice_dummy_var_278 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_1: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_BusResetCallback"} Av1394_BusResetCallback#0(actual_BusExtension_70: int)
{
  var {:scalar} i_5: int;
  var {:scalar} ResetInfo: int;
  var {:scalar} Tmp_840: int;
  var {:pointer} Tmp_841: int;
  var {:scalar} Tmp_842: int;
  var {:pointer} Tmp_843: int;
  var {:pointer} CmpData_17: int;
  var {:pointer} Tmp_845: int;
  var {:pointer} Tmp_848: int;
  var {:scalar} Tmp_849: int;
  var {:scalar} Tmp_850: int;
  var {:scalar} sdv_669: int;
  var {:pointer} Tmp_851: int;
  var {:pointer} PdoExtension_19: int;
  var {:scalar} sdv_670: int;
  var {:pointer} WorkItem: int;
  var {:scalar} Tmp_852: int;
  var {:pointer} Tmp_853: int;
  var {:scalar} Tmp_854: int;
  var {:pointer} Tmp_855: int;
  var {:scalar} Irql_32: int;
  var {:pointer} CurrPdoData_2: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} Tmp_858: int;
  var {:pointer} BusExtension_70: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;

  anon0:
    call {:si_unique_call 1809} ResetInfo := __HAVOC_malloc(20);
    call {:si_unique_call 1810} vslice_dummy_var_279 := __HAVOC_malloc(4);
    BusExtension_70 := actual_BusExtension_70;
    call {:si_unique_call 1811} Tmp_841 := __HAVOC_malloc(1860);
    call {:si_unique_call 1812} Tmp_843 := __HAVOC_malloc(1860);
    call {:si_unique_call 1813} vslice_dummy_var_283 := __HAVOC_malloc(1860);
    call {:si_unique_call 1814} Tmp_845 := __HAVOC_malloc(1860);
    call {:si_unique_call 1815} vslice_dummy_var_284 := __HAVOC_malloc(1860);
    call {:si_unique_call 1816} Tmp_848 := __HAVOC_malloc(1860);
    call {:si_unique_call 1817} Tmp_851 := __HAVOC_malloc(1860);
    call {:si_unique_call 1818} Tmp_858 := __HAVOC_malloc(1860);
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc CmpData_17;
    goto L15;

  L15:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} CmpData_17 != 0;
    i_5 := 0;
    goto L20;

  L20:
    call {:si_unique_call 1819} i_5, Tmp_840, Tmp_843, Tmp_848, Tmp_849, Tmp_851, Tmp_854 := Av1394_BusResetCallback#0_loop_L20(i_5, Tmp_840, Tmp_843, CmpData_17, Tmp_848, Tmp_849, sdv_669, Tmp_851, Tmp_854);
    goto L20_last;

  L20_last:
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_854 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_848;
    Tmp_849 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_843;
    assume {:nonnull} Tmp_843 != 0;
    assume Tmp_843 > 0;
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    Tmp_840 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_851;
    assume {:nonnull} Tmp_851 != 0;
    assume Tmp_851 > 0;
    i_5 := i_5 + 1;
    goto anon24_Else_dummy;

  anon24_Else_dummy:
    assume false;
    return;

  anon24_Then:
    i_5 := 0;
    goto L29;

  L29:
    call {:si_unique_call 1820} i_5, Tmp_841, Tmp_842, Tmp_845, Tmp_850, Tmp_852, Tmp_858 := Av1394_BusResetCallback#0_loop_L29(i_5, Tmp_841, Tmp_842, CmpData_17, Tmp_845, Tmp_850, sdv_670, Tmp_852, Tmp_858);
    goto L29_last;

  L29_last:
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    Tmp_842 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_845;
    Tmp_850 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_841;
    assume {:nonnull} Tmp_841 != 0;
    assume Tmp_841 > 0;
    assume {:nonnull} Tmp_845 != 0;
    assume Tmp_845 > 0;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    Tmp_852 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_858;
    assume {:nonnull} Tmp_858 != 0;
    assume Tmp_858 > 0;
    i_5 := i_5 + 1;
    goto anon25_Else_dummy;

  anon25_Else_dummy:
    assume false;
    return;

  anon25_Then:
    goto L16;

  L16:
    call {:si_unique_call 1821} vslice_dummy_var_280 := Av1394_GetGenerationCount#0(BusExtension_70);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1822} vslice_dummy_var_281 := Av1394_GetDeviceSpeed#0(BusExtension_70);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1823} vslice_dummy_var_282 := Av1394_GetNodeID#0(BusExtension_70);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1824} WorkItem := IoAllocateWorkItem(0);
    call {:si_unique_call 1825} IoQueueWorkItem(WorkItem, li2bplFunctionConstant102, 0, WorkItem);
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc CurrPdoData_2;
    goto L56;

  L56:
    call {:si_unique_call 1826} PdoExtension_19, Tmp_853, Irql_32, CurrPdoData_2, Tmp_857, vslice_dummy_var_285 := Av1394_BusResetCallback#0_loop_L56(ResetInfo, PdoExtension_19, Tmp_853, Irql_32, CurrPdoData_2, Tmp_857, BusExtension_70, vslice_dummy_var_285);
    goto L56_last;

  L56_last:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} CurrPdoData_2 != 0;
    assume CurrPdoData_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CurrPdoData_2 != 0;
    assume CurrPdoData_2 > 0;
    havoc Tmp_853;
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    havoc PdoExtension_19;
    call {:si_unique_call 1827} vslice_dummy_var_285 := Av1394_GetDeviceNodeId#0(PdoExtension_19);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1828} Tmp_857 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    call {:si_unique_call 1829} sdv_KeAcquireSpinLock(0, Tmp_857);
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    havoc Irql_32;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto L68;

  L68:
    call {:si_unique_call 1830} sdv_KeReleaseSpinLock(0, Irql_32);
    goto L59;

  L59:
    assume {:nonnull} CurrPdoData_2 != 0;
    assume CurrPdoData_2 > 0;
    havoc CurrPdoData_2;
    goto L59_dummy;

  L59_dummy:
    assume false;
    return;

  anon28_Then:
    goto L68;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    goto L59;

  anon26_Then:
    goto LM2;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} CmpData_17 == 0;
    goto L16;

  anon29_Then:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc Tmp_855;
    assume {:nonnull} Tmp_855 != 0;
    assume Tmp_855 > 0;
    havoc CmpData_17;
    goto L15;
}



procedure {:origName "Av1394_BusResetCallback"} Av1394_BusResetCallback#0(actual_BusExtension_70: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_BusResetCallback"} Av1394_BusResetCallback#1(actual_BusExtension_70: int)
{
  var {:scalar} i_5: int;
  var {:scalar} ResetInfo: int;
  var {:scalar} Tmp_840: int;
  var {:pointer} Tmp_841: int;
  var {:scalar} Tmp_842: int;
  var {:pointer} Tmp_843: int;
  var {:pointer} CmpData_17: int;
  var {:pointer} Tmp_845: int;
  var {:pointer} Tmp_848: int;
  var {:scalar} Tmp_849: int;
  var {:scalar} Tmp_850: int;
  var {:scalar} sdv_669: int;
  var {:pointer} Tmp_851: int;
  var {:pointer} PdoExtension_19: int;
  var {:scalar} sdv_670: int;
  var {:pointer} WorkItem: int;
  var {:scalar} Tmp_852: int;
  var {:pointer} Tmp_853: int;
  var {:scalar} Tmp_854: int;
  var {:pointer} Tmp_855: int;
  var {:scalar} Irql_32: int;
  var {:pointer} CurrPdoData_2: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} Tmp_858: int;
  var {:pointer} BusExtension_70: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;

  anon0:
    call {:si_unique_call 1831} ResetInfo := __HAVOC_malloc(20);
    call {:si_unique_call 1832} vslice_dummy_var_286 := __HAVOC_malloc(4);
    BusExtension_70 := actual_BusExtension_70;
    call {:si_unique_call 1833} Tmp_841 := __HAVOC_malloc(1860);
    call {:si_unique_call 1834} Tmp_843 := __HAVOC_malloc(1860);
    call {:si_unique_call 1835} vslice_dummy_var_290 := __HAVOC_malloc(1860);
    call {:si_unique_call 1836} Tmp_845 := __HAVOC_malloc(1860);
    call {:si_unique_call 1837} vslice_dummy_var_291 := __HAVOC_malloc(1860);
    call {:si_unique_call 1838} Tmp_848 := __HAVOC_malloc(1860);
    call {:si_unique_call 1839} Tmp_851 := __HAVOC_malloc(1860);
    call {:si_unique_call 1840} Tmp_858 := __HAVOC_malloc(1860);
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc CmpData_17;
    goto L15;

  L15:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} CmpData_17 != 0;
    i_5 := 0;
    goto L20;

  L20:
    call {:si_unique_call 1841} i_5, Tmp_840, Tmp_843, Tmp_848, Tmp_849, Tmp_851, Tmp_854 := Av1394_BusResetCallback#1_loop_L20(i_5, Tmp_840, Tmp_843, CmpData_17, Tmp_848, Tmp_849, sdv_669, Tmp_851, Tmp_854);
    goto L20_last;

  L20_last:
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_854 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_848;
    Tmp_849 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_843;
    assume {:nonnull} Tmp_843 != 0;
    assume Tmp_843 > 0;
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    Tmp_840 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_851;
    assume {:nonnull} Tmp_851 != 0;
    assume Tmp_851 > 0;
    i_5 := i_5 + 1;
    goto anon24_Else_dummy;

  anon24_Else_dummy:
    assume false;
    return;

  anon24_Then:
    i_5 := 0;
    goto L29;

  L29:
    call {:si_unique_call 1842} i_5, Tmp_841, Tmp_842, Tmp_845, Tmp_850, Tmp_852, Tmp_858 := Av1394_BusResetCallback#1_loop_L29(i_5, Tmp_841, Tmp_842, CmpData_17, Tmp_845, Tmp_850, sdv_670, Tmp_852, Tmp_858);
    goto L29_last;

  L29_last:
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    Tmp_842 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_845;
    Tmp_850 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_841;
    assume {:nonnull} Tmp_841 != 0;
    assume Tmp_841 > 0;
    assume {:nonnull} Tmp_845 != 0;
    assume Tmp_845 > 0;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    Tmp_852 := i_5;
    assume {:nonnull} CmpData_17 != 0;
    assume CmpData_17 > 0;
    havoc Tmp_858;
    assume {:nonnull} Tmp_858 != 0;
    assume Tmp_858 > 0;
    i_5 := i_5 + 1;
    goto anon25_Else_dummy;

  anon25_Else_dummy:
    assume false;
    return;

  anon25_Then:
    goto L16;

  L16:
    call {:si_unique_call 1843} vslice_dummy_var_287 := Av1394_GetGenerationCount#1(BusExtension_70);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1844} vslice_dummy_var_288 := Av1394_GetDeviceSpeed#1(BusExtension_70);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1845} vslice_dummy_var_289 := Av1394_GetNodeID#1(BusExtension_70);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1846} WorkItem := IoAllocateWorkItem(0);
    call {:si_unique_call 1847} IoQueueWorkItem(WorkItem, li2bplFunctionConstant102, 0, WorkItem);
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc CurrPdoData_2;
    goto L56;

  L56:
    call {:si_unique_call 1848} PdoExtension_19, Tmp_853, Irql_32, CurrPdoData_2, Tmp_857, vslice_dummy_var_292 := Av1394_BusResetCallback#1_loop_L56(ResetInfo, PdoExtension_19, Tmp_853, Irql_32, CurrPdoData_2, Tmp_857, BusExtension_70, vslice_dummy_var_292);
    goto L56_last;

  L56_last:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} CurrPdoData_2 != 0;
    assume CurrPdoData_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CurrPdoData_2 != 0;
    assume CurrPdoData_2 > 0;
    havoc Tmp_853;
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    havoc PdoExtension_19;
    call {:si_unique_call 1849} vslice_dummy_var_292 := Av1394_GetDeviceNodeId#1(PdoExtension_19);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1850} Tmp_857 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    call {:si_unique_call 1851} sdv_KeAcquireSpinLock(0, Tmp_857);
    assume {:nonnull} Tmp_857 != 0;
    assume Tmp_857 > 0;
    havoc Irql_32;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    assume {:nonnull} ResetInfo != 0;
    assume ResetInfo > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto L68;

  L68:
    call {:si_unique_call 1852} sdv_KeReleaseSpinLock(0, Irql_32);
    goto L59;

  L59:
    assume {:nonnull} CurrPdoData_2 != 0;
    assume CurrPdoData_2 > 0;
    havoc CurrPdoData_2;
    goto L59_dummy;

  L59_dummy:
    assume false;
    return;

  anon28_Then:
    goto L68;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    goto L59;

  anon26_Then:
    goto LM2;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} CmpData_17 == 0;
    goto L16;

  anon29_Then:
    assume {:nonnull} BusExtension_70 != 0;
    assume BusExtension_70 > 0;
    havoc Tmp_855;
    assume {:nonnull} Tmp_855 != 0;
    assume Tmp_855 > 0;
    havoc CmpData_17;
    goto L15;
}



procedure {:origName "Av1394_BusResetCallback"} Av1394_BusResetCallback#1(actual_BusExtension_70: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetGenerationCount"} Av1394_GetGenerationCount#0(actual_BusExtension_75: int) returns (Tmp_875: int)
{
  var {:pointer} Irp_73: int;
  var {:pointer} Irb_34: int;
  var {:scalar} StackSize_28: int;
  var {:pointer} sdv_694: int;
  var {:scalar} ntStatus_71: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} BusExtension_75: int;

  anon0:
    BusExtension_75 := actual_BusExtension_75;
    ntStatus_71 := 0;
    Irp_73 := 0;
    Irb_34 := 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_71 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_73 != 0;
    call {:si_unique_call 1853} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_34 != 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    assume false;
    return;

  anon21_Then:
    assume {:partition} Irb_34 == 0;
    goto L20;

  L20:
    Tmp_875 := ntStatus_71;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} Irp_73 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    havoc Tmp_877;
    assume {:nonnull} Tmp_877 != 0;
    assume Tmp_877 > 0;
    havoc StackSize_28;
    call {:si_unique_call 1854} Irp_73 := IoAllocateIrp(StackSize_28, 0);
    call {:si_unique_call 1855} sdv_694 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_34 := sdv_694;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_73 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_34 != 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    assume false;
    return;

  anon22_Then:
    assume {:partition} Irb_34 == 0;
    goto L33;

  L33:
    ntStatus_71 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_73 == 0;
    goto L33;

  anon24_Then:
    goto L11;
}



procedure {:origName "Av1394_GetGenerationCount"} Av1394_GetGenerationCount#0(actual_BusExtension_75: int) returns (Tmp_875: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_875 == -1073741811 || Tmp_875 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetGenerationCount"} Av1394_GetGenerationCount#1(actual_BusExtension_75: int) returns (Tmp_875: int)
{
  var {:pointer} Irp_73: int;
  var {:pointer} Irb_34: int;
  var {:scalar} StackSize_28: int;
  var {:pointer} sdv_694: int;
  var {:scalar} ntStatus_71: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} BusExtension_75: int;
  var vslice_dummy_var_442: int;

  anon0:
    BusExtension_75 := actual_BusExtension_75;
    ntStatus_71 := 0;
    Irp_73 := 0;
    Irb_34 := 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_71 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_73 != 0;
    call {:si_unique_call 1856} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_34 != 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    call {:si_unique_call 1857} ExFreeToNPagedLookasideList#0(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_75), Irb_34);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_875 := ntStatus_71;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_34 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_73 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    havoc Tmp_877;
    assume {:nonnull} Tmp_877 != 0;
    assume Tmp_877 > 0;
    havoc StackSize_28;
    call {:si_unique_call 1858} Irp_73 := IoAllocateIrp(StackSize_28, 0);
    call {:si_unique_call 1859} sdv_694 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_34 := sdv_694;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_73 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_34 != 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    havoc vslice_dummy_var_442;
    call {:si_unique_call 1860} ntStatus_71 := Av_SubmitIrpSynch#0(vslice_dummy_var_442, Irp_73, Irb_34);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_71 >= 0;
    assume {:nonnull} BusExtension_75 != 0;
    assume BusExtension_75 > 0;
    assume {:nonnull} Irb_34 != 0;
    assume Irb_34 > 0;
    goto L15;

  anon23_Then:
    assume {:partition} 0 > ntStatus_71;
    goto L15;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Irb_34 == 0;
    goto L33;

  L33:
    ntStatus_71 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_73 == 0;
    goto L33;

  anon24_Then:
    goto L11;
}



procedure {:origName "Av1394_GetGenerationCount"} Av1394_GetGenerationCount#1(actual_BusExtension_75: int) returns (Tmp_875: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetDeviceSpeed"} Av1394_GetDeviceSpeed#0(actual_BusExtension_56: int) returns (Tmp_745: int)
{
  var {:pointer} Irp_55: int;
  var {:pointer} Irb_18: int;
  var {:pointer} Tmp_746: int;
  var {:scalar} StackSize_12: int;
  var {:pointer} sdv_564: int;
  var {:scalar} ntStatus_51: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} BusExtension_56: int;

  anon0:
    BusExtension_56 := actual_BusExtension_56;
    call {:si_unique_call 1861} Tmp_746 := __HAVOC_malloc(256);
    ntStatus_51 := 0;
    Irp_55 := 0;
    Irb_18 := 0;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    ntStatus_51 := -1073741811;
    goto L15;

  L15:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irp_55 != 0;
    call {:si_unique_call 1862} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irb_18 != 0;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    assume false;
    return;

  anon23_Then:
    assume {:partition} Irb_18 == 0;
    goto L20;

  L20:
    Tmp_745 := ntStatus_51;
    goto LM2;

  LM2:
    return;

  anon22_Then:
    assume {:partition} Irp_55 == 0;
    goto L16;

  anon21_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    havoc Tmp_748;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    havoc StackSize_12;
    call {:si_unique_call 1863} Irp_55 := IoAllocateIrp(StackSize_12, 0);
    call {:si_unique_call 1864} sdv_564 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_18 := sdv_564;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_55 != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Irb_18 != 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    havoc Tmp_746;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    assume false;
    return;

  anon24_Then:
    assume {:partition} Irb_18 == 0;
    goto L33;

  L33:
    ntStatus_51 := -1073741670;
    goto L15;

  anon29_Then:
    assume {:partition} Irp_55 == 0;
    goto L33;

  anon27_Then:
    goto L11;
}



procedure {:origName "Av1394_GetDeviceSpeed"} Av1394_GetDeviceSpeed#0(actual_BusExtension_56: int) returns (Tmp_745: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_745 == -1073741811 || Tmp_745 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetDeviceSpeed"} Av1394_GetDeviceSpeed#1(actual_BusExtension_56: int) returns (Tmp_745: int)
{
  var {:pointer} Irp_55: int;
  var {:pointer} Irb_18: int;
  var {:pointer} Tmp_746: int;
  var {:scalar} StackSize_12: int;
  var {:pointer} sdv_564: int;
  var {:scalar} ntStatus_51: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} BusExtension_56: int;
  var vslice_dummy_var_443: int;

  anon0:
    BusExtension_56 := actual_BusExtension_56;
    call {:si_unique_call 1865} Tmp_746 := __HAVOC_malloc(256);
    ntStatus_51 := 0;
    Irp_55 := 0;
    Irb_18 := 0;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    ntStatus_51 := -1073741811;
    goto L15;

  L15:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irp_55 != 0;
    call {:si_unique_call 1866} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irb_18 != 0;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    call {:si_unique_call 1867} ExFreeToNPagedLookasideList#0(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_56), Irb_18);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_745 := ntStatus_51;
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} Irb_18 == 0;
    goto L20;

  anon22_Then:
    assume {:partition} Irp_55 == 0;
    goto L16;

  anon21_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    havoc Tmp_748;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    havoc StackSize_12;
    call {:si_unique_call 1868} Irp_55 := IoAllocateIrp(StackSize_12, 0);
    call {:si_unique_call 1869} sdv_564 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_18 := sdv_564;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_55 != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Irb_18 != 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    havoc Tmp_746;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    havoc vslice_dummy_var_443;
    call {:si_unique_call 1870} ntStatus_51 := Av_SubmitIrpSynch#0(vslice_dummy_var_443, Irp_55, Irb_18);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} ntStatus_51 >= 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    goto L15;

  anon26_Then:
    assume {:nonnull} BusExtension_56 != 0;
    assume BusExtension_56 > 0;
    assume {:nonnull} Irb_18 != 0;
    assume Irb_18 > 0;
    goto L15;

  anon25_Then:
    assume {:partition} 0 > ntStatus_51;
    goto L15;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:partition} Irb_18 == 0;
    goto L33;

  L33:
    ntStatus_51 := -1073741670;
    goto L15;

  anon29_Then:
    assume {:partition} Irp_55 == 0;
    goto L33;

  anon27_Then:
    goto L11;
}



procedure {:origName "Av1394_GetDeviceSpeed"} Av1394_GetDeviceSpeed#1(actual_BusExtension_56: int) returns (Tmp_745: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetNodeID"} Av1394_GetNodeID#0(actual_BusExtension_65: int) returns (Tmp_819: int)
{
  var {:pointer} Irp_63: int;
  var {:pointer} Irb_26: int;
  var {:pointer} Tmp_820: int;
  var {:scalar} StackSize_20: int;
  var {:pointer} sdv_646: int;
  var {:scalar} ntStatus_60: int;
  var {:pointer} BusExtension_65: int;

  anon0:
    BusExtension_65 := actual_BusExtension_65;
    ntStatus_60 := 0;
    Irp_63 := 0;
    Irb_26 := 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_60 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_63 != 0;
    call {:si_unique_call 1871} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_26 != 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume false;
    return;

  anon21_Then:
    assume {:partition} Irb_26 == 0;
    goto L20;

  L20:
    Tmp_819 := ntStatus_60;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} Irp_63 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    havoc Tmp_820;
    assume {:nonnull} Tmp_820 != 0;
    assume Tmp_820 > 0;
    havoc StackSize_20;
    call {:si_unique_call 1872} Irp_63 := IoAllocateIrp(StackSize_20, 0);
    call {:si_unique_call 1873} sdv_646 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_26 := sdv_646;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_63 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_26 != 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume false;
    return;

  anon22_Then:
    assume {:partition} Irb_26 == 0;
    goto L33;

  L33:
    ntStatus_60 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_63 == 0;
    goto L33;

  anon24_Then:
    goto L11;
}



procedure {:origName "Av1394_GetNodeID"} Av1394_GetNodeID#0(actual_BusExtension_65: int) returns (Tmp_819: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_819 == -1073741811 || Tmp_819 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetNodeID"} Av1394_GetNodeID#1(actual_BusExtension_65: int) returns (Tmp_819: int)
{
  var {:pointer} Irp_63: int;
  var {:pointer} Irb_26: int;
  var {:pointer} Tmp_820: int;
  var {:scalar} StackSize_20: int;
  var {:pointer} sdv_646: int;
  var {:scalar} ntStatus_60: int;
  var {:pointer} BusExtension_65: int;
  var vslice_dummy_var_444: int;

  anon0:
    BusExtension_65 := actual_BusExtension_65;
    ntStatus_60 := 0;
    Irp_63 := 0;
    Irb_26 := 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_60 := -1073741811;
    goto L15;

  L15:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_63 != 0;
    call {:si_unique_call 1874} IoFreeIrp(0);
    goto L16;

  L16:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_26 != 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    call {:si_unique_call 1875} ExFreeToNPagedLookasideList#0(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_65), Irb_26);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    Tmp_819 := ntStatus_60;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_26 == 0;
    goto L20;

  anon20_Then:
    assume {:partition} Irp_63 == 0;
    goto L16;

  anon19_Then:
    goto L11;

  L11:
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    havoc Tmp_820;
    assume {:nonnull} Tmp_820 != 0;
    assume Tmp_820 > 0;
    havoc StackSize_20;
    call {:si_unique_call 1876} Irp_63 := IoAllocateIrp(StackSize_20, 0);
    call {:si_unique_call 1877} sdv_646 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_26 := sdv_646;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_63 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_26 != 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    havoc vslice_dummy_var_444;
    call {:si_unique_call 1878} ntStatus_60 := Av_SubmitIrpSynch#0(vslice_dummy_var_444, Irp_63, Irb_26);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_60 >= 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    assume {:nonnull} BusExtension_65 != 0;
    assume BusExtension_65 > 0;
    assume {:nonnull} Irb_26 != 0;
    assume Irb_26 > 0;
    goto L15;

  anon23_Then:
    assume {:partition} 0 > ntStatus_60;
    goto L15;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Irb_26 == 0;
    goto L33;

  L33:
    ntStatus_60 := -1073741670;
    goto L15;

  anon26_Then:
    assume {:partition} Irp_63 == 0;
    goto L33;

  anon24_Then:
    goto L11;
}



procedure {:origName "Av1394_GetNodeID"} Av1394_GetNodeID#1(actual_BusExtension_65: int) returns (Tmp_819: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetDeviceNodeId"} Av1394_GetDeviceNodeId#0(actual_PdoExtension_18: int) returns (Tmp_833: int)
{
  var {:pointer} Tmp_834: int;
  var {:pointer} Irp_68: int;
  var {:pointer} Irb_29: int;
  var {:scalar} StackSize_23: int;
  var {:pointer} sdv_665: int;
  var {:scalar} ntStatus_65: int;
  var {:pointer} BusExtension_69: int;
  var {:pointer} Tmp_836: int;
  var {:pointer} PdoExtension_18: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    ntStatus_65 := 0;
    Irp_68 := 0;
    Irb_29 := 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    havoc Tmp_836;
    assume {:nonnull} Tmp_836 != 0;
    assume Tmp_836 > 0;
    havoc BusExtension_69;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_65 := -1073741811;
    goto L17;

  L17:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_68 != 0;
    call {:si_unique_call 1879} IoFreeIrp(0);
    goto L18;

  L18:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_29 != 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    assume false;
    return;

  anon21_Then:
    assume {:partition} Irb_29 == 0;
    goto L22;

  L22:
    Tmp_833 := ntStatus_65;
    goto LM2;

  LM2:
    return;

  anon20_Then:
    assume {:partition} Irp_68 == 0;
    goto L18;

  anon19_Then:
    goto L13;

  L13:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    havoc Tmp_834;
    assume {:nonnull} Tmp_834 != 0;
    assume Tmp_834 > 0;
    havoc StackSize_23;
    call {:si_unique_call 1880} Irp_68 := IoAllocateIrp(StackSize_23, 0);
    call {:si_unique_call 1881} sdv_665 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_29 := sdv_665;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_68 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_29 != 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    assume false;
    return;

  anon22_Then:
    assume {:partition} Irb_29 == 0;
    goto L35;

  L35:
    ntStatus_65 := -1073741670;
    goto L17;

  anon26_Then:
    assume {:partition} Irp_68 == 0;
    goto L35;

  anon24_Then:
    goto L13;
}



procedure {:origName "Av1394_GetDeviceNodeId"} Av1394_GetDeviceNodeId#0(actual_PdoExtension_18: int) returns (Tmp_833: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} Tmp_833 == -1073741811 || Tmp_833 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Av1394_GetDeviceNodeId"} Av1394_GetDeviceNodeId#1(actual_PdoExtension_18: int) returns (Tmp_833: int)
{
  var {:pointer} Tmp_834: int;
  var {:pointer} Irp_68: int;
  var {:pointer} Irb_29: int;
  var {:scalar} StackSize_23: int;
  var {:pointer} sdv_665: int;
  var {:scalar} ntStatus_65: int;
  var {:pointer} BusExtension_69: int;
  var {:pointer} Tmp_836: int;
  var {:pointer} PdoExtension_18: int;
  var vslice_dummy_var_445: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    ntStatus_65 := 0;
    Irp_68 := 0;
    Irb_29 := 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    havoc Tmp_836;
    assume {:nonnull} Tmp_836 != 0;
    assume Tmp_836 > 0;
    havoc BusExtension_69;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    ntStatus_65 := -1073741811;
    goto L17;

  L17:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Irp_68 != 0;
    call {:si_unique_call 1882} IoFreeIrp(0);
    goto L18;

  L18:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Irb_29 != 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    call {:si_unique_call 1883} ExFreeToNPagedLookasideList#0(IrbPool__BUS_DEVICE_EXTENSION(BusExtension_69), Irb_29);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L22;

  L22:
    Tmp_833 := ntStatus_65;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} Irb_29 == 0;
    goto L22;

  anon20_Then:
    assume {:partition} Irp_68 == 0;
    goto L18;

  anon19_Then:
    goto L13;

  L13:
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    havoc Tmp_834;
    assume {:nonnull} Tmp_834 != 0;
    assume Tmp_834 > 0;
    havoc StackSize_23;
    call {:si_unique_call 1884} Irp_68 := IoAllocateIrp(StackSize_23, 0);
    call {:si_unique_call 1885} sdv_665 := sdv_ExAllocateFromNPagedLookasideList(0);
    Irb_29 := sdv_665;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Irp_68 != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Irb_29 != 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    havoc vslice_dummy_var_445;
    call {:si_unique_call 1886} ntStatus_65 := Av_SubmitIrpSynch#0(vslice_dummy_var_445, Irp_68, Irb_29);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_65 >= 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} BusExtension_69 != 0;
    assume BusExtension_69 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} Irb_29 != 0;
    assume Irb_29 > 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    goto L17;

  anon23_Then:
    assume {:partition} 0 > ntStatus_65;
    goto L17;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} Irb_29 == 0;
    goto L35;

  L35:
    ntStatus_65 := -1073741670;
    goto L17;

  anon26_Then:
    assume {:partition} Irp_68 == 0;
    goto L35;

  anon24_Then:
    goto L13;
}



procedure {:origName "Av1394_GetDeviceNodeId"} Av1394_GetDeviceNodeId#1(actual_PdoExtension_18: int) returns (Tmp_833: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Av_FDO_StartDevice_loop_L70(in_AvAdapterData_1: int, in_AdapterId: int) returns (out_AvAdapterData_1: int)
{

  entry:
    out_AvAdapterData_1 := in_AvAdapterData_1;
    goto L70, exit;

  exit:
    return;

  L70:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} out_AvAdapterData_1 != 0;
    assume {:nonnull} out_AvAdapterData_1 != 0;
    assume out_AvAdapterData_1 > 0;
    havoc out_AvAdapterData_1;
    goto L186;

  L186:
    assume {:nonnull} in_AdapterId != 0;
    assume in_AdapterId > 0;
    assume {:nonnull} out_AvAdapterData_1 != 0;
    assume out_AvAdapterData_1 > 0;
    goto anon85_Then;

  anon85_Then:
    goto anon86_Then;

  anon86_Then:
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    havoc out_AvAdapterData_1;
    return;

  anon79_Then:
    assume {:partition} out_AvAdapterData_1 == 0;
    assume {:nonnull} AvData != 0;
    assume AvData > 0;
    havoc out_AvAdapterData_1;
    goto L186;
}



procedure {:LoopProcedure} Av_FDO_StartDevice_loop_L70(in_AvAdapterData_1: int, in_AdapterId: int) returns (out_AvAdapterData_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_FDO_StopDevice_loop_L122(in_CurrCrom: int, in_ntStatus_5: int, in_AvAdapterData_3: int) returns (out_CurrCrom: int, out_ntStatus_5: int)
{

  entry:
    out_CurrCrom, out_ntStatus_5 := in_CurrCrom, in_ntStatus_5;
    goto L122, exit;

  exit:
    return;

  L122:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_CurrCrom != 0;
    assume {:nonnull} out_CurrCrom != 0;
    assume out_CurrCrom > 0;
    havoc out_CurrCrom;
    goto L125;

  L125:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_CurrCrom != 0;
    call {:si_unique_call 1887} out_ntStatus_5 := Av1394_AddConfigRomEntry(out_CurrCrom);
    goto anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto L126;

  L126:
    goto anon55_Else;

  anon55_Else:
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    call {:si_unique_call 1888} {:si_old_unique_call 1} out_CurrCrom, out_ntStatus_5 := Av_FDO_StopDevice_loop_L122(out_CurrCrom, out_ntStatus_5, in_AvAdapterData_3);
    return;

  anon54_Then:
    assume {:partition} out_CurrCrom == 0;
    goto L126;

  anon53_Then:
    assume {:partition} out_CurrCrom == 0;
    assume {:nonnull} in_AvAdapterData_3 != 0;
    assume in_AvAdapterData_3 > 0;
    havoc out_CurrCrom;
    goto L125;
}



procedure {:LoopProcedure} Av_FDO_StopDevice_loop_L122(in_CurrCrom: int, in_ntStatus_5: int, in_AvAdapterData_3: int) returns (out_CurrCrom: int, out_ntStatus_5: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_FDO_StopDevice_loop_L28(in_MyOwner: int, in_BusExtension_5: int) returns (out_MyOwner: int)
{

  entry:
    out_MyOwner := in_MyOwner;
    goto L28, exit;

  exit:
    return;

  L28:
    goto anon47_Else;

  anon47_Else:
    assume {:nonnull} out_MyOwner != 0;
    assume out_MyOwner > 0;
    goto anon48_Else;

  anon48_Else:
    assume {:nonnull} out_MyOwner != 0;
    assume out_MyOwner > 0;
    havoc out_MyOwner;
    goto anon48_Else_dummy;

  anon48_Else_dummy:
    havoc out_MyOwner;
    return;
}



procedure {:LoopProcedure} Av_FDO_StopDevice_loop_L28(in_MyOwner: int, in_BusExtension_5: int) returns (out_MyOwner: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_PDO_StopDevice_loop_L53(in_CromData: int, in_sdv_211: int, in_sdv_212: int, in_PdoCromData: int, in_BusExtension_9: int, in_PdoExtension_5: int, in_vslice_dummy_var_113: int, in_vslice_dummy_var_114: int, in_vslice_dummy_var_115: int) returns (out_CromData: int, out_sdv_211: int, out_sdv_212: int, out_PdoCromData: int, out_vslice_dummy_var_113: int, out_vslice_dummy_var_114: int, out_vslice_dummy_var_115: int)
{

  entry:
    out_CromData, out_sdv_211, out_sdv_212, out_PdoCromData, out_vslice_dummy_var_113, out_vslice_dummy_var_114, out_vslice_dummy_var_115 := in_CromData, in_sdv_211, in_sdv_212, in_PdoCromData, in_vslice_dummy_var_113, in_vslice_dummy_var_114, in_vslice_dummy_var_115;
    goto L53, exit;

  exit:
    return;

  L53:
    call {:si_unique_call 1889} out_sdv_211 := sdv_IsListEmpty(0);
    goto anon20_Else;

  anon20_Else:
    assume {:partition} out_sdv_211 == 0;
    out_PdoCromData := 0;
    out_CromData := 0;
    assume {:nonnull} in_PdoExtension_5 != 0;
    assume in_PdoExtension_5 > 0;
    call {:si_unique_call 1895} out_sdv_212 := RemoveHeadList(PdoCromList__PDO_DEVICE_EXTENSION(in_PdoExtension_5));
    out_PdoCromData := out_sdv_212;
    assume {:nonnull} out_PdoCromData != 0;
    assume out_PdoCromData > 0;
    havoc out_CromData;
    assume {:nonnull} out_CromData != 0;
    assume out_CromData > 0;
    assume {:nonnull} out_CromData != 0;
    assume out_CromData > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L82;

  L82:
    call {:si_unique_call 1890} sdv_ExFreePool(0);
    goto L82_dummy;

  L82_dummy:
    call {:si_unique_call 1896} {:si_old_unique_call 1} out_CromData, out_sdv_211, out_sdv_212, out_PdoCromData, out_vslice_dummy_var_113, out_vslice_dummy_var_114, out_vslice_dummy_var_115 := Av_PDO_StopDevice_loop_L53(out_CromData, out_sdv_211, out_sdv_212, out_PdoCromData, in_BusExtension_9, in_PdoExtension_5, out_vslice_dummy_var_113, out_vslice_dummy_var_114, out_vslice_dummy_var_115);
    return;

  anon22_Then:
    call {:si_unique_call 1894} out_vslice_dummy_var_113 := Av1394_RemoveConfigRomEntry(out_CromData);
    goto anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1891} out_vslice_dummy_var_114 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1892} sdv_ExFreePool(0);
    call {:si_unique_call 1893} out_vslice_dummy_var_115 := Av1394_BusReset(in_BusExtension_9, 0, 0);
    goto anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L82;
}



procedure {:LoopProcedure} Av_PDO_StopDevice_loop_L53(in_CromData: int, in_sdv_211: int, in_sdv_212: int, in_PdoCromData: int, in_BusExtension_9: int, in_PdoExtension_5: int, in_vslice_dummy_var_113: int, in_vslice_dummy_var_114: int, in_vslice_dummy_var_115: int) returns (out_CromData: int, out_sdv_211: int, out_sdv_212: int, out_PdoCromData: int, out_vslice_dummy_var_113: int, out_vslice_dummy_var_114: int, out_vslice_dummy_var_115: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} out_CromData == in_CromData;
  free ensures {:va_keep} out_sdv_211 == in_sdv_211;
  free ensures {:va_keep} out_sdv_212 == in_sdv_212;
  free ensures {:va_keep} out_PdoCromData == in_PdoCromData;
  free ensures {:va_keep} out_vslice_dummy_var_113 == in_vslice_dummy_var_113;
  free ensures {:va_keep} out_vslice_dummy_var_114 == in_vslice_dummy_var_114;
  free ensures {:va_keep} out_vslice_dummy_var_115 == in_vslice_dummy_var_115;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_EnumerateChildren_loop_L51(in_ntStatus_12: int, in_PdoDeviceObject_1: int, in_CurrPdoData: int, in_BusExtension_10: int) returns (out_ntStatus_12: int, out_CurrPdoData: int)
{
  var vslice_dummy_var_446: int;

  entry:
    out_ntStatus_12, out_CurrPdoData := in_ntStatus_12, in_CurrPdoData;
    goto L51, exit;

  exit:
    return;

  L51:
    goto anon37_Else;

  anon37_Else:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    goto L58;

  L58:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    havoc out_CurrPdoData;
    goto L58_dummy;

  L58_dummy:
    call {:si_unique_call 1898} {:si_old_unique_call 1} out_ntStatus_12, out_CurrPdoData := Av_EnumerateChildren_loop_L51(out_ntStatus_12, in_PdoDeviceObject_1, out_CurrPdoData, in_BusExtension_10);
    return;

  anon42_Then:
    assume {:nonnull} out_CurrPdoData != 0;
    assume out_CurrPdoData > 0;
    havoc vslice_dummy_var_446;
    call {:si_unique_call 1897} out_ntStatus_12 := Av_CreatePDO(in_BusExtension_10, out_CurrPdoData, vslice_dummy_var_446, in_PdoDeviceObject_1);
    goto anon38_Then;

  anon38_Then:
    assume {:partition} 0 <= out_ntStatus_12;
    goto L58;
}



procedure {:LoopProcedure} Av_EnumerateChildren_loop_L51(in_ntStatus_12: int, in_PdoDeviceObject_1: int, in_CurrPdoData: int, in_BusExtension_10: int) returns (out_ntStatus_12: int, out_CurrPdoData: int);
  modifies alloc;
  free ensures {:va_keep} out_ntStatus_12 == -1073741824 || out_ntStatus_12 == -1073741771 || out_ntStatus_12 == -1073741670 || out_ntStatus_12 == -1073741823 || out_ntStatus_12 == 0 || out_ntStatus_12 == in_ntStatus_12;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_FDO_Pnp_loop_L174(in_PdoData_4: int, in_sdv_242: int, in_sdv_256: int, in_BusExtension_13: int) returns (out_PdoData_4: int, out_sdv_242: int, out_sdv_256: int)
{

  entry:
    out_PdoData_4, out_sdv_242, out_sdv_256 := in_PdoData_4, in_sdv_242, in_sdv_256;
    goto L174, exit;

  exit:
    return;

  L174:
    call {:si_unique_call 1899} out_sdv_242 := sdv_IsListEmpty(0);
    goto anon131_Else;

  anon131_Else:
    assume {:partition} out_sdv_242 == 0;
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    call {:si_unique_call 1905} out_sdv_256 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(in_BusExtension_13));
    out_PdoData_4 := out_sdv_256;
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    call {:si_unique_call 1904} IoDeleteDevice(0);
    goto L199;

  L199:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    call {:si_unique_call 1903} sdv_ExFreePool(0);
    goto L203;

  L203:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    call {:si_unique_call 1902} sdv_ExFreePool(0);
    goto L207;

  L207:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    call {:si_unique_call 1901} sdv_ExFreePool(0);
    goto L211;

  L211:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} out_PdoData_4 != 0;
    call {:si_unique_call 1900} sdv_ExFreePool(0);
    goto anon135_Else_dummy;

  anon135_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 1906} {:si_old_unique_call 1} out_PdoData_4, out_sdv_242, out_sdv_256 := Av_FDO_Pnp_loop_L174(out_PdoData_4, out_sdv_242, out_sdv_256, in_BusExtension_13);
    return;

  anon135_Then:
    assume {:partition} out_PdoData_4 == 0;
    goto anon135_Then_dummy;

  anon135_Then_dummy:
    goto L_BAF_0;

  anon134_Then:
    goto L211;

  anon133_Then:
    goto L207;

  anon132_Then:
    goto L203;

  anon158_Then:
    goto L199;
}



procedure {:LoopProcedure} Av_FDO_Pnp_loop_L174(in_PdoData_4: int, in_sdv_242: int, in_sdv_256: int, in_BusExtension_13: int) returns (out_PdoData_4: int, out_sdv_242: int, out_sdv_256: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_PdoData_4 == in_PdoData_4;
  free ensures {:va_keep} out_sdv_242 == in_sdv_242;
  free ensures {:va_keep} out_sdv_256 == in_sdv_256;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_FDO_Pnp_loop_L274(in_BusExtension_13: int, in_PdoData_5: int) returns (out_PdoData_5: int)
{

  entry:
    out_PdoData_5 := in_PdoData_5;
    goto L274, exit;

  exit:
    return;

  L274:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} out_PdoData_5 != 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    goto L277;

  L277:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto anon161_Else;

  anon161_Else:
    goto anon161_Else_dummy;

  anon161_Else_dummy:
    call {:si_unique_call 1907} {:si_old_unique_call 1} out_PdoData_5 := Av_FDO_Pnp_loop_L274(in_BusExtension_13, out_PdoData_5);
    return;

  anon142_Then:
    assume {:partition} out_PdoData_5 == 0;
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    havoc out_PdoData_5;
    goto L277;
}



procedure {:LoopProcedure} Av_FDO_Pnp_loop_L274(in_BusExtension_13: int, in_PdoData_5: int) returns (out_PdoData_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av_FDO_Pnp_loop_L102(in_i: int, in_Relations: int, in_numPDO: int, in_Tmp_309: int, in_Tmp_319: int, in_CurrPdoData_1: int, in_vslice_dummy_var_131: int) returns (out_numPDO: int, out_Tmp_309: int, out_Tmp_319: int, out_CurrPdoData_1: int, out_vslice_dummy_var_131: int)
{

  entry:
    out_numPDO, out_Tmp_309, out_Tmp_319, out_CurrPdoData_1, out_vslice_dummy_var_131 := in_numPDO, in_Tmp_309, in_Tmp_319, in_CurrPdoData_1, in_vslice_dummy_var_131;
    goto L102, exit;

  exit:
    return;

  L102:
    goto anon127_Else;

  anon127_Else:
    out_Tmp_319 := in_i + out_numPDO;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_309;
    assume {:nonnull} out_CurrPdoData_1 != 0;
    assume out_CurrPdoData_1 > 0;
    assume {:nonnull} out_Tmp_309 != 0;
    assume out_Tmp_309 > 0;
    call {:si_unique_call 1908} out_vslice_dummy_var_131 := sdv_ObReferenceObject(0);
    assume {:nonnull} out_CurrPdoData_1 != 0;
    assume out_CurrPdoData_1 > 0;
    havoc out_CurrPdoData_1;
    out_numPDO := out_numPDO + 1;
    goto anon127_Else_dummy;

  anon127_Else_dummy:
    call {:si_unique_call 1909} {:si_old_unique_call 1} out_numPDO, out_Tmp_309, out_Tmp_319, out_CurrPdoData_1, out_vslice_dummy_var_131 := Av_FDO_Pnp_loop_L102(in_i, in_Relations, out_numPDO, out_Tmp_309, out_Tmp_319, out_CurrPdoData_1, out_vslice_dummy_var_131);
    return;
}



procedure {:LoopProcedure} Av_FDO_Pnp_loop_L102(in_i: int, in_Relations: int, in_numPDO: int, in_Tmp_309: int, in_Tmp_319: int, in_CurrPdoData_1: int, in_vslice_dummy_var_131: int) returns (out_numPDO: int, out_Tmp_309: int, out_Tmp_319: int, out_CurrPdoData_1: int, out_vslice_dummy_var_131: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_UpdateCycleTime_loop_L10(in_bCountFlipped: int, in_CycleTime: int) returns (out_bCountFlipped: int)
{

  entry:
    out_bCountFlipped := in_bCountFlipped;
    goto L10, exit;

  exit:
    return;

  L10:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon8_Else;

  anon8_Else:
    out_bCountFlipped := 1;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto L14;

  L14:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto L14_dummy;

  L14_dummy:
    call {:si_unique_call 1910} {:si_old_unique_call 1} out_bCountFlipped := Av1394_UpdateCycleTime_loop_L10(out_bCountFlipped, in_CycleTime);
    return;

  anon9_Then:
    goto L14;
}



procedure {:LoopProcedure} Av1394_UpdateCycleTime_loop_L10(in_bCountFlipped: int, in_CycleTime: int) returns (out_bCountFlipped: int);
  free ensures {:va_keep} out_bCountFlipped == 1 || out_bCountFlipped == in_bCountFlipped;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_UpdateCycleTime_loop_L6(in_bCountFlipped: int, in_CycleTime: int, in_Count: int) returns (out_bCountFlipped: int, out_Count: int)
{

  entry:
    out_bCountFlipped, out_Count := in_bCountFlipped, in_Count;
    goto L6, exit;

  exit:
    return;

  L6:
    goto anon7_Else;

  anon7_Else:
    assume {:partition} out_Count >= 3072;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    out_Count := out_Count - 3072;
    goto L10;

  L10:
    call {:si_unique_call 1911} out_bCountFlipped := Av1394_UpdateCycleTime_loop_L10(out_bCountFlipped, in_CycleTime);
    goto L10_last;

  L10_last:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    out_bCountFlipped := 1;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    goto L14;

  L14:
    assume {:nonnull} in_CycleTime != 0;
    assume in_CycleTime > 0;
    assume false;
    return;

  anon9_Then:
    goto L14;

  anon8_Then:
    goto anon8_Then_dummy;

  anon8_Then_dummy:
    call {:si_unique_call 1912} {:si_old_unique_call 1} out_bCountFlipped, out_Count := Av1394_UpdateCycleTime_loop_L6(out_bCountFlipped, in_CycleTime, out_Count);
    return;
}



procedure {:LoopProcedure} Av1394_UpdateCycleTime_loop_L6(in_bCountFlipped: int, in_CycleTime: int, in_Count: int) returns (out_bCountFlipped: int, out_Count: int);
  free ensures {:va_keep} out_bCountFlipped == 1 || out_bCountFlipped == in_bCountFlipped;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_HandleFrameNotification_loop_L6(in_NotifyFrameContext: int, in_sdv_287: int, in_sdv_288: int, in_NotifyFrame: int, in_NotifyInfo: int, in_CipData_7: int, in_DescriptorData_3: int) returns (out_NotifyFrameContext: int, out_sdv_287: int, out_sdv_288: int, out_NotifyFrame: int)
{

  entry:
    out_NotifyFrameContext, out_sdv_287, out_sdv_288, out_NotifyFrame := in_NotifyFrameContext, in_sdv_287, in_sdv_288, in_NotifyFrame;
    goto L6, exit;

  exit:
    return;

  L6:
    call {:si_unique_call 1913} out_sdv_287 := sdv_IsListEmpty(0);
    goto anon3_Then;

  anon3_Then:
    assume {:partition} out_sdv_287 == 0;
    assume {:nonnull} in_DescriptorData_3 != 0;
    assume in_DescriptorData_3 > 0;
    call {:si_unique_call 1914} out_sdv_288 := RemoveHeadList(NotifyFrameList__CIP_DESCRIPTOR_DATA(in_DescriptorData_3));
    out_NotifyFrameContext := out_sdv_288;
    assume {:nonnull} out_NotifyFrameContext != 0;
    assume out_NotifyFrameContext > 0;
    havoc out_NotifyFrame;
    assume {:nonnull} out_NotifyFrame != 0;
    assume out_NotifyFrame > 0;
    assume {:nonnull} in_CipData_7 != 0;
    assume in_CipData_7 > 0;
    assume {:nonnull} in_CipData_7 != 0;
    assume in_CipData_7 > 0;
    assume {:nonnull} in_NotifyInfo != 0;
    assume in_NotifyInfo > 0;
    assume {:nonnull} out_NotifyFrame != 0;
    assume out_NotifyFrame > 0;
    assume {:nonnull} in_NotifyInfo != 0;
    assume in_NotifyInfo > 0;
    assume {:nonnull} in_NotifyInfo != 0;
    assume in_NotifyInfo > 0;
    assume {:nonnull} out_NotifyFrame != 0;
    assume out_NotifyFrame > 0;
    call {:si_unique_call 1915} sdv_ExFreePool(0);
    goto anon3_Then_dummy;

  anon3_Then_dummy:
    call {:si_unique_call 1916} {:si_old_unique_call 1} out_NotifyFrameContext, out_sdv_287, out_sdv_288, out_NotifyFrame := AvCip_HandleFrameNotification_loop_L6(out_NotifyFrameContext, out_sdv_287, out_sdv_288, out_NotifyFrame, in_NotifyInfo, in_CipData_7, in_DescriptorData_3);
    return;
}



procedure {:LoopProcedure} AvCip_HandleFrameNotification_loop_L6(in_NotifyFrameContext: int, in_sdv_287: int, in_sdv_288: int, in_NotifyFrame: int, in_NotifyInfo: int, in_CipData_7: int, in_DescriptorData_3: int) returns (out_NotifyFrameContext: int, out_sdv_287: int, out_sdv_288: int, out_NotifyFrame: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_NotifyFrameContext == in_NotifyFrameContext;
  free ensures {:va_keep} out_sdv_287 == in_sdv_287;
  free ensures {:va_keep} out_sdv_288 == in_sdv_288;
  free ensures {:va_keep} out_NotifyFrame == in_NotifyFrame;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_Destroy_loop_L10(in_sdv_304: int, in_sdv_306: int, in_FrameContext_2: int, in_CipData_11: int) returns (out_sdv_304: int, out_sdv_306: int, out_FrameContext_2: int)
{

  entry:
    out_sdv_304, out_sdv_306, out_FrameContext_2 := in_sdv_304, in_sdv_306, in_FrameContext_2;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 1917} out_sdv_304 := sdv_IsListEmpty(0);
    goto anon12_Then;

  anon12_Then:
    assume {:partition} out_sdv_304 == 0;
    assume {:nonnull} in_CipData_11 != 0;
    assume in_CipData_11 > 0;
    call {:si_unique_call 1919} out_sdv_306 := RemoveHeadList(FrameList__CIP_DATA(in_CipData_11));
    out_FrameContext_2 := out_sdv_306;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} out_FrameContext_2 != 0;
    call {:si_unique_call 1918} sdv_ExFreePool(0);
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 1920} {:si_old_unique_call 1} out_sdv_304, out_sdv_306, out_FrameContext_2 := AvCip_Destroy_loop_L10(out_sdv_304, out_sdv_306, out_FrameContext_2, in_CipData_11);
    return;

  anon15_Then:
    assume {:partition} out_FrameContext_2 == 0;
    goto anon15_Then_dummy;

  anon15_Then_dummy:
    goto L_BAF_1;
}



procedure {:LoopProcedure} AvCip_Destroy_loop_L10(in_sdv_304: int, in_sdv_306: int, in_FrameContext_2: int, in_CipData_11: int) returns (out_sdv_304: int, out_sdv_306: int, out_FrameContext_2: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_sdv_304 == in_sdv_304;
  free ensures {:va_keep} out_sdv_306 == in_sdv_306;
  free ensures {:va_keep} out_FrameContext_2 == in_FrameContext_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_FreeResources_loop_L11(in_Tmp_381: int, in_Tmp_382: int, in_sdv_314: int, in_Status_21: int, in_sdv_315: int, in_DescriptorData_5: int, in_sdv_318: int, in_sdv_321: int, in_Tmp_385: int, in_PriorState: int, in_Tmp_386: int, in_Tmp_387: int, in_Irql_10: int, in_CipData_18: int, in_vslice_dummy_var_142: int, in_vslice_dummy_var_143: int, in_vslice_dummy_var_144: int) returns (out_Tmp_381: int, out_Tmp_382: int, out_sdv_314: int, out_Status_21: int, out_sdv_315: int, out_DescriptorData_5: int, out_sdv_318: int, out_sdv_321: int, out_Tmp_385: int, out_PriorState: int, out_Tmp_386: int, out_Tmp_387: int, out_Irql_10: int, out_vslice_dummy_var_142: int, out_vslice_dummy_var_143: int, out_vslice_dummy_var_144: int)
{
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;

  entry:
    out_Tmp_381, out_Tmp_382, out_sdv_314, out_Status_21, out_sdv_315, out_DescriptorData_5, out_sdv_318, out_sdv_321, out_Tmp_385, out_PriorState, out_Tmp_386, out_Tmp_387, out_Irql_10, out_vslice_dummy_var_142, out_vslice_dummy_var_143, out_vslice_dummy_var_144 := in_Tmp_381, in_Tmp_382, in_sdv_314, in_Status_21, in_sdv_315, in_DescriptorData_5, in_sdv_318, in_sdv_321, in_Tmp_385, in_PriorState, in_Tmp_386, in_Tmp_387, in_Irql_10, in_vslice_dummy_var_142, in_vslice_dummy_var_143, in_vslice_dummy_var_144;
    goto L11, exit;

  exit:
    return;

  L11:
    call {:si_unique_call 1921} out_sdv_314 := sdv_IsListEmpty(0);
    goto anon41_Then;

  anon41_Then:
    assume {:partition} out_sdv_314 == 0;
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    call {:si_unique_call 1931} out_sdv_318 := RemoveHeadList(DescriptorList__CIP_DATA(in_CipData_18));
    out_DescriptorData_5 := out_sdv_318;
    call {:si_unique_call 1932} sdv_KeReleaseSpinLock(0, out_Irql_10);
    call {:si_unique_call 1933} out_vslice_dummy_var_142 := sdv_IoAcquireRemoveLock(0, 0);
    call {:si_unique_call 1934} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1929} out_Tmp_387 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_387 != 0;
    assume out_Tmp_387 > 0;
    call {:si_unique_call 1930} sdv_KeAcquireSpinLock(0, out_Tmp_387);
    assume {:nonnull} out_Tmp_387 != 0;
    assume out_Tmp_387 > 0;
    havoc out_Irql_10;
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L45;

  L45:
    call {:si_unique_call 1925} sdv_KeReleaseSpinLock(0, out_Irql_10);
    call {:si_unique_call 1926} out_sdv_315 := corral_nondet();
    out_PriorState := out_sdv_315;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} out_PriorState == 1;
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L58;

  L58:
    call {:si_unique_call 1935} out_Status_21 := Av1394_DetachBuffer(in_CipData_18, out_DescriptorData_5);
    goto anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto anon45_Else;

  anon45_Else:
    assume {:partition} out_Status_21 >= 0;
    goto L53;

  L53:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} out_DescriptorData_5 != 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1942} IoFreeIrp(0);
    goto L68;

  L68:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc vslice_dummy_var_447;
    havoc vslice_dummy_var_448;
    call {:si_unique_call 1943} ExFreeToNPagedLookasideList#1(vslice_dummy_var_447, vslice_dummy_var_448);
    goto anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    call {:si_unique_call 1941} IoFreeIrp(0);
    goto L76;

  L76:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc vslice_dummy_var_449;
    havoc vslice_dummy_var_450;
    call {:si_unique_call 1944} ExFreeToNPagedLookasideList#1(vslice_dummy_var_449, vslice_dummy_var_450);
    goto anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L80;

  L80:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_385;
    assume {:nonnull} out_Tmp_385 != 0;
    assume out_Tmp_385 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_386;
    assume {:nonnull} out_Tmp_386 != 0;
    assume out_Tmp_386 > 0;
    call {:si_unique_call 1940} IoFreeMdl(0);
    goto L84;

  L84:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_382;
    assume {:nonnull} out_Tmp_382 != 0;
    assume out_Tmp_382 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    havoc out_Tmp_381;
    assume {:nonnull} out_Tmp_381 != 0;
    assume out_Tmp_381 > 0;
    call {:si_unique_call 1939} IoFreeMdl(0);
    goto L89;

  L89:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1938} sdv_ExFreePool(0);
    goto L94;

  L94:
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 1937} sdv_ExFreePool(0);
    goto L98;

  L98:
    call {:si_unique_call 1924} sdv_ExFreePool(0);
    goto L64;

  L64:
    call {:si_unique_call 1922} out_Tmp_387 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_387 != 0;
    assume out_Tmp_387 > 0;
    call {:si_unique_call 1923} sdv_KeAcquireSpinLock(0, out_Tmp_387);
    assume {:nonnull} out_Tmp_387 != 0;
    assume out_Tmp_387 > 0;
    havoc out_Irql_10;
    goto L64_dummy;

  L64_dummy:
    call {:si_unique_call 1945} {:si_old_unique_call 1} out_Tmp_381, out_Tmp_382, out_sdv_314, out_Status_21, out_sdv_315, out_DescriptorData_5, out_sdv_318, out_sdv_321, out_Tmp_385, out_PriorState, out_Tmp_386, out_Tmp_387, out_Irql_10, out_vslice_dummy_var_142, out_vslice_dummy_var_143, out_vslice_dummy_var_144 := AvCip_FreeResources_loop_L11(out_Tmp_381, out_Tmp_382, out_sdv_314, out_Status_21, out_sdv_315, out_DescriptorData_5, out_sdv_318, out_sdv_321, out_Tmp_385, out_PriorState, out_Tmp_386, out_Tmp_387, out_Irql_10, in_CipData_18, out_vslice_dummy_var_142, out_vslice_dummy_var_143, out_vslice_dummy_var_144);
    return;

  anon51_Then:
    goto L98;

  anon50_Then:
    goto L94;

  anon60_Then:
    goto L89;

  anon59_Then:
    goto L84;

  anon49_Then:
    goto L80;

  anon48_Then:
    goto L76;

  anon47_Then:
    goto L72;

  anon46_Then:
    goto L68;

  anon43_Then:
    assume {:partition} out_DescriptorData_5 == 0;
    goto L64;

  anon44_Then:
    call {:si_unique_call 1936} out_vslice_dummy_var_143 := KeCancelTimer(0);
    goto L58;

  anon55_Then:
    assume {:partition} out_PriorState != 1;
    goto L53;

  anon42_Then:
    call {:si_unique_call 1928} out_sdv_321 := sdv_IsListEmpty(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_sdv_321 != 0;
    goto L108;

  L108:
    assume {:nonnull} in_CipData_18 != 0;
    assume in_CipData_18 > 0;
    assume {:nonnull} out_DescriptorData_5 != 0;
    assume out_DescriptorData_5 > 0;
    goto L45;

  anon52_Then:
    assume {:partition} out_sdv_321 == 0;
    call {:si_unique_call 1927} out_vslice_dummy_var_144 := AvCip_HandleFrameNotification(in_CipData_18, out_DescriptorData_5);
    goto L108;
}



procedure {:LoopProcedure} AvCip_FreeResources_loop_L11(in_Tmp_381: int, in_Tmp_382: int, in_sdv_314: int, in_Status_21: int, in_sdv_315: int, in_DescriptorData_5: int, in_sdv_318: int, in_sdv_321: int, in_Tmp_385: int, in_PriorState: int, in_Tmp_386: int, in_Tmp_387: int, in_Irql_10: int, in_CipData_18: int, in_vslice_dummy_var_142: int, in_vslice_dummy_var_143: int, in_vslice_dummy_var_144: int) returns (out_Tmp_381: int, out_Tmp_382: int, out_sdv_314: int, out_Status_21: int, out_sdv_315: int, out_DescriptorData_5: int, out_sdv_318: int, out_sdv_321: int, out_Tmp_385: int, out_PriorState: int, out_Tmp_386: int, out_Tmp_387: int, out_Irql_10: int, out_vslice_dummy_var_142: int, out_vslice_dummy_var_143: int, out_vslice_dummy_var_144: int);
  modifies alloc, LockDepth, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_381 == in_Tmp_381;
  free ensures {:va_keep} out_Tmp_382 == in_Tmp_382;
  free ensures {:va_keep} out_sdv_314 == in_sdv_314;
  free ensures {:va_keep} out_Status_21 == in_Status_21;
  free ensures {:va_keep} out_sdv_315 == in_sdv_315;
  free ensures {:va_keep} out_DescriptorData_5 == in_DescriptorData_5;
  free ensures {:va_keep} out_sdv_318 == in_sdv_318;
  free ensures {:va_keep} out_sdv_321 == in_sdv_321;
  free ensures {:va_keep} out_Tmp_385 == in_Tmp_385;
  free ensures {:va_keep} out_PriorState == in_PriorState;
  free ensures {:va_keep} out_Tmp_386 == in_Tmp_386;
  free ensures {:va_keep} out_Tmp_387 == in_Tmp_387;
  free ensures {:va_keep} out_Irql_10 == in_Irql_10;
  free ensures {:va_keep} out_vslice_dummy_var_142 == in_vslice_dummy_var_142;
  free ensures {:va_keep} out_vslice_dummy_var_143 == in_vslice_dummy_var_143;
  free ensures {:va_keep} out_vslice_dummy_var_144 == in_vslice_dummy_var_144;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_AllocateResources_loop_L176(in_iPacket: int, in_DescriptorData_7: int, in_NumPackets: int) returns (out_iPacket: int)
{

  entry:
    out_iPacket := in_iPacket;
    goto L176, exit;

  exit:
    return;

  L176:
    goto anon80_Else;

  anon80_Else:
    assume {:partition} in_NumPackets > out_iPacket;
    assume {:nonnull} in_DescriptorData_7 != 0;
    assume in_DescriptorData_7 > 0;
    call {:si_unique_call 1946} sdv_RtlCopyMemory(0, 0, 12);
    out_iPacket := out_iPacket + 1;
    goto anon80_Else_dummy;

  anon80_Else_dummy:
    havoc out_iPacket;
    return;
}



procedure {:LoopProcedure} AvCip_AllocateResources_loop_L176(in_iPacket: int, in_DescriptorData_7: int, in_NumPackets: int) returns (out_iPacket: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_AllocateResources_loop_L23(in_sdv_327: int, in_Tmp_399: int, in_Tmp_400: int, in_iPacket: int, in_Tmp_402: int, in_Tmp_403: int, in_Tmp_404: int, in_Tmp_405: int, in_Tmp_406: int, in_Tmp_407: int, in_Tmp_409: int, in_Status_25: int, in_NumDescriptors: int, in_Tmp_410: int, in_Tmp_411: int, in_Tmp_412: int, in_Tmp_413: int, in_Tmp_414: int, in_sdv_329: int, in_DescriptorData_7: int, in_Tmp_415: int, in_Tmp_416: int, in_sdv_331: int, in_Tmp_417: int, in_sdv_332: int, in_sdv_333: int, in_Tmp_418: int, in_NumPackets: int, in_iAttach: int, in_Tmp_419: int, in_Tmp_420: int, in_Tmp_421: int, in_sdv_336: int, in_Tmp_422: int, in_Tmp_423: int, in_Tmp_424: int, in_Tmp_425: int, in_Irql_11: int, in_sdv_337: int, in_Tmp_426: int, in_Tmp_427: int, in_Tmp_429: int, in_Tmp_430: int, in_Tmp_431: int, in_Tmp_432: int, in_Tmp_434: int, in_CipData_22: int, in_boogieTmp: int, in_vslice_dummy_var_146: int) returns (out_sdv_327: int, out_Tmp_399: int, out_Tmp_400: int, out_iPacket: int, out_Tmp_402: int, out_Tmp_403: int, out_Tmp_404: int, out_Tmp_405: int, out_Tmp_406: int, out_Tmp_407: int, out_Tmp_409: int, out_Status_25: int, out_Tmp_410: int, out_Tmp_411: int, out_Tmp_412: int, out_Tmp_413: int, out_Tmp_414: int, out_sdv_329: int, out_DescriptorData_7: int, out_Tmp_415: int, out_Tmp_416: int, out_sdv_331: int, out_Tmp_417: int, out_sdv_332: int, out_sdv_333: int, out_Tmp_418: int, out_iAttach: int, out_Tmp_419: int, out_Tmp_420: int, out_Tmp_421: int, out_sdv_336: int, out_Tmp_422: int, out_Tmp_423: int, out_Tmp_424: int, out_Tmp_425: int, out_Irql_11: int, out_sdv_337: int, out_Tmp_426: int, out_Tmp_427: int, out_Tmp_429: int, out_Tmp_430: int, out_Tmp_431: int, out_Tmp_432: int, out_Tmp_434: int, out_boogieTmp: int, out_vslice_dummy_var_146: int)
{

  entry:
    out_sdv_327, out_Tmp_399, out_Tmp_400, out_iPacket, out_Tmp_402, out_Tmp_403, out_Tmp_404, out_Tmp_405, out_Tmp_406, out_Tmp_407, out_Tmp_409, out_Status_25, out_Tmp_410, out_Tmp_411, out_Tmp_412, out_Tmp_413, out_Tmp_414, out_sdv_329, out_DescriptorData_7, out_Tmp_415, out_Tmp_416, out_sdv_331, out_Tmp_417, out_sdv_332, out_sdv_333, out_Tmp_418, out_iAttach, out_Tmp_419, out_Tmp_420, out_Tmp_421, out_sdv_336, out_Tmp_422, out_Tmp_423, out_Tmp_424, out_Tmp_425, out_Irql_11, out_sdv_337, out_Tmp_426, out_Tmp_427, out_Tmp_429, out_Tmp_430, out_Tmp_431, out_Tmp_432, out_Tmp_434, out_boogieTmp, out_vslice_dummy_var_146 := in_sdv_327, in_Tmp_399, in_Tmp_400, in_iPacket, in_Tmp_402, in_Tmp_403, in_Tmp_404, in_Tmp_405, in_Tmp_406, in_Tmp_407, in_Tmp_409, in_Status_25, in_Tmp_410, in_Tmp_411, in_Tmp_412, in_Tmp_413, in_Tmp_414, in_sdv_329, in_DescriptorData_7, in_Tmp_415, in_Tmp_416, in_sdv_331, in_Tmp_417, in_sdv_332, in_sdv_333, in_Tmp_418, in_iAttach, in_Tmp_419, in_Tmp_420, in_Tmp_421, in_sdv_336, in_Tmp_422, in_Tmp_423, in_Tmp_424, in_Tmp_425, in_Irql_11, in_sdv_337, in_Tmp_426, in_Tmp_427, in_Tmp_429, in_Tmp_430, in_Tmp_431, in_Tmp_432, in_Tmp_434, in_boogieTmp, in_vslice_dummy_var_146;
    goto L23, exit;

  exit:
    return;

  L23:
    goto anon65_Else;

  anon65_Else:
    assume {:partition} in_NumDescriptors > out_iAttach;
    call {:si_unique_call 1965} out_sdv_332 := ExAllocatePoolWithTag(0, 496, 943206710);
    out_DescriptorData_7 := out_sdv_332;
    goto anon82_Else;

  anon82_Else:
    assume {:partition} out_DescriptorData_7 != 0;
    call {:si_unique_call 1961} sdv_RtlZeroMemory(0, 496);
    call {:si_unique_call 1962} sdv_IoInitializeRemoveLock(0, -462395037, 1, 50);
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_404;
    assume {:nonnull} out_Tmp_404 != 0;
    assume out_Tmp_404 > 0;
    havoc out_Tmp_400;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1963} out_boogieTmp := IoAllocateIrp(out_Tmp_400, 0);
    call {:si_unique_call 1964} out_sdv_336 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon83_Else;

  anon83_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon66_Else;

  anon66_Else:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_403;
    assume {:nonnull} out_Tmp_403 != 0;
    assume out_Tmp_403 > 0;
    havoc out_Tmp_407;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1959} out_boogieTmp := IoAllocateIrp(out_Tmp_407, 0);
    call {:si_unique_call 1960} out_sdv_329 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon84_Else;

  anon84_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon67_Else;

  anon67_Else:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L63;

  L63:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L65;

  L65:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_405;
    call {:si_unique_call 1966} out_sdv_337 := ExAllocatePoolWithTag(0, out_Tmp_405, 943206710);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon85_Else;

  anon85_Else:
    goto L72;

  L72:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    havoc out_Tmp_430;
    call {:si_unique_call 1967} out_sdv_331 := IoAllocateMdl(0, out_Tmp_430, 0, 0, 0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_423;
    assume {:nonnull} out_Tmp_423 != 0;
    assume out_Tmp_423 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_420;
    assume {:nonnull} out_Tmp_420 != 0;
    assume out_Tmp_420 > 0;
    goto anon86_Else;

  anon86_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_417;
    assume {:nonnull} out_Tmp_417 != 0;
    assume out_Tmp_417 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_413;
    assume {:nonnull} out_Tmp_413 != 0;
    assume out_Tmp_413 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_432;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_Tmp_432 != 0;
    assume out_Tmp_432 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_421;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_Tmp_421 != 0;
    assume out_Tmp_421 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_415;
    assume {:nonnull} out_Tmp_415 != 0;
    assume out_Tmp_415 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_429;
    assume {:nonnull} out_Tmp_429 != 0;
    assume out_Tmp_429 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_426;
    assume {:nonnull} out_Tmp_426 != 0;
    assume out_Tmp_426 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_422;
    assume {:nonnull} out_Tmp_422 != 0;
    assume out_Tmp_422 > 0;
    goto L92;

  L92:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1951} out_Status_25 := Av1394_AttachBuffer(in_CipData_22, out_DescriptorData_7);
    goto anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto anon72_Then;

  anon72_Then:
    assume {:partition} 0 <= out_Status_25;
    call {:si_unique_call 1947} out_Tmp_418 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_418 != 0;
    assume out_Tmp_418 > 0;
    call {:si_unique_call 1948} sdv_KeAcquireSpinLock(0, out_Tmp_418);
    assume {:nonnull} out_Tmp_418 != 0;
    assume out_Tmp_418 > 0;
    havoc out_Irql_11;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1949} out_vslice_dummy_var_146 := sdv_InsertTailList(DescriptorList__CIP_DATA(in_CipData_22), ListEntry__CIP_DESCRIPTOR_DATA(out_DescriptorData_7));
    call {:si_unique_call 1950} sdv_KeReleaseSpinLock(0, out_Irql_11);
    out_iAttach := out_iAttach + 1;
    goto anon72_Then_dummy;

  anon72_Then_dummy:
    call {:si_unique_call 1968} {:si_old_unique_call 1} out_sdv_327, out_Tmp_399, out_Tmp_400, out_iPacket, out_Tmp_402, out_Tmp_403, out_Tmp_404, out_Tmp_405, out_Tmp_406, out_Tmp_407, out_Tmp_409, out_Status_25, out_Tmp_410, out_Tmp_411, out_Tmp_412, out_Tmp_413, out_Tmp_414, out_sdv_329, out_DescriptorData_7, out_Tmp_415, out_Tmp_416, out_sdv_331, out_Tmp_417, out_sdv_332, out_sdv_333, out_Tmp_418, out_iAttach, out_Tmp_419, out_Tmp_420, out_Tmp_421, out_sdv_336, out_Tmp_422, out_Tmp_423, out_Tmp_424, out_Tmp_425, out_Irql_11, out_sdv_337, out_Tmp_426, out_Tmp_427, out_Tmp_429, out_Tmp_430, out_Tmp_431, out_Tmp_432, out_Tmp_434, out_boogieTmp, out_vslice_dummy_var_146 := AvCip_AllocateResources_loop_L23(out_sdv_327, out_Tmp_399, out_Tmp_400, out_iPacket, out_Tmp_402, out_Tmp_403, out_Tmp_404, out_Tmp_405, out_Tmp_406, out_Tmp_407, out_Tmp_409, out_Status_25, in_NumDescriptors, out_Tmp_410, out_Tmp_411, out_Tmp_412, out_Tmp_413, out_Tmp_414, out_sdv_329, out_DescriptorData_7, out_Tmp_415, out_Tmp_416, out_sdv_331, out_Tmp_417, out_sdv_332, out_sdv_333, out_Tmp_418, in_NumPackets, out_iAttach, out_Tmp_419, out_Tmp_420, out_Tmp_421, out_sdv_336, out_Tmp_422, out_Tmp_423, out_Tmp_424, out_Tmp_425, out_Irql_11, out_sdv_337, out_Tmp_426, out_Tmp_427, out_Tmp_429, out_Tmp_430, out_Tmp_431, out_Tmp_432, out_Tmp_434, in_CipData_22, out_boogieTmp, out_vslice_dummy_var_146);
    return;

  anon71_Then:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_425;
    assume {:nonnull} out_Tmp_425 != 0;
    assume out_Tmp_425 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_424;
    assume {:nonnull} out_Tmp_424 != 0;
    assume out_Tmp_424 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_402;
    assume {:nonnull} out_Tmp_402 != 0;
    assume out_Tmp_402 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_409;
    assume {:nonnull} out_Tmp_409 != 0;
    assume out_Tmp_409 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_406;
    assume {:nonnull} out_Tmp_406 != 0;
    assume out_Tmp_406 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_431;
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_Tmp_431 != 0;
    assume out_Tmp_431 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_434;
    assume {:nonnull} out_Tmp_434 != 0;
    assume out_Tmp_434 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_414;
    assume {:nonnull} out_Tmp_414 != 0;
    assume out_Tmp_414 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_411;
    assume {:nonnull} out_Tmp_411 != 0;
    assume out_Tmp_411 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_412;
    assume {:nonnull} out_Tmp_412 != 0;
    assume out_Tmp_412 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1952} InitializeListHead(NotifyFrameList__CIP_DESCRIPTOR_DATA(out_DescriptorData_7));
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1953} KeInitializeDpc(TimerDpc__CIP_DESCRIPTOR_DATA(out_DescriptorData_7), li2bplFunctionConstant243, 0);
    call {:si_unique_call 1954} KeInitializeTimer(0);
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto L92;

  anon69_Then:
    assume {:nonnull} in_CipData_22 != 0;
    assume in_CipData_22 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto L72;

  anon70_Then:
    goto L65;

  anon68_Then:
    out_Tmp_410 := in_NumPackets * 12;
    call {:si_unique_call 1958} out_sdv_333 := ExAllocatePoolWithTag(0, out_Tmp_410, 943206710);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    goto anon92_Else;

  anon92_Else:
    out_iPacket := 0;
    goto L176;

  L176:
    call {:si_unique_call 1956} out_iPacket := AvCip_AllocateResources_loop_L176(out_iPacket, out_DescriptorData_7, in_NumPackets);
    goto L176_last;

  L176_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} in_NumPackets > out_iPacket;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    call {:si_unique_call 1957} sdv_RtlCopyMemory(0, 0, 12);
    out_iPacket := out_iPacket + 1;
    assume false;
    return;

  anon80_Then:
    assume {:partition} out_iPacket >= in_NumPackets;
    out_Tmp_419 := 12 * in_NumPackets;
    call {:si_unique_call 1955} out_sdv_327 := IoAllocateMdl(0, out_Tmp_419, 0, 0, 0);
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_399;
    assume {:nonnull} out_Tmp_399 != 0;
    assume out_Tmp_399 > 0;
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_416;
    assume {:nonnull} out_Tmp_416 != 0;
    assume out_Tmp_416 > 0;
    goto anon93_Else;

  anon93_Else:
    assume {:nonnull} out_DescriptorData_7 != 0;
    assume out_DescriptorData_7 > 0;
    havoc out_Tmp_427;
    assume {:nonnull} out_Tmp_427 != 0;
    assume out_Tmp_427 > 0;
    goto L63;
}



procedure {:LoopProcedure} AvCip_AllocateResources_loop_L23(in_sdv_327: int, in_Tmp_399: int, in_Tmp_400: int, in_iPacket: int, in_Tmp_402: int, in_Tmp_403: int, in_Tmp_404: int, in_Tmp_405: int, in_Tmp_406: int, in_Tmp_407: int, in_Tmp_409: int, in_Status_25: int, in_NumDescriptors: int, in_Tmp_410: int, in_Tmp_411: int, in_Tmp_412: int, in_Tmp_413: int, in_Tmp_414: int, in_sdv_329: int, in_DescriptorData_7: int, in_Tmp_415: int, in_Tmp_416: int, in_sdv_331: int, in_Tmp_417: int, in_sdv_332: int, in_sdv_333: int, in_Tmp_418: int, in_NumPackets: int, in_iAttach: int, in_Tmp_419: int, in_Tmp_420: int, in_Tmp_421: int, in_sdv_336: int, in_Tmp_422: int, in_Tmp_423: int, in_Tmp_424: int, in_Tmp_425: int, in_Irql_11: int, in_sdv_337: int, in_Tmp_426: int, in_Tmp_427: int, in_Tmp_429: int, in_Tmp_430: int, in_Tmp_431: int, in_Tmp_432: int, in_Tmp_434: int, in_CipData_22: int, in_boogieTmp: int, in_vslice_dummy_var_146: int) returns (out_sdv_327: int, out_Tmp_399: int, out_Tmp_400: int, out_iPacket: int, out_Tmp_402: int, out_Tmp_403: int, out_Tmp_404: int, out_Tmp_405: int, out_Tmp_406: int, out_Tmp_407: int, out_Tmp_409: int, out_Status_25: int, out_Tmp_410: int, out_Tmp_411: int, out_Tmp_412: int, out_Tmp_413: int, out_Tmp_414: int, out_sdv_329: int, out_DescriptorData_7: int, out_Tmp_415: int, out_Tmp_416: int, out_sdv_331: int, out_Tmp_417: int, out_sdv_332: int, out_sdv_333: int, out_Tmp_418: int, out_iAttach: int, out_Tmp_419: int, out_Tmp_420: int, out_Tmp_421: int, out_sdv_336: int, out_Tmp_422: int, out_Tmp_423: int, out_Tmp_424: int, out_Tmp_425: int, out_Irql_11: int, out_sdv_337: int, out_Tmp_426: int, out_Tmp_427: int, out_Tmp_429: int, out_Tmp_430: int, out_Tmp_431: int, out_Tmp_432: int, out_Tmp_434: int, out_boogieTmp: int, out_vslice_dummy_var_146: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_410 == in_Tmp_410 || out_Tmp_410 == in_NumPackets * 12;
  free ensures {:va_keep} out_Tmp_419 == in_Tmp_419 || out_Tmp_419 == 12 * in_NumPackets;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessTalkPacket_2_loop_L69(in_Frame_3: int, in_BlockTime: int, in_UniTime_1: int, in_sdv_353: int, in_sdv_354: int, in_Cip: int, in_bDone: int, in_sdv_360: int, in_sdv_363: int, in_SpTime: int, in_FrameContext_6: int, in_SpHeader: int, in_sdv_365: int, in_pThisFrame: int, in_Tmp_462: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_150: int, in_vslice_dummy_var_152: int, in_vslice_dummy_var_153: int) returns (out_Frame_3: int, out_BlockTime: int, out_sdv_354: int, out_bDone: int, out_sdv_360: int, out_FrameContext_6: int, out_SpHeader: int, out_pThisFrame: int, out_Tmp_462: int, out_boogieTmp: int, out_vslice_dummy_var_150: int, out_vslice_dummy_var_152: int, out_vslice_dummy_var_153: int)
{

  entry:
    out_Frame_3, out_BlockTime, out_sdv_354, out_bDone, out_sdv_360, out_FrameContext_6, out_SpHeader, out_pThisFrame, out_Tmp_462, out_boogieTmp, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := in_Frame_3, in_BlockTime, in_sdv_354, in_bDone, in_sdv_360, in_FrameContext_6, in_SpHeader, in_pThisFrame, in_Tmp_462, in_boogieTmp, in_vslice_dummy_var_150, in_vslice_dummy_var_152, in_vslice_dummy_var_153;
    goto L69, exit;

  exit:
    return;

  L69:
    call {:si_unique_call 1969} out_sdv_360 := AvCip_CopyBlock(in_CipData_26);
    goto anon105_Else;

  anon105_Else:
    assume {:partition} out_sdv_360 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    out_BlockTime := 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  L76:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_Tmp_462;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    call {:si_unique_call 1972} sdv_RtlCopyMemory(0, 0, out_Tmp_462);
    goto L86;

  L86:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    havoc out_SpHeader;
    goto L97;

  L97:
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} out_SpHeader != 0;
    assume out_SpHeader > 0;
    goto L87;

  L87:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L103;

  L103:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    call {:si_unique_call 1973} out_vslice_dummy_var_150 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_Frame_3;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    call {:si_unique_call 1974} out_vslice_dummy_var_152 := sdv_InsertTailList(NotifyFrameList__CIP_DESCRIPTOR_DATA(in_DescriptorData_9), ListEntry__CIP_FRAME_CONTEXT(out_FrameContext_6));
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L124;

  L124:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    call {:si_unique_call 1975} out_sdv_354 := sdv_IsListEmpty(0);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} out_sdv_354 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_FrameContext_6;
    goto L132;

  L132:
    out_bDone := 1;
    goto L111;

  L111:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L134;

  L134:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1970} out_boogieTmp := corral_nondet();
    goto L77;

  L77:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L139;

  L139:
    goto anon123_Then;

  anon123_Then:
    assume {:partition} out_FrameContext_6 != 0;
    goto anon123_Then_dummy;

  anon123_Then_dummy:
    goto L_BAF_2;

  L_BAF_2:
    call {:si_unique_call 1976} {:si_old_unique_call 1} out_Frame_3, out_BlockTime, out_sdv_354, out_bDone, out_sdv_360, out_FrameContext_6, out_SpHeader, out_pThisFrame, out_Tmp_462, out_boogieTmp, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := AvCip_ProcessTalkPacket_2_loop_L69(out_Frame_3, out_BlockTime, in_UniTime_1, in_sdv_353, out_sdv_354, in_Cip, out_bDone, out_sdv_360, in_sdv_363, in_SpTime, out_FrameContext_6, out_SpHeader, in_sdv_365, out_pThisFrame, out_Tmp_462, in_CipData_26, in_DescriptorData_9, out_boogieTmp, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153);
    return;

  anon121_Then:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    goto L139;

  anon122_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L139;

  anon109_Then:
    goto anon109_Then_dummy;

  anon109_Then_dummy:
    goto L_BAF_2;

  anon117_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L134;

  anon120_Then:
    assume {:partition} out_sdv_354 != 0;
    goto L126;

  L126:
    out_FrameContext_6 := 0;
    goto L132;

  anon119_Then:
    goto L126;

  anon118_Then:
    goto L124;

  anon138_Then:
    goto L111;

  anon116_Then:
    goto L103;

  anon113_Then:
    goto L103;

  anon115_Then:
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_SpHeader;
    goto L97;

  anon114_Then:
    goto L87;

  anon112_Then:
    goto L87;

  anon110_Then:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_pThisFrame == 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_pThisFrame;
    goto L86;

  anon111_Then:
    assume {:partition} out_pThisFrame != 0;
    goto L86;

  anon108_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L77;

  anon145_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    out_BlockTime := out_BlockTime + 1;
    goto L153;

  L153:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_BlockTime;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1971} out_vslice_dummy_var_153 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(in_CipData_26), out_BlockTime);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_bDone != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_FrameContext_6 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  anon125_Then:
    assume {:partition} out_FrameContext_6 != 0;
    goto L76;

  anon124_Then:
    assume {:partition} out_bDone == 0;
    goto L76;

  anon146_Then:
    goto L153;

  anon107_Then:
    goto L76;
}



procedure {:LoopProcedure} AvCip_ProcessTalkPacket_2_loop_L69(in_Frame_3: int, in_BlockTime: int, in_UniTime_1: int, in_sdv_353: int, in_sdv_354: int, in_Cip: int, in_bDone: int, in_sdv_360: int, in_sdv_363: int, in_SpTime: int, in_FrameContext_6: int, in_SpHeader: int, in_sdv_365: int, in_pThisFrame: int, in_Tmp_462: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_150: int, in_vslice_dummy_var_152: int, in_vslice_dummy_var_153: int) returns (out_Frame_3: int, out_BlockTime: int, out_sdv_354: int, out_bDone: int, out_sdv_360: int, out_FrameContext_6: int, out_SpHeader: int, out_pThisFrame: int, out_Tmp_462: int, out_boogieTmp: int, out_vslice_dummy_var_150: int, out_vslice_dummy_var_152: int, out_vslice_dummy_var_153: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_354 == 1 || out_sdv_354 == 0 || out_sdv_354 == in_sdv_354;
  free ensures {:va_keep} out_bDone == 1 || out_bDone == in_bDone;
  free ensures {:va_keep} out_sdv_360 == 1 || out_sdv_360 == 0 || out_sdv_360 == in_sdv_360;
  free ensures {:va_keep} out_vslice_dummy_var_150 == 1 || out_vslice_dummy_var_150 == 0 || out_vslice_dummy_var_150 == in_vslice_dummy_var_150;
  free ensures {:va_keep} out_vslice_dummy_var_153 == 1 || out_vslice_dummy_var_153 == 0 || out_vslice_dummy_var_153 == in_vslice_dummy_var_153;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessTalkPacket_2_loop_L58(in_i_2: int, in_Frame_3: int, in_BlockTime: int, in_Tmp_451: int, in_MaxFrameSize: int, in_UniTime_1: int, in_sdv_353: int, in_sdv_354: int, in_Cip: int, in_bDone: int, in_sdv_360: int, in_sdv_363: int, in_SpTime: int, in_FrameContext_6: int, in_currLength: int, in_SpHeader: int, in_sdv_365: int, in_pThisFrame: int, in_Tmp_462: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_149: int, in_vslice_dummy_var_150: int, in_vslice_dummy_var_152: int, in_vslice_dummy_var_153: int) returns (out_i_2: int, out_Frame_3: int, out_BlockTime: int, out_Tmp_451: int, out_MaxFrameSize: int, out_sdv_354: int, out_bDone: int, out_sdv_360: int, out_FrameContext_6: int, out_currLength: int, out_SpHeader: int, out_pThisFrame: int, out_Tmp_462: int, out_boogieTmp: int, out_vslice_dummy_var_149: int, out_vslice_dummy_var_150: int, out_vslice_dummy_var_152: int, out_vslice_dummy_var_153: int)
{

  entry:
    out_i_2, out_Frame_3, out_BlockTime, out_Tmp_451, out_MaxFrameSize, out_sdv_354, out_bDone, out_sdv_360, out_FrameContext_6, out_currLength, out_SpHeader, out_pThisFrame, out_Tmp_462, out_boogieTmp, out_vslice_dummy_var_149, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := in_i_2, in_Frame_3, in_BlockTime, in_Tmp_451, in_MaxFrameSize, in_sdv_354, in_bDone, in_sdv_360, in_FrameContext_6, in_currLength, in_SpHeader, in_pThisFrame, in_Tmp_462, in_boogieTmp, in_vslice_dummy_var_149, in_vslice_dummy_var_150, in_vslice_dummy_var_152, in_vslice_dummy_var_153;
    goto L58, exit;

  exit:
    return;

  L58:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon104_Else;

  anon104_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_Tmp_451;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} out_Tmp_451 != 0;
    assume out_Tmp_451 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    call {:si_unique_call 1980} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1979} out_vslice_dummy_var_149 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(in_CipData_26), 3072);
    goto L69;

  L69:
    call {:si_unique_call 1977} out_Frame_3, out_BlockTime, out_sdv_354, out_bDone, out_sdv_360, out_FrameContext_6, out_SpHeader, out_pThisFrame, out_Tmp_462, out_boogieTmp, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := AvCip_ProcessTalkPacket_2_loop_L69(out_Frame_3, out_BlockTime, in_UniTime_1, in_sdv_353, out_sdv_354, in_Cip, out_bDone, out_sdv_360, in_sdv_363, in_SpTime, out_FrameContext_6, out_SpHeader, in_sdv_365, out_pThisFrame, out_Tmp_462, in_CipData_26, in_DescriptorData_9, out_boogieTmp, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153);
    goto L69_last;

  L69_last:
    call {:si_unique_call 1978} out_sdv_360 := AvCip_CopyBlock(in_CipData_26);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} out_sdv_360 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    out_BlockTime := 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  L76:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_Tmp_462;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    call {:si_unique_call 1983} sdv_RtlCopyMemory(0, 0, out_Tmp_462);
    goto L86;

  L86:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    havoc out_SpHeader;
    goto L97;

  L97:
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_SpTime != 0;
    assume in_SpTime > 0;
    assume {:nonnull} out_SpHeader != 0;
    assume out_SpHeader > 0;
    goto L87;

  L87:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L103;

  L103:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    call {:si_unique_call 1984} out_vslice_dummy_var_150 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_Frame_3;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} out_Frame_3 != 0;
    assume out_Frame_3 > 0;
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    call {:si_unique_call 1985} out_vslice_dummy_var_152 := sdv_InsertTailList(NotifyFrameList__CIP_DESCRIPTOR_DATA(in_DescriptorData_9), ListEntry__CIP_FRAME_CONTEXT(out_FrameContext_6));
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L124;

  L124:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    call {:si_unique_call 1986} out_sdv_354 := sdv_IsListEmpty(0);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} out_sdv_354 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_FrameContext_6;
    goto L132;

  L132:
    out_bDone := 1;
    goto L111;

  L111:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto L134;

  L134:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1981} out_boogieTmp := corral_nondet();
    goto L77;

  L77:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L139;

  L139:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} out_FrameContext_6 == 0;
    goto L73;

  L73:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L165;

  L165:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_MaxFrameSize;
    goto L168;

  L168:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} out_currLength != 0;
    goto L171;

  L171:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_currLength;
    goto anon141_Then;

  anon141_Then:
    assume {:partition} out_bDone == 0;
    out_i_2 := out_i_2 + 1;
    goto anon141_Then_dummy;

  anon141_Then_dummy:
    call {:si_unique_call 1987} {:si_old_unique_call 1} out_i_2, out_Frame_3, out_BlockTime, out_Tmp_451, out_MaxFrameSize, out_sdv_354, out_bDone, out_sdv_360, out_FrameContext_6, out_currLength, out_SpHeader, out_pThisFrame, out_Tmp_462, out_boogieTmp, out_vslice_dummy_var_149, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153 := AvCip_ProcessTalkPacket_2_loop_L58(out_i_2, out_Frame_3, out_BlockTime, out_Tmp_451, out_MaxFrameSize, in_UniTime_1, in_sdv_353, out_sdv_354, in_Cip, out_bDone, out_sdv_360, in_sdv_363, in_SpTime, out_FrameContext_6, out_currLength, out_SpHeader, in_sdv_365, out_pThisFrame, out_Tmp_462, in_CipData_26, in_DescriptorData_9, out_boogieTmp, out_vslice_dummy_var_149, out_vslice_dummy_var_150, out_vslice_dummy_var_152, out_vslice_dummy_var_153);
    return;

  anon126_Then:
    assume {:partition} out_currLength == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} in_DescriptorData_9 != 0;
    assume in_DescriptorData_9 > 0;
    goto L171;

  anon127_Then:
    goto L171;

  anon140_Then:
    goto L168;

  anon139_Then:
    goto L165;

  anon106_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L165;

  anon144_Then:
    goto L165;

  anon123_Then:
    assume {:partition} out_FrameContext_6 != 0;
    assume false;
    return;

  anon121_Then:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} out_FrameContext_6 != 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_UniTime_1 != 0;
    assume in_UniTime_1 > 0;
    goto L139;

  anon122_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L139;

  anon109_Then:
    assume false;
    return;

  anon117_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L134;

  anon120_Then:
    assume {:partition} out_sdv_354 != 0;
    goto L126;

  L126:
    out_FrameContext_6 := 0;
    goto L132;

  anon119_Then:
    goto L126;

  anon118_Then:
    goto L124;

  anon138_Then:
    goto L111;

  anon116_Then:
    goto L103;

  anon113_Then:
    goto L103;

  anon115_Then:
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_SpHeader;
    goto L97;

  anon114_Then:
    goto L87;

  anon112_Then:
    goto L87;

  anon110_Then:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_pThisFrame == 0;
    assume {:nonnull} out_FrameContext_6 != 0;
    assume out_FrameContext_6 > 0;
    havoc out_pThisFrame;
    goto L86;

  anon111_Then:
    assume {:partition} out_pThisFrame != 0;
    goto L86;

  anon108_Then:
    assume {:partition} out_FrameContext_6 == 0;
    goto L77;

  anon145_Then:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    out_BlockTime := out_BlockTime + 1;
    goto L153;

  L153:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    havoc out_BlockTime;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    call {:si_unique_call 1982} out_vslice_dummy_var_153 := Av1394_UpdateCycleTime(CycleTime__CIP_DATA(in_CipData_26), out_BlockTime);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_bDone != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_FrameContext_6 == 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto L76;

  anon125_Then:
    assume {:partition} out_FrameContext_6 != 0;
    goto L76;

  anon124_Then:
    assume {:partition} out_bDone == 0;
    goto L76;

  anon146_Then:
    goto L153;

  anon107_Then:
    goto L76;

  anon105_Then:
    assume {:partition} out_sdv_360 == 0;
    goto L73;

  anon137_Then:
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    assume {:nonnull} in_Cip != 0;
    assume in_Cip > 0;
    goto L69;
}



procedure {:LoopProcedure} AvCip_ProcessTalkPacket_2_loop_L58(in_i_2: int, in_Frame_3: int, in_BlockTime: int, in_Tmp_451: int, in_MaxFrameSize: int, in_UniTime_1: int, in_sdv_353: int, in_sdv_354: int, in_Cip: int, in_bDone: int, in_sdv_360: int, in_sdv_363: int, in_SpTime: int, in_FrameContext_6: int, in_currLength: int, in_SpHeader: int, in_sdv_365: int, in_pThisFrame: int, in_Tmp_462: int, in_CipData_26: int, in_DescriptorData_9: int, in_boogieTmp: int, in_vslice_dummy_var_149: int, in_vslice_dummy_var_150: int, in_vslice_dummy_var_152: int, in_vslice_dummy_var_153: int) returns (out_i_2: int, out_Frame_3: int, out_BlockTime: int, out_Tmp_451: int, out_MaxFrameSize: int, out_sdv_354: int, out_bDone: int, out_sdv_360: int, out_FrameContext_6: int, out_currLength: int, out_SpHeader: int, out_pThisFrame: int, out_Tmp_462: int, out_boogieTmp: int, out_vslice_dummy_var_149: int, out_vslice_dummy_var_150: int, out_vslice_dummy_var_152: int, out_vslice_dummy_var_153: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_354 == 1 || out_sdv_354 == 0 || out_sdv_354 == in_sdv_354;
  free ensures {:va_keep} out_bDone == 1 || out_bDone == in_bDone;
  free ensures {:va_keep} out_sdv_360 == 1 || out_sdv_360 == 0 || out_sdv_360 == in_sdv_360;
  free ensures {:va_keep} out_vslice_dummy_var_149 == 1 || out_vslice_dummy_var_149 == 0 || out_vslice_dummy_var_149 == in_vslice_dummy_var_149;
  free ensures {:va_keep} out_vslice_dummy_var_150 == 1 || out_vslice_dummy_var_150 == 0 || out_vslice_dummy_var_150 == in_vslice_dummy_var_150;
  free ensures {:va_keep} out_vslice_dummy_var_153 == 1 || out_vslice_dummy_var_153 == 0 || out_vslice_dummy_var_153 == in_vslice_dummy_var_153;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessTalkPacket_2_loop_L225(in_UniTime_2: int, in_sdv_362: int, in_FrameContext_6: int, in_CipData_26: int)
{

  entry:
    goto L225, exit;

  exit:
    return;

  L225:
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    goto anon130_Else;

  anon130_Else:
    assume {:nonnull} in_FrameContext_6 != 0;
    assume in_FrameContext_6 > 0;
    assume {:nonnull} in_FrameContext_6 != 0;
    assume in_FrameContext_6 > 0;
    assume {:nonnull} in_UniTime_2 != 0;
    assume in_UniTime_2 > 0;
    assume {:nonnull} in_CipData_26 != 0;
    assume in_CipData_26 > 0;
    assume {:nonnull} in_UniTime_2 != 0;
    assume in_UniTime_2 > 0;
    goto anon130_Else_dummy;

  anon130_Else_dummy:
    call {:si_unique_call 1988} {:si_old_unique_call 1} AvCip_ProcessTalkPacket_2_loop_L225(in_UniTime_2, in_sdv_362, in_FrameContext_6, in_CipData_26);
    return;
}



procedure {:LoopProcedure} AvCip_ProcessTalkPacket_2_loop_L225(in_UniTime_2: int, in_sdv_362: int, in_FrameContext_6: int, in_CipData_26: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvFcp_CompleteQueuedFcp_loop_L53(in_Irql_16: int, in_FcpIrp_1: int, in_sdv_395: int, in_sdv_399: int, in_sdv_400: int, in_Tmp_490: int, in_IrpEntry_1: int, in_PdoExtension_9: int) returns (out_Irql_16: int, out_FcpIrp_1: int, out_sdv_395: int, out_sdv_399: int, out_sdv_400: int, out_Tmp_490: int, out_IrpEntry_1: int)
{

  entry:
    out_Irql_16, out_FcpIrp_1, out_sdv_395, out_sdv_399, out_sdv_400, out_Tmp_490, out_IrpEntry_1 := in_Irql_16, in_FcpIrp_1, in_sdv_395, in_sdv_399, in_sdv_400, in_Tmp_490, in_IrpEntry_1;
    goto L53, exit;

  exit:
    return;

  L53:
    call {:si_unique_call 1989} out_sdv_399 := sdv_IsListEmpty(0);
    goto anon17_Then;

  anon17_Then:
    assume {:partition} out_sdv_399 == 0;
    assume {:nonnull} in_PdoExtension_9 != 0;
    assume in_PdoExtension_9 > 0;
    call {:si_unique_call 1994} out_IrpEntry_1 := RemoveHeadList(FcpReqIrpList__PDO_DEVICE_EXTENSION(in_PdoExtension_9));
    call {:si_unique_call 1995} out_sdv_400 := sdv_containing_record(out_IrpEntry_1, 88);
    out_FcpIrp_1 := out_sdv_400;
    call {:si_unique_call 1996} out_sdv_395 := sdv_IoSetCancelRoutine(out_FcpIrp_1, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_sdv_395 != 0;
    call {:si_unique_call 1990} sdv_KeReleaseSpinLock(0, out_Irql_16);
    assume {:nonnull} out_FcpIrp_1 != 0;
    assume out_FcpIrp_1 > 0;
    call {:si_unique_call 1991} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1992} out_Tmp_490 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_490 != 0;
    assume out_Tmp_490 > 0;
    call {:si_unique_call 1993} sdv_KeAcquireSpinLock(0, out_Tmp_490);
    assume {:nonnull} out_Tmp_490 != 0;
    assume out_Tmp_490 > 0;
    havoc out_Irql_16;
    goto anon18_Else_dummy;

  anon18_Else_dummy:
    goto L_BAF_3;

  L_BAF_3:
    call {:si_unique_call 1998} {:si_old_unique_call 1} out_Irql_16, out_FcpIrp_1, out_sdv_395, out_sdv_399, out_sdv_400, out_Tmp_490, out_IrpEntry_1 := AvFcp_CompleteQueuedFcp_loop_L53(out_Irql_16, out_FcpIrp_1, out_sdv_395, out_sdv_399, out_sdv_400, out_Tmp_490, out_IrpEntry_1, in_PdoExtension_9);
    return;

  anon18_Then:
    assume {:partition} out_sdv_395 == 0;
    assume {:nonnull} out_FcpIrp_1 != 0;
    assume out_FcpIrp_1 > 0;
    call {:si_unique_call 1997} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(out_FcpIrp_1))));
    out_FcpIrp_1 := 0;
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    goto L_BAF_3;
}



procedure {:LoopProcedure} AvFcp_CompleteQueuedFcp_loop_L53(in_Irql_16: int, in_FcpIrp_1: int, in_sdv_395: int, in_sdv_399: int, in_sdv_400: int, in_Tmp_490: int, in_IrpEntry_1: int, in_PdoExtension_9: int) returns (out_Irql_16: int, out_FcpIrp_1: int, out_sdv_395: int, out_sdv_399: int, out_sdv_400: int, out_Tmp_490: int, out_IrpEntry_1: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Irql_16 == in_Irql_16;
  free ensures {:va_keep} out_FcpIrp_1 == in_FcpIrp_1;
  free ensures {:va_keep} out_sdv_395 == in_sdv_395;
  free ensures {:va_keep} out_sdv_399 == in_sdv_399;
  free ensures {:va_keep} out_sdv_400 == in_sdv_400;
  free ensures {:va_keep} out_Tmp_490 == in_Tmp_490;
  free ensures {:va_keep} out_IrpEntry_1 == in_IrpEntry_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvFcp_CompleteQueuedFcp_loop_L12(in_FcpIrp: int, in_sdv_393: int, in_sdv_397: int, in_sdv_398: int, in_IrpEntry: int, in_Irql_17: int, in_Tmp_490: int, in_PdoExtension_9: int) returns (out_FcpIrp: int, out_sdv_393: int, out_sdv_397: int, out_sdv_398: int, out_IrpEntry: int, out_Irql_17: int, out_Tmp_490: int)
{

  entry:
    out_FcpIrp, out_sdv_393, out_sdv_397, out_sdv_398, out_IrpEntry, out_Irql_17, out_Tmp_490 := in_FcpIrp, in_sdv_393, in_sdv_397, in_sdv_398, in_IrpEntry, in_Irql_17, in_Tmp_490;
    goto L12, exit;

  exit:
    return;

  L12:
    call {:si_unique_call 1999} out_sdv_393 := sdv_IsListEmpty(0);
    goto anon15_Then;

  anon15_Then:
    assume {:partition} out_sdv_393 == 0;
    assume {:nonnull} in_PdoExtension_9 != 0;
    assume in_PdoExtension_9 > 0;
    call {:si_unique_call 2004} out_IrpEntry := RemoveHeadList(FcpRspIrpList__PDO_DEVICE_EXTENSION(in_PdoExtension_9));
    call {:si_unique_call 2005} out_sdv_397 := sdv_containing_record(out_IrpEntry, 88);
    out_FcpIrp := out_sdv_397;
    call {:si_unique_call 2006} out_sdv_398 := sdv_IoSetCancelRoutine(out_FcpIrp, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} out_sdv_398 != 0;
    call {:si_unique_call 2000} sdv_KeReleaseSpinLock(0, out_Irql_17);
    assume {:nonnull} out_FcpIrp != 0;
    assume out_FcpIrp > 0;
    call {:si_unique_call 2001} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2002} out_Tmp_490 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_490 != 0;
    assume out_Tmp_490 > 0;
    call {:si_unique_call 2003} sdv_KeAcquireSpinLock(0, out_Tmp_490);
    assume {:nonnull} out_Tmp_490 != 0;
    assume out_Tmp_490 > 0;
    havoc out_Irql_17;
    goto anon16_Else_dummy;

  anon16_Else_dummy:
    goto L_BAF_4;

  L_BAF_4:
    call {:si_unique_call 2008} {:si_old_unique_call 1} out_FcpIrp, out_sdv_393, out_sdv_397, out_sdv_398, out_IrpEntry, out_Irql_17, out_Tmp_490 := AvFcp_CompleteQueuedFcp_loop_L12(out_FcpIrp, out_sdv_393, out_sdv_397, out_sdv_398, out_IrpEntry, out_Irql_17, out_Tmp_490, in_PdoExtension_9);
    return;

  anon16_Then:
    assume {:partition} out_sdv_398 == 0;
    assume {:nonnull} out_FcpIrp != 0;
    assume out_FcpIrp > 0;
    call {:si_unique_call 2007} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(out_FcpIrp))));
    out_FcpIrp := 0;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    goto L_BAF_4;
}



procedure {:LoopProcedure} AvFcp_CompleteQueuedFcp_loop_L12(in_FcpIrp: int, in_sdv_393: int, in_sdv_397: int, in_sdv_398: int, in_IrpEntry: int, in_Irql_17: int, in_Tmp_490: int, in_PdoExtension_9: int) returns (out_FcpIrp: int, out_sdv_393: int, out_sdv_397: int, out_sdv_398: int, out_IrpEntry: int, out_Irql_17: int, out_Tmp_490: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_FcpIrp == in_FcpIrp;
  free ensures {:va_keep} out_sdv_393 == in_sdv_393;
  free ensures {:va_keep} out_sdv_397 == in_sdv_397;
  free ensures {:va_keep} out_sdv_398 == in_sdv_398;
  free ensures {:va_keep} out_IrpEntry == in_IrpEntry;
  free ensures {:va_keep} out_Irql_17 == in_Irql_17;
  free ensures {:va_keep} out_Tmp_490 == in_Tmp_490;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvFcp_ProcessRequest_loop_L36(in_CurrNotify: int, in_AsyncPacket: int, in_PdoExtension_10: int, in_DefaultPdoExtension: int, in_PdoCts: int, in_AvAdapterData_7: int) returns (out_CurrNotify: int, out_PdoExtension_10: int, out_DefaultPdoExtension: int)
{

  entry:
    out_CurrNotify, out_PdoExtension_10, out_DefaultPdoExtension := in_CurrNotify, in_PdoExtension_10, in_DefaultPdoExtension;
    goto L36, exit;

  exit:
    return;

  L36:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_CurrNotify != 0;
    assume {:nonnull} out_CurrNotify != 0;
    assume out_CurrNotify > 0;
    havoc out_CurrNotify;
    goto L39;

  L39:
    assume {:nonnull} out_CurrNotify != 0;
    assume out_CurrNotify > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} out_CurrNotify != 0;
    assume out_CurrNotify > 0;
    havoc out_PdoExtension_10;
    assume {:nonnull} out_PdoExtension_10 != 0;
    assume out_PdoExtension_10 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} in_AsyncPacket != 0;
    assume in_AsyncPacket > 0;
    assume {:nonnull} out_PdoExtension_10 != 0;
    assume out_PdoExtension_10 > 0;
    goto anon38_Then;

  anon38_Then:
    goto L43;

  L43:
    assume {:nonnull} out_PdoExtension_10 != 0;
    assume out_PdoExtension_10 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} out_PdoExtension_10 != 0;
    assume out_PdoExtension_10 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    out_DefaultPdoExtension := out_PdoExtension_10;
    goto L40;

  L40:
    goto anon36_Then;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    call {:si_unique_call 2009} {:si_old_unique_call 1} out_CurrNotify, out_PdoExtension_10, out_DefaultPdoExtension := AvFcp_ProcessRequest_loop_L36(out_CurrNotify, in_AsyncPacket, out_PdoExtension_10, out_DefaultPdoExtension, in_PdoCts, in_AvAdapterData_7);
    return;

  anon44_Then:
    goto L40;

  anon37_Then:
    goto L40;

  anon46_Then:
    goto L43;

  anon35_Then:
    goto L40;

  anon34_Then:
    assume {:partition} out_CurrNotify == 0;
    assume {:nonnull} in_AvAdapterData_7 != 0;
    assume in_AvAdapterData_7 > 0;
    havoc out_CurrNotify;
    goto L39;
}



procedure {:LoopProcedure} AvFcp_ProcessRequest_loop_L36(in_CurrNotify: int, in_AsyncPacket: int, in_PdoExtension_10: int, in_DefaultPdoExtension: int, in_PdoCts: int, in_AvAdapterData_7: int) returns (out_CurrNotify: int, out_PdoExtension_10: int, out_DefaultPdoExtension: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvFcp_ProcessResponse_loop_L36(in_CurrNotify_1: int, in_AsyncPacket_1: int, in_PdoExtension_11: int, in_DefaultPdoExtension_1: int, in_PdoCts_1: int, in_AvAdapterData_8: int) returns (out_CurrNotify_1: int, out_PdoExtension_11: int, out_DefaultPdoExtension_1: int)
{

  entry:
    out_CurrNotify_1, out_PdoExtension_11, out_DefaultPdoExtension_1 := in_CurrNotify_1, in_PdoExtension_11, in_DefaultPdoExtension_1;
    goto L36, exit;

  exit:
    return;

  L36:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_CurrNotify_1 != 0;
    assume {:nonnull} out_CurrNotify_1 != 0;
    assume out_CurrNotify_1 > 0;
    havoc out_CurrNotify_1;
    goto L39;

  L39:
    assume {:nonnull} out_CurrNotify_1 != 0;
    assume out_CurrNotify_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} out_CurrNotify_1 != 0;
    assume out_CurrNotify_1 > 0;
    havoc out_PdoExtension_11;
    assume {:nonnull} out_PdoExtension_11 != 0;
    assume out_PdoExtension_11 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} in_AsyncPacket_1 != 0;
    assume in_AsyncPacket_1 > 0;
    assume {:nonnull} out_PdoExtension_11 != 0;
    assume out_PdoExtension_11 > 0;
    goto anon42_Then;

  anon42_Then:
    goto L43;

  L43:
    assume {:nonnull} out_PdoExtension_11 != 0;
    assume out_PdoExtension_11 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} out_PdoExtension_11 != 0;
    assume out_PdoExtension_11 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    out_DefaultPdoExtension_1 := out_PdoExtension_11;
    goto L40;

  L40:
    goto anon40_Then;

  anon40_Then:
    goto anon40_Then_dummy;

  anon40_Then_dummy:
    call {:si_unique_call 2010} {:si_old_unique_call 1} out_CurrNotify_1, out_PdoExtension_11, out_DefaultPdoExtension_1 := AvFcp_ProcessResponse_loop_L36(out_CurrNotify_1, in_AsyncPacket_1, out_PdoExtension_11, out_DefaultPdoExtension_1, in_PdoCts_1, in_AvAdapterData_8);
    return;

  anon49_Then:
    goto L40;

  anon41_Then:
    goto L40;

  anon51_Then:
    goto L43;

  anon39_Then:
    goto L40;

  anon38_Then:
    assume {:partition} out_CurrNotify_1 == 0;
    assume {:nonnull} in_AvAdapterData_8 != 0;
    assume in_AvAdapterData_8 > 0;
    havoc out_CurrNotify_1;
    goto L39;
}



procedure {:LoopProcedure} AvFcp_ProcessResponse_loop_L36(in_CurrNotify_1: int, in_AsyncPacket_1: int, in_PdoExtension_11: int, in_DefaultPdoExtension_1: int, in_PdoCts_1: int, in_AvAdapterData_8: int) returns (out_CurrNotify_1: int, out_PdoExtension_11: int, out_DefaultPdoExtension_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_Process_oMap_loop_L47(in_MonitorInfo: int, in_PlugNum: int, in_CurrMonitor: int, in_oPCR: int, in_AvAdapterData_11: int) returns (out_CurrMonitor: int)
{

  entry:
    out_CurrMonitor := in_CurrMonitor;
    goto L47, exit;

  exit:
    return;

  L47:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_CurrMonitor != 0;
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    havoc out_CurrMonitor;
    goto L53;

  L53:
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} in_oPCR != 0;
    assume in_oPCR > 0;
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    assume {:nonnull} in_MonitorInfo != 0;
    assume in_MonitorInfo > 0;
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} out_CurrMonitor != 0;
    assume out_CurrMonitor > 0;
    goto L59;

  L59:
    goto anon25_Then;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    havoc out_CurrMonitor;
    return;

  anon30_Then:
    goto L59;

  anon24_Then:
    assume {:partition} out_CurrMonitor == 0;
    assume {:nonnull} in_AvAdapterData_11 != 0;
    assume in_AvAdapterData_11 > 0;
    havoc out_CurrMonitor;
    goto L53;
}



procedure {:LoopProcedure} AvCmp_Process_oMap_loop_L47(in_MonitorInfo: int, in_PlugNum: int, in_CurrMonitor: int, in_oPCR: int, in_AvAdapterData_11: int) returns (out_CurrMonitor: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_DeletePlug_loop_L35(in_MonitorInfo_1: int, in_CurrMonitor_1: int, in_Plug_1: int, in_AvAdapterData_12: int) returns (out_CurrMonitor_1: int)
{

  entry:
    out_CurrMonitor_1 := in_CurrMonitor_1;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_CurrMonitor_1 != 0;
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    havoc out_CurrMonitor_1;
    goto L41;

  L41:
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_Plug_1 != 0;
    assume in_Plug_1 > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} in_Plug_1 != 0;
    assume in_Plug_1 > 0;
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    assume {:nonnull} in_MonitorInfo_1 != 0;
    assume in_MonitorInfo_1 > 0;
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} out_CurrMonitor_1 != 0;
    assume out_CurrMonitor_1 > 0;
    goto L46;

  L46:
    goto anon27_Then;

  anon27_Then:
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    havoc out_CurrMonitor_1;
    return;

  anon33_Then:
    goto L46;

  anon26_Then:
    assume {:partition} out_CurrMonitor_1 == 0;
    assume {:nonnull} in_AvAdapterData_12 != 0;
    assume in_AvAdapterData_12 > 0;
    havoc out_CurrMonitor_1;
    goto L41;
}



procedure {:LoopProcedure} AvCmp_DeletePlug_loop_L35(in_MonitorInfo_1: int, in_CurrMonitor_1: int, in_Plug_1: int, in_AvAdapterData_12: int) returns (out_CurrMonitor_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_P2PCR_oPlug_loop_L96(in_MonitorInfo_2: int, in_iPlug: int, in_iPCR: int, in_CurrMonitor_2: int, in_AvAdapterData_13: int) returns (out_CurrMonitor_2: int)
{

  entry:
    out_CurrMonitor_2 := in_CurrMonitor_2;
    goto L96, exit;

  exit:
    return;

  L96:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} out_CurrMonitor_2 != 0;
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    havoc out_CurrMonitor_2;
    goto L102;

  L102:
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPlug != 0;
    assume in_iPlug > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} in_iPCR != 0;
    assume in_iPCR > 0;
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    assume {:nonnull} in_MonitorInfo_2 != 0;
    assume in_MonitorInfo_2 > 0;
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} out_CurrMonitor_2 != 0;
    assume out_CurrMonitor_2 > 0;
    goto L108;

  L108:
    goto anon103_Then;

  anon103_Then:
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    havoc out_CurrMonitor_2;
    return;

  anon121_Then:
    goto L108;

  anon102_Then:
    assume {:partition} out_CurrMonitor_2 == 0;
    assume {:nonnull} in_AvAdapterData_13 != 0;
    assume in_AvAdapterData_13 > 0;
    havoc out_CurrMonitor_2;
    goto L102;
}



procedure {:LoopProcedure} AvCmp_P2PCR_oPlug_loop_L96(in_MonitorInfo_2: int, in_iPlug: int, in_iPCR: int, in_CurrMonitor_2: int, in_AvAdapterData_13: int) returns (out_CurrMonitor_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_SetPlug_loop_L59(in_MonitorInfo_3: int, in_PlugNum_2: int, in_CurrMonitor_3: int, in_Plug_2: int, in_Pcr_2: int, in_AvAdapterData_14: int) returns (out_CurrMonitor_3: int)
{

  entry:
    out_CurrMonitor_3 := in_CurrMonitor_3;
    goto L59, exit;

  exit:
    return;

  L59:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} out_CurrMonitor_3 != 0;
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    havoc out_CurrMonitor_3;
    goto L65;

  L65:
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Plug_2 != 0;
    assume in_Plug_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    goto L72;

  L72:
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} out_CurrMonitor_3 != 0;
    assume out_CurrMonitor_3 > 0;
    goto L73;

  L73:
    goto anon33_Then;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    havoc out_CurrMonitor_3;
    return;

  anon32_Then:
    goto L73;

  anon36_Then:
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    assume {:nonnull} in_MonitorInfo_3 != 0;
    assume in_MonitorInfo_3 > 0;
    assume {:nonnull} in_Pcr_2 != 0;
    assume in_Pcr_2 > 0;
    goto L72;

  anon31_Then:
    assume {:partition} out_CurrMonitor_3 == 0;
    assume {:nonnull} in_AvAdapterData_14 != 0;
    assume in_AvAdapterData_14 > 0;
    havoc out_CurrMonitor_3;
    goto L65;
}



procedure {:LoopProcedure} AvCmp_SetPlug_loop_L59(in_MonitorInfo_3: int, in_PlugNum_2: int, in_CurrMonitor_3: int, in_Plug_2: int, in_Pcr_2: int, in_AvAdapterData_14: int) returns (out_CurrMonitor_3: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_Process_iMap_loop_L47(in_MonitorInfo_4: int, in_PlugNum_4: int, in_iPCR_2: int, in_CurrMonitor_4: int, in_AvAdapterData_15: int) returns (out_CurrMonitor_4: int)
{

  entry:
    out_CurrMonitor_4 := in_CurrMonitor_4;
    goto L47, exit;

  exit:
    return;

  L47:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_CurrMonitor_4 != 0;
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    havoc out_CurrMonitor_4;
    goto L53;

  L53:
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_iPCR_2 != 0;
    assume in_iPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_iPCR_2 != 0;
    assume in_iPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_iPCR_2 != 0;
    assume in_iPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_iPCR_2 != 0;
    assume in_iPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_iPCR_2 != 0;
    assume in_iPCR_2 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} in_iPCR_2 != 0;
    assume in_iPCR_2 > 0;
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    assume {:nonnull} in_MonitorInfo_4 != 0;
    assume in_MonitorInfo_4 > 0;
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} out_CurrMonitor_4 != 0;
    assume out_CurrMonitor_4 > 0;
    goto L59;

  L59:
    goto anon25_Then;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    havoc out_CurrMonitor_4;
    return;

  anon30_Then:
    goto L59;

  anon24_Then:
    assume {:partition} out_CurrMonitor_4 == 0;
    assume {:nonnull} in_AvAdapterData_15 != 0;
    assume in_AvAdapterData_15 > 0;
    havoc out_CurrMonitor_4;
    goto L53;
}



procedure {:LoopProcedure} AvCmp_Process_iMap_loop_L47(in_MonitorInfo_4: int, in_PlugNum_4: int, in_iPCR_2: int, in_CurrMonitor_4: int, in_AvAdapterData_15: int) returns (out_CurrMonitor_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_CreatePlugs_loop_L59(in_numPcr: int, in_ntStatus_35: int, in_iMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int)
{

  entry:
    out_numPcr, out_ntStatus_35 := in_numPcr, in_ntStatus_35;
    goto L59, exit;

  exit:
    return;

  L59:
    assume {:nonnull} in_iMPR != 0;
    assume in_iMPR > 0;
    goto anon37_Else;

  anon37_Else:
    call {:si_unique_call 2011} out_ntStatus_35 := AvCmp_InitPlugInstance(in_BusExtension_39, out_numPcr, 1);
    goto anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} out_ntStatus_35 >= 0;
    out_numPcr := out_numPcr + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    call {:si_unique_call 2012} {:si_old_unique_call 1} out_numPcr, out_ntStatus_35 := AvCmp_CreatePlugs_loop_L59(out_numPcr, out_ntStatus_35, in_iMPR, in_BusExtension_39);
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlugs_loop_L59(in_numPcr: int, in_ntStatus_35: int, in_iMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_CreatePlugs_loop_L50(in_numPcr: int, in_ntStatus_35: int, in_oMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int)
{

  entry:
    out_numPcr, out_ntStatus_35 := in_numPcr, in_ntStatus_35;
    goto L50, exit;

  exit:
    return;

  L50:
    assume {:nonnull} in_oMPR != 0;
    assume in_oMPR > 0;
    goto anon35_Else;

  anon35_Else:
    call {:si_unique_call 2013} out_ntStatus_35 := AvCmp_InitPlugInstance(in_BusExtension_39, out_numPcr, 0);
    goto anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto anon36_Else;

  anon36_Else:
    assume {:partition} out_ntStatus_35 >= 0;
    out_numPcr := out_numPcr + 1;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    call {:si_unique_call 2014} {:si_old_unique_call 1} out_numPcr, out_ntStatus_35 := AvCmp_CreatePlugs_loop_L50(out_numPcr, out_ntStatus_35, in_oMPR, in_BusExtension_39);
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlugs_loop_L50(in_numPcr: int, in_ntStatus_35: int, in_oMPR: int, in_BusExtension_39: int) returns (out_numPcr: int, out_ntStatus_35: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_P2PConnect_loop_L60(in_Retries: int, in_CmpData_9: int, in_Connect_9: int, in_ntStatus_39: int, in_Tmp_632: int, in_oPlug_3: int) returns (out_Retries: int, out_ntStatus_39: int, out_Tmp_632: int)
{
  var vslice_dummy_var_451: int;

  entry:
    out_Retries, out_ntStatus_39, out_Tmp_632 := in_Retries, in_ntStatus_39, in_Tmp_632;
    goto L60, exit;

  exit:
    return;

  L60:
    assume {:nonnull} in_oPlug_3 != 0;
    assume in_oPlug_3 > 0;
    havoc vslice_dummy_var_451;
    call {:si_unique_call 2015} out_ntStatus_39 := AvCmp_P2PCR_oPlug(vslice_dummy_var_451, in_CmpData_9, in_Connect_9, 0, 0);
    goto anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then;

  anon79_Then:
    assume {:partition} 0 > out_ntStatus_39;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} out_ntStatus_39 != -1073741823;
    out_Tmp_632 := out_Retries;
    out_Retries := out_Retries - 1;
    goto anon94_Else;

  anon94_Else:
    assume {:partition} out_Tmp_632 != 0;
    goto anon94_Else_dummy;

  anon94_Else_dummy:
    goto L_BAF_5;

  L_BAF_5:
    call {:si_unique_call 2016} {:si_old_unique_call 1} out_Retries, out_ntStatus_39, out_Tmp_632 := AvCmp_P2PConnect_loop_L60(out_Retries, in_CmpData_9, in_Connect_9, out_ntStatus_39, out_Tmp_632, in_oPlug_3);
    return;

  anon80_Then:
    assume {:partition} out_ntStatus_39 == -1073741823;
    goto anon80_Then_dummy;

  anon80_Then_dummy:
    goto L_BAF_5;
}



procedure {:LoopProcedure} AvCmp_P2PConnect_loop_L60(in_Retries: int, in_CmpData_9: int, in_Connect_9: int, in_ntStatus_39: int, in_Tmp_632: int, in_oPlug_3: int) returns (out_Retries: int, out_ntStatus_39: int, out_Tmp_632: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_P2PConnect_loop_L92(in_CmpData_9: int, in_Tmp_628: int, in_Connect_9: int, in_Retries_1: int, in_ntStatus_39: int, in_iPlug_3: int) returns (out_Tmp_628: int, out_Retries_1: int, out_ntStatus_39: int)
{
  var vslice_dummy_var_452: int;

  entry:
    out_Tmp_628, out_Retries_1, out_ntStatus_39 := in_Tmp_628, in_Retries_1, in_ntStatus_39;
    goto L92, exit;

  exit:
    return;

  L92:
    assume {:nonnull} in_iPlug_3 != 0;
    assume in_iPlug_3 > 0;
    havoc vslice_dummy_var_452;
    call {:si_unique_call 2017} out_ntStatus_39 := AvCmp_P2PCR_iPlug(vslice_dummy_var_452, in_CmpData_9, in_Connect_9, 0, 0);
    goto anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    goto anon85_Else;

  anon85_Else:
    assume {:partition} out_ntStatus_39 < 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_ntStatus_39 != -1073741823;
    out_Tmp_628 := out_Retries_1;
    out_Retries_1 := out_Retries_1 - 1;
    goto anon96_Else;

  anon96_Else:
    assume {:partition} out_Tmp_628 != 0;
    goto anon96_Else_dummy;

  anon96_Else_dummy:
    goto L_BAF_6;

  L_BAF_6:
    call {:si_unique_call 2018} {:si_old_unique_call 1} out_Tmp_628, out_Retries_1, out_ntStatus_39 := AvCmp_P2PConnect_loop_L92(in_CmpData_9, out_Tmp_628, in_Connect_9, out_Retries_1, out_ntStatus_39, in_iPlug_3);
    return;

  anon86_Then:
    assume {:partition} out_ntStatus_39 == -1073741823;
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    goto L_BAF_6;
}



procedure {:LoopProcedure} AvCmp_P2PConnect_loop_L92(in_CmpData_9: int, in_Tmp_628: int, in_Connect_9: int, in_Retries_1: int, in_ntStatus_39: int, in_iPlug_3: int) returns (out_Tmp_628: int, out_Retries_1: int, out_ntStatus_39: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_P2PDisconnect_loop_L197(in_MonitorInfo_6: int, in_oPlug_4: int, in_CurrMonitor_5: int, in_oPCR_3: int, in_AvAdapterData_16: int) returns (out_CurrMonitor_5: int)
{

  entry:
    out_CurrMonitor_5 := in_CurrMonitor_5;
    goto L197, exit;

  exit:
    return;

  L197:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} out_CurrMonitor_5 != 0;
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    havoc out_CurrMonitor_5;
    goto L203;

  L203:
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPlug_4 != 0;
    assume in_oPlug_4 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} in_oPCR_3 != 0;
    assume in_oPCR_3 > 0;
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    assume {:nonnull} in_MonitorInfo_6 != 0;
    assume in_MonitorInfo_6 > 0;
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} out_CurrMonitor_5 != 0;
    assume out_CurrMonitor_5 > 0;
    goto L209;

  L209:
    goto anon164_Then;

  anon164_Then:
    goto anon164_Then_dummy;

  anon164_Then_dummy:
    havoc out_CurrMonitor_5;
    return;

  anon180_Then:
    goto L209;

  anon163_Then:
    assume {:partition} out_CurrMonitor_5 == 0;
    assume {:nonnull} in_AvAdapterData_16 != 0;
    assume in_AvAdapterData_16 > 0;
    havoc out_CurrMonitor_5;
    goto L203;
}



procedure {:LoopProcedure} AvCmp_P2PDisconnect_loop_L197(in_MonitorInfo_6: int, in_oPlug_4: int, in_CurrMonitor_5: int, in_oPCR_3: int, in_AvAdapterData_16: int) returns (out_CurrMonitor_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_P2PDisconnect_loop_L106(in_MonitorInfo_5: int, in_iPlug_4: int, in_iPCR_4: int, in_CurrMonitor_6: int, in_AvAdapterData_17: int) returns (out_CurrMonitor_6: int)
{

  entry:
    out_CurrMonitor_6 := in_CurrMonitor_6;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} out_CurrMonitor_6 != 0;
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    havoc out_CurrMonitor_6;
    goto L112;

  L112:
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPlug_4 != 0;
    assume in_iPlug_4 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPCR_4 != 0;
    assume in_iPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPCR_4 != 0;
    assume in_iPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPCR_4 != 0;
    assume in_iPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPCR_4 != 0;
    assume in_iPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPCR_4 != 0;
    assume in_iPCR_4 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} in_iPCR_4 != 0;
    assume in_iPCR_4 > 0;
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    assume {:nonnull} in_MonitorInfo_5 != 0;
    assume in_MonitorInfo_5 > 0;
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} out_CurrMonitor_6 != 0;
    assume out_CurrMonitor_6 > 0;
    goto L118;

  L118:
    goto anon146_Then;

  anon146_Then:
    goto anon146_Then_dummy;

  anon146_Then_dummy:
    havoc out_CurrMonitor_6;
    return;

  anon189_Then:
    goto L118;

  anon145_Then:
    assume {:partition} out_CurrMonitor_6 == 0;
    assume {:nonnull} in_AvAdapterData_17 != 0;
    assume in_AvAdapterData_17 > 0;
    havoc out_CurrMonitor_6;
    goto L112;
}



procedure {:LoopProcedure} AvCmp_P2PDisconnect_loop_L106(in_MonitorInfo_5: int, in_iPlug_4: int, in_iPCR_4: int, in_CurrMonitor_6: int, in_AvAdapterData_17: int) returns (out_CurrMonitor_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_CreatePlug_loop_L95(in_Tmp_682: int, in_Tmp_684: int, in_PlugNum_6: int, in_CmpData_14: int) returns (out_Tmp_682: int, out_Tmp_684: int, out_PlugNum_6: int)
{

  entry:
    out_Tmp_682, out_Tmp_684, out_PlugNum_6 := in_Tmp_682, in_Tmp_684, in_PlugNum_6;
    goto L95, exit;

  exit:
    return;

  L95:
    out_Tmp_682 := out_PlugNum_6;
    assume {:nonnull} in_CmpData_14 != 0;
    assume in_CmpData_14 > 0;
    havoc out_Tmp_684;
    assume {:nonnull} out_Tmp_684 != 0;
    assume out_Tmp_684 > 0;
    goto anon48_Else;

  anon48_Else:
    out_PlugNum_6 := out_PlugNum_6 + 1;
    goto anon48_Else_dummy;

  anon48_Else_dummy:
    havoc out_PlugNum_6;
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlug_loop_L95(in_Tmp_682: int, in_Tmp_684: int, in_PlugNum_6: int, in_CmpData_14: int) returns (out_Tmp_682: int, out_Tmp_684: int, out_PlugNum_6: int);
  free ensures {:va_keep} out_Tmp_682 == in_PlugNum_6 || out_Tmp_682 == in_Tmp_682;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_CreatePlug_loop_L51(in_MonitorInfo_7: int, in_PlugNum_6: int, in_CurrMonitor_7: int, in_Plug_6: int, in_Pcr_9: int, in_AvAdapterData_18: int) returns (out_CurrMonitor_7: int)
{

  entry:
    out_CurrMonitor_7 := in_CurrMonitor_7;
    goto L51, exit;

  exit:
    return;

  L51:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_CurrMonitor_7 != 0;
    assume {:nonnull} out_CurrMonitor_7 != 0;
    assume out_CurrMonitor_7 > 0;
    havoc out_CurrMonitor_7;
    goto L57;

  L57:
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} out_CurrMonitor_7 != 0;
    assume out_CurrMonitor_7 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Plug_6 != 0;
    assume in_Plug_6 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    goto L64;

  L64:
    assume {:nonnull} out_CurrMonitor_7 != 0;
    assume out_CurrMonitor_7 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} out_CurrMonitor_7 != 0;
    assume out_CurrMonitor_7 > 0;
    goto L65;

  L65:
    goto anon42_Then;

  anon42_Then:
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    havoc out_CurrMonitor_7;
    return;

  anon41_Then:
    goto L65;

  anon47_Then:
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    assume {:nonnull} in_MonitorInfo_7 != 0;
    assume in_MonitorInfo_7 > 0;
    assume {:nonnull} in_Pcr_9 != 0;
    assume in_Pcr_9 > 0;
    goto L64;

  anon40_Then:
    assume {:partition} out_CurrMonitor_7 == 0;
    assume {:nonnull} in_AvAdapterData_18 != 0;
    assume in_AvAdapterData_18 > 0;
    havoc out_CurrMonitor_7;
    goto L57;
}



procedure {:LoopProcedure} AvCmp_CreatePlug_loop_L51(in_MonitorInfo_7: int, in_PlugNum_6: int, in_CurrMonitor_7: int, in_Plug_6: int, in_Pcr_9: int, in_AvAdapterData_18: int) returns (out_CurrMonitor_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_CreatePlug_loop_L27(in_PlugNum_6: int, in_CmpData_14: int, in_Tmp_690: int, in_Tmp_691: int) returns (out_PlugNum_6: int, out_Tmp_690: int, out_Tmp_691: int)
{

  entry:
    out_PlugNum_6, out_Tmp_690, out_Tmp_691 := in_PlugNum_6, in_Tmp_690, in_Tmp_691;
    goto L27, exit;

  exit:
    return;

  L27:
    out_Tmp_690 := out_PlugNum_6;
    assume {:nonnull} in_CmpData_14 != 0;
    assume in_CmpData_14 > 0;
    havoc out_Tmp_691;
    assume {:nonnull} out_Tmp_691 != 0;
    assume out_Tmp_691 > 0;
    goto anon46_Else;

  anon46_Else:
    out_PlugNum_6 := out_PlugNum_6 + 1;
    goto anon46_Else_dummy;

  anon46_Else_dummy:
    havoc out_PlugNum_6;
    return;
}



procedure {:LoopProcedure} AvCmp_CreatePlug_loop_L27(in_PlugNum_6: int, in_CmpData_14: int, in_Tmp_690: int, in_Tmp_691: int) returns (out_PlugNum_6: int, out_Tmp_690: int, out_Tmp_691: int);
  free ensures {:va_keep} out_Tmp_690 == in_PlugNum_6 || out_Tmp_690 == in_Tmp_690;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCmp_P2PCR_iPlug_loop_L98(in_MonitorInfo_8: int, in_oPlug_5: int, in_CurrMonitor_8: int, in_oPCR_5: int, in_AvAdapterData_19: int) returns (out_CurrMonitor_8: int)
{

  entry:
    out_CurrMonitor_8 := in_CurrMonitor_8;
    goto L98, exit;

  exit:
    return;

  L98:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} out_CurrMonitor_8 != 0;
    assume {:nonnull} out_CurrMonitor_8 != 0;
    assume out_CurrMonitor_8 > 0;
    havoc out_CurrMonitor_8;
    goto L104;

  L104:
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPlug_5 != 0;
    assume in_oPlug_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} in_oPCR_5 != 0;
    assume in_oPCR_5 > 0;
    assume {:nonnull} out_CurrMonitor_8 != 0;
    assume out_CurrMonitor_8 > 0;
    assume {:nonnull} in_MonitorInfo_8 != 0;
    assume in_MonitorInfo_8 > 0;
    assume {:nonnull} out_CurrMonitor_8 != 0;
    assume out_CurrMonitor_8 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} out_CurrMonitor_8 != 0;
    assume out_CurrMonitor_8 > 0;
    goto L110;

  L110:
    goto anon123_Then;

  anon123_Then:
    goto anon123_Then_dummy;

  anon123_Then_dummy:
    havoc out_CurrMonitor_8;
    return;

  anon143_Then:
    goto L110;

  anon122_Then:
    assume {:partition} out_CurrMonitor_8 == 0;
    assume {:nonnull} in_AvAdapterData_19 != 0;
    assume in_AvAdapterData_19 > 0;
    havoc out_CurrMonitor_8;
    goto L104;
}



procedure {:LoopProcedure} AvCmp_P2PCR_iPlug_loop_L98(in_MonitorInfo_8: int, in_oPlug_5: int, in_CurrMonitor_8: int, in_oPCR_5: int, in_AvAdapterData_19: int) returns (out_CurrMonitor_8: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_GetUnitInfo_loop_L157(in_CurrAddress: int, in_i_3: int, in_u_3: int, in_sdv_607: int, in_Tmp_785: int, in_LastKey: int, in_DescAddress: int, in_Tmp_786: int, in_UnitDir: int, in_sdv_611: int, in_ulQuadlet: int, in_u3: int, in_u2: int, in_BusExtension_60: int, in_UnitData_2: int, in_vslice_dummy_var_221: int, in_vslice_dummy_var_222: int, in_vslice_dummy_var_223: int) returns (out_CurrAddress: int, out_i_3: int, out_Tmp_785: int, out_LastKey: int, out_DescAddress: int, out_Tmp_786: int, out_vslice_dummy_var_221: int, out_vslice_dummy_var_222: int, out_vslice_dummy_var_223: int)
{

  entry:
    out_CurrAddress, out_i_3, out_Tmp_785, out_LastKey, out_DescAddress, out_Tmp_786, out_vslice_dummy_var_221, out_vslice_dummy_var_222, out_vslice_dummy_var_223 := in_CurrAddress, in_i_3, in_Tmp_785, in_LastKey, in_DescAddress, in_Tmp_786, in_vslice_dummy_var_221, in_vslice_dummy_var_222, in_vslice_dummy_var_223;
    goto L157, exit;

  exit:
    return;

  L157:
    assume {:nonnull} in_u_3 != 0;
    assume in_u_3 > 0;
    goto anon104_Else;

  anon104_Else:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    out_CurrAddress := out_CurrAddress + 4;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L166;

  L166:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L169;

  L169:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_Tmp_785;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    call {:si_unique_call 2019} out_vslice_dummy_var_221 := Av1394_ReadTextualDescriptor(in_BusExtension_60, uniUnitModelId__UNIT_DATA(in_UnitData_2), out_Tmp_785);
    goto anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto L171;

  L171:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_DescAddress;
    call {:si_unique_call 2021} out_vslice_dummy_var_222 := Av1394_QuadletRead(in_BusExtension_60, in_ulQuadlet, out_DescAddress);
    goto anon127_Else;

  anon127_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    havoc out_Tmp_786;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    call {:si_unique_call 2020} out_vslice_dummy_var_223 := Av1394_ReadTextualDescriptor(in_BusExtension_60, uniModelId__UNIT_DATA(in_UnitData_2), out_Tmp_786);
    goto anon128_Else;

  anon128_Else:
    assume {:partition} yogi_error != 1;
    goto L177;

  L177:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_LastKey;
    out_i_3 := out_i_3 + 1;
    goto L177_dummy;

  L177_dummy:
    call {:si_unique_call 2022} {:si_old_unique_call 1} out_CurrAddress, out_i_3, out_Tmp_785, out_LastKey, out_DescAddress, out_Tmp_786, out_vslice_dummy_var_221, out_vslice_dummy_var_222, out_vslice_dummy_var_223 := Av1394_GetUnitInfo_loop_L157(out_CurrAddress, out_i_3, in_u_3, in_sdv_607, out_Tmp_785, out_LastKey, out_DescAddress, out_Tmp_786, in_UnitDir, in_sdv_611, in_ulQuadlet, in_u3, in_u2, in_BusExtension_60, in_UnitData_2, out_vslice_dummy_var_221, out_vslice_dummy_var_222, out_vslice_dummy_var_223);
    return;

  anon110_Then:
    assume {:partition} out_LastKey != 23;
    goto L177;

  anon108_Then:
    goto L177;

  anon109_Then:
    assume {:partition} out_LastKey != 23;
    goto L171;

  anon107_Then:
    goto L171;

  anon106_Then:
    goto L169;

  anon125_Then:
    goto L166;
}



procedure {:LoopProcedure} Av1394_GetUnitInfo_loop_L157(in_CurrAddress: int, in_i_3: int, in_u_3: int, in_sdv_607: int, in_Tmp_785: int, in_LastKey: int, in_DescAddress: int, in_Tmp_786: int, in_UnitDir: int, in_sdv_611: int, in_ulQuadlet: int, in_u3: int, in_u2: int, in_BusExtension_60: int, in_UnitData_2: int, in_vslice_dummy_var_221: int, in_vslice_dummy_var_222: int, in_vslice_dummy_var_223: int) returns (out_CurrAddress: int, out_i_3: int, out_Tmp_785: int, out_LastKey: int, out_DescAddress: int, out_Tmp_786: int, out_vslice_dummy_var_221: int, out_vslice_dummy_var_222: int, out_vslice_dummy_var_223: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_GetUnitInfo_loop_L31(in_CurrAddress: int, in_i_3: int, in_u_3: int, in_Tmp_784: int, in_LastKey: int, in_Tmp_787: int, in_sdv_615: int, in_ntStatus_55: int, in_DescAddress_1: int, in_sdv_619: int, in_Tmp_789: int, in_Tmp_790: int, in_DescAddress_2: int, in_ulQuadlet: int, in_sdv_622: int, in_u3: int, in_u2: int, in_BusExtension_60: int, in_UnitData_2: int, in_vslice_dummy_var_215: int, in_vslice_dummy_var_216: int, in_vslice_dummy_var_217: int, in_vslice_dummy_var_218: int, in_vslice_dummy_var_219: int, in_vslice_dummy_var_220: int) returns (out_CurrAddress: int, out_i_3: int, out_Tmp_784: int, out_LastKey: int, out_Tmp_787: int, out_ntStatus_55: int, out_DescAddress_1: int, out_Tmp_789: int, out_Tmp_790: int, out_DescAddress_2: int, out_vslice_dummy_var_215: int, out_vslice_dummy_var_216: int, out_vslice_dummy_var_217: int, out_vslice_dummy_var_218: int, out_vslice_dummy_var_219: int, out_vslice_dummy_var_220: int)
{

  entry:
    out_CurrAddress, out_i_3, out_Tmp_784, out_LastKey, out_Tmp_787, out_ntStatus_55, out_DescAddress_1, out_Tmp_789, out_Tmp_790, out_DescAddress_2, out_vslice_dummy_var_215, out_vslice_dummy_var_216, out_vslice_dummy_var_217, out_vslice_dummy_var_218, out_vslice_dummy_var_219, out_vslice_dummy_var_220 := in_CurrAddress, in_i_3, in_Tmp_784, in_LastKey, in_Tmp_787, in_ntStatus_55, in_DescAddress_1, in_Tmp_789, in_Tmp_790, in_DescAddress_2, in_vslice_dummy_var_215, in_vslice_dummy_var_216, in_vslice_dummy_var_217, in_vslice_dummy_var_218, in_vslice_dummy_var_219, in_vslice_dummy_var_220;
    goto L31, exit;

  exit:
    return;

  L31:
    assume {:nonnull} in_u_3 != 0;
    assume in_u_3 > 0;
    goto anon88_Else;

  anon88_Else:
    out_CurrAddress := out_CurrAddress + 4;
    call {:si_unique_call 2023} out_ntStatus_55 := Av1394_QuadletRead(in_BusExtension_60, in_ulQuadlet, out_CurrAddress);
    goto anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto anon89_Then;

  anon89_Then:
    assume {:partition} 0 <= out_ntStatus_55;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L45;

  L45:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_LastKey == 3;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_Tmp_787;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    call {:si_unique_call 2024} out_vslice_dummy_var_215 := Av1394_ReadTextualDescriptor(in_BusExtension_60, uniVendorId__UNIT_DATA(in_UnitData_2), out_Tmp_787);
    goto anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L47;

  L47:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} out_LastKey == 3;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_DescAddress_2;
    call {:si_unique_call 2026} out_vslice_dummy_var_216 := Av1394_QuadletRead(in_BusExtension_60, in_ulQuadlet, out_DescAddress_2);
    goto anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    havoc out_Tmp_789;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    call {:si_unique_call 2025} out_vslice_dummy_var_217 := Av1394_ReadTextualDescriptor(in_BusExtension_60, uniVendorId__UNIT_DATA(in_UnitData_2), out_Tmp_789);
    goto anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto L53;

  L53:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto L68;

  L68:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_Tmp_784;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    call {:si_unique_call 2027} out_vslice_dummy_var_218 := Av1394_ReadTextualDescriptor(in_BusExtension_60, uniModelId__UNIT_DATA(in_UnitData_2), out_Tmp_784);
    goto anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto L70;

  L70:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} out_LastKey == 23;
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_DescAddress_1;
    call {:si_unique_call 2029} out_vslice_dummy_var_219 := Av1394_QuadletRead(in_BusExtension_60, in_ulQuadlet, out_DescAddress_1);
    goto anon118_Else;

  anon118_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    assume {:nonnull} in_u3 != 0;
    assume in_u3 > 0;
    havoc out_Tmp_790;
    assume {:nonnull} in_UnitData_2 != 0;
    assume in_UnitData_2 > 0;
    call {:si_unique_call 2028} out_vslice_dummy_var_220 := Av1394_ReadTextualDescriptor(in_BusExtension_60, uniModelId__UNIT_DATA(in_UnitData_2), out_Tmp_790);
    goto anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  L76:
    assume {:nonnull} in_u2 != 0;
    assume in_u2 > 0;
    havoc out_LastKey;
    out_i_3 := out_i_3 + 1;
    goto L76_dummy;

  L76_dummy:
    call {:si_unique_call 2030} {:si_old_unique_call 1} out_CurrAddress, out_i_3, out_Tmp_784, out_LastKey, out_Tmp_787, out_ntStatus_55, out_DescAddress_1, out_Tmp_789, out_Tmp_790, out_DescAddress_2, out_vslice_dummy_var_215, out_vslice_dummy_var_216, out_vslice_dummy_var_217, out_vslice_dummy_var_218, out_vslice_dummy_var_219, out_vslice_dummy_var_220 := Av1394_GetUnitInfo_loop_L31(out_CurrAddress, out_i_3, in_u_3, out_Tmp_784, out_LastKey, out_Tmp_787, in_sdv_615, out_ntStatus_55, out_DescAddress_1, in_sdv_619, out_Tmp_789, out_Tmp_790, out_DescAddress_2, in_ulQuadlet, in_sdv_622, in_u3, in_u2, in_BusExtension_60, in_UnitData_2, out_vslice_dummy_var_215, out_vslice_dummy_var_216, out_vslice_dummy_var_217, out_vslice_dummy_var_218, out_vslice_dummy_var_219, out_vslice_dummy_var_220);
    return;

  anon98_Then:
    assume {:partition} out_LastKey != 23;
    goto L76;

  anon96_Then:
    goto L76;

  anon97_Then:
    assume {:partition} out_LastKey != 23;
    goto L70;

  anon95_Then:
    goto L70;

  anon93_Then:
    goto L68;

  anon94_Then:
    assume {:partition} out_LastKey != 3;
    goto L53;

  anon91_Then:
    goto L53;

  anon92_Then:
    assume {:partition} out_LastKey != 3;
    goto L47;

  anon90_Then:
    goto L47;

  anon113_Then:
    goto L45;
}



procedure {:LoopProcedure} Av1394_GetUnitInfo_loop_L31(in_CurrAddress: int, in_i_3: int, in_u_3: int, in_Tmp_784: int, in_LastKey: int, in_Tmp_787: int, in_sdv_615: int, in_ntStatus_55: int, in_DescAddress_1: int, in_sdv_619: int, in_Tmp_789: int, in_Tmp_790: int, in_DescAddress_2: int, in_ulQuadlet: int, in_sdv_622: int, in_u3: int, in_u2: int, in_BusExtension_60: int, in_UnitData_2: int, in_vslice_dummy_var_215: int, in_vslice_dummy_var_216: int, in_vslice_dummy_var_217: int, in_vslice_dummy_var_218: int, in_vslice_dummy_var_219: int, in_vslice_dummy_var_220: int) returns (out_CurrAddress: int, out_i_3: int, out_Tmp_784: int, out_LastKey: int, out_Tmp_787: int, out_ntStatus_55: int, out_DescAddress_1: int, out_Tmp_789: int, out_Tmp_790: int, out_DescAddress_2: int, out_vslice_dummy_var_215: int, out_vslice_dummy_var_216: int, out_vslice_dummy_var_217: int, out_vslice_dummy_var_218: int, out_vslice_dummy_var_219: int, out_vslice_dummy_var_220: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_ReadTextualDescriptor_loop_L66(in_u_4: int, in_n_1: int, in_ulUnicode: int, in_Tmp_807: int, in_Tmp_812: int, in_Tmp_816: int, in_Tmp_817: int, in_Tmp_818: int) returns (out_n_1: int, out_Tmp_807: int, out_Tmp_812: int, out_Tmp_816: int, out_Tmp_817: int, out_Tmp_818: int)
{

  entry:
    out_n_1, out_Tmp_807, out_Tmp_812, out_Tmp_816, out_Tmp_817, out_Tmp_818 := in_n_1, in_Tmp_807, in_Tmp_812, in_Tmp_816, in_Tmp_817, in_Tmp_818;
    goto L66, exit;

  exit:
    return;

  L66:
    assume {:CounterLoop 4} {:Counter "n_1"} true;
    goto anon42_Else;

  anon42_Else:
    assume {:partition} 4 > out_n_1;
    out_Tmp_807 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon50_Else;

  anon50_Else:
    out_Tmp_818 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L72;

  L72:
    out_Tmp_816 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto L73;

  L73:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_n_1 := out_n_1 + 1;
    goto L74;

  L74:
    out_n_1 := out_n_1 + 1;
    goto L74_dummy;

  L74_dummy:
    call {:si_unique_call 2031} {:si_old_unique_call 1} out_n_1, out_Tmp_807, out_Tmp_812, out_Tmp_816, out_Tmp_817, out_Tmp_818 := Av1394_ReadTextualDescriptor_loop_L66(in_u_4, out_n_1, in_ulUnicode, out_Tmp_807, out_Tmp_812, out_Tmp_816, out_Tmp_817, out_Tmp_818);
    return;

  anon43_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L74;

  anon51_Then:
    out_Tmp_812 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    out_Tmp_817 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L73;

  anon53_Then:
    goto L72;

  anon52_Then:
    goto L72;
}



procedure {:LoopProcedure} Av1394_ReadTextualDescriptor_loop_L66(in_u_4: int, in_n_1: int, in_ulUnicode: int, in_Tmp_807: int, in_Tmp_812: int, in_Tmp_816: int, in_Tmp_817: int, in_Tmp_818: int) returns (out_n_1: int, out_Tmp_807: int, out_Tmp_812: int, out_Tmp_816: int, out_Tmp_817: int, out_Tmp_818: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_ReadTextualDescriptor_loop_L56(in_i_4: int, in_DataLength: int, in_u_4: int, in_pData: int, in_n_1: int, in_ulUnicode: int, in_ntStatus_59: int, in_Tmp_807: int, in_Tmp_812: int, in_Tmp_815: int, in_Tmp_816: int, in_Tmp_817: int, in_Tmp_818: int, in_BusExtension_64: int, in_Address_1: int) returns (out_i_4: int, out_n_1: int, out_ntStatus_59: int, out_Tmp_807: int, out_Tmp_812: int, out_Tmp_815: int, out_Tmp_816: int, out_Tmp_817: int, out_Tmp_818: int)
{

  entry:
    out_i_4, out_n_1, out_ntStatus_59, out_Tmp_807, out_Tmp_812, out_Tmp_815, out_Tmp_816, out_Tmp_817, out_Tmp_818 := in_i_4, in_n_1, in_ntStatus_59, in_Tmp_807, in_Tmp_812, in_Tmp_815, in_Tmp_816, in_Tmp_817, in_Tmp_818;
    goto L56, exit;

  exit:
    return;

  L56:
    goto anon40_Then;

  anon40_Then:
    assume {:partition} out_i_4 < in_DataLength;
    out_Tmp_815 := in_Address_1 + 4 * out_i_4;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    call {:si_unique_call 2034} out_ntStatus_59 := Av1394_QuadletRead(in_BusExtension_64, asUlong_unnamed_tag_66(in_u_4), out_Tmp_815);
    goto anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto anon41_Else;

  anon41_Else:
    assume {:partition} out_ntStatus_59 >= 0;
    out_n_1 := 0;
    goto L66;

  L66:
    call {:si_unique_call 2033} out_n_1, out_Tmp_807, out_Tmp_812, out_Tmp_816, out_Tmp_817, out_Tmp_818 := Av1394_ReadTextualDescriptor_loop_L66(in_u_4, out_n_1, in_ulUnicode, out_Tmp_807, out_Tmp_812, out_Tmp_816, out_Tmp_817, out_Tmp_818);
    goto L66_last;

  L66_last:
    assume {:CounterLoop 4} {:Counter "n_1"} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} 4 > out_n_1;
    out_Tmp_807 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    out_Tmp_818 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L72;

  L72:
    out_Tmp_816 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto L73;

  L73:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_n_1 := out_n_1 + 1;
    goto L74;

  L74:
    out_n_1 := out_n_1 + 1;
    assume false;
    return;

  anon43_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L74;

  anon51_Then:
    out_Tmp_812 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    out_Tmp_817 := out_n_1;
    assume {:nonnull} in_u_4 != 0;
    assume in_u_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L73;

  anon53_Then:
    goto L72;

  anon52_Then:
    goto L72;

  anon50_Then:
    goto L67;

  L67:
    call {:si_unique_call 2032} sdv_RtlCopyMemory(0, 0, 4);
    out_i_4 := out_i_4 + 1;
    goto L67_dummy;

  L67_dummy:
    call {:si_unique_call 2035} {:si_old_unique_call 1} out_i_4, out_n_1, out_ntStatus_59, out_Tmp_807, out_Tmp_812, out_Tmp_815, out_Tmp_816, out_Tmp_817, out_Tmp_818 := Av1394_ReadTextualDescriptor_loop_L56(out_i_4, in_DataLength, in_u_4, in_pData, out_n_1, in_ulUnicode, out_ntStatus_59, out_Tmp_807, out_Tmp_812, out_Tmp_815, out_Tmp_816, out_Tmp_817, out_Tmp_818, in_BusExtension_64, in_Address_1);
    return;

  anon42_Then:
    assume {:partition} out_n_1 >= 4;
    goto L67;
}



procedure {:LoopProcedure} Av1394_ReadTextualDescriptor_loop_L56(in_i_4: int, in_DataLength: int, in_u_4: int, in_pData: int, in_n_1: int, in_ulUnicode: int, in_ntStatus_59: int, in_Tmp_807: int, in_Tmp_812: int, in_Tmp_815: int, in_Tmp_816: int, in_Tmp_817: int, in_Tmp_818: int, in_BusExtension_64: int, in_Address_1: int) returns (out_i_4: int, out_n_1: int, out_ntStatus_59: int, out_Tmp_807: int, out_Tmp_812: int, out_Tmp_815: int, out_Tmp_816: int, out_Tmp_817: int, out_Tmp_818: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_SetUnitDirectory_loop_L32(in_CurrCrom_1: int, in_AvAdapterData_21: int, in_SetUnitDir: int) returns (out_CurrCrom_1: int)
{

  entry:
    out_CurrCrom_1 := in_CurrCrom_1;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_CurrCrom_1 != 0;
    assume {:nonnull} out_CurrCrom_1 != 0;
    assume out_CurrCrom_1 > 0;
    havoc out_CurrCrom_1;
    goto L83;

  L83:
    assume {:nonnull} out_CurrCrom_1 != 0;
    assume out_CurrCrom_1 > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} out_CurrCrom_1 != 0;
    assume out_CurrCrom_1 > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon60_Then;

  anon60_Then:
    goto L84;

  L84:
    goto anon59_Then;

  anon59_Then:
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    havoc out_CurrCrom_1;
    return;

  anon58_Then:
    goto L84;

  anon54_Then:
    assume {:partition} out_CurrCrom_1 == 0;
    assume {:nonnull} in_AvAdapterData_21 != 0;
    assume in_AvAdapterData_21 > 0;
    havoc out_CurrCrom_1;
    goto L83;
}



procedure {:LoopProcedure} Av1394_SetUnitDirectory_loop_L32(in_CurrCrom_1: int, in_AvAdapterData_21: int, in_SetUnitDir: int) returns (out_CurrCrom_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_SetUnitDirectory_loop_L27(in_CurrPdoCrom: int, in_SetUnitDir: int, in_PdoExtension_16: int) returns (out_CurrPdoCrom: int)
{

  entry:
    out_CurrPdoCrom := in_CurrPdoCrom;
    goto L27, exit;

  exit:
    return;

  L27:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_CurrPdoCrom != 0;
    assume {:nonnull} out_CurrPdoCrom != 0;
    assume out_CurrPdoCrom > 0;
    havoc out_CurrPdoCrom;
    goto L90;

  L90:
    assume {:nonnull} out_CurrPdoCrom != 0;
    assume out_CurrPdoCrom > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} out_CurrPdoCrom != 0;
    assume out_CurrPdoCrom > 0;
    assume {:nonnull} in_SetUnitDir != 0;
    assume in_SetUnitDir > 0;
    goto anon63_Then;

  anon63_Then:
    goto L91;

  L91:
    goto anon62_Then;

  anon62_Then:
    goto anon62_Then_dummy;

  anon62_Then_dummy:
    havoc out_CurrPdoCrom;
    return;

  anon61_Then:
    goto L91;

  anon52_Then:
    assume {:partition} out_CurrPdoCrom == 0;
    assume {:nonnull} in_PdoExtension_16 != 0;
    assume in_PdoExtension_16 > 0;
    havoc out_CurrPdoCrom;
    goto L90;
}



procedure {:LoopProcedure} Av1394_SetUnitDirectory_loop_L27(in_CurrPdoCrom: int, in_SetUnitDir: int, in_PdoExtension_16: int) returns (out_CurrPdoCrom: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_ReadPCR_loop_L22(in_Retries_2: int, in_Irp_70: int, in_Irb_31: int, in_Mdl_3: int, in_StackSize_25: int, in_sdv_678: int, in_ntStatus_68: int, in_Tmp_864: int, in_BusExtension_72: int, in_GenerationCount: int, in_Type_7: int, in_Index_2: int) returns (out_Retries_2: int, out_Irp_70: int, out_Irb_31: int, out_Mdl_3: int, out_sdv_678: int, out_ntStatus_68: int, out_Tmp_864: int)
{
  var vslice_dummy_var_453: int;

  entry:
    out_Retries_2, out_Irp_70, out_Irb_31, out_Mdl_3, out_sdv_678, out_ntStatus_68, out_Tmp_864 := in_Retries_2, in_Irp_70, in_Irb_31, in_Mdl_3, in_sdv_678, in_ntStatus_68, in_Tmp_864;
    goto L22, exit;

  exit:
    return;

  L22:
    call {:si_unique_call 2036} out_Irp_70 := IoAllocateIrp(in_StackSize_25, 0);
    call {:si_unique_call 2037} out_sdv_678 := sdv_ExAllocateFromNPagedLookasideList(0);
    out_Irb_31 := out_sdv_678;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} out_Irp_70 != 0;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_Irb_31 != 0;
    call {:si_unique_call 2042} out_Mdl_3 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_Mdl_3 != 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} in_Type_7 != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} in_Type_7 == 1;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    goto L57;

  L57:
    assume {:nonnull} in_BusExtension_72 != 0;
    assume in_BusExtension_72 > 0;
    havoc vslice_dummy_var_453;
    call {:si_unique_call 2041} out_ntStatus_68 := Av_SubmitIrpSynch#1(vslice_dummy_var_453, out_Irp_70, out_Irb_31);
    goto anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2039} IoFreeIrp(0);
    assume {:nonnull} in_BusExtension_72 != 0;
    assume in_BusExtension_72 > 0;
    call {:si_unique_call 2040} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(in_BusExtension_72), out_Irb_31);
    goto anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_Mdl_3 != 0;
    call {:si_unique_call 2038} IoFreeMdl(0);
    goto L69;

  L69:
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_ntStatus_68 != -1072562032;
    goto anon36_Then;

  anon36_Then:
    assume {:partition} 0 > out_ntStatus_68;
    out_Tmp_864 := out_Retries_2;
    out_Retries_2 := out_Retries_2 - 1;
    goto anon42_Else;

  anon42_Else:
    assume {:partition} out_Tmp_864 != 0;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    call {:si_unique_call 2043} {:si_old_unique_call 1} out_Retries_2, out_Irp_70, out_Irb_31, out_Mdl_3, out_sdv_678, out_ntStatus_68, out_Tmp_864 := Av1394_ReadPCR_loop_L22(out_Retries_2, out_Irp_70, out_Irb_31, out_Mdl_3, in_StackSize_25, out_sdv_678, out_ntStatus_68, out_Tmp_864, in_BusExtension_72, in_GenerationCount, in_Type_7, in_Index_2);
    return;

  anon34_Then:
    assume {:partition} out_Mdl_3 == 0;
    goto L69;

  anon33_Then:
    assume {:partition} in_Type_7 != 1;
    goto L57;

  anon39_Then:
    assume {:partition} in_Type_7 == 0;
    assume {:nonnull} out_Irb_31 != 0;
    assume out_Irb_31 > 0;
    goto L57;
}



procedure {:LoopProcedure} Av1394_ReadPCR_loop_L22(in_Retries_2: int, in_Irp_70: int, in_Irb_31: int, in_Mdl_3: int, in_StackSize_25: int, in_sdv_678: int, in_ntStatus_68: int, in_Tmp_864: int, in_BusExtension_72: int, in_GenerationCount: int, in_Type_7: int, in_Index_2: int) returns (out_Retries_2: int, out_Irp_70: int, out_Irb_31: int, out_Mdl_3: int, out_sdv_678: int, out_ntStatus_68: int, out_Tmp_864: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_AddConfigRomEntry_loop_L55(in_i_6: int, in_sdv_686: int, in_CromEntry: int, in_Tmp_870: int) returns (out_i_6: int, out_Tmp_870: int)
{

  entry:
    out_i_6, out_Tmp_870 := in_i_6, in_Tmp_870;
    goto L55, exit;

  exit:
    return;

  L55:
    assume {:CounterLoop 3} {:Counter "i_6"} true;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} 3 > out_i_6;
    out_Tmp_870 := in_CromEntry;
    assume {:nonnull} out_Tmp_870 != 0;
    assume out_Tmp_870 > 0;
    out_i_6 := out_i_6 + 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Av1394_AddConfigRomEntry_loop_L55(in_i_6: int, in_sdv_686: int, in_CromEntry: int, in_Tmp_870: int) returns (out_i_6: int, out_Tmp_870: int);
  free ensures {:va_keep} out_Tmp_870 == in_CromEntry || out_Tmp_870 == in_Tmp_870;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_QuadletRead_loop_L17(in_Retries_3: int, in_Irp_72: int, in_Mdl_4: int, in_Irb_33: int, in_Tmp_872: int, in_StackSize_27: int, in_sdv_689: int, in_ntStatus_70: int, in_BusExtension_74: int, in_Address_2: int, in_vslice_dummy_var_236: int) returns (out_Retries_3: int, out_Irp_72: int, out_Mdl_4: int, out_Irb_33: int, out_Tmp_872: int, out_sdv_689: int, out_ntStatus_70: int, out_vslice_dummy_var_236: int)
{
  var vslice_dummy_var_454: int;

  entry:
    out_Retries_3, out_Irp_72, out_Mdl_4, out_Irb_33, out_Tmp_872, out_sdv_689, out_ntStatus_70, out_vslice_dummy_var_236 := in_Retries_3, in_Irp_72, in_Mdl_4, in_Irb_33, in_Tmp_872, in_sdv_689, in_ntStatus_70, in_vslice_dummy_var_236;
    goto L17, exit;

  exit:
    return;

  L17:
    call {:si_unique_call 2044} out_Irp_72 := IoAllocateIrp(in_StackSize_27, 0);
    call {:si_unique_call 2045} out_sdv_689 := sdv_ExAllocateFromNPagedLookasideList(0);
    out_Irb_33 := out_sdv_689;
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_Irp_72 != 0;
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_Irb_33 != 0;
    call {:si_unique_call 2050} out_Mdl_4 := IoAllocateMdl(0, 4, 0, 0, 0);
    goto anon29_Else;

  anon29_Else:
    assume {:partition} out_Mdl_4 != 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} in_BusExtension_74 != 0;
    assume in_BusExtension_74 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} out_Irb_33 != 0;
    assume out_Irb_33 > 0;
    assume {:nonnull} in_BusExtension_74 != 0;
    assume in_BusExtension_74 > 0;
    havoc vslice_dummy_var_454;
    call {:si_unique_call 2049} out_ntStatus_70 := Av_SubmitIrpSynch#1(vslice_dummy_var_454, out_Irp_72, out_Irb_33);
    goto anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2047} IoFreeIrp(0);
    assume {:nonnull} in_BusExtension_74 != 0;
    assume in_BusExtension_74 > 0;
    call {:si_unique_call 2048} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(in_BusExtension_74), out_Irb_33);
    goto anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} out_Mdl_4 != 0;
    call {:si_unique_call 2046} IoFreeMdl(0);
    goto L61;

  L61:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} out_ntStatus_70 == -1072562032;
    call {:si_unique_call 2051} out_vslice_dummy_var_236 := Av1394_GetGenerationCount#1(in_BusExtension_74);
    goto anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L69;

  L69:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_ntStatus_70 != -1072562032;
    out_Tmp_872 := out_Retries_3;
    out_Retries_3 := out_Retries_3 - 1;
    goto anon39_Else;

  anon39_Else:
    assume {:partition} out_Tmp_872 != 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    goto L_BAF_7;

  L_BAF_7:
    call {:si_unique_call 2052} {:si_old_unique_call 1} out_Retries_3, out_Irp_72, out_Mdl_4, out_Irb_33, out_Tmp_872, out_sdv_689, out_ntStatus_70, out_vslice_dummy_var_236 := Av1394_QuadletRead_loop_L17(out_Retries_3, out_Irp_72, out_Mdl_4, out_Irb_33, out_Tmp_872, in_StackSize_27, out_sdv_689, out_ntStatus_70, in_BusExtension_74, in_Address_2, out_vslice_dummy_var_236);
    return;

  anon33_Then:
    assume {:partition} out_ntStatus_70 == -1072562032;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_7;

  anon31_Then:
    assume {:partition} out_ntStatus_70 != -1072562032;
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_ntStatus_70 < 0;
    goto L69;

  anon30_Then:
    assume {:partition} out_Mdl_4 == 0;
    goto L61;
}



procedure {:LoopProcedure} Av1394_QuadletRead_loop_L17(in_Retries_3: int, in_Irp_72: int, in_Mdl_4: int, in_Irb_33: int, in_Tmp_872: int, in_StackSize_27: int, in_sdv_689: int, in_ntStatus_70: int, in_BusExtension_74: int, in_Address_2: int, in_vslice_dummy_var_236: int) returns (out_Retries_3: int, out_Irp_72: int, out_Mdl_4: int, out_Irb_33: int, out_Tmp_872: int, out_sdv_689: int, out_ntStatus_70: int, out_vslice_dummy_var_236: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_LockedSwap_loop_L16(in_Retries_4: int, in_Irp_74: int, in_Irb_35: int, in_Tmp_881: int, in_StackSize_29: int, in_Tmp_882: int, in_sdv_697: int, in_ntStatus_72: int, in_Tmp_883: int, in_BusExtension_76: int, in_Argument: int, in_Data: int, in_pOldValue: int, in_Address_3: int, in_bGeneration_1: int, in_Generation_3: int, in_vslice_dummy_var_237: int) returns (out_Retries_4: int, out_Irp_74: int, out_Irb_35: int, out_Tmp_881: int, out_Tmp_882: int, out_sdv_697: int, out_ntStatus_72: int, out_Tmp_883: int, out_vslice_dummy_var_237: int)
{
  var vslice_dummy_var_455: int;

  entry:
    out_Retries_4, out_Irp_74, out_Irb_35, out_Tmp_881, out_Tmp_882, out_sdv_697, out_ntStatus_72, out_Tmp_883, out_vslice_dummy_var_237 := in_Retries_4, in_Irp_74, in_Irb_35, in_Tmp_881, in_Tmp_882, in_sdv_697, in_ntStatus_72, in_Tmp_883, in_vslice_dummy_var_237;
    goto L16, exit;

  exit:
    return;

  L16:
    call {:si_unique_call 2053} out_Irp_74 := IoAllocateIrp(in_StackSize_29, 0);
    call {:si_unique_call 2054} out_sdv_697 := sdv_ExAllocateFromNPagedLookasideList(0);
    out_Irb_35 := out_sdv_697;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} out_Irp_74 != 0;
    goto anon28_Else;

  anon28_Else:
    assume {:partition} out_Irb_35 != 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    havoc out_Tmp_882;
    assume {:nonnull} out_Tmp_882 != 0;
    assume out_Tmp_882 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    havoc out_Tmp_881;
    assume {:nonnull} out_Tmp_881 != 0;
    assume out_Tmp_881 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} in_bGeneration_1 != 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    goto L45;

  L45:
    assume {:nonnull} in_BusExtension_76 != 0;
    assume in_BusExtension_76 > 0;
    havoc vslice_dummy_var_455;
    call {:si_unique_call 2057} out_ntStatus_72 := Av_SubmitIrpSynch#1(vslice_dummy_var_455, out_Irp_74, out_Irb_35);
    goto anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2055} IoFreeIrp(0);
    assume {:nonnull} in_BusExtension_76 != 0;
    assume in_BusExtension_76 > 0;
    call {:si_unique_call 2056} ExFreeToNPagedLookasideList#1(IrbPool__BUS_DEVICE_EXTENSION(in_BusExtension_76), out_Irb_35);
    goto anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_ntStatus_72 == -1072562032;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} in_bGeneration_1 == 0;
    call {:si_unique_call 2058} out_vslice_dummy_var_237 := Av1394_GetGenerationCount#1(in_BusExtension_76);
    goto anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_ntStatus_72 != -1072562032;
    out_Tmp_883 := out_Retries_4;
    out_Retries_4 := out_Retries_4 - 1;
    goto anon39_Else;

  anon39_Else:
    assume {:partition} out_Tmp_883 != 0;
    goto anon39_Else_dummy;

  anon39_Else_dummy:
    goto L_BAF_8;

  L_BAF_8:
    call {:si_unique_call 2059} {:si_old_unique_call 1} out_Retries_4, out_Irp_74, out_Irb_35, out_Tmp_881, out_Tmp_882, out_sdv_697, out_ntStatus_72, out_Tmp_883, out_vslice_dummy_var_237 := Av1394_LockedSwap_loop_L16(out_Retries_4, out_Irp_74, out_Irb_35, out_Tmp_881, in_StackSize_29, out_Tmp_882, out_sdv_697, out_ntStatus_72, out_Tmp_883, in_BusExtension_76, in_Argument, in_Data, in_pOldValue, in_Address_3, in_bGeneration_1, in_Generation_3, out_vslice_dummy_var_237);
    return;

  anon32_Then:
    assume {:partition} out_ntStatus_72 == -1072562032;
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    goto L_BAF_8;

  anon29_Then:
    assume {:partition} out_ntStatus_72 != -1072562032;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_ntStatus_72 < 0;
    goto L62;

  anon35_Then:
    assume {:partition} in_bGeneration_1 == 0;
    assume {:nonnull} in_BusExtension_76 != 0;
    assume in_BusExtension_76 > 0;
    assume {:nonnull} out_Irb_35 != 0;
    assume out_Irb_35 > 0;
    goto L45;
}



procedure {:LoopProcedure} Av1394_LockedSwap_loop_L16(in_Retries_4: int, in_Irp_74: int, in_Irb_35: int, in_Tmp_881: int, in_StackSize_29: int, in_Tmp_882: int, in_sdv_697: int, in_ntStatus_72: int, in_Tmp_883: int, in_BusExtension_76: int, in_Argument: int, in_Data: int, in_pOldValue: int, in_Address_3: int, in_bGeneration_1: int, in_Generation_3: int, in_vslice_dummy_var_237: int) returns (out_Retries_4: int, out_Irp_74: int, out_Irb_35: int, out_Tmp_881: int, out_Tmp_882: int, out_sdv_697: int, out_ntStatus_72: int, out_Tmp_883: int, out_vslice_dummy_var_237: int);
  modifies Mem_T.CompletionRoutine__IO_STACK_LOCATION, alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessListenPacket#0_loop_L87(in_Tmp_336: int, in_Tmp_337: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_343: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_Tmp_348: int, in_boogieTmp: int) returns (out_Tmp_336: int, out_Tmp_337: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_343: int, out_Tmp_344: int, out_Tmp_346: int, out_FrameContext_1: int, out_Tmp_348: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_336, out_Tmp_337, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp := in_Tmp_336, in_Tmp_337, in_sdv_279, in_Tmp_339, in_CopySize, in_Tmp_343, in_Tmp_344, in_Tmp_346, in_FrameContext_1, in_Tmp_348, in_boogieTmp;
    goto L87, exit;

  exit:
    return;

  L87:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    out_Tmp_339 := in_BusBuffer;
    assume {:nonnull} out_Tmp_339 != 0;
    assume out_Tmp_339 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L93;

  L93:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2062} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  L108:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_337;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_343;
    assume {:nonnull} out_Tmp_337 != 0;
    assume out_Tmp_337 > 0;
    assume {:nonnull} out_Tmp_343 != 0;
    assume out_Tmp_343 > 0;
    goto L110;

  L110:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 2064} out_sdv_279 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} out_sdv_279 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_344;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_348;
    assume {:nonnull} out_Tmp_344 != 0;
    assume out_Tmp_344 > 0;
    assume {:nonnull} out_Tmp_348 != 0;
    assume out_Tmp_348 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_336;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_346;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_336 != 0;
    assume out_Tmp_336 > 0;
    assume {:nonnull} out_Tmp_346 != 0;
    assume out_Tmp_346 > 0;
    goto L112;

  L112:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 2061} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 0);
    goto L89;

  L89:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2060} out_boogieTmp := corral_nondet();
    goto L89_dummy;

  L89_dummy:
    call {:si_unique_call 2065} {:si_old_unique_call 1} out_Tmp_336, out_Tmp_337, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp := AvCip_ProcessListenPacket#0_loop_L87(out_Tmp_336, out_Tmp_337, in_CipData_4, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, in_timestamp, in_BusBuffer, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp);
    return;

  anon97_Then:
    goto L89;

  anon106_Then:
    goto L112;

  anon98_Then:
    assume {:partition} out_sdv_279 == 0;
    goto L112;

  anon96_Then:
    goto L112;

  anon105_Then:
    goto L110;

  anon95_Then:
    goto L100;

  L100:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2063} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  anon93_Then:
    goto L100;

  anon94_Then:
    goto L93;

  anon104_Then:
    goto L93;

  anon92_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L89;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#0_loop_L87(in_Tmp_336: int, in_Tmp_337: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_343: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_Tmp_348: int, in_boogieTmp: int) returns (out_Tmp_336: int, out_Tmp_337: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_343: int, out_Tmp_344: int, out_Tmp_346: int, out_FrameContext_1: int, out_Tmp_348: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_279 == 0 || out_sdv_279 == in_sdv_279;
  free ensures {:va_keep} out_Tmp_339 == in_Tmp_339 || out_Tmp_339 == in_BusBuffer;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessListenPacket#0_loop_L27(in_i_1: int, in_Tmp_336: int, in_Tmp_337: int, in_Tmp_338: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_342: int, in_Tmp_343: int, in_TsHeader: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_SourceLength: int, in_Tmp_348: int, in_DescriptorData_1: int, in_boogieTmp: int, in_vslice_dummy_var_252: int) returns (out_i_1: int, out_Tmp_336: int, out_Tmp_337: int, out_Tmp_338: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_342: int, out_Tmp_343: int, out_Tmp_344: int, out_BusBuffer: int, out_Tmp_346: int, out_FrameContext_1: int, out_SourceLength: int, out_Tmp_348: int, out_boogieTmp: int, out_vslice_dummy_var_252: int)
{

  entry:
    out_i_1, out_Tmp_336, out_Tmp_337, out_Tmp_338, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_342, out_Tmp_343, out_Tmp_344, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_SourceLength, out_Tmp_348, out_boogieTmp, out_vslice_dummy_var_252 := in_i_1, in_Tmp_336, in_Tmp_337, in_Tmp_338, in_sdv_279, in_Tmp_339, in_CopySize, in_Tmp_342, in_Tmp_343, in_Tmp_344, in_BusBuffer, in_Tmp_346, in_FrameContext_1, in_SourceLength, in_Tmp_348, in_boogieTmp, in_vslice_dummy_var_252;
    goto L27, exit;

  exit:
    return;

  L27:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon76_Else;

  anon76_Else:
    assume {:nonnull} in_DescriptorData_1 != 0;
    assume in_DescriptorData_1 > 0;
    havoc out_BusBuffer;
    call {:si_unique_call 2069} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_TsHeader != 0;
    assume in_TsHeader > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2070} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2071} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2072} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2073} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L50;

  L50:
    out_i_1 := out_i_1 + 1;
    goto L50_dummy;

  L50_dummy:
    call {:si_unique_call 2080} {:si_old_unique_call 1} out_i_1, out_Tmp_336, out_Tmp_337, out_Tmp_338, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_342, out_Tmp_343, out_Tmp_344, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_SourceLength, out_Tmp_348, out_boogieTmp, out_vslice_dummy_var_252 := AvCip_ProcessListenPacket#0_loop_L27(out_i_1, out_Tmp_336, out_Tmp_337, out_Tmp_338, in_CipData_4, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_342, out_Tmp_343, in_TsHeader, out_Tmp_344, in_timestamp, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_SourceLength, out_Tmp_348, in_DescriptorData_1, out_boogieTmp, out_vslice_dummy_var_252);
    return;

  anon101_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_Tmp_338;
    goto L53;

  L53:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2067} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2068} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_SourceLength;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    out_SourceLength := out_SourceLength - 4;
    goto L65;

  L65:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L61;

  L61:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto L68;

  L68:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L131;

  L131:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} out_FrameContext_1 != 0;
    call {:si_unique_call 2066} out_vslice_dummy_var_252 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 1);
    out_FrameContext_1 := 0;
    goto L50;

  anon99_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L50;

  anon82_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L131;

  anon84_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L131;

  anon85_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L131;

  anon86_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto L131;

  anon87_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L131;

  anon88_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L131;

  anon89_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L131;

  anon90_Then:
    goto L87;

  L87:
    call {:si_unique_call 2074} out_Tmp_336, out_Tmp_337, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp := AvCip_ProcessListenPacket#0_loop_L87(out_Tmp_336, out_Tmp_337, in_CipData_4, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, in_timestamp, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp);
    goto L87_last;

  L87_last:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    out_Tmp_339 := out_BusBuffer;
    assume {:nonnull} out_Tmp_339 != 0;
    assume out_Tmp_339 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L93;

  L93:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2077} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  L108:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_337;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_343;
    assume {:nonnull} out_Tmp_337 != 0;
    assume out_Tmp_337 > 0;
    assume {:nonnull} out_Tmp_343 != 0;
    assume out_Tmp_343 > 0;
    goto L110;

  L110:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 2079} out_sdv_279 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} out_sdv_279 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_344;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_348;
    assume {:nonnull} out_Tmp_344 != 0;
    assume out_Tmp_344 > 0;
    assume {:nonnull} out_Tmp_348 != 0;
    assume out_Tmp_348 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_336;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_346;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_336 != 0;
    assume out_Tmp_336 > 0;
    assume {:nonnull} out_Tmp_346 != 0;
    assume out_Tmp_346 > 0;
    goto L112;

  L112:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 2076} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 0);
    goto L89;

  L89:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2075} out_boogieTmp := corral_nondet();
    assume false;
    return;

  anon97_Then:
    goto L89;

  anon106_Then:
    goto L112;

  anon98_Then:
    assume {:partition} out_sdv_279 == 0;
    goto L112;

  anon96_Then:
    goto L112;

  anon105_Then:
    goto L110;

  anon95_Then:
    goto L100;

  L100:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2078} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  anon93_Then:
    goto L100;

  anon94_Then:
    goto L93;

  anon104_Then:
    goto L93;

  anon92_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L89;

  anon91_Then:
    goto L50;

  anon83_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_342;
    assume {:nonnull} out_Tmp_342 != 0;
    assume out_Tmp_342 > 0;
    goto L68;

  anon109_Then:
    goto L68;

  anon108_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L68;

  anon107_Then:
    goto L68;

  anon80_Then:
    goto L68;

  anon81_Then:
    goto L50;

  anon103_Then:
    goto L65;

  anon79_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L61;

  anon78_Then:
    goto L50;

  anon102_Then:
    goto L50;

  anon77_Then:
    out_Tmp_338 := 1024;
    goto L53;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#0_loop_L27(in_i_1: int, in_Tmp_336: int, in_Tmp_337: int, in_Tmp_338: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_342: int, in_Tmp_343: int, in_TsHeader: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_SourceLength: int, in_Tmp_348: int, in_DescriptorData_1: int, in_boogieTmp: int, in_vslice_dummy_var_252: int) returns (out_i_1: int, out_Tmp_336: int, out_Tmp_337: int, out_Tmp_338: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_342: int, out_Tmp_343: int, out_Tmp_344: int, out_BusBuffer: int, out_Tmp_346: int, out_FrameContext_1: int, out_SourceLength: int, out_Tmp_348: int, out_boogieTmp: int, out_vslice_dummy_var_252: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_279 == 0 || out_sdv_279 == in_sdv_279;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessListenPacket#1_loop_L87(in_Tmp_336: int, in_Tmp_337: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_343: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_Tmp_348: int, in_boogieTmp: int) returns (out_Tmp_336: int, out_Tmp_337: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_343: int, out_Tmp_344: int, out_Tmp_346: int, out_FrameContext_1: int, out_Tmp_348: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_336, out_Tmp_337, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp := in_Tmp_336, in_Tmp_337, in_sdv_279, in_Tmp_339, in_CopySize, in_Tmp_343, in_Tmp_344, in_Tmp_346, in_FrameContext_1, in_Tmp_348, in_boogieTmp;
    goto L87, exit;

  exit:
    return;

  L87:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    out_Tmp_339 := in_BusBuffer;
    assume {:nonnull} out_Tmp_339 != 0;
    assume out_Tmp_339 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L93;

  L93:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2083} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  L108:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_337;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_343;
    assume {:nonnull} out_Tmp_337 != 0;
    assume out_Tmp_337 > 0;
    assume {:nonnull} out_Tmp_343 != 0;
    assume out_Tmp_343 > 0;
    goto L110;

  L110:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 2085} out_sdv_279 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} out_sdv_279 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_344;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_348;
    assume {:nonnull} out_Tmp_344 != 0;
    assume out_Tmp_344 > 0;
    assume {:nonnull} out_Tmp_348 != 0;
    assume out_Tmp_348 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_336;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_346;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_336 != 0;
    assume out_Tmp_336 > 0;
    assume {:nonnull} out_Tmp_346 != 0;
    assume out_Tmp_346 > 0;
    goto L112;

  L112:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 2082} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 0);
    goto L89;

  L89:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2081} out_boogieTmp := corral_nondet();
    goto L89_dummy;

  L89_dummy:
    call {:si_unique_call 2086} {:si_old_unique_call 1} out_Tmp_336, out_Tmp_337, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp := AvCip_ProcessListenPacket#1_loop_L87(out_Tmp_336, out_Tmp_337, in_CipData_4, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, in_timestamp, in_BusBuffer, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp);
    return;

  anon97_Then:
    goto L89;

  anon106_Then:
    goto L112;

  anon98_Then:
    assume {:partition} out_sdv_279 == 0;
    goto L112;

  anon96_Then:
    goto L112;

  anon105_Then:
    goto L110;

  anon95_Then:
    goto L100;

  L100:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2084} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  anon93_Then:
    goto L100;

  anon94_Then:
    goto L93;

  anon104_Then:
    goto L93;

  anon92_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L89;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#1_loop_L87(in_Tmp_336: int, in_Tmp_337: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_343: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_Tmp_348: int, in_boogieTmp: int) returns (out_Tmp_336: int, out_Tmp_337: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_343: int, out_Tmp_344: int, out_Tmp_346: int, out_FrameContext_1: int, out_Tmp_348: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_279 == 0 || out_sdv_279 == in_sdv_279;
  free ensures {:va_keep} out_Tmp_339 == in_Tmp_339 || out_Tmp_339 == in_BusBuffer;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AvCip_ProcessListenPacket#1_loop_L27(in_i_1: int, in_Tmp_336: int, in_Tmp_337: int, in_Tmp_338: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_342: int, in_Tmp_343: int, in_TsHeader: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_SourceLength: int, in_Tmp_348: int, in_DescriptorData_1: int, in_boogieTmp: int, in_vslice_dummy_var_255: int) returns (out_i_1: int, out_Tmp_336: int, out_Tmp_337: int, out_Tmp_338: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_342: int, out_Tmp_343: int, out_Tmp_344: int, out_BusBuffer: int, out_Tmp_346: int, out_FrameContext_1: int, out_SourceLength: int, out_Tmp_348: int, out_boogieTmp: int, out_vslice_dummy_var_255: int)
{

  entry:
    out_i_1, out_Tmp_336, out_Tmp_337, out_Tmp_338, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_342, out_Tmp_343, out_Tmp_344, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_SourceLength, out_Tmp_348, out_boogieTmp, out_vslice_dummy_var_255 := in_i_1, in_Tmp_336, in_Tmp_337, in_Tmp_338, in_sdv_279, in_Tmp_339, in_CopySize, in_Tmp_342, in_Tmp_343, in_Tmp_344, in_BusBuffer, in_Tmp_346, in_FrameContext_1, in_SourceLength, in_Tmp_348, in_boogieTmp, in_vslice_dummy_var_255;
    goto L27, exit;

  exit:
    return;

  L27:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon76_Else;

  anon76_Else:
    assume {:nonnull} in_DescriptorData_1 != 0;
    assume in_DescriptorData_1 > 0;
    havoc out_BusBuffer;
    call {:si_unique_call 2090} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_TsHeader != 0;
    assume in_TsHeader > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2091} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2092} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2093} out_boogieTmp := corral_nondet();
    call {:si_unique_call 2094} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L50;

  L50:
    out_i_1 := out_i_1 + 1;
    goto L50_dummy;

  L50_dummy:
    call {:si_unique_call 2101} {:si_old_unique_call 1} out_i_1, out_Tmp_336, out_Tmp_337, out_Tmp_338, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_342, out_Tmp_343, out_Tmp_344, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_SourceLength, out_Tmp_348, out_boogieTmp, out_vslice_dummy_var_255 := AvCip_ProcessListenPacket#1_loop_L27(out_i_1, out_Tmp_336, out_Tmp_337, out_Tmp_338, in_CipData_4, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_342, out_Tmp_343, in_TsHeader, out_Tmp_344, in_timestamp, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_SourceLength, out_Tmp_348, in_DescriptorData_1, out_boogieTmp, out_vslice_dummy_var_255);
    return;

  anon101_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_Tmp_338;
    goto L53;

  L53:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2088} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2089} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_SourceLength;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    out_SourceLength := out_SourceLength - 4;
    goto L65;

  L65:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L61;

  L61:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto L68;

  L68:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L131;

  L131:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} out_FrameContext_1 != 0;
    call {:si_unique_call 2087} out_vslice_dummy_var_255 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 1);
    out_FrameContext_1 := 0;
    goto L50;

  anon99_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L50;

  anon82_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L131;

  anon84_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L131;

  anon85_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L131;

  anon86_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto L131;

  anon87_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L131;

  anon88_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L131;

  anon89_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L131;

  anon90_Then:
    goto L87;

  L87:
    call {:si_unique_call 2095} out_Tmp_336, out_Tmp_337, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp := AvCip_ProcessListenPacket#1_loop_L87(out_Tmp_336, out_Tmp_337, in_CipData_4, out_sdv_279, out_Tmp_339, out_CopySize, out_Tmp_343, out_Tmp_344, in_timestamp, out_BusBuffer, out_Tmp_346, out_FrameContext_1, out_Tmp_348, out_boogieTmp);
    goto L87_last;

  L87_last:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    havoc out_CopySize;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    out_Tmp_339 := out_BusBuffer;
    assume {:nonnull} out_Tmp_339 != 0;
    assume out_Tmp_339 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_timestamp != 0;
    assume in_timestamp > 0;
    goto L93;

  L93:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    out_CopySize := out_CopySize - 4;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2098} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  L108:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_337;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_343;
    assume {:nonnull} out_Tmp_337 != 0;
    assume out_Tmp_337 > 0;
    assume {:nonnull} out_Tmp_343 != 0;
    assume out_Tmp_343 > 0;
    goto L110;

  L110:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 2100} out_sdv_279 := AvCip_ValidateSourcePacket(in_CipData_4, out_FrameContext_1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} out_sdv_279 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_344;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_348;
    assume {:nonnull} out_Tmp_344 != 0;
    assume out_Tmp_344 > 0;
    assume {:nonnull} out_Tmp_348 != 0;
    assume out_Tmp_348 > 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_336;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_346;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} out_Tmp_336 != 0;
    assume out_Tmp_336 > 0;
    assume {:nonnull} out_Tmp_346 != 0;
    assume out_Tmp_346 > 0;
    goto L112;

  L112:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 2097} out_FrameContext_1 := AvCip_ListenFrameNotification(in_CipData_4, out_FrameContext_1, 0);
    goto L89;

  L89:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    call {:si_unique_call 2096} out_boogieTmp := corral_nondet();
    assume false;
    return;

  anon97_Then:
    goto L89;

  anon106_Then:
    goto L112;

  anon98_Then:
    assume {:partition} out_sdv_279 == 0;
    goto L112;

  anon96_Then:
    goto L112;

  anon105_Then:
    goto L110;

  anon95_Then:
    goto L100;

  L100:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    call {:si_unique_call 2099} sdv_RtlCopyMemory(0, 0, out_CopySize);
    goto L108;

  anon93_Then:
    goto L100;

  anon94_Then:
    goto L93;

  anon104_Then:
    goto L93;

  anon92_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L89;

  anon91_Then:
    goto L50;

  anon83_Then:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_FrameContext_1 != 0;
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    assume {:nonnull} in_CipData_4 != 0;
    assume in_CipData_4 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} out_FrameContext_1 != 0;
    assume out_FrameContext_1 > 0;
    havoc out_Tmp_342;
    assume {:nonnull} out_Tmp_342 != 0;
    assume out_Tmp_342 > 0;
    goto L68;

  anon109_Then:
    goto L68;

  anon108_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L68;

  anon107_Then:
    goto L68;

  anon80_Then:
    goto L68;

  anon81_Then:
    goto L50;

  anon103_Then:
    goto L65;

  anon79_Then:
    assume {:partition} out_FrameContext_1 == 0;
    goto L61;

  anon78_Then:
    goto L50;

  anon102_Then:
    goto L50;

  anon77_Then:
    out_Tmp_338 := 1024;
    goto L53;
}



procedure {:LoopProcedure} AvCip_ProcessListenPacket#1_loop_L27(in_i_1: int, in_Tmp_336: int, in_Tmp_337: int, in_Tmp_338: int, in_CipData_4: int, in_sdv_279: int, in_Tmp_339: int, in_CopySize: int, in_Tmp_342: int, in_Tmp_343: int, in_TsHeader: int, in_Tmp_344: int, in_timestamp: int, in_BusBuffer: int, in_Tmp_346: int, in_FrameContext_1: int, in_SourceLength: int, in_Tmp_348: int, in_DescriptorData_1: int, in_boogieTmp: int, in_vslice_dummy_var_255: int) returns (out_i_1: int, out_Tmp_336: int, out_Tmp_337: int, out_Tmp_338: int, out_sdv_279: int, out_Tmp_339: int, out_CopySize: int, out_Tmp_342: int, out_Tmp_343: int, out_Tmp_344: int, out_BusBuffer: int, out_Tmp_346: int, out_FrameContext_1: int, out_SourceLength: int, out_Tmp_348: int, out_boogieTmp: int, out_vslice_dummy_var_255: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_279 == 0 || out_sdv_279 == in_sdv_279;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_BusResetCallback#0_loop_L29(in_i_5: int, in_Tmp_841: int, in_Tmp_842: int, in_CmpData_17: int, in_Tmp_845: int, in_Tmp_850: int, in_sdv_670: int, in_Tmp_852: int, in_Tmp_858: int) returns (out_i_5: int, out_Tmp_841: int, out_Tmp_842: int, out_Tmp_845: int, out_Tmp_850: int, out_Tmp_852: int, out_Tmp_858: int)
{

  entry:
    out_i_5, out_Tmp_841, out_Tmp_842, out_Tmp_845, out_Tmp_850, out_Tmp_852, out_Tmp_858 := in_i_5, in_Tmp_841, in_Tmp_842, in_Tmp_845, in_Tmp_850, in_Tmp_852, in_Tmp_858;
    goto L29, exit;

  exit:
    return;

  L29:
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    goto anon25_Else;

  anon25_Else:
    out_Tmp_842 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_845;
    out_Tmp_850 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_841;
    assume {:nonnull} out_Tmp_841 != 0;
    assume out_Tmp_841 > 0;
    assume {:nonnull} out_Tmp_845 != 0;
    assume out_Tmp_845 > 0;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    out_Tmp_852 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_858;
    assume {:nonnull} out_Tmp_858 != 0;
    assume out_Tmp_858 > 0;
    out_i_5 := out_i_5 + 1;
    goto anon25_Else_dummy;

  anon25_Else_dummy:
    call {:si_unique_call 2102} {:si_old_unique_call 1} out_i_5, out_Tmp_841, out_Tmp_842, out_Tmp_845, out_Tmp_850, out_Tmp_852, out_Tmp_858 := Av1394_BusResetCallback#0_loop_L29(out_i_5, out_Tmp_841, out_Tmp_842, in_CmpData_17, out_Tmp_845, out_Tmp_850, in_sdv_670, out_Tmp_852, out_Tmp_858);
    return;
}



procedure {:LoopProcedure} Av1394_BusResetCallback#0_loop_L29(in_i_5: int, in_Tmp_841: int, in_Tmp_842: int, in_CmpData_17: int, in_Tmp_845: int, in_Tmp_850: int, in_sdv_670: int, in_Tmp_852: int, in_Tmp_858: int) returns (out_i_5: int, out_Tmp_841: int, out_Tmp_842: int, out_Tmp_845: int, out_Tmp_850: int, out_Tmp_852: int, out_Tmp_858: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_BusResetCallback#0_loop_L20(in_i_5: int, in_Tmp_840: int, in_Tmp_843: int, in_CmpData_17: int, in_Tmp_848: int, in_Tmp_849: int, in_sdv_669: int, in_Tmp_851: int, in_Tmp_854: int) returns (out_i_5: int, out_Tmp_840: int, out_Tmp_843: int, out_Tmp_848: int, out_Tmp_849: int, out_Tmp_851: int, out_Tmp_854: int)
{

  entry:
    out_i_5, out_Tmp_840, out_Tmp_843, out_Tmp_848, out_Tmp_849, out_Tmp_851, out_Tmp_854 := in_i_5, in_Tmp_840, in_Tmp_843, in_Tmp_848, in_Tmp_849, in_Tmp_851, in_Tmp_854;
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    goto anon24_Else;

  anon24_Else:
    out_Tmp_854 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_848;
    out_Tmp_849 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_843;
    assume {:nonnull} out_Tmp_843 != 0;
    assume out_Tmp_843 > 0;
    assume {:nonnull} out_Tmp_848 != 0;
    assume out_Tmp_848 > 0;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    out_Tmp_840 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_851;
    assume {:nonnull} out_Tmp_851 != 0;
    assume out_Tmp_851 > 0;
    out_i_5 := out_i_5 + 1;
    goto anon24_Else_dummy;

  anon24_Else_dummy:
    call {:si_unique_call 2103} {:si_old_unique_call 1} out_i_5, out_Tmp_840, out_Tmp_843, out_Tmp_848, out_Tmp_849, out_Tmp_851, out_Tmp_854 := Av1394_BusResetCallback#0_loop_L20(out_i_5, out_Tmp_840, out_Tmp_843, in_CmpData_17, out_Tmp_848, out_Tmp_849, in_sdv_669, out_Tmp_851, out_Tmp_854);
    return;
}



procedure {:LoopProcedure} Av1394_BusResetCallback#0_loop_L20(in_i_5: int, in_Tmp_840: int, in_Tmp_843: int, in_CmpData_17: int, in_Tmp_848: int, in_Tmp_849: int, in_sdv_669: int, in_Tmp_851: int, in_Tmp_854: int) returns (out_i_5: int, out_Tmp_840: int, out_Tmp_843: int, out_Tmp_848: int, out_Tmp_849: int, out_Tmp_851: int, out_Tmp_854: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_BusResetCallback#0_loop_L56(in_ResetInfo: int, in_PdoExtension_19: int, in_Tmp_853: int, in_Irql_32: int, in_CurrPdoData_2: int, in_Tmp_857: int, in_BusExtension_70: int, in_vslice_dummy_var_285: int) returns (out_PdoExtension_19: int, out_Tmp_853: int, out_Irql_32: int, out_CurrPdoData_2: int, out_Tmp_857: int, out_vslice_dummy_var_285: int)
{

  entry:
    out_PdoExtension_19, out_Tmp_853, out_Irql_32, out_CurrPdoData_2, out_Tmp_857, out_vslice_dummy_var_285 := in_PdoExtension_19, in_Tmp_853, in_Irql_32, in_CurrPdoData_2, in_Tmp_857, in_vslice_dummy_var_285;
    goto L56, exit;

  exit:
    return;

  L56:
    goto anon26_Else;

  anon26_Else:
    assume {:nonnull} out_CurrPdoData_2 != 0;
    assume out_CurrPdoData_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_CurrPdoData_2 != 0;
    assume out_CurrPdoData_2 > 0;
    havoc out_Tmp_853;
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    havoc out_PdoExtension_19;
    call {:si_unique_call 2107} out_vslice_dummy_var_285 := Av1394_GetDeviceNodeId#0(out_PdoExtension_19);
    goto anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2105} out_Tmp_857 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_857 != 0;
    assume out_Tmp_857 > 0;
    call {:si_unique_call 2106} sdv_KeAcquireSpinLock(0, out_Tmp_857);
    assume {:nonnull} out_Tmp_857 != 0;
    assume out_Tmp_857 > 0;
    havoc out_Irql_32;
    assume {:nonnull} out_PdoExtension_19 != 0;
    assume out_PdoExtension_19 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} out_PdoExtension_19 != 0;
    assume out_PdoExtension_19 > 0;
    goto L68;

  L68:
    call {:si_unique_call 2104} sdv_KeReleaseSpinLock(0, out_Irql_32);
    goto L59;

  L59:
    assume {:nonnull} out_CurrPdoData_2 != 0;
    assume out_CurrPdoData_2 > 0;
    havoc out_CurrPdoData_2;
    goto L59_dummy;

  L59_dummy:
    call {:si_unique_call 2108} {:si_old_unique_call 1} out_PdoExtension_19, out_Tmp_853, out_Irql_32, out_CurrPdoData_2, out_Tmp_857, out_vslice_dummy_var_285 := Av1394_BusResetCallback#0_loop_L56(in_ResetInfo, out_PdoExtension_19, out_Tmp_853, out_Irql_32, out_CurrPdoData_2, out_Tmp_857, in_BusExtension_70, out_vslice_dummy_var_285);
    return;

  anon28_Then:
    goto L68;

  anon27_Then:
    goto L59;
}



procedure {:LoopProcedure} Av1394_BusResetCallback#0_loop_L56(in_ResetInfo: int, in_PdoExtension_19: int, in_Tmp_853: int, in_Irql_32: int, in_CurrPdoData_2: int, in_Tmp_857: int, in_BusExtension_70: int, in_vslice_dummy_var_285: int) returns (out_PdoExtension_19: int, out_Tmp_853: int, out_Irql_32: int, out_CurrPdoData_2: int, out_Tmp_857: int, out_vslice_dummy_var_285: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} out_vslice_dummy_var_285 == -1073741811 || out_vslice_dummy_var_285 == -1073741670 || out_vslice_dummy_var_285 == in_vslice_dummy_var_285;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_BusResetCallback#1_loop_L29(in_i_5: int, in_Tmp_841: int, in_Tmp_842: int, in_CmpData_17: int, in_Tmp_845: int, in_Tmp_850: int, in_sdv_670: int, in_Tmp_852: int, in_Tmp_858: int) returns (out_i_5: int, out_Tmp_841: int, out_Tmp_842: int, out_Tmp_845: int, out_Tmp_850: int, out_Tmp_852: int, out_Tmp_858: int)
{

  entry:
    out_i_5, out_Tmp_841, out_Tmp_842, out_Tmp_845, out_Tmp_850, out_Tmp_852, out_Tmp_858 := in_i_5, in_Tmp_841, in_Tmp_842, in_Tmp_845, in_Tmp_850, in_Tmp_852, in_Tmp_858;
    goto L29, exit;

  exit:
    return;

  L29:
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    goto anon25_Else;

  anon25_Else:
    out_Tmp_842 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_845;
    out_Tmp_850 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_841;
    assume {:nonnull} out_Tmp_841 != 0;
    assume out_Tmp_841 > 0;
    assume {:nonnull} out_Tmp_845 != 0;
    assume out_Tmp_845 > 0;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    out_Tmp_852 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_858;
    assume {:nonnull} out_Tmp_858 != 0;
    assume out_Tmp_858 > 0;
    out_i_5 := out_i_5 + 1;
    goto anon25_Else_dummy;

  anon25_Else_dummy:
    call {:si_unique_call 2109} {:si_old_unique_call 1} out_i_5, out_Tmp_841, out_Tmp_842, out_Tmp_845, out_Tmp_850, out_Tmp_852, out_Tmp_858 := Av1394_BusResetCallback#1_loop_L29(out_i_5, out_Tmp_841, out_Tmp_842, in_CmpData_17, out_Tmp_845, out_Tmp_850, in_sdv_670, out_Tmp_852, out_Tmp_858);
    return;
}



procedure {:LoopProcedure} Av1394_BusResetCallback#1_loop_L29(in_i_5: int, in_Tmp_841: int, in_Tmp_842: int, in_CmpData_17: int, in_Tmp_845: int, in_Tmp_850: int, in_sdv_670: int, in_Tmp_852: int, in_Tmp_858: int) returns (out_i_5: int, out_Tmp_841: int, out_Tmp_842: int, out_Tmp_845: int, out_Tmp_850: int, out_Tmp_852: int, out_Tmp_858: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_BusResetCallback#1_loop_L20(in_i_5: int, in_Tmp_840: int, in_Tmp_843: int, in_CmpData_17: int, in_Tmp_848: int, in_Tmp_849: int, in_sdv_669: int, in_Tmp_851: int, in_Tmp_854: int) returns (out_i_5: int, out_Tmp_840: int, out_Tmp_843: int, out_Tmp_848: int, out_Tmp_849: int, out_Tmp_851: int, out_Tmp_854: int)
{

  entry:
    out_i_5, out_Tmp_840, out_Tmp_843, out_Tmp_848, out_Tmp_849, out_Tmp_851, out_Tmp_854 := in_i_5, in_Tmp_840, in_Tmp_843, in_Tmp_848, in_Tmp_849, in_Tmp_851, in_Tmp_854;
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    goto anon24_Else;

  anon24_Else:
    out_Tmp_854 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_848;
    out_Tmp_849 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_843;
    assume {:nonnull} out_Tmp_843 != 0;
    assume out_Tmp_843 > 0;
    assume {:nonnull} out_Tmp_848 != 0;
    assume out_Tmp_848 > 0;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    out_Tmp_840 := out_i_5;
    assume {:nonnull} in_CmpData_17 != 0;
    assume in_CmpData_17 > 0;
    havoc out_Tmp_851;
    assume {:nonnull} out_Tmp_851 != 0;
    assume out_Tmp_851 > 0;
    out_i_5 := out_i_5 + 1;
    goto anon24_Else_dummy;

  anon24_Else_dummy:
    call {:si_unique_call 2110} {:si_old_unique_call 1} out_i_5, out_Tmp_840, out_Tmp_843, out_Tmp_848, out_Tmp_849, out_Tmp_851, out_Tmp_854 := Av1394_BusResetCallback#1_loop_L20(out_i_5, out_Tmp_840, out_Tmp_843, in_CmpData_17, out_Tmp_848, out_Tmp_849, in_sdv_669, out_Tmp_851, out_Tmp_854);
    return;
}



procedure {:LoopProcedure} Av1394_BusResetCallback#1_loop_L20(in_i_5: int, in_Tmp_840: int, in_Tmp_843: int, in_CmpData_17: int, in_Tmp_848: int, in_Tmp_849: int, in_sdv_669: int, in_Tmp_851: int, in_Tmp_854: int) returns (out_i_5: int, out_Tmp_840: int, out_Tmp_843: int, out_Tmp_848: int, out_Tmp_849: int, out_Tmp_851: int, out_Tmp_854: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Av1394_BusResetCallback#1_loop_L56(in_ResetInfo: int, in_PdoExtension_19: int, in_Tmp_853: int, in_Irql_32: int, in_CurrPdoData_2: int, in_Tmp_857: int, in_BusExtension_70: int, in_vslice_dummy_var_292: int) returns (out_PdoExtension_19: int, out_Tmp_853: int, out_Irql_32: int, out_CurrPdoData_2: int, out_Tmp_857: int, out_vslice_dummy_var_292: int)
{

  entry:
    out_PdoExtension_19, out_Tmp_853, out_Irql_32, out_CurrPdoData_2, out_Tmp_857, out_vslice_dummy_var_292 := in_PdoExtension_19, in_Tmp_853, in_Irql_32, in_CurrPdoData_2, in_Tmp_857, in_vslice_dummy_var_292;
    goto L56, exit;

  exit:
    return;

  L56:
    goto anon26_Else;

  anon26_Else:
    assume {:nonnull} out_CurrPdoData_2 != 0;
    assume out_CurrPdoData_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_CurrPdoData_2 != 0;
    assume out_CurrPdoData_2 > 0;
    havoc out_Tmp_853;
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    havoc out_PdoExtension_19;
    call {:si_unique_call 2114} out_vslice_dummy_var_292 := Av1394_GetDeviceNodeId#1(out_PdoExtension_19);
    goto anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2112} out_Tmp_857 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_857 != 0;
    assume out_Tmp_857 > 0;
    call {:si_unique_call 2113} sdv_KeAcquireSpinLock(0, out_Tmp_857);
    assume {:nonnull} out_Tmp_857 != 0;
    assume out_Tmp_857 > 0;
    havoc out_Irql_32;
    assume {:nonnull} out_PdoExtension_19 != 0;
    assume out_PdoExtension_19 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} in_BusExtension_70 != 0;
    assume in_BusExtension_70 > 0;
    assume {:nonnull} in_ResetInfo != 0;
    assume in_ResetInfo > 0;
    assume {:nonnull} out_PdoExtension_19 != 0;
    assume out_PdoExtension_19 > 0;
    goto L68;

  L68:
    call {:si_unique_call 2111} sdv_KeReleaseSpinLock(0, out_Irql_32);
    goto L59;

  L59:
    assume {:nonnull} out_CurrPdoData_2 != 0;
    assume out_CurrPdoData_2 > 0;
    havoc out_CurrPdoData_2;
    goto L59_dummy;

  L59_dummy:
    call {:si_unique_call 2115} {:si_old_unique_call 1} out_PdoExtension_19, out_Tmp_853, out_Irql_32, out_CurrPdoData_2, out_Tmp_857, out_vslice_dummy_var_292 := Av1394_BusResetCallback#1_loop_L56(in_ResetInfo, out_PdoExtension_19, out_Tmp_853, out_Irql_32, out_CurrPdoData_2, out_Tmp_857, in_BusExtension_70, out_vslice_dummy_var_292);
    return;

  anon28_Then:
    goto L68;

  anon27_Then:
    goto L59;
}



procedure {:LoopProcedure} Av1394_BusResetCallback#1_loop_L56(in_ResetInfo: int, in_PdoExtension_19: int, in_Tmp_853: int, in_Irql_32: int, in_CurrPdoData_2: int, in_Tmp_857: int, in_BusExtension_70: int, in_vslice_dummy_var_292: int) returns (out_PdoExtension_19: int, out_Tmp_853: int, out_Irql_32: int, out_CurrPdoData_2: int, out_Tmp_857: int, out_vslice_dummy_var_292: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



procedure fakeMain() returns (Tmp_112: int, dup_assertVar: bool);
  modifies alloc, LockDepth, t, yogi_error, Mem_T.CompletionRoutine__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:entrypoint} fakeMain() returns (Tmp_112: int, dup_assertVar: bool)
{

  start:
    call Tmp_112, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


