var {:scalar} alloc: int;

var {:scalar} yogi_error: int;

var {:scalar} sdv_irql_previous_5: int;

var {:scalar} sdv_irql_previous_2: int;

var {:scalar} sdv_irql_current: int;

var {:scalar} sdv_irql_previous: int;

var {:scalar} sdv_irql_previous_4: int;

var {:scalar} sdv_irql_previous_3: int;

var {:scalar} Mem_T.CancelIrql__IRP: [int]int;

var {:scalar} Mem_T.INT4: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const AvcFcpPool: int;

const BUS1394_CLASS_GUID: int;

const AvcPeerInstanceList: int;

const AvcAlternateOpcodePool: int;

const AvcCommandContextPool: int;

const GUID_61883_CLASS: int;

const AvcCommandLinkPool: int;

const GUID_VIRTUAL_AVC_CLASS: int;

const GUID_AVC_CLASS: int;

const AvcVirtualInstanceList: int;

const ClfsContainerInitializing: int;

const ClfsContainerPendingArchiveAndDelete: int;

const CLFS_SCAN_FORWARD: int;

const CLFS_SCAN_INIT: int;

const ClsContainerPendingArchive: int;

const CLFS_SCAN_INITIALIZED: int;

const ClsContainerInactive: int;

const ClfsNullRecord: int;

const ClfsContainerActivePendingDelete: int;

const ClfsContainerActive: int;

const UnitAddr: int;

const ClsContainerActive: int;

const ClfsClientRecord: int;

const ClsContainerPendingArchiveAndDelete: int;

const CLFS_SCAN_BUFFERED: int;

const ClfsDataRecord: int;

const ClsContainerInitializing: int;

const ClfsContainerInactive: int;

const CLFS_MAX_CONTAINER_INFO: int;

const ClfsRestartRecord: int;

const ClsContainerActivePendingDelete: int;

const CLFS_SCAN_BACKWARD: int;

const ClfsContainerPendingArchive: int;

const CLFS_SCAN_CLOSE: int;

const ClfsContainerInitializing_1: int;

const ClfsContainerPendingArchiveAndDelete_1: int;

const KsDstPinDescriptor: int;

const CLFS_SCAN_FORWARD_1: int;

const CLFS_SCAN_INIT_1: int;

const ClsContainerPendingArchive_1: int;

const CLFS_SCAN_INITIALIZED_1: int;

const ClsContainerInactive_1: int;

const ClfsNullRecord_1: int;

const ClfsContainerActivePendingDelete_1: int;

const ClfsContainerActive_1: int;

const UnitAddr_1: int;

const ClsContainerActive_1: int;

const ClfsClientRecord_1: int;

const ClsContainerPendingArchiveAndDelete_1: int;

const CLFS_SCAN_BUFFERED_1: int;

const ClfsDataRecord_1: int;

const KsSrcPinDescriptor: int;

const ClsContainerInitializing_1: int;

const ClfsContainerInactive_1: int;

const CLFS_MAX_CONTAINER_INFO_1: int;

const ClfsRestartRecord_1: int;

const ClsContainerActivePendingDelete_1: int;

const CLFS_SCAN_BACKWARD_1: int;

const ClfsContainerPendingArchive_1: int;

const CLFS_SCAN_CLOSE_1: int;

const sdv_cancelFptr: int;

const KSPROPSETID_DrmAudioStream: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const ClfsContainerInitializing_2: int;

const ClfsContainerPendingArchiveAndDelete_2: int;

const CLFS_SCAN_FORWARD_2: int;

const CLFS_SCAN_INIT_2: int;

const ClsContainerPendingArchive_2: int;

const CLFS_SCAN_INITIALIZED_2: int;

const ClsContainerInactive_2: int;

const ClfsNullRecord_2: int;

const ClfsContainerActivePendingDelete_2: int;

const ClfsContainerActive_2: int;

const ClsContainerActive_2: int;

const ClfsClientRecord_2: int;

const ClsContainerPendingArchiveAndDelete_2: int;

const CLFS_SCAN_BUFFERED_2: int;

const ClfsDataRecord_2: int;

const ClsContainerInitializing_2: int;

const ClfsContainerInactive_2: int;

const CLFS_MAX_CONTAINER_INFO_2: int;

const ClfsRestartRecord_2: int;

const ClsContainerActivePendingDelete_2: int;

const CLFS_SCAN_BACKWARD_2: int;

const ClfsContainerPendingArchive_2: int;

const CLFS_SCAN_CLOSE_2: int;

const IID_IDrmAudioStream: int;

const GUID_PCMCIA_BUS_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_PCMCIA: int;

const GUID_TRANSLATOR_INTERFACE_STANDARD: int;

const GUID_ARBITER_INTERFACE_STANDARD: int;

const GUID_ACPI_CMOS_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_1394: int;

const GUID_AGP_TARGET_BUS_INTERFACE_STANDARD: int;

const GUID_TARGET_DEVICE_REMOVE_CANCELLED: int;

const GUID_BUS_TYPE_ISAPNP: int;

const GUID_MF_ENUMERATION_INTERFACE: int;

const GUID_LEGACY_DEVICE_DETECTION_STANDARD: int;

const GUID_BUS_INTERFACE_STANDARD: int;

const GUID_PNP_POWER_SETTING_CHANGE: int;

const GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE: int;

const GUID_BUS_TYPE_DOT4PRT: int;

const GUID_BUS_TYPE_EISA: int;

const AvcQueryTablePool: int;

const GUID_ACPI_REGS_INTERFACE_STANDARD: int;

const GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED: int;

const GUID_ACPI_INTERFACE_STANDARD2: int;

const GUID_PARTITION_UNIT_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_IRDA: int;

const GUID_WUDF_DEVICE_HOST_PROBLEM: int;

const GUID_DEVICE_INTERFACE_REMOVAL: int;

const GUID_BUS_TYPE_SERENUM: int;

const GUID_PCI_DEVICE_PRESENT_INTERFACE: int;

const GUID_BUS_TYPE_MCA: int;

const GUID_POWER_DEVICE_TIMEOUTS: int;

const GUID_HWPROFILE_CHANGE_CANCELLED: int;

const GUID_PNP_LOCATION_INTERFACE: int;

const GUID_MSIX_TABLE_CONFIG_INTERFACE: int;

const GUID_BUS_TYPE_INTERNAL: int;

const GUID_BUS_TYPE_LPTENUM: int;

const GUID_HWPROFILE_CHANGE_COMPLETE: int;

const GUID_DEVICE_INTERFACE_ARRIVAL: int;

const GUID_BUS_TYPE_AVC: int;

const GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_USB: int;

const GUID_INT_ROUTE_INTERFACE_STANDARD: int;

const GUID_PROCESSOR_PCC_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_USBPRINT: int;

const GUID_BUS_TYPE_PCI: int;

const GUID_TARGET_DEVICE_QUERY_REMOVE: int;

const GUID_PCI_BUS_INTERFACE_STANDARD: int;

const GUID_HWPROFILE_QUERY_CHANGE: int;

const GUID_POWER_DEVICE_ENABLE: int;

const GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE: int;

const GUID_PNP_CUSTOM_NOTIFICATION: int;

const GUID_BUS_TYPE_SD: int;

const GUID_PNP_POWER_NOTIFICATION: int;

const GUID_REENUMERATE_SELF_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_HID: int;

const GUID_TARGET_DEVICE_REMOVE_COMPLETE: int;

const GUID_ACPI_INTERFACE_STANDARD: int;

const GUID_POWER_DEVICE_WAKE_ENABLE: int;

procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "AvcPrepareForResponseCallback"} AvcPrepareForResponseCallback(actual_DevExt: int, actual_Command: int) returns (Tmp_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_3 == 0 || Tmp_3 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcPrepareForResponseCallback"} AvcPrepareForResponseCallback(actual_DevExt: int, actual_Command: int) returns (Tmp_3: int)
{
  var {:pointer} Tmp_4: int;
  var {:scalar} Status: int;
  var {:scalar} OldIrql: int;
  var {:pointer} Tmp_5: int;
  var {:pointer} NextIrpStack: int;
  var {:pointer} Tmp_6: int;
  var {:scalar} NeedIrp: int;
  var {:pointer} DevExt: int;
  var {:pointer} Command: int;
  var boogieTmp: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;

  anon0:
    DevExt := actual_DevExt;
    Command := actual_Command;
    Status := 0;
    NeedIrp := 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Tmp_3 := Status;
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 1} Tmp_6 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    Mem_T.INT4[Tmp_6] := OldIrql;
    call {:si_unique_call 2} sdv_KeAcquireSpinLock(0, Tmp_6);
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    OldIrql := Mem_T.INT4[Tmp_6];
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Command != 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    call {:si_unique_call 3} vslice_dummy_var_1 := sdv_InsertTailList(PendingResponseList__BUS_DEVICE_EXTENSION(DevExt), Command);
    goto L14;

  L14:
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L21;

  L21:
    call {:si_unique_call 4} sdv_KeReleaseSpinLock(0, OldIrql);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} NeedIrp != 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc vslice_dummy_var_0;
    call {:si_unique_call 5} NextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_0);
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc Tmp_4;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc vslice_dummy_var_4;
    call {:si_unique_call 6} sdv_IoSetCompletionRoutine(vslice_dummy_var_4, li2bplFunctionConstant248, DevExt, 1, 1, 1);
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc vslice_dummy_var_5;
    havoc vslice_dummy_var_6;
    call {:si_unique_call 7} vslice_dummy_var_2 := sdv_IoCallDriver(vslice_dummy_var_5, vslice_dummy_var_6);
    goto L25;

  L25:
    Tmp_3 := Status;
    goto L1;

  anon16_Then:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Command != 0;
    call {:si_unique_call 8} Tmp_6 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    Mem_T.INT4[Tmp_6] := OldIrql;
    call {:si_unique_call 9} sdv_KeAcquireSpinLock(0, Tmp_6);
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    OldIrql := Mem_T.INT4[Tmp_6];
    call {:si_unique_call 10} vslice_dummy_var_3 := sdv_RemoveEntryList(0);
    call {:si_unique_call 11} InitializeListHead(Command);
    call {:si_unique_call 12} sdv_KeReleaseSpinLock(0, OldIrql);
    goto L46;

  L46:
    Status := -1073741670;
    goto L25;

  anon17_Then:
    assume {:partition} Command == 0;
    goto L46;

  anon15_Then:
    assume {:partition} NeedIrp == 0;
    goto L25;

  anon14_Then:
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc Tmp_5;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    havoc vslice_dummy_var_7;
    call {:si_unique_call 13} boogieTmp := IoAllocateIrp(vslice_dummy_var_7, 0);
    NeedIrp := 1;
    goto L21;

  anon13_Then:
    assume {:partition} Command == 0;
    goto L14;
}



procedure {:origName "AvcSubunitPackedTypesEqual"} AvcSubunitPackedTypesEqual(actual_SubunitType1: int, actual_SubunitType2: int) returns (Tmp_7: int);
  free ensures {:va_keep} Tmp_7 == 1 || Tmp_7 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcSubunitPackedTypesEqual"} AvcSubunitPackedTypesEqual(actual_SubunitType1: int, actual_SubunitType2: int) returns (Tmp_7: int)
{
  var {:scalar} Tmp_8: int;
  var {:scalar} Tmp_9: int;
  var {:scalar} Tmp_11: int;
  var {:scalar} Tmp_12: int;
  var {:scalar} Tmp_13: int;
  var {:scalar} idx: int;
  var {:scalar} Tmp_14: int;
  var {:pointer} SubunitType1: int;
  var {:pointer} SubunitType2: int;

  anon0:
    SubunitType1 := actual_SubunitType1;
    SubunitType2 := actual_SubunitType2;
    idx := 1;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} SubunitType1 == SubunitType2;
    Tmp_7 := 1;
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:partition} SubunitType1 != SubunitType2;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} SubunitType1 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SubunitType2 != 0;
    assume {:nonnull} SubunitType1 != 0;
    assume SubunitType1 > 0;
    Tmp_13 := BAND(Mem_T.INT4[SubunitType1], BNOT(BOR(BOR(1, 2), 4)));
    assume {:nonnull} SubunitType2 != 0;
    assume SubunitType2 > 0;
    Tmp_8 := BAND(Mem_T.INT4[SubunitType2], BNOT(BOR(BOR(1, 2), 4)));
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_13 != Tmp_8;
    Tmp_7 := 0;
    goto L1;

  anon21_Then:
    assume {:partition} Tmp_13 == Tmp_8;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L16;

  L16:
    call {:si_unique_call 14} Tmp_9, idx, Tmp_14 := AvcSubunitPackedTypesEqual_loop_L16(Tmp_9, idx, Tmp_14, SubunitType1, SubunitType2);
    goto L16_last;

  L16_last:
    Tmp_14 := idx;
    assume {:nonnull} SubunitType1 != 0;
    assume SubunitType1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.INT4[SubunitType1 + Tmp_14 * 4] == 255;
    Tmp_9 := idx;
    assume {:nonnull} SubunitType2 != 0;
    assume SubunitType2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.INT4[SubunitType2 + Tmp_9 * 4] != 255;
    Tmp_7 := 0;
    goto L1;

  anon23_Then:
    assume {:partition} Mem_T.INT4[SubunitType2 + Tmp_9 * 4] == 255;
    idx := idx + 1;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon22_Then:
    assume {:partition} Mem_T.INT4[SubunitType1 + Tmp_14 * 4] != 255;
    Tmp_12 := idx;
    Tmp_11 := idx;
    assume {:nonnull} SubunitType1 != 0;
    assume SubunitType1 > 0;
    assume {:nonnull} SubunitType2 != 0;
    assume SubunitType2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.INT4[SubunitType1 + Tmp_12 * 4] != Mem_T.INT4[SubunitType2 + Tmp_11 * 4];
    Tmp_7 := 0;
    goto L1;

  anon24_Then:
    assume {:partition} Mem_T.INT4[SubunitType1 + Tmp_12 * 4] == Mem_T.INT4[SubunitType2 + Tmp_11 * 4];
    goto L15;

  L15:
    Tmp_7 := 1;
    goto L1;

  anon19_Then:
    goto L15;

  anon18_Then:
    assume {:partition} SubunitType2 == 0;
    goto L8;

  L8:
    Tmp_7 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} SubunitType1 == 0;
    goto L8;
}



procedure {:origName "AvcStopAllFCPProcessing"} AvcStopAllFCPProcessing(actual_DevExt_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcStopAllFCPProcessing"} AvcStopAllFCPProcessing(actual_DevExt_1: int)
{
  var {:scalar} sdv_7: int;
  var {:pointer} sdv_8: int;
  var {:scalar} sdv_9: int;
  var {:scalar} OldIrql_1: int;
  var {:pointer} sdv_11: int;
  var {:scalar} sdv_12: int;
  var {:scalar} sdv_13: int;
  var {:pointer} sdv_14: int;
  var {:pointer} Command_1: int;
  var {:pointer} CallbackLink: int;
  var {:pointer} Tmp_16: int;
  var {:pointer} sdv_16: int;
  var {:pointer} DevExt_1: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 15} vslice_dummy_var_4 := __HAVOC_malloc(4);
    DevExt_1 := actual_DevExt_1;
    call {:si_unique_call 16} Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    Mem_T.INT4[Tmp_16] := OldIrql_1;
    call {:si_unique_call 17} sdv_KeAcquireSpinLock(0, Tmp_16);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_16];
    goto L8;

  L8:
    call {:si_unique_call 18} sdv_7, sdv_9, OldIrql_1, sdv_11, Command_1, CallbackLink, Tmp_16, sdv_16 := AvcStopAllFCPProcessing_loop_L8(sdv_7, sdv_9, OldIrql_1, sdv_11, Command_1, CallbackLink, Tmp_16, sdv_16, DevExt_1);
    goto L8_last;

  L8_last:
    call {:si_unique_call 52} sdv_7 := sdv_IsListEmpty(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_7 != 0;
    goto L15;

  L15:
    call {:si_unique_call 19} OldIrql_1, sdv_12, sdv_14, Command_1, Tmp_16 := AvcStopAllFCPProcessing_loop_L15(OldIrql_1, sdv_12, sdv_14, Command_1, Tmp_16, DevExt_1);
    goto L15_last;

  L15_last:
    call {:si_unique_call 51} sdv_12 := sdv_IsListEmpty(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_12 != 0;
    goto L22;

  L22:
    call {:si_unique_call 20} sdv_8, OldIrql_1, sdv_13, Command_1, Tmp_16 := AvcStopAllFCPProcessing_loop_L22(sdv_8, OldIrql_1, sdv_13, Command_1, Tmp_16, DevExt_1);
    goto L22_last;

  L22_last:
    call {:si_unique_call 50} sdv_13 := sdv_IsListEmpty(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_13 != 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 21} vslice_dummy_var_5 := IoCancelIrp(0);
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto L30;

  L30:
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 22} vslice_dummy_var_6 := IoCancelIrp(0);
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto L35;

  L35:
    call {:si_unique_call 23} sdv_KeReleaseSpinLock(0, OldIrql_1);
    return;

  anon19_Then:
    goto L35;

  anon18_Then:
    goto L30;

  anon17_Then:
    assume {:partition} sdv_13 == 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    call {:si_unique_call 24} sdv_8 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(DevExt_1));
    Command_1 := sdv_8;
    call {:si_unique_call 25} InitializeListHead(Command_1);
    call {:si_unique_call 26} sdv_KeReleaseSpinLock(0, OldIrql_1);
    call {:si_unique_call 27} AvcPendingIrpCompletion(Command_1);
    call {:si_unique_call 28} AvcFreeCommandContext(Command_1);
    call {:si_unique_call 29} Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    Mem_T.INT4[Tmp_16] := OldIrql_1;
    call {:si_unique_call 30} sdv_KeAcquireSpinLock(0, Tmp_16);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_16];
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} sdv_12 == 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    call {:si_unique_call 31} sdv_14 := RemoveHeadList(PendingRequestList__BUS_DEVICE_EXTENSION(DevExt_1));
    Command_1 := sdv_14;
    call {:si_unique_call 32} InitializeListHead(Command_1);
    call {:si_unique_call 33} sdv_KeReleaseSpinLock(0, OldIrql_1);
    assume {:nonnull} Command_1 != 0;
    assume Command_1 > 0;
    call {:si_unique_call 34} AvcPendingIrpCompletion(Command_1);
    call {:si_unique_call 35} AvcFreeCommandContext(Command_1);
    Command_1 := 0;
    call {:si_unique_call 36} Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    Mem_T.INT4[Tmp_16] := OldIrql_1;
    call {:si_unique_call 37} sdv_KeAcquireSpinLock(0, Tmp_16);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_16];
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} sdv_7 == 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    call {:si_unique_call 38} sdv_11 := RemoveHeadList(PendingResponseList__BUS_DEVICE_EXTENSION(DevExt_1));
    Command_1 := sdv_11;
    call {:si_unique_call 39} InitializeListHead(Command_1);
    call {:si_unique_call 40} sdv_KeReleaseSpinLock(0, OldIrql_1);
    assume {:nonnull} Command_1 != 0;
    assume Command_1 > 0;
    call {:si_unique_call 41} sdv_9 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_9 == 0;
    assume {:nonnull} Command_1 != 0;
    assume Command_1 > 0;
    call {:si_unique_call 42} sdv_16 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_1));
    CallbackLink := sdv_16;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    havoc vslice_dummy_var_8;
    call {:si_unique_call 43} AvcCommandCallback_sdv_static_function_2(Command_1, vslice_dummy_var_8);
    goto L107;

  L107:
    call {:si_unique_call 44} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink);
    goto L97;

  L97:
    call {:si_unique_call 45} Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    Mem_T.INT4[Tmp_16] := OldIrql_1;
    call {:si_unique_call 46} sdv_KeAcquireSpinLock(0, Tmp_16);
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_16];
    goto L97_dummy;

  L97_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 47} Avc_BusResetCallback_sdv_static_function_4(Command_1, vslice_dummy_var_9);
    goto L107;

  anon20_Then:
    assume {:partition} sdv_9 != 0;
    call {:si_unique_call 48} AvcPendingIrpCompletion(Command_1);
    call {:si_unique_call 49} AvcFreeCommandContext(Command_1);
    Command_1 := 0;
    goto L97;
}



procedure {:origName "AvcExtractMatchingIrps_sdv_static_function_2"} AvcExtractMatchingIrps_sdv_static_function_2(actual_FileObject: int, actual_CommandList: int, actual_IrpList: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcExtractMatchingIrps_sdv_static_function_2"} AvcExtractMatchingIrps_sdv_static_function_2(actual_FileObject: int, actual_CommandList: int, actual_IrpList: int)
{
  var {:pointer} Irp: int;
  var {:pointer} CommandEntry: int;
  var {:pointer} sdv_17: int;
  var {:pointer} IrpStack: int;
  var {:scalar} oldCancelRoutine: int;
  var {:pointer} nextIrpEntry: int;
  var {:pointer} Command_2: int;
  var {:pointer} IrpEntry: int;
  var {:pointer} FileObject: int;
  var {:pointer} CommandList: int;
  var {:pointer} IrpList: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 53} vslice_dummy_var_7 := __HAVOC_malloc(4);
    FileObject := actual_FileObject;
    CommandList := actual_CommandList;
    IrpList := actual_IrpList;
    assume {:nonnull} CommandList != 0;
    assume CommandList > 0;
    havoc CommandEntry;
    goto L5;

  L5:
    call {:si_unique_call 54} Irp, CommandEntry, sdv_17, IrpStack, oldCancelRoutine, nextIrpEntry, Command_2, IrpEntry, vslice_dummy_var_8, vslice_dummy_var_9 := AvcExtractMatchingIrps_sdv_static_function_2_loop_L5(Irp, CommandEntry, sdv_17, IrpStack, oldCancelRoutine, nextIrpEntry, Command_2, IrpEntry, FileObject, IrpList, vslice_dummy_var_8, vslice_dummy_var_9);
    goto L5_last;

  L5_last:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Command_2 := CommandEntry;
    assume {:nonnull} Command_2 != 0;
    assume Command_2 > 0;
    havoc IrpEntry;
    goto L11;

  L11:
    call {:si_unique_call 55} Irp, sdv_17, IrpStack, oldCancelRoutine, nextIrpEntry, IrpEntry, vslice_dummy_var_8, vslice_dummy_var_9 := AvcExtractMatchingIrps_sdv_static_function_2_loop_L11(Irp, sdv_17, IrpStack, oldCancelRoutine, nextIrpEntry, IrpEntry, FileObject, IrpList, vslice_dummy_var_8, vslice_dummy_var_9);
    goto L11_last;

  L11_last:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 56} sdv_17 := sdv_containing_record(IrpEntry, 88);
    Irp := sdv_17;
    call {:si_unique_call 57} IrpStack := sdv_IoGetCurrentIrpStackLocation(Irp);
    assume {:nonnull} IrpEntry != 0;
    assume IrpEntry > 0;
    havoc nextIrpEntry;
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 58} oldCancelRoutine := sdv_IoSetCancelRoutine(Irp, 0);
    call {:si_unique_call 59} vslice_dummy_var_8 := sdv_RemoveEntryList(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} oldCancelRoutine != 0;
    call {:si_unique_call 60} vslice_dummy_var_9 := sdv_InsertTailList(IrpList, IrpEntry);
    goto L26;

  L26:
    IrpEntry := nextIrpEntry;
    goto L26_dummy;

  L26_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} oldCancelRoutine == 0;
    call {:si_unique_call 61} InitializeListHead(IrpEntry);
    goto L26;

  anon12_Then:
    goto L26;

  anon10_Then:
    assume {:nonnull} CommandEntry != 0;
    assume CommandEntry > 0;
    havoc CommandEntry;
    goto anon10_Then_dummy;

  anon10_Then_dummy:
    assume false;
    return;

  anon9_Then:
    return;
}



procedure {:origName "AvcLocalResponseCompletion_sdv_static_function_2"} AvcLocalResponseCompletion_sdv_static_function_2(actual_DeviceObject: int, actual_Irp_1: int, actual_Context: int) returns (Tmp_19: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_19 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcLocalResponseCompletion_sdv_static_function_2"} AvcLocalResponseCompletion_sdv_static_function_2(actual_DeviceObject: int, actual_Irp_1: int, actual_Context: int) returns (Tmp_19: int)
{
  var {:pointer} Response: int;
  var {:pointer} Context: int;

  anon0:
    Context := actual_Context;
    Response := Context;
    call {:si_unique_call 62} ExFreeToNPagedLookasideList(AvcFcpPool, Response);
    call {:si_unique_call 63} IoFreeIrp(0);
    Tmp_19 := -1073741802;
    return;
}



procedure {:origName "AvcEnqueueFCPIrp"} AvcEnqueueFCPIrp(actual_Command_3: int, actual_Irp_2: int) returns (Tmp_21: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_21 == -1073741536 || Tmp_21 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcEnqueueFCPIrp"} AvcEnqueueFCPIrp(actual_Command_3: int, actual_Irp_2: int) returns (Tmp_21: int)
{
  var {:scalar} Status_1: int;
  var {:scalar} oldCancelRoutine_1: int;
  var {:scalar} oldIrql: int;
  var {:pointer} Tmp_22: int;
  var {:pointer} Command_3: int;
  var {:pointer} Irp_2: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    Command_3 := actual_Command_3;
    Irp_2 := actual_Irp_2;
    assume {:nonnull} Command_3 != 0;
    assume Command_3 > 0;
    Status_1 := 259;
    call {:si_unique_call 64} Tmp_22 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    Mem_T.INT4[Tmp_22] := oldIrql;
    call {:si_unique_call 65} sdv_KeAcquireSpinLock(0, Tmp_22);
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    oldIrql := Mem_T.INT4[Tmp_22];
    assume {:nonnull} Command_3 != 0;
    assume Command_3 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 66} vslice_dummy_var_10 := sdv_InsertTailList(PendingIrpList__AVC_COMMAND_CONTEXT(Command_3), ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_2))));
    call {:si_unique_call 67} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 68} oldCancelRoutine_1 := sdv_IoSetCancelRoutine(Irp_2, li2bplFunctionConstant238);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 69} oldCancelRoutine_1 := sdv_IoSetCancelRoutine(Irp_2, 0);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} oldCancelRoutine_1 != 0;
    call {:si_unique_call 70} vslice_dummy_var_11 := sdv_RemoveEntryList(0);
    Status_1 := -1073741536;
    goto L23;

  L23:
    call {:si_unique_call 71} sdv_KeReleaseSpinLock(0, oldIrql);
    Tmp_21 := Status_1;
    return;

  anon6_Then:
    assume {:partition} oldCancelRoutine_1 == 0;
    goto L23;

  anon5_Then:
    goto L23;
}



procedure {:origName "AvcProcessSendResponse"} AvcProcessSendResponse(actual_DeviceObject_1: int, actual_Irp_3: int) returns (Tmp_23: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_23 == 259 || Tmp_23 == -1073741811 || Tmp_23 == 0 || Tmp_23 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcProcessSendResponse"} AvcProcessSendResponse(actual_DeviceObject_1: int, actual_Irp_3: int) returns (Tmp_23: int)
{
  var {:pointer} Tmp_24: int;
  var {:pointer} SubunitAddr: int;
  var {:dopa} {:scalar} Offset: int;
  var {:pointer} Tmp_25: int;
  var {:pointer} sdv_24: int;
  var {:scalar} Tmp_26: int;
  var {:scalar} Status_2: int;
  var {:pointer} DevExt_3: int;
  var {:scalar} Tmp_28: int;
  var {:scalar} Tmp_29: int;
  var {:scalar} Padding: int;
  var {:pointer} sdv_25: int;
  var {:pointer} NextIrpStack_1: int;
  var {:pointer} Tmp_31: int;
  var {:pointer} Tmp_32: int;
  var {:pointer} Response_1: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} CmdIrb: int;
  var {:scalar} Tmp_34: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 72} Offset := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_3 := actual_Irp_3;
    call {:si_unique_call 73} Tmp_24 := __HAVOC_malloc(2048);
    call {:si_unique_call 74} Tmp_25 := __HAVOC_malloc(2048);
    call {:si_unique_call 75} Tmp_31 := __HAVOC_malloc(2048);
    call {:si_unique_call 76} Tmp_32 := __HAVOC_malloc(2048);
    call {:si_unique_call 77} Tmp_33 := __HAVOC_malloc(2048);
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc DevExt_3;
    call {:si_unique_call 78} sdv_24 := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    assume {:nonnull} sdv_24 != 0;
    assume sdv_24 > 0;
    havoc CmdIrb;
    Status_2 := 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L14;

  L14:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} DevExt_3 != 0;
    assume DevExt_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L72;

  L72:
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    call {:si_unique_call 79} sdv_IoCompleteRequest(0, 0);
    Tmp_23 := Status_2;
    goto L1;

  L1:
    return;

  anon25_Then:
    call {:si_unique_call 80} sdv_25 := sdv_ExAllocateFromNPagedLookasideList(0);
    Response_1 := sdv_25;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Response_1 != 0;
    call {:si_unique_call 81} NextIrpStack_1 := sdv_IoGetNextIrpStackLocation(Irp_3);
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    Mem_T.INT4[Offset] := 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    havoc Tmp_33;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Tmp_33 != 0;
    assume Tmp_33 > 0;
    havoc vslice_dummy_var_10;
    Mem_T.INT4[Tmp_33] := vslice_dummy_var_10;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    havoc SubunitAddr;
    goto L35;

  L35:
    call {:si_unique_call 82} Status_2 := AvcValidateSubunitAddress(SubunitAddr, 32, Offset);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Status_2 != 0;
    goto L72;

  anon26_Then:
    assume {:partition} Status_2 == 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    havoc Tmp_31;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    call {:si_unique_call 83} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[Offset]);
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    Mem_T.INT4[Offset] := Mem_T.INT4[Offset] + 1;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    Tmp_29 := Mem_T.INT4[Offset];
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    havoc Tmp_24;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Tmp_24 != 0;
    assume Tmp_24 > 0;
    Mem_T.INT4[Tmp_24 + Tmp_29 * 4] := Mem_T.INT4[Opcode__AVC_COMMAND_IRB(CmdIrb)];
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    Mem_T.INT4[Offset] := Mem_T.INT4[Offset] + 1;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    Tmp_28 := Mem_T.INT4[Offset];
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    havoc Tmp_25;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    havoc vslice_dummy_var_11;
    call {:si_unique_call 84} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_11);
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    havoc vslice_dummy_var_12;
    Mem_T.INT4[Offset] := vslice_dummy_var_12;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    Padding := Mem_T.INT4[Offset];
    goto L54;

  L54:
    call {:si_unique_call 85} Tmp_26, Padding, Tmp_32, Tmp_34 := AvcProcessSendResponse_loop_L54(Tmp_26, Padding, Tmp_32, Response_1, Tmp_34);
    goto L54_last;

  L54_last:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} INTMOD(Padding, 4) != 0;
    Tmp_26 := Padding;
    Padding := Padding + 1;
    Tmp_34 := Tmp_26;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    havoc Tmp_32;
    assume {:nonnull} Tmp_32 != 0;
    assume Tmp_32 > 0;
    Mem_T.INT4[Tmp_32 + Tmp_34 * 4] := 0;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} INTMOD(Padding, 4) == 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    assume {:nonnull} Response_1 != 0;
    assume Response_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    call {:si_unique_call 86} sdv_IoSetCompletionRoutine(Irp_3, li2bplFunctionConstant266, Response_1, 1, 1, 1);
    assume {:nonnull} DevExt_3 != 0;
    assume DevExt_3 > 0;
    havoc vslice_dummy_var_13;
    call {:si_unique_call 87} Status_2 := sdv_IoCallDriver(vslice_dummy_var_13, Irp_3);
    Tmp_23 := Status_2;
    goto L1;

  anon36_Then:
    assume {:nonnull} DevExt_3 != 0;
    assume DevExt_3 > 0;
    SubunitAddr := UnitAddr__BUS_DEVICE_EXTENSION(DevExt_3);
    goto L35;

  anon35_Then:
    assume {:partition} Response_1 == 0;
    Status_2 := -1073741670;
    goto L72;

  anon28_Then:
    Status_2 := -1073741811;
    goto L72;

  anon29_Then:
    goto L14;

  anon30_Then:
    goto L14;

  anon31_Then:
    goto L14;

  anon32_Then:
    goto L14;

  anon33_Then:
    goto L14;

  anon34_Then:
    goto L14;
}



procedure {:origName "AvcStatus"} AvcStatus(actual_Command_4: int) returns (Tmp_36: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcStatus"} AvcStatus(actual_Command_4: int) returns (Tmp_36: int)
{
  var {:scalar} Status_3: int;
  var {:pointer} DevExt_4: int;
  var {:pointer} Command_4: int;

  anon0:
    Command_4 := actual_Command_4;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    havoc DevExt_4;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    call {:si_unique_call 88} Status_3 := AvcCommand_sdv_static_function_2(DevExt_4, Command_4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_36 := Status_3;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcGetPeerDeviceObjectList"} AvcGetPeerDeviceObjectList(actual_DeviceObject_2: int, actual_Irp_4: int) returns (Tmp_38: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_38 == 0 || Tmp_38 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcGetPeerDeviceObjectList"} AvcGetPeerDeviceObjectList(actual_DeviceObject_2: int, actual_Irp_4: int) returns (Tmp_38: int)
{
  var {:scalar} Tmp_39: int;
  var {:pointer} Tmp_40: int;
  var {:scalar} Count: int;
  var {:scalar} Tmp_41: int;
  var {:pointer} sdv_30: int;
  var {:pointer} DevExt_5: int;
  var {:pointer} AvcIrb: int;
  var {:scalar} OldIrql_2: int;
  var {:pointer} sdv_31: int;
  var {:scalar} ntStatus: int;
  var {:pointer} sdv_32: int;
  var {:pointer} Objects: int;
  var {:pointer} Entry: int;
  var {:scalar} Tmp_42: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_12: int;

  anon0:
    Irp_4 := actual_Irp_4;
    call {:si_unique_call 89} sdv_30 := sdv_IoGetCurrentIrpStackLocation(Irp_4);
    assume {:nonnull} sdv_30 != 0;
    assume sdv_30 > 0;
    havoc AvcIrb;
    Count := 0;
    Objects := 0;
    ntStatus := 0;
    assume {:nonnull} AvcIrb != 0;
    assume AvcIrb > 0;
    assume {:nonnull} AvcIrb != 0;
    assume AvcIrb > 0;
    call {:si_unique_call 90} Tmp_40 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_40 != 0;
    assume Tmp_40 > 0;
    Mem_T.INT4[Tmp_40] := OldIrql_2;
    call {:si_unique_call 91} sdv_KeAcquireSpinLock(0, Tmp_40);
    assume {:nonnull} Tmp_40 != 0;
    assume Tmp_40 > 0;
    OldIrql_2 := Mem_T.INT4[Tmp_40];
    havoc Entry;
    goto L22;

  L22:
    call {:si_unique_call 92} Count, Entry := AvcGetPeerDeviceObjectList_loop_L22(Count, Entry);
    goto L22_last;

  L22_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Count := Count + 1;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Entry;
    goto anon7_Else_dummy;

  anon7_Else_dummy:
    assume false;
    return;

  anon7_Then:
    Tmp_39 := Count * 4;
    call {:si_unique_call 93} sdv_31 := ExAllocatePoolWithTag(0, Tmp_39, 541283905);
    Objects := sdv_31;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Objects != 0;
    Count := 0;
    havoc Entry;
    goto L34;

  L34:
    call {:si_unique_call 94} Count, Tmp_41, DevExt_5, sdv_32, Entry, Tmp_42, vslice_dummy_var_12 := AvcGetPeerDeviceObjectList_loop_L34(Count, Tmp_41, DevExt_5, sdv_32, Objects, Entry, Tmp_42, vslice_dummy_var_12);
    goto L34_last;

  L34_last:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 95} sdv_32 := sdv_containing_record(Entry, 72);
    DevExt_5 := sdv_32;
    call {:si_unique_call 96} vslice_dummy_var_12 := sdv_ObReferenceObject(0);
    Tmp_42 := Count;
    Count := Count + 1;
    Tmp_41 := Tmp_42;
    assume {:nonnull} DevExt_5 != 0;
    assume DevExt_5 > 0;
    assume {:nonnull} Objects != 0;
    assume Objects > 0;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Entry;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    assume false;
    return;

  anon8_Then:
    assume {:nonnull} AvcIrb != 0;
    assume AvcIrb > 0;
    assume {:nonnull} AvcIrb != 0;
    assume AvcIrb > 0;
    goto L47;

  L47:
    call {:si_unique_call 97} sdv_KeReleaseSpinLock(0, OldIrql_2);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 98} sdv_IoCompleteRequest(0, 0);
    Tmp_38 := ntStatus;
    return;

  anon9_Then:
    assume {:partition} Objects == 0;
    ntStatus := -1073741670;
    goto L47;
}



procedure {:origName "AvcPackSubunitInfo"} AvcPackSubunitInfo(actual_BusExtension: int, actual_Length: int, actual_Buffer: int, actual_BytesUsed: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcPackSubunitInfo"} AvcPackSubunitInfo(actual_BusExtension: int, actual_Length: int, actual_Buffer: int, actual_BytesUsed: int)
{
  var {:pointer} PdoData: int;
  var {:dopa} {:scalar} LocalBytesUsed: int;
  var {:scalar} Tmp_43: int;
  var {:scalar} Tmp_44: int;
  var {:scalar} Offset_1: int;
  var {:pointer} InnerPdoData: int;
  var {:scalar} Tmp_45: int;
  var {:dopa} {:scalar} SubunitId: int;
  var {:scalar} sdv_35: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_49: int;
  var {:scalar} Tmp_50: int;
  var {:pointer} SubunitType: int;
  var {:pointer} Tmp_51: int;
  var {:scalar} Tmp_52: int;
  var {:pointer} Tmp_53: int;
  var {:pointer} BusExtension: int;
  var {:scalar} Length: int;
  var {:pointer} Buffer: int;
  var {:pointer} BytesUsed: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 99} LocalBytesUsed := __HAVOC_malloc(4);
    call {:si_unique_call 100} SubunitId := __HAVOC_malloc(4);
    call {:si_unique_call 101} vslice_dummy_var_13 := __HAVOC_malloc(4);
    BusExtension := actual_BusExtension;
    Length := actual_Length;
    Buffer := actual_Buffer;
    BytesUsed := actual_BytesUsed;
    call {:si_unique_call 102} SubunitType := __HAVOC_malloc(128);
    Offset_1 := 0;
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    havoc PdoData;
    goto L7;

  L7:
    call {:si_unique_call 103} PdoData, Tmp_43, Tmp_44, Offset_1, InnerPdoData, Tmp_45, sdv_35, ntStatus_1, Tmp_47, Tmp_49, Tmp_50, Tmp_51, Tmp_52, Tmp_53 := AvcPackSubunitInfo_loop_L7(PdoData, LocalBytesUsed, Tmp_43, Tmp_44, Offset_1, InnerPdoData, Tmp_45, SubunitId, sdv_35, ntStatus_1, Tmp_47, Tmp_49, Tmp_50, SubunitType, Tmp_51, Tmp_52, Tmp_53, Length, Buffer);
    goto L7_last;

  L7_last:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc vslice_dummy_var_14;
    call {:si_unique_call 104} ntStatus_1 := AvcUnpackSubunitAddress(vslice_dummy_var_14, SubunitType, SubunitId, LocalBytesUsed);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_1 == 0;
    assume {:nonnull} SubunitId != 0;
    assume SubunitId > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[SubunitId] == 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc InnerPdoData;
    goto L25;

  L25:
    call {:si_unique_call 105} InnerPdoData, sdv_35 := AvcPackSubunitInfo_loop_L25(PdoData, InnerPdoData, SubunitId, sdv_35);
    goto L25_last;

  L25_last:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} InnerPdoData != 0;
    assume InnerPdoData > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} InnerPdoData != 0;
    assume InnerPdoData > 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc vslice_dummy_var_15;
    havoc vslice_dummy_var_16;
    call {:si_unique_call 106} sdv_35 := AvcSubunitPackedTypesEqual(vslice_dummy_var_15, vslice_dummy_var_16);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_35 != 0;
    assume {:nonnull} SubunitId != 0;
    assume SubunitId > 0;
    Mem_T.INT4[SubunitId] := Mem_T.INT4[SubunitId] + 1;
    goto L28;

  L28:
    assume {:nonnull} InnerPdoData != 0;
    assume InnerPdoData > 0;
    havoc InnerPdoData;
    goto L28_dummy;

  L28_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} sdv_35 == 0;
    goto L28;

  anon37_Then:
    goto L28;

  anon36_Then:
    Tmp_44 := Offset_1;
    Tmp_53 := Buffer + Tmp_44 * 4;
    Tmp_52 := Length - Offset_1;
    assume {:nonnull} SubunitId != 0;
    assume SubunitId > 0;
    call {:si_unique_call 107} ntStatus_1 := AvcPackSubunitAddress(SubunitType, Mem_T.INT4[SubunitId], Tmp_52, Tmp_53, LocalBytesUsed);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} ntStatus_1 == 0;
    assume {:nonnull} LocalBytesUsed != 0;
    assume LocalBytesUsed > 0;
    Offset_1 := Offset_1 + Mem_T.INT4[LocalBytesUsed];
    goto L10;

  L10:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc PdoData;
    goto L10_dummy;

  L10_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} ntStatus_1 != 0;
    goto L10;

  anon35_Then:
    assume {:partition} Mem_T.INT4[SubunitId] != 0;
    goto L10;

  anon34_Then:
    assume {:partition} ntStatus_1 != 0;
    goto L10;

  anon32_Then:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L42;

  L42:
    assume {:nonnull} SubunitType != 0;
    assume SubunitType > 0;
    Mem_T.INT4[SubunitType] := 4;
    Tmp_50 := Offset_1;
    Tmp_47 := Buffer + Tmp_50 * 4;
    Tmp_49 := Length - Offset_1;
    call {:si_unique_call 108} ntStatus_1 := AvcPackSubunitAddress(SubunitType, 0, Tmp_49, Tmp_47, LocalBytesUsed);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ntStatus_1 != 0;
    goto L51;

  L51:
    assume {:nonnull} SubunitType != 0;
    assume SubunitType > 0;
    Mem_T.INT4[SubunitType] := 7;
    Tmp_43 := Offset_1;
    Tmp_51 := Buffer + Tmp_43 * 4;
    Tmp_45 := Length - Offset_1;
    call {:si_unique_call 109} ntStatus_1 := AvcPackSubunitAddress(SubunitType, 0, Tmp_45, Tmp_51, LocalBytesUsed);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} ntStatus_1 == 0;
    assume {:nonnull} LocalBytesUsed != 0;
    assume LocalBytesUsed > 0;
    Offset_1 := Offset_1 + Mem_T.INT4[LocalBytesUsed];
    goto L10;

  anon42_Then:
    assume {:partition} ntStatus_1 != 0;
    goto L10;

  anon41_Then:
    assume {:partition} ntStatus_1 == 0;
    assume {:nonnull} LocalBytesUsed != 0;
    assume LocalBytesUsed > 0;
    Offset_1 := Offset_1 + Mem_T.INT4[LocalBytesUsed];
    goto L51;

  anon33_Then:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L42;

  anon40_Then:
    goto L10;

  anon31_Then:
    goto L10;

  anon29_Then:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} BytesUsed != 0;
    assume {:nonnull} BytesUsed != 0;
    assume BytesUsed > 0;
    Mem_T.INT4[BytesUsed] := Offset_1;
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} BytesUsed == 0;
    goto L1;
}



procedure {:origName "AvcUnpackFCPFrame"} AvcUnpackFCPFrame(actual_Command_5: int, actual_Opcode: int, actual_OperandByteCount: int, actual_Operands: int) returns (Tmp_54: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_54 == -1073741811 || Tmp_54 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcUnpackFCPFrame"} AvcUnpackFCPFrame(actual_Command_5: int, actual_Opcode: int, actual_OperandByteCount: int, actual_Operands: int) returns (Tmp_54: int)
{
  var {:pointer} Tmp_57: int;
  var {:scalar} Tmp_58: int;
  var {:pointer} Tmp_59: int;
  var {:scalar} Tmp_60: int;
  var {:pointer} Command_5: int;
  var {:pointer} Opcode: int;
  var {:scalar} OperandByteCount: int;
  var {:pointer} Operands: int;

  anon0:
    Command_5 := actual_Command_5;
    Opcode := actual_Opcode;
    OperandByteCount := actual_OperandByteCount;
    Operands := actual_Operands;
    call {:si_unique_call 110} Tmp_57 := __HAVOC_malloc(2048);
    call {:si_unique_call 111} Tmp_59 := __HAVOC_malloc(2048);
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L8;

  L8:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Opcode != 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc Tmp_60;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc Tmp_59;
    assume {:nonnull} Opcode != 0;
    assume Opcode > 0;
    assume {:nonnull} Tmp_59 != 0;
    assume Tmp_59 > 0;
    Mem_T.INT4[Opcode] := Mem_T.INT4[Tmp_59 + Tmp_60 * 4];
    goto L9;

  L9:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Operands != 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc OperandByteCount;
    goto L13;

  L13:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc Tmp_58;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc Tmp_57;
    call {:si_unique_call 112} sdv_RtlCopyMemory(0, 0, OperandByteCount);
    goto L11;

  L11:
    Tmp_54 := 0;
    goto L1;

  L1:
    return;

  anon40_Then:
    goto L13;

  anon39_Then:
    assume {:partition} Operands == 0;
    goto L11;

  anon38_Then:
    assume {:partition} Opcode == 0;
    goto L9;

  anon42_Then:
    Tmp_54 := -1073741811;
    goto L1;

  anon43_Then:
    goto L8;

  anon44_Then:
    goto L8;

  anon45_Then:
    goto L8;

  anon37_Then:
    goto L8;

  anon35_Then:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    Tmp_54 := -1073741811;
    goto L1;

  anon46_Then:
    goto L8;

  anon47_Then:
    goto L8;

  anon48_Then:
    goto L8;

  anon49_Then:
    goto L8;

  anon50_Then:
    goto L8;

  anon51_Then:
    goto L8;

  anon41_Then:
    goto L8;

  anon36_Then:
    Tmp_54 := -1073741811;
    goto L1;
}



procedure {:origName "AvcFindPeerDeviceObject"} AvcFindPeerDeviceObject(actual_DeviceObject_3: int, actual_Irp_5: int) returns (Tmp_61: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_61 == 0 || Tmp_61 == -1073741823 || Tmp_61 == -1072562032;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcFindPeerDeviceObject"} AvcFindPeerDeviceObject(actual_DeviceObject_3: int, actual_Irp_5: int) returns (Tmp_61: int)
{
  var {:pointer} sdv_39: int;
  var {:pointer} DevExt_6: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} sdv_40: int;
  var {:pointer} AvcIrb_1: int;
  var {:scalar} ntStatus_2: int;
  var {:pointer} Entry_1: int;
  var {:pointer} BusExtension_1: int;
  var {:pointer} Tmp_62: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_14: int;

  anon0:
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_5 := actual_Irp_5;
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc BusExtension_1;
    call {:si_unique_call 113} sdv_39 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_39 != 0;
    assume sdv_39 > 0;
    havoc AvcIrb_1;
    ntStatus_2 := -1073741823;
    assume {:nonnull} AvcIrb_1 != 0;
    assume AvcIrb_1 > 0;
    assume {:nonnull} AvcIrb_1 != 0;
    assume AvcIrb_1 > 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 114} Tmp_62 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_62 != 0;
    assume Tmp_62 > 0;
    Mem_T.INT4[Tmp_62] := OldIrql_3;
    call {:si_unique_call 115} sdv_KeAcquireSpinLock(0, Tmp_62);
    assume {:nonnull} Tmp_62 != 0;
    assume Tmp_62 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_62];
    havoc Entry_1;
    goto L21;

  L21:
    call {:si_unique_call 116} DevExt_6, sdv_40, ntStatus_2, Entry_1, vslice_dummy_var_14 := AvcFindPeerDeviceObject_loop_L21(DevExt_6, sdv_40, AvcIrb_1, ntStatus_2, Entry_1, vslice_dummy_var_14);
    goto L21_last;

  L21_last:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} ntStatus_2 != 0;
    call {:si_unique_call 117} sdv_40 := sdv_containing_record(Entry_1, 72);
    DevExt_6 := sdv_40;
    assume {:nonnull} AvcIrb_1 != 0;
    assume AvcIrb_1 > 0;
    assume {:nonnull} DevExt_6 != 0;
    assume DevExt_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} AvcIrb_1 != 0;
    assume AvcIrb_1 > 0;
    assume {:nonnull} DevExt_6 != 0;
    assume DevExt_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 118} vslice_dummy_var_14 := sdv_ObReferenceObject(0);
    assume {:nonnull} AvcIrb_1 != 0;
    assume AvcIrb_1 > 0;
    assume {:nonnull} DevExt_6 != 0;
    assume DevExt_6 > 0;
    ntStatus_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    havoc Entry_1;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon13_Then:
    goto L32;

  anon15_Then:
    goto L32;

  anon12_Then:
    assume {:partition} ntStatus_2 == 0;
    goto L22;

  L22:
    call {:si_unique_call 119} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L39;

  L39:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 120} sdv_IoCompleteRequest(0, 0);
    Tmp_61 := ntStatus_2;
    return;

  anon11_Then:
    goto L22;

  anon14_Then:
    ntStatus_2 := -1072562032;
    goto L39;
}



procedure {:origName "AvcStopSelectedFCPProcessing"} AvcStopSelectedFCPProcessing(actual_DevExt_7: int, actual_FileObject_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcStopSelectedFCPProcessing"} AvcStopSelectedFCPProcessing(actual_DevExt_7: int, actual_FileObject_1: int)
{
  var {:pointer} Tmp_63: int;
  var {:pointer} Irp_6: int;
  var {:scalar} sdv_42: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} sdv_44: int;
  var {:pointer} IrpEntry_1: int;
  var {:scalar} PendingIrpList: int;
  var {:pointer} DevExt_7: int;
  var {:pointer} FileObject_1: int;
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 121} vslice_dummy_var_15 := __HAVOC_malloc(4);
    call {:si_unique_call 122} PendingIrpList := __HAVOC_malloc(8);
    DevExt_7 := actual_DevExt_7;
    FileObject_1 := actual_FileObject_1;
    call {:si_unique_call 123} InitializeListHead(PendingIrpList);
    call {:si_unique_call 124} Tmp_63 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    Mem_T.INT4[Tmp_63] := OldIrql_4;
    call {:si_unique_call 125} sdv_KeAcquireSpinLock(0, Tmp_63);
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    OldIrql_4 := Mem_T.INT4[Tmp_63];
    assume {:nonnull} DevExt_7 != 0;
    assume DevExt_7 > 0;
    call {:si_unique_call 126} AvcExtractMatchingIrps_sdv_static_function_2(FileObject_1, PendingResponseList__BUS_DEVICE_EXTENSION(DevExt_7), PendingIrpList);
    assume {:nonnull} DevExt_7 != 0;
    assume DevExt_7 > 0;
    call {:si_unique_call 127} AvcExtractMatchingIrps_sdv_static_function_2(FileObject_1, PendingRequestList__BUS_DEVICE_EXTENSION(DevExt_7), PendingIrpList);
    assume {:nonnull} DevExt_7 != 0;
    assume DevExt_7 > 0;
    call {:si_unique_call 128} AvcExtractMatchingIrps_sdv_static_function_2(FileObject_1, CleanupList__BUS_DEVICE_EXTENSION(DevExt_7), PendingIrpList);
    call {:si_unique_call 129} sdv_KeReleaseSpinLock(0, OldIrql_4);
    goto L23;

  L23:
    call {:si_unique_call 130} Irp_6, sdv_42, sdv_44, IrpEntry_1 := AvcStopSelectedFCPProcessing_loop_L23(Irp_6, sdv_42, sdv_44, IrpEntry_1, PendingIrpList);
    goto L23_last;

  L23_last:
    call {:si_unique_call 134} sdv_42 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_42 == 0;
    call {:si_unique_call 131} IrpEntry_1 := RemoveHeadList(PendingIrpList);
    call {:si_unique_call 132} sdv_44 := sdv_containing_record(IrpEntry_1, 88);
    Irp_6 := sdv_44;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    call {:si_unique_call 133} sdv_IoCompleteRequest(0, 0);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} sdv_42 != 0;
    return;
}



procedure {:origName "AvcSubunitAddrsEqual"} AvcSubunitAddrsEqual(actual_SubunitAddr1: int, actual_SubunitAddr2: int) returns (Tmp_65: int);
  free ensures {:va_keep} Tmp_65 == 1 || Tmp_65 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcSubunitAddrsEqual"} AvcSubunitAddrsEqual(actual_SubunitAddr1: int, actual_SubunitAddr2: int) returns (Tmp_65: int)
{
  var {:scalar} Tmp_66: int;
  var {:scalar} Tmp_67: int;
  var {:scalar} Tmp_69: int;
  var {:scalar} Tmp_70: int;
  var {:scalar} Tmp_71: int;
  var {:scalar} Tmp_72: int;
  var {:scalar} Tmp_73: int;
  var {:scalar} idx_1: int;
  var {:scalar} Tmp_74: int;
  var {:scalar} Tmp_75: int;
  var {:pointer} SubunitAddr1: int;
  var {:pointer} SubunitAddr2: int;

  anon0:
    SubunitAddr1 := actual_SubunitAddr1;
    SubunitAddr2 := actual_SubunitAddr2;
    idx_1 := 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SubunitAddr1 == SubunitAddr2;
    Tmp_65 := 1;
    goto L1;

  L1:
    return;

  anon29_Then:
    assume {:partition} SubunitAddr1 != SubunitAddr2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SubunitAddr1 != 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} SubunitAddr2 != 0;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr1] != Mem_T.INT4[SubunitAddr2];
    Tmp_65 := 0;
    goto L1;

  anon27_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr1] == Mem_T.INT4[SubunitAddr2];
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L14;

  L14:
    call {:si_unique_call 135} Tmp_72, idx_1, Tmp_75 := AvcSubunitAddrsEqual_loop_L14(Tmp_72, idx_1, Tmp_75, SubunitAddr1, SubunitAddr2);
    goto L14_last;

  L14_last:
    Tmp_72 := idx_1;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_72 * 4] == 255;
    Tmp_75 := idx_1;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr2 + Tmp_75 * 4] != 255;
    Tmp_65 := 0;
    goto L1;

  anon31_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr2 + Tmp_75 * 4] == 255;
    idx_1 := idx_1 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_72 * 4] != 255;
    Tmp_69 := idx_1;
    Tmp_67 := idx_1;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_69 * 4] != Mem_T.INT4[SubunitAddr2 + Tmp_67 * 4];
    Tmp_65 := 0;
    goto L1;

  anon32_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_69 * 4] == Mem_T.INT4[SubunitAddr2 + Tmp_67 * 4];
    idx_1 := idx_1 + 1;
    goto L13;

  L13:
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    Tmp_70 := BAND(Mem_T.INT4[SubunitAddr1], BOR(BOR(1, 2), 4));
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Tmp_70 == 5;
    goto L23;

  L23:
    call {:si_unique_call 136} Tmp_66, idx_1, Tmp_74 := AvcSubunitAddrsEqual_loop_L23(Tmp_66, idx_1, Tmp_74, SubunitAddr1, SubunitAddr2);
    goto L23_last;

  L23_last:
    Tmp_66 := idx_1;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_66 * 4] == 255;
    Tmp_74 := idx_1;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr2 + Tmp_74 * 4] != 255;
    Tmp_65 := 0;
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr2 + Tmp_74 * 4] == 255;
    idx_1 := idx_1 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_66 * 4] != 255;
    Tmp_73 := idx_1;
    Tmp_71 := idx_1;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_73 * 4] != Mem_T.INT4[SubunitAddr2 + Tmp_71 * 4];
    Tmp_65 := 0;
    goto L1;

  anon36_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr1 + Tmp_73 * 4] == Mem_T.INT4[SubunitAddr2 + Tmp_71 * 4];
    goto L22;

  L22:
    Tmp_65 := 1;
    goto L1;

  anon33_Then:
    assume {:partition} Tmp_70 != 5;
    goto L22;

  anon28_Then:
    goto L13;

  anon26_Then:
    assume {:partition} SubunitAddr2 == 0;
    goto L8;

  L8:
    Tmp_65 := 0;
    goto L1;

  anon25_Then:
    assume {:partition} SubunitAddr1 == 0;
    goto L8;
}



procedure {:origName "AvcProcessCommand"} AvcProcessCommand(actual_DeviceObject_4: int, actual_Irp_7: int) returns (Tmp_76: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcProcessCommand"} AvcProcessCommand(actual_DeviceObject_4: int, actual_Irp_7: int) returns (Tmp_76: int)
{
  var {:pointer} SubunitAddr_1: int;
  var {:pointer} Tmp_77: int;
  var {:scalar} Status_4: int;
  var {:pointer} IrpStack_1: int;
  var {:pointer} DevExt_8: int;
  var {:pointer} sdv_51: int;
  var {:pointer} Command_6: int;
  var {:scalar} Tmp_79: int;
  var {:pointer} CmdIrb_1: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 137} Command_6 := __HAVOC_malloc(4);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_7 := actual_Irp_7;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc DevExt_8;
    call {:si_unique_call 138} IrpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    havoc CmdIrb_1;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L17;

  L17:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    havoc SubunitAddr_1;
    goto L20;

  L20:
    call {:si_unique_call 139} Status_4 := AvcAllocateSubunitCommandContext(DevExt_8, SubunitAddr_1, Command_6);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status_4 != 0;
    goto L29;

  L29:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Irp_7 != 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    call {:si_unique_call 140} sdv_IoCompleteRequest(0, 0);
    goto L37;

  L37:
    Tmp_76 := Status_4;
    goto LM2;

  LM2:
    return;

  anon43_Then:
    assume {:partition} Irp_7 == 0;
    Status_4 := 259;
    goto L37;

  anon42_Then:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    havoc vslice_dummy_var_17;
    havoc vslice_dummy_var_18;
    havoc vslice_dummy_var_19;
    call {:si_unique_call 141} Status_4 := AvcPackCommandFrame(vslice_dummy_var_17, Mem_T.INT4[Opcode__AVC_COMMAND_IRB(CmdIrb_1)], vslice_dummy_var_18, vslice_dummy_var_19);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status_4 != 0;
    goto L43;

  L43:
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    havoc vslice_dummy_var_20;
    call {:si_unique_call 142} AvcFreeCommandContext(vslice_dummy_var_20);
    goto L29;

  anon44_Then:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    havoc vslice_dummy_var_21;
    call {:si_unique_call 143} Status_4 := AvcEnqueueFCPIrp(vslice_dummy_var_21, Irp_7);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} 259 == Status_4;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 144} sdv_51 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    Tmp_79 := Mem_T.INT4[Tmp_77] + 1;
    call {:si_unique_call 145} sdv_RtlCopyMemory(0, 0, Tmp_79);
    goto L51;

  L51:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_4 >= 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    goto L67;

  L67:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    goto L69;

  L69:
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    havoc vslice_dummy_var_22;
    call {:si_unique_call 146} Status_4 := AvcCommand_sdv_static_function_2(DevExt_8, vslice_dummy_var_22);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    havoc vslice_dummy_var_23;
    havoc vslice_dummy_var_24;
    call {:si_unique_call 147} Status_4 := AvcUnpackFCPFrame(vslice_dummy_var_23, Opcode__AVC_COMMAND_IRB(CmdIrb_1), 509, vslice_dummy_var_24);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    goto L63;

  L63:
    assume {:nonnull} Command_6 != 0;
    assume Command_6 > 0;
    havoc vslice_dummy_var_25;
    call {:si_unique_call 148} Irp_7 := AvcDequeueFCPIrp(vslice_dummy_var_25);
    goto L43;

  anon51_Then:
    assume {:partition} Status_4 != 0;
    goto L63;

  anon50_Then:
    assume {:partition} Status_4 != 0;
    goto L63;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    goto L69;

  anon48_Then:
    goto L67;

  anon46_Then:
    assume {:partition} 0 > Status_4;
    goto L63;

  anon59_Then:
    Status_4 := -1073741670;
    goto L51;

  anon47_Then:
    goto L51;

  anon58_Then:
    goto L51;

  anon45_Then:
    assume {:partition} 259 != Status_4;
    goto L43;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:nonnull} DevExt_8 != 0;
    assume DevExt_8 > 0;
    SubunitAddr_1 := UnitAddr__BUS_DEVICE_EXTENSION(DevExt_8);
    goto L20;

  anon52_Then:
    Status_4 := -1073741811;
    goto L29;

  anon53_Then:
    goto L17;

  anon54_Then:
    goto L17;

  anon55_Then:
    goto L17;

  anon56_Then:
    goto L17;
}



procedure {:origName "AvcPrepareForRequestCallback"} AvcPrepareForRequestCallback(actual_DevExt_9: int, actual_Command_7: int) returns (Tmp_80: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_80 == 0 || Tmp_80 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcPrepareForRequestCallback"} AvcPrepareForRequestCallback(actual_DevExt_9: int, actual_Command_7: int) returns (Tmp_80: int)
{
  var {:pointer} Tmp_81: int;
  var {:pointer} Tmp_82: int;
  var {:scalar} Status_5: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} NextIrpStack_2: int;
  var {:pointer} Tmp_83: int;
  var {:scalar} NeedIrp_1: int;
  var {:pointer} DevExt_9: int;
  var {:pointer} Command_7: int;
  var boogieTmp: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;

  anon0:
    DevExt_9 := actual_DevExt_9;
    Command_7 := actual_Command_7;
    Status_5 := 0;
    NeedIrp_1 := 0;
    call {:si_unique_call 149} Tmp_82 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    Mem_T.INT4[Tmp_82] := OldIrql_5;
    call {:si_unique_call 150} sdv_KeAcquireSpinLock(0, Tmp_82);
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    OldIrql_5 := Mem_T.INT4[Tmp_82];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Command_7 != 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    call {:si_unique_call 151} vslice_dummy_var_16 := sdv_InsertTailList(PendingRequestList__BUS_DEVICE_EXTENSION(DevExt_9), Command_7);
    goto L12;

  L12:
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L19;

  L19:
    call {:si_unique_call 152} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} NeedIrp_1 != 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc vslice_dummy_var_26;
    call {:si_unique_call 153} NextIrpStack_2 := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_26);
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc Tmp_81;
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc vslice_dummy_var_27;
    call {:si_unique_call 154} sdv_IoSetCompletionRoutine(vslice_dummy_var_27, li2bplFunctionConstant253, DevExt_9, 1, 1, 1);
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc vslice_dummy_var_28;
    havoc vslice_dummy_var_29;
    call {:si_unique_call 155} vslice_dummy_var_17 := sdv_IoCallDriver(vslice_dummy_var_28, vslice_dummy_var_29);
    goto L23;

  L23:
    Tmp_80 := Status_5;
    return;

  anon14_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Command_7 != 0;
    call {:si_unique_call 156} Tmp_82 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    Mem_T.INT4[Tmp_82] := OldIrql_5;
    call {:si_unique_call 157} sdv_KeAcquireSpinLock(0, Tmp_82);
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    OldIrql_5 := Mem_T.INT4[Tmp_82];
    call {:si_unique_call 158} vslice_dummy_var_18 := sdv_RemoveEntryList(0);
    call {:si_unique_call 159} InitializeListHead(Command_7);
    call {:si_unique_call 160} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto L44;

  L44:
    Status_5 := -1073741670;
    goto L23;

  anon15_Then:
    assume {:partition} Command_7 == 0;
    goto L44;

  anon13_Then:
    assume {:partition} NeedIrp_1 == 0;
    goto L23;

  anon12_Then:
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc Tmp_83;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    havoc vslice_dummy_var_30;
    call {:si_unique_call 161} boogieTmp := IoAllocateIrp(vslice_dummy_var_30, 0);
    NeedIrp_1 := 1;
    goto L19;

  anon11_Then:
    assume {:partition} Command_7 == 0;
    goto L12;
}



procedure {:origName "AvcRequestCompletion_sdv_static_function_2"} AvcRequestCompletion_sdv_static_function_2(actual_DeviceObject_5: int, actual_Irp_8: int, actual_DevExtIn: int) returns (Tmp_84: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_84 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcRequestCompletion_sdv_static_function_2"} AvcRequestCompletion_sdv_static_function_2(actual_DeviceObject_5: int, actual_Irp_8: int, actual_DevExtIn: int) returns (Tmp_84: int)
{
  var {:pointer} PdoData_1: int;
  var {:pointer} SubunitAddr_2: int;
  var {:scalar} CommandType: int;
  var {:dopa} {:scalar} Offset_2: int;
  var {:pointer} TargetExt: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} FdoEntry: int;
  var {:scalar} Tmp_86: int;
  var {:pointer} Tmp_87: int;
  var {:scalar} sdv_57: int;
  var {:pointer} Tmp_88: int;
  var {:scalar} Status_6: int;
  var {:pointer} Entry_2: int;
  var {:pointer} DevExt_10: int;
  var {:scalar} sdv_58: int;
  var {:pointer} Tmp_89: int;
  var {:scalar} HandlerFound: int;
  var {:scalar} OldIrql_6: int;
  var {:pointer} TargetExt_1: int;
  var {:pointer} NextIrpStack_3: int;
  var {:scalar} GenerationCount: int;
  var {:pointer} sdv_64: int;
  var {:pointer} Command_8: int;
  var {:pointer} Entry_3: int;
  var {:scalar} sdv_66: int;
  var {:scalar} SubunitFound: int;
  var {:pointer} sdv_67: int;
  var {:scalar} Opcode_1: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_8: int;
  var {:pointer} DevExtIn: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 162} Offset_2 := __HAVOC_malloc(4);
    call {:si_unique_call 163} Command_8 := __HAVOC_malloc(4);
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_8 := actual_Irp_8;
    DevExtIn := actual_DevExtIn;
    call {:si_unique_call 164} Tmp_85 := __HAVOC_malloc(2048);
    call {:si_unique_call 165} Tmp_87 := __HAVOC_malloc(2048);
    call {:si_unique_call 166} Tmp_89 := __HAVOC_malloc(2048);
    DevExt_10 := DevExtIn;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    havoc GenerationCount;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L17;

  L17:
    call {:si_unique_call 167} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    Mem_T.INT4[Tmp_88] := OldIrql_6;
    call {:si_unique_call 168} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    OldIrql_6 := Mem_T.INT4[Tmp_88];
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    goto L21;

  L21:
    call {:si_unique_call 169} IoFreeIrp(0);
    call {:si_unique_call 170} sdv_KeReleaseSpinLock(0, OldIrql_6);
    call {:si_unique_call 171} AvcStopAllFCPProcessing(DevExt_10);
    goto L12;

  L12:
    Tmp_84 := -1073741802;
    return;

  anon48_Then:
    goto L21;

  anon47_Then:
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    call {:si_unique_call 172} sdv_57 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(DevExt_10));
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_57 >= 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    havoc Tmp_89;
    SubunitAddr_2 := Tmp_89 + 1 * 4;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    Mem_T.INT4[Offset_2] := 0;
    call {:si_unique_call 173} Status_6 := AvcValidateSubunitAddress(SubunitAddr_2, 32, Offset_2);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Status_6 == 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    havoc Tmp_87;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    CommandType := BAND(Mem_T.INT4[Tmp_87], BOR(BOR(BOR(1, 2), 4), 8));
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    Mem_T.INT4[Offset_2] := Mem_T.INT4[Offset_2] + 1;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    Tmp_86 := Mem_T.INT4[Offset_2];
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    havoc Tmp_85;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    Opcode_1 := Mem_T.INT4[Tmp_85 + Tmp_86 * 4];
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    Mem_T.INT4[Offset_2] := Mem_T.INT4[Offset_2] + 1;
    assume {:nonnull} SubunitAddr_2 != 0;
    assume SubunitAddr_2 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.INT4[SubunitAddr_2] == 255;
    call {:si_unique_call 174} HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_2(DevExt_10, Opcode_1, Command_8);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} HandlerFound == 0;
    call {:si_unique_call 175} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    Mem_T.INT4[Tmp_88] := OldIrql_6;
    call {:si_unique_call 176} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    OldIrql_6 := Mem_T.INT4[Tmp_88];
    havoc Entry_2;
    goto L183;

  L183:
    call {:si_unique_call 177} TargetExt, Entry_2, HandlerFound, sdv_67 := AvcRequestCompletion_sdv_static_function_2_loop_L183(TargetExt, Entry_2, DevExt_10, HandlerFound, Command_8, sdv_67, Opcode_1);
    goto L183_last;

  L183_last:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} HandlerFound == 0;
    call {:si_unique_call 178} sdv_67 := sdv_containing_record(Entry_2, 72);
    TargetExt := sdv_67;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} TargetExt != DevExt_10;
    call {:si_unique_call 179} HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_2(TargetExt, Opcode_1, Command_8);
    goto L194;

  L194:
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc Entry_2;
    goto L194_dummy;

  L194_dummy:
    assume false;
    return;

  anon69_Then:
    assume {:partition} TargetExt == DevExt_10;
    goto L194;

  anon65_Then:
    assume {:partition} HandlerFound != 0;
    goto L184;

  L184:
    call {:si_unique_call 180} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto L175;

  L175:
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    call {:si_unique_call 181} AvcHandleUnitCommand_sdv_static_function_2(DeviceObject_5, DevExt_10);
    goto L150;

  L150:
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    havoc vslice_dummy_var_31;
    call {:si_unique_call 182} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_31);
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    havoc vslice_dummy_var_32;
    call {:si_unique_call 183} AvcPendingIrpCompletion(vslice_dummy_var_32);
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    havoc vslice_dummy_var_33;
    call {:si_unique_call 184} AvcFreeCommandContext(vslice_dummy_var_33);
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    goto L46;

  L46:
    call {:si_unique_call 185} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    Mem_T.INT4[Tmp_88] := OldIrql_6;
    call {:si_unique_call 186} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    OldIrql_6 := Mem_T.INT4[Tmp_88];
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 187} IoFreeIrp(0);
    Irp_8 := 0;
    goto L57;

  L57:
    call {:si_unique_call 188} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Irp_8 != 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    call {:si_unique_call 189} NextIrpStack_3 := sdv_IoGetNextIrpStackLocation(Irp_8);
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    call {:si_unique_call 190} sdv_IoSetCompletionRoutine(Irp_8, li2bplFunctionConstant253, DevExt_10, 1, 1, 1);
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    havoc vslice_dummy_var_34;
    call {:si_unique_call 191} vslice_dummy_var_19 := sdv_IoCallDriver(vslice_dummy_var_34, Irp_8);
    goto L61;

  L61:
    assume {:nonnull} DevExt_10 != 0;
    assume DevExt_10 > 0;
    call {:si_unique_call 192} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(DevExt_10));
    goto L12;

  anon52_Then:
    assume {:partition} Irp_8 == 0;
    goto L61;

  anon51_Then:
    call {:si_unique_call 193} IoReuseIrp(Irp_8, -1073741637);
    goto L57;

  anon61_Then:
    goto L46;

  anon63_Then:
    goto L150;

  anon64_Then:
    goto L184;

  anon62_Then:
    assume {:partition} HandlerFound != 0;
    goto L175;

  anon67_Then:
    assume {:partition} Mem_T.INT4[SubunitAddr_2] != 255;
    SubunitFound := 0;
    call {:si_unique_call 194} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    Mem_T.INT4[Tmp_88] := OldIrql_6;
    call {:si_unique_call 195} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    OldIrql_6 := Mem_T.INT4[Tmp_88];
    havoc FdoEntry;
    goto L97;

  L97:
    call {:si_unique_call 196} PdoData_1, FdoEntry, sdv_58, TargetExt_1, sdv_64, Entry_3, sdv_66, SubunitFound, vslice_dummy_var_20 := AvcRequestCompletion_sdv_static_function_2_loop_L97(PdoData_1, SubunitAddr_2, FdoEntry, sdv_58, TargetExt_1, sdv_64, Command_8, Entry_3, sdv_66, SubunitFound, vslice_dummy_var_20);
    goto L97_last;

  L97_last:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} SubunitFound == 0;
    call {:si_unique_call 197} sdv_64 := sdv_containing_record(FdoEntry, 72);
    TargetExt_1 := sdv_64;
    PdoData_1 := 0;
    call {:si_unique_call 198} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} TargetExt_1 != 0;
    assume TargetExt_1 > 0;
    havoc Entry_3;
    goto L114;

  L114:
    call {:si_unique_call 199} PdoData_1, sdv_58, Entry_3 := AvcRequestCompletion_sdv_static_function_2_loop_L114(PdoData_1, SubunitAddr_2, sdv_58, Entry_3);
    goto L114_last;

  L114_last:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    PdoData_1 := Entry_3;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc vslice_dummy_var_35;
    call {:si_unique_call 200} sdv_58 := AvcSubunitAddrsEqual(SubunitAddr_2, vslice_dummy_var_35);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_58 == 0;
    PdoData_1 := 0;
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    havoc Entry_3;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    assume false;
    return;

  anon57_Then:
    assume {:partition} sdv_58 != 0;
    goto L115;

  L115:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} PdoData_1 != 0;
    SubunitFound := 1;
    assume {:nonnull} TargetExt_1 != 0;
    assume TargetExt_1 > 0;
    havoc Entry_3;
    goto L129;

  L129:
    call {:si_unique_call 201} Entry_3, sdv_66 := AvcRequestCompletion_sdv_static_function_2_loop_L129(SubunitAddr_2, Command_8, Entry_3, sdv_66);
    goto L129_last;

  L129_last:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L135;

  L135:
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    havoc Entry_3;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    havoc vslice_dummy_var_36;
    call {:si_unique_call 202} sdv_66 := AvcSubunitAddrsEqual(SubunitAddr_2, vslice_dummy_var_36);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_66 != 0;
    call {:si_unique_call 203} vslice_dummy_var_20 := sdv_RemoveEntryList(0);
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    havoc vslice_dummy_var_37;
    call {:si_unique_call 204} InitializeListHead(vslice_dummy_var_37);
    goto L124;

  L124:
    call {:si_unique_call 205} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} FdoEntry != 0;
    assume FdoEntry > 0;
    havoc FdoEntry;
    goto L124_dummy;

  L124_dummy:
    assume false;
    return;

  anon59_Then:
    assume {:partition} sdv_66 == 0;
    goto L135;

  anon58_Then:
    goto L124;

  anon56_Then:
    assume {:partition} PdoData_1 == 0;
    goto L124;

  anon55_Then:
    goto L115;

  anon54_Then:
    assume {:partition} SubunitFound != 0;
    goto L98;

  L98:
    call {:si_unique_call 206} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} SubunitFound != 0;
    goto L150;

  anon60_Then:
    assume {:partition} SubunitFound == 0;
    call {:si_unique_call 207} AvcLocalResponse_sdv_static_function_2(DeviceObject_5, DevExt_10, 8);
    goto L150;

  anon53_Then:
    goto L98;

  anon50_Then:
    assume {:partition} Status_6 != 0;
    call {:si_unique_call 208} AvcLocalResponse_sdv_static_function_2(DeviceObject_5, DevExt_10, 8);
    goto L46;

  anon49_Then:
    assume {:partition} 0 > sdv_57;
    goto L17;

  anon66_Then:
    call {:si_unique_call 209} IoFreeIrp(0);
    goto L12;
}



procedure {:origName "AvcPendingIrpCompletion"} AvcPendingIrpCompletion(actual_Command_9: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcPendingIrpCompletion"} AvcPendingIrpCompletion(actual_Command_9: int)
{
  var {:pointer} Irp_9: int;
  var {:scalar} Status_7: int;
  var {:pointer} IrpStack_2: int;
  var {:pointer} CmdIrb_2: int;
  var {:pointer} Command_9: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 210} vslice_dummy_var_21 := __HAVOC_malloc(4);
    Command_9 := actual_Command_9;
    call {:si_unique_call 211} Irp_9 := AvcDequeueFCPIrp(Command_9);
    goto L8;

  L8:
    call {:si_unique_call 212} Irp_9, Status_7, IrpStack_2, CmdIrb_2 := AvcPendingIrpCompletion_loop_L8(Irp_9, Status_7, IrpStack_2, CmdIrb_2, Command_9);
    goto L8_last;

  L8_last:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irp_9 != 0;
    call {:si_unique_call 213} IrpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} IrpStack_2 != 0;
    assume IrpStack_2 > 0;
    havoc CmdIrb_2;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    havoc Status_7;
    goto L23;

  L23:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 214} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 215} Irp_9 := AvcDequeueFCPIrp(Command_9);
    goto L23_dummy;

  L23_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    havoc vslice_dummy_var_38;
    call {:si_unique_call 216} Status_7 := AvcUnpackFCPFrame(Command_9, Opcode__AVC_COMMAND_IRB(CmdIrb_2), 509, vslice_dummy_var_38);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_7 == 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    goto L35;

  L35:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    goto L23;

  anon14_Then:
    goto L35;

  anon13_Then:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    goto L35;

  anon12_Then:
    assume {:partition} Status_7 != 0;
    goto L23;

  anon11_Then:
    assume {:partition} Irp_9 == 0;
    return;
}



procedure {:origName "AvcFreeCommandContext"} AvcFreeCommandContext(actual_Command_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcFreeCommandContext"} AvcFreeCommandContext(actual_Command_10: int)
{
  var {:scalar} sdv_72: int;
  var {:pointer} sdv_73: int;
  var {:pointer} CallbackLink_1: int;
  var {:pointer} Command_10: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 217} vslice_dummy_var_22 := __HAVOC_malloc(4);
    Command_10 := actual_Command_10;
    goto L3;

  L3:
    call {:si_unique_call 218} sdv_72, sdv_73, CallbackLink_1 := AvcFreeCommandContext_loop_L3(sdv_72, sdv_73, CallbackLink_1, Command_10);
    goto L3_last;

  L3_last:
    call {:si_unique_call 223} sdv_72 := sdv_IsListEmpty(0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_72 == 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    call {:si_unique_call 219} sdv_73 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_10));
    CallbackLink_1 := sdv_73;
    call {:si_unique_call 220} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_1);
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    assume false;
    return;

  anon5_Then:
    assume {:partition} sdv_72 != 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_39;
    call {:si_unique_call 221} ExFreeToNPagedLookasideList(AvcAlternateOpcodePool, vslice_dummy_var_39);
    goto L9;

  L9:
    call {:si_unique_call 222} ExFreeToNPagedLookasideList(AvcCommandContextPool, Command_10);
    return;

  anon6_Then:
    goto L9;
}



procedure {:origName "AvcCommandCallback_sdv_static_function_2"} AvcCommandCallback_sdv_static_function_2(actual_CommandContext: int, actual_Event: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcCommandCallback_sdv_static_function_2"} AvcCommandCallback_sdv_static_function_2(actual_CommandContext: int, actual_Event: int)
{
  var {:pointer} Event: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;

  anon0:
    call {:si_unique_call 224} vslice_dummy_var_23 := __HAVOC_malloc(4);
    Event := actual_Event;
    call {:si_unique_call 225} vslice_dummy_var_24 := KeSetEvent(Event, 0, 0);
    return;
}



procedure {:origName "AvcPackSubunitAddress"} AvcPackSubunitAddress(actual_SubunitType_1: int, actual_SubunitID: int, actual_Length_1: int, actual_Buffer_1: int, actual_BytesUsed_1: int) returns (Tmp_96: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_96 == 0 || Tmp_96 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcPackSubunitAddress"} AvcPackSubunitAddress(actual_SubunitType_1: int, actual_SubunitID: int, actual_Length_1: int, actual_Buffer_1: int, actual_BytesUsed_1: int) returns (Tmp_96: int)
{
  var {:scalar} Tmp_98: int;
  var {:scalar} Tmp_99: int;
  var {:scalar} Status_8: int;
  var {:scalar} Tmp_100: int;
  var {:scalar} Tmp_101: int;
  var {:scalar} Tmp_102: int;
  var {:scalar} idx_2: int;
  var {:scalar} Tmp_103: int;
  var {:scalar} Tmp_104: int;
  var {:pointer} SubunitType_1: int;
  var {:scalar} SubunitID: int;
  var {:scalar} Length_1: int;
  var {:pointer} Buffer_1: int;
  var {:pointer} BytesUsed_1: int;
  var boogieTmp: int;

  anon0:
    SubunitType_1 := actual_SubunitType_1;
    SubunitID := actual_SubunitID;
    Length_1 := actual_Length_1;
    Buffer_1 := actual_Buffer_1;
    BytesUsed_1 := actual_BytesUsed_1;
    Status_8 := 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} SubunitType_1 != 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Mem_T.INT4[SubunitType_1], 224) == 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} 31 == Mem_T.INT4[SubunitType_1];
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Length_1 >= 1;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    Mem_T.INT4[Buffer_1] := 255;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BytesUsed_1 != 0;
    assume {:nonnull} BytesUsed_1 != 0;
    assume BytesUsed_1 > 0;
    Mem_T.INT4[BytesUsed_1] := 1;
    goto L15;

  L15:
    Tmp_96 := 0;
    goto L1;

  L1:
    return;

  anon59_Then:
    assume {:partition} BytesUsed_1 == 0;
    goto L15;

  anon44_Then:
    assume {:partition} 1 > Length_1;
    Tmp_96 := -1073741811;
    goto L1;

  anon42_Then:
    assume {:partition} 31 != Mem_T.INT4[SubunitType_1];
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} 29 == Mem_T.INT4[SubunitType_1];
    Tmp_96 := -1073741811;
    goto L1;

  anon43_Then:
    assume {:partition} 29 != Mem_T.INT4[SubunitType_1];
    idx_2 := 0;
    goto L19;

  L19:
    call {:si_unique_call 226} Tmp_100, Tmp_101, idx_2, Tmp_104, boogieTmp := AvcPackSubunitAddress_loop_L19(Tmp_100, Tmp_101, idx_2, Tmp_104, SubunitType_1, Length_1, Buffer_1, boogieTmp);
    goto L19_last;

  L19_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Length_1 > idx_2;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} idx_2 != 0;
    Tmp_101 := idx_2;
    Tmp_104 := idx_2;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    Mem_T.INT4[Buffer_1 + Tmp_101 * 4] := Mem_T.INT4[SubunitType_1 + Tmp_104 * 4];
    goto L24;

  L24:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} idx_2 != 0;
    goto L26;

  L26:
    Tmp_100 := idx_2;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.INT4[SubunitType_1 + Tmp_100 * 4] == 255;
    goto L27;

  L27:
    idx_2 := idx_2 + 1;
    goto L27_dummy;

  L27_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} Mem_T.INT4[SubunitType_1 + Tmp_100 * 4] != 255;
    goto L20;

  L20:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Length_1 > idx_2;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} 5 > SubunitID;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    Mem_T.INT4[Buffer_1] := BOR(Mem_T.INT4[Buffer_1], SubunitID);
    goto L33;

  L33:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} SubunitID > 4;
    Tmp_98 := SubunitID - 4;
    goto L36;

  L36:
    SubunitID := Tmp_98;
    idx_2 := idx_2 + 1;
    goto L38;

  L38:
    call {:si_unique_call 227} Tmp_99, Tmp_102, idx_2, Tmp_103, SubunitID := AvcPackSubunitAddress_loop_L38(Tmp_99, Tmp_102, idx_2, Tmp_103, SubunitID, Length_1, Buffer_1);
    goto L38_last;

  L38_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Length_1 > idx_2;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} SubunitID != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} 255 > SubunitID;
    Tmp_102 := idx_2;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    Mem_T.INT4[Buffer_1 + Tmp_102 * 4] := SubunitID;
    goto L44;

  L44:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} SubunitID > 254;
    Tmp_103 := SubunitID - 254;
    goto L47;

  L47:
    SubunitID := Tmp_103;
    idx_2 := idx_2 + 1;
    goto L47_dummy;

  L47_dummy:
    assume false;
    return;

  anon56_Then:
    assume {:partition} 254 >= SubunitID;
    Tmp_103 := 0;
    goto L47;

  anon55_Then:
    assume {:partition} SubunitID >= 255;
    Tmp_99 := idx_2;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    Mem_T.INT4[Buffer_1 + Tmp_99 * 4] := 255;
    goto L44;

  anon54_Then:
    assume {:partition} SubunitID == 0;
    goto L39;

  L39:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} SubunitID != 0;
    Status_8 := -1073741811;
    goto L51;

  L51:
    Tmp_96 := Status_8;
    goto L1;

  anon53_Then:
    assume {:partition} SubunitID == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BytesUsed_1 != 0;
    assume {:nonnull} BytesUsed_1 != 0;
    assume BytesUsed_1 > 0;
    Mem_T.INT4[BytesUsed_1] := idx_2;
    goto L51;

  anon57_Then:
    assume {:partition} BytesUsed_1 == 0;
    goto L51;

  anon52_Then:
    assume {:partition} idx_2 >= Length_1;
    goto L39;

  anon51_Then:
    assume {:partition} 4 >= SubunitID;
    Tmp_98 := 0;
    goto L36;

  anon50_Then:
    assume {:partition} SubunitID >= 5;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    Mem_T.INT4[Buffer_1] := BOR(Mem_T.INT4[Buffer_1], BOR(1, 4));
    goto L33;

  anon46_Then:
    assume {:partition} idx_2 >= Length_1;
    Status_8 := -1073741811;
    goto L51;

  anon48_Then:
    assume {:partition} idx_2 == 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.INT4[SubunitType_1] == 30;
    goto L27;

  anon49_Then:
    assume {:partition} Mem_T.INT4[SubunitType_1] != 30;
    goto L26;

  anon47_Then:
    assume {:partition} idx_2 == 0;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    call {:si_unique_call 228} boogieTmp := corral_nondet();
    Mem_T.INT4[Buffer_1] := boogieTmp;
    goto L24;

  anon45_Then:
    assume {:partition} idx_2 >= Length_1;
    goto L20;

  anon41_Then:
    assume {:partition} BAND(Mem_T.INT4[SubunitType_1], 224) != 0;
    goto L7;

  L7:
    Tmp_96 := -1073741811;
    goto L1;

  anon58_Then:
    assume {:partition} SubunitType_1 == 0;
    goto L7;
}



procedure {:origName "AvcAllocateSubunitCommandContext"} AvcAllocateSubunitCommandContext(actual_DevExt_11: int, actual_SubunitAddr_3: int, actual_CommandRetval: int) returns (Tmp_105: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_105 == -1073741811 || Tmp_105 == 0 || Tmp_105 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcAllocateSubunitCommandContext"} AvcAllocateSubunitCommandContext(actual_DevExt_11: int, actual_SubunitAddr_3: int, actual_CommandRetval: int) returns (Tmp_105: int)
{
  var {:dopa} {:scalar} SubunitAddrLen: int;
  var {:pointer} Tmp_106: int;
  var {:scalar} Status_9: int;
  var {:pointer} sdv_76: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} Command_11: int;
  var {:pointer} DevExt_11: int;
  var {:pointer} SubunitAddr_3: int;
  var {:pointer} CommandRetval: int;

  anon0:
    call {:si_unique_call 229} SubunitAddrLen := __HAVOC_malloc(4);
    DevExt_11 := actual_DevExt_11;
    SubunitAddr_3 := actual_SubunitAddr_3;
    CommandRetval := actual_CommandRetval;
    call {:si_unique_call 230} Tmp_106 := __HAVOC_malloc(2048);
    call {:si_unique_call 231} Tmp_109 := __HAVOC_malloc(2048);
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    Mem_T.INT4[SubunitAddrLen] := 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DevExt_11 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} SubunitAddr_3 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} CommandRetval != 0;
    call {:si_unique_call 232} Status_9 := AvcValidateSubunitAddress(SubunitAddr_3, 32, SubunitAddrLen);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status_9 != 0;
    Tmp_105 := -1073741811;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} Status_9 == 0;
    call {:si_unique_call 233} sdv_76 := sdv_ExAllocateFromNPagedLookasideList(0);
    Command_11 := sdv_76;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Command_11 != 0;
    call {:si_unique_call 234} sdv_RtlZeroMemory(0, 672);
    call {:si_unique_call 235} InitializeListHead(Command_11);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    call {:si_unique_call 236} InitializeListHead(PendingIrpList__AVC_COMMAND_CONTEXT(Command_11));
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    call {:si_unique_call 237} InitializeListHead(CallbackChain__AVC_COMMAND_CONTEXT(Command_11));
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    call {:si_unique_call 238} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[SubunitAddrLen]);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Tmp_109;
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    call {:si_unique_call 239} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[SubunitAddrLen]);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Tmp_106;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    Mem_T.INT4[Tmp_106] := 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} CommandRetval != 0;
    assume CommandRetval > 0;
    Tmp_105 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} Command_11 == 0;
    Tmp_105 := -1073741670;
    goto L1;

  anon13_Then:
    assume {:partition} CommandRetval == 0;
    goto L11;

  L11:
    Tmp_105 := -1073741811;
    goto L1;

  anon12_Then:
    assume {:partition} SubunitAddr_3 == 0;
    goto L11;

  anon11_Then:
    assume {:partition} DevExt_11 == 0;
    goto L11;
}



procedure {:origName "AvcValidateSubunitAddress"} AvcValidateSubunitAddress(actual_Buffer_2: int, actual_cbIn: int, actual_BytesUsed_2: int) returns (Tmp_110: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_110 == 0 || Tmp_110 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcValidateSubunitAddress"} AvcValidateSubunitAddress(actual_Buffer_2: int, actual_cbIn: int, actual_BytesUsed_2: int) returns (Tmp_110: int)
{
  var {:scalar} Tmp_111: int;
  var {:scalar} Tmp_112: int;
  var {:scalar} Tmp_113: int;
  var {:scalar} ntStatus_3: int;
  var {:scalar} Tmp_115: int;
  var {:scalar} idx_3: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} Buffer_2: int;
  var {:scalar} cbIn: int;
  var {:pointer} BytesUsed_2: int;

  anon0:
    Buffer_2 := actual_Buffer_2;
    cbIn := actual_cbIn;
    BytesUsed_2 := actual_BytesUsed_2;
    idx_3 := 1;
    ntStatus_3 := 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BytesUsed_2 != 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} cbIn != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L19;

  L19:
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(Mem_T.INT4[Buffer_2], 7) != 5;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Mem_T.INT4[Buffer_2], 7) != 6;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Mem_T.INT4[Buffer_2], 7) != 7;
    goto L26;

  L26:
    assume {:nonnull} BytesUsed_2 != 0;
    assume BytesUsed_2 > 0;
    Mem_T.INT4[BytesUsed_2] := idx_3;
    Tmp_110 := ntStatus_3;
    goto L1;

  L1:
    return;

  anon47_Then:
    assume {:partition} BAND(Mem_T.INT4[Buffer_2], 7) == 7;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L26;

  anon42_Then:
    ntStatus_3 := -1073741811;
    goto L26;

  anon48_Then:
    assume {:partition} BAND(Mem_T.INT4[Buffer_2], 7) == 6;
    ntStatus_3 := -1073741811;
    goto L26;

  anon40_Then:
    assume {:partition} BAND(Mem_T.INT4[Buffer_2], 7) == 5;
    goto L21;

  L21:
    call {:si_unique_call 240} Tmp_115, idx_3 := AvcValidateSubunitAddress_loop_L21(Tmp_115, idx_3, Buffer_2, cbIn);
    goto L21_last;

  L21_last:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} cbIn > idx_3;
    Tmp_115 := idx_3;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_115 * 4] == 255;
    idx_3 := idx_3 + 1;
    goto anon50_Else_dummy;

  anon50_Else_dummy:
    assume false;
    return;

  anon50_Then:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_115 * 4] != 255;
    goto L29;

  L29:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} cbIn > idx_3;
    Tmp_112 := idx_3;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_112 * 4] != 0;
    idx_3 := idx_3 + 1;
    goto L26;

  anon51_Then:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_112 * 4] == 0;
    goto L32;

  L32:
    ntStatus_3 := -1073741811;
    goto L26;

  anon43_Then:
    assume {:partition} idx_3 >= cbIn;
    goto L32;

  anon41_Then:
    assume {:partition} idx_3 >= cbIn;
    goto L29;

  anon45_Then:
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    Tmp_116 := BAND(Mem_T.INT4[Buffer_2], BOR(BOR(1, 2), 4));
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Tmp_116 == 7;
    goto L19;

  anon54_Then:
    assume {:partition} Tmp_116 != 7;
    ntStatus_3 := -1073741811;
    goto L19;

  anon46_Then:
    goto L14;

  L14:
    call {:si_unique_call 241} Tmp_111, idx_3 := AvcValidateSubunitAddress_loop_L14(Tmp_111, idx_3, Buffer_2, cbIn);
    goto L14_last;

  L14_last:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} cbIn > idx_3;
    Tmp_111 := idx_3;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_111 * 4] == 255;
    idx_3 := idx_3 + 1;
    goto anon52_Else_dummy;

  anon52_Else_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_111 * 4] != 255;
    goto L36;

  L36:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} cbIn > idx_3;
    Tmp_113 := idx_3;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_113 * 4] != 0;
    idx_3 := idx_3 + 1;
    goto L19;

  anon53_Then:
    assume {:partition} Mem_T.INT4[Buffer_2 + Tmp_113 * 4] == 0;
    goto L39;

  L39:
    ntStatus_3 := -1073741811;
    goto L19;

  anon44_Then:
    assume {:partition} idx_3 >= cbIn;
    goto L39;

  anon39_Then:
    assume {:partition} idx_3 >= cbIn;
    goto L36;

  anon38_Then:
    ntStatus_3 := -1073741811;
    goto L19;

  anon37_Then:
    assume {:partition} cbIn == 0;
    assume {:nonnull} BytesUsed_2 != 0;
    assume BytesUsed_2 > 0;
    Mem_T.INT4[BytesUsed_2] := 0;
    Tmp_110 := -1073741811;
    goto L1;

  anon49_Then:
    assume {:partition} BytesUsed_2 == 0;
    Tmp_110 := -1073741811;
    goto L1;
}



procedure {:origName "AvcAllocateUnitCommandContext"} AvcAllocateUnitCommandContext(actual_DevExt_12: int, actual_CommandRetval_1: int) returns (Tmp_117: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcAllocateUnitCommandContext"} AvcAllocateUnitCommandContext(actual_DevExt_12: int, actual_CommandRetval_1: int) returns (Tmp_117: int)
{
  var {:scalar} Status_10: int;
  var {:pointer} DevExt_12: int;
  var {:pointer} CommandRetval_1: int;

  anon0:
    DevExt_12 := actual_DevExt_12;
    CommandRetval_1 := actual_CommandRetval_1;
    call {:si_unique_call 242} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} DevExt_12 != 0;
    assume DevExt_12 > 0;
    call {:si_unique_call 243} Status_10 := AvcAllocateSubunitCommandContext(DevExt_12, UnitAddr__BUS_DEVICE_EXTENSION(DevExt_12), CommandRetval_1);
    Tmp_117 := Status_10;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcHandleUnitCommand_sdv_static_function_2"} AvcHandleUnitCommand_sdv_static_function_2(actual_DeviceObject_6: int, actual_DevExt_13: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcHandleUnitCommand_sdv_static_function_2"} AvcHandleUnitCommand_sdv_static_function_2(actual_DeviceObject_6: int, actual_DevExt_13: int)
{
  var {:scalar} CommandType_1: int;
  var {:scalar} Offset_3: int;
  var {:pointer} VirtualDevExt: int;
  var {:scalar} VendorID: int;
  var {:pointer} SubunitInfoBytes: int;
  var {:scalar} ResponseCode: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:scalar} Tmp_122: int;
  var {:pointer} sdv_79: int;
  var {:scalar} Tmp_124: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Page: int;
  var {:scalar} Tmp_125: int;
  var {:pointer} Entry_4: int;
  var {:pointer} Operands_1: int;
  var {:dopa} {:scalar} BytesUsed_3: int;
  var {:pointer} Tmp_126: int;
  var {:pointer} Tmp_127: int;
  var {:scalar} Opcode_2: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} DevExt_13: int;
  var boogieTmp: int;
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 244} vslice_dummy_var_25 := __HAVOC_malloc(4);
    call {:si_unique_call 245} BytesUsed_3 := __HAVOC_malloc(4);
    DeviceObject_6 := actual_DeviceObject_6;
    DevExt_13 := actual_DevExt_13;
    call {:si_unique_call 246} SubunitInfoBytes := __HAVOC_malloc(128);
    call {:si_unique_call 247} Tmp_119 := __HAVOC_malloc(2048);
    call {:si_unique_call 248} Tmp_120 := __HAVOC_malloc(2048);
    call {:si_unique_call 249} Tmp_127 := __HAVOC_malloc(2048);
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc Tmp_119;
    assume {:nonnull} Tmp_119 != 0;
    assume Tmp_119 > 0;
    CommandType_1 := BAND(Mem_T.INT4[Tmp_119], BOR(BOR(BOR(1, 2), 4), 8));
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    Opcode_2 := Mem_T.INT4[Tmp_127 + 2 * 4];
    ResponseCode := 8;
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc Tmp_120;
    Operands_1 := Tmp_120 + 3 * 4;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Opcode_2 != 48;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Opcode_2 == 49;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} 1 == CommandType_1;
    call {:si_unique_call 250} Page := corral_nondet();
    Offset_3 := 0;
    call {:si_unique_call 251} Tmp_121 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    Mem_T.INT4[Tmp_121] := oldIrql_1;
    call {:si_unique_call 252} sdv_KeAcquireSpinLock(0, Tmp_121);
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    oldIrql_1 := Mem_T.INT4[Tmp_121];
    havoc Entry_4;
    goto L32;

  L32:
    call {:si_unique_call 253} Offset_3, VirtualDevExt, Tmp_122, sdv_79, Tmp_125, Entry_4, Tmp_126 := AvcHandleUnitCommand_sdv_static_function_2_loop_L32(Offset_3, VirtualDevExt, SubunitInfoBytes, Tmp_122, sdv_79, Tmp_125, Entry_4, BytesUsed_3, Tmp_126);
    goto L32_last;

  L32_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 254} sdv_79 := sdv_containing_record(Entry_4, 72);
    VirtualDevExt := sdv_79;
    assume {:nonnull} BytesUsed_3 != 0;
    assume BytesUsed_3 > 0;
    Mem_T.INT4[BytesUsed_3] := 0;
    call {:si_unique_call 255} sdv_KeAcquireSpinLockAtDpcLevel(0);
    Tmp_125 := Offset_3;
    Tmp_126 := SubunitInfoBytes + Tmp_125 * 4;
    Tmp_122 := 32 - Offset_3;
    call {:si_unique_call 256} AvcPackSubunitInfo(VirtualDevExt, Tmp_122, Tmp_126, BytesUsed_3);
    assume {:nonnull} BytesUsed_3 != 0;
    assume BytesUsed_3 > 0;
    Offset_3 := Offset_3 + Mem_T.INT4[BytesUsed_3];
    call {:si_unique_call 257} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} Entry_4 != 0;
    assume Entry_4 > 0;
    havoc Entry_4;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    call {:si_unique_call 258} sdv_KeReleaseSpinLock(0, oldIrql_1);
    Tmp_124 := Page * 4;
    call {:si_unique_call 259} sdv_RtlCopyMemory(0, 0, 4);
    ResponseCode := 12;
    goto L12;

  L12:
    call {:si_unique_call 260} AvcLocalResponse_sdv_static_function_2(DeviceObject_6, DevExt_13, ResponseCode);
    return;

  anon14_Then:
    assume {:partition} 1 != CommandType_1;
    goto L12;

  anon17_Then:
    assume {:partition} Opcode_2 != 49;
    goto L12;

  anon18_Then:
    assume {:partition} Opcode_2 == 48;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 1 == CommandType_1;
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc VendorID;
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    Mem_T.INT4[Operands_1] := 7;
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    Mem_T.INT4[Operands_1 + 1 * 4] := 224;
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    call {:si_unique_call 261} boogieTmp := corral_nondet();
    Mem_T.INT4[Operands_1 + 2 * 4] := boogieTmp;
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    call {:si_unique_call 262} boogieTmp := corral_nondet();
    Mem_T.INT4[Operands_1 + 3 * 4] := boogieTmp;
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    Mem_T.INT4[Operands_1 + 4 * 4] := BAND(VendorID, BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    ResponseCode := 12;
    goto L12;

  anon16_Then:
    ResponseCode := 10;
    goto L12;

  anon13_Then:
    assume {:partition} 1 != CommandType_1;
    goto L12;
}



procedure {:origName "AvcLocalResponse_sdv_static_function_2"} AvcLocalResponse_sdv_static_function_2(actual_DeviceObject_7: int, actual_DevExt_14: int, actual_ResponseCode_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcLocalResponse_sdv_static_function_2"} AvcLocalResponse_sdv_static_function_2(actual_DeviceObject_7: int, actual_DevExt_14: int, actual_ResponseCode_1: int)
{
  var {:pointer} Irp_10: int;
  var {:scalar} Tmp_131: int;
  var {:pointer} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} sdv_81: int;
  var {:pointer} NextIrpStack_4: int;
  var {:pointer} Response_2: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} DevExt_14: int;
  var {:scalar} ResponseCode_1: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 263} vslice_dummy_var_26 := __HAVOC_malloc(4);
    DevExt_14 := actual_DevExt_14;
    ResponseCode_1 := actual_ResponseCode_1;
    call {:si_unique_call 264} Tmp_132 := __HAVOC_malloc(2048);
    call {:si_unique_call 265} Tmp_133 := __HAVOC_malloc(2048);
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc vslice_dummy_var_40;
    call {:si_unique_call 266} Irp_10 := IoAllocateIrp(vslice_dummy_var_40, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Irp_10 != 0;
    call {:si_unique_call 267} sdv_81 := sdv_ExAllocateFromNPagedLookasideList(0);
    Response_2 := sdv_81;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Response_2 != 0;
    call {:si_unique_call 268} sdv_RtlCopyMemory(0, 0, 512);
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    havoc Tmp_133;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    Tmp_131 := BAND(Mem_T.INT4[Tmp_133], BNOT(BOR(BOR(BOR(1, 2), 4), 8)));
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    Mem_T.INT4[Tmp_132] := BOR(Tmp_131, ResponseCode_1);
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 269} NextIrpStack_4 := sdv_IoGetNextIrpStackLocation(Irp_10);
    assume {:nonnull} NextIrpStack_4 != 0;
    assume NextIrpStack_4 > 0;
    assume {:nonnull} NextIrpStack_4 != 0;
    assume NextIrpStack_4 > 0;
    assume {:nonnull} NextIrpStack_4 != 0;
    assume NextIrpStack_4 > 0;
    call {:si_unique_call 270} sdv_IoSetCompletionRoutine(Irp_10, li2bplFunctionConstant249, Response_2, 1, 1, 1);
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    havoc vslice_dummy_var_41;
    call {:si_unique_call 271} vslice_dummy_var_27 := sdv_IoCallDriver(vslice_dummy_var_41, Irp_10);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} Response_2 == 0;
    call {:si_unique_call 272} IoFreeIrp(0);
    goto L1;

  anon5_Then:
    assume {:partition} Irp_10 == 0;
    goto L1;
}



procedure {:origName "AvcCommand_sdv_static_function_2"} AvcCommand_sdv_static_function_2(actual_DevExt_15: int, actual_Command_12: int) returns (Tmp_136: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcCommand_sdv_static_function_2"} AvcCommand_sdv_static_function_2(actual_DevExt_15: int, actual_Command_12: int) returns (Tmp_136: int)
{
  var {:scalar} CommandType_2: int;
  var {:scalar} Retries: int;
  var {:scalar} Tmp_137: int;
  var {:scalar} Tmp_138: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} Irp_11: int;
  var {:scalar} WaitForEvent: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} sdv_87: int;
  var {:scalar} Status_11: int;
  var {:scalar} Padding_1: int;
  var {:scalar} Tmp_142: int;
  var {:scalar} Event_1: int;
  var {:pointer} sdv_89: int;
  var {:scalar} sdv_90: int;
  var {:scalar} OldIrql_8: int;
  var {:scalar} sdv_92: int;
  var {:pointer} Tmp_143: int;
  var {:pointer} NextIrpStack_5: int;
  var {:pointer} Tmp_144: int;
  var {:scalar} sdv_97: int;
  var {:pointer} CallbackLink_2: int;
  var {:scalar} WaitForAbort: int;
  var {:scalar} InvalidGenLimit: int;
  var {:scalar} tmDelay: int;
  var {:pointer} DevExt_15: int;
  var {:pointer} Command_12: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 273} Event_1 := __HAVOC_malloc(124);
    call {:si_unique_call 274} tmDelay := __HAVOC_malloc(20);
    DevExt_15 := actual_DevExt_15;
    Command_12 := actual_Command_12;
    call {:si_unique_call 275} Tmp_140 := __HAVOC_malloc(2048);
    call {:si_unique_call 276} Tmp_143 := __HAVOC_malloc(2048);
    call {:si_unique_call 277} Tmp_144 := __HAVOC_malloc(2048);
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc CommandType_2;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    call {:si_unique_call 278} sdv_87 := sdv_ExAllocateFromNPagedLookasideList(0);
    CallbackLink_2 := sdv_87;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} CallbackLink_2 != 0;
    assume {:nonnull} CallbackLink_2 != 0;
    assume CallbackLink_2 > 0;
    call {:si_unique_call 279} KeInitializeEvent(Event_1, 1, 0);
    assume {:nonnull} CallbackLink_2 != 0;
    assume CallbackLink_2 > 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    call {:si_unique_call 280} InsertHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_12), CallbackLink_2);
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_144;
    assume {:nonnull} Tmp_144 != 0;
    assume Tmp_144 > 0;
    Mem_T.INT4[Tmp_144] := BOR(0, CommandType_2);
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_137;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_143;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    havoc vslice_dummy_var_42;
    Mem_T.INT4[Tmp_143 + Tmp_137 * 4] := vslice_dummy_var_42;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    Mem_T.INT4[Function__AVC_COMMAND_CONTEXT(Command_12)] := 12;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Padding_1;
    goto L32;

  L32:
    call {:si_unique_call 281} Tmp_138, Tmp_140, Padding_1, Tmp_142 := AvcCommand_sdv_static_function_2_loop_L32(Tmp_138, Tmp_140, Padding_1, Tmp_142, Command_12);
    goto L32_last;

  L32_last:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} INTMOD(Padding_1, 4) != 0;
    Tmp_138 := Padding_1;
    Padding_1 := Padding_1 + 1;
    Tmp_142 := Tmp_138;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_140;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    Mem_T.INT4[Tmp_140 + Tmp_142 * 4] := 0;
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    assume false;
    return;

  anon43_Then:
    assume {:partition} INTMOD(Padding_1, 4) == 0;
    assume {:nonnull} DevExt_15 != 0;
    assume DevExt_15 > 0;
    havoc Tmp_139;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    havoc vslice_dummy_var_43;
    call {:si_unique_call 282} Irp_11 := IoAllocateIrp(vslice_dummy_var_43, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Irp_11 != 0;
    InvalidGenLimit := 200;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Retries;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 283} vslice_dummy_var_33 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L50;

  L50:
    call {:si_unique_call 284} Retries, OldIrql_7, WaitForEvent, Tmp_141, Status_11, OldIrql_8, sdv_92, NextIrpStack_5, sdv_97, WaitForAbort, InvalidGenLimit, vslice_dummy_var_29, vslice_dummy_var_30, vslice_dummy_var_31, vslice_dummy_var_32, vslice_dummy_var_34 := AvcCommand_sdv_static_function_2_loop_L50(Retries, OldIrql_7, Irp_11, WaitForEvent, Tmp_141, Status_11, OldIrql_8, sdv_92, NextIrpStack_5, sdv_97, WaitForAbort, InvalidGenLimit, tmDelay, DevExt_15, Command_12, vslice_dummy_var_29, vslice_dummy_var_30, vslice_dummy_var_31, vslice_dummy_var_32, vslice_dummy_var_34);
    goto L50_last;

  L50_last:
    call {:si_unique_call 309} NextIrpStack_5 := sdv_IoGetNextIrpStackLocation(Irp_11);
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    call {:si_unique_call 310} Status_11 := AvcPrepareForResponseCallback(DevExt_15, Command_12);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Status_11 != 0;
    goto L66;

  L66:
    assume {:nonnull} DevExt_15 != 0;
    assume DevExt_15 > 0;
    havoc vslice_dummy_var_44;
    call {:si_unique_call 285} vslice_dummy_var_28 := KeSetTimer(0, vslice_dummy_var_44, 0);
    call {:si_unique_call 286} IoFreeIrp(0);
    goto L72;

  L72:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_11 != 0;
    goto L74;

  L74:
    call {:si_unique_call 287} sdv_89, sdv_90, CallbackLink_2 := AvcCommand_sdv_static_function_2_loop_L74(sdv_89, sdv_90, CallbackLink_2, Command_12);
    goto L74_last;

  L74_last:
    call {:si_unique_call 308} sdv_90 := sdv_IsListEmpty(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_90 == 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    call {:si_unique_call 288} sdv_89 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_12));
    CallbackLink_2 := sdv_89;
    call {:si_unique_call 289} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_2);
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:partition} sdv_90 != 0;
    goto L73;

  L73:
    Tmp_136 := Status_11;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon46_Then:
    assume {:partition} Status_11 == 0;
    goto L73;

  anon45_Then:
    assume {:partition} Status_11 == 0;
    assume {:nonnull} DevExt_15 != 0;
    assume DevExt_15 > 0;
    havoc vslice_dummy_var_45;
    call {:si_unique_call 290} Status_11 := Avc_SubmitIrpSynch(vslice_dummy_var_45, Irp_11);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Status_11 != 0;
    WaitForAbort := 0;
    call {:si_unique_call 291} Tmp_141 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    Mem_T.INT4[Tmp_141] := OldIrql_8;
    call {:si_unique_call 292} sdv_KeAcquireSpinLock(0, Tmp_141);
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_141];
    call {:si_unique_call 293} sdv_92 := sdv_IsListEmpty(0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_92 != 0;
    WaitForAbort := 1;
    goto L104;

  L104:
    call {:si_unique_call 294} sdv_KeReleaseSpinLock(0, OldIrql_8);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} WaitForAbort != 0;
    call {:si_unique_call 295} vslice_dummy_var_30 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Status_11;
    goto L108;

  L108:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 258 == Status_11;
    Status_11 := -1073741248;
    goto L113;

  L113:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Status_11 != 0;
    assume {:nonnull} DevExt_15 != 0;
    assume DevExt_15 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} -1072562032 == Status_11;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} InvalidGenLimit != 0;
    assume {:nonnull} tmDelay != 0;
    assume tmDelay > 0;
    assume {:nonnull} tmDelay != 0;
    assume tmDelay > 0;
    call {:si_unique_call 296} vslice_dummy_var_34 := KeDelayExecutionThread(0, 0, 0);
    InvalidGenLimit := InvalidGenLimit - 1;
    goto anon56_Else_dummy;

  anon56_Else_dummy:
    assume false;
    return;

  anon56_Then:
    assume {:partition} InvalidGenLimit == 0;
    goto L66;

  anon54_Then:
    assume {:partition} -1072562032 != Status_11;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} 258 == Status_11;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Retries != 0;
    Retries := Retries - 1;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    assume false;
    return;

  anon57_Then:
    assume {:partition} Retries == 0;
    goto L66;

  anon55_Then:
    assume {:partition} 258 != Status_11;
    goto L66;

  anon53_Then:
    goto L66;

  anon52_Then:
    assume {:partition} Status_11 == 0;
    goto L66;

  anon51_Then:
    assume {:partition} 258 != Status_11;
    goto L113;

  anon50_Then:
    assume {:partition} WaitForAbort == 0;
    goto L108;

  anon49_Then:
    assume {:partition} sdv_92 == 0;
    call {:si_unique_call 297} vslice_dummy_var_29 := sdv_RemoveEntryList(0);
    call {:si_unique_call 298} InitializeListHead(Command_12);
    goto L104;

  anon48_Then:
    assume {:partition} Status_11 == 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    call {:si_unique_call 299} Status_11 := KeWaitForSingleObject(0, 0, 0, 0, Timeout__AVC_COMMAND_CONTEXT(Command_12));
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 258 == Status_11;
    WaitForEvent := 0;
    call {:si_unique_call 300} Tmp_141 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    Mem_T.INT4[Tmp_141] := OldIrql_7;
    call {:si_unique_call 301} sdv_KeAcquireSpinLock(0, Tmp_141);
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    OldIrql_7 := Mem_T.INT4[Tmp_141];
    call {:si_unique_call 302} sdv_97 := sdv_IsListEmpty(0);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_97 != 0;
    WaitForEvent := 1;
    goto L150;

  L150:
    call {:si_unique_call 303} sdv_KeReleaseSpinLock(0, OldIrql_7);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} WaitForEvent != 0;
    call {:si_unique_call 304} vslice_dummy_var_32 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Status_11;
    goto L154;

  L154:
    call {:si_unique_call 305} IoReuseIrp(Irp_11, -1073741637);
    goto L113;

  anon61_Then:
    assume {:partition} WaitForEvent == 0;
    goto L154;

  anon60_Then:
    assume {:partition} sdv_97 == 0;
    call {:si_unique_call 306} vslice_dummy_var_31 := sdv_RemoveEntryList(0);
    call {:si_unique_call 307} InitializeListHead(Command_12);
    goto L150;

  anon58_Then:
    assume {:partition} 258 != Status_11;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Status_11 == 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Status_11;
    goto L113;

  anon59_Then:
    assume {:partition} Status_11 != 0;
    goto L113;

  anon63_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    assume {:partition} Irp_11 == 0;
    Status_11 := -1073741670;
    goto L72;

  anon62_Then:
    assume {:partition} CallbackLink_2 == 0;
    Tmp_136 := -1073741670;
    goto L1;
}



procedure {:origName "AvcProcessSendResponseCR_sdv_static_function_2"} AvcProcessSendResponseCR_sdv_static_function_2(actual_DeviceObject_8: int, actual_Irp_12: int, actual_Context_1: int) returns (Tmp_145: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_145 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcProcessSendResponseCR_sdv_static_function_2"} AvcProcessSendResponseCR_sdv_static_function_2(actual_DeviceObject_8: int, actual_Irp_12: int, actual_Context_1: int) returns (Tmp_145: int)
{
  var {:pointer} Response_3: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Context_1: int;

  anon0:
    Irp_12 := actual_Irp_12;
    Context_1 := actual_Context_1;
    Response_3 := Context_1;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 311} sdv_IoMarkIrpPending(0);
    goto L6;

  L6:
    call {:si_unique_call 312} ExFreeToNPagedLookasideList(AvcFcpPool, Response_3);
    Tmp_145 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "AvcDequeueFCPIrp"} AvcDequeueFCPIrp(actual_Command_13: int) returns (Tmp_147: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcDequeueFCPIrp"} AvcDequeueFCPIrp(actual_Command_13: int) returns (Tmp_147: int)
{
  var {:scalar} sdv_101: int;
  var {:pointer} listEntry: int;
  var {:scalar} oldCancelRoutine_2: int;
  var {:scalar} oldIrql_2: int;
  var {:pointer} sdv_103: int;
  var {:pointer} nextIrp: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Command_13: int;

  anon0:
    Command_13 := actual_Command_13;
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    nextIrp := 0;
    call {:si_unique_call 313} Tmp_148 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    Mem_T.INT4[Tmp_148] := oldIrql_2;
    call {:si_unique_call 314} sdv_KeAcquireSpinLock(0, Tmp_148);
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    oldIrql_2 := Mem_T.INT4[Tmp_148];
    goto L11;

  L11:
    call {:si_unique_call 315} sdv_101, listEntry, oldCancelRoutine_2, sdv_103, nextIrp := AvcDequeueFCPIrp_loop_L11(sdv_101, listEntry, oldCancelRoutine_2, sdv_103, nextIrp, Command_13);
    goto L11_last;

  L11_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} nextIrp != 0;
    goto L15;

  L15:
    call {:si_unique_call 316} sdv_KeReleaseSpinLock(0, oldIrql_2);
    Tmp_147 := nextIrp;
    return;

  anon7_Then:
    assume {:partition} nextIrp == 0;
    call {:si_unique_call 317} sdv_101 := sdv_IsListEmpty(0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_101 == 0;
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    call {:si_unique_call 318} listEntry := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(Command_13));
    call {:si_unique_call 319} sdv_103 := sdv_containing_record(listEntry, 88);
    nextIrp := sdv_103;
    call {:si_unique_call 320} oldCancelRoutine_2 := sdv_IoSetCancelRoutine(nextIrp, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldCancelRoutine_2 == 0;
    assume {:nonnull} nextIrp != 0;
    assume nextIrp > 0;
    call {:si_unique_call 321} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(nextIrp))));
    nextIrp := 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} oldCancelRoutine_2 != 0;
    goto anon9_Then_dummy;

  anon9_Then_dummy:
    assume false;
    return;

  anon8_Then:
    assume {:partition} sdv_101 != 0;
    goto L15;
}



procedure {:origName "AvcResponseCompletion_sdv_static_function_2"} AvcResponseCompletion_sdv_static_function_2(actual_DeviceObject_9: int, actual_Irp_13: int, actual_DevExtIn_1: int) returns (Tmp_149: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_149 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcResponseCompletion_sdv_static_function_2"} AvcResponseCompletion_sdv_static_function_2(actual_DeviceObject_9: int, actual_Irp_13: int, actual_DevExtIn_1: int) returns (Tmp_149: int)
{
  var {:pointer} SubunitAddr_4: int;
  var {:pointer} Tmp_150: int;
  var {:scalar} Tmp_151: int;
  var {:dopa} {:scalar} Offset_4: int;
  var {:pointer} Tmp_152: int;
  var {:scalar} ResponseCode_2: int;
  var {:scalar} idx_4: int;
  var {:pointer} Tmp_153: int;
  var {:scalar} Status_12: int;
  var {:pointer} DevExt_17: int;
  var {:pointer} Tmp_154: int;
  var {:scalar} Tmp_155: int;
  var {:scalar} idx_5: int;
  var {:pointer} sdv_107: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} NextIrpStack_6: int;
  var {:scalar} sdv_111: int;
  var {:pointer} Tmp_157: int;
  var {:scalar} Tmp_158: int;
  var {:scalar} max: int;
  var {:pointer} Command_14: int;
  var {:pointer} Entry_5: int;
  var {:pointer} CallbackLink_3: int;
  var {:scalar} idx_6: int;
  var {:scalar} OpcodesMatch: int;
  var {:scalar} max_1: int;
  var {:pointer} Tmp_159: int;
  var {:scalar} sdv_112: int;
  var {:scalar} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:scalar} max_2: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} Tmp_163: int;
  var {:scalar} Opcode_3: int;
  var {:pointer} Irp_13: int;
  var {:pointer} DevExtIn_1: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 322} Offset_4 := __HAVOC_malloc(4);
    Irp_13 := actual_Irp_13;
    DevExtIn_1 := actual_DevExtIn_1;
    call {:si_unique_call 323} Tmp_157 := __HAVOC_malloc(2048);
    call {:si_unique_call 324} Tmp_161 := __HAVOC_malloc(2048);
    call {:si_unique_call 325} Tmp_162 := __HAVOC_malloc(2048);
    DevExt_17 := DevExtIn_1;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_157;
    SubunitAddr_4 := Tmp_157 + 1 * 4;
    assume {:nonnull} Offset_4 != 0;
    assume Offset_4 > 0;
    Mem_T.INT4[Offset_4] := 0;
    call {:si_unique_call 326} Status_12 := AvcValidateSubunitAddress(SubunitAddr_4, 32, Offset_4);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} Status_12 == 0;
    Command_14 := 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    ResponseCode_2 := BAND(Mem_T.INT4[Tmp_162], BOR(BOR(BOR(1, 2), 4), 8));
    assume {:nonnull} Offset_4 != 0;
    assume Offset_4 > 0;
    Mem_T.INT4[Offset_4] := Mem_T.INT4[Offset_4] + 1;
    assume {:nonnull} Offset_4 != 0;
    assume Offset_4 > 0;
    Tmp_160 := Mem_T.INT4[Offset_4];
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_161;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    Opcode_3 := Mem_T.INT4[Tmp_161 + Tmp_160 * 4];
    call {:si_unique_call 327} Tmp_163 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    Mem_T.INT4[Tmp_163] := OldIrql_9;
    call {:si_unique_call 328} sdv_KeAcquireSpinLock(0, Tmp_163);
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_163];
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Entry_5;
    goto L80;

  L80:
    call {:si_unique_call 329} Tmp_150, Tmp_151, Tmp_152, idx_4, Tmp_153, Tmp_154, Tmp_155, idx_5, Tmp_156, sdv_111, Tmp_158, max, Command_14, Entry_5, idx_6, OpcodesMatch, max_1, Tmp_159, max_2 := AvcResponseCompletion_sdv_static_function_2_loop_L80(SubunitAddr_4, Tmp_150, Tmp_151, Tmp_152, ResponseCode_2, idx_4, Tmp_153, Tmp_154, Tmp_155, idx_5, Tmp_156, sdv_111, Tmp_158, max, Command_14, Entry_5, idx_6, OpcodesMatch, max_1, Tmp_159, max_2, Opcode_3);
    goto L80_last;

  L80_last:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    Command_14 := Entry_5;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc vslice_dummy_var_46;
    call {:si_unique_call 330} sdv_111 := AvcSubunitAddrsEqual(SubunitAddr_4, vslice_dummy_var_46);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_111 != 0;
    OpcodesMatch := 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    goto L97;

  L97:
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} ResponseCode_2 != 8;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} ResponseCode_2 == 12;
    goto L147;

  L147:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    Command_14 := 0;
    goto L119;

  L119:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Command_14 != 0;
    call {:si_unique_call 331} vslice_dummy_var_36 := sdv_RemoveEntryList(0);
    call {:si_unique_call 332} InitializeListHead(Command_14);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} 15 == ResponseCode_2;
    call {:si_unique_call 333} vslice_dummy_var_37 := AvcDuplicateCommandContext_sdv_static_function_2(Command_14);
    goto L81;

  L81:
    call {:si_unique_call 334} sdv_KeReleaseSpinLock(0, OldIrql_9);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Command_14 != 0;
    call {:si_unique_call 335} sdv_RtlCopyMemory(0, 0, 512);
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    call {:si_unique_call 336} sdv_112 := sdv_IsListEmpty(0);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} sdv_112 == 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    call {:si_unique_call 337} sdv_107 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_14));
    CallbackLink_3 := sdv_107;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    havoc vslice_dummy_var_47;
    call {:si_unique_call 338} AvcCommandCallback_sdv_static_function_2(Command_14, vslice_dummy_var_47);
    goto L207;

  L207:
    call {:si_unique_call 339} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_3);
    goto L37;

  L37:
    call {:si_unique_call 340} Tmp_163 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    Mem_T.INT4[Tmp_163] := OldIrql_9;
    call {:si_unique_call 341} sdv_KeAcquireSpinLock(0, Tmp_163);
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_163];
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 342} IoFreeIrp(0);
    Irp_13 := 0;
    goto L48;

  L48:
    call {:si_unique_call 343} sdv_KeReleaseSpinLock(0, OldIrql_9);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} Irp_13 != 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    call {:si_unique_call 344} NextIrpStack_6 := sdv_IoGetNextIrpStackLocation(Irp_13);
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    call {:si_unique_call 345} sdv_IoSetCompletionRoutine(Irp_13, li2bplFunctionConstant248, DevExt_17, 1, 1, 1);
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc vslice_dummy_var_48;
    call {:si_unique_call 346} vslice_dummy_var_35 := sdv_IoCallDriver(vslice_dummy_var_48, Irp_13);
    goto L10;

  L10:
    Tmp_149 := -1073741802;
    return;

  anon115_Then:
    assume {:partition} Irp_13 == 0;
    goto L10;

  anon114_Then:
    call {:si_unique_call 347} IoReuseIrp(Irp_13, -1073741637);
    goto L48;

  anon162_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    havoc vslice_dummy_var_49;
    call {:si_unique_call 348} Avc_BusResetCallback_sdv_static_function_4(Command_14, vslice_dummy_var_49);
    goto L207;

  anon144_Then:
    assume {:partition} sdv_112 != 0;
    call {:si_unique_call 349} AvcPendingIrpCompletion(Command_14);
    call {:si_unique_call 350} AvcFreeCommandContext(Command_14);
    Command_14 := 0;
    goto L37;

  anon143_Then:
    assume {:partition} Command_14 == 0;
    goto L37;

  anon130_Then:
    assume {:partition} 15 != ResponseCode_2;
    goto L81;

  anon129_Then:
    assume {:partition} Command_14 == 0;
    goto L86;

  L86:
    assume {:nonnull} Entry_5 != 0;
    assume Entry_5 > 0;
    havoc Entry_5;
    Command_14 := 0;
    goto L86_dummy;

  L86_dummy:
    assume false;
    return;

  anon134_Then:
    goto L119;

  anon155_Then:
    assume {:partition} ResponseCode_2 != 12;
    Command_14 := 0;
    goto L119;

  anon120_Then:
    assume {:partition} ResponseCode_2 == 8;
    goto L147;

  anon145_Then:
    Command_14 := 0;
    goto L119;

  anon146_Then:
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} ResponseCode_2 != 8;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} ResponseCode_2 != 10;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} ResponseCode_2 != 13;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} ResponseCode_2 == 15;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_154;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    max := Mem_T.INT4[Tmp_154];
    idx_6 := 1;
    goto L110;

  L110:
    call {:si_unique_call 351} Tmp_152, Tmp_158, idx_6 := AvcResponseCompletion_sdv_static_function_2_loop_L110(Tmp_152, Tmp_158, max, Command_14, idx_6, Opcode_3);
    goto L110_last;

  L110_last:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} max >= idx_6;
    Tmp_158 := idx_6;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} Opcode_3 == Mem_T.INT4[Tmp_152 + Tmp_158 * 4];
    OpcodesMatch := 1;
    goto L111;

  L111:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} OpcodesMatch != 0;
    goto L119;

  anon128_Then:
    assume {:partition} OpcodesMatch == 0;
    Command_14 := 0;
    goto L119;

  anon165_Then:
    assume {:partition} Opcode_3 != Mem_T.INT4[Tmp_152 + Tmp_158 * 4];
    idx_6 := idx_6 + 1;
    goto anon165_Then_dummy;

  anon165_Then_dummy:
    assume false;
    return;

  anon127_Then:
    assume {:partition} idx_6 > max;
    goto L111;

  anon125_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    OpcodesMatch := 0;
    goto L352;

  L352:
    goto L111;

  anon126_Then:
    OpcodesMatch := 1;
    goto L352;

  anon124_Then:
    Command_14 := 0;
    goto L119;

  anon156_Then:
    assume {:partition} ResponseCode_2 != 15;
    Command_14 := 0;
    goto L119;

  anon157_Then:
    assume {:partition} ResponseCode_2 == 13;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    max_1 := Mem_T.INT4[Tmp_156];
    idx_5 := 1;
    goto L136;

  L136:
    call {:si_unique_call 352} Tmp_150, Tmp_155, idx_5 := AvcResponseCompletion_sdv_static_function_2_loop_L136(Tmp_150, Tmp_155, idx_5, Command_14, max_1, Opcode_3);
    goto L136_last;

  L136_last:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} max_1 >= idx_5;
    Tmp_155 := idx_5;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_150;
    assume {:nonnull} Tmp_150 != 0;
    assume Tmp_150 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} Opcode_3 == Mem_T.INT4[Tmp_150 + Tmp_155 * 4];
    OpcodesMatch := 1;
    goto L137;

  L137:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} OpcodesMatch == 0;
    Command_14 := 0;
    goto L119;

  anon133_Then:
    assume {:partition} OpcodesMatch != 0;
    goto L119;

  anon164_Then:
    assume {:partition} Opcode_3 != Mem_T.INT4[Tmp_150 + Tmp_155 * 4];
    idx_5 := idx_5 + 1;
    goto anon164_Then_dummy;

  anon164_Then_dummy:
    assume false;
    return;

  anon132_Then:
    assume {:partition} idx_5 > max_1;
    goto L137;

  anon123_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    OpcodesMatch := 0;
    goto L341;

  L341:
    goto L137;

  anon131_Then:
    OpcodesMatch := 1;
    goto L341;

  anon158_Then:
    assume {:partition} ResponseCode_2 == 10;
    goto L100;

  L100:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    Command_14 := 0;
    goto L119;

  anon122_Then:
    goto L119;

  anon121_Then:
    assume {:partition} ResponseCode_2 == 8;
    goto L100;

  anon147_Then:
    goto L97;

  anon148_Then:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} ResponseCode_2 != 8;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} ResponseCode_2 != 10;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} ResponseCode_2 != 11;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} ResponseCode_2 == 12;
    goto L153;

  L153:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    max_2 := Mem_T.INT4[Tmp_159];
    idx_4 := 1;
    goto L159;

  L159:
    call {:si_unique_call 353} Tmp_151, idx_4, Tmp_153 := AvcResponseCompletion_sdv_static_function_2_loop_L159(Tmp_151, idx_4, Tmp_153, Command_14, max_2, Opcode_3);
    goto L159_last;

  L159_last:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} max_2 >= idx_4;
    Tmp_151 := idx_4;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} Opcode_3 == Mem_T.INT4[Tmp_153 + Tmp_151 * 4];
    OpcodesMatch := 1;
    goto L160;

  L160:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} OpcodesMatch == 0;
    Command_14 := 0;
    goto L119;

  anon139_Then:
    assume {:partition} OpcodesMatch != 0;
    goto L119;

  anon163_Then:
    assume {:partition} Opcode_3 != Mem_T.INT4[Tmp_153 + Tmp_151 * 4];
    idx_4 := idx_4 + 1;
    goto anon163_Then_dummy;

  anon163_Then_dummy:
    assume false;
    return;

  anon138_Then:
    assume {:partition} idx_4 > max_2;
    goto L160;

  anon136_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    OpcodesMatch := 0;
    goto L326;

  L326:
    goto L160;

  anon137_Then:
    OpcodesMatch := 1;
    goto L326;

  anon152_Then:
    assume {:partition} ResponseCode_2 != 12;
    Command_14 := 0;
    goto L119;

  anon153_Then:
    assume {:partition} ResponseCode_2 == 11;
    goto L153;

  anon154_Then:
    assume {:partition} ResponseCode_2 == 10;
    goto L152;

  L152:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    Command_14 := 0;
    goto L119;

  anon135_Then:
    goto L119;

  anon119_Then:
    assume {:partition} ResponseCode_2 == 8;
    goto L152;

  anon161_Then:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} ResponseCode_2 != 8;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} ResponseCode_2 != 9;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} ResponseCode_2 != 10;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} ResponseCode_2 == 15;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    goto L174;

  L174:
    Command_14 := 0;
    goto L119;

  anon141_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    goto L174;

  anon142_Then:
    goto L119;

  anon149_Then:
    assume {:partition} ResponseCode_2 != 15;
    Command_14 := 0;
    goto L119;

  anon150_Then:
    assume {:partition} ResponseCode_2 == 10;
    goto L171;

  L171:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    Command_14 := 0;
    goto L119;

  anon140_Then:
    goto L119;

  anon151_Then:
    assume {:partition} ResponseCode_2 == 9;
    goto L171;

  anon118_Then:
    assume {:partition} ResponseCode_2 == 8;
    goto L171;

  anon117_Then:
    assume {:partition} sdv_111 == 0;
    goto L86;

  anon160_Then:
    goto L86;

  anon116_Then:
    goto L81;

  anon113_Then:
    assume {:partition} Status_12 != 0;
    goto L37;

  anon111_Then:
    call {:si_unique_call 354} Tmp_163 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    Mem_T.INT4[Tmp_163] := OldIrql_9;
    call {:si_unique_call 355} sdv_KeAcquireSpinLock(0, Tmp_163);
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_163];
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto L17;

  L17:
    call {:si_unique_call 356} IoFreeIrp(0);
    call {:si_unique_call 357} sdv_KeReleaseSpinLock(0, OldIrql_9);
    call {:si_unique_call 358} AvcStopAllFCPProcessing(DevExt_17);
    goto L10;

  anon112_Then:
    goto L17;

  anon159_Then:
    call {:si_unique_call 359} IoFreeIrp(0);
    goto L10;
}



procedure {:origName "AvcSearchForUnitCommandHandler_sdv_static_function_2"} AvcSearchForUnitCommandHandler_sdv_static_function_2(actual_DevExt_18: int, actual_Opcode_4: int, actual_ppCommand: int) returns (Tmp_164: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_164 == 1 || Tmp_164 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcSearchForUnitCommandHandler_sdv_static_function_2"} AvcSearchForUnitCommandHandler_sdv_static_function_2(actual_DevExt_18: int, actual_Opcode_4: int, actual_ppCommand: int) returns (Tmp_164: int)
{
  var {:scalar} Tmp_165: int;
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:scalar} Tmp_168: int;
  var {:scalar} OldIrql_10: int;
  var {:scalar} max_3: int;
  var {:pointer} Command_15: int;
  var {:pointer} Entry_6: int;
  var {:scalar} idx_7: int;
  var {:scalar} OpcodesMatch_1: int;
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} DevExt_18: int;
  var {:scalar} Opcode_4: int;
  var {:pointer} ppCommand: int;
  var vslice_dummy_var_38: int;

  anon0:
    DevExt_18 := actual_DevExt_18;
    Opcode_4 := actual_Opcode_4;
    ppCommand := actual_ppCommand;
    call {:si_unique_call 360} Tmp_169 := __HAVOC_malloc(128);
    assume {:nonnull} ppCommand != 0;
    assume ppCommand > 0;
    call {:si_unique_call 361} Tmp_170 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_170 != 0;
    assume Tmp_170 > 0;
    Mem_T.INT4[Tmp_170] := OldIrql_10;
    call {:si_unique_call 362} sdv_KeAcquireSpinLock(0, Tmp_170);
    assume {:nonnull} Tmp_170 != 0;
    assume Tmp_170 > 0;
    OldIrql_10 := Mem_T.INT4[Tmp_170];
    assume {:nonnull} DevExt_18 != 0;
    assume DevExt_18 > 0;
    havoc Entry_6;
    goto L11;

  L11:
    call {:si_unique_call 363} Tmp_165, Tmp_166, Tmp_167, max_3, Command_15, Entry_6, idx_7, OpcodesMatch_1, Tmp_169 := AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L11(Tmp_165, Tmp_166, Tmp_167, max_3, Command_15, Entry_6, idx_7, OpcodesMatch_1, Tmp_169, Opcode_4);
    goto L11_last;

  L11_last:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Command_15 := Entry_6;
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L18;

  L18:
    assume {:nonnull} Entry_6 != 0;
    assume Entry_6 > 0;
    havoc Entry_6;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    havoc Tmp_169;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 255 == Mem_T.INT4[Tmp_169];
    OpcodesMatch_1 := 0;
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    max_3 := Mem_T.INT4[Tmp_167];
    idx_7 := 1;
    goto L27;

  L27:
    call {:si_unique_call 364} Tmp_165, Tmp_166, idx_7 := AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L27(Tmp_165, Tmp_166, max_3, Command_15, idx_7, Opcode_4);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} max_3 >= idx_7;
    Tmp_165 := idx_7;
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    havoc Tmp_166;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Opcode_4 == Mem_T.INT4[Tmp_166 + Tmp_165 * 4];
    OpcodesMatch_1 := 1;
    goto L28;

  L28:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} OpcodesMatch_1 != 0;
    call {:si_unique_call 365} vslice_dummy_var_38 := sdv_RemoveEntryList(0);
    call {:si_unique_call 366} InitializeListHead(Command_15);
    assume {:nonnull} ppCommand != 0;
    assume ppCommand > 0;
    goto L12;

  L12:
    call {:si_unique_call 367} sdv_KeReleaseSpinLock(0, OldIrql_10);
    assume {:nonnull} ppCommand != 0;
    assume ppCommand > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_168 := 1;
    goto L44;

  L44:
    Tmp_164 := Tmp_168;
    return;

  anon23_Then:
    Tmp_168 := 0;
    goto L44;

  anon22_Then:
    assume {:partition} OpcodesMatch_1 == 0;
    goto L18;

  anon27_Then:
    assume {:partition} Opcode_4 != Mem_T.INT4[Tmp_166 + Tmp_165 * 4];
    idx_7 := idx_7 + 1;
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} idx_7 > max_3;
    goto L28;

  anon26_Then:
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    OpcodesMatch_1 := 0;
    goto L74;

  L74:
    goto L28;

  anon20_Then:
    OpcodesMatch_1 := 1;
    goto L74;

  anon25_Then:
    assume {:partition} 255 != Mem_T.INT4[Tmp_169];
    goto L18;

  anon19_Then:
    goto L12;
}



procedure {:origName "AvcDuplicateCommandContext_sdv_static_function_2"} AvcDuplicateCommandContext_sdv_static_function_2(actual_OrigCommand: int) returns (Tmp_171: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_171 == 0 || Tmp_171 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcDuplicateCommandContext_sdv_static_function_2"} AvcDuplicateCommandContext_sdv_static_function_2(actual_OrigCommand: int) returns (Tmp_171: int)
{
  var {:pointer} sdv_114: int;
  var {:pointer} Entry_7: int;
  var {:pointer} DevExt_19: int;
  var {:scalar} sdv_116: int;
  var {:scalar} sdv_117: int;
  var {:scalar} sdv_118: int;
  var {:pointer} Command_16: int;
  var {:pointer} Entry_8: int;
  var {:pointer} OrigCommand: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;

  anon0:
    OrigCommand := actual_OrigCommand;
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    havoc DevExt_19;
    call {:si_unique_call 368} sdv_114 := sdv_ExAllocateFromNPagedLookasideList(0);
    Command_16 := sdv_114;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Command_16 != 0;
    call {:si_unique_call 369} sdv_RtlCopyMemory(0, 0, 672);
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    assume {:nonnull} DevExt_19 != 0;
    assume DevExt_19 > 0;
    call {:si_unique_call 370} vslice_dummy_var_41 := sdv_InsertTailList(PendingResponseList__BUS_DEVICE_EXTENSION(DevExt_19), Command_16);
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    call {:si_unique_call 371} InitializeListHead(PendingIrpList__AVC_COMMAND_CONTEXT(Command_16));
    goto L23;

  L23:
    call {:si_unique_call 372} Entry_7, sdv_116, vslice_dummy_var_40 := AvcDuplicateCommandContext_sdv_static_function_2_loop_L23(Entry_7, sdv_116, Command_16, OrigCommand, vslice_dummy_var_40);
    goto L23_last;

  L23_last:
    call {:si_unique_call 383} sdv_116 := sdv_IsListEmpty(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_116 == 0;
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    call {:si_unique_call 373} Entry_7 := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(OrigCommand));
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    call {:si_unique_call 374} vslice_dummy_var_40 := sdv_InsertTailList(PendingIrpList__AVC_COMMAND_CONTEXT(Command_16), Entry_7);
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_116 != 0;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    call {:si_unique_call 375} InitializeListHead(CallbackChain__AVC_COMMAND_CONTEXT(Command_16));
    call {:si_unique_call 376} sdv_117 := sdv_IsListEmpty(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_117 == 0;
    goto L38;

  L38:
    call {:si_unique_call 377} sdv_118, Entry_8, vslice_dummy_var_39 := AvcDuplicateCommandContext_sdv_static_function_2_loop_L38(sdv_118, Command_16, Entry_8, OrigCommand, vslice_dummy_var_39);
    goto L38_last;

  L38_last:
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    call {:si_unique_call 380} Entry_8 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(OrigCommand));
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    call {:si_unique_call 381} vslice_dummy_var_39 := sdv_InsertTailList(CallbackChain__AVC_COMMAND_CONTEXT(Command_16), Entry_8);
    call {:si_unique_call 382} sdv_118 := sdv_IsListEmpty(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    call {:si_unique_call 378} Entry_8 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_16));
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    call {:si_unique_call 379} InsertHeadList(CallbackChain__AVC_COMMAND_CONTEXT(OrigCommand), Entry_8);
    goto L36;

  L36:
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    Tmp_171 := 0;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} sdv_118 == 0;
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} sdv_117 != 0;
    goto L36;

  anon12_Then:
    assume {:partition} Command_16 == 0;
    Tmp_171 := -1073741670;
    goto L1;
}



procedure {:origName "AvcGetSubunitInfo"} AvcGetSubunitInfo(actual_DeviceObject_10: int, actual_Irp_14: int) returns (Tmp_174: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_174 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcGetSubunitInfo"} AvcGetSubunitInfo(actual_DeviceObject_10: int, actual_Irp_14: int) returns (Tmp_174: int)
{
  var {:pointer} sdv_121: int;
  var {:pointer} AvcIrb_2: int;
  var {:scalar} ntStatus_4: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} BusExtension_2: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_50: int;

  anon0:
    DeviceObject_10 := actual_DeviceObject_10;
    Irp_14 := actual_Irp_14;
    assume {:nonnull} DeviceObject_10 != 0;
    assume DeviceObject_10 > 0;
    havoc BusExtension_2;
    call {:si_unique_call 384} sdv_121 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_121 != 0;
    assume sdv_121 > 0;
    havoc AvcIrb_2;
    ntStatus_4 := 0;
    call {:si_unique_call 385} Tmp_175 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    Mem_T.INT4[Tmp_175] := oldIrql_3;
    call {:si_unique_call 386} sdv_KeAcquireSpinLock(0, Tmp_175);
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_175];
    assume {:nonnull} AvcIrb_2 != 0;
    assume AvcIrb_2 > 0;
    havoc vslice_dummy_var_50;
    call {:si_unique_call 387} AvcPackSubunitInfo(BusExtension_2, 32, vslice_dummy_var_50, 0);
    call {:si_unique_call 388} sdv_KeReleaseSpinLock(0, oldIrql_3);
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 389} sdv_IoCompleteRequest(0, 0);
    Tmp_174 := ntStatus_4;
    return;
}



procedure {:origName "AvcPackCommandFrame"} AvcPackCommandFrame(actual_Command_17: int, actual_Opcode_5: int, actual_OperandByteCount_1: int, actual_Operands_2: int) returns (Tmp_176: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcPackCommandFrame"} AvcPackCommandFrame(actual_Command_17: int, actual_Opcode_5: int, actual_OperandByteCount_1: int, actual_Operands_2: int) returns (Tmp_176: int)
{
  var {:pointer} Tmp_177: int;
  var {:scalar} Status_13: int;
  var {:scalar} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:scalar} Tmp_182: int;
  var {:pointer} Command_17: int;
  var {:scalar} Opcode_5: int;
  var {:scalar} OperandByteCount_1: int;
  var {:pointer} Operands_2: int;
  var vslice_dummy_var_51: int;

  anon0:
    Command_17 := actual_Command_17;
    Opcode_5 := actual_Opcode_5;
    OperandByteCount_1 := actual_OperandByteCount_1;
    Operands_2 := actual_Operands_2;
    call {:si_unique_call 390} Tmp_177 := __HAVOC_malloc(2048);
    call {:si_unique_call 391} Tmp_180 := __HAVOC_malloc(2048);
    Status_13 := 0;
    call {:si_unique_call 392} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc Tmp_182;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc Tmp_180;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    havoc vslice_dummy_var_51;
    Mem_T.INT4[Tmp_180 + Tmp_182 * 4] := vslice_dummy_var_51;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} OperandByteCount_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Operands_2 != 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc Tmp_179;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc Tmp_177;
    call {:si_unique_call 393} sdv_RtlCopyMemory(0, 0, OperandByteCount_1);
    goto L14;

  L14:
    Tmp_176 := Status_13;
    goto LM2;

  LM2:
    return;

  anon10_Then:
    assume {:partition} Operands_2 == 0;
    goto L14;

  anon12_Then:
    assume {:partition} 0 >= OperandByteCount_1;
    goto L14;

  anon9_Then:
    Status_13 := -1073741811;
    goto L14;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcCancelRoutine_sdv_static_function_2"} AvcCancelRoutine_sdv_static_function_2(actual_DeviceObject_11: int, actual_Irp_15: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcCancelRoutine_sdv_static_function_2"} AvcCancelRoutine_sdv_static_function_2(actual_DeviceObject_11: int, actual_Irp_15: int)
{
  var {:pointer} Tmp_183: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 394} vslice_dummy_var_42 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_15 := actual_Irp_15;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 395} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_15)]);
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    call {:si_unique_call 396} Tmp_183 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    Mem_T.INT4[Tmp_183] := oldIrql_4;
    call {:si_unique_call 397} sdv_KeAcquireSpinLock(0, Tmp_183);
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    oldIrql_4 := Mem_T.INT4[Tmp_183];
    call {:si_unique_call 398} vslice_dummy_var_43 := sdv_RemoveEntryList(0);
    call {:si_unique_call 399} sdv_KeReleaseSpinLock(0, oldIrql_4);
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 400} sdv_IoCompleteRequest(0, 0);
    return;
}



procedure {:origName "AvcProcessGetRequest"} AvcProcessGetRequest(actual_DeviceObject_12: int, actual_Irp_16: int) returns (Tmp_185: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_185 == 259 || Tmp_185 == -1073741811 || Tmp_185 == 0 || Tmp_185 == -1073741670 || Tmp_185 == -1073741536;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcProcessGetRequest"} AvcProcessGetRequest(actual_DeviceObject_12: int, actual_Irp_16: int) returns (Tmp_185: int)
{
  var {:pointer} SubunitAddr_5: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} Status_14: int;
  var {:pointer} IrpStack_3: int;
  var {:pointer} DevExt_21: int;
  var {:pointer} pIOWorkItem: int;
  var {:pointer} sdv_129: int;
  var {:pointer} Command_18: int;
  var {:pointer} CmdIrb_3: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 401} Command_18 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_16 := actual_Irp_16;
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc DevExt_21;
    call {:si_unique_call 402} IrpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    havoc CmdIrb_3;
    assume {:nonnull} DevExt_21 != 0;
    assume DevExt_21 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 403} pIOWorkItem := IoAllocateWorkItem(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} pIOWorkItem != 0;
    call {:si_unique_call 404} IoQueueWorkItem(0, li2bplFunctionConstant265, 1, 0);
    goto L17;

  L17:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    havoc SubunitAddr_5;
    goto L20;

  L20:
    call {:si_unique_call 405} Status_14 := AvcAllocateSubunitCommandContext(DevExt_21, SubunitAddr_5, Command_18);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Status_14 != 0;
    goto L28;

  L28:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Status_14 >= 0;
    Status_14 := 259;
    goto L31;

  L31:
    Tmp_185 := Status_14;
    return;

  anon27_Then:
    assume {:partition} 0 > Status_14;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    call {:si_unique_call 406} sdv_IoCompleteRequest(0, 0);
    goto L31;

  anon26_Then:
    assume {:partition} Status_14 == 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    havoc vslice_dummy_var_52;
    call {:si_unique_call 407} Status_14 := AvcEnqueueFCPIrp(vslice_dummy_var_52, Irp_16);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 259 == Status_14;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 408} sdv_129 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    havoc Tmp_188;
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    Tmp_187 := Mem_T.INT4[Tmp_188] + 1;
    call {:si_unique_call 409} sdv_RtlCopyMemory(0, 0, Tmp_187);
    goto L54;

  L54:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Status_14 >= 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 410} Status_14 := AvcPrepareForRequestCallback(DevExt_21, vslice_dummy_var_53);
    goto L55;

  L55:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Status_14 < 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    havoc vslice_dummy_var_54;
    call {:si_unique_call 411} Irp_16 := AvcDequeueFCPIrp(vslice_dummy_var_54);
    goto L39;

  L39:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Status_14 < 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    havoc vslice_dummy_var_55;
    call {:si_unique_call 412} AvcFreeCommandContext(vslice_dummy_var_55);
    goto L28;

  anon29_Then:
    assume {:partition} 0 <= Status_14;
    goto L28;

  anon32_Then:
    assume {:partition} 0 <= Status_14;
    goto L39;

  anon31_Then:
    assume {:partition} 0 > Status_14;
    goto L55;

  anon36_Then:
    Status_14 := -1073741670;
    goto L54;

  anon30_Then:
    goto L42;

  L42:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    goto L54;

  anon35_Then:
    goto L42;

  anon28_Then:
    assume {:partition} 259 != Status_14;
    goto L39;

  anon25_Then:
    assume {:nonnull} DevExt_21 != 0;
    assume DevExt_21 > 0;
    SubunitAddr_5 := UnitAddr__BUS_DEVICE_EXTENSION(DevExt_21);
    goto L20;

  anon33_Then:
    assume {:partition} pIOWorkItem == 0;
    goto L17;

  anon34_Then:
    goto L17;
}



procedure {:origName "AvcUnpackSubunitAddress"} AvcUnpackSubunitAddress(actual_Buffer_3: int, actual_SubunitType_2: int, actual_SubunitID_1: int, actual_BytesUsed_4: int) returns (Tmp_189: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_189 == 0 || Tmp_189 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcUnpackSubunitAddress"} AvcUnpackSubunitAddress(actual_Buffer_3: int, actual_SubunitType_2: int, actual_SubunitID_1: int, actual_BytesUsed_4: int) returns (Tmp_189: int)
{
  var {:scalar} Tmp_190: int;
  var {:scalar} Temp: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} Tmp_192: int;
  var {:scalar} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:scalar} Tmp_195: int;
  var {:scalar} Tmp_196: int;
  var {:scalar} Tmp_197: int;
  var {:scalar} Tmp_198: int;
  var {:scalar} ntStatus_5: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} idx_8: int;
  var {:scalar} Tmp_201: int;
  var {:scalar} Tmp_202: int;
  var {:scalar} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Buffer_3: int;
  var {:pointer} SubunitType_2: int;
  var {:pointer} SubunitID_1: int;
  var {:pointer} BytesUsed_4: int;
  var boogieTmp: int;

  anon0:
    Buffer_3 := actual_Buffer_3;
    SubunitType_2 := actual_SubunitType_2;
    SubunitID_1 := actual_SubunitID_1;
    BytesUsed_4 := actual_BytesUsed_4;
    idx_8 := 1;
    ntStatus_5 := 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BytesUsed_4 != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} SubunitType_2 != 0;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    call {:si_unique_call 413} boogieTmp := corral_nondet();
    Mem_T.INT4[SubunitType_2] := boogieTmp;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.INT4[SubunitType_2] == 30;
    goto L15;

  L15:
    call {:si_unique_call 414} Tmp_198, idx_8, Tmp_202, Tmp_204 := AvcUnpackSubunitAddress_loop_L15(Tmp_198, idx_8, Tmp_202, Tmp_204, Buffer_3, SubunitType_2);
    goto L15_last;

  L15_last:
    Tmp_204 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_204 * 4] == 255;
    Tmp_202 := idx_8;
    Tmp_198 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    Mem_T.INT4[SubunitType_2 + Tmp_202 * 4] := Mem_T.INT4[Buffer_3 + Tmp_198 * 4];
    idx_8 := idx_8 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_204 * 4] != 255;
    Tmp_203 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_203 * 4] != 0;
    Tmp_201 := idx_8;
    Tmp_190 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    Mem_T.INT4[SubunitType_2 + Tmp_201 * 4] := Mem_T.INT4[Buffer_3 + Tmp_190 * 4];
    idx_8 := idx_8 + 1;
    goto L14;

  L14:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SubunitID_1 != 0;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    Temp := BAND(Mem_T.INT4[Buffer_3], BOR(BOR(1, 2), 4));
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} 5 >= Temp;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    Mem_T.INT4[SubunitID_1] := Temp;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Temp == 5;
    goto L29;

  L29:
    call {:si_unique_call 415} Tmp_195, Tmp_196, idx_8 := AvcUnpackSubunitAddress_loop_L29(Tmp_195, Tmp_196, idx_8, Buffer_3, SubunitID_1);
    goto L29_last;

  L29_last:
    Tmp_196 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_196 * 4] == 255;
    Tmp_195 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    Mem_T.INT4[SubunitID_1] := Mem_T.INT4[SubunitID_1] + Mem_T.INT4[Buffer_3 + Tmp_195 * 4] - 1;
    idx_8 := idx_8 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_196 * 4] != 255;
    Tmp_200 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_200 * 4] != 0;
    Tmp_193 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    Mem_T.INT4[SubunitID_1] := Mem_T.INT4[SubunitID_1] + Mem_T.INT4[Buffer_3 + Tmp_193 * 4] - 1;
    idx_8 := idx_8 + 1;
    goto L28;

  L28:
    assume {:nonnull} BytesUsed_4 != 0;
    assume BytesUsed_4 > 0;
    Mem_T.INT4[BytesUsed_4] := idx_8;
    Tmp_189 := ntStatus_5;
    goto L1;

  L1:
    return;

  anon43_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_200 * 4] == 0;
    ntStatus_5 := -1073741811;
    goto L28;

  anon41_Then:
    assume {:partition} Temp != 5;
    goto L28;

  anon40_Then:
    assume {:partition} Temp > 5;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    Mem_T.INT4[SubunitID_1] := 0;
    goto L28;

  anon35_Then:
    assume {:partition} SubunitID_1 == 0;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    Tmp_197 := BAND(Mem_T.INT4[Buffer_3], BOR(BOR(1, 2), 4));
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Tmp_197 == 5;
    goto L38;

  L38:
    call {:si_unique_call 416} Tmp_192, idx_8 := AvcUnpackSubunitAddress_loop_L38(Tmp_192, idx_8, Buffer_3);
    goto L38_last;

  L38_last:
    Tmp_192 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_192 * 4] == 255;
    idx_8 := idx_8 + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    assume false;
    return;

  anon45_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_192 * 4] != 255;
    Tmp_205 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_205 * 4] != 0;
    idx_8 := idx_8 + 1;
    goto L28;

  anon46_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_205 * 4] == 0;
    ntStatus_5 := -1073741811;
    goto L28;

  anon44_Then:
    assume {:partition} Tmp_197 != 5;
    goto L28;

  anon39_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_203 * 4] == 0;
    ntStatus_5 := -1073741811;
    goto L14;

  anon37_Then:
    assume {:partition} Mem_T.INT4[SubunitType_2] != 30;
    goto L14;

  anon33_Then:
    assume {:partition} SubunitType_2 == 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L43;

  L43:
    call {:si_unique_call 417} Tmp_194, idx_8 := AvcUnpackSubunitAddress_loop_L43(Tmp_194, idx_8, Buffer_3);
    goto L43_last;

  L43_last:
    Tmp_194 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_194 * 4] == 255;
    idx_8 := idx_8 + 1;
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_194 * 4] != 255;
    Tmp_191 := idx_8;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_191 * 4] != 0;
    idx_8 := idx_8 + 1;
    goto L14;

  anon48_Then:
    assume {:partition} Mem_T.INT4[Buffer_3 + Tmp_191 * 4] == 0;
    ntStatus_5 := -1073741811;
    goto L14;

  anon34_Then:
    goto L14;

  anon36_Then:
    assume {:partition} BytesUsed_4 == 0;
    Tmp_189 := -1073741811;
    goto L1;
}



procedure {:origName "ConnectionMgrClrConnectInfo"} ConnectionMgrClrConnectInfo(actual_PdoExtension: int, actual_Data: int) returns (Tmp_206: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrClrConnectInfo"} ConnectionMgrClrConnectInfo(actual_PdoExtension: int, actual_Data: int) returns (Tmp_206: int)
{
  var {:pointer} Tmp_207: int;
  var {:pointer} MgrInstance: int;
  var {:scalar} ntStatus_6: int;
  var {:pointer} PdoExtension: int;
  var {:pointer} Data: int;
  var vslice_dummy_var_56: int;

  anon0:
    PdoExtension := actual_PdoExtension;
    Data := actual_Data;
    call {:si_unique_call 418} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 419} ntStatus_6 := CreateConnectionMgr(PdoExtension);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_6 == 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    havoc MgrInstance;
    assume {:nonnull} Data != 0;
    assume Data > 0;
    havoc vslice_dummy_var_56;
    call {:si_unique_call 420} ntStatus_6 := sdv_hash_517387733(MgrInstance, vslice_dummy_var_56);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_206 := ntStatus_6;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_6 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrPinDescriptor"} ConnectionMgrPinDescriptor(actual_PdoExtension_1: int, actual_Data_1: int) returns (Tmp_209: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrPinDescriptor"} ConnectionMgrPinDescriptor(actual_PdoExtension_1: int, actual_Data_1: int) returns (Tmp_209: int)
{
  var {:pointer} Tmp_210: int;
  var {:pointer} MgrInstance_1: int;
  var {:scalar} ntStatus_7: int;
  var {:pointer} PdoExtension_1: int;
  var {:pointer} Data_1: int;
  var vslice_dummy_var_57: int;

  anon0:
    PdoExtension_1 := actual_PdoExtension_1;
    Data_1 := actual_Data_1;
    call {:si_unique_call 421} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 422} ntStatus_7 := CreateConnectionMgr(PdoExtension_1);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_7 == 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_210;
    assume {:nonnull} Tmp_210 != 0;
    assume Tmp_210 > 0;
    havoc MgrInstance_1;
    assume {:nonnull} Data_1 != 0;
    assume Data_1 > 0;
    havoc vslice_dummy_var_57;
    call {:si_unique_call 423} ntStatus_7 := sdv_hash_464001803(MgrInstance_1, vslice_dummy_var_57, PinDescriptor__AVC_PIN_DESCRIPTOR(Data_1));
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_209 := ntStatus_7;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_7 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrGetExtPlugCounts"} ConnectionMgrGetExtPlugCounts(actual_PdoExtension_2: int, actual_Data_2: int) returns (Tmp_212: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrGetExtPlugCounts"} ConnectionMgrGetExtPlugCounts(actual_PdoExtension_2: int, actual_Data_2: int) returns (Tmp_212: int)
{
  var {:pointer} MgrInstance_2: int;
  var {:scalar} ntStatus_8: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} PdoExtension_2: int;
  var {:pointer} Data_2: int;
  var boogieTmp: int;

  anon0:
    PdoExtension_2 := actual_PdoExtension_2;
    Data_2 := actual_Data_2;
    call {:si_unique_call 424} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 425} ntStatus_8 := CreateConnectionMgr(PdoExtension_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus_8 == 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    havoc MgrInstance_2;
    assume {:nonnull} Data_2 != 0;
    assume Data_2 > 0;
    call {:si_unique_call 426} boogieTmp := sdv_hash_908374888(MgrInstance_2);
    assume {:nonnull} Data_2 != 0;
    assume Data_2 > 0;
    call {:si_unique_call 427} boogieTmp := sdv_hash_607735012(MgrInstance_2);
    goto L13;

  L13:
    Tmp_212 := ntStatus_8;
    goto LM2;

  LM2:
    return;

  anon7_Then:
    assume {:partition} ntStatus_8 != 0;
    goto L13;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrAcquire"} ConnectionMgrAcquire(actual_PdoExtension_3: int, actual_Data_3: int) returns (Tmp_215: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrAcquire"} ConnectionMgrAcquire(actual_PdoExtension_3: int, actual_Data_3: int) returns (Tmp_215: int)
{
  var {:pointer} MgrInstance_3: int;
  var {:scalar} ntStatus_9: int;
  var {:pointer} Tmp_217: int;
  var {:pointer} PdoExtension_3: int;
  var {:pointer} Data_3: int;
  var vslice_dummy_var_58: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Data_3 := actual_Data_3;
    call {:si_unique_call 428} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 429} ntStatus_9 := CreateConnectionMgr(PdoExtension_3);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_9 == 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_217;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    havoc MgrInstance_3;
    assume {:nonnull} Data_3 != 0;
    assume Data_3 > 0;
    havoc vslice_dummy_var_58;
    call {:si_unique_call 430} ntStatus_9 := sdv_hash_723703181(MgrInstance_3, vslice_dummy_var_58);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_215 := ntStatus_9;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_9 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_114568688"} sdv_hash_114568688(actual_this: int, actual_s_p_e_c_i_a_l_1: int) returns (Tmp_218: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_114568688"} sdv_hash_114568688(actual_this: int, actual_s_p_e_c_i_a_l_1: int) returns (Tmp_218: int)
{
  var {:pointer} this: int;
  var {:scalar} s_p_e_c_i_a_l_1: int;

  anon0:
    this := actual_this;
    s_p_e_c_i_a_l_1 := actual_s_p_e_c_i_a_l_1;
    call {:si_unique_call 431} sdv_hash_757443034_sdv_special_DTOR(this);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_1, 1) != 0;
    call {:si_unique_call 432} sdv_hash_648063079(this);
    goto L7;

  L7:
    Tmp_218 := this;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_1, 1) == 0;
    goto L7;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrGetConnectInfo"} ConnectionMgrGetConnectInfo(actual_PdoExtension_4: int, actual_Data_4: int) returns (Tmp_220: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrGetConnectInfo"} ConnectionMgrGetConnectInfo(actual_PdoExtension_4: int, actual_Data_4: int) returns (Tmp_220: int)
{
  var {:pointer} MgrInstance_4: int;
  var {:pointer} Tmp_222: int;
  var {:scalar} ntStatus_10: int;
  var {:pointer} PdoExtension_4: int;
  var {:pointer} Data_4: int;
  var vslice_dummy_var_59: int;

  anon0:
    PdoExtension_4 := actual_PdoExtension_4;
    Data_4 := actual_Data_4;
    call {:si_unique_call 433} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 434} ntStatus_10 := CreateConnectionMgr(PdoExtension_4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_10 == 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    havoc MgrInstance_4;
    assume {:nonnull} Data_4 != 0;
    assume Data_4 > 0;
    havoc vslice_dummy_var_59;
    call {:si_unique_call 435} ntStatus_10 := sdv_hash_439640722(MgrInstance_4, vslice_dummy_var_59, ConnectInfo__AVC_PRECONNECT_INFO(Data_4));
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_220 := ntStatus_10;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_10 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 436} vslice_dummy_var_44 := __HAVOC_malloc(4);
    assume ClfsNullRecord == 0;
    assume ClfsDataRecord == 1;
    assume ClfsRestartRecord == 2;
    assume ClfsClientRecord == 3;
    assume ClsContainerInitializing == 1;
    assume ClsContainerInactive == 2;
    assume ClsContainerActive == 4;
    assume ClsContainerActivePendingDelete == 8;
    assume ClsContainerPendingArchive == 16;
    assume ClsContainerPendingArchiveAndDelete == 32;
    assume ClfsContainerInitializing == 1;
    assume ClfsContainerInactive == 2;
    assume ClfsContainerActive == 4;
    assume ClfsContainerActivePendingDelete == 8;
    assume ClfsContainerPendingArchive == 16;
    assume ClfsContainerPendingArchiveAndDelete == 32;
    assume CLFS_MAX_CONTAINER_INFO == 256;
    assume CLFS_SCAN_INIT == 1;
    assume CLFS_SCAN_FORWARD == 2;
    assume CLFS_SCAN_BACKWARD == 4;
    assume CLFS_SCAN_CLOSE == 8;
    assume CLFS_SCAN_INITIALIZED == 16;
    assume CLFS_SCAN_BUFFERED == 32;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume UnitAddr == 255;
    return;
}



procedure {:origName "RemoveConnectionMgr"} RemoveConnectionMgr(actual_PdoData_2: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveConnectionMgr"} RemoveConnectionMgr(actual_PdoData_2: int)
{
  var {:pointer} MgrInstance_5: int;
  var {:pointer} Tmp_227: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} PdoData_2: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 437} vslice_dummy_var_45 := __HAVOC_malloc(4);
    PdoData_2 := actual_PdoData_2;
    call {:si_unique_call 438} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    havoc MgrInstance_5;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    Tmp_228 := MgrInstance_5;
    Tmp_227 := Tmp_228;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Tmp_227 != 0;
    call {:si_unique_call 439} vslice_dummy_var_46 := sdv_hash_114568688(Tmp_227, 1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} Tmp_227 == 0;
    goto L1;

  anon9_Then:
    goto L1;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CreateConnectionMgr"} CreateConnectionMgr(actual_PdoExtension_5: int) returns (Tmp_229: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CreateConnectionMgr"} CreateConnectionMgr(actual_PdoExtension_5: int) returns (Tmp_229: int)
{
  var {:pointer} Tmp_230: int;
  var {:pointer} sdv_143: int;
  var {:pointer} MgrInstance_6: int;
  var {:pointer} Tmp_232: int;
  var {:pointer} Tmp_233: int;
  var {:scalar} ntStatus_11: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_47: int;

  anon0:
    PdoExtension_5 := actual_PdoExtension_5;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    havoc Tmp_232;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Tmp_229 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon18_Then:
    call {:si_unique_call 440} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_11 := 0;
    call {:si_unique_call 441} sdv_143 := sdv_hash_610031591(20);
    Tmp_235 := sdv_143;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Tmp_235 != 0;
    call {:si_unique_call 442} sdv_hash_479992756_sdv_special_CTOR(Tmp_235, PdoExtension_5);
    goto L16;

  L16:
    MgrInstance_6 := Tmp_235;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} MgrInstance_6 != 0;
    call {:si_unique_call 443} ntStatus_11 := sdv_hash_890537390(MgrInstance_6);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} ntStatus_11 != 0;
    Tmp_233 := MgrInstance_6;
    Tmp_234 := Tmp_233;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Tmp_234 != 0;
    call {:si_unique_call 444} vslice_dummy_var_47 := sdv_hash_114568688(Tmp_234, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  L31:
    Tmp_229 := ntStatus_11;
    goto L1;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} Tmp_234 == 0;
    goto L31;

  anon17_Then:
    assume {:partition} ntStatus_11 == 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    havoc Tmp_230;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    goto L31;

  anon22_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} MgrInstance_6 == 0;
    ntStatus_11 := -1073741670;
    goto L31;

  anon20_Then:
    assume {:partition} Tmp_235 == 0;
    goto L16;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrSetConnectInfo"} ConnectionMgrSetConnectInfo(actual_PdoExtension_6: int, actual_Data_5: int) returns (Tmp_236: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrSetConnectInfo"} ConnectionMgrSetConnectInfo(actual_PdoExtension_6: int, actual_Data_5: int) returns (Tmp_236: int)
{
  var {:pointer} Tmp_237: int;
  var {:pointer} MgrInstance_7: int;
  var {:scalar} ntStatus_12: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Data_5: int;
  var vslice_dummy_var_60: int;

  anon0:
    PdoExtension_6 := actual_PdoExtension_6;
    Data_5 := actual_Data_5;
    call {:si_unique_call 445} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 446} ntStatus_12 := CreateConnectionMgr(PdoExtension_6);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_12 == 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    havoc MgrInstance_7;
    assume {:nonnull} Data_5 != 0;
    assume Data_5 > 0;
    havoc vslice_dummy_var_60;
    call {:si_unique_call 447} ntStatus_12 := sdv_hash_526192348(MgrInstance_7, vslice_dummy_var_60, ConnectInfo__AVC_SETCONNECT_INFO(Data_5));
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_236 := ntStatus_12;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_12 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrRelease"} ConnectionMgrRelease(actual_PdoExtension_7: int, actual_Data_6: int) returns (Tmp_239: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrRelease"} ConnectionMgrRelease(actual_PdoExtension_7: int, actual_Data_6: int) returns (Tmp_239: int)
{
  var {:pointer} MgrInstance_8: int;
  var {:scalar} ntStatus_13: int;
  var {:pointer} Tmp_241: int;
  var {:pointer} PdoExtension_7: int;
  var {:pointer} Data_6: int;
  var vslice_dummy_var_61: int;

  anon0:
    PdoExtension_7 := actual_PdoExtension_7;
    Data_6 := actual_Data_6;
    call {:si_unique_call 448} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 449} ntStatus_13 := CreateConnectionMgr(PdoExtension_7);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_13 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_241;
    assume {:nonnull} Tmp_241 != 0;
    assume Tmp_241 > 0;
    havoc MgrInstance_8;
    assume {:nonnull} Data_6 != 0;
    assume Data_6 > 0;
    havoc vslice_dummy_var_61;
    call {:si_unique_call 450} ntStatus_13 := sdv_hash_673615282(MgrInstance_8, vslice_dummy_var_61);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_239 := ntStatus_13;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_13 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrGetUniqueID"} ConnectionMgrGetUniqueID(actual_PdoExtension_8: int, actual_Data_7: int) returns (Tmp_242: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrGetUniqueID"} ConnectionMgrGetUniqueID(actual_PdoExtension_8: int, actual_Data_7: int) returns (Tmp_242: int)
{
  var {:pointer} MgrInstance_9: int;
  var {:scalar} ntStatus_14: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} Data_7: int;

  anon0:
    PdoExtension_8 := actual_PdoExtension_8;
    Data_7 := actual_Data_7;
    call {:si_unique_call 451} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 452} ntStatus_14 := CreateConnectionMgr(PdoExtension_8);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_14 == 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    havoc MgrInstance_9;
    assume {:nonnull} Data_7 != 0;
    assume Data_7 > 0;
    call {:si_unique_call 453} ntStatus_14 := sdv_hash_45263592(MgrInstance_9, DeviceID__AVC_UNIQUE_ID(Data_7));
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_242 := ntStatus_14;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} ntStatus_14 != 0;
    goto L13;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConnectionMgrPinCount"} ConnectionMgrPinCount(actual_PdoExtension_9: int, actual_Data_8: int) returns (Tmp_245: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConnectionMgrPinCount"} ConnectionMgrPinCount(actual_PdoExtension_9: int, actual_Data_8: int) returns (Tmp_245: int)
{
  var {:pointer} Tmp_246: int;
  var {:pointer} MgrInstance_10: int;
  var {:scalar} ntStatus_15: int;
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data_8: int;
  var boogieTmp: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data_8 := actual_Data_8;
    call {:si_unique_call 454} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 455} ntStatus_15 := CreateConnectionMgr(PdoExtension_9);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus_15 == 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    havoc MgrInstance_10;
    assume {:nonnull} Data_8 != 0;
    assume Data_8 > 0;
    call {:si_unique_call 456} boogieTmp := sdv_hash_454706939(MgrInstance_10);
    goto L13;

  L13:
    Tmp_245 := ntStatus_15;
    goto LM2;

  LM2:
    return;

  anon7_Then:
    assume {:partition} ntStatus_15 != 0;
    goto L13;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_771437190"} sdv_hash_771437190(actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_771437190"} sdv_hash_771437190(actual_p: int)
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 457} vslice_dummy_var_48 := __HAVOC_malloc(4);
    call {:si_unique_call 458} sdv_ExFreePool(0);
    return;
}



procedure {:origName "sdv_hash_330311584_sdv_special_DTOR"} sdv_hash_330311584_sdv_special_DTOR(actual_this_1: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_330311584_sdv_special_DTOR"} sdv_hash_330311584_sdv_special_DTOR(actual_this_1: int)
{
  var {:pointer} this_1: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 459} vslice_dummy_var_49 := __HAVOC_malloc(4);
    this_1 := actual_this_1;
    call {:si_unique_call 460} sdv_do_paged_code_check();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 461} vslice_dummy_var_50 := sdv_hash_145490435(this_1, 0, 0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 462} vslice_dummy_var_51 := sdv_hash_174130848(this_1, 0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_1 != 0;
    assume this_1 > 0;
    call {:si_unique_call 463} sdv_hash_648551832_sdv_special_DTOR(m_DstAddr_CKsPinDescriptor(this_1));
    assume {:nonnull} this_1 != 0;
    assume this_1 > 0;
    call {:si_unique_call 464} sdv_hash_648551832_sdv_special_DTOR(m_SrcAddr_CKsPinDescriptor(this_1));
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_179875575"} sdv_hash_179875575(actual_this_2: int) returns (Tmp_252: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_179875575"} sdv_hash_179875575(actual_this_2: int) returns (Tmp_252: int)
{
  var {:pointer} this_2: int;

  anon0:
    this_2 := actual_this_2;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    havoc Tmp_252;
    return;
}



procedure {:origName "sdv_hash_889363889"} sdv_hash_889363889(actual_this_3: int, actual_AvcIrb_3: int, actual_idx_9: int, actual_Flags: int, actual_srcAddr: int, actual_srcPlug: int, actual_dstAddr: int, actual_dstPlug: int) returns (Tmp_254: int);
  modifies Mem_T.INT4, alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_889363889"} sdv_hash_889363889(actual_this_3: int, actual_AvcIrb_3: int, actual_idx_9: int, actual_Flags: int, actual_srcAddr: int, actual_srcPlug: int, actual_dstAddr: int, actual_dstPlug: int) returns (Tmp_254: int)
{
  var {:scalar} cbOperands: int;
  var {:scalar} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:scalar} sdv_158: int;
  var {:scalar} Tmp_257: int;
  var {:scalar} sdv_161: int;
  var {:scalar} sdv_162: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Operands_3: int;
  var {:scalar} sdv_163: int;
  var {:pointer} AvcIrb_3: int;
  var {:pointer} idx_9: int;
  var {:pointer} Flags: int;
  var {:pointer} srcAddr: int;
  var {:pointer} srcPlug: int;
  var {:pointer} dstAddr: int;
  var {:pointer} dstPlug: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;

  anon0:
    AvcIrb_3 := actual_AvcIrb_3;
    idx_9 := actual_idx_9;
    Flags := actual_Flags;
    srcAddr := actual_srcAddr;
    srcPlug := actual_srcPlug;
    dstAddr := actual_dstAddr;
    dstPlug := actual_dstPlug;
    call {:si_unique_call 465} sdv_do_paged_code_check();
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 466} Operands_3 := sdv_hash_901487196(AvcIrb_3);
    call {:si_unique_call 467} cbOperands := sdv_hash_850420247(AvcIrb_3);
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.INT4[idx_9] >= cbOperands;
    Tmp_254 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} cbOperands > Mem_T.INT4[idx_9];
    assume {:nonnull} Flags != 0;
    assume Flags > 0;
    assume {:nonnull} Operands_3 != 0;
    assume Operands_3 > 0;
    Mem_T.INT4[Flags] := Mem_T.INT4[Operands_3];
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Mem_T.INT4[idx_9] := Mem_T.INT4[idx_9] + 1;
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.INT4[idx_9] == cbOperands;
    Tmp_254 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} Mem_T.INT4[idx_9] != cbOperands;
    Tmp_256 := Operands_3;
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Tmp_255 := cbOperands - Mem_T.INT4[idx_9];
    call {:si_unique_call 468} vslice_dummy_var_52 := sdv_hash_332631937(srcAddr, Tmp_255, Tmp_256);
    call {:si_unique_call 469} sdv_161 := sdv_hash_330049800(srcAddr);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_161 != 0;
    call {:si_unique_call 470} sdv_162 := sdv_hash_330049800(srcAddr);
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Mem_T.INT4[idx_9] := Mem_T.INT4[idx_9] + sdv_162;
    assume {:nonnull} Operands_3 != 0;
    assume Operands_3 > 0;
    assume {:nonnull} srcPlug != 0;
    assume srcPlug > 0;
    Mem_T.INT4[srcPlug] := Mem_T.INT4[Operands_3];
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Mem_T.INT4[idx_9] := Mem_T.INT4[idx_9] + 1;
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.INT4[idx_9] == cbOperands;
    Tmp_254 := 0;
    goto L1;

  anon18_Then:
    assume {:partition} Mem_T.INT4[idx_9] != cbOperands;
    Tmp_258 := Operands_3;
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Tmp_257 := cbOperands - Mem_T.INT4[idx_9];
    call {:si_unique_call 471} vslice_dummy_var_53 := sdv_hash_332631937(dstAddr, Tmp_257, Tmp_258);
    call {:si_unique_call 472} sdv_163 := sdv_hash_330049800(dstAddr);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_163 != 0;
    call {:si_unique_call 473} sdv_158 := sdv_hash_330049800(dstAddr);
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Mem_T.INT4[idx_9] := Mem_T.INT4[idx_9] + sdv_158;
    assume {:nonnull} Operands_3 != 0;
    assume Operands_3 > 0;
    assume {:nonnull} dstPlug != 0;
    assume dstPlug > 0;
    Mem_T.INT4[dstPlug] := Mem_T.INT4[Operands_3];
    assume {:nonnull} idx_9 != 0;
    assume idx_9 > 0;
    Mem_T.INT4[idx_9] := Mem_T.INT4[idx_9] + 1;
    Tmp_254 := 1;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_163 == 0;
    Tmp_254 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} sdv_161 == 0;
    Tmp_254 := 0;
    goto L1;

  anon16_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_610031591"} sdv_hash_610031591(actual_s: int) returns (Tmp_260: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_610031591"} sdv_hash_610031591(actual_s: int) returns (Tmp_260: int)
{
  var {:pointer} p_1: int;
  var {:scalar} s: int;

  anon0:
    s := actual_s;
    call {:si_unique_call 474} p_1 := ExAllocatePoolWithTag(1, s, 541283905);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} p_1 != 0;
    call {:si_unique_call 475} sdv_RtlZeroMemory(0, s);
    goto L9;

  L9:
    Tmp_260 := p_1;
    return;

  anon3_Then:
    assume {:partition} p_1 == 0;
    goto L9;
}



procedure {:origName "sdv_hash_94547877"} sdv_hash_94547877(actual_Descriptor: int, actual_kspd: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_94547877"} sdv_hash_94547877(actual_Descriptor: int, actual_kspd: int)
{
  var {:pointer} Descriptor: int;
  var {:pointer} kspd: int;
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 476} vslice_dummy_var_54 := __HAVOC_malloc(4);
    Descriptor := actual_Descriptor;
    kspd := actual_kspd;
    call {:si_unique_call 477} sdv_RtlCopyMemory(0, 0, 48);
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    goto L7;

  L7:
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd != 0;
    assume kspd > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    goto L1;

  anon10_Then:
    goto L1;

  anon11_Then:
    goto L7;

  anon9_Then:
    goto L7;
}



procedure {:origName "sdv_hash_955777450"} sdv_hash_955777450(actual_this_4: int, actual_PdoExtension_10: int, actual_ConnectInfo: int) returns (Tmp_264: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_955777450"} sdv_hash_955777450(actual_this_4: int, actual_PdoExtension_10: int, actual_ConnectInfo: int) returns (Tmp_264: int)
{
  var {:scalar} SubunitAddr_6: int;
  var {:scalar} sdv_165: int;
  var {:dopa} {:scalar} Tmp_266: int;
  var {:pointer} Tmp_267: int;
  var {:pointer} sdv_166: int;
  var {:pointer} Tmp_268: int;
  var {:pointer} sdv_167: int;
  var {:pointer} sdv_168: int;
  var {:scalar} sdv_169: int;
  var {:scalar} ntStatus_16: int;
  var {:scalar} sdv_170: int;
  var {:scalar} sdv_172: int;
  var {:pointer} sdv_173: int;
  var {:dopa} {:scalar} Tmp_269: int;
  var {:pointer} Tmp_270: int;
  var {:scalar} DeviceID: int;
  var {:pointer} this_4: int;
  var {:pointer} PdoExtension_10: int;
  var {:pointer} ConnectInfo: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 478} SubunitAddr_6 := __HAVOC_malloc(12);
    call {:si_unique_call 479} Tmp_266 := __HAVOC_malloc(4);
    call {:si_unique_call 480} Tmp_269 := __HAVOC_malloc(4);
    call {:si_unique_call 481} DeviceID := __HAVOC_malloc(16);
    this_4 := actual_this_4;
    PdoExtension_10 := actual_PdoExtension_10;
    ConnectInfo := actual_ConnectInfo;
    call {:si_unique_call 482} sdv_do_paged_code_check();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_16 := 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    ntStatus_16 := -1073741436;
    goto L11;

  L11:
    Tmp_264 := ntStatus_16;
    goto LM2;

  LM2:
    return;

  anon29_Then:
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 483} sdv_hash_421197326(PdoExtension_10, DeviceID);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    call {:si_unique_call 484} sdv_165 := IsEqualGUID(DeviceID__AVC_UNIQUE_ID(ConnectInfo), DeviceID);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_165 != 0;
    assume {:nonnull} SubunitAddr_6 != 0;
    assume SubunitAddr_6 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc Tmp_267;
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    havoc vslice_dummy_var_62;
    call {:si_unique_call 485} sdv_hash_567308675_sdv_special_CTOR(SubunitAddr_6, vslice_dummy_var_62);
    call {:si_unique_call 486} sdv_169 := sdv_hash_322187731(this_4);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} 1 == sdv_169;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    havoc vslice_dummy_var_63;
    call {:si_unique_call 487} sdv_172 := sdv_hash_405508819(SubunitAddr_6, vslice_dummy_var_63);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_172 != 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    Mem_T.INT4[Tmp_269] := 255;
    Tmp_268 := Tmp_269;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 488} vslice_dummy_var_55 := sdv_hash_332631937(m_SrcAddr_CKsPinDescriptor(this_4), 1, Tmp_268);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 489} sdv_166 := sdv_hash_103855929(SubunitAddr_6);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 490} sdv_hash_13414602(m_DstAddr_CKsPinDescriptor(this_4), sdv_166);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto L42;

  L42:
    call {:si_unique_call 491} sdv_hash_648551832_sdv_special_DTOR(SubunitAddr_6);
    goto L11;

  anon25_Then:
    goto L42;

  anon24_Then:
    assume {:partition} sdv_172 == 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    havoc vslice_dummy_var_64;
    call {:si_unique_call 492} sdv_hash_13414602(m_SrcAddr_CKsPinDescriptor(this_4), vslice_dummy_var_64);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 493} sdv_173 := sdv_hash_103855929(SubunitAddr_6);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 494} sdv_hash_13414602(m_DstAddr_CKsPinDescriptor(this_4), sdv_173);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto L42;

  anon23_Then:
    assume {:partition} 1 != sdv_169;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    havoc vslice_dummy_var_65;
    call {:si_unique_call 495} sdv_170 := sdv_hash_405508819(SubunitAddr_6, vslice_dummy_var_65);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_170 != 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 496} sdv_167 := sdv_hash_103855929(SubunitAddr_6);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 497} sdv_hash_13414602(m_SrcAddr_CKsPinDescriptor(this_4), sdv_167);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    Mem_T.INT4[Tmp_266] := 255;
    Tmp_270 := Tmp_266;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 498} vslice_dummy_var_56 := sdv_hash_332631937(m_DstAddr_CKsPinDescriptor(this_4), 1, Tmp_270);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto L42;

  anon27_Then:
    goto L42;

  anon26_Then:
    assume {:partition} sdv_170 == 0;
    call {:si_unique_call 499} sdv_168 := sdv_hash_103855929(SubunitAddr_6);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    call {:si_unique_call 500} sdv_hash_13414602(m_SrcAddr_CKsPinDescriptor(this_4), sdv_168);
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    havoc vslice_dummy_var_66;
    call {:si_unique_call 501} sdv_hash_13414602(m_DstAddr_CKsPinDescriptor(this_4), vslice_dummy_var_66);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto L42;

  anon22_Then:
    assume {:partition} sdv_165 == 0;
    goto L11;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    goto L11;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_61407646"} sdv_hash_61407646(actual_s_1: int) returns (Tmp_271: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_61407646"} sdv_hash_61407646(actual_s_1: int) returns (Tmp_271: int)
{
  var {:scalar} s_1: int;

  anon0:
    s_1 := actual_s_1;
    call {:si_unique_call 502} Tmp_271 := ExAllocatePoolWithTag(1, s_1, 541283905);
    return;
}



procedure {:origName "sdv_hash_1062250938"} sdv_hash_1062250938(actual_this_5: int, actual_srcAddr_1: int, actual_srcPlug_1: int, actual_dstAddr_1: int, actual_dstPlug_1: int) returns (Tmp_273: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_1062250938"} sdv_hash_1062250938(actual_this_5: int, actual_srcAddr_1: int, actual_srcPlug_1: int, actual_dstAddr_1: int, actual_dstPlug_1: int) returns (Tmp_273: int)
{
  var {:pointer} Tmp_274: int;
  var {:pointer} Tmp_275: int;
  var {:pointer} Tmp_276: int;
  var {:pointer} Tmp_277: int;
  var {:pointer} Tmp_278: int;
  var {:pointer} sdv_176: int;
  var {:pointer} Tmp_279: int;
  var {:pointer} Tmp_280: int;
  var {:pointer} pMedium: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} Tmp_283: int;
  var {:pointer} Tmp_284: int;
  var {:pointer} this_5: int;
  var {:pointer} srcAddr_1: int;
  var {:scalar} srcPlug_1: int;
  var {:pointer} dstAddr_1: int;
  var {:scalar} dstPlug_1: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;

  anon0:
    this_5 := actual_this_5;
    srcAddr_1 := actual_srcAddr_1;
    srcPlug_1 := actual_srcPlug_1;
    dstAddr_1 := actual_dstAddr_1;
    dstPlug_1 := actual_dstPlug_1;
    call {:si_unique_call 503} Tmp_280 := __HAVOC_malloc(32);
    call {:si_unique_call 504} Tmp_282 := __HAVOC_malloc(32);
    call {:si_unique_call 505} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 506} sdv_176 := ExAllocatePoolWithTag(1, 24, 541283905);
    pMedium := sdv_176;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pMedium != 0;
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    havoc Tmp_276;
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    havoc Tmp_283;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    havoc Tmp_275;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    call {:si_unique_call 507} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    havoc Tmp_280;
    Tmp_274 := Tmp_280;
    call {:si_unique_call 508} vslice_dummy_var_57 := sdv_hash_387797355(srcAddr_1, 4, Tmp_274);
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    havoc Tmp_282;
    Tmp_279 := Tmp_282 + 4 * 4;
    call {:si_unique_call 509} vslice_dummy_var_58 := sdv_hash_387797355(dstAddr_1, 4, Tmp_279);
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    havoc Tmp_277;
    assume {:nonnull} Tmp_277 != 0;
    assume Tmp_277 > 0;
    havoc Tmp_278;
    assume {:nonnull} Tmp_278 != 0;
    assume Tmp_278 > 0;
    havoc Tmp_284;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    goto L12;

  L12:
    Tmp_273 := pMedium;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} pMedium == 0;
    goto L12;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_723703181"} sdv_hash_723703181(actual_this_6: int, actual_PinID: int) returns (Tmp_285: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_723703181"} sdv_hash_723703181(actual_this_6: int, actual_PinID: int) returns (Tmp_285: int)
{
  var {:scalar} Tmp_286: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} Tmp_289: int;
  var {:pointer} this_6: int;
  var {:scalar} PinID: int;
  var vslice_dummy_var_67: int;

  anon0:
    this_6 := actual_this_6;
    PinID := actual_PinID;
    call {:si_unique_call 510} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Tmp_286 := PinID;
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    havoc Tmp_287;
    Tmp_289 := Tmp_287 + Tmp_286 * 324;
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    havoc vslice_dummy_var_67;
    call {:si_unique_call 511} Tmp_285 := sdv_hash_132241128(Tmp_289, vslice_dummy_var_67);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    Tmp_285 := -1073741811;
    goto L1;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_174130848"} sdv_hash_174130848(actual_this_7: int, actual_MediumsCount: int, actual_Mediums: int) returns (Tmp_290: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_174130848"} sdv_hash_174130848(actual_this_7: int, actual_MediumsCount: int, actual_Mediums: int) returns (Tmp_290: int)
{
  var {:scalar} cbMediums: int;
  var {:pointer} sdv_180: int;
  var {:pointer} this_7: int;
  var {:scalar} MediumsCount: int;
  var {:pointer} Mediums: int;

  anon0:
    this_7 := actual_this_7;
    MediumsCount := actual_MediumsCount;
    Mediums := actual_Mediums;
    call {:si_unique_call 512} sdv_do_paged_code_check();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 513} sdv_ExFreePool(0);
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    goto L7;

  L7:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MediumsCount != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mediums != 0;
    cbMediums := MediumsCount * 24;
    call {:si_unique_call 514} sdv_180 := ExAllocatePoolWithTag(1, cbMediums, 541283905);
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    call {:si_unique_call 515} sdv_RtlCopyMemory(0, 0, cbMediums);
    goto L13;

  L13:
    Tmp_290 := this_7;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    goto L13;

  anon13_Then:
    assume {:partition} Mediums == 0;
    goto L13;

  anon12_Then:
    assume {:partition} MediumsCount == 0;
    goto L13;

  anon11_Then:
    goto L7;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var {:scalar} Tmp_292: int;
  var {:scalar} Tmp_294: int;
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 516} Tmp_292 := __HAVOC_malloc(4);
    call {:si_unique_call 517} vslice_dummy_var_59 := __HAVOC_malloc(4);
    call {:si_unique_call 518} Tmp_294 := __HAVOC_malloc(4);
    assume ClfsNullRecord_1 == 0;
    assume ClfsDataRecord_1 == 1;
    assume ClfsRestartRecord_1 == 2;
    assume ClfsClientRecord_1 == 3;
    assume ClsContainerInitializing_1 == 1;
    assume ClsContainerInactive_1 == 2;
    assume ClsContainerActive_1 == 4;
    assume ClsContainerActivePendingDelete_1 == 8;
    assume ClsContainerPendingArchive_1 == 16;
    assume ClsContainerPendingArchiveAndDelete_1 == 32;
    assume ClfsContainerInitializing_1 == 1;
    assume ClfsContainerInactive_1 == 2;
    assume ClfsContainerActive_1 == 4;
    assume ClfsContainerActivePendingDelete_1 == 8;
    assume ClfsContainerPendingArchive_1 == 16;
    assume ClfsContainerPendingArchiveAndDelete_1 == 32;
    assume CLFS_MAX_CONTAINER_INFO_1 == 256;
    assume CLFS_SCAN_INIT_1 == 1;
    assume CLFS_SCAN_FORWARD_1 == 2;
    assume CLFS_SCAN_BACKWARD_1 == 4;
    assume CLFS_SCAN_CLOSE_1 == 8;
    assume CLFS_SCAN_INITIALIZED_1 == 16;
    assume CLFS_SCAN_BUFFERED_1 == 32;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume UnitAddr_1 == 255;
    assume {:nonnull} Tmp_292 != 0;
    assume Tmp_292 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    return;
}



procedure {:origName "sdv_hash_145490435"} sdv_hash_145490435(actual_this_8: int, actual_InterfacesCount: int, actual_Interfaces: int) returns (Tmp_296: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_145490435"} sdv_hash_145490435(actual_this_8: int, actual_InterfacesCount: int, actual_Interfaces: int) returns (Tmp_296: int)
{
  var {:pointer} sdv_181: int;
  var {:scalar} cbInterfaces: int;
  var {:pointer} this_8: int;
  var {:scalar} InterfacesCount: int;
  var {:pointer} Interfaces: int;

  anon0:
    this_8 := actual_this_8;
    InterfacesCount := actual_InterfacesCount;
    Interfaces := actual_Interfaces;
    call {:si_unique_call 519} sdv_do_paged_code_check();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 520} sdv_ExFreePool(0);
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    goto L7;

  L7:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} InterfacesCount != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Interfaces != 0;
    cbInterfaces := InterfacesCount * 24;
    call {:si_unique_call 521} sdv_181 := ExAllocatePoolWithTag(1, cbInterfaces, 541283905);
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    call {:si_unique_call 522} sdv_RtlCopyMemory(0, 0, cbInterfaces);
    goto L13;

  L13:
    Tmp_296 := this_8;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    goto L13;

  anon13_Then:
    assume {:partition} Interfaces == 0;
    goto L13;

  anon12_Then:
    assume {:partition} InterfacesCount == 0;
    goto L13;

  anon11_Then:
    goto L7;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_117005741"} sdv_hash_117005741(actual_this_9: int) returns (Tmp_298: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_117005741"} sdv_hash_117005741(actual_this_9: int) returns (Tmp_298: int)
{
  var {:pointer} this_9: int;

  anon0:
    this_9 := actual_this_9;
    assume {:nonnull} this_9 != 0;
    assume this_9 > 0;
    havoc Tmp_298;
    return;
}



procedure {:origName "sdv_hash_859452142"} sdv_hash_859452142(actual_this_10: int, actual_plugnumber: int) returns (Tmp_300: int);
  free ensures {:va_keep} Tmp_300 == actual_this_10;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_859452142"} sdv_hash_859452142(actual_this_10: int, actual_plugnumber: int) returns (Tmp_300: int)
{
  var {:pointer} this_10: int;
  var {:scalar} plugnumber: int;

  anon0:
    this_10 := actual_this_10;
    plugnumber := actual_plugnumber;
    assume {:nonnull} this_10 != 0;
    assume this_10 > 0;
    Tmp_300 := this_10;
    return;
}



procedure {:origName "sdv_hash_290170512"} sdv_hash_290170512(actual_p_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_290170512"} sdv_hash_290170512(actual_p_2: int)
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 523} vslice_dummy_var_60 := __HAVOC_malloc(4);
    call {:si_unique_call 524} sdv_ExFreePool(0);
    return;
}



procedure {:origName "sdv_hash_380977421"} sdv_hash_380977421(actual_this_11: int) returns (Tmp_304: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_380977421"} sdv_hash_380977421(actual_this_11: int) returns (Tmp_304: int)
{
  var {:pointer} this_11: int;

  anon0:
    this_11 := actual_this_11;
    call {:si_unique_call 525} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_11 != 0;
    assume this_11 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L8;

  L8:
    Tmp_304 := 0;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:nonnull} this_11 != 0;
    assume this_11 > 0;
    goto L8;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_385729890"} sdv_hash_385729890(actual_this_12: int, actual_s_p_e_c_i_a_l_2: int) returns (Tmp_306: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_385729890"} sdv_hash_385729890(actual_this_12: int, actual_s_p_e_c_i_a_l_2: int) returns (Tmp_306: int)
{
  var {:pointer} Tmp_307: int;
  var {:pointer} Tmp_309: int;
  var {:scalar} Tmp_310: int;
  var {:pointer} this_12: int;
  var {:scalar} s_p_e_c_i_a_l_2: int;

  anon0:
    this_12 := actual_this_12;
    s_p_e_c_i_a_l_2 := actual_s_p_e_c_i_a_l_2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_2, 2) != 0;
    Tmp_307 := 0;
    assume {:nonnull} Tmp_307 != 0;
    assume Tmp_307 > 0;
    havoc Tmp_310;
    call {:si_unique_call 526} sdv_hash_672547288(this_12, 96, Tmp_310, li2bplFunctionConstant636);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_2, 1) != 0;
    Tmp_309 := 0;
    call {:si_unique_call 527} sdv_hash_771437190(Tmp_309);
    goto L12;

  L12:
    Tmp_306 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_2, 1) == 0;
    goto L12;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_2, 2) == 0;
    call {:si_unique_call 528} sdv_hash_330311584_sdv_special_DTOR(this_12);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_2, 1) != 0;
    call {:si_unique_call 529} sdv_hash_290170512(this_12);
    goto L18;

  L18:
    Tmp_306 := this_12;
    goto L1;

  anon13_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_2, 1) == 0;
    goto L18;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_757443034_sdv_special_DTOR"} sdv_hash_757443034_sdv_special_DTOR(actual_this_13: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_757443034_sdv_special_DTOR"} sdv_hash_757443034_sdv_special_DTOR(actual_this_13: int)
{
  var {:pointer} Tmp_311: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} this_13: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 530} vslice_dummy_var_61 := __HAVOC_malloc(4);
    this_13 := actual_this_13;
    assume {:nonnull} this_13 != 0;
    assume this_13 > 0;
    havoc Tmp_312;
    Tmp_311 := Tmp_312;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Tmp_311 != 0;
    call {:si_unique_call 531} vslice_dummy_var_62 := sdv_hash_385729890(Tmp_311, 3);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} Tmp_311 == 0;
    goto L1;
}



procedure {:origName "sdv_hash_265040478"} sdv_hash_265040478(actual_this_14: int, actual_plugnumber_1: int) returns (Tmp_315: int);
  free ensures {:va_keep} Tmp_315 == actual_this_14;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_265040478"} sdv_hash_265040478(actual_this_14: int, actual_plugnumber_1: int) returns (Tmp_315: int)
{
  var {:pointer} this_14: int;
  var {:scalar} plugnumber_1: int;

  anon0:
    this_14 := actual_this_14;
    plugnumber_1 := actual_plugnumber_1;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    Tmp_315 := this_14;
    return;
}



procedure {:origName "sdv_hash_672547288"} sdv_hash_672547288(actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_672547288"} sdv_hash_672547288(actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int)
{
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:scalar} s_p_e_c_i_a_l_5: int;
  var {:scalar} s_p_e_c_i_a_l_6: int;
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 532} vslice_dummy_var_63 := __HAVOC_malloc(4);
    s_p_e_c_i_a_l_3 := actual_s_p_e_c_i_a_l_3;
    s_p_e_c_i_a_l_5 := actual_s_p_e_c_i_a_l_5;
    s_p_e_c_i_a_l_6 := actual_s_p_e_c_i_a_l_6;
    goto L4;

  L4:
    call {:si_unique_call 533} s_p_e_c_i_a_l_5 := sdv_hash_672547288_loop_L4(s_p_e_c_i_a_l_3, s_p_e_c_i_a_l_5, s_p_e_c_i_a_l_6);
    goto L4_last;

  L4_last:
    s_p_e_c_i_a_l_5 := s_p_e_c_i_a_l_5 - 1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_5 >= 0;
    assume {:IndirectCall} true;
    assume s_p_e_c_i_a_l_6 == li2bplFunctionConstant636;
    call {:si_unique_call 534} sdv_hash_330311584_sdv_special_DTOR(s_p_e_c_i_a_l_3);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} 0 > s_p_e_c_i_a_l_5;
    goto LM2;
}



procedure {:origName "sdv_hash_454706939"} sdv_hash_454706939(actual_this_15: int) returns (Tmp_319: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_454706939"} sdv_hash_454706939(actual_this_15: int) returns (Tmp_319: int)
{
  var {:pointer} this_15: int;

  anon0:
    this_15 := actual_this_15;
    assume {:nonnull} this_15 != 0;
    assume this_15 > 0;
    havoc Tmp_319;
    return;
}



procedure {:origName "sdv_hash_322187731"} sdv_hash_322187731(actual_this_16: int) returns (Tmp_321: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_322187731"} sdv_hash_322187731(actual_this_16: int) returns (Tmp_321: int)
{
  var {:pointer} Tmp_322: int;
  var {:pointer} this_16: int;

  anon0:
    this_16 := actual_this_16;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_322;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    havoc Tmp_321;
    return;
}



procedure {:origName "sdv_hash_607735012"} sdv_hash_607735012(actual_this_17: int) returns (Tmp_324: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_607735012"} sdv_hash_607735012(actual_this_17: int) returns (Tmp_324: int)
{
  var {:pointer} this_17: int;

  anon0:
    this_17 := actual_this_17;
    assume {:nonnull} this_17 != 0;
    assume this_17 > 0;
    havoc Tmp_324;
    return;
}



procedure {:origName "sdv_hash_246154148"} sdv_hash_246154148(actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_246154148"} sdv_hash_246154148(actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int)
{
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:scalar} s_p_e_c_i_a_l_9: int;
  var {:scalar} s_p_e_c_i_a_l_10: int;
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 535} vslice_dummy_var_64 := __HAVOC_malloc(4);
    s_p_e_c_i_a_l_7 := actual_s_p_e_c_i_a_l_7;
    s_p_e_c_i_a_l_9 := actual_s_p_e_c_i_a_l_9;
    s_p_e_c_i_a_l_10 := actual_s_p_e_c_i_a_l_10;
    goto L3;

  L3:
    call {:si_unique_call 536} s_p_e_c_i_a_l_9 := sdv_hash_246154148_loop_L3(s_p_e_c_i_a_l_7, s_p_e_c_i_a_l_9, s_p_e_c_i_a_l_10);
    goto L3_last;

  L3_last:
    s_p_e_c_i_a_l_9 := s_p_e_c_i_a_l_9 - 1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} s_p_e_c_i_a_l_9 >= 0;
    assume s_p_e_c_i_a_l_10 == 0;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} 0 > s_p_e_c_i_a_l_9;
    return;
}



procedure {:origName "sdv_hash_774347054"} sdv_hash_774347054(actual_this_18: int) returns (Tmp_328: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_774347054"} sdv_hash_774347054(actual_this_18: int) returns (Tmp_328: int)
{
  var {:pointer} this_18: int;

  anon0:
    this_18 := actual_this_18;
    assume {:nonnull} this_18 != 0;
    assume this_18 > 0;
    havoc Tmp_328;
    return;
}



procedure {:origName "sdv_hash_132241128"} sdv_hash_132241128(actual_this_19: int, actual_PdoExtension_11: int) returns (Tmp_330: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_132241128"} sdv_hash_132241128(actual_this_19: int, actual_PdoExtension_11: int) returns (Tmp_330: int)
{
  var {:pointer} OutputIrb: int;
  var {:pointer} Tmp_332: int;
  var {:scalar} Irp_17: int;
  var {:pointer} sdv_184: int;
  var {:pointer} AvcIrb_4: int;
  var {:scalar} ntStatus_17: int;
  var {:pointer} sdv_187: int;
  var {:scalar} sdv_189: int;
  var {:pointer} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} this_19: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 537} Irp_17 := __HAVOC_malloc(16);
    this_19 := actual_this_19;
    call {:si_unique_call 538} sdv_do_paged_code_check();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_17 := 0;
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L10;

  L10:
    Tmp_330 := ntStatus_17;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 539} sdv_184 := sdv_hash_64962389(560);
    Tmp_334 := sdv_184;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Tmp_334 != 0;
    call {:si_unique_call 540} sdv_hash_265299797_sdv_special_CTOR(Tmp_334);
    goto L17;

  L17:
    AvcIrb_4 := Tmp_334;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} AvcIrb_4 != 0;
    OutputIrb := AvcIrb_4;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    call {:si_unique_call 541} sdv_hash_1058931133_sdv_special_CTOR(Irp_17, 0);
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    havoc vslice_dummy_var_68;
    havoc vslice_dummy_var_69;
    call {:si_unique_call 542} ntStatus_17 := sdv_hash_842212107(AvcIrb_4, m_SrcAddr_CKsPinDescriptor(this_19), vslice_dummy_var_68, m_DstAddr_CKsPinDescriptor(this_19), vslice_dummy_var_69, OutputIrb);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} ntStatus_17 >= 0;
    call {:si_unique_call 543} sdv_187 := sdv_hash_798100910(OutputIrb);
    call {:si_unique_call 544} ntStatus_17 := sdv_hash_592377359(Irp_17, sdv_187);
    goto L37;

  L37:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} ntStatus_17 != 0;
    goto L48;

  L48:
    Tmp_333 := AvcIrb_4;
    Tmp_332 := Tmp_333;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Tmp_332 != 0;
    goto L54;

  L54:
    call {:si_unique_call 545} sdv_hash_132241128_loop_L54();
    goto L54_last;

  L54_last:
    goto L54_dummy;

  L54_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} Tmp_332 == 0;
    call {:si_unique_call 546} sdv_hash_428960233_sdv_special_DTOR(Irp_17);
    goto L10;

  anon21_Then:
    assume {:partition} ntStatus_17 == 0;
    call {:si_unique_call 547} sdv_189 := sdv_hash_390207871(AvcIrb_4);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_189 == 9;
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    goto L48;

  anon22_Then:
    assume {:partition} sdv_189 != 9;
    goto L48;

  anon20_Then:
    assume {:partition} 0 > ntStatus_17;
    goto L37;

  anon26_Then:
    assume {:partition} AvcIrb_4 == 0;
    ntStatus_17 := -1073741670;
    goto L10;

  anon25_Then:
    assume {:partition} Tmp_334 == 0;
    goto L17;

  anon19_Then:
    goto L10;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_827633206"} sdv_hash_827633206(actual_this_20: int, actual_kspd_1: int) returns (Tmp_335: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_827633206"} sdv_hash_827633206(actual_this_20: int, actual_kspd_1: int) returns (Tmp_335: int)
{
  var {:pointer} this_20: int;
  var {:pointer} kspd_1: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;

  anon0:
    this_20 := actual_this_20;
    kspd_1 := actual_kspd_1;
    call {:si_unique_call 548} sdv_do_paged_code_check();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 549} vslice_dummy_var_65 := sdv_hash_145490435(this_20, 0, 0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 550} vslice_dummy_var_66 := sdv_hash_174130848(this_20, 0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_20 != 0;
    assume this_20 > 0;
    Tmp_335 := this_20;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_45263592"} sdv_hash_45263592(actual_this_21: int, actual_UniqueID: int) returns (Tmp_337: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_45263592"} sdv_hash_45263592(actual_this_21: int, actual_UniqueID: int) returns (Tmp_337: int)
{
  var {:pointer} this_21: int;
  var {:pointer} UniqueID: int;
  var vslice_dummy_var_70: int;

  anon0:
    this_21 := actual_this_21;
    UniqueID := actual_UniqueID;
    call {:si_unique_call 551} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_21 != 0;
    assume this_21 > 0;
    havoc vslice_dummy_var_70;
    call {:si_unique_call 552} sdv_hash_421197326(vslice_dummy_var_70, UniqueID);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_337 := 0;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_994092636"} sdv_hash_994092636(actual_this_22: int, actual_AvcIrb_5: int, actual_PinID_1: int) returns (Tmp_339: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_994092636"} sdv_hash_994092636(actual_this_22: int, actual_AvcIrb_5: int, actual_PinID_1: int) returns (Tmp_339: int)
{
  var {:scalar} Tmp_340: int;
  var {:dopa} {:scalar} Tmp_341: int;
  var {:pointer} Tmp_342: int;
  var {:scalar} Tmp_343: int;
  var {:scalar} sdv_192: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_345: int;
  var {:pointer} sdv_193: int;
  var {:pointer} Tmp_346: int;
  var {:scalar} Tmp_347: int;
  var {:pointer} sdv_194: int;
  var {:scalar} Tmp_348: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_349: int;
  var {:scalar} ntStatus_18: int;
  var {:pointer} sdv_198: int;
  var {:scalar} sdv_200: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} pMedium_1: int;
  var {:scalar} dstAddr_2: int;
  var {:pointer} Tmp_353: int;
  var {:dopa} {:scalar} srcPlug_2: int;
  var {:scalar} Tmp_354: int;
  var {:dopa} {:scalar} idx_10: int;
  var {:dopa} {:scalar} bFlags: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:scalar} Tmp_357: int;
  var {:scalar} srcAddr_2: int;
  var {:dopa} {:scalar} dstPlug_2: int;
  var {:dopa} {:scalar} Tmp_358: int;
  var {:pointer} this_22: int;
  var {:pointer} AvcIrb_5: int;
  var {:scalar} PinID_1: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 553} Tmp_341 := __HAVOC_malloc(4);
    call {:si_unique_call 554} dstAddr_2 := __HAVOC_malloc(12);
    call {:si_unique_call 555} srcPlug_2 := __HAVOC_malloc(4);
    call {:si_unique_call 556} idx_10 := __HAVOC_malloc(4);
    call {:si_unique_call 557} bFlags := __HAVOC_malloc(4);
    call {:si_unique_call 558} srcAddr_2 := __HAVOC_malloc(12);
    call {:si_unique_call 559} dstPlug_2 := __HAVOC_malloc(4);
    call {:si_unique_call 560} Tmp_358 := __HAVOC_malloc(4);
    this_22 := actual_this_22;
    AvcIrb_5 := actual_AvcIrb_5;
    PinID_1 := actual_PinID_1;
    call {:si_unique_call 561} sdv_do_paged_code_check();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_18 := 0;
    assume {:nonnull} srcAddr_2 != 0;
    assume srcAddr_2 > 0;
    call {:si_unique_call 562} sdv_hash_948020419_sdv_special_CTOR(srcAddr_2);
    assume {:nonnull} dstAddr_2 != 0;
    assume dstAddr_2 > 0;
    call {:si_unique_call 563} sdv_hash_948020419_sdv_special_CTOR(dstAddr_2);
    assume {:nonnull} idx_10 != 0;
    assume idx_10 > 0;
    Mem_T.INT4[idx_10] := 1;
    call {:si_unique_call 564} sdv_192 := sdv_hash_889363889(this_22, AvcIrb_5, idx_10, bFlags, srcAddr_2, srcPlug_2, dstAddr_2, dstPlug_2);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_192 != 0;
    assume {:nonnull} bFlags != 0;
    assume bFlags > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(Mem_T.INT4[bFlags], 1) != 0;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    Mem_T.INT4[Tmp_358] := 255;
    Tmp_346 := Tmp_358;
    call {:si_unique_call 565} sdv_196 := sdv_hash_405508819(srcAddr_2, Tmp_346);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_196 != 0;
    Tmp_348 := PinID_1;
    assume {:nonnull} this_22 != 0;
    assume this_22 > 0;
    havoc Tmp_353;
    Tmp_352 := Tmp_353 + Tmp_348 * 324;
    call {:si_unique_call 566} sdv_198 := sdv_hash_677052185(Tmp_352, 8);
    assume {:nonnull} srcPlug_2 != 0;
    assume srcPlug_2 > 0;
    call {:si_unique_call 567} vslice_dummy_var_67 := sdv_hash_859452142(sdv_198, Mem_T.INT4[srcPlug_2]);
    goto L31;

  L31:
    Tmp_354 := ntStatus_18;
    call {:si_unique_call 568} sdv_hash_648551832_sdv_special_DTOR(dstAddr_2);
    call {:si_unique_call 569} sdv_hash_648551832_sdv_special_DTOR(srcAddr_2);
    Tmp_339 := Tmp_354;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} sdv_196 == 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    Mem_T.INT4[Tmp_341] := 255;
    Tmp_344 := Tmp_341;
    call {:si_unique_call 570} sdv_200 := sdv_hash_405508819(dstAddr_2, Tmp_344);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_200 == 0;
    assume {:nonnull} dstPlug_2 != 0;
    assume dstPlug_2 > 0;
    assume {:nonnull} srcPlug_2 != 0;
    assume srcPlug_2 > 0;
    call {:si_unique_call 571} pMedium_1 := sdv_hash_1062250938(this_22, srcAddr_2, Mem_T.INT4[srcPlug_2], dstAddr_2, Mem_T.INT4[dstPlug_2]);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} pMedium_1 != 0;
    Tmp_357 := PinID_1;
    assume {:nonnull} this_22 != 0;
    assume this_22 > 0;
    havoc Tmp_355;
    Tmp_342 := Tmp_355 + Tmp_357 * 324;
    call {:si_unique_call 572} sdv_194 := sdv_hash_677052185(Tmp_342, 3);
    call {:si_unique_call 573} vslice_dummy_var_69 := sdv_hash_174130848(sdv_194, 1, pMedium_1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} pMedium_1 == 0;
    ntStatus_18 := -1073741670;
    goto L31;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} sdv_200 != 0;
    Tmp_343 := PinID_1;
    assume {:nonnull} this_22 != 0;
    assume this_22 > 0;
    havoc Tmp_356;
    Tmp_349 := Tmp_356 + Tmp_343 * 324;
    call {:si_unique_call 574} sdv_193 := sdv_hash_677052185(Tmp_349, 8);
    assume {:nonnull} dstPlug_2 != 0;
    assume dstPlug_2 > 0;
    call {:si_unique_call 575} vslice_dummy_var_68 := sdv_hash_859452142(sdv_193, Mem_T.INT4[dstPlug_2]);
    goto L31;

  anon20_Then:
    assume {:partition} BAND(Mem_T.INT4[bFlags], 1) == 0;
    assume {:nonnull} bFlags != 0;
    assume bFlags > 0;
    Tmp_340 := BAND(Mem_T.INT4[bFlags], BOR(1, 2));
    Tmp_347 := PinID_1;
    assume {:nonnull} this_22 != 0;
    assume this_22 > 0;
    havoc Tmp_345;
    Tmp_351 := Tmp_345 + Tmp_347 * 324;
    call {:si_unique_call 576} vslice_dummy_var_70 := sdv_hash_677052185(Tmp_351, Tmp_340);
    goto L31;

  anon19_Then:
    assume {:partition} sdv_192 == 0;
    goto L31;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_648063079"} sdv_hash_648063079(actual_p_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_648063079"} sdv_hash_648063079(actual_p_3: int)
{
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 577} vslice_dummy_var_71 := __HAVOC_malloc(4);
    call {:si_unique_call 578} sdv_ExFreePool(0);
    return;
}



procedure {:origName "sdv_hash_517387733"} sdv_hash_517387733(actual_this_23: int, actual_PinID_2: int) returns (Tmp_361: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_517387733"} sdv_hash_517387733(actual_this_23: int, actual_PinID_2: int) returns (Tmp_361: int)
{
  var {:scalar} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} this_23: int;
  var {:scalar} PinID_2: int;

  anon0:
    this_23 := actual_this_23;
    PinID_2 := actual_PinID_2;
    call {:si_unique_call 579} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Tmp_362 := PinID_2;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    havoc Tmp_364;
    Tmp_363 := Tmp_364 + Tmp_362 * 324;
    call {:si_unique_call 580} Tmp_361 := sdv_hash_380977421(Tmp_363);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    Tmp_361 := -1073741811;
    goto L1;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_479992756_sdv_special_CTOR"} sdv_hash_479992756_sdv_special_CTOR(actual_this_24: int, actual_PdoExtension_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_479992756_sdv_special_CTOR"} sdv_hash_479992756_sdv_special_CTOR(actual_this_24: int, actual_PdoExtension_12: int)
{
  var {:pointer} this_24: int;
  var {:pointer} PdoExtension_12: int;
  var vslice_dummy_var_72: int;

  anon0:
    call {:si_unique_call 581} vslice_dummy_var_72 := __HAVOC_malloc(4);
    this_24 := actual_this_24;
    PdoExtension_12 := actual_PdoExtension_12;
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    return;
}



procedure {:origName "sdv_hash_526192348"} sdv_hash_526192348(actual_this_25: int, actual_PinID_3: int, actual_ConnectInfo_1: int) returns (Tmp_368: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_526192348"} sdv_hash_526192348(actual_this_25: int, actual_PinID_3: int, actual_ConnectInfo_1: int) returns (Tmp_368: int)
{
  var {:pointer} Tmp_369: int;
  var {:scalar} Tmp_371: int;
  var {:pointer} Tmp_372: int;
  var {:pointer} this_25: int;
  var {:scalar} PinID_3: int;
  var {:pointer} ConnectInfo_1: int;
  var vslice_dummy_var_71: int;

  anon0:
    this_25 := actual_this_25;
    PinID_3 := actual_PinID_3;
    ConnectInfo_1 := actual_ConnectInfo_1;
    call {:si_unique_call 582} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Tmp_371 := PinID_3;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_369;
    Tmp_372 := Tmp_369 + Tmp_371 * 324;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc vslice_dummy_var_71;
    call {:si_unique_call 583} Tmp_368 := sdv_hash_955777450(Tmp_372, vslice_dummy_var_71, ConnectInfo_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    Tmp_368 := -1073741811;
    goto L1;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_439640722"} sdv_hash_439640722(actual_this_26: int, actual_PinID_4: int, actual_ConnectInfo_2: int) returns (Tmp_373: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_439640722"} sdv_hash_439640722(actual_this_26: int, actual_PinID_4: int, actual_ConnectInfo_2: int) returns (Tmp_373: int)
{
  var {:pointer} Tmp_374: int;
  var {:scalar} SubunitAddr_7: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} Tmp_376: int;
  var {:scalar} Tmp_377: int;
  var {:scalar} Tmp_378: int;
  var {:pointer} Tmp_379: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:scalar} sdv_206: int;
  var {:scalar} Tmp_383: int;
  var {:scalar} ntStatus_19: int;
  var {:scalar} sdv_208: int;
  var {:scalar} sdv_209: int;
  var {:pointer} Tmp_385: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} this_26: int;
  var {:scalar} PinID_4: int;
  var {:pointer} ConnectInfo_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 584} SubunitAddr_7 := __HAVOC_malloc(12);
    this_26 := actual_this_26;
    PinID_4 := actual_PinID_4;
    ConnectInfo_2 := actual_ConnectInfo_2;
    call {:si_unique_call 585} sdv_do_paged_code_check();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_19 := 0;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} SubunitAddr_7 != 0;
    assume SubunitAddr_7 > 0;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    havoc vslice_dummy_var_72;
    call {:si_unique_call 586} sdv_hash_567308675_sdv_special_CTOR(SubunitAddr_7, vslice_dummy_var_72);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc vslice_dummy_var_74;
    call {:si_unique_call 587} sdv_hash_421197326(vslice_dummy_var_74, DeviceID__AVC_UNIQUE_ID(ConnectInfo_2));
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    havoc vslice_dummy_var_75;
    call {:si_unique_call 588} vslice_dummy_var_73 := sdv_hash_387797355(SubunitAddr_7, 32, vslice_dummy_var_75);
    Tmp_382 := PinID_4;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc Tmp_380;
    Tmp_387 := Tmp_380 + Tmp_382 * 324;
    call {:si_unique_call 589} sdv_206 := sdv_hash_179875575(Tmp_387);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    Tmp_383 := PinID_4;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc Tmp_376;
    Tmp_379 := Tmp_376 + Tmp_383 * 324;
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    call {:si_unique_call 590} boogieTmp := sdv_hash_322187731(Tmp_379);
    Tmp_377 := PinID_4;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc Tmp_388;
    Tmp_375 := Tmp_388 + Tmp_377 * 324;
    call {:si_unique_call 591} sdv_208 := sdv_hash_117005741(Tmp_375);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_378 := PinID_4;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc Tmp_374;
    Tmp_386 := Tmp_374 + Tmp_378 * 324;
    call {:si_unique_call 592} sdv_209 := sdv_hash_774347054(Tmp_386);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    goto L45;

  L45:
    call {:si_unique_call 593} sdv_hash_648551832_sdv_special_DTOR(SubunitAddr_7);
    goto L48;

  L48:
    Tmp_373 := ntStatus_19;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    goto L45;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    ntStatus_19 := -1073741811;
    goto L48;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_421197326"} sdv_hash_421197326(actual_PdoExtension_13: int, actual_Guid: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_421197326"} sdv_hash_421197326(actual_PdoExtension_13: int, actual_Guid: int)
{
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_396: int;
  var {:pointer} Tmp_397: int;
  var {:pointer} Tmp_398: int;
  var {:pointer} PdoExtension_13: int;
  var {:pointer} Guid: int;
  var vslice_dummy_var_74: int;

  anon0:
    call {:si_unique_call 594} vslice_dummy_var_74 := __HAVOC_malloc(4);
    PdoExtension_13 := actual_PdoExtension_13;
    Guid := actual_Guid;
    call {:si_unique_call 595} Tmp_389 := __HAVOC_malloc(32);
    call {:si_unique_call 596} Tmp_396 := __HAVOC_malloc(32);
    call {:si_unique_call 597} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    havoc Tmp_389;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_398;
    assume {:nonnull} Tmp_398 != 0;
    assume Tmp_398 > 0;
    call {:si_unique_call 598} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    havoc Tmp_396;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_397;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    call {:si_unique_call 599} sdv_RtlCopyMemory(0, 0, 4);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_673615282"} sdv_hash_673615282(actual_this_27: int, actual_PinID_5: int) returns (Tmp_399: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_673615282"} sdv_hash_673615282(actual_this_27: int, actual_PinID_5: int) returns (Tmp_399: int)
{
  var {:scalar} Tmp_401: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} this_27: int;
  var {:scalar} PinID_5: int;
  var vslice_dummy_var_76: int;

  anon0:
    this_27 := actual_this_27;
    PinID_5 := actual_PinID_5;
    call {:si_unique_call 600} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_27 != 0;
    assume this_27 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Tmp_401 := PinID_5;
    assume {:nonnull} this_27 != 0;
    assume this_27 > 0;
    havoc Tmp_402;
    Tmp_403 := Tmp_402 + Tmp_401 * 324;
    assume {:nonnull} this_27 != 0;
    assume this_27 > 0;
    havoc vslice_dummy_var_76;
    call {:si_unique_call 601} Tmp_399 := sdv_hash_238556857(Tmp_403, vslice_dummy_var_76);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    Tmp_399 := -1073741811;
    goto L1;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_890537390"} sdv_hash_890537390(actual_this_28: int) returns (Tmp_404: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_890537390"} sdv_hash_890537390(actual_this_28: int) returns (Tmp_404: int)
{
  var {:scalar} sdv_211: int;
  var {:pointer} Tmp_405: int;
  var {:scalar} iDstPlug: int;
  var {:pointer} sdv_212: int;
  var {:scalar} HaveUnitPlugInfo: int;
  var {:scalar} Tmp_406: int;
  var {:pointer} OutputIrb_1: int;
  var {:pointer} sdv_216: int;
  var {:scalar} cSrcPlugs: int;
  var {:scalar} Tmp_407: int;
  var {:pointer} Tmp_408: int;
  var {:scalar} sdv_217: int;
  var {:scalar} srcAddr_3: int;
  var {:pointer} Tmp_409: int;
  var {:scalar} Irp_18: int;
  var {:scalar} Tmp_410: int;
  var {:pointer} sdv_219: int;
  var {:dopa} {:scalar} srcPlug_3: int;
  var {:scalar} sdv_220: int;
  var {:scalar} HaveSubunitPlugInfo: int;
  var {:pointer} Tmp_411: int;
  var {:scalar} sdv_222: int;
  var {:scalar} Tmp_412: int;
  var {:pointer} Tmp_413: int;
  var {:pointer} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:scalar} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:pointer} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:scalar} sdv_224: int;
  var {:pointer} Tmp_422: int;
  var {:dopa} {:scalar} bFlags_1: int;
  var {:scalar} cConnectedExtOutputPlugs: int;
  var {:pointer} sdv_226: int;
  var {:scalar} cConnectedSrcPlugs: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} sdv_228: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} sdv_229: int;
  var {:pointer} Tmp_425: int;
  var {:dopa} {:scalar} dstPlug_3: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:pointer} sdv_231: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} sdv_232: int;
  var {:scalar} c: int;
  var {:scalar} cConnectedExtInputPlugs: int;
  var {:scalar} dstAddr_3: int;
  var {:pointer} sdv_233: int;
  var {:scalar} Tmp_429: int;
  var {:scalar} sdv_234: int;
  var {:dopa} {:scalar} srcPlug_4: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} Tmp_432: int;
  var {:pointer} sdv_238: int;
  var {:scalar} sdv_239: int;
  var {:dopa} {:scalar} bFlags_2: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} sdv_241: int;
  var {:scalar} srcAddr_4: int;
  var {:pointer} Tmp_434: int;
  var {:scalar} Tmp_435: int;
  var {:scalar} Tmp_436: int;
  var {:scalar} Tmp_437: int;
  var {:dopa} {:scalar} dstPlug_4: int;
  var {:scalar} sdv_244: int;
  var {:pointer} Tmp_438: int;
  var {:scalar} Tmp_439: int;
  var {:pointer} sdv_247: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:scalar} SubunitAddr_8: int;
  var {:scalar} c_1: int;
  var {:pointer} sdv_248: int;
  var {:pointer} sdv_249: int;
  var {:pointer} pMedium_2: int;
  var {:scalar} dstAddr_4: int;
  var {:pointer} Tmp_442: int;
  var {:scalar} iSrcPlug: int;
  var {:scalar} sdv_250: int;
  var {:pointer} sdv_251: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} sdv_252: int;
  var {:pointer} Operands_4: int;
  var {:scalar} cConnectedDstPlugs: int;
  var {:scalar} HaveConnectionsInfo: int;
  var {:dopa} {:scalar} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:pointer} sdv_254: int;
  var {:scalar} sdv_255: int;
  var {:pointer} Tmp_447: int;
  var {:scalar} sdv_256: int;
  var {:pointer} sdv_257: int;
  var {:pointer} Tmp_448: int;
  var {:pointer} Tmp_449: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} Tmp_454: int;
  var {:pointer} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} sdv_259: int;
  var {:pointer} Tmp_457: int;
  var {:dopa} {:scalar} idx_11: int;
  var {:pointer} sdv_261: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} Tmp_459: int;
  var {:pointer} AvcIrb_6: int;
  var {:scalar} sdv_264: int;
  var {:pointer} Tmp_460: int;
  var {:scalar} ntStatus_20: int;
  var {:scalar} sdv_266: int;
  var {:scalar} sdv_267: int;
  var {:dopa} {:scalar} Tmp_461: int;
  var {:scalar} Tmp_462: int;
  var {:scalar} Tmp_463: int;
  var {:pointer} sdv_268: int;
  var {:pointer} sdv_269: int;
  var {:pointer} pMedium_3: int;
  var {:dopa} {:scalar} idx_12: int;
  var {:pointer} Operands_5: int;
  var {:scalar} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:pointer} sdv_272: int;
  var {:pointer} sdv_273: int;
  var {:scalar} sdv_275: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:pointer} sdv_276: int;
  var {:scalar} sdv_277: int;
  var {:scalar} cDstPlugs: int;
  var {:pointer} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} sdv_278: int;
  var {:scalar} Tmp_470: int;
  var {:pointer} sdv_279: int;
  var {:scalar} Tmp_471: int;
  var {:pointer} Tmp_472: int;
  var {:scalar} iPinID: int;
  var {:pointer} this_28: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 602} srcAddr_3 := __HAVOC_malloc(12);
    call {:si_unique_call 603} Irp_18 := __HAVOC_malloc(16);
    call {:si_unique_call 604} srcPlug_3 := __HAVOC_malloc(4);
    call {:si_unique_call 605} bFlags_1 := __HAVOC_malloc(4);
    call {:si_unique_call 606} dstPlug_3 := __HAVOC_malloc(4);
    call {:si_unique_call 607} dstAddr_3 := __HAVOC_malloc(12);
    call {:si_unique_call 608} srcPlug_4 := __HAVOC_malloc(4);
    call {:si_unique_call 609} bFlags_2 := __HAVOC_malloc(4);
    call {:si_unique_call 610} srcAddr_4 := __HAVOC_malloc(12);
    call {:si_unique_call 611} dstPlug_4 := __HAVOC_malloc(4);
    call {:si_unique_call 612} SubunitAddr_8 := __HAVOC_malloc(12);
    call {:si_unique_call 613} dstAddr_4 := __HAVOC_malloc(12);
    call {:si_unique_call 614} Tmp_445 := __HAVOC_malloc(4);
    call {:si_unique_call 615} Tmp_451 := __HAVOC_malloc(12);
    call {:si_unique_call 616} idx_11 := __HAVOC_malloc(4);
    call {:si_unique_call 617} Tmp_459 := __HAVOC_malloc(12);
    call {:si_unique_call 618} Tmp_461 := __HAVOC_malloc(4);
    call {:si_unique_call 619} idx_12 := __HAVOC_malloc(4);
    this_28 := actual_this_28;
    Tmp_437 := 0;
    Tmp_462 := 0;
    call {:si_unique_call 620} sdv_do_paged_code_check();
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_20 := 0;
    call {:si_unique_call 621} sdv_257 := sdv_hash_64962389(560);
    Tmp_428 := sdv_257;
    assume {:nonnull} Tmp_428 != 0;
    assume Tmp_428 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} Tmp_428 != 0;
    call {:si_unique_call 622} sdv_hash_265299797_sdv_special_CTOR(Tmp_428);
    goto L16;

  L16:
    AvcIrb_6 := Tmp_428;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} AvcIrb_6 != 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_409;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    havoc Tmp_416;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    havoc Tmp_424;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    havoc c_1;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_457;
    assume {:nonnull} Tmp_457 != 0;
    assume Tmp_457 > 0;
    havoc Tmp_421;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    havoc Tmp_449;
    assume {:nonnull} Tmp_449 != 0;
    assume Tmp_449 > 0;
    havoc c;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} c_1 != 0;
    goto L28;

  L28:
    assume {:nonnull} SubunitAddr_8 != 0;
    assume SubunitAddr_8 > 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_466;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    havoc Tmp_423;
    assume {:nonnull} Tmp_423 != 0;
    assume Tmp_423 > 0;
    havoc vslice_dummy_var_87;
    call {:si_unique_call 623} sdv_hash_567308675_sdv_special_CTOR(SubunitAddr_8, vslice_dummy_var_87);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    call {:si_unique_call 624} sdv_hash_1058931133_sdv_special_CTOR(Irp_18, 0);
    HaveSubunitPlugInfo := 0;
    HaveUnitPlugInfo := 0;
    HaveConnectionsInfo := 0;
    cDstPlugs := c_1;
    cSrcPlugs := c;
    call {:si_unique_call 625} sdv_264 := sdv_hash_330049800(SubunitAddr_8);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} sdv_264 != 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_432;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    havoc Tmp_408;
    assume {:nonnull} Tmp_408 != 0;
    assume Tmp_408 > 0;
    havoc vslice_dummy_var_88;
    call {:si_unique_call 626} sdv_231 := sdv_hash_507802687(AvcIrb_6, vslice_dummy_var_88);
    call {:si_unique_call 627} sdv_232 := sdv_hash_945618448(sdv_231);
    call {:si_unique_call 628} sdv_268 := sdv_hash_291696418(sdv_232);
    call {:si_unique_call 629} ntStatus_20 := sdv_hash_592377359(Irp_18, sdv_268);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} ntStatus_20 != 0;
    goto L74;

  L74:
    call {:si_unique_call 630} sdv_229 := sdv_hash_507802687(AvcIrb_6, 0);
    call {:si_unique_call 631} sdv_228 := sdv_hash_945618448(sdv_229);
    call {:si_unique_call 632} sdv_278 := sdv_hash_291696418(sdv_228);
    call {:si_unique_call 633} ntStatus_20 := sdv_hash_592377359(Irp_18, sdv_278);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} ntStatus_20 != 0;
    goto L91;

  L91:
    call {:si_unique_call 634} sdv_219 := sdv_hash_376789576(AvcIrb_6);
    call {:si_unique_call 635} sdv_233 := sdv_hash_291696418(sdv_219);
    call {:si_unique_call 636} ntStatus_20 := sdv_hash_592377359(Irp_18, sdv_233);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} ntStatus_20 == 0;
    call {:si_unique_call 637} sdv_275 := sdv_hash_818961282(AvcIrb_6);
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} sdv_275 != 0;
    call {:si_unique_call 638} sdv_217 := sdv_hash_390207871(AvcIrb_6);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} sdv_217 == 12;
    cConnectedExtInputPlugs := 0;
    cConnectedExtOutputPlugs := 0;
    cConnectedDstPlugs := 0;
    cConnectedSrcPlugs := 0;
    assume {:nonnull} idx_12 != 0;
    assume idx_12 > 0;
    Mem_T.INT4[idx_12] := 1;
    goto L121;

  L121:
    call {:si_unique_call 639} Tmp_406, Tmp_410, sdv_222, sdv_224, cConnectedExtOutputPlugs, cConnectedSrcPlugs, cConnectedExtInputPlugs, Tmp_436, Tmp_437, cConnectedDstPlugs, Tmp_454, sdv_259, sdv_267, Tmp_462, sdv_277 := sdv_hash_890537390_loop_L121(Tmp_406, Tmp_410, sdv_222, sdv_224, cConnectedExtOutputPlugs, cConnectedSrcPlugs, cConnectedExtInputPlugs, dstAddr_3, srcPlug_4, bFlags_2, srcAddr_4, Tmp_436, Tmp_437, dstPlug_4, SubunitAddr_8, cConnectedDstPlugs, Tmp_451, Tmp_454, sdv_259, Tmp_459, AvcIrb_6, sdv_267, Tmp_462, idx_12, sdv_277, this_28);
    goto L121_last;

  L121_last:
    assume {:nonnull} srcAddr_4 != 0;
    assume srcAddr_4 > 0;
    call {:si_unique_call 714} sdv_hash_948020419_sdv_special_CTOR(srcAddr_4);
    assume {:nonnull} dstAddr_3 != 0;
    assume dstAddr_3 > 0;
    call {:si_unique_call 715} sdv_hash_948020419_sdv_special_CTOR(dstAddr_3);
    call {:si_unique_call 716} sdv_224 := sdv_hash_889363889(this_28, AvcIrb_6, idx_12, bFlags_2, srcAddr_4, srcPlug_4, dstAddr_3, dstPlug_4);
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} sdv_224 != 0;
    call {:si_unique_call 640} sdv_267 := sdv_hash_986172016(srcAddr_4, SubunitAddr_8);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} sdv_267 != 0;
    cConnectedSrcPlugs := cConnectedSrcPlugs + 1;
    goto L153;

  L153:
    call {:si_unique_call 641} sdv_259 := sdv_hash_986172016(dstAddr_3, SubunitAddr_8);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} sdv_259 != 0;
    cConnectedDstPlugs := cConnectedDstPlugs + 1;
    goto L161;

  L161:
    call {:si_unique_call 642} sdv_hash_648551832_sdv_special_DTOR(dstAddr_3);
    call {:si_unique_call 643} sdv_hash_648551832_sdv_special_DTOR(srcAddr_4);
    goto L161_dummy;

  L161_dummy:
    assume false;
    return;

  anon162_Then:
    assume {:partition} sdv_259 == 0;
    call {:si_unique_call 644} sdv_hash_543516765_sdv_special_CTOR(Tmp_451, 255);
    Tmp_462 := 1;
    call {:si_unique_call 645} sdv_222 := sdv_hash_986172016(dstAddr_3, Tmp_451);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} sdv_222 != 0;
    assume {:nonnull} dstPlug_4 != 0;
    assume dstPlug_4 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[dstPlug_4], 128) != 0;
    Tmp_406 := 1;
    goto L180;

  L180:
    Tmp_454 := Tmp_406;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Tmp_462 != 0;
    Tmp_462 := 0;
    call {:si_unique_call 646} sdv_hash_648551832_sdv_special_DTOR(Tmp_451);
    goto L182;

  L182:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} Tmp_454 != 0;
    cConnectedExtOutputPlugs := cConnectedExtOutputPlugs + 1;
    goto L161;

  anon165_Then:
    assume {:partition} Tmp_454 == 0;
    goto L161;

  anon227_Then:
    assume {:partition} Tmp_462 == 0;
    goto L182;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[dstPlug_4], 128) == 0;
    goto L177;

  L177:
    Tmp_406 := 0;
    goto L180;

  anon163_Then:
    assume {:partition} sdv_222 == 0;
    goto L177;

  anon161_Then:
    assume {:partition} sdv_267 == 0;
    call {:si_unique_call 647} sdv_hash_543516765_sdv_special_CTOR(Tmp_459, 255);
    Tmp_437 := 1;
    call {:si_unique_call 648} sdv_277 := sdv_hash_986172016(srcAddr_4, Tmp_459);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} sdv_277 != 0;
    assume {:nonnull} srcPlug_4 != 0;
    assume srcPlug_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} BAND(Mem_T.INT4[srcPlug_4], 128) != 0;
    Tmp_410 := 1;
    goto L201;

  L201:
    Tmp_436 := Tmp_410;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} Tmp_437 != 0;
    Tmp_437 := 0;
    call {:si_unique_call 649} sdv_hash_648551832_sdv_special_DTOR(Tmp_459);
    goto L203;

  L203:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Tmp_436 != 0;
    cConnectedExtInputPlugs := cConnectedExtInputPlugs + 1;
    goto L153;

  anon168_Then:
    assume {:partition} Tmp_436 == 0;
    goto L153;

  anon228_Then:
    assume {:partition} Tmp_437 == 0;
    goto L203;

  anon167_Then:
    assume {:partition} BAND(Mem_T.INT4[srcPlug_4], 128) == 0;
    goto L198;

  L198:
    Tmp_410 := 0;
    goto L201;

  anon166_Then:
    assume {:partition} sdv_277 == 0;
    goto L198;

  anon160_Then:
    assume {:partition} sdv_224 == 0;
    call {:si_unique_call 650} sdv_hash_648551832_sdv_special_DTOR(dstAddr_3);
    call {:si_unique_call 651} sdv_hash_648551832_sdv_special_DTOR(srcAddr_4);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} HaveSubunitPlugInfo != 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} cConnectedDstPlugs > cDstPlugs;
    cDstPlugs := cConnectedDstPlugs;
    goto L216;

  L216:
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} cConnectedSrcPlugs > cSrcPlugs;
    cSrcPlugs := cConnectedSrcPlugs;
    goto L218;

  L218:
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} HaveUnitPlugInfo != 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto L222;

  L222:
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto L224;

  L224:
    HaveConnectionsInfo := 1;
    goto L56;

  L56:
    Tmp_430 := (cDstPlugs + cSrcPlugs) * 1;
    Tmp_407 := Tmp_430 * 96 + 4;
    call {:si_unique_call 652} sdv_273 := sdv_hash_61407646(Tmp_407);
    Tmp_468 := sdv_273;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Tmp_468 != 0;
    Tmp_444 := Tmp_468;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    Mem_T.INT4[Tmp_444] := Tmp_430;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    Tmp_439 := Mem_T.INT4[Tmp_444];
    Tmp_414 := 0;
    call {:si_unique_call 653} sdv_hash_246154148(Tmp_414, 96, Tmp_439, li2bplFunctionConstant618);
    Tmp_468 := 0;
    goto L260;

  L260:
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    iDstPlug := 0;
    iSrcPlug := 0;
    iPinID := 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} HaveConnectionsInfo != 0;
    goto L278;

  L278:
    call {:si_unique_call 654} iDstPlug, sdv_212, Tmp_429, Tmp_440, Tmp_448, iPinID, vslice_dummy_var_75 := sdv_hash_890537390_loop_L278(iDstPlug, sdv_212, Tmp_429, Tmp_440, Tmp_448, cDstPlugs, iPinID, this_28, vslice_dummy_var_75);
    goto L278_last;

  L278_last:
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} cDstPlugs > iDstPlug;
    Tmp_429 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_448;
    Tmp_440 := Tmp_448 + Tmp_429 * 324;
    call {:si_unique_call 655} sdv_212 := sdv_hash_827633206(Tmp_440, KsDstPinDescriptor);
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 656} vslice_dummy_var_75 := sdv_hash_265040478(sdv_212, iDstPlug);
    iDstPlug := iDstPlug + 1;
    iPinID := iPinID + 1;
    goto anon210_Else_dummy;

  anon210_Else_dummy:
    assume false;
    return;

  anon210_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon180_Then:
    assume {:partition} iDstPlug >= cDstPlugs;
    goto L279;

  L279:
    call {:si_unique_call 657} Tmp_405, Tmp_411, sdv_238, iSrcPlug, Tmp_464, iPinID, vslice_dummy_var_76 := sdv_hash_890537390_loop_L279(Tmp_405, cSrcPlugs, Tmp_411, sdv_238, iSrcPlug, Tmp_464, iPinID, this_28, vslice_dummy_var_76);
    goto L279_last;

  L279_last:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} cSrcPlugs <= iSrcPlug;
    assume {:nonnull} idx_11 != 0;
    assume idx_11 > 0;
    Mem_T.INT4[idx_11] := 1;
    goto L301;

  L301:
    call {:si_unique_call 658} sdv_211, sdv_220, Tmp_413, Tmp_415, Tmp_417, Tmp_418, Tmp_419, Tmp_422, Tmp_425, Tmp_426, Tmp_427, sdv_234, Tmp_431, Tmp_435, sdv_244, Tmp_438, Tmp_441, sdv_249, pMedium_2, Tmp_442, sdv_251, Tmp_455, Tmp_458, ntStatus_20, sdv_266, Tmp_463, sdv_269, pMedium_3, sdv_272, Tmp_469, Tmp_471, Tmp_472, iPinID, vslice_dummy_var_77, vslice_dummy_var_78, vslice_dummy_var_79, vslice_dummy_var_80, vslice_dummy_var_85, vslice_dummy_var_86 := sdv_hash_890537390_loop_L301(sdv_211, srcAddr_3, srcPlug_3, sdv_220, Tmp_413, Tmp_415, Tmp_417, Tmp_418, Tmp_419, Tmp_422, bFlags_1, Tmp_425, dstPlug_3, Tmp_426, Tmp_427, sdv_234, Tmp_431, Tmp_435, sdv_244, Tmp_438, Tmp_441, SubunitAddr_8, sdv_249, pMedium_2, dstAddr_4, Tmp_442, sdv_251, Tmp_445, Tmp_455, idx_11, Tmp_458, AvcIrb_6, ntStatus_20, sdv_266, Tmp_461, Tmp_463, sdv_269, pMedium_3, sdv_272, cDstPlugs, Tmp_469, Tmp_471, Tmp_472, iPinID, this_28, vslice_dummy_var_77, vslice_dummy_var_78, vslice_dummy_var_79, vslice_dummy_var_80, vslice_dummy_var_85, vslice_dummy_var_86);
    goto L301_last;

  L301_last:
    assume {:nonnull} srcAddr_3 != 0;
    assume srcAddr_3 > 0;
    call {:si_unique_call 717} sdv_hash_948020419_sdv_special_CTOR(srcAddr_3);
    assume {:nonnull} dstAddr_4 != 0;
    assume dstAddr_4 > 0;
    call {:si_unique_call 718} sdv_hash_948020419_sdv_special_CTOR(dstAddr_4);
    call {:si_unique_call 719} sdv_266 := sdv_hash_889363889(this_28, AvcIrb_6, idx_11, bFlags_1, srcAddr_3, srcPlug_3, dstAddr_4, dstPlug_3);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} sdv_266 != 0;
    call {:si_unique_call 659} sdv_234 := sdv_hash_986172016(dstAddr_4, SubunitAddr_8);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} sdv_234 != 0;
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    iPinID := Mem_T.INT4[dstPlug_3];
    assume {:nonnull} bFlags_1 != 0;
    assume bFlags_1 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} BAND(Mem_T.INT4[bFlags_1], 1) != 0;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    Mem_T.INT4[Tmp_461] := 255;
    Tmp_455 := Tmp_461;
    call {:si_unique_call 660} sdv_220 := sdv_hash_405508819(srcAddr_3, Tmp_455);
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} sdv_220 == 0;
    goto L355;

  L355:
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    call {:si_unique_call 661} pMedium_3 := sdv_hash_1062250938(this_28, srcAddr_3, Mem_T.INT4[srcPlug_3], dstAddr_4, Mem_T.INT4[dstPlug_3]);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} yogi_error != 1;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} pMedium_3 != 0;
    Tmp_435 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_472;
    Tmp_427 := Tmp_472 + Tmp_435 * 324;
    call {:si_unique_call 662} sdv_269 := sdv_hash_677052185(Tmp_427, 3);
    call {:si_unique_call 663} vslice_dummy_var_78 := sdv_hash_174130848(sdv_269, 1, pMedium_3);
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} yogi_error != 1;
    goto L349;

  L349:
    call {:si_unique_call 664} sdv_hash_648551832_sdv_special_DTOR(dstAddr_4);
    call {:si_unique_call 665} sdv_hash_648551832_sdv_special_DTOR(srcAddr_3);
    goto L349_dummy;

  L349_dummy:
    assume false;
    return;

  anon215_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon186_Then:
    assume {:partition} pMedium_3 == 0;
    ntStatus_20 := -1073741670;
    goto L349;

  anon214_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon184_Then:
    assume {:partition} sdv_220 != 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} BAND(Mem_T.INT4[srcPlug_3], 128) != 0;
    goto L355;

  anon185_Then:
    assume {:partition} BAND(Mem_T.INT4[srcPlug_3], 128) == 0;
    Tmp_471 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_419;
    Tmp_458 := Tmp_419 + Tmp_471 * 324;
    call {:si_unique_call 666} sdv_249 := sdv_hash_677052185(Tmp_458, 8);
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    call {:si_unique_call 667} vslice_dummy_var_77 := sdv_hash_859452142(sdv_249, Mem_T.INT4[srcPlug_3]);
    goto L349;

  anon213_Then:
    assume {:partition} BAND(Mem_T.INT4[bFlags_1], 1) == 0;
    Tmp_441 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_438;
    Tmp_469 := Tmp_438 + Tmp_441 * 324;
    call {:si_unique_call 668} vslice_dummy_var_85 := sdv_hash_677052185(Tmp_469, 2);
    goto L349;

  anon183_Then:
    assume {:partition} sdv_234 == 0;
    call {:si_unique_call 669} sdv_211 := sdv_hash_986172016(srcAddr_3, SubunitAddr_8);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} sdv_211 != 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    iPinID := cDstPlugs + Mem_T.INT4[srcPlug_3];
    assume {:nonnull} bFlags_1 != 0;
    assume bFlags_1 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} BAND(Mem_T.INT4[bFlags_1], 1) != 0;
    assume {:nonnull} Tmp_445 != 0;
    assume Tmp_445 > 0;
    Mem_T.INT4[Tmp_445] := 255;
    Tmp_418 := Tmp_445;
    call {:si_unique_call 670} sdv_244 := sdv_hash_405508819(dstAddr_4, Tmp_418);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} sdv_244 == 0;
    goto L389;

  L389:
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    call {:si_unique_call 671} pMedium_2 := sdv_hash_1062250938(this_28, srcAddr_3, Mem_T.INT4[srcPlug_3], dstAddr_4, Mem_T.INT4[dstPlug_3]);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} yogi_error != 1;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} pMedium_2 != 0;
    Tmp_463 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_413;
    Tmp_415 := Tmp_413 + Tmp_463 * 324;
    call {:si_unique_call 672} sdv_272 := sdv_hash_677052185(Tmp_415, 3);
    call {:si_unique_call 673} vslice_dummy_var_80 := sdv_hash_174130848(sdv_272, 1, pMedium_2);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto L349;

  anon218_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon190_Then:
    assume {:partition} pMedium_2 == 0;
    ntStatus_20 := -1073741670;
    goto L349;

  anon217_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon188_Then:
    assume {:partition} sdv_244 != 0;
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} BAND(Mem_T.INT4[dstPlug_3], 128) != 0;
    goto L389;

  anon189_Then:
    assume {:partition} BAND(Mem_T.INT4[dstPlug_3], 128) == 0;
    Tmp_426 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_431;
    Tmp_422 := Tmp_431 + Tmp_426 * 324;
    call {:si_unique_call 674} sdv_251 := sdv_hash_677052185(Tmp_422, 8);
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    call {:si_unique_call 675} vslice_dummy_var_79 := sdv_hash_859452142(sdv_251, Mem_T.INT4[dstPlug_3]);
    goto L349;

  anon216_Then:
    assume {:partition} BAND(Mem_T.INT4[bFlags_1], 1) == 0;
    Tmp_417 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_442;
    Tmp_425 := Tmp_442 + Tmp_417 * 324;
    call {:si_unique_call 676} vslice_dummy_var_86 := sdv_hash_677052185(Tmp_425, 2);
    goto L349;

  anon187_Then:
    assume {:partition} sdv_211 == 0;
    goto L349;

  anon182_Then:
    assume {:partition} sdv_266 == 0;
    call {:si_unique_call 677} sdv_hash_648551832_sdv_special_DTOR(dstAddr_4);
    call {:si_unique_call 678} sdv_hash_648551832_sdv_special_DTOR(srcAddr_3);
    goto L409;

  L409:
    call {:si_unique_call 679} sdv_hash_428960233_sdv_special_DTOR(Irp_18);
    call {:si_unique_call 680} sdv_hash_648551832_sdv_special_DTOR(SubunitAddr_8);
    goto L415;

  L415:
    Tmp_420 := AvcIrb_6;
    Tmp_460 := Tmp_420;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} Tmp_460 != 0;
    goto L419;

  L419:
    call {:si_unique_call 681} sdv_hash_890537390_loop_L419();
    goto L419_last;

  L419_last:
    goto L419_dummy;

  L419_dummy:
    assume false;
    return;

  anon219_Then:
    assume {:partition} Tmp_460 == 0;
    goto L418;

  L418:
    Tmp_404 := ntStatus_20;
    goto LM2;

  anon212_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon181_Then:
    assume {:partition} iSrcPlug < cSrcPlugs;
    Tmp_464 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_405;
    Tmp_411 := Tmp_405 + Tmp_464 * 324;
    call {:si_unique_call 682} sdv_238 := sdv_hash_827633206(Tmp_411, KsSrcPinDescriptor);
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 683} vslice_dummy_var_76 := sdv_hash_265040478(sdv_238, iSrcPlug);
    iSrcPlug := iSrcPlug + 1;
    iPinID := iPinID + 1;
    goto anon211_Else_dummy;

  anon211_Else_dummy:
    assume false;
    return;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    assume {:partition} HaveConnectionsInfo == 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} HaveSubunitPlugInfo != 0;
    OutputIrb_1 := AvcIrb_6;
    goto L425;

  L425:
    call {:si_unique_call 684} iDstPlug, sdv_216, Tmp_434, sdv_256, Tmp_450, Tmp_456, sdv_261, ntStatus_20, iPinID, vslice_dummy_var_82 := sdv_hash_890537390_loop_L425(iDstPlug, OutputIrb_1, sdv_216, Irp_18, Tmp_434, SubunitAddr_8, sdv_256, Tmp_450, Tmp_456, sdv_261, AvcIrb_6, ntStatus_20, cDstPlugs, iPinID, this_28, vslice_dummy_var_82);
    goto L425_last;

  L425_last:
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} ntStatus_20 != 0;
    goto L427;

  L427:
    call {:si_unique_call 685} Tmp_412, sdv_239, Tmp_433, sdv_248, iSrcPlug, Tmp_447, ntStatus_20, sdv_276, iPinID, vslice_dummy_var_81 := sdv_hash_890537390_loop_L427(OutputIrb_1, cSrcPlugs, Irp_18, Tmp_412, sdv_239, Tmp_433, SubunitAddr_8, sdv_248, iSrcPlug, Tmp_447, AvcIrb_6, ntStatus_20, sdv_276, iPinID, this_28, vslice_dummy_var_81);
    goto L427_last;

  L427_last:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} ntStatus_20 == 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} cSrcPlugs > iSrcPlug;
    Tmp_412 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_447;
    Tmp_433 := Tmp_447 + Tmp_412 * 324;
    call {:si_unique_call 686} sdv_248 := sdv_hash_827633206(Tmp_433, KsSrcPinDescriptor);
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 687} vslice_dummy_var_81 := sdv_hash_265040478(sdv_248, iSrcPlug);
    call {:si_unique_call 688} ntStatus_20 := sdv_hash_802132520(AvcIrb_6, SubunitAddr_8, iSrcPlug, OutputIrb_1);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} ntStatus_20 >= 0;
    call {:si_unique_call 689} sdv_276 := sdv_hash_291696418(OutputIrb_1);
    call {:si_unique_call 690} ntStatus_20 := sdv_hash_592377359(Irp_18, sdv_276);
    goto L441;

  L441:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} ntStatus_20 != 0;
    goto L452;

  L452:
    iSrcPlug := iSrcPlug + 1;
    iPinID := iPinID + 1;
    goto L452_dummy;

  L452_dummy:
    assume false;
    return;

  anon197_Then:
    assume {:partition} ntStatus_20 == 0;
    call {:si_unique_call 691} sdv_239 := sdv_hash_390207871(AvcIrb_6);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} sdv_239 == 12;
    call {:si_unique_call 692} ntStatus_20 := sdv_hash_994092636(this_28, AvcIrb_6, iPinID);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    goto L452;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon198_Then:
    assume {:partition} sdv_239 != 12;
    goto L452;

  anon196_Then:
    assume {:partition} 0 > ntStatus_20;
    goto L441;

  anon220_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon195_Then:
    assume {:partition} iSrcPlug >= cSrcPlugs;
    goto L409;

  anon194_Then:
    assume {:partition} ntStatus_20 != 0;
    goto L409;

  anon192_Then:
    assume {:partition} ntStatus_20 == 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} cDstPlugs > iDstPlug;
    Tmp_456 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_434;
    Tmp_450 := Tmp_434 + Tmp_456 * 324;
    call {:si_unique_call 693} sdv_216 := sdv_hash_827633206(Tmp_450, KsDstPinDescriptor);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 694} vslice_dummy_var_82 := sdv_hash_265040478(sdv_216, iDstPlug);
    call {:si_unique_call 695} ntStatus_20 := sdv_hash_575386943(AvcIrb_6, SubunitAddr_8, iDstPlug, OutputIrb_1);
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} ntStatus_20 >= 0;
    call {:si_unique_call 696} sdv_261 := sdv_hash_291696418(OutputIrb_1);
    call {:si_unique_call 697} ntStatus_20 := sdv_hash_592377359(Irp_18, sdv_261);
    goto L471;

  L471:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} ntStatus_20 != 0;
    goto L482;

  L482:
    iDstPlug := iDstPlug + 1;
    iPinID := iPinID + 1;
    goto L482_dummy;

  L482_dummy:
    assume false;
    return;

  anon200_Then:
    assume {:partition} ntStatus_20 == 0;
    call {:si_unique_call 698} sdv_256 := sdv_hash_390207871(AvcIrb_6);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} sdv_256 == 12;
    call {:si_unique_call 699} ntStatus_20 := sdv_hash_994092636(this_28, AvcIrb_6, iPinID);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    goto L482;

  anon223_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    assume {:partition} sdv_256 != 12;
    goto L482;

  anon199_Then:
    assume {:partition} 0 > ntStatus_20;
    goto L471;

  anon222_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon193_Then:
    assume {:partition} iDstPlug >= cDstPlugs;
    goto L427;

  anon179_Then:
    assume {:partition} HaveSubunitPlugInfo == 0;
    goto L422;

  L422:
    call {:si_unique_call 700} iDstPlug, sdv_226, sdv_247, Tmp_446, Tmp_465, Tmp_467, iPinID, vslice_dummy_var_83 := sdv_hash_890537390_loop_L422(iDstPlug, sdv_226, sdv_247, Tmp_446, Tmp_465, Tmp_467, cDstPlugs, iPinID, this_28, vslice_dummy_var_83);
    goto L422_last;

  L422_last:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} cDstPlugs > iDstPlug;
    Tmp_467 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_446;
    Tmp_465 := Tmp_446 + Tmp_467 * 324;
    call {:si_unique_call 701} sdv_226 := sdv_hash_827633206(Tmp_465, KsDstPinDescriptor);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 702} sdv_247 := sdv_hash_859452142(sdv_226, iDstPlug);
    call {:si_unique_call 703} vslice_dummy_var_83 := sdv_hash_677052185(sdv_247, 4);
    iDstPlug := iDstPlug + 1;
    iPinID := iPinID + 1;
    goto anon224_Else_dummy;

  anon224_Else_dummy:
    assume false;
    return;

  anon224_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    assume {:partition} iDstPlug >= cDstPlugs;
    goto L489;

  L489:
    call {:si_unique_call 704} iSrcPlug, Tmp_443, sdv_254, Tmp_452, Tmp_470, sdv_279, iPinID, vslice_dummy_var_84 := sdv_hash_890537390_loop_L489(cSrcPlugs, iSrcPlug, Tmp_443, sdv_254, Tmp_452, Tmp_470, sdv_279, iPinID, this_28, vslice_dummy_var_84);
    goto L489_last;

  L489_last:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} cSrcPlugs > iSrcPlug;
    Tmp_470 := iPinID;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    havoc Tmp_452;
    Tmp_443 := Tmp_452 + Tmp_470 * 324;
    call {:si_unique_call 705} sdv_254 := sdv_hash_827633206(Tmp_443, KsSrcPinDescriptor);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 706} sdv_279 := sdv_hash_859452142(sdv_254, iSrcPlug);
    call {:si_unique_call 707} vslice_dummy_var_84 := sdv_hash_677052185(sdv_279, 4);
    iSrcPlug := iSrcPlug + 1;
    iPinID := iPinID + 1;
    goto anon225_Else_dummy;

  anon225_Else_dummy:
    assume false;
    return;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon202_Then:
    assume {:partition} iSrcPlug >= cSrcPlugs;
    goto L409;

  anon208_Then:
    ntStatus_20 := -1073741670;
    goto L409;

  anon207_Then:
    assume {:partition} Tmp_468 == 0;
    goto L260;

  anon174_Then:
    goto L224;

  anon173_Then:
    goto L222;

  anon172_Then:
    assume {:partition} HaveUnitPlugInfo == 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    goto L224;

  anon171_Then:
    assume {:partition} cSrcPlugs >= cConnectedSrcPlugs;
    goto L218;

  anon170_Then:
    assume {:partition} cDstPlugs >= cConnectedDstPlugs;
    goto L216;

  anon169_Then:
    assume {:partition} HaveSubunitPlugInfo == 0;
    cDstPlugs := cConnectedDstPlugs;
    cSrcPlugs := cConnectedSrcPlugs;
    goto L218;

  anon226_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon159_Then:
    assume {:partition} sdv_217 != 12;
    goto L56;

  anon158_Then:
    assume {:partition} sdv_275 == 0;
    goto L56;

  anon157_Then:
    assume {:partition} ntStatus_20 != 0;
    goto L56;

  anon156_Then:
    assume {:partition} ntStatus_20 == 0;
    call {:si_unique_call 708} sdv_250 := sdv_hash_818961282(AvcIrb_6);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} sdv_250 != 0;
    call {:si_unique_call 709} sdv_255 := sdv_hash_390207871(AvcIrb_6);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} sdv_255 == 12;
    call {:si_unique_call 710} Operands_5 := sdv_hash_901487196(AvcIrb_6);
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    HaveUnitPlugInfo := 1;
    goto L91;

  anon176_Then:
    assume {:partition} sdv_255 != 12;
    goto L91;

  anon175_Then:
    assume {:partition} sdv_250 == 0;
    goto L91;

  anon155_Then:
    assume {:partition} ntStatus_20 == 0;
    call {:si_unique_call 711} sdv_241 := sdv_hash_818961282(AvcIrb_6);
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} sdv_241 != 0;
    call {:si_unique_call 712} sdv_252 := sdv_hash_390207871(AvcIrb_6);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} sdv_252 == 12;
    call {:si_unique_call 713} Operands_4 := sdv_hash_901487196(AvcIrb_6);
    assume {:nonnull} Operands_4 != 0;
    assume Operands_4 > 0;
    cDstPlugs := Mem_T.INT4[Operands_4];
    assume {:nonnull} Operands_4 != 0;
    assume Operands_4 > 0;
    cSrcPlugs := Mem_T.INT4[Operands_4];
    HaveSubunitPlugInfo := 1;
    goto L74;

  anon178_Then:
    assume {:partition} sdv_252 != 12;
    goto L74;

  anon177_Then:
    assume {:partition} sdv_241 == 0;
    goto L74;

  anon154_Then:
    assume {:partition} sdv_264 == 0;
    goto L56;

  anon206_Then:
    assume {:partition} c_1 == 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} c == 0;
    goto L415;

  anon153_Then:
    assume {:partition} c != 0;
    goto L28;

  anon205_Then:
    assume {:partition} AvcIrb_6 == 0;
    ntStatus_20 := -1073741670;
    goto L418;

  anon204_Then:
    assume {:partition} Tmp_428 == 0;
    goto L16;

  anon203_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_677052185"} sdv_hash_677052185(actual_this_29: int, actual_flags: int) returns (Tmp_474: int);
  free ensures {:va_keep} Tmp_474 == actual_this_29;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_677052185"} sdv_hash_677052185(actual_this_29: int, actual_flags: int) returns (Tmp_474: int)
{
  var {:pointer} this_29: int;
  var {:scalar} flags: int;

  anon0:
    this_29 := actual_this_29;
    flags := actual_flags;
    assume {:nonnull} this_29 != 0;
    assume this_29 > 0;
    Tmp_474 := this_29;
    return;
}



procedure {:origName "sdv_hash_908374888"} sdv_hash_908374888(actual_this_30: int) returns (Tmp_476: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_908374888"} sdv_hash_908374888(actual_this_30: int) returns (Tmp_476: int)
{
  var {:pointer} this_30: int;

  anon0:
    this_30 := actual_this_30;
    assume {:nonnull} this_30 != 0;
    assume this_30 > 0;
    havoc Tmp_476;
    return;
}



procedure {:origName "sdv_hash_464001803"} sdv_hash_464001803(actual_this_31: int, actual_PinID_6: int, actual_PinDescriptor: int) returns (Tmp_478: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_464001803"} sdv_hash_464001803(actual_this_31: int, actual_PinID_6: int, actual_PinDescriptor: int) returns (Tmp_478: int)
{
  var {:pointer} Tmp_480: int;
  var {:pointer} Tmp_481: int;
  var {:scalar} Tmp_482: int;
  var {:pointer} this_31: int;
  var {:scalar} PinID_6: int;
  var {:pointer} PinDescriptor: int;

  anon0:
    this_31 := actual_this_31;
    PinID_6 := actual_PinID_6;
    PinDescriptor := actual_PinDescriptor;
    call {:si_unique_call 720} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} this_31 != 0;
    assume this_31 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_482 := PinID_6;
    assume {:nonnull} this_31 != 0;
    assume this_31 > 0;
    havoc Tmp_481;
    Tmp_480 := Tmp_481 + Tmp_482 * 324;
    call {:si_unique_call 721} sdv_hash_94547877(PinDescriptor, Tmp_480);
    Tmp_478 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    Tmp_478 := -1073741811;
    goto L1;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_hash_238556857"} sdv_hash_238556857(actual_this_32: int, actual_PdoExtension_14: int) returns (Tmp_483: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_238556857"} sdv_hash_238556857(actual_this_32: int, actual_PdoExtension_14: int) returns (Tmp_483: int)
{
  var {:pointer} OutputIrb_2: int;
  var {:scalar} Irp_19: int;
  var {:pointer} sdv_280: int;
  var {:scalar} sdv_282: int;
  var {:pointer} AvcIrb_7: int;
  var {:scalar} ntStatus_21: int;
  var {:pointer} sdv_283: int;
  var {:pointer} Tmp_484: int;
  var {:scalar} sdv_285: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} this_32: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;

  anon0:
    call {:si_unique_call 722} Irp_19 := __HAVOC_malloc(16);
    this_32 := actual_this_32;
    call {:si_unique_call 723} sdv_do_paged_code_check();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    ntStatus_21 := 0;
    assume {:nonnull} this_32 != 0;
    assume this_32 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 724} sdv_280 := sdv_hash_64962389(560);
    Tmp_485 := sdv_280;
    assume {:nonnull} Tmp_485 != 0;
    assume Tmp_485 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Tmp_485 != 0;
    call {:si_unique_call 725} sdv_hash_265299797_sdv_special_CTOR(Tmp_485);
    goto L16;

  L16:
    AvcIrb_7 := Tmp_485;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} AvcIrb_7 != 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    call {:si_unique_call 726} sdv_hash_1058931133_sdv_special_CTOR(Irp_19, 0);
    OutputIrb_2 := AvcIrb_7;
    assume {:nonnull} this_32 != 0;
    assume this_32 > 0;
    havoc vslice_dummy_var_89;
    havoc vslice_dummy_var_90;
    call {:si_unique_call 727} sdv_282 := sdv_hash_882477790(AvcIrb_7, m_SrcAddr_CKsPinDescriptor(this_32), vslice_dummy_var_89, m_DstAddr_CKsPinDescriptor(this_32), vslice_dummy_var_90, OutputIrb_2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_282 >= 0;
    call {:si_unique_call 728} sdv_283 := sdv_hash_798100910(OutputIrb_2);
    call {:si_unique_call 729} ntStatus_21 := sdv_hash_592377359(Irp_19, sdv_283);
    goto L35;

  L35:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} ntStatus_21 != 0;
    goto L46;

  L46:
    Tmp_484 := AvcIrb_7;
    Tmp_486 := Tmp_484;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Tmp_486 != 0;
    goto L52;

  L52:
    call {:si_unique_call 730} sdv_hash_238556857_loop_L52();
    goto L52_last;

  L52_last:
    goto L52_dummy;

  L52_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} Tmp_486 == 0;
    call {:si_unique_call 731} sdv_hash_428960233_sdv_special_DTOR(Irp_19);
    goto L9;

  L9:
    Tmp_483 := ntStatus_21;
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} ntStatus_21 == 0;
    call {:si_unique_call 732} sdv_285 := sdv_hash_390207871(AvcIrb_7);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_285 == 9;
    assume {:nonnull} this_32 != 0;
    assume this_32 > 0;
    goto L46;

  anon19_Then:
    assume {:partition} sdv_285 != 9;
    goto L46;

  anon17_Then:
    assume {:partition} 0 > sdv_282;
    goto L35;

  anon23_Then:
    assume {:partition} AvcIrb_7 == 0;
    ntStatus_21 := -1073741670;
    goto L9;

  anon22_Then:
    assume {:partition} Tmp_485 == 0;
    goto L16;

  anon21_Then:
    goto L9;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "SLIC_sdv_do_paged_code_check_entry"} {:osmodel} SLIC_sdv_do_paged_code_check_entry(actual_caller: int);
  modifies yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_do_paged_code_check_entry"} {:osmodel} SLIC_sdv_do_paged_code_check_entry(actual_caller: int)
{
  var {:pointer} caller: int;

  anon0:
    caller := actual_caller;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 2 <= sdv_irql_current;
    call {:si_unique_call 733} SLIC_ABORT_1_0(caller);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} sdv_irql_current < 2;
    goto L2;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init12"} _sdv_init12()
{

  anon0:
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_1: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_1: int)
{
  var {:pointer} caller_1: int;

  anon0:
    caller_1 := actual_caller_1;
    call {:si_unique_call 734} SLIC_ERROR_ROUTINE(strConst__li2bpl1);
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_87: int;

  anon0:
    call {:si_unique_call 735} vslice_dummy_var_87 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KsPropertyHandleDrmSetContentId"} KsPropertyHandleDrmSetContentId(actual_Irp_20: int, actual_pDrmSetContentId: int) returns (Tmp_490: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KsPropertyHandleDrmSetContentId"} KsPropertyHandleDrmSetContentId(actual_Irp_20: int, actual_pDrmSetContentId: int) returns (Tmp_490: int)
{
  var {:scalar} AlignedBufferLength: int;
  var {:scalar} Flags_1: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:scalar} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} IrpStack_4: int;
  var {:pointer} UserBuffer: int;
  var {:scalar} OutputBufferLength: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Property: int;
  var {:pointer} Tmp_498: int;
  var {:scalar} InputBufferLength: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Irp_20: int;
  var {:scalar} pDrmSetContentId: int;
  var boogieTmp: int;

  anon0:
    Irp_20 := actual_Irp_20;
    pDrmSetContentId := actual_pDrmSetContentId;
    call {:si_unique_call 736} sdv_do_paged_code_check();
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_490 := -1073741808;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    call {:si_unique_call 737} IrpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    havoc InputBufferLength;
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    havoc OutputBufferLength;
    AlignedBufferLength := BAND(OutputBufferLength + 7, BNOT(BOR(BOR(1, 2), 4)));
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L24;

  L24:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} OutputBufferLength != 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc UserBuffer;
    goto L27;

  L27:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc Property;
    assume {:nonnull} Property != 0;
    assume Property > 0;
    havoc Flags_1;
    assume {:nonnull} Property != 0;
    assume Property > 0;
    Tmp_499 := Set_KSIDENTIFIER(Property);
    Tmp_495 := KSPROPSETID_DrmAudioStream;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.INT4[Tmp_499] == Mem_T.INT4[Tmp_495];
    assume {:nonnull} Property != 0;
    assume Property > 0;
    Tmp_492 := Set_KSIDENTIFIER(Property);
    Tmp_496 := KSPROPSETID_DrmAudioStream;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.INT4[Tmp_492] == Mem_T.INT4[Tmp_496];
    assume {:nonnull} Property != 0;
    assume Property > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    Tmp_490 := -1073741275;
    goto L1;

  anon44_Then:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} 2 != Flags_1;
    Tmp_490 := -1073741822;
    goto L1;

  anon45_Then:
    assume {:partition} 2 == Flags_1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} 56 > InputBufferLength;
    goto L38;

  L38:
    Tmp_490 := -1073741789;
    goto L1;

  anon46_Then:
    assume {:partition} InputBufferLength >= 56;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} 16 <= OutputBufferLength;
    assume {:IndirectCall} true;
    assume pDrmSetContentId == li2bplFunctionConstant286;
    call {:si_unique_call 738} Tmp_490 := Avc_SetContentId(Irp_20, Property, UserBuffer);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon47_Then:
    assume {:partition} OutputBufferLength < 16;
    goto L38;

  anon58_Then:
    assume {:partition} Mem_T.INT4[Tmp_492] != Mem_T.INT4[Tmp_496];
    goto L30;

  L30:
    Tmp_490 := -1073741264;
    goto L1;

  anon57_Then:
    assume {:partition} Mem_T.INT4[Tmp_499] != Mem_T.INT4[Tmp_495];
    goto L30;

  anon43_Then:
    assume {:partition} OutputBufferLength == 0;
    UserBuffer := 0;
    goto L27;

  anon56_Then:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} 24 > InputBufferLength;
    goto L44;

  L44:
    Tmp_490 := -1073741306;
    goto L1;

  anon42_Then:
    assume {:partition} InputBufferLength >= 24;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} OutputBufferLength <= AlignedBufferLength;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} AlignedBufferLength <= AlignedBufferLength + InputBufferLength;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 739} ProbeForRead(0, InputBufferLength, 1);
    goto L47;

  L47:
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    havoc Flags_1;
    Tmp_494 := AlignedBufferLength + InputBufferLength;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 740} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, Tmp_494, -261074101);
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 741} sdv_RtlCopyMemory(0, 0, InputBufferLength);
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} 2 == Flags_1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} OutputBufferLength != 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 742} ProbeForRead(0, OutputBufferLength, 1);
    goto L72;

  L72:
    call {:si_unique_call 743} sdv_RtlCopyMemory(0, 0, OutputBufferLength);
    goto L62;

  L62:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_490 := -1073741670;
    goto L1;

  anon52_Then:
    goto L24;

  anon54_Then:
    goto L72;

  anon53_Then:
    assume {:partition} OutputBufferLength == 0;
    goto L62;

  anon60_Then:
    assume {:partition} 2 != Flags_1;
    goto L62;

  anon51_Then:
    goto L62;

  anon50_Then:
    goto L47;

  anon49_Then:
    assume {:partition} AlignedBufferLength + InputBufferLength < AlignedBufferLength;
    goto L44;

  anon48_Then:
    assume {:partition} AlignedBufferLength < OutputBufferLength;
    goto L44;

  anon55_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_296: int, actual_sdv_297: int) returns (Tmp_504: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_296: int, actual_sdv_297: int) returns (Tmp_504: int)
{
  var {:scalar} sdv_298: int;

  anon0:
    call {:si_unique_call 744} Tmp_504 := __HAVOC_malloc(4);
    call {:si_unique_call 745} sdv_298 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    assume {:nonnull} sdv_298 != 0;
    assume sdv_298 > 0;
    Mem_T.INT4[Tmp_504] := Mem_T.INT4[sdv_298];
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 746} vslice_dummy_var_88 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 747} vslice_dummy_var_89 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_90: int;

  anon0:
    call {:si_unique_call 748} vslice_dummy_var_90 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_514: int);
  free ensures {:va_keep} Tmp_514 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_514: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_514 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p_4: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p_4: int)
{
  var {:pointer} p_4: int;
  var vslice_dummy_var_91: int;

  anon0:
    call {:si_unique_call 749} vslice_dummy_var_91 := __HAVOC_malloc(4);
    p_4 := actual_p_4;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p_4 != 0;
    assume p_4 > 0;
    Mem_T.INT4[p_4] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_518: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_518: int)
{
  var {:scalar} status: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status := 0;
    call {:si_unique_call 750} sdv_stub_add_begin();
    call {:si_unique_call 751} status := Avc_PnpAddDevice(p1, p2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 752} sdv_stub_add_end();
    Tmp_518 := status;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_520: int);
  free ensures {:va_keep} Tmp_520 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_520: int)
{

  anon0:
    Tmp_520 := 1;
    return;
}



procedure {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end()
{
  var vslice_dummy_var_92: int;

  anon0:
    call {:si_unique_call 753} vslice_dummy_var_92 := __HAVOC_malloc(4);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_524: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_524 == 1 || Tmp_524 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_524: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 754} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_524 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_524 := 0;
    goto L1;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_93: int;

  anon0:
    call {:si_unique_call 755} vslice_dummy_var_93 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags_2: int, actual_Size: int, actual_Tag: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags_2: int, actual_Size: int, actual_Tag: int, actual_Depth: int)
{
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 756} vslice_dummy_var_94 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_530: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_530: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_530 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_530 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_530 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_13: int) returns (Tmp_532: int);
  free ensures {:va_keep} Tmp_532 == -1073741824 || Tmp_532 == -1073741771 || Tmp_532 == -1073741670 || Tmp_532 == -1073741823 || Tmp_532 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_13: int) returns (Tmp_532: int)
{
  var {:pointer} DeviceObject_13: int;

  anon0:
    DeviceObject_13 := actual_DeviceObject_13;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    Tmp_532 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    Tmp_532 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    Tmp_532 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    Tmp_532 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    goto L21;

  L21:
    Tmp_532 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context_2: int)
{
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 757} vslice_dummy_var_95 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 758} vslice_dummy_var_96 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_538: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_538: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_538 := r;
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_540: int);
  free ensures {:va_keep} Tmp_540 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_540: int)
{

  anon0:
    Tmp_540 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 759} vslice_dummy_var_97 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_2: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_2: int, actual_pirp_4: int)
{
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 760} vslice_dummy_var_98 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_546: int);
  free ensures {:va_keep} Tmp_546 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_546: int)
{

  anon0:
    Tmp_546 := 1;
    return;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_3: int, actual_Environment: int) returns (Tmp_548: int);
  free ensures {:va_keep} Tmp_548 == 0 || Tmp_548 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_3: int, actual_Environment: int) returns (Tmp_548: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_548 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_548 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 761} vslice_dummy_var_99 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_552: int);
  free ensures {:va_keep} Tmp_552 == 0 || Tmp_552 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_552: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_552 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_552 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} sdv_311: int;
  var {:scalar} u: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} sdv_331: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;

  anon0:
    call {:si_unique_call 762} vslice_dummy_var_100 := __HAVOC_malloc(4);
    call {:si_unique_call 763} u := __HAVOC_malloc(12);
    call {:si_unique_call 764} sdv_331 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 765} sdv_311 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 766} vslice_dummy_var_101 := sdv_CheckDpcRoutines();
    call {:si_unique_call 767} vslice_dummy_var_102 := sdv_CheckIsrRoutines();
    call {:si_unique_call 768} vslice_dummy_var_103 := sdv_CheckCancelRoutines();
    call {:si_unique_call 769} vslice_dummy_var_104 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 770} vslice_dummy_var_105 := sdv_IoCompletionRoutines();
    call {:si_unique_call 771} vslice_dummy_var_106 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 772} vslice_dummy_var_107 := sdv_CheckAddDevice();
    call {:si_unique_call 773} vslice_dummy_var_108 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 774} vslice_dummy_var_109 := sdv_CheckIrpMjPower();
    call {:si_unique_call 775} vslice_dummy_var_110 := sdv_CheckDriverUnload();
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon286_Then, anon286_Else;

  anon286_Else:
    goto anon285_Then, anon285_Else;

  anon285_Else:
    goto anon284_Then, anon284_Else;

  anon284_Else:
    goto anon283_Then, anon283_Else;

  anon283_Else:
    goto anon282_Then, anon282_Else;

  anon282_Else:
    goto anon281_Then, anon281_Else;

  anon281_Else:
    goto anon280_Then, anon280_Else;

  anon280_Else:
    goto anon279_Then, anon279_Else;

  anon279_Else:
    goto anon278_Then, anon278_Else;

  anon278_Else:
    goto anon277_Then, anon277_Else;

  anon277_Else:
    goto anon276_Then, anon276_Else;

  anon276_Else:
    goto anon275_Then, anon275_Else;

  anon275_Else:
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto anon273_Then, anon273_Else;

  anon273_Else:
    goto anon272_Then, anon272_Else;

  anon272_Else:
    goto anon271_Then, anon271_Else;

  anon271_Else:
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    goto anon204_Then, anon204_Else;

  anon204_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    call {:si_unique_call 776} sdv_RunUnload(sdv_driver_object);
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon291_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon198_Then:
    goto L1;

  anon199_Then:
    call {:si_unique_call 777} vslice_dummy_var_112 := sdv_RunRemoveDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon290_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon200_Then:
    call {:si_unique_call 778} sdv_stub_driver_init();
    call {:si_unique_call 779} vslice_dummy_var_113 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon289_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    call {:si_unique_call 780} vslice_dummy_var_111 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon288_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon202_Then:
    call {:si_unique_call 781} vslice_dummy_var_122 := DriverEntry(sdv_driver_object, u);
    goto L1;

  anon203_Then:
    goto L1;

  anon204_Then:
    goto L1;

  anon205_Then:
    goto L1;

  anon206_Then:
    goto L1;

  anon207_Then:
    goto L1;

  anon208_Then:
    goto L1;

  anon209_Then:
    goto L1;

  anon210_Then:
    goto L1;

  anon211_Then:
    goto L1;

  anon212_Then:
    goto L1;

  anon213_Then:
    goto L1;

  anon214_Then:
    goto L1;

  anon215_Then:
    goto L1;

  anon216_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon218_Then:
    goto L1;

  anon219_Then:
    goto L1;

  anon220_Then:
    goto L1;

  anon221_Then:
    goto L1;

  anon222_Then:
    goto L1;

  anon223_Then:
    goto L1;

  anon224_Then:
    goto L1;

  anon225_Then:
    goto L1;

  anon226_Then:
    goto L1;

  anon227_Then:
    goto L1;

  anon228_Then:
    goto L1;

  anon229_Then:
    goto L1;

  anon230_Then:
    goto L1;

  anon231_Then:
    goto L1;

  anon232_Then:
    goto L1;

  anon233_Then:
    goto L1;

  anon234_Then:
    goto L1;

  anon235_Then:
    goto L1;

  anon236_Then:
    goto L1;

  anon237_Then:
    goto L1;

  anon238_Then:
    goto L1;

  anon239_Then:
    goto L1;

  anon240_Then:
    goto L1;

  anon241_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon243_Then:
    goto L1;

  anon244_Then:
    goto L1;

  anon245_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 782} vslice_dummy_var_121 := sdv_hash_664127497(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon246_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 783} vslice_dummy_var_120 := Avc_SynchCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon247_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 784} vslice_dummy_var_119 := Avc_FDO_PowerComplete(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon248_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 785} vslice_dummy_var_118 := AvcResponseCompletion_sdv_static_function_2(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon249_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 786} vslice_dummy_var_117 := AvcRequestCompletion_sdv_static_function_2(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon250_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 787} vslice_dummy_var_116 := AvcProcessSendResponseCR_sdv_static_function_2(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon251_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 788} vslice_dummy_var_115 := AvcLocalResponseCompletion_sdv_static_function_2(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon252_Then:
    goto L1;

  anon253_Then:
    goto L1;

  anon254_Then:
    goto L1;

  anon255_Then:
    goto L1;

  anon256_Then:
    goto L1;

  anon257_Then:
    goto L1;

  anon258_Then:
    call {:si_unique_call 789} Tmp_555 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_555] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 790} IoAcquireCancelSpinLock(Tmp_555);
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_555];
    call {:si_unique_call 791} AvcCancelRoutine_sdv_static_function_2(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    goto L1;

  anon259_Then:
    goto L1;

  anon260_Then:
    goto L1;

  anon261_Then:
    goto L1;

  anon262_Then:
    goto L1;

  anon263_Then:
    goto L1;

  anon264_Then:
    goto L1;

  anon265_Then:
    goto L1;

  anon266_Then:
    goto L1;

  anon267_Then:
    goto L1;

  anon268_Then:
    goto L1;

  anon269_Then:
    goto L1;

  anon270_Then:
    goto L1;

  anon271_Then:
    goto L1;

  anon272_Then:
    goto L1;

  anon273_Then:
    goto L1;

  anon274_Then:
    goto L1;

  anon275_Then:
    goto L1;

  anon276_Then:
    goto L1;

  anon277_Then:
    goto L1;

  anon278_Then:
    goto L1;

  anon279_Then:
    goto L1;

  anon280_Then:
    goto L1;

  anon281_Then:
    goto L1;

  anon282_Then:
    goto L1;

  anon283_Then:
    goto L1;

  anon284_Then:
    goto L1;

  anon285_Then:
    goto L1;

  anon286_Then:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} sdv_311 != 0;
    call {:si_unique_call 792} sdv_stub_driver_init();
    call {:si_unique_call 793} sdv_RunStartIo(0, 0);
    goto L1;

  anon197_Then:
    assume {:partition} sdv_311 == 0;
    goto L1;

  anon195_Then:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} sdv_331 != 0;
    call {:si_unique_call 794} sdv_stub_driver_init();
    call {:si_unique_call 795} vslice_dummy_var_114 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon287_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon196_Then:
    assume {:partition} sdv_331 == 0;
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_556: int);
  free ensures {:va_keep} Tmp_556 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_556: int)
{

  anon0:
    Tmp_556 := 1;
    return;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_1: int) returns (Tmp_558: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_1: int) returns (Tmp_558: int)
{
  var {:pointer} sdv_348: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 796} sdv_348 := __HAVOC_malloc(NumberOfBytes);
    Tmp_558 := sdv_348;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_558 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_560: int);
  free ensures {:va_keep} Tmp_560 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_560: int)
{

  anon0:
    Tmp_560 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_562: int);
  free ensures {:va_keep} Tmp_562 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_562: int)
{

  anon0:
    Tmp_562 := 0;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_14: int, actual_Irp_21: int) returns (Tmp_564: int);
  free ensures {:va_keep} Tmp_564 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_14: int, actual_Irp_21: int) returns (Tmp_564: int)
{
  var {:scalar} status_2: int;
  var {:pointer} Irp_21: int;

  anon0:
    Irp_21 := actual_Irp_21;
    status_2 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  L25:
    Tmp_564 := status_2;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L36;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_15: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_15: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 797} State := __HAVOC_malloc(8);
    call {:si_unique_call 798} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 799} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_567: int);
  free ensures {:va_keep} Tmp_567 == 1 || Tmp_567 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_567: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_567 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_567 := 0;
    goto L1;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_4: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_4: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_4: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_123: int;

  anon0:
    call {:si_unique_call 800} vslice_dummy_var_123 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_4 := actual_Context_4;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 801} irpSp := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 802} vslice_dummy_var_124 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 1;
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_125: int;

  anon0:
    call {:si_unique_call 803} vslice_dummy_var_125 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_9: int) returns (Tmp_575: int);
  free ensures {:va_keep} Tmp_575 == 1 || Tmp_575 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_9: int) returns (Tmp_575: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_575 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_575 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_577: int);
  free ensures {:va_keep} Tmp_577 == 0 || Tmp_577 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_577: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_577 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_577 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_22: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_22: int)
{
  var vslice_dummy_var_126: int;

  anon0:
    call {:si_unique_call 804} vslice_dummy_var_126 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_581: int);
  free ensures {:va_keep} Tmp_581 == 258 || Tmp_581 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_581: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_581 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_581 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_581 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_16: int)
{
  var vslice_dummy_var_127: int;

  anon0:
    call {:si_unique_call 805} vslice_dummy_var_127 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_2: int, actual_Increment: int, actual_Wait: int) returns (Tmp_585: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_2: int, actual_Increment: int, actual_Wait: int) returns (Tmp_585: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event_2: int;

  anon0:
    Event_2 := actual_Event_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    havoc OldState;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    Tmp_585 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_589: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_589: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc Tmp_589;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_5: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_5: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_3: int)
{
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 806} vslice_dummy_var_128 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_129: int;

  anon0:
    call {:si_unique_call 807} vslice_dummy_var_129 := __HAVOC_malloc(4);
    new := actual_new;
    sdv_irql_current := new;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_595: int, dup_assertVar: bool);
  modifies alloc, yogi_error, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_595: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_596: int;
  var {:scalar} Tmp_598: int;
  var boogieTmp: int;
  var AvcFcpPool__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var AvcPeerInstanceList__Loc: int;
  var AvcAlternateOpcodePool__Loc: int;
  var AvcCommandContextPool__Loc: int;
  var GUID_61883_CLASS__Loc: int;
  var AvcCommandLinkPool__Loc: int;
  var GUID_VIRTUAL_AVC_CLASS__Loc: int;
  var GUID_AVC_CLASS__Loc: int;
  var AvcVirtualInstanceList__Loc: int;
  var KsDstPinDescriptor__Loc: int;
  var KsSrcPinDescriptor__Loc: int;
  var KSPROPSETID_DrmAudioStream__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var IID_IDrmAudioStream__Loc: int;
  var GUID_PCMCIA_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_PCMCIA__Loc: int;
  var GUID_TRANSLATOR_INTERFACE_STANDARD__Loc: int;
  var GUID_ARBITER_INTERFACE_STANDARD__Loc: int;
  var GUID_ACPI_CMOS_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_1394__Loc: int;
  var GUID_AGP_TARGET_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_TARGET_DEVICE_REMOVE_CANCELLED__Loc: int;
  var GUID_BUS_TYPE_ISAPNP__Loc: int;
  var GUID_MF_ENUMERATION_INTERFACE__Loc: int;
  var GUID_LEGACY_DEVICE_DETECTION_STANDARD__Loc: int;
  var GUID_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_PNP_POWER_SETTING_CHANGE__Loc: int;
  var GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE__Loc: int;
  var GUID_BUS_TYPE_DOT4PRT__Loc: int;
  var GUID_BUS_TYPE_EISA__Loc: int;
  var AvcQueryTablePool__Loc: int;
  var GUID_ACPI_REGS_INTERFACE_STANDARD__Loc: int;
  var GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED__Loc: int;
  var GUID_ACPI_INTERFACE_STANDARD2__Loc: int;
  var GUID_PARTITION_UNIT_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_IRDA__Loc: int;
  var GUID_WUDF_DEVICE_HOST_PROBLEM__Loc: int;
  var GUID_DEVICE_INTERFACE_REMOVAL__Loc: int;
  var GUID_BUS_TYPE_SERENUM__Loc: int;
  var GUID_PCI_DEVICE_PRESENT_INTERFACE__Loc: int;
  var GUID_BUS_TYPE_MCA__Loc: int;
  var GUID_POWER_DEVICE_TIMEOUTS__Loc: int;
  var GUID_HWPROFILE_CHANGE_CANCELLED__Loc: int;
  var GUID_PNP_LOCATION_INTERFACE__Loc: int;
  var GUID_MSIX_TABLE_CONFIG_INTERFACE__Loc: int;
  var GUID_BUS_TYPE_INTERNAL__Loc: int;
  var GUID_BUS_TYPE_LPTENUM__Loc: int;
  var GUID_HWPROFILE_CHANGE_COMPLETE__Loc: int;
  var GUID_DEVICE_INTERFACE_ARRIVAL__Loc: int;
  var GUID_BUS_TYPE_AVC__Loc: int;
  var GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_USB__Loc: int;
  var GUID_INT_ROUTE_INTERFACE_STANDARD__Loc: int;
  var GUID_PROCESSOR_PCC_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_USBPRINT__Loc: int;
  var GUID_BUS_TYPE_PCI__Loc: int;
  var GUID_TARGET_DEVICE_QUERY_REMOVE__Loc: int;
  var GUID_PCI_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_HWPROFILE_QUERY_CHANGE__Loc: int;
  var GUID_POWER_DEVICE_ENABLE__Loc: int;
  var GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE__Loc: int;
  var GUID_PNP_CUSTOM_NOTIFICATION__Loc: int;
  var GUID_BUS_TYPE_SD__Loc: int;
  var GUID_PNP_POWER_NOTIFICATION__Loc: int;
  var GUID_REENUMERATE_SELF_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_HID__Loc: int;
  var GUID_TARGET_DEVICE_REMOVE_COMPLETE__Loc: int;
  var GUID_ACPI_INTERFACE_STANDARD__Loc: int;
  var GUID_POWER_DEVICE_WAKE_ENABLE__Loc: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 808} AvcFcpPool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcFcpPool__Loc == AvcFcpPool;
    assume AvcFcpPool != 0;
    call {:si_unique_call 809} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 810} AvcPeerInstanceList__Loc := __HAVOC_malloc_or_null(8);
    assume AvcPeerInstanceList__Loc == AvcPeerInstanceList;
    assume AvcPeerInstanceList != 0;
    call {:si_unique_call 811} AvcAlternateOpcodePool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcAlternateOpcodePool__Loc == AvcAlternateOpcodePool;
    assume AvcAlternateOpcodePool != 0;
    call {:si_unique_call 812} AvcCommandContextPool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcCommandContextPool__Loc == AvcCommandContextPool;
    assume AvcCommandContextPool != 0;
    call {:si_unique_call 813} GUID_61883_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_61883_CLASS__Loc == GUID_61883_CLASS;
    assume GUID_61883_CLASS != 0;
    call {:si_unique_call 814} AvcCommandLinkPool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcCommandLinkPool__Loc == AvcCommandLinkPool;
    assume AvcCommandLinkPool != 0;
    call {:si_unique_call 815} GUID_VIRTUAL_AVC_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIRTUAL_AVC_CLASS__Loc == GUID_VIRTUAL_AVC_CLASS;
    assume GUID_VIRTUAL_AVC_CLASS != 0;
    call {:si_unique_call 816} GUID_AVC_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_AVC_CLASS__Loc == GUID_AVC_CLASS;
    assume GUID_AVC_CLASS != 0;
    call {:si_unique_call 817} AvcVirtualInstanceList__Loc := __HAVOC_malloc_or_null(8);
    assume AvcVirtualInstanceList__Loc == AvcVirtualInstanceList;
    assume AvcVirtualInstanceList != 0;
    call {:si_unique_call 818} KsDstPinDescriptor__Loc := __HAVOC_malloc_or_null(52);
    assume KsDstPinDescriptor__Loc == KsDstPinDescriptor;
    assume KsDstPinDescriptor != 0;
    call {:si_unique_call 819} KsSrcPinDescriptor__Loc := __HAVOC_malloc_or_null(52);
    assume KsSrcPinDescriptor__Loc == KsSrcPinDescriptor;
    assume KsSrcPinDescriptor != 0;
    call {:si_unique_call 820} KSPROPSETID_DrmAudioStream__Loc := __HAVOC_malloc_or_null(16);
    assume KSPROPSETID_DrmAudioStream__Loc == KSPROPSETID_DrmAudioStream;
    assume KSPROPSETID_DrmAudioStream != 0;
    call {:si_unique_call 821} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 822} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 823} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 824} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 825} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 826} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 827} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 828} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 829} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 830} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 831} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 832} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 833} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 834} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 835} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 836} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 837} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 838} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 839} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 840} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 841} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 842} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 843} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 844} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 845} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 846} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 847} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 848} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 849} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 850} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 851} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 852} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 853} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 854} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 855} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 856} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 857} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 858} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 859} IID_IDrmAudioStream__Loc := __HAVOC_malloc_or_null(16);
    assume IID_IDrmAudioStream__Loc == IID_IDrmAudioStream;
    assume IID_IDrmAudioStream != 0;
    call {:si_unique_call 860} GUID_PCMCIA_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCMCIA_BUS_INTERFACE_STANDARD__Loc == GUID_PCMCIA_BUS_INTERFACE_STANDARD;
    assume GUID_PCMCIA_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 861} GUID_BUS_TYPE_PCMCIA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_PCMCIA__Loc == GUID_BUS_TYPE_PCMCIA;
    assume GUID_BUS_TYPE_PCMCIA != 0;
    call {:si_unique_call 862} GUID_TRANSLATOR_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TRANSLATOR_INTERFACE_STANDARD__Loc == GUID_TRANSLATOR_INTERFACE_STANDARD;
    assume GUID_TRANSLATOR_INTERFACE_STANDARD != 0;
    call {:si_unique_call 863} GUID_ARBITER_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ARBITER_INTERFACE_STANDARD__Loc == GUID_ARBITER_INTERFACE_STANDARD;
    assume GUID_ARBITER_INTERFACE_STANDARD != 0;
    call {:si_unique_call 864} GUID_ACPI_CMOS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_CMOS_INTERFACE_STANDARD__Loc == GUID_ACPI_CMOS_INTERFACE_STANDARD;
    assume GUID_ACPI_CMOS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 865} GUID_BUS_TYPE_1394__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_1394__Loc == GUID_BUS_TYPE_1394;
    assume GUID_BUS_TYPE_1394 != 0;
    call {:si_unique_call 866} GUID_AGP_TARGET_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_AGP_TARGET_BUS_INTERFACE_STANDARD__Loc == GUID_AGP_TARGET_BUS_INTERFACE_STANDARD;
    assume GUID_AGP_TARGET_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 867} GUID_TARGET_DEVICE_REMOVE_CANCELLED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_REMOVE_CANCELLED__Loc == GUID_TARGET_DEVICE_REMOVE_CANCELLED;
    assume GUID_TARGET_DEVICE_REMOVE_CANCELLED != 0;
    call {:si_unique_call 868} GUID_BUS_TYPE_ISAPNP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_ISAPNP__Loc == GUID_BUS_TYPE_ISAPNP;
    assume GUID_BUS_TYPE_ISAPNP != 0;
    call {:si_unique_call 869} GUID_MF_ENUMERATION_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MF_ENUMERATION_INTERFACE__Loc == GUID_MF_ENUMERATION_INTERFACE;
    assume GUID_MF_ENUMERATION_INTERFACE != 0;
    call {:si_unique_call 870} GUID_LEGACY_DEVICE_DETECTION_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LEGACY_DEVICE_DETECTION_STANDARD__Loc == GUID_LEGACY_DEVICE_DETECTION_STANDARD;
    assume GUID_LEGACY_DEVICE_DETECTION_STANDARD != 0;
    call {:si_unique_call 871} GUID_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_INTERFACE_STANDARD__Loc == GUID_BUS_INTERFACE_STANDARD;
    assume GUID_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 872} GUID_PNP_POWER_SETTING_CHANGE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_POWER_SETTING_CHANGE__Loc == GUID_PNP_POWER_SETTING_CHANGE;
    assume GUID_PNP_POWER_SETTING_CHANGE != 0;
    call {:si_unique_call 873} GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE__Loc == GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE;
    assume GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE != 0;
    call {:si_unique_call 874} GUID_BUS_TYPE_DOT4PRT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_DOT4PRT__Loc == GUID_BUS_TYPE_DOT4PRT;
    assume GUID_BUS_TYPE_DOT4PRT != 0;
    call {:si_unique_call 875} GUID_BUS_TYPE_EISA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_EISA__Loc == GUID_BUS_TYPE_EISA;
    assume GUID_BUS_TYPE_EISA != 0;
    call {:si_unique_call 876} AvcQueryTablePool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcQueryTablePool__Loc == AvcQueryTablePool;
    assume AvcQueryTablePool != 0;
    call {:si_unique_call 877} GUID_ACPI_REGS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_REGS_INTERFACE_STANDARD__Loc == GUID_ACPI_REGS_INTERFACE_STANDARD;
    assume GUID_ACPI_REGS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 878} GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED__Loc == GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED;
    assume GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED != 0;
    call {:si_unique_call 879} GUID_ACPI_INTERFACE_STANDARD2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_INTERFACE_STANDARD2__Loc == GUID_ACPI_INTERFACE_STANDARD2;
    assume GUID_ACPI_INTERFACE_STANDARD2 != 0;
    call {:si_unique_call 880} GUID_PARTITION_UNIT_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PARTITION_UNIT_INTERFACE_STANDARD__Loc == GUID_PARTITION_UNIT_INTERFACE_STANDARD;
    assume GUID_PARTITION_UNIT_INTERFACE_STANDARD != 0;
    call {:si_unique_call 881} GUID_BUS_TYPE_IRDA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_IRDA__Loc == GUID_BUS_TYPE_IRDA;
    assume GUID_BUS_TYPE_IRDA != 0;
    call {:si_unique_call 882} GUID_WUDF_DEVICE_HOST_PROBLEM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_WUDF_DEVICE_HOST_PROBLEM__Loc == GUID_WUDF_DEVICE_HOST_PROBLEM;
    assume GUID_WUDF_DEVICE_HOST_PROBLEM != 0;
    call {:si_unique_call 883} GUID_DEVICE_INTERFACE_REMOVAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_INTERFACE_REMOVAL__Loc == GUID_DEVICE_INTERFACE_REMOVAL;
    assume GUID_DEVICE_INTERFACE_REMOVAL != 0;
    call {:si_unique_call 884} GUID_BUS_TYPE_SERENUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_SERENUM__Loc == GUID_BUS_TYPE_SERENUM;
    assume GUID_BUS_TYPE_SERENUM != 0;
    call {:si_unique_call 885} GUID_PCI_DEVICE_PRESENT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_DEVICE_PRESENT_INTERFACE__Loc == GUID_PCI_DEVICE_PRESENT_INTERFACE;
    assume GUID_PCI_DEVICE_PRESENT_INTERFACE != 0;
    call {:si_unique_call 886} GUID_BUS_TYPE_MCA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_MCA__Loc == GUID_BUS_TYPE_MCA;
    assume GUID_BUS_TYPE_MCA != 0;
    call {:si_unique_call 887} GUID_POWER_DEVICE_TIMEOUTS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWER_DEVICE_TIMEOUTS__Loc == GUID_POWER_DEVICE_TIMEOUTS;
    assume GUID_POWER_DEVICE_TIMEOUTS != 0;
    call {:si_unique_call 888} GUID_HWPROFILE_CHANGE_CANCELLED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HWPROFILE_CHANGE_CANCELLED__Loc == GUID_HWPROFILE_CHANGE_CANCELLED;
    assume GUID_HWPROFILE_CHANGE_CANCELLED != 0;
    call {:si_unique_call 889} GUID_PNP_LOCATION_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_LOCATION_INTERFACE__Loc == GUID_PNP_LOCATION_INTERFACE;
    assume GUID_PNP_LOCATION_INTERFACE != 0;
    call {:si_unique_call 890} GUID_MSIX_TABLE_CONFIG_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MSIX_TABLE_CONFIG_INTERFACE__Loc == GUID_MSIX_TABLE_CONFIG_INTERFACE;
    assume GUID_MSIX_TABLE_CONFIG_INTERFACE != 0;
    call {:si_unique_call 891} GUID_BUS_TYPE_INTERNAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_INTERNAL__Loc == GUID_BUS_TYPE_INTERNAL;
    assume GUID_BUS_TYPE_INTERNAL != 0;
    call {:si_unique_call 892} GUID_BUS_TYPE_LPTENUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_LPTENUM__Loc == GUID_BUS_TYPE_LPTENUM;
    assume GUID_BUS_TYPE_LPTENUM != 0;
    call {:si_unique_call 893} GUID_HWPROFILE_CHANGE_COMPLETE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HWPROFILE_CHANGE_COMPLETE__Loc == GUID_HWPROFILE_CHANGE_COMPLETE;
    assume GUID_HWPROFILE_CHANGE_COMPLETE != 0;
    call {:si_unique_call 894} GUID_DEVICE_INTERFACE_ARRIVAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_INTERFACE_ARRIVAL__Loc == GUID_DEVICE_INTERFACE_ARRIVAL;
    assume GUID_DEVICE_INTERFACE_ARRIVAL != 0;
    call {:si_unique_call 895} GUID_BUS_TYPE_AVC__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_AVC__Loc == GUID_BUS_TYPE_AVC;
    assume GUID_BUS_TYPE_AVC != 0;
    call {:si_unique_call 896} GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD__Loc == GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD;
    assume GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD != 0;
    call {:si_unique_call 897} GUID_BUS_TYPE_USB__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_USB__Loc == GUID_BUS_TYPE_USB;
    assume GUID_BUS_TYPE_USB != 0;
    call {:si_unique_call 898} GUID_INT_ROUTE_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_INT_ROUTE_INTERFACE_STANDARD__Loc == GUID_INT_ROUTE_INTERFACE_STANDARD;
    assume GUID_INT_ROUTE_INTERFACE_STANDARD != 0;
    call {:si_unique_call 899} GUID_PROCESSOR_PCC_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PCC_INTERFACE_STANDARD__Loc == GUID_PROCESSOR_PCC_INTERFACE_STANDARD;
    assume GUID_PROCESSOR_PCC_INTERFACE_STANDARD != 0;
    call {:si_unique_call 900} GUID_BUS_TYPE_USBPRINT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_USBPRINT__Loc == GUID_BUS_TYPE_USBPRINT;
    assume GUID_BUS_TYPE_USBPRINT != 0;
    call {:si_unique_call 901} GUID_BUS_TYPE_PCI__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_PCI__Loc == GUID_BUS_TYPE_PCI;
    assume GUID_BUS_TYPE_PCI != 0;
    call {:si_unique_call 902} GUID_TARGET_DEVICE_QUERY_REMOVE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_QUERY_REMOVE__Loc == GUID_TARGET_DEVICE_QUERY_REMOVE;
    assume GUID_TARGET_DEVICE_QUERY_REMOVE != 0;
    call {:si_unique_call 903} GUID_PCI_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_BUS_INTERFACE_STANDARD__Loc == GUID_PCI_BUS_INTERFACE_STANDARD;
    assume GUID_PCI_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 904} GUID_HWPROFILE_QUERY_CHANGE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HWPROFILE_QUERY_CHANGE__Loc == GUID_HWPROFILE_QUERY_CHANGE;
    assume GUID_HWPROFILE_QUERY_CHANGE != 0;
    call {:si_unique_call 905} GUID_POWER_DEVICE_ENABLE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWER_DEVICE_ENABLE__Loc == GUID_POWER_DEVICE_ENABLE;
    assume GUID_POWER_DEVICE_ENABLE != 0;
    call {:si_unique_call 906} GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE__Loc == GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE;
    assume GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE != 0;
    call {:si_unique_call 907} GUID_PNP_CUSTOM_NOTIFICATION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_CUSTOM_NOTIFICATION__Loc == GUID_PNP_CUSTOM_NOTIFICATION;
    assume GUID_PNP_CUSTOM_NOTIFICATION != 0;
    call {:si_unique_call 908} GUID_BUS_TYPE_SD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_SD__Loc == GUID_BUS_TYPE_SD;
    assume GUID_BUS_TYPE_SD != 0;
    call {:si_unique_call 909} GUID_PNP_POWER_NOTIFICATION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_POWER_NOTIFICATION__Loc == GUID_PNP_POWER_NOTIFICATION;
    assume GUID_PNP_POWER_NOTIFICATION != 0;
    call {:si_unique_call 910} GUID_REENUMERATE_SELF_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_REENUMERATE_SELF_INTERFACE_STANDARD__Loc == GUID_REENUMERATE_SELF_INTERFACE_STANDARD;
    assume GUID_REENUMERATE_SELF_INTERFACE_STANDARD != 0;
    call {:si_unique_call 911} GUID_BUS_TYPE_HID__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_HID__Loc == GUID_BUS_TYPE_HID;
    assume GUID_BUS_TYPE_HID != 0;
    call {:si_unique_call 912} GUID_TARGET_DEVICE_REMOVE_COMPLETE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_REMOVE_COMPLETE__Loc == GUID_TARGET_DEVICE_REMOVE_COMPLETE;
    assume GUID_TARGET_DEVICE_REMOVE_COMPLETE != 0;
    call {:si_unique_call 913} GUID_ACPI_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_INTERFACE_STANDARD__Loc == GUID_ACPI_INTERFACE_STANDARD;
    assume GUID_ACPI_INTERFACE_STANDARD != 0;
    call {:si_unique_call 914} GUID_POWER_DEVICE_WAKE_ENABLE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWER_DEVICE_WAKE_ENABLE__Loc == GUID_POWER_DEVICE_WAKE_ENABLE;
    assume GUID_POWER_DEVICE_WAKE_ENABLE != 0;
    call {:si_unique_call 915} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 916} boogieTmp := __HAVOC_malloc_or_null(28);
    call {:si_unique_call 917} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 918} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 919} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 920} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 921} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 922} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 923} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 924} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 925} boogieTmp := __HAVOC_malloc_or_null(68);
    call {:si_unique_call 926} vslice_dummy_var_365 := __HAVOC_malloc(4);
    call {:si_unique_call 927} vslice_dummy_var_366 := __HAVOC_malloc(4);
    call {:si_unique_call 928} vslice_dummy_var_367 := __HAVOC_malloc(4);
    call {:si_unique_call 929} vslice_dummy_var_368 := __HAVOC_malloc(4);
    call {:si_unique_call 930} vslice_dummy_var_369 := __HAVOC_malloc(4);
    call {:si_unique_call 931} vslice_dummy_var_370 := __HAVOC_malloc(4);
    call {:si_unique_call 932} vslice_dummy_var_371 := __HAVOC_malloc(4);
    call {:si_unique_call 933} vslice_dummy_var_372 := __HAVOC_malloc(4);
    call {:si_unique_call 934} vslice_dummy_var_373 := __HAVOC_malloc(4);
    call {:si_unique_call 935} vslice_dummy_var_91 := __HAVOC_malloc(4);
    call {:si_unique_call 936} vslice_dummy_var_374 := __HAVOC_malloc(4);
    call {:si_unique_call 937} vslice_dummy_var_375 := __HAVOC_malloc(4);
    call {:si_unique_call 938} vslice_dummy_var_376 := __HAVOC_malloc(4);
    call {:si_unique_call 939} vslice_dummy_var_377 := __HAVOC_malloc(4);
    call {:si_unique_call 940} vslice_dummy_var_378 := __HAVOC_malloc(4);
    call {:si_unique_call 941} vslice_dummy_var_92 := __HAVOC_malloc(4);
    call {:si_unique_call 942} vslice_dummy_var_379 := __HAVOC_malloc(112);
    call {:si_unique_call 943} vslice_dummy_var_380 := __HAVOC_malloc(4);
    call {:si_unique_call 944} vslice_dummy_var_381 := __HAVOC_malloc(4);
    call {:si_unique_call 945} vslice_dummy_var_382 := __HAVOC_malloc(4);
    call {:si_unique_call 946} vslice_dummy_var_383 := __HAVOC_malloc(4);
    call {:si_unique_call 947} vslice_dummy_var_384 := __HAVOC_malloc(4);
    call {:si_unique_call 948} vslice_dummy_var_385 := __HAVOC_malloc(4);
    call {:si_unique_call 949} vslice_dummy_var_386 := __HAVOC_malloc(4);
    call {:si_unique_call 950} vslice_dummy_var_387 := __HAVOC_malloc(4);
    call {:si_unique_call 951} vslice_dummy_var_388 := __HAVOC_malloc(4);
    call {:si_unique_call 952} vslice_dummy_var_389 := __HAVOC_malloc(4);
    call {:si_unique_call 953} vslice_dummy_var_390 := __HAVOC_malloc(4);
    call {:si_unique_call 954} vslice_dummy_var_391 := __HAVOC_malloc(4);
    call {:si_unique_call 955} vslice_dummy_var_392 := __HAVOC_malloc(4);
    call {:si_unique_call 956} vslice_dummy_var_393 := __HAVOC_malloc(4);
    call {:si_unique_call 957} vslice_dummy_var_394 := __HAVOC_malloc(4);
    call {:si_unique_call 958} vslice_dummy_var_93 := __HAVOC_malloc(4);
    call {:si_unique_call 959} vslice_dummy_var_395 := __HAVOC_malloc(4);
    call {:si_unique_call 960} vslice_dummy_var_396 := __HAVOC_malloc(4);
    call {:si_unique_call 961} vslice_dummy_var_397 := __HAVOC_malloc(4);
    call {:si_unique_call 962} vslice_dummy_var_398 := __HAVOC_malloc(4);
    call {:si_unique_call 963} vslice_dummy_var_399 := __HAVOC_malloc(4);
    call {:si_unique_call 964} vslice_dummy_var_400 := __HAVOC_malloc(4);
    call {:si_unique_call 965} vslice_dummy_var_401 := __HAVOC_malloc(4);
    call {:si_unique_call 966} vslice_dummy_var_402 := __HAVOC_malloc(4);
    call {:si_unique_call 967} vslice_dummy_var_403 := __HAVOC_malloc(4);
    call {:si_unique_call 968} vslice_dummy_var_404 := __HAVOC_malloc(4);
    call {:si_unique_call 969} vslice_dummy_var_405 := __HAVOC_malloc(4);
    call {:si_unique_call 970} vslice_dummy_var_406 := __HAVOC_malloc(4);
    call {:si_unique_call 971} vslice_dummy_var_407 := __HAVOC_malloc(4);
    call {:si_unique_call 972} vslice_dummy_var_408 := __HAVOC_malloc(4);
    call {:si_unique_call 973} vslice_dummy_var_409 := __HAVOC_malloc(4);
    call {:si_unique_call 974} vslice_dummy_var_410 := __HAVOC_malloc(4);
    call {:si_unique_call 975} vslice_dummy_var_94 := __HAVOC_malloc(64);
    call {:si_unique_call 976} vslice_dummy_var_411 := __HAVOC_malloc(4);
    call {:si_unique_call 977} vslice_dummy_var_412 := __HAVOC_malloc(4);
    call {:si_unique_call 978} vslice_dummy_var_413 := __HAVOC_malloc(4);
    call {:si_unique_call 979} vslice_dummy_var_414 := __HAVOC_malloc(4);
    call {:si_unique_call 980} vslice_dummy_var_415 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 981} corralExtraInit();
    call {:si_unique_call 982} corralExplainErrorInit();
    call {:si_unique_call 983} _sdv_init12();
    call {:si_unique_call 984} _sdv_init1();
    call {:si_unique_call 985} _sdv_init4();
    call {:si_unique_call 986} _sdv_init5();
    call {:si_unique_call 987} _sdv_init3();
    call {:si_unique_call 988} _sdv_init6();
    call {:si_unique_call 989} _sdv_init10();
    call {:si_unique_call 990} _sdv_init9();
    call {:si_unique_call 991} _sdv_init7();
    call {:si_unique_call 992} _sdv_init8();
    call {:si_unique_call 993} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_596 := 0;
    goto L35;

  L35:
    assume Tmp_596 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_598 := 0;
    goto L39;

  L39:
    assume Tmp_598 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 994} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L33;

  L33:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L33;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_598 := 1;
    goto L39;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_596 := 1;
    goto L35;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 995} vslice_dummy_var_130 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_23: int) returns (Tmp_601: int);
  free ensures {:va_keep} Tmp_601 == 0 || Tmp_601 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_23: int) returns (Tmp_601: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_601 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_601 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_603: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_603: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Mem_T.INT4[Addend] := Mem_T.INT4[Addend] - 1;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Tmp_603 := Mem_T.INT4[Addend];
    return;
}



procedure {:origName "sdv_RunRemoveDevice"} {:osmodel} sdv_RunRemoveDevice(actual_po: int, actual_pirp_9: int) returns (Tmp_605: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunRemoveDevice"} {:osmodel} sdv_RunRemoveDevice(actual_po: int, actual_pirp_9: int) returns (Tmp_605: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_3: int;
  var {:pointer} po: int;
  var {:pointer} pirp_9: int;

  anon0:
    po := actual_po;
    pirp_9 := actual_pirp_9;
    status_3 := 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 996} sdv_stub_dispatch_begin();
    call {:si_unique_call 997} sdv_SetStatus(pirp_9);
    call {:si_unique_call 998} status_3 := Avc_Pnp(po, pirp_9);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 999} sdv_stub_dispatch_end(status_3, 0);
    Tmp_605 := status_3;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_131: int;

  anon0:
    call {:si_unique_call 1000} vslice_dummy_var_131 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_132: int;

  anon0:
    call {:si_unique_call 1001} vslice_dummy_var_132 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "IoGetAttachedDeviceReference"} {:osmodel} IoGetAttachedDeviceReference(actual_DeviceObject_17: int) returns (Tmp_611: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetAttachedDeviceReference"} {:osmodel} IoGetAttachedDeviceReference(actual_DeviceObject_17: int) returns (Tmp_611: int)
{
  var {:pointer} DeviceObject_17: int;

  anon0:
    DeviceObject_17 := actual_DeviceObject_17;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_611 := sdv_p_devobj_top;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_611 := DeviceObject_17;
    goto L1;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_613: int);
  free ensures {:va_keep} Tmp_613 == 0 || Tmp_613 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_613: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_613 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_613 := 0;
    goto L1;
}



procedure {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po_1: int, actual_pirp_10: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po_1: int, actual_pirp_10: int)
{
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;

  anon0:
    call {:si_unique_call 1002} vslice_dummy_var_133 := __HAVOC_malloc(4);
    call {:si_unique_call 1003} sdv_stub_startio_begin();
    call {:si_unique_call 1004} vslice_dummy_var_134 := sdv_DoNothing();
    call {:si_unique_call 1005} sdv_stub_startio_end();
    return;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_617: int);
  free ensures {:va_keep} Tmp_617 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_617: int)
{

  anon0:
    Tmp_617 := 1;
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_2: int)
{
  var vslice_dummy_var_135: int;

  anon0:
    call {:si_unique_call 1006} vslice_dummy_var_135 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po_2: int, actual_pirp_11: int) returns (Tmp_621: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po_2: int, actual_pirp_11: int) returns (Tmp_621: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} status_4: int;
  var {:pointer} po_2: int;
  var {:pointer} pirp_11: int;

  anon0:
    po_2 := actual_po_2;
    pirp_11 := actual_pirp_11;
    status_4 := 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    havoc ps_1;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    call {:si_unique_call 1007} sdv_SetStatus(pirp_11);
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1008} sdv_stub_dispatch_begin();
    call {:si_unique_call 1009} status_4 := Avc_Pnp(po_2, pirp_11);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1010} sdv_stub_dispatch_end(status_4, 0);
    Tmp_621 := status_4;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin()
{
  var vslice_dummy_var_136: int;

  anon0:
    call {:si_unique_call 1011} vslice_dummy_var_136 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_625: int);
  free ensures {:va_keep} Tmp_625 == 0 || Tmp_625 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_625: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_625 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_625 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_137: int;

  anon0:
    call {:si_unique_call 1012} vslice_dummy_var_137 := __HAVOC_malloc(4);
    call {:si_unique_call 1013} SLIC_sdv_do_paged_code_check_entry(strConst__li2bpl2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_12: int)
{
  var vslice_dummy_var_138: int;

  anon0:
    call {:si_unique_call 1014} vslice_dummy_var_138 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_3: int, actual_pirp_13: int) returns (Tmp_631: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_3: int, actual_pirp_13: int) returns (Tmp_631: int)
{
  var {:pointer} ps_2: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_633: int;
  var {:scalar} sdv_369: int;
  var {:scalar} status_5: int;
  var {:scalar} Tmp_634: int;
  var {:pointer} po_3: int;
  var {:pointer} pirp_13: int;

  anon0:
    po_3 := actual_po_3;
    pirp_13 := actual_pirp_13;
    status_5 := 0;
    minor := sdv_369;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    havoc ps_2;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    call {:si_unique_call 1015} sdv_SetStatus(pirp_13);
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1016} sdv_stub_dispatch_begin();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_634 := 0;
    goto L214;

  L214:
    assume Tmp_634 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L66;

  L66:
    call {:si_unique_call 1017} status_5 := Avc_Pnp(po_3, pirp_13);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 1018} sdv_stub_dispatch_end(status_5, 0);
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    Tmp_631 := status_5;
    goto LM2;

  LM2:
    return;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L66;

  anon61_Then:
    Tmp_634 := 1;
    goto L214;

  anon59_Then:
    goto L61;

  anon83_Then:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_633 := 0;
    goto L220;

  L220:
    assume Tmp_633 != 0;
    goto L60;

  anon58_Then:
    Tmp_633 := 1;
    goto L220;

  anon62_Then:
    call {:si_unique_call 1019} status_5 := sdv_DoNothing();
    goto L72;

  anon63_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1020} status_5 := Avc_SystemControl(po_3, pirp_13);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1021} sdv_SetPowerIrpMinorFunction(pirp_13);
    call {:si_unique_call 1022} status_5 := Avc_Power(po_3, pirp_13);
    goto L72;

  anon65_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1023} status_5 := Avc_Cleanup(po_3, pirp_13);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    call {:si_unique_call 1024} status_5 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1025} status_5 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1026} status_5 := Avc_IoControl(po_3, pirp_13);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1027} status_5 := Avc_IoControl(po_3, pirp_13);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 1028} status_5 := sdv_DoNothing();
    goto L72;

  anon71_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1029} status_5 := sdv_DoNothing();
    goto L72;

  anon72_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1030} status_5 := sdv_DoNothing();
    goto L72;

  anon73_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1031} status_5 := sdv_DoNothing();
    goto L72;

  anon74_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1032} status_5 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1033} status_5 := sdv_DoNothing();
    goto L72;

  anon76_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1034} status_5 := Avc_Close(po_3, pirp_13);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 1035} status_5 := Avc_Create(po_3, pirp_13);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_139: int;

  anon0:
    call {:si_unique_call 1036} vslice_dummy_var_139 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_637: int);
  free ensures {:va_keep} Tmp_637 == -1073741823 || Tmp_637 == -1073741808 || Tmp_637 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_637: int)
{
  var {:scalar} Tmp_638: int;
  var {:pointer} SymbolicLinkName: int;

  anon0:
    SymbolicLinkName := actual_SymbolicLinkName;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_637 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_637 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName != 0;
    assume SymbolicLinkName > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_638 := 0;
    goto L22;

  L22:
    assume Tmp_638 != 0;
    Tmp_637 := 0;
    goto L1;

  anon8_Then:
    Tmp_638 := 1;
    goto L22;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_640: int);
  free ensures {:va_keep} Tmp_640 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_640: int)
{

  anon0:
    Tmp_640 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_642: int);
  free ensures {:va_keep} Tmp_642 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_642: int)
{

  anon0:
    Tmp_642 := 0;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new_1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_140: int;

  anon0:
    call {:si_unique_call 1037} vslice_dummy_var_140 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    sdv_irql_current := new_1;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_24: int, actual_Status_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_24: int, actual_Status_15: int)
{
  var {:pointer} Irp_24: int;
  var {:scalar} Status_15: int;
  var vslice_dummy_var_141: int;

  anon0:
    call {:si_unique_call 1038} vslice_dummy_var_141 := __HAVOC_malloc(4);
    Irp_24 := actual_Irp_24;
    Status_15 := actual_Status_15;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_14: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_14: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_142: int;

  anon0:
    call {:si_unique_call 1039} vslice_dummy_var_142 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_3: int)
{
  var vslice_dummy_var_143: int;

  anon0:
    call {:si_unique_call 1040} vslice_dummy_var_143 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_4: int, actual_ResultLength: int) returns (Tmp_652: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_652 == -1073741811 || Tmp_652 == -1073741823 || Tmp_652 == 0 || Tmp_652 == 5 || Tmp_652 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_4: int, actual_ResultLength: int) returns (Tmp_652: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_381: int;
  var {:scalar} Length_4: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_4 := actual_Length_4;
    ResultLength := actual_ResultLength;
    L := sdv_381;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_652 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_652 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_4;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_4 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_652 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_4 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_4;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_652 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_4 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_652 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_4;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_144: int;

  anon0:
    call {:si_unique_call 1041} vslice_dummy_var_144 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_656: int);
  free ensures {:va_keep} Tmp_656 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_656: int)
{

  anon0:
    Tmp_656 := 0;
    return;
}



procedure {:origName "ProbeForRead"} {:osmodel} ProbeForRead(actual_Address_1: int, actual_Length_5: int, actual_Alignment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ProbeForRead"} {:osmodel} ProbeForRead(actual_Address_1: int, actual_Length_5: int, actual_Alignment: int)
{
  var vslice_dummy_var_145: int;

  anon0:
    call {:si_unique_call 1042} vslice_dummy_var_145 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_662: int);
  free ensures {:va_keep} Tmp_662 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_662: int)
{

  anon0:
    Tmp_662 := 0;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_664: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_664: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Mem_T.INT4[Addend_1] := Mem_T.INT4[Addend_1] + 1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Tmp_664 := Mem_T.INT4[Addend_1];
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_146: int;

  anon0:
    call {:si_unique_call 1043} vslice_dummy_var_146 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_147: int;

  anon0:
    call {:si_unique_call 1044} vslice_dummy_var_147 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead: int) returns (Tmp_670: int);
  free ensures {:va_keep} Tmp_670 == 1 || Tmp_670 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead: int) returns (Tmp_670: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_670 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_670 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_672: int);
  free ensures {:va_keep} Tmp_672 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_672: int)
{

  anon0:
    Tmp_672 := 1;
    return;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota: int) returns (Tmp_674: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota: int) returns (Tmp_674: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 1045} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Tmp_674 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_674 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_18: int, actual_Irp_25: int) returns (Tmp_676: int);
  free ensures {:va_keep} Tmp_676 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_18: int, actual_Irp_25: int) returns (Tmp_676: int)
{
  var {:scalar} status_6: int;
  var {:pointer} Irp_25: int;

  anon0:
    Irp_25 := actual_Irp_25;
    status_6 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_25;
    goto L25;

  L25:
    Tmp_676 := status_6;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_25;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_25;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_25;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_25;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_25;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_25;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_25;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_25;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_25;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_25;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_25;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_25;
    goto L36;
}



procedure {:origName "KeInitializeTimerEx"} {:osmodel} KeInitializeTimerEx(actual_Timer_2: int, actual_Type_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimerEx"} {:osmodel} KeInitializeTimerEx(actual_Timer_2: int, actual_Type_1: int)
{
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 1046} vslice_dummy_var_148 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_680: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_680: int)
{
  var {:scalar} p_7: int;

  anon0:
    Tmp_680 := p_7;
    return;
}



procedure {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_1: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_682: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_682 == 0 || Tmp_682 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_1: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_682: int)
{
  var {:pointer} sdv_388: int;
  var {:pointer} KeyHandle_1: int;

  anon0:
    KeyHandle_1 := actual_KeyHandle_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1047} sdv_388 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_682 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_682 := -1073741727;
    goto L1;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_2: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_3: int, actual_Type_2: int, actual_State_1: int)
{
  var {:pointer} Event_3: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_149: int;

  anon0:
    call {:si_unique_call 1048} vslice_dummy_var_149 := __HAVOC_malloc(4);
    Event_3 := actual_Event_3;
    Type_2 := actual_Type_2;
    State_1 := actual_State_1;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    assume {:nonnull} Event_3 != 0;
    assume Event_3 > 0;
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_19: int, actual_Irp_26: int) returns (Tmp_686: int);
  free ensures {:va_keep} Tmp_686 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_19: int, actual_Irp_26: int) returns (Tmp_686: int)
{
  var {:pointer} Irp_26: int;

  anon0:
    Irp_26 := actual_Irp_26;
    call {:si_unique_call 1049} Tmp_686 := IofCallDriver(0, Irp_26);
    return;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_8: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_8: int)
{
  var {:pointer} p_8: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1050} vslice_dummy_var_150 := __HAVOC_malloc(4);
    p_8 := actual_p_8;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p_8 != 0;
    assume p_8 > 0;
    Mem_T.INT4[p_8] := sdv_irql_previous;
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_15: int)
{
  var vslice_dummy_var_151: int;

  anon0:
    call {:si_unique_call 1051} vslice_dummy_var_151 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceRelations"} {:osmodel} IoInvalidateDeviceRelations(actual_DeviceObject_20: int, actual_Type_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoInvalidateDeviceRelations"} {:osmodel} IoInvalidateDeviceRelations(actual_DeviceObject_20: int, actual_Type_3: int)
{
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1052} vslice_dummy_var_152 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int)
{
  var {:pointer} SpinLock_4: int;
  var vslice_dummy_var_153: int;

  anon0:
    call {:si_unique_call 1053} vslice_dummy_var_153 := __HAVOC_malloc(4);
    SpinLock_4 := actual_SpinLock_4;
    assume {:nonnull} SpinLock_4 != 0;
    assume SpinLock_4 > 0;
    Mem_T.INT4[SpinLock_4] := 0;
    return;
}



procedure {:origName "_sdv_init10"} {:osmodel} _sdv_init10();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 0;
  free ensures {:va_keep} sdv_irql_previous_2 == 0;
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == 0;
  free ensures {:va_keep} sdv_irql_previous_4 == 0;
  free ensures {:va_keep} sdv_irql_previous_3 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init10"} {:osmodel} _sdv_init10()
{
  var vslice_dummy_var_154: int;

  anon0:
    call {:si_unique_call 1054} vslice_dummy_var_154 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    sdv_irql_current := 0;
    sdv_irql_previous := 0;
    sdv_irql_previous_2 := 0;
    sdv_irql_previous_3 := 0;
    sdv_irql_previous_4 := 0;
    sdv_irql_previous_5 := 0;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_isr_routine == li2bplFunctionConstant789;
    assume sdv_ke_dpc == li2bplFunctionConstant791;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant794;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_1: int, actual_Tag_2: int) returns (Tmp_698: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_1: int, actual_Tag_2: int) returns (Tmp_698: int)
{
  var {:pointer} sdv_391: int;
  var {:scalar} NumberOfBytes_1: int;

  anon0:
    NumberOfBytes_1 := actual_NumberOfBytes_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1055} sdv_391 := __HAVOC_malloc(NumberOfBytes_1);
    Tmp_698 := sdv_391;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_698 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_700: int);
  free ensures {:va_keep} Tmp_700 == 0 || Tmp_700 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_700: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_700 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_700 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_21: int) returns (Tmp_702: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_21: int) returns (Tmp_702: int)
{
  var {:pointer} ioWorkItem: int;
  var {:pointer} sdv_394: int;
  var {:scalar} Tmp_704: int;

  anon0:
    call {:si_unique_call 1056} sdv_394 := __HAVOC_malloc(1);
    ioWorkItem := sdv_394;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_704 := 0;
    goto L27;

  L27:
    assume Tmp_704 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_702 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_704 := 1;
    goto L27;

  anon6_Then:
    Tmp_702 := 0;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 1057} vslice_dummy_var_155 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 1058} Avc_Unload(pdrivo);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_1: int, actual_Enable: int) returns (Tmp_707: int);
  free ensures {:va_keep} Tmp_707 == -1073741772 || Tmp_707 == -1073741824 || Tmp_707 == -1073741789 || Tmp_707 == -1073741670 || Tmp_707 == -1073741808 || Tmp_707 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_1: int, actual_Enable: int) returns (Tmp_707: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_707 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_707 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_707 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_707 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_707 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_707 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 1059} vslice_dummy_var_156 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 1060} vslice_dummy_var_157 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_22: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_713: int);
  free ensures {:va_keep} Tmp_713 == -1073741811 || Tmp_713 == -1073741808 || Tmp_713 == -1073741823 || Tmp_713 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_22: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_713: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_713 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_713 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_713 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_713 := 0;
    goto L1;
}



procedure {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_2: int) returns (Tmp_715: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_2: int) returns (Tmp_715: int)
{
  var {:scalar} p_9: int;

  anon0:
    Tmp_715 := p_9;
    return;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_717: int);
  free ensures {:va_keep} Tmp_717 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_717: int)
{

  anon0:
    Tmp_717 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_719: int);
  free ensures {:va_keep} Tmp_719 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_719: int)
{

  anon0:
    Tmp_719 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_721: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_721: int)
{
  var {:pointer} sdv_399: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1061} sdv_399 := __HAVOC_malloc(1);
    Tmp_721 := sdv_399;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_721 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_376789576"} sdv_hash_376789576(actual_AvcIrb_8: int) returns (Tmp_723: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_723 == actual_AvcIrb_8;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_376789576"} sdv_hash_376789576(actual_AvcIrb_8: int) returns (Tmp_723: int)
{
  var {:pointer} sdv_400: int;
  var {:pointer} sdv_401: int;
  var {:pointer} Ops: int;
  var {:scalar} Opc: int;
  var {:pointer} AvcIrb_8: int;

  anon0:
    AvcIrb_8 := actual_AvcIrb_8;
    call {:si_unique_call 1062} Ops := __HAVOC_malloc(4);
    Opc := 34;
    assume {:nonnull} Ops != 0;
    assume Ops > 0;
    Mem_T.INT4[Ops] := 255;
    call {:si_unique_call 1063} sdv_400 := sdv_hash_434855337(AvcIrb_8, Opc);
    call {:si_unique_call 1064} sdv_401 := sdv_hash_861280784(sdv_400, 1, Ops);
    Tmp_723 := sdv_401;
    return;
}



procedure {:origName "sdv_hash_330049800"} sdv_hash_330049800(actual_this_33: int) returns (Tmp_725: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_330049800"} sdv_hash_330049800(actual_this_33: int) returns (Tmp_725: int)
{
  var {:pointer} this_33: int;

  anon0:
    this_33 := actual_this_33;
    assume {:nonnull} this_33 != 0;
    assume this_33 > 0;
    havoc Tmp_725;
    return;
}



procedure {:origName "sdv_hash_684117243"} sdv_hash_684117243(actual_this_34: int) returns (Tmp_727: int);
  free ensures {:va_keep} Tmp_727 == m_AvcIrb_CAvcCommandIrb(actual_this_34);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_684117243"} sdv_hash_684117243(actual_this_34: int) returns (Tmp_727: int)
{
  var {:pointer} this_34: int;

  anon0:
    this_34 := actual_this_34;
    assume {:nonnull} this_34 != 0;
    assume this_34 > 0;
    Tmp_727 := m_AvcIrb_CAvcCommandIrb(this_34);
    return;
}



procedure {:origName "sdv_hash_434855337"} sdv_hash_434855337(actual_this_35: int, actual_Opc_1: int) returns (Tmp_729: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_729 == actual_this_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_434855337"} sdv_hash_434855337(actual_this_35: int, actual_Opc_1: int) returns (Tmp_729: int)
{
  var {:pointer} this_35: int;
  var {:scalar} Opc_1: int;

  anon0:
    this_35 := actual_this_35;
    Opc_1 := actual_Opc_1;
    assume {:nonnull} this_35 != 0;
    assume this_35 > 0;
    Mem_T.INT4[Opcode__AVC_COMMAND_IRB(m_AvcIrb_CAvcCommandIrb(this_35))] := Opc_1;
    Tmp_729 := this_35;
    return;
}



procedure {:origName "sdv_hash_1058931133_sdv_special_CTOR"} sdv_hash_1058931133_sdv_special_CTOR(actual_this_36: int, actual_Parent: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_1058931133_sdv_special_CTOR"} sdv_hash_1058931133_sdv_special_CTOR(actual_this_36: int, actual_Parent: int)
{
  var {:pointer} this_36: int;
  var {:pointer} Parent: int;
  var vslice_dummy_var_158: int;

  anon0:
    call {:si_unique_call 1065} vslice_dummy_var_158 := __HAVOC_malloc(4);
    this_36 := actual_this_36;
    Parent := actual_Parent;
    assume {:nonnull} this_36 != 0;
    assume this_36 > 0;
    call {:si_unique_call 1066} sdv_hash_1046774778_sdv_special_CTOR(m_Irp_CAvSyncIrp(this_36), Parent);
    return;
}



procedure {:origName "sdv_hash_63558310"} sdv_hash_63558310(actual_this_37: int) returns (Tmp_733: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_63558310"} sdv_hash_63558310(actual_this_37: int) returns (Tmp_733: int)
{
  var {:scalar} Event_4: int;
  var {:pointer} Tmp_734: int;
  var {:scalar} ntStatus_22: int;
  var {:pointer} Tmp_736: int;
  var {:pointer} this_37: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 1067} Event_4 := __HAVOC_malloc(124);
    this_37 := actual_this_37;
    assume {:nonnull} this_37 != 0;
    assume this_37 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1068} KeInitializeEvent(Event_4, 1, 0);
    assume {:nonnull} this_37 != 0;
    assume this_37 > 0;
    havoc vslice_dummy_var_95;
    call {:si_unique_call 1069} sdv_IoSetCompletionRoutine(vslice_dummy_var_95, li2bplFunctionConstant574, Event_4, 1, 1, 1);
    assume {:nonnull} this_37 != 0;
    assume this_37 > 0;
    havoc Tmp_734;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    assume {:nonnull} this_37 != 0;
    assume this_37 > 0;
    havoc vslice_dummy_var_96;
    havoc vslice_dummy_var_97;
    call {:si_unique_call 1070} ntStatus_22 := sdv_IoCallDriver(vslice_dummy_var_96, vslice_dummy_var_97);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} ntStatus_22 == 259;
    call {:si_unique_call 1071} vslice_dummy_var_159 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} this_37 != 0;
    assume this_37 > 0;
    havoc Tmp_736;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    havoc ntStatus_22;
    goto L19;

  L19:
    Tmp_733 := ntStatus_22;
    return;

  anon6_Then:
    assume {:partition} ntStatus_22 != 259;
    goto L19;

  anon5_Then:
    ntStatus_22 := -1073741670;
    goto L19;
}



procedure {:origName "sdv_hash_291696418"} sdv_hash_291696418(actual_this_38: int) returns (Tmp_737: int);
  free ensures {:va_keep} Tmp_737 == actual_this_38;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_291696418"} sdv_hash_291696418(actual_this_38: int) returns (Tmp_737: int)
{
  var {:pointer} this_38: int;

  anon0:
    this_38 := actual_this_38;
    assume {:nonnull} this_38 != 0;
    assume this_38 > 0;
    Tmp_737 := this_38;
    return;
}



procedure {:origName "sdv_hash_986172016"} sdv_hash_986172016(actual_this_39: int, actual_sua: int) returns (Tmp_739: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_739 == 1 || Tmp_739 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_986172016"} sdv_hash_986172016(actual_this_39: int, actual_sua: int) returns (Tmp_739: int)
{
  var {:pointer} this_39: int;
  var {:pointer} sua: int;
  var vslice_dummy_var_98: int;

  anon0:
    this_39 := actual_this_39;
    sua := actual_sua;
    assume {:nonnull} sua != 0;
    assume sua > 0;
    havoc vslice_dummy_var_98;
    call {:si_unique_call 1072} Tmp_739 := sdv_hash_405508819(this_39, vslice_dummy_var_98);
    return;
}



procedure {:origName "sdv_hash_882477790"} sdv_hash_882477790(actual_AvcIrb_9: int, actual_srcAddr_5: int, actual_srcPlug_5: int, actual_dstAddr_5: int, actual_dstPlug_5: int, actual_OutputIrb_3: int) returns (Tmp_741: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_741 == -1073741811 || Tmp_741 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_882477790"} sdv_hash_882477790(actual_AvcIrb_9: int, actual_srcAddr_5: int, actual_srcPlug_5: int, actual_dstAddr_5: int, actual_dstPlug_5: int, actual_OutputIrb_3: int) returns (Tmp_741: int)
{
  var {:scalar} Tmp_742: int;
  var {:scalar} Tmp_743: int;
  var {:scalar} Tmp_744: int;
  var {:scalar} sdv_405: int;
  var {:scalar} sdv_406: int;
  var {:pointer} sdv_407: int;
  var {:scalar} Tmp_746: int;
  var {:pointer} sdv_408: int;
  var {:pointer} Tmp_747: int;
  var {:scalar} Tmp_748: int;
  var {:scalar} Tmp_749: int;
  var {:pointer} Tmp_750: int;
  var {:scalar} idx_13: int;
  var {:pointer} Ops_1: int;
  var {:scalar} Opc_2: int;
  var {:pointer} AvcIrb_9: int;
  var {:pointer} srcAddr_5: int;
  var {:scalar} srcPlug_5: int;
  var {:pointer} dstAddr_5: int;
  var {:scalar} dstPlug_5: int;
  var {:pointer} OutputIrb_3: int;
  var vslice_dummy_var_160: int;

  anon0:
    AvcIrb_9 := actual_AvcIrb_9;
    srcAddr_5 := actual_srcAddr_5;
    srcPlug_5 := actual_srcPlug_5;
    dstAddr_5 := actual_dstAddr_5;
    dstPlug_5 := actual_dstPlug_5;
    OutputIrb_3 := actual_OutputIrb_3;
    call {:si_unique_call 1073} Ops_1 := __HAVOC_malloc(2036);
    Opc_2 := 37;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    Mem_T.INT4[Ops_1] := 255;
    idx_13 := 1;
    Tmp_742 := idx_13;
    Tmp_747 := Ops_1 + Tmp_742 * 4;
    call {:si_unique_call 1074} sdv_hash_505774121(srcAddr_5, Tmp_747);
    call {:si_unique_call 1075} sdv_405 := sdv_hash_330049800(srcAddr_5);
    idx_13 := idx_13 + sdv_405;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} idx_13 >= 509;
    Tmp_741 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} 509 > idx_13;
    Tmp_743 := idx_13;
    idx_13 := idx_13 + 1;
    Tmp_746 := Tmp_743;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    Mem_T.INT4[Ops_1 + Tmp_746 * 4] := srcPlug_5;
    Tmp_749 := idx_13;
    Tmp_750 := Ops_1 + Tmp_749 * 4;
    call {:si_unique_call 1076} sdv_hash_505774121(dstAddr_5, Tmp_750);
    call {:si_unique_call 1077} sdv_406 := sdv_hash_330049800(dstAddr_5);
    idx_13 := idx_13 + sdv_406;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} idx_13 >= 509;
    Tmp_741 := -1073741811;
    goto L1;

  anon6_Then:
    assume {:partition} 509 > idx_13;
    Tmp_748 := idx_13;
    idx_13 := idx_13 + 1;
    Tmp_744 := Tmp_748;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    Mem_T.INT4[Ops_1 + Tmp_744 * 4] := dstPlug_5;
    call {:si_unique_call 1078} sdv_407 := sdv_hash_434855337(AvcIrb_9, Opc_2);
    call {:si_unique_call 1079} sdv_408 := sdv_hash_861280784(sdv_407, idx_13, Ops_1);
    call {:si_unique_call 1080} vslice_dummy_var_160 := sdv_hash_282790223(OutputIrb_3, sdv_408);
    Tmp_741 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_13414602"} sdv_hash_13414602(actual_this_40: int, actual_sua_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_13414602"} sdv_hash_13414602(actual_this_40: int, actual_sua_1: int)
{
  var {:pointer} this_40: int;
  var {:pointer} sua_1: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;

  anon0:
    call {:si_unique_call 1081} vslice_dummy_var_161 := __HAVOC_malloc(4);
    this_40 := actual_this_40;
    sua_1 := actual_sua_1;
    call {:si_unique_call 1082} vslice_dummy_var_162 := sdv_hash_332631937(this_40, 32, sua_1);
    return;
}



procedure {:origName "sdv_hash_387797355"} sdv_hash_387797355(actual_this_41: int, actual_limit: int, actual_sua_2: int) returns (Tmp_753: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_753 == 0 || Tmp_753 == -1073741823 || Tmp_753 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_387797355"} sdv_hash_387797355(actual_this_41: int, actual_limit: int, actual_sua_2: int) returns (Tmp_753: int)
{
  var {:scalar} Tmp_754: int;
  var {:pointer} this_41: int;
  var {:scalar} limit: int;
  var {:pointer} sua_2: int;

  anon0:
    this_41 := actual_this_41;
    limit := actual_limit;
    sua_2 := actual_sua_2;
    assume {:nonnull} this_41 != 0;
    assume this_41 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sua_2 != 0;
    assume {:nonnull} this_41 != 0;
    assume this_41 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} this_41 != 0;
    assume this_41 > 0;
    havoc Tmp_754;
    call {:si_unique_call 1083} sdv_RtlCopyMemory(0, 0, Tmp_754);
    Tmp_753 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_753 := -1073741823;
    goto L1;

  anon8_Then:
    assume {:partition} sua_2 == 0;
    Tmp_753 := -1073741811;
    goto L1;

  anon7_Then:
    Tmp_753 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_901487196"} sdv_hash_901487196(actual_this_42: int) returns (Tmp_756: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_901487196"} sdv_hash_901487196(actual_this_42: int) returns (Tmp_756: int)
{
  var {:pointer} this_42: int;

  anon0:
    this_42 := actual_this_42;
    assume {:nonnull} this_42 != 0;
    assume this_42 > 0;
    havoc Tmp_756;
    return;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_163: int;

  anon0:
    call {:si_unique_call 1084} vslice_dummy_var_163 := __HAVOC_malloc(4);
    assume ClfsNullRecord_2 == 0;
    assume ClfsDataRecord_2 == 1;
    assume ClfsRestartRecord_2 == 2;
    assume ClfsClientRecord_2 == 3;
    assume ClsContainerInitializing_2 == 1;
    assume ClsContainerInactive_2 == 2;
    assume ClsContainerActive_2 == 4;
    assume ClsContainerActivePendingDelete_2 == 8;
    assume ClsContainerPendingArchive_2 == 16;
    assume ClsContainerPendingArchiveAndDelete_2 == 32;
    assume ClfsContainerInitializing_2 == 1;
    assume ClfsContainerInactive_2 == 2;
    assume ClfsContainerActive_2 == 4;
    assume ClfsContainerActivePendingDelete_2 == 8;
    assume ClfsContainerPendingArchive_2 == 16;
    assume ClfsContainerPendingArchiveAndDelete_2 == 32;
    assume CLFS_MAX_CONTAINER_INFO_2 == 256;
    assume CLFS_SCAN_INIT_2 == 1;
    assume CLFS_SCAN_FORWARD_2 == 2;
    assume CLFS_SCAN_BACKWARD_2 == 4;
    assume CLFS_SCAN_CLOSE_2 == 8;
    assume CLFS_SCAN_INITIALIZED_2 == 16;
    assume CLFS_SCAN_BUFFERED_2 == 32;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "sdv_hash_975613429"} sdv_hash_975613429(actual_this_43: int, actual_AvcIrb_10: int) returns (Tmp_760: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_975613429"} sdv_hash_975613429(actual_this_43: int, actual_AvcIrb_10: int) returns (Tmp_760: int)
{
  var {:scalar} ntStatus_23: int;
  var {:pointer} NextIrpStack_7: int;
  var {:pointer} this_43: int;
  var {:pointer} AvcIrb_10: int;

  anon0:
    this_43 := actual_this_43;
    AvcIrb_10 := actual_AvcIrb_10;
    assume {:nonnull} this_43 != 0;
    assume this_43 > 0;
    call {:si_unique_call 1085} NextIrpStack_7 := sdv_hash_784785994(m_Irp_CAvSyncIrp(this_43));
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} NextIrpStack_7 != 0;
    assume {:nonnull} NextIrpStack_7 != 0;
    assume NextIrpStack_7 > 0;
    assume {:nonnull} NextIrpStack_7 != 0;
    assume NextIrpStack_7 > 0;
    assume {:nonnull} NextIrpStack_7 != 0;
    assume NextIrpStack_7 > 0;
    assume {:nonnull} this_43 != 0;
    assume this_43 > 0;
    call {:si_unique_call 1086} ntStatus_23 := sdv_hash_63558310(m_Irp_CAvSyncIrp(this_43));
    goto L18;

  L18:
    Tmp_760 := ntStatus_23;
    return;

  anon3_Then:
    assume {:partition} NextIrpStack_7 == 0;
    ntStatus_23 := -1073741670;
    goto L18;
}



procedure {:origName "sdv_hash_134711981_sdv_special_DTOR"} sdv_hash_134711981_sdv_special_DTOR(actual_this_44: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_134711981_sdv_special_DTOR"} sdv_hash_134711981_sdv_special_DTOR(actual_this_44: int)
{
  var {:pointer} this_44: int;
  var vslice_dummy_var_164: int;

  anon0:
    call {:si_unique_call 1087} vslice_dummy_var_164 := __HAVOC_malloc(4);
    this_44 := actual_this_44;
    assume {:nonnull} this_44 != 0;
    assume this_44 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1088} IoFreeIrp(0);
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "sdv_hash_390207871"} sdv_hash_390207871(actual_this_45: int) returns (Tmp_764: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_390207871"} sdv_hash_390207871(actual_this_45: int) returns (Tmp_764: int)
{
  var {:pointer} this_45: int;

  anon0:
    this_45 := actual_this_45;
    assume {:nonnull} this_45 != 0;
    assume this_45 > 0;
    havoc Tmp_764;
    return;
}



procedure {:origName "sdv_hash_428960233_sdv_special_DTOR"} sdv_hash_428960233_sdv_special_DTOR(actual_this_46: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_428960233_sdv_special_DTOR"} sdv_hash_428960233_sdv_special_DTOR(actual_this_46: int)
{
  var {:pointer} this_46: int;
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 1089} vslice_dummy_var_165 := __HAVOC_malloc(4);
    this_46 := actual_this_46;
    assume {:nonnull} this_46 != 0;
    assume this_46 > 0;
    call {:si_unique_call 1090} sdv_hash_134711981_sdv_special_DTOR(m_Irp_CAvSyncIrp(this_46));
    return;
}



procedure {:origName "sdv_hash_802132520"} sdv_hash_802132520(actual_AvcIrb_11: int, actual_srcAddr_6: int, actual_srcPlug_6: int, actual_OutputIrb_4: int) returns (Tmp_768: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_768 == -1073741811 || Tmp_768 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_802132520"} sdv_hash_802132520(actual_AvcIrb_11: int, actual_srcAddr_6: int, actual_srcPlug_6: int, actual_OutputIrb_4: int) returns (Tmp_768: int)
{
  var {:scalar} Tmp_769: int;
  var {:pointer} Tmp_770: int;
  var {:scalar} Tmp_771: int;
  var {:scalar} sdv_413: int;
  var {:scalar} Tmp_772: int;
  var {:scalar} Tmp_774: int;
  var {:scalar} Tmp_775: int;
  var {:pointer} sdv_414: int;
  var {:pointer} sdv_415: int;
  var {:scalar} Tmp_776: int;
  var {:scalar} idx_14: int;
  var {:pointer} Ops_2: int;
  var {:scalar} Tmp_777: int;
  var {:scalar} Opc_3: int;
  var {:pointer} AvcIrb_11: int;
  var {:pointer} srcAddr_6: int;
  var {:scalar} srcPlug_6: int;
  var {:pointer} OutputIrb_4: int;
  var vslice_dummy_var_166: int;

  anon0:
    AvcIrb_11 := actual_AvcIrb_11;
    srcAddr_6 := actual_srcAddr_6;
    srcPlug_6 := actual_srcPlug_6;
    OutputIrb_4 := actual_OutputIrb_4;
    call {:si_unique_call 1091} Ops_2 := __HAVOC_malloc(2036);
    Opc_3 := 36;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    Mem_T.INT4[Ops_2] := 255;
    idx_14 := 1;
    Tmp_776 := idx_14;
    Tmp_770 := Ops_2 + Tmp_776 * 4;
    call {:si_unique_call 1092} sdv_hash_505774121(srcAddr_6, Tmp_770);
    call {:si_unique_call 1093} sdv_413 := sdv_hash_330049800(srcAddr_6);
    idx_14 := idx_14 + sdv_413;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} idx_14 >= 509;
    Tmp_768 := -1073741811;
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:partition} 509 > idx_14;
    Tmp_772 := idx_14;
    idx_14 := idx_14 + 1;
    Tmp_777 := Tmp_772;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    Mem_T.INT4[Ops_2 + Tmp_777 * 4] := srcPlug_6;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} idx_14 >= 509;
    Tmp_768 := -1073741811;
    goto L1;

  anon8_Then:
    assume {:partition} 509 > idx_14;
    Tmp_769 := idx_14;
    idx_14 := idx_14 + 1;
    Tmp_771 := Tmp_769;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    Mem_T.INT4[Ops_2 + Tmp_771 * 4] := 255;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} idx_14 >= 509;
    Tmp_768 := -1073741811;
    goto L1;

  anon9_Then:
    assume {:partition} 509 > idx_14;
    Tmp_774 := idx_14;
    idx_14 := idx_14 + 1;
    Tmp_775 := Tmp_774;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    Mem_T.INT4[Ops_2 + Tmp_775 * 4] := 254;
    call {:si_unique_call 1094} sdv_414 := sdv_hash_434855337(AvcIrb_11, Opc_3);
    call {:si_unique_call 1095} sdv_415 := sdv_hash_861280784(sdv_414, idx_14, Ops_2);
    call {:si_unique_call 1096} vslice_dummy_var_166 := sdv_hash_282790223(OutputIrb_4, sdv_415);
    Tmp_768 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_282790223"} sdv_hash_282790223(actual_this_47: int, actual_s_p_e_c_i_a_l_11: int) returns (Tmp_778: int);
  free ensures {:va_keep} Tmp_778 == actual_this_47;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_282790223"} sdv_hash_282790223(actual_this_47: int, actual_s_p_e_c_i_a_l_11: int) returns (Tmp_778: int)
{
  var {:pointer} this_47: int;

  anon0:
    this_47 := actual_this_47;
    Tmp_778 := this_47;
    return;
}



procedure {:origName "sdv_hash_405508819"} sdv_hash_405508819(actual_this_48: int, actual_sua_3: int) returns (Tmp_780: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_780 == 1 || Tmp_780 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_405508819"} sdv_hash_405508819(actual_this_48: int, actual_sua_3: int) returns (Tmp_780: int)
{
  var {:pointer} Tmp_781: int;
  var {:scalar} Tmp_782: int;
  var {:pointer} Tmp_784: int;
  var {:scalar} Tmp_785: int;
  var {:pointer} Tmp_786: int;
  var {:pointer} Tmp_788: int;
  var {:scalar} Tmp_789: int;
  var {:scalar} Tmp_790: int;
  var {:pointer} Tmp_791: int;
  var {:scalar} idx_15: int;
  var {:scalar} Tmp_792: int;
  var {:pointer} Tmp_793: int;
  var {:scalar} Tmp_794: int;
  var {:scalar} Tmp_795: int;
  var {:scalar} Tmp_796: int;
  var {:scalar} Tmp_797: int;
  var {:pointer} this_48: int;
  var {:pointer} sua_3: int;
  var vslice_dummy_var_167: int;

  anon0:
    this_48 := actual_this_48;
    sua_3 := actual_sua_3;
    call {:si_unique_call 1097} Tmp_781 := __HAVOC_malloc(128);
    call {:si_unique_call 1098} vslice_dummy_var_167 := __HAVOC_malloc(128);
    call {:si_unique_call 1099} Tmp_784 := __HAVOC_malloc(128);
    call {:si_unique_call 1100} Tmp_786 := __HAVOC_malloc(128);
    call {:si_unique_call 1101} Tmp_788 := __HAVOC_malloc(128);
    call {:si_unique_call 1102} Tmp_791 := __HAVOC_malloc(128);
    call {:si_unique_call 1103} Tmp_793 := __HAVOC_malloc(128);
    idx_15 := 1;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_780 := 1;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sua_3 != 0;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    havoc Tmp_793;
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    assume {:nonnull} sua_3 != 0;
    assume sua_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.INT4[Tmp_793] != Mem_T.INT4[sua_3];
    Tmp_780 := 0;
    goto L1;

  anon28_Then:
    assume {:partition} Mem_T.INT4[Tmp_793] == Mem_T.INT4[sua_3];
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L15;

  L15:
    call {:si_unique_call 1104} Tmp_782, Tmp_788, Tmp_790, idx_15 := sdv_hash_405508819_loop_L15(Tmp_782, Tmp_788, Tmp_790, idx_15, this_48, sua_3);
    goto L15_last;

  L15_last:
    Tmp_790 := idx_15;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    havoc Tmp_788;
    assume {:nonnull} Tmp_788 != 0;
    assume Tmp_788 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.INT4[Tmp_788 + Tmp_790 * 4] == 255;
    Tmp_782 := idx_15;
    assume {:nonnull} sua_3 != 0;
    assume sua_3 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.INT4[sua_3 + Tmp_782 * 4] != 255;
    Tmp_780 := 0;
    goto L1;

  anon31_Then:
    assume {:partition} Mem_T.INT4[sua_3 + Tmp_782 * 4] == 255;
    idx_15 := idx_15 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} Mem_T.INT4[Tmp_788 + Tmp_790 * 4] != 255;
    Tmp_794 := idx_15;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    havoc Tmp_791;
    Tmp_796 := idx_15;
    assume {:nonnull} Tmp_791 != 0;
    assume Tmp_791 > 0;
    assume {:nonnull} sua_3 != 0;
    assume sua_3 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.INT4[Tmp_791 + Tmp_794 * 4] != Mem_T.INT4[sua_3 + Tmp_796 * 4];
    Tmp_780 := 0;
    goto L1;

  anon32_Then:
    assume {:partition} Mem_T.INT4[Tmp_791 + Tmp_794 * 4] == Mem_T.INT4[sua_3 + Tmp_796 * 4];
    idx_15 := idx_15 + 1;
    goto L14;

  L14:
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    havoc Tmp_781;
    assume {:nonnull} Tmp_781 != 0;
    assume Tmp_781 > 0;
    Tmp_792 := BAND(Mem_T.INT4[Tmp_781], BOR(BOR(1, 2), 4));
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Tmp_792 == 5;
    goto L24;

  L24:
    call {:si_unique_call 1105} Tmp_784, Tmp_785, idx_15, Tmp_797 := sdv_hash_405508819_loop_L24(Tmp_784, Tmp_785, idx_15, Tmp_797, this_48, sua_3);
    goto L24_last;

  L24_last:
    Tmp_785 := idx_15;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    havoc Tmp_784;
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.INT4[Tmp_784 + Tmp_785 * 4] == 255;
    Tmp_797 := idx_15;
    assume {:nonnull} sua_3 != 0;
    assume sua_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[sua_3 + Tmp_797 * 4] != 255;
    Tmp_780 := 0;
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.INT4[sua_3 + Tmp_797 * 4] == 255;
    idx_15 := idx_15 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} Mem_T.INT4[Tmp_784 + Tmp_785 * 4] != 255;
    Tmp_795 := idx_15;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    havoc Tmp_786;
    Tmp_789 := idx_15;
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    assume {:nonnull} sua_3 != 0;
    assume sua_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.INT4[Tmp_786 + Tmp_795 * 4] != Mem_T.INT4[sua_3 + Tmp_789 * 4];
    Tmp_780 := 0;
    goto L1;

  anon36_Then:
    assume {:partition} Mem_T.INT4[Tmp_786 + Tmp_795 * 4] == Mem_T.INT4[sua_3 + Tmp_789 * 4];
    goto L23;

  L23:
    Tmp_780 := 1;
    goto L1;

  anon33_Then:
    assume {:partition} Tmp_792 != 5;
    goto L23;

  anon29_Then:
    goto L14;

  anon26_Then:
    Tmp_780 := 0;
    goto L1;

  anon25_Then:
    assume {:partition} sua_3 == 0;
    Tmp_780 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_507802687"} sdv_hash_507802687(actual_this_49: int, actual_Addr: int) returns (Tmp_798: int);
  free ensures {:va_keep} Tmp_798 == actual_this_49;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_507802687"} sdv_hash_507802687(actual_this_49: int, actual_Addr: int) returns (Tmp_798: int)
{
  var {:scalar} Tmp_799: int;
  var {:pointer} this_49: int;
  var {:pointer} Addr: int;

  anon0:
    this_49 := actual_this_49;
    Addr := actual_Addr;
    assume {:nonnull} this_49 != 0;
    assume this_49 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Addr != 0;
    Tmp_799 := 1;
    goto L7;

  L7:
    assume {:nonnull} this_49 != 0;
    assume this_49 > 0;
    Tmp_798 := this_49;
    return;

  anon3_Then:
    assume {:partition} Addr == 0;
    Tmp_799 := 0;
    goto L7;
}



procedure {:origName "sdv_hash_798100910"} sdv_hash_798100910(actual_this_50: int) returns (Tmp_801: int);
  free ensures {:va_keep} Tmp_801 == actual_this_50;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_798100910"} sdv_hash_798100910(actual_this_50: int) returns (Tmp_801: int)
{
  var {:pointer} this_50: int;

  anon0:
    this_50 := actual_this_50;
    assume {:nonnull} this_50 != 0;
    assume this_50 > 0;
    Tmp_801 := this_50;
    return;
}



procedure {:origName "sdv_hash_543516765_sdv_special_CTOR"} sdv_hash_543516765_sdv_special_CTOR(actual_this_51: int, actual_sua_4: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_543516765_sdv_special_CTOR"} sdv_hash_543516765_sdv_special_CTOR(actual_this_51: int, actual_sua_4: int)
{
  var {:pointer} this_51: int;
  var {:scalar} sua_4: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;

  anon0:
    call {:si_unique_call 1106} vslice_dummy_var_168 := __HAVOC_malloc(4);
    this_51 := actual_this_51;
    call {:si_unique_call 1107} sua_4 := __HAVOC_malloc(4);
    Mem_T.INT4[sua_4] := actual_sua_4;
    call {:si_unique_call 1108} vslice_dummy_var_169 := sdv_hash_332631937(this_51, 1, sua_4);
    return;
}



procedure {:origName "sdv_hash_850420247"} sdv_hash_850420247(actual_this_52: int) returns (Tmp_805: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_850420247"} sdv_hash_850420247(actual_this_52: int) returns (Tmp_805: int)
{
  var {:pointer} this_52: int;

  anon0:
    this_52 := actual_this_52;
    assume {:nonnull} this_52 != 0;
    assume this_52 > 0;
    havoc Tmp_805;
    return;
}



procedure {:origName "sdv_hash_478045804"} sdv_hash_478045804(actual_this_53: int) returns (Tmp_807: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_807 == actual_this_53;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_478045804"} sdv_hash_478045804(actual_this_53: int) returns (Tmp_807: int)
{
  var {:pointer} this_53: int;

  anon0:
    this_53 := actual_this_53;
    call {:si_unique_call 1109} sdv_RtlZeroMemory(0, 552);
    Tmp_807 := this_53;
    return;
}



procedure {:origName "IsEqualGUID"} IsEqualGUID(actual_rguid1: int, actual_rguid2: int) returns (Tmp_809: int);
  free ensures {:va_keep} Tmp_809 == 0 || Tmp_809 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IsEqualGUID"} IsEqualGUID(actual_rguid1: int, actual_rguid2: int) returns (Tmp_809: int)
{
  var {:scalar} sdv_418: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_418 != 0;
    Tmp_809 := 0;
    goto L10;

  L10:
    return;

  anon3_Then:
    assume {:partition} sdv_418 == 0;
    Tmp_809 := 1;
    goto L10;
}



procedure {:origName "sdv_hash_1046774778_sdv_special_CTOR"} sdv_hash_1046774778_sdv_special_CTOR(actual_this_54: int, actual_Parent_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_1046774778_sdv_special_CTOR"} sdv_hash_1046774778_sdv_special_CTOR(actual_this_54: int, actual_Parent_1: int)
{
  var {:pointer} Tmp_812: int;
  var {:pointer} this_54: int;
  var {:pointer} Parent_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 1110} vslice_dummy_var_170 := __HAVOC_malloc(4);
    this_54 := actual_this_54;
    Parent_1 := actual_Parent_1;
    assume {:nonnull} this_54 != 0;
    assume this_54 > 0;
    assume {:nonnull} this_54 != 0;
    assume this_54 > 0;
    assume {:nonnull} this_54 != 0;
    assume this_54 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    assume {:nonnull} this_54 != 0;
    assume this_54 > 0;
    havoc vslice_dummy_var_99;
    call {:si_unique_call 1111} boogieTmp := IoAllocateIrp(vslice_dummy_var_99, 0);
    return;
}



procedure {:origName "sdv_hash_575386943"} sdv_hash_575386943(actual_AvcIrb_12: int, actual_dstAddr_6: int, actual_dstPlug_6: int, actual_OutputIrb_5: int) returns (Tmp_814: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_814 == -1073741811 || Tmp_814 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_575386943"} sdv_hash_575386943(actual_AvcIrb_12: int, actual_dstAddr_6: int, actual_dstPlug_6: int, actual_OutputIrb_5: int) returns (Tmp_814: int)
{
  var {:scalar} Tmp_816: int;
  var {:scalar} sdv_420: int;
  var {:scalar} Tmp_817: int;
  var {:scalar} Tmp_818: int;
  var {:pointer} sdv_421: int;
  var {:pointer} sdv_422: int;
  var {:scalar} idx_16: int;
  var {:scalar} Tmp_819: int;
  var {:pointer} Tmp_820: int;
  var {:scalar} Tmp_821: int;
  var {:scalar} Tmp_822: int;
  var {:pointer} Ops_3: int;
  var {:scalar} Tmp_823: int;
  var {:scalar} Opc_4: int;
  var {:pointer} AvcIrb_12: int;
  var {:pointer} dstAddr_6: int;
  var {:scalar} dstPlug_6: int;
  var {:pointer} OutputIrb_5: int;
  var vslice_dummy_var_171: int;

  anon0:
    AvcIrb_12 := actual_AvcIrb_12;
    dstAddr_6 := actual_dstAddr_6;
    dstPlug_6 := actual_dstPlug_6;
    OutputIrb_5 := actual_OutputIrb_5;
    call {:si_unique_call 1112} Ops_3 := __HAVOC_malloc(2036);
    Opc_4 := 36;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    Mem_T.INT4[Ops_3] := 255;
    idx_16 := 1;
    Tmp_822 := idx_16;
    idx_16 := idx_16 + 1;
    Tmp_823 := Tmp_822;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    Mem_T.INT4[Ops_3 + Tmp_823 * 4] := 255;
    Tmp_819 := idx_16;
    idx_16 := idx_16 + 1;
    Tmp_816 := Tmp_819;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    Mem_T.INT4[Ops_3 + Tmp_816 * 4] := 254;
    Tmp_817 := idx_16;
    Tmp_820 := Ops_3 + Tmp_817 * 4;
    call {:si_unique_call 1113} sdv_hash_505774121(dstAddr_6, Tmp_820);
    call {:si_unique_call 1114} sdv_420 := sdv_hash_330049800(dstAddr_6);
    idx_16 := idx_16 + sdv_420;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} idx_16 >= 509;
    Tmp_814 := -1073741811;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 509 > idx_16;
    Tmp_818 := idx_16;
    idx_16 := idx_16 + 1;
    Tmp_821 := Tmp_818;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    Mem_T.INT4[Ops_3 + Tmp_821 * 4] := dstPlug_6;
    call {:si_unique_call 1115} sdv_421 := sdv_hash_434855337(AvcIrb_12, Opc_4);
    call {:si_unique_call 1116} sdv_422 := sdv_hash_861280784(sdv_421, idx_16, Ops_3);
    call {:si_unique_call 1117} vslice_dummy_var_171 := sdv_hash_282790223(OutputIrb_5, sdv_422);
    Tmp_814 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_505774121"} sdv_hash_505774121(actual_this_55: int, actual_sua_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_505774121"} sdv_hash_505774121(actual_this_55: int, actual_sua_5: int)
{
  var {:pointer} this_55: int;
  var {:pointer} sua_5: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;

  anon0:
    call {:si_unique_call 1118} vslice_dummy_var_172 := __HAVOC_malloc(4);
    this_55 := actual_this_55;
    sua_5 := actual_sua_5;
    call {:si_unique_call 1119} vslice_dummy_var_173 := sdv_hash_387797355(this_55, 32, sua_5);
    return;
}



procedure {:origName "sdv_hash_64962389"} sdv_hash_64962389(actual_s_4: int) returns (Tmp_826: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_64962389"} sdv_hash_64962389(actual_s_4: int) returns (Tmp_826: int)
{
  var {:scalar} s_4: int;

  anon0:
    s_4 := actual_s_4;
    call {:si_unique_call 1120} Tmp_826 := ExAllocatePoolWithTag(0, s_4, 541283905);
    return;
}



procedure {:origName "sdv_hash_784785994"} sdv_hash_784785994(actual_this_56: int) returns (Tmp_828: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_784785994"} sdv_hash_784785994(actual_this_56: int) returns (Tmp_828: int)
{
  var {:pointer} rc: int;
  var {:pointer} this_56: int;
  var vslice_dummy_var_100: int;

  anon0:
    this_56 := actual_this_56;
    assume {:nonnull} this_56 != 0;
    assume this_56 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} this_56 != 0;
    assume this_56 > 0;
    havoc vslice_dummy_var_100;
    call {:si_unique_call 1121} rc := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_100);
    goto L10;

  L10:
    Tmp_828 := rc;
    return;

  anon3_Then:
    rc := 0;
    goto L10;
}



procedure {:origName "sdv_hash_103855929"} sdv_hash_103855929(actual_this_57: int) returns (Tmp_830: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_103855929"} sdv_hash_103855929(actual_this_57: int) returns (Tmp_830: int)
{
  var {:pointer} this_57: int;

  anon0:
    this_57 := actual_this_57;
    assume {:nonnull} this_57 != 0;
    assume this_57 > 0;
    havoc Tmp_830;
    return;
}



procedure {:origName "sdv_hash_265299797_sdv_special_CTOR"} sdv_hash_265299797_sdv_special_CTOR(actual_this_58: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_265299797_sdv_special_CTOR"} sdv_hash_265299797_sdv_special_CTOR(actual_this_58: int)
{
  var {:pointer} this_58: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;

  anon0:
    call {:si_unique_call 1122} vslice_dummy_var_174 := __HAVOC_malloc(4);
    this_58 := actual_this_58;
    assume {:nonnull} this_58 != 0;
    assume this_58 > 0;
    call {:si_unique_call 1123} vslice_dummy_var_175 := sdv_hash_478045804(this_58);
    return;
}



procedure {:origName "sdv_hash_948020419_sdv_special_CTOR"} sdv_hash_948020419_sdv_special_CTOR(actual_this_59: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_948020419_sdv_special_CTOR"} sdv_hash_948020419_sdv_special_CTOR(actual_this_59: int)
{
  var {:pointer} this_59: int;
  var vslice_dummy_var_176: int;

  anon0:
    call {:si_unique_call 1124} vslice_dummy_var_176 := __HAVOC_malloc(4);
    this_59 := actual_this_59;
    assume {:nonnull} this_59 != 0;
    assume this_59 > 0;
    return;
}



procedure {:origName "sdv_hash_332631937"} sdv_hash_332631937(actual_this_60: int, actual_limit_1: int, actual_sua_6: int) returns (Tmp_836: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_836 == 0 || Tmp_836 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_332631937"} sdv_hash_332631937(actual_this_60: int, actual_limit_1: int, actual_sua_6: int) returns (Tmp_836: int)
{
  var {:scalar} Tmp_837: int;
  var {:scalar} Tmp_838: int;
  var {:scalar} Tmp_839: int;
  var {:pointer} Tmp_840: int;
  var {:scalar} Tmp_841: int;
  var {:scalar} Tmp_842: int;
  var {:pointer} Tmp_843: int;
  var {:pointer} Tmp_844: int;
  var {:scalar} Tmp_846: int;
  var {:scalar} Tmp_847: int;
  var {:scalar} ntStatus_24: int;
  var {:scalar} Tmp_848: int;
  var {:scalar} Tmp_849: int;
  var {:pointer} Tmp_850: int;
  var {:scalar} Tmp_851: int;
  var {:scalar} Tmp_852: int;
  var {:scalar} idx_17: int;
  var {:pointer} Tmp_853: int;
  var {:scalar} Tmp_854: int;
  var {:pointer} this_60: int;
  var {:scalar} limit_1: int;
  var {:pointer} sua_6: int;

  anon0:
    this_60 := actual_this_60;
    limit_1 := actual_limit_1;
    sua_6 := actual_sua_6;
    call {:si_unique_call 1125} Tmp_840 := __HAVOC_malloc(128);
    call {:si_unique_call 1126} Tmp_843 := __HAVOC_malloc(128);
    call {:si_unique_call 1127} Tmp_844 := __HAVOC_malloc(128);
    call {:si_unique_call 1128} Tmp_850 := __HAVOC_malloc(128);
    call {:si_unique_call 1129} Tmp_853 := __HAVOC_malloc(128);
    ntStatus_24 := 0;
    idx_17 := 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sua_6 != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} limit_1 > 32;
    limit_1 := 32;
    goto L10;

  L10:
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    havoc Tmp_853;
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    Mem_T.INT4[Tmp_853] := Mem_T.INT4[sua_6];
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L14;

  L14:
    call {:si_unique_call 1130} Tmp_840, Tmp_848, Tmp_851, idx_17 := sdv_hash_332631937_loop_L14(Tmp_840, Tmp_848, Tmp_851, idx_17, this_60, limit_1, sua_6);
    goto L14_last;

  L14_last:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} limit_1 > idx_17;
    Tmp_851 := idx_17;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_851 * 4] == 255;
    Tmp_848 := idx_17;
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    havoc Tmp_840;
    assume {:nonnull} Tmp_840 != 0;
    assume Tmp_840 > 0;
    Mem_T.INT4[Tmp_840 + Tmp_848 * 4] := 255;
    idx_17 := idx_17 + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_851 * 4] != 255;
    goto L15;

  L15:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} limit_1 > idx_17;
    Tmp_849 := idx_17;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_849 * 4] != 0;
    Tmp_846 := idx_17;
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    havoc Tmp_843;
    Tmp_838 := idx_17;
    assume {:nonnull} Tmp_843 != 0;
    assume Tmp_843 > 0;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    Mem_T.INT4[Tmp_843 + Tmp_846 * 4] := Mem_T.INT4[sua_6 + Tmp_838 * 4];
    idx_17 := idx_17 + 1;
    goto L13;

  L13:
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    Tmp_847 := BAND(Mem_T.INT4[sua_6], BOR(BOR(1, 2), 4));
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Tmp_847 == 5;
    goto L25;

  L25:
    call {:si_unique_call 1131} Tmp_837, Tmp_842, Tmp_844, idx_17 := sdv_hash_332631937_loop_L25(Tmp_837, Tmp_842, Tmp_844, idx_17, this_60, limit_1, sua_6);
    goto L25_last;

  L25_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} limit_1 > idx_17;
    Tmp_842 := idx_17;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_842 * 4] == 255;
    Tmp_837 := idx_17;
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    havoc Tmp_844;
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    Mem_T.INT4[Tmp_844 + Tmp_837 * 4] := 255;
    idx_17 := idx_17 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_842 * 4] != 255;
    goto L26;

  L26:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} limit_1 > idx_17;
    Tmp_839 := idx_17;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_839 * 4] != 0;
    Tmp_852 := idx_17;
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    havoc Tmp_850;
    Tmp_841 := idx_17;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    assume {:nonnull} sua_6 != 0;
    assume sua_6 > 0;
    Mem_T.INT4[Tmp_850 + Tmp_852 * 4] := Mem_T.INT4[sua_6 + Tmp_841 * 4];
    idx_17 := idx_17 + 1;
    goto L24;

  L24:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_24 != 0;
    Tmp_854 := 0;
    goto L36;

  L36:
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    Tmp_836 := ntStatus_24;
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} ntStatus_24 == 0;
    Tmp_854 := idx_17;
    goto L36;

  anon39_Then:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_839 * 4] == 0;
    goto L30;

  L30:
    ntStatus_24 := -1073741811;
    goto L24;

  anon32_Then:
    assume {:partition} idx_17 >= limit_1;
    goto L30;

  anon31_Then:
    assume {:partition} idx_17 >= limit_1;
    goto L26;

  anon37_Then:
    assume {:partition} Tmp_847 != 5;
    goto L24;

  anon36_Then:
    assume {:partition} Mem_T.INT4[sua_6 + Tmp_849 * 4] == 0;
    goto L19;

  L19:
    ntStatus_24 := -1073741811;
    goto L13;

  anon29_Then:
    assume {:partition} idx_17 >= limit_1;
    goto L19;

  anon28_Then:
    assume {:partition} idx_17 >= limit_1;
    goto L15;

  anon34_Then:
    goto L13;

  anon27_Then:
    assume {:partition} 32 >= limit_1;
    goto L10;

  anon33_Then:
    assume {:partition} sua_6 == 0;
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    Tmp_836 := ntStatus_24;
    goto L1;
}



procedure {:origName "sdv_hash_664127497"} sdv_hash_664127497(actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_Event_5: int) returns (Tmp_855: int);
  free ensures {:va_keep} Tmp_855 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_664127497"} sdv_hash_664127497(actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_Event_5: int) returns (Tmp_855: int)
{
  var {:pointer} Event_5: int;
  var vslice_dummy_var_177: int;

  anon0:
    Event_5 := actual_Event_5;
    call {:si_unique_call 1132} vslice_dummy_var_177 := KeSetEvent(Event_5, 0, 0);
    Tmp_855 := -1073741802;
    return;
}



procedure {:origName "sdv_hash_945618448"} sdv_hash_945618448(actual_AvcIrb_13: int) returns (Tmp_857: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_857 == actual_AvcIrb_13;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_945618448"} sdv_hash_945618448(actual_AvcIrb_13: int) returns (Tmp_857: int)
{
  var {:pointer} sdv_429: int;
  var {:pointer} sdv_430: int;
  var {:pointer} Ops_4: int;
  var {:scalar} Opc_5: int;
  var {:pointer} AvcIrb_13: int;

  anon0:
    AvcIrb_13 := actual_AvcIrb_13;
    call {:si_unique_call 1133} Ops_4 := __HAVOC_malloc(20);
    Opc_5 := 2;
    assume {:nonnull} Ops_4 != 0;
    assume Ops_4 > 0;
    Mem_T.INT4[Ops_4] := 0;
    call {:si_unique_call 1134} sdv_429 := sdv_hash_434855337(AvcIrb_13, Opc_5);
    call {:si_unique_call 1135} sdv_430 := sdv_hash_861280784(sdv_429, 5, Ops_4);
    Tmp_857 := sdv_430;
    return;
}



procedure {:origName "sdv_hash_567308675_sdv_special_CTOR"} sdv_hash_567308675_sdv_special_CTOR(actual_this_61: int, actual_sua_7: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_567308675_sdv_special_CTOR"} sdv_hash_567308675_sdv_special_CTOR(actual_this_61: int, actual_sua_7: int)
{
  var {:pointer} this_61: int;
  var {:pointer} sua_7: int;
  var vslice_dummy_var_178: int;

  anon0:
    call {:si_unique_call 1136} vslice_dummy_var_178 := __HAVOC_malloc(4);
    this_61 := actual_this_61;
    sua_7 := actual_sua_7;
    call {:si_unique_call 1137} sdv_hash_13414602(this_61, sua_7);
    return;
}



procedure {:origName "sdv_hash_842212107"} sdv_hash_842212107(actual_AvcIrb_14: int, actual_srcAddr_7: int, actual_srcPlug_7: int, actual_dstAddr_7: int, actual_dstPlug_7: int, actual_OutputIrb_6: int) returns (Tmp_861: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_861 == -1073741811 || Tmp_861 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_842212107"} sdv_hash_842212107(actual_AvcIrb_14: int, actual_srcAddr_7: int, actual_srcPlug_7: int, actual_dstAddr_7: int, actual_dstPlug_7: int, actual_OutputIrb_6: int) returns (Tmp_861: int)
{
  var {:scalar} Tmp_862: int;
  var {:scalar} Tmp_863: int;
  var {:scalar} Tmp_865: int;
  var {:pointer} Tmp_866: int;
  var {:scalar} sdv_431: int;
  var {:scalar} Tmp_867: int;
  var {:pointer} Tmp_868: int;
  var {:scalar} Tmp_869: int;
  var {:scalar} sdv_432: int;
  var {:pointer} sdv_433: int;
  var {:pointer} sdv_435: int;
  var {:scalar} idx_18: int;
  var {:pointer} Ops_5: int;
  var {:scalar} Tmp_870: int;
  var {:scalar} Opc_6: int;
  var {:pointer} AvcIrb_14: int;
  var {:pointer} srcAddr_7: int;
  var {:scalar} srcPlug_7: int;
  var {:pointer} dstAddr_7: int;
  var {:scalar} dstPlug_7: int;
  var {:pointer} OutputIrb_6: int;
  var vslice_dummy_var_179: int;

  anon0:
    AvcIrb_14 := actual_AvcIrb_14;
    srcAddr_7 := actual_srcAddr_7;
    srcPlug_7 := actual_srcPlug_7;
    dstAddr_7 := actual_dstAddr_7;
    dstPlug_7 := actual_dstPlug_7;
    OutputIrb_6 := actual_OutputIrb_6;
    call {:si_unique_call 1138} Ops_5 := __HAVOC_malloc(2036);
    Opc_6 := 36;
    assume {:nonnull} Ops_5 != 0;
    assume Ops_5 > 0;
    Mem_T.INT4[Ops_5] := 255;
    idx_18 := 1;
    Tmp_870 := idx_18;
    Tmp_868 := Ops_5 + Tmp_870 * 4;
    call {:si_unique_call 1139} sdv_hash_505774121(srcAddr_7, Tmp_868);
    call {:si_unique_call 1140} sdv_431 := sdv_hash_330049800(srcAddr_7);
    idx_18 := idx_18 + sdv_431;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} idx_18 >= 509;
    Tmp_861 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} 509 > idx_18;
    Tmp_867 := idx_18;
    idx_18 := idx_18 + 1;
    Tmp_862 := Tmp_867;
    assume {:nonnull} Ops_5 != 0;
    assume Ops_5 > 0;
    Mem_T.INT4[Ops_5 + Tmp_862 * 4] := srcPlug_7;
    Tmp_863 := idx_18;
    Tmp_866 := Ops_5 + Tmp_863 * 4;
    call {:si_unique_call 1141} sdv_hash_505774121(dstAddr_7, Tmp_866);
    call {:si_unique_call 1142} sdv_432 := sdv_hash_330049800(dstAddr_7);
    idx_18 := idx_18 + sdv_432;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} idx_18 >= 509;
    Tmp_861 := -1073741811;
    goto L1;

  anon6_Then:
    assume {:partition} 509 > idx_18;
    Tmp_865 := idx_18;
    idx_18 := idx_18 + 1;
    Tmp_869 := Tmp_865;
    assume {:nonnull} Ops_5 != 0;
    assume Ops_5 > 0;
    Mem_T.INT4[Ops_5 + Tmp_869 * 4] := dstPlug_7;
    call {:si_unique_call 1143} sdv_433 := sdv_hash_434855337(AvcIrb_14, Opc_6);
    call {:si_unique_call 1144} sdv_435 := sdv_hash_861280784(sdv_433, idx_18, Ops_5);
    call {:si_unique_call 1145} vslice_dummy_var_179 := sdv_hash_282790223(OutputIrb_6, sdv_435);
    Tmp_861 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_861280784"} sdv_hash_861280784(actual_this_62: int, actual_cOps: int, actual_Ops_6: int) returns (Tmp_871: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_871 == actual_this_62;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_861280784"} sdv_hash_861280784(actual_this_62: int, actual_cOps: int, actual_Ops_6: int) returns (Tmp_871: int)
{
  var {:scalar} Tmp_872: int;
  var {:pointer} this_62: int;
  var {:scalar} cOps: int;

  anon0:
    this_62 := actual_this_62;
    cOps := actual_cOps;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cOps > 509;
    Tmp_872 := 509;
    goto L6;

  L6:
    cOps := Tmp_872;
    assume {:nonnull} this_62 != 0;
    assume this_62 > 0;
    call {:si_unique_call 1146} sdv_RtlCopyMemory(0, 0, cOps);
    Tmp_871 := this_62;
    return;

  anon3_Then:
    assume {:partition} 509 >= cOps;
    Tmp_872 := cOps;
    goto L6;
}



procedure {:origName "sdv_hash_592377359"} sdv_hash_592377359(actual_this_63: int, actual_AvcIrb_15: int) returns (Tmp_874: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_592377359"} sdv_hash_592377359(actual_this_63: int, actual_AvcIrb_15: int) returns (Tmp_874: int)
{
  var {:pointer} sdv_436: int;
  var {:pointer} this_63: int;
  var {:pointer} AvcIrb_15: int;

  anon0:
    this_63 := actual_this_63;
    AvcIrb_15 := actual_AvcIrb_15;
    call {:si_unique_call 1147} sdv_436 := sdv_hash_684117243(AvcIrb_15);
    call {:si_unique_call 1148} Tmp_874 := sdv_hash_975613429(this_63, sdv_436);
    return;
}



procedure {:origName "sdv_hash_818961282"} sdv_hash_818961282(actual_this_64: int) returns (Tmp_876: int);
  free ensures {:va_keep} Tmp_876 == 0 || Tmp_876 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_818961282"} sdv_hash_818961282(actual_this_64: int) returns (Tmp_876: int)
{
  var {:scalar} rc_1: int;
  var {:pointer} this_64: int;

  anon0:
    this_64 := actual_this_64;
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} this_64 != 0;
    assume this_64 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L6;

  L6:
    rc_1 := 1;
    goto L8;

  L8:
    Tmp_876 := rc_1;
    return;

  anon16_Then:
    rc_1 := 0;
    goto L8;

  anon17_Then:
    goto L6;

  anon18_Then:
    goto L6;

  anon19_Then:
    goto L6;

  anon20_Then:
    goto L6;

  anon21_Then:
    goto L6;

  anon15_Then:
    goto L6;
}



procedure {:origName "sdv_hash_648551832_sdv_special_DTOR"} sdv_hash_648551832_sdv_special_DTOR(actual_this_65: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_hash_648551832_sdv_special_DTOR"} sdv_hash_648551832_sdv_special_DTOR(actual_this_65: int)
{
  var vslice_dummy_var_180: int;

  anon0:
    call {:si_unique_call 1149} vslice_dummy_var_180 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Avc_InternalIoControl"} Avc_InternalIoControl(actual_DeviceObject_23: int, actual_Irp_27: int) returns (Tmp_880: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_InternalIoControl"} Avc_InternalIoControl(actual_DeviceObject_23: int, actual_Irp_27: int) returns (Tmp_880: int)
{
  var {:pointer} PdoData_3: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} Irb: int;
  var {:pointer} IrpStack_5: int;
  var {:pointer} AvcMultiFuncIrb: int;
  var {:pointer} AvcIrb_16: int;
  var {:scalar} ntStatus_25: int;
  var {:pointer} PdoExtension_15: int;
  var {:scalar} sdv_455: int;
  var {:pointer} Tmp_883: int;
  var {:pointer} CommonExtension: int;
  var {:pointer} AvcCmdIrb: int;
  var {:pointer} AvcCmdIrb_1: int;
  var {:scalar} ioControlCode: int;
  var {:pointer} Request: int;
  var {:pointer} BusExtension_3: int;
  var {:pointer} AvcCmdIrb_2: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_27: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;

  anon0:
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_27 := actual_Irp_27;
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    havoc CommonExtension;
    ntStatus_25 := 0;
    IrpStack_5 := 0;
    ioControlCode := 0;
    AvcIrb_16 := 0;
    Request := 0;
    Irb := 0;
    call {:si_unique_call 1150} IrpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc ioControlCode;
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    BusExtension_3 := CommonExtension;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} ioControlCode != 2228765;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} ioControlCode != 2228805;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} ioControlCode == 2228808;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc AvcIrb_16;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L184;

  L184:
    AvcCmdIrb_1 := AvcIrb_16;
    assume {:nonnull} AvcCmdIrb_1 != 0;
    assume AvcCmdIrb_1 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} AvcCmdIrb_1 != 0;
    assume AvcCmdIrb_1 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    ntStatus_25 := -1073741811;
    goto L186;

  L186:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} ntStatus_25 != 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1151} sdv_IoCompleteRequest(0, 0);
    goto L46;

  L46:
    Tmp_880 := ntStatus_25;
    goto LM2;

  LM2:
    return;

  anon174_Then:
    assume {:partition} ntStatus_25 == 0;
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    call {:si_unique_call 1152} ntStatus_25 := AvcProcessSendResponse(DeviceObject_23, Irp_27);
    goto L46;

  anon207_Then:
    ntStatus_25 := -1073741637;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1153} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon176_Then:
    call {:si_unique_call 1154} ntStatus_25 := AvcProcessGetRequest(DeviceObject_23, Irp_27);
    goto L46;

  anon175_Then:
    goto L186;

  anon231_Then:
    goto L186;

  anon172_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 1155} ntStatus_25 := AvcFindPeerDeviceObject(DeviceObject_23, Irp_27);
    goto L46;

  anon177_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    call {:si_unique_call 1156} ntStatus_25 := AvcGetPeerDeviceObjectList(DeviceObject_23, Irp_27);
    goto L46;

  anon178_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    call {:si_unique_call 1157} ntStatus_25 := AvcGetSubunitInfo(DeviceObject_23, Irp_27);
    goto L46;

  anon179_Then:
    ntStatus_25 := -1073741637;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1158} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon173_Then:
    goto L184;

  anon230_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto L253;

  L253:
    AvcCmdIrb := AvcIrb_16;
    assume {:nonnull} AvcCmdIrb != 0;
    assume AvcCmdIrb > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} AvcCmdIrb != 0;
    assume AvcCmdIrb > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} AvcCmdIrb != 0;
    assume AvcCmdIrb > 0;
    havoc Tmp_883;
    assume {:nonnull} Tmp_883 != 0;
    assume Tmp_883 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} Mem_T.INT4[Tmp_883] != 255;
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto L261;

  L261:
    ntStatus_25 := -1073741811;
    goto L255;

  L255:
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} ntStatus_25 != 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1159} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon185_Then:
    assume {:partition} ntStatus_25 == 0;
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    call {:si_unique_call 1160} ntStatus_25 := AvcProcessSendResponse(DeviceObject_23, Irp_27);
    goto L46;

  anon208_Then:
    ntStatus_25 := -1073741637;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1161} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon209_Then:
    call {:si_unique_call 1162} ntStatus_25 := AvcProcessGetRequest(DeviceObject_23, Irp_27);
    goto L46;

  anon189_Then:
    call {:si_unique_call 1163} ntStatus_25 := AvcProcessCommand(DeviceObject_23, Irp_27);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L46;

  anon234_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L261;

  anon188_Then:
    goto L255;

  anon233_Then:
    assume {:partition} Mem_T.INT4[Tmp_883] == 255;
    goto L255;

  anon186_Then:
    ntStatus_25 := -1073741811;
    goto L255;

  anon232_Then:
    goto L255;

  anon171_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L253;

  anon180_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto L253;

  anon181_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 1164} ntStatus_25 := AvcFindPeerDeviceObject(DeviceObject_23, Irp_27);
    goto L46;

  anon182_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    call {:si_unique_call 1165} ntStatus_25 := AvcGetPeerDeviceObjectList(DeviceObject_23, Irp_27);
    goto L46;

  anon183_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    call {:si_unique_call 1166} ntStatus_25 := AvcGetSubunitInfo(DeviceObject_23, Irp_27);
    goto L46;

  anon184_Then:
    ntStatus_25 := -1073741637;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1167} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon205_Then:
    assume {:partition} ioControlCode != 2228808;
    call {:si_unique_call 1168} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc vslice_dummy_var_101;
    call {:si_unique_call 1169} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_101, Irp_27);
    goto L46;

  anon206_Then:
    assume {:partition} ioControlCode == 2228805;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc Request;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto L289;

  L289:
    ntStatus_25 := -1073741811;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1170} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon229_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    call {:si_unique_call 1171} ntStatus_25 := Avc_61883BusResetNotificationRequest(CommonExtension, Request);
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1172} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon194_Then:
    call {:si_unique_call 1173} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc vslice_dummy_var_102;
    call {:si_unique_call 1174} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_102, Irp_27);
    goto L46;

  anon193_Then:
    goto L289;

  anon192_Then:
    goto L289;

  anon191_Then:
    goto L289;

  anon190_Then:
    goto L289;

  anon227_Then:
    assume {:partition} ioControlCode == 2228765;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc Irb;
    assume {:nonnull} Irb != 0;
    assume Irb > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    call {:si_unique_call 1175} ntStatus_25 := Avc_1394BusResetNotificationRequest(CommonExtension, Irb);
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1176} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon228_Then:
    call {:si_unique_call 1177} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc vslice_dummy_var_103;
    call {:si_unique_call 1178} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_103, Irp_27);
    goto L46;

  anon210_Then:
    PdoExtension_15 := CommonExtension;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc PdoData_3;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} ioControlCode != 2228765;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} ioControlCode != 2228805;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} ioControlCode == 2228808;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc AvcIrb_16;
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    goto L96;

  L96:
    AvcCmdIrb_2 := AvcIrb_16;
    assume {:nonnull} PdoData_3 != 0;
    assume PdoData_3 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    havoc Tmp_881;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} Mem_T.INT4[Tmp_881] != 255;
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    assume {:nonnull} PdoData_3 != 0;
    assume PdoData_3 > 0;
    havoc vslice_dummy_var_104;
    havoc vslice_dummy_var_105;
    call {:si_unique_call 1179} sdv_455 := AvcSubunitAddrsEqual(vslice_dummy_var_104, vslice_dummy_var_105);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} sdv_455 == 0;
    ntStatus_25 := -1073741811;
    goto L103;

  L103:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} ntStatus_25 != 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1180} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon163_Then:
    assume {:partition} ntStatus_25 == 0;
    call {:si_unique_call 1181} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_106;
    call {:si_unique_call 1182} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_106, Irp_27);
    goto L46;

  anon164_Then:
    assume {:partition} sdv_455 != 0;
    goto L103;

  anon216_Then:
    assume {:partition} Mem_T.INT4[Tmp_881] == 255;
    goto L103;

  anon162_Then:
    goto L100;

  L100:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    assume {:nonnull} PdoData_3 != 0;
    assume PdoData_3 > 0;
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto L103;

  anon161_Then:
    goto L100;

  anon215_Then:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    goto L121;

  L121:
    ntStatus_25 := -1073741811;
    goto L103;

  anon165_Then:
    goto L103;

  anon160_Then:
    goto L121;

  anon214_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L96;

  anon157_Then:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    goto L96;

  anon158_Then:
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    AvcMultiFuncIrb := AvcIrb_16;
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} AvcIrb_16 != 0;
    assume AvcIrb_16 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1183} ntStatus_25 := ConnectionMgrGetUniqueID(PdoExtension_15, UniqueID__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  L79:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto L42;

  L42:
    call {:si_unique_call 1184} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon226_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    havoc ntStatus_25;
    goto L79;

  anon198_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1185} ntStatus_25 := ConnectionMgrGetExtPlugCounts(PdoExtension_15, ExtPlugCounts__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon199_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1186} ntStatus_25 := ConnectionMgrClrConnectInfo(PdoExtension_15, PinId__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon224_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon200_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1187} ntStatus_25 := ConnectionMgrRelease(PdoExtension_15, PinId__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon223_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1188} ntStatus_25 := ConnectionMgrAcquire(PdoExtension_15, PinId__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon222_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon202_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1189} ntStatus_25 := ConnectionMgrSetConnectInfo(PdoExtension_15, SetConnectInfo__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon203_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1190} ntStatus_25 := ConnectionMgrGetConnectInfo(PdoExtension_15, PreConnectInfo__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon220_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon204_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1191} ntStatus_25 := ConnectionMgrPinDescriptor(PdoExtension_15, PinDescriptor__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon217_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 1192} ntStatus_25 := ConnectionMgrPinCount(PdoExtension_15, PinCount__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  anon218_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon159_Then:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    havoc ntStatus_25;
    goto L42;

  anon195_Then:
    assume {:partition} ioControlCode != 2228808;
    call {:si_unique_call 1193} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_107;
    call {:si_unique_call 1194} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_107, Irp_27);
    goto L46;

  anon196_Then:
    assume {:partition} ioControlCode == 2228805;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc Request;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    goto L125;

  L125:
    ntStatus_25 := -1073741811;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1195} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon213_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    call {:si_unique_call 1196} ntStatus_25 := Avc_61883BusResetNotificationRequest(CommonExtension, Request);
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1197} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon170_Then:
    call {:si_unique_call 1198} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_108;
    call {:si_unique_call 1199} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_108, Irp_27);
    goto L46;

  anon169_Then:
    goto L125;

  anon168_Then:
    goto L125;

  anon167_Then:
    goto L125;

  anon166_Then:
    goto L125;

  anon211_Then:
    assume {:partition} ioControlCode == 2228765;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc Irb;
    assume {:nonnull} Irb != 0;
    assume Irb > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    call {:si_unique_call 1200} ntStatus_25 := Avc_1394BusResetNotificationRequest(CommonExtension, Irb);
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 1201} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon212_Then:
    call {:si_unique_call 1202} sdv_IoSkipCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_109;
    call {:si_unique_call 1203} ntStatus_25 := sdv_IoCallDriver(vslice_dummy_var_109, Irp_27);
    goto L46;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_181: int;

  anon0:
    call {:si_unique_call 1204} vslice_dummy_var_181 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "Avc_SystemControl"} Avc_SystemControl(actual_DeviceObject_24: int, actual_Irp_28: int) returns (Tmp_886: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SystemControl"} Avc_SystemControl(actual_DeviceObject_24: int, actual_Irp_28: int) returns (Tmp_886: int)
{
  var {:scalar} ntStatus_26: int;
  var {:pointer} CommonExtension_1: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_28: int;
  var vslice_dummy_var_110: int;

  anon0:
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_28 := actual_Irp_28;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    havoc CommonExtension_1;
    call {:si_unique_call 1205} sdv_do_paged_code_check();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    call {:si_unique_call 1206} ntStatus_26 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_1));
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_26 != 0;
    ntStatus_26 := -1073741810;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    call {:si_unique_call 1207} sdv_IoCompleteRequest(0, 0);
    goto L20;

  L20:
    Tmp_886 := ntStatus_26;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} ntStatus_26 == 0;
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc ntStatus_26;
    call {:si_unique_call 1208} sdv_IoCompleteRequest(0, 0);
    goto L26;

  L26:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    call {:si_unique_call 1209} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_1));
    goto L20;

  anon10_Then:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1210} sdv_IoSkipCurrentIrpStackLocation(Irp_28);
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    havoc vslice_dummy_var_110;
    call {:si_unique_call 1211} ntStatus_26 := sdv_IoCallDriver(vslice_dummy_var_110, Irp_28);
    goto L26;

  anon11_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc ntStatus_26;
    call {:si_unique_call 1212} sdv_IoCompleteRequest(0, 0);
    goto L26;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_SetContentId"} Avc_SetContentId(actual_irp: int, actual_pKsProperty: int, actual_pvData: int) returns (Tmp_888: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SetContentId"} Avc_SetContentId(actual_irp: int, actual_pKsProperty: int, actual_pvData: int) returns (Tmp_888: int)
{
  var {:scalar} ntStatus_27: int;
  var {:pointer} iostack: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} irp: int;
  var {:pointer} pKsProperty: int;
  var {:pointer} pvData: int;

  anon0:
    irp := actual_irp;
    pKsProperty := actual_pKsProperty;
    pvData := actual_pvData;
    call {:si_unique_call 1213} iostack := sdv_IoGetCurrentIrpStackLocation(irp);
    assume {:nonnull} pKsProperty != 0;
    assume pKsProperty > 0;
    assume {:nonnull} pvData != 0;
    assume pvData > 0;
    assume {:nonnull} iostack != 0;
    assume iostack > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    call {:si_unique_call 1214} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pKsProperty != 0;
    assume pKsProperty > 0;
    Tmp_888 := ntStatus_27;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_IoControl"} Avc_IoControl(actual_DeviceObject_25: int, actual_Irp_29: int) returns (Tmp_891: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_IoControl"} Avc_IoControl(actual_DeviceObject_25: int, actual_Irp_29: int) returns (Tmp_891: int)
{
  var {:pointer} AddrSpec: int;
  var {:scalar} ioControlCode_1: int;
  var {:scalar} ioControlCode_2: int;
  var {:pointer} IrpStack_6: int;
  var {:scalar} cbIn_1: int;
  var {:scalar} ntStatus_28: int;
  var {:pointer} CommonExtension_3: int;
  var {:scalar} ioControlCode_3: int;
  var {:pointer} BusExtension_4: int;
  var {:pointer} AddrSpec_1: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_29: int;

  anon0:
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_29 := actual_Irp_29;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc CommonExtension_3;
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1215} sdv_IoCompleteRequest(0, 0);
    Tmp_891 := -1073741811;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon47_Then:
    goto L8;

  L8:
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    call {:si_unique_call 1216} ntStatus_28 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_3));
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ntStatus_28 != 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1217} sdv_IoCompleteRequest(0, 0);
    Tmp_891 := ntStatus_28;
    goto L1;

  anon48_Then:
    assume {:partition} ntStatus_28 == 0;
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1218} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    call {:si_unique_call 1219} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_3));
    Tmp_891 := -1073741810;
    goto L1;

  anon49_Then:
    call {:si_unique_call 1220} IrpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_29);
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1221} ntStatus_28 := Avc_InternalIoControl(DeviceObject_25, Irp_29);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    goto L48;

  L48:
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    call {:si_unique_call 1222} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_3));
    Tmp_891 := ntStatus_28;
    goto L1;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    ntStatus_28 := -1073741808;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1223} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon50_Then:
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    havoc ioControlCode_2;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} ioControlCode_2 == 3080195;
    call {:si_unique_call 1224} ntStatus_28 := KsPropertyHandleDrmSetContentId(Irp_29, li2bplFunctionConstant286);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1225} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    assume {:partition} ioControlCode_2 != 3080195;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc ntStatus_28;
    call {:si_unique_call 1226} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon51_Then:
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    havoc ioControlCode_1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} ioControlCode_1 == 3080195;
    call {:si_unique_call 1227} ntStatus_28 := KsPropertyHandleDrmSetContentId(Irp_29, li2bplFunctionConstant286);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1228} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:partition} ioControlCode_1 != 3080195;
    ntStatus_28 := -1073741808;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1229} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon52_Then:
    BusExtension_4 := CommonExtension_3;
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    havoc ioControlCode_3;
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    havoc cbIn_1;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} ioControlCode_3 != 2752512;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} ioControlCode_3 != 2752516;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} ioControlCode_3 == 2752520;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L71;

  L71:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1230} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon55_Then:
    call {:si_unique_call 1231} IoInvalidateDeviceRelations(0, 0);
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L71;

  anon57_Then:
    assume {:partition} ioControlCode_3 != 2752520;
    ntStatus_28 := -1073741808;
    goto L71;

  anon58_Then:
    assume {:partition} ioControlCode_3 == 2752516;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} cbIn_1 >= 5;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc AddrSpec_1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} AddrSpec_1 != 0;
    call {:si_unique_call 1232} ntStatus_28 := Avc_RemoveVirtualSubunitInfo(BusExtension_4, cbIn_1, AddrSpec_1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L71;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:partition} AddrSpec_1 == 0;
    ntStatus_28 := -1073741670;
    goto L71;

  anon54_Then:
    assume {:partition} 5 > cbIn_1;
    ntStatus_28 := -1073741306;
    goto L71;

  anon60_Then:
    assume {:partition} ioControlCode_3 == 2752512;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} cbIn_1 >= 5;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc AddrSpec;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} AddrSpec != 0;
    call {:si_unique_call 1233} ntStatus_28 := Avc_UpdateVirtualSubunitInfo(BusExtension_4, cbIn_1, AddrSpec);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} yogi_error != 1;
    goto L71;

  anon62_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:partition} AddrSpec == 0;
    ntStatus_28 := -1073741670;
    goto L71;

  anon53_Then:
    assume {:partition} 5 > cbIn_1;
    ntStatus_28 := -1073741306;
    goto L71;

  anon59_Then:
    goto L8;
}



procedure {:origName "Avc_FDO_PowerComplete"} Avc_FDO_PowerComplete(actual_DeviceObject_26: int, actual_Irp_30: int, actual_BusExtensionIn: int) returns (Tmp_893: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_893 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_FDO_PowerComplete"} Avc_FDO_PowerComplete(actual_DeviceObject_26: int, actual_Irp_30: int, actual_BusExtensionIn: int) returns (Tmp_893: int)
{
  var {:pointer} SD2: int;
  var {:scalar} State_2: int;
  var {:pointer} IrpStack_7: int;
  var {:scalar} sdv_2: int;
  var {:scalar} StateType: int;
  var {:pointer} BusExtension_5: int;
  var {:pointer} Irp_30: int;
  var {:pointer} BusExtensionIn: int;

  anon0:
    call {:si_unique_call 1234} State_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1235} sdv_2 := __HAVOC_malloc(8);
    Irp_30 := actual_Irp_30;
    BusExtensionIn := actual_BusExtensionIn;
    BusExtension_5 := BusExtensionIn;
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1236} sdv_IoMarkIrpPending(0);
    goto L9;

  L9:
    call {:si_unique_call 1237} IrpStack_7 := sdv_IoGetCurrentIrpStackLocation(Irp_30);
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc StateType;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    call {:si_unique_call 1238} SD2 := PoSetPowerState(0, StateType, State_2);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    call {:si_unique_call 1239} PoStartNextPowerIrp(0);
    Tmp_893 := 0;
    return;

  anon3_Then:
    goto L9;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_182: int;

  anon0:
    call {:si_unique_call 1240} vslice_dummy_var_182 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "Avc_PDO_Power"} Avc_PDO_Power(actual_PdoExtension_16: int, actual_Irp_31: int) returns (Tmp_897: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_PDO_Power"} Avc_PDO_Power(actual_PdoExtension_16: int, actual_Irp_31: int) returns (Tmp_897: int)
{
  var {:pointer} SD1: int;
  var {:scalar} State_3: int;
  var {:pointer} IrpStack_8: int;
  var {:scalar} sdv_1: int;
  var {:scalar} ntStatus_29: int;
  var {:scalar} StateType_1: int;
  var {:pointer} PdoExtension_16: int;
  var {:pointer} Irp_31: int;

  anon0:
    call {:si_unique_call 1241} State_3 := __HAVOC_malloc(8);
    call {:si_unique_call 1242} sdv_1 := __HAVOC_malloc(8);
    PdoExtension_16 := actual_PdoExtension_16;
    Irp_31 := actual_Irp_31;
    ntStatus_29 := 0;
    call {:si_unique_call 1243} IrpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_31);
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    havoc StateType_1;
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L20;

  L20:
    call {:si_unique_call 1244} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    call {:si_unique_call 1245} sdv_IoCompleteRequest(0, 0);
    Tmp_897 := ntStatus_29;
    return;

  anon11_Then:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    havoc ntStatus_29;
    goto L20;

  anon12_Then:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} StateType_1 == 1;
    call {:si_unique_call 1246} SD1 := PoSetPowerState(0, StateType_1, State_3);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto L20;

  anon9_Then:
    assume {:partition} StateType_1 != 1;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} StateType_1 == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto L20;

  anon10_Then:
    assume {:partition} StateType_1 != 0;
    goto L20;
}



procedure {:origName "Avc_FDO_Power"} Avc_FDO_Power(actual_BusExtension_6: int, actual_Irp_32: int) returns (Tmp_899: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_899 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_FDO_Power"} Avc_FDO_Power(actual_BusExtension_6: int, actual_Irp_32: int) returns (Tmp_899: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} State_4: int;
  var {:pointer} IrpStack_9: int;
  var {:scalar} ntStatus_30: int;
  var {:scalar} sdv: int;
  var {:scalar} StateType_2: int;
  var {:pointer} BusExtension_6: int;
  var {:pointer} Irp_32: int;

  anon0:
    call {:si_unique_call 1247} State_4 := __HAVOC_malloc(8);
    call {:si_unique_call 1248} sdv := __HAVOC_malloc(8);
    BusExtension_6 := actual_BusExtension_6;
    Irp_32 := actual_Irp_32;
    ntStatus_30 := 0;
    call {:si_unique_call 1249} IrpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_32);
    assume {:nonnull} IrpStack_9 != 0;
    assume IrpStack_9 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    assume {:nonnull} IrpStack_9 != 0;
    assume IrpStack_9 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    assume {:nonnull} IrpStack_9 != 0;
    assume IrpStack_9 > 0;
    havoc StateType_2;
    assume {:nonnull} IrpStack_9 != 0;
    assume IrpStack_9 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} IrpStack_9 != 0;
    assume IrpStack_9 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L20;

  L20:
    call {:si_unique_call 1250} PoStartNextPowerIrp(0);
    call {:si_unique_call 1251} sdv_IoSkipCurrentIrpStackLocation(Irp_32);
    call {:si_unique_call 1252} ntStatus_30 := PoCallDriver(0, Irp_32);
    Tmp_899 := ntStatus_30;
    goto L1;

  L1:
    return;

  anon17_Then:
    goto L20;

  anon18_Then:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} StateType_2 == 1;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1253} structPtr888sdv := PoSetPowerState(0, StateType_2, State_4);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto L20;

  anon15_Then:
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1254} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_32);
    call {:si_unique_call 1255} sdv_IoSetCompletionRoutine(Irp_32, li2bplFunctionConstant404, BusExtension_6, 1, 1, 1);
    call {:si_unique_call 1256} ntStatus_30 := PoCallDriver(0, Irp_32);
    Tmp_899 := ntStatus_30;
    goto L1;

  anon16_Then:
    goto L20;

  anon13_Then:
    assume {:partition} StateType_2 != 1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} StateType_2 == 0;
    assume {:nonnull} BusExtension_6 != 0;
    assume BusExtension_6 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto L20;

  anon14_Then:
    assume {:partition} StateType_2 != 0;
    goto L20;
}



procedure {:origName "Avc_Power"} Avc_Power(actual_DeviceObject_27: int, actual_Irp_33: int) returns (Tmp_901: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_Power"} Avc_Power(actual_DeviceObject_27: int, actual_Irp_33: int) returns (Tmp_901: int)
{
  var {:scalar} ntStatus_31: int;
  var {:pointer} CommonExtension_4: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Irp_33: int;

  anon0:
    DeviceObject_27 := actual_DeviceObject_27;
    Irp_33 := actual_Irp_33;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc CommonExtension_4;
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    call {:si_unique_call 1257} ntStatus_31 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_4));
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus_31 != 0;
    call {:si_unique_call 1258} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 1259} sdv_IoCompleteRequest(0, 0);
    goto L19;

  L19:
    Tmp_901 := ntStatus_31;
    return;

  anon7_Then:
    assume {:partition} ntStatus_31 == 0;
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 1260} ntStatus_31 := Avc_PDO_Power(CommonExtension_4, Irp_33);
    goto L25;

  L25:
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    call {:si_unique_call 1261} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_4));
    goto L19;

  anon8_Then:
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1262} ntStatus_31 := Avc_FDO_Power(CommonExtension_4, Irp_33);
    goto L25;

  anon9_Then:
    call {:si_unique_call 1263} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    havoc ntStatus_31;
    call {:si_unique_call 1264} sdv_IoCompleteRequest(0, 0);
    goto L25;
}



procedure {:origName "AvcReq_OutputPlugSignalMode"} AvcReq_OutputPlugSignalMode(actual_Command_19: int, actual_SubunitAddr_9: int) returns (Tmp_903: int);
  modifies alloc, Mem_T.INT4, yogi_error, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcReq_OutputPlugSignalMode"} AvcReq_OutputPlugSignalMode(actual_Command_19: int, actual_SubunitAddr_9: int) returns (Tmp_903: int)
{
  var {:dopa} {:scalar} SubunitAddrLen_1: int;
  var {:pointer} Tmp_904: int;
  var {:scalar} ntStatus_32: int;
  var {:pointer} Tmp_905: int;
  var {:scalar} Tmp_906: int;
  var {:pointer} Operands_6: int;
  var {:pointer} Command_19: int;
  var {:pointer} SubunitAddr_9: int;

  anon0:
    call {:si_unique_call 1265} SubunitAddrLen_1 := __HAVOC_malloc(4);
    Command_19 := actual_Command_19;
    SubunitAddr_9 := actual_SubunitAddr_9;
    call {:si_unique_call 1266} Tmp_904 := __HAVOC_malloc(2048);
    call {:si_unique_call 1267} Tmp_905 := __HAVOC_malloc(2048);
    ntStatus_32 := 0;
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    Mem_T.INT4[SubunitAddrLen_1] := 0;
    call {:si_unique_call 1268} sdv_do_paged_code_check();
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1269} ntStatus_32 := AvcValidateSubunitAddress(SubunitAddr_9, 32, SubunitAddrLen_1);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_32 != 0;
    Tmp_903 := -1073741811;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} ntStatus_32 == 0;
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    call {:si_unique_call 1270} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[SubunitAddrLen_1]);
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    havoc Tmp_905;
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    call {:si_unique_call 1271} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[SubunitAddrLen_1]);
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    havoc Tmp_906;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    havoc Tmp_904;
    Operands_6 := Tmp_904 + Tmp_906 * 4;
    assume {:nonnull} Operands_6 != 0;
    assume Operands_6 > 0;
    Mem_T.INT4[Operands_6] := 255;
    call {:si_unique_call 1272} ntStatus_32 := AvcRobustStatusRequest(Command_19);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} ntStatus_32 != 0;
    goto L35;

  L35:
    Tmp_903 := ntStatus_32;
    goto L1;

  anon14_Then:
    assume {:partition} ntStatus_32 == 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    ntStatus_32 := -1073741822;
    goto L36;

  L36:
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    ntStatus_32 := -1073741811;
    goto L35;

  anon16_Then:
    goto L35;

  anon15_Then:
    goto L36;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_Pnp"} Avc_Pnp(actual_DeviceObject_28: int, actual_Irp_34: int) returns (Tmp_909: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_Pnp"} Avc_Pnp(actual_DeviceObject_28: int, actual_Irp_34: int) returns (Tmp_909: int)
{
  var {:pointer} IrpStack_10: int;
  var {:scalar} ntStatus_33: int;
  var {:pointer} CommonExtension_5: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Irp_34: int;

  anon0:
    DeviceObject_28 := actual_DeviceObject_28;
    Irp_34 := actual_Irp_34;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc CommonExtension_5;
    call {:si_unique_call 1273} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1274} IrpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_34);
    assume {:nonnull} IrpStack_10 != 0;
    assume IrpStack_10 > 0;
    havoc MinorFunction;
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    call {:si_unique_call 1275} ntStatus_33 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_5));
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} ntStatus_33 != 0;
    ntStatus_33 := -1073741810;
    assume {:nonnull} Irp_34 != 0;
    assume Irp_34 > 0;
    call {:si_unique_call 1276} sdv_IoCompleteRequest(0, 0);
    goto L27;

  L27:
    Tmp_909 := ntStatus_33;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} ntStatus_33 == 0;
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1277} ntStatus_33 := Avc_PDO_Pnp(DeviceObject_28, Irp_34);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  L33:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} 2 != MinorFunction;
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    call {:si_unique_call 1278} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_5));
    goto L27;

  anon18_Then:
    assume {:partition} 2 == MinorFunction;
    goto L27;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 1279} ntStatus_33 := Avc_FDO_Pnp(DeviceObject_28, Irp_34);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L33;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_PnpAddDevice"} Avc_PnpAddDevice(actual_DriverObject_1: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_911: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_PnpAddDevice"} Avc_PnpAddDevice(actual_DriverObject_1: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_911: int)
{
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_912: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} sdv_499: int;
  var {:pointer} DeviceObject_29: int;
  var {:scalar} ntStatus_34: int;
  var {:pointer} PartialInfo: int;
  var {:pointer} Tmp_914: int;
  var {:pointer} Tmp_915: int;
  var {:pointer} BusExtension_7: int;
  var {:scalar} uniName: int;
  var {:pointer} ListHandle: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;

  anon0:
    call {:si_unique_call 1280} vslice_dummy_var_183 := __HAVOC_malloc(24);
    call {:si_unique_call 1281} DeviceObject_29 := __HAVOC_malloc(4);
    call {:si_unique_call 1282} uniName := __HAVOC_malloc(12);
    call {:si_unique_call 1283} ListHandle := __HAVOC_malloc(4);
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    call {:si_unique_call 1284} Tmp_912 := __HAVOC_malloc(36);
    call {:si_unique_call 1285} Tmp_914 := __HAVOC_malloc(80);
    ntStatus_34 := 0;
    call {:si_unique_call 1286} sdv_do_paged_code_check();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1287} ntStatus_34 := IoCreateDevice(0, 1424, 0, 42, 256, 0, DeviceObject_29);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} ntStatus_34 < 0;
    goto L151;

  L151:
    Tmp_911 := ntStatus_34;
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} 0 <= ntStatus_34;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc BusExtension_7;
    call {:si_unique_call 1288} sdv_RtlZeroMemory(0, 1424);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1289} ntStatus_34 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} ntStatus_34 >= 0;
    Tmp_914 := strConst__li2bpl3;
    call {:si_unique_call 1290} RtlInitUnicodeString(uniName, Tmp_914);
    call {:si_unique_call 1291} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1292} ntStatus_34 := ZwOpenKey(ListHandle, 983103, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_34 >= 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1293} ntStatus_34 := IoRegisterDeviceInterface(0, 0, 0, SymbolicLinkName__BUS_DEVICE_EXTENSION(BusExtension_7));
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1294} vslice_dummy_var_185 := ZwClose(0);
    goto L57;

  L57:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_34 >= 0;
    ResultLength_1 := 0;
    Tmp_912 := strConst__li2bpl4;
    call {:si_unique_call 1295} RtlInitUnicodeString(uniName, Tmp_912);
    call {:si_unique_call 1296} Tmp_915 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    Mem_T.INT4[Tmp_915] := ResultLength_1;
    call {:si_unique_call 1297} ntStatus_34 := ZwQueryValueKey(0, 0, 2, 0, 0, Tmp_915);
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    ResultLength_1 := Mem_T.INT4[Tmp_915];
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} -1073741772 != ntStatus_34;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ResultLength_1 != 0;
    call {:si_unique_call 1298} sdv_499 := ExAllocatePoolWithTag(1, ResultLength_1, 541283905);
    PartialInfo := sdv_499;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} PartialInfo != 0;
    call {:si_unique_call 1299} Tmp_915 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    Mem_T.INT4[Tmp_915] := ResultLength_1;
    call {:si_unique_call 1300} ntStatus_34 := ZwQueryValueKey(0, 0, 2, 0, ResultLength_1, Tmp_915);
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    ResultLength_1 := Mem_T.INT4[Tmp_915];
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} ntStatus_34 >= 0;
    assume {:nonnull} PartialInfo != 0;
    assume PartialInfo > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PartialInfo != 0;
    assume PartialInfo > 0;
    havoc Tmp_913;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} Tmp_913 != 0;
    assume Tmp_913 > 0;
    goto L84;

  L84:
    call {:si_unique_call 1301} sdv_ExFreePool(0);
    goto L71;

  L71:
    ntStatus_34 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1302} vslice_dummy_var_184 := ZwClose(0);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1303} AvcInitializeRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(BusExtension_7));
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1304} InitializeListHead(PdoList__BUS_DEVICE_EXTENSION(BusExtension_7));
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    Mem_T.INT4[UnitAddr__BUS_DEVICE_EXTENSION(BusExtension_7)] := 255;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1305} InitializeListHead(PendingResponseList__BUS_DEVICE_EXTENSION(BusExtension_7));
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1306} InitializeListHead(PendingRequestList__BUS_DEVICE_EXTENSION(BusExtension_7));
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1307} InitializeListHead(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_7));
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1308} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1309} Tmp_915 := __HAVOC_malloc(4);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    havoc vslice_dummy_var_111;
    Mem_T.INT4[Tmp_915] := vslice_dummy_var_111;
    call {:si_unique_call 1310} sdv_KeInitializeSpinLock(Tmp_915);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    call {:si_unique_call 1311} Tmp_915 := __HAVOC_malloc(4);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    havoc vslice_dummy_var_112;
    Mem_T.INT4[Tmp_915] := vslice_dummy_var_112;
    call {:si_unique_call 1312} sdv_KeInitializeSpinLock(Tmp_915);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    call {:si_unique_call 1313} KeInitializeTimerEx(0, 1);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    havoc vslice_dummy_var_113;
    call {:si_unique_call 1314} vslice_dummy_var_186 := KeSetTimer(0, vslice_dummy_var_113, 0);
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1315} boogieTmp := IoAttachDeviceToDeviceStack(0, PhysicalDeviceObject_1);
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1316} AvcAddInstanceToGlobalList(BusExtension_7);
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    goto L151;

  anon33_Then:
    call {:si_unique_call 1317} IoDeleteDevice(0);
    ntStatus_34 := -1073741810;
    goto L151;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto L84;

  anon31_Then:
    assume {:partition} 0 > ntStatus_34;
    goto L84;

  anon35_Then:
    assume {:partition} PartialInfo == 0;
    goto L71;

  anon30_Then:
    assume {:partition} ResultLength_1 == 0;
    goto L71;

  anon29_Then:
    assume {:partition} -1073741772 == ntStatus_34;
    goto L71;

  anon28_Then:
    assume {:partition} 0 > ntStatus_34;
    goto L58;

  anon27_Then:
    assume {:partition} 0 > ntStatus_34;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    call {:si_unique_call 1318} ntStatus_34 := IoRegisterDeviceInterface(0, 0, 0, SymbolicLinkName__BUS_DEVICE_EXTENSION(BusExtension_7));
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    goto L57;

  anon26_Then:
    assume {:partition} 0 > ntStatus_34;
    call {:si_unique_call 1319} IoDeleteDevice(0);
    goto L151;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_BuildIds"} Avc_BuildIds(actual_BusExtension_8: int, actual_PdoData_4: int, actual_SubunitAddr_10: int, actual_bidFlag: int) returns (Tmp_916: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_BuildIds"} Avc_BuildIds(actual_BusExtension_8: int, actual_PdoData_4: int, actual_SubunitAddr_10: int, actual_bidFlag: int) returns (Tmp_916: int)
{
  var {:scalar} Tmp_917: int;
  var {:scalar} Tmp_919: int;
  var {:scalar} Tmp_921: int;
  var {:scalar} Tmp_922: int;
  var {:scalar} Tmp_923: int;
  var {:pointer} SubunitJunk: int;
  var {:scalar} Tmp_930: int;
  var {:dopa} {:scalar} SubunitId_1: int;
  var {:pointer} sdv_527: int;
  var {:scalar} Tmp_934: int;
  var {:pointer} sdv_530: int;
  var {:scalar} Tmp_935: int;
  var {:pointer} UnitInfo: int;
  var {:pointer} sdv_535: int;
  var {:scalar} uniTemp: int;
  var {:scalar} Tmp_941: int;
  var {:pointer} sdv_543: int;
  var {:scalar} uniModelName: int;
  var {:dopa} {:scalar} SubunitAddrLen_2: int;
  var {:scalar} Tmp_946: int;
  var {:scalar} uniVendorName: int;
  var {:scalar} Tmp_947: int;
  var {:scalar} Tmp_948: int;
  var {:scalar} Tmp_950: int;
  var {:scalar} Tmp_951: int;
  var {:scalar} Tmp_953: int;
  var {:scalar} Tmp_956: int;
  var {:pointer} sdv_561: int;
  var {:scalar} Tmp_957: int;
  var {:pointer} sdv_569: int;
  var {:scalar} ntStatus_35: int;
  var {:scalar} NumberHardwareIds: int;
  var {:pointer} szTemp: int;
  var {:pointer} sdv_574: int;
  var {:scalar} uniSubunitId: int;
  var {:scalar} uniSubunitType: int;
  var {:scalar} Tmp_964: int;
  var {:scalar} idx_19: int;
  var {:pointer} SubunitType_3: int;
  var {:scalar} NumberCompatIds: int;
  var {:pointer} sdv_587: int;
  var {:pointer} BusExtension_8: int;
  var {:pointer} PdoData_4: int;
  var {:pointer} SubunitAddr_10: int;
  var {:scalar} bidFlag: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;

  anon0:
    call {:si_unique_call 1320} SubunitId_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1321} uniTemp := __HAVOC_malloc(12);
    call {:si_unique_call 1322} uniModelName := __HAVOC_malloc(12);
    call {:si_unique_call 1323} SubunitAddrLen_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1324} uniVendorName := __HAVOC_malloc(12);
    call {:si_unique_call 1325} uniSubunitId := __HAVOC_malloc(12);
    call {:si_unique_call 1326} uniSubunitType := __HAVOC_malloc(12);
    BusExtension_8 := actual_BusExtension_8;
    PdoData_4 := actual_PdoData_4;
    SubunitAddr_10 := actual_SubunitAddr_10;
    bidFlag := actual_bidFlag;
    call {:si_unique_call 1327} vslice_dummy_var_222 := __HAVOC_malloc(16);
    call {:si_unique_call 1328} vslice_dummy_var_223 := __HAVOC_malloc(20);
    call {:si_unique_call 1329} vslice_dummy_var_224 := __HAVOC_malloc(8);
    call {:si_unique_call 1330} vslice_dummy_var_225 := __HAVOC_malloc(16);
    call {:si_unique_call 1331} vslice_dummy_var_226 := __HAVOC_malloc(24);
    call {:si_unique_call 1332} vslice_dummy_var_227 := __HAVOC_malloc(20);
    call {:si_unique_call 1333} vslice_dummy_var_228 := __HAVOC_malloc(16);
    call {:si_unique_call 1334} SubunitJunk := __HAVOC_malloc(128);
    call {:si_unique_call 1335} vslice_dummy_var_229 := __HAVOC_malloc(8);
    call {:si_unique_call 1336} vslice_dummy_var_230 := __HAVOC_malloc(8);
    call {:si_unique_call 1337} vslice_dummy_var_231 := __HAVOC_malloc(8);
    call {:si_unique_call 1338} vslice_dummy_var_232 := __HAVOC_malloc(20);
    call {:si_unique_call 1339} vslice_dummy_var_233 := __HAVOC_malloc(40);
    call {:si_unique_call 1340} vslice_dummy_var_234 := __HAVOC_malloc(16);
    call {:si_unique_call 1341} vslice_dummy_var_235 := __HAVOC_malloc(16);
    call {:si_unique_call 1342} vslice_dummy_var_236 := __HAVOC_malloc(20);
    call {:si_unique_call 1343} vslice_dummy_var_237 := __HAVOC_malloc(20);
    call {:si_unique_call 1344} vslice_dummy_var_238 := __HAVOC_malloc(20);
    call {:si_unique_call 1345} vslice_dummy_var_239 := __HAVOC_malloc(24);
    call {:si_unique_call 1346} vslice_dummy_var_240 := __HAVOC_malloc(16);
    call {:si_unique_call 1347} vslice_dummy_var_241 := __HAVOC_malloc(8);
    call {:si_unique_call 1348} vslice_dummy_var_242 := __HAVOC_malloc(20);
    call {:si_unique_call 1349} vslice_dummy_var_243 := __HAVOC_malloc(20);
    call {:si_unique_call 1350} vslice_dummy_var_244 := __HAVOC_malloc(20);
    call {:si_unique_call 1351} szTemp := __HAVOC_malloc(8);
    call {:si_unique_call 1352} vslice_dummy_var_245 := __HAVOC_malloc(8);
    call {:si_unique_call 1353} vslice_dummy_var_246 := __HAVOC_malloc(24);
    call {:si_unique_call 1354} vslice_dummy_var_247 := __HAVOC_malloc(20);
    call {:si_unique_call 1355} SubunitType_3 := __HAVOC_malloc(128);
    call {:si_unique_call 1356} vslice_dummy_var_248 := __HAVOC_malloc(20);
    call {:si_unique_call 1357} vslice_dummy_var_249 := __HAVOC_malloc(32);
    call {:si_unique_call 1358} vslice_dummy_var_250 := __HAVOC_malloc(20);
    call {:si_unique_call 1359} vslice_dummy_var_251 := __HAVOC_malloc(16);
    call {:si_unique_call 1360} vslice_dummy_var_252 := __HAVOC_malloc(20);
    ntStatus_35 := 0;
    NumberCompatIds := 0;
    NumberHardwareIds := 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    UnitInfo := UnitIDs__BUS_DEVICE_EXTENSION(BusExtension_8);
    call {:si_unique_call 1361} sdv_do_paged_code_check();
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} 5 == bidFlag;
    goto L23;

  L23:
    call {:si_unique_call 1362} RtlInitUnicodeString(uniVendorName, 0);
    call {:si_unique_call 1363} RtlInitUnicodeString(uniModelName, 0);
    call {:si_unique_call 1364} RtlInitUnicodeString(uniSubunitType, 0);
    call {:si_unique_call 1365} RtlInitUnicodeString(uniSubunitId, 0);
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_941;
    call {:si_unique_call 1366} sdv_561 := ExAllocatePoolWithTag(1, Tmp_941, 541283905);
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_951;
    call {:si_unique_call 1367} sdv_RtlZeroMemory(0, Tmp_951);
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    call {:si_unique_call 1368} vslice_dummy_var_188 := corral_nondet();
    goto L54;

  L54:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_947;
    call {:si_unique_call 1369} sdv_535 := ExAllocatePoolWithTag(1, Tmp_947, 541283905);
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_919;
    call {:si_unique_call 1370} sdv_RtlZeroMemory(0, Tmp_919);
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 1371} vslice_dummy_var_189 := corral_nondet();
    goto L71;

  L71:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} bidFlag != 4;
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    havoc Tmp_948;
    call {:si_unique_call 1372} sdv_527 := ExAllocatePoolWithTag(1, Tmp_948, 541283905);
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    havoc Tmp_923;
    call {:si_unique_call 1373} sdv_RtlZeroMemory(0, Tmp_923);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} bidFlag != 1;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} bidFlag != 0;
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    havoc Tmp_930;
    call {:si_unique_call 1374} sdv_543 := ExAllocatePoolWithTag(1, Tmp_930, 541283905);
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    havoc Tmp_946;
    call {:si_unique_call 1375} sdv_RtlZeroMemory(0, Tmp_946);
    goto L72;

  L72:
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} bidFlag != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} bidFlag != 1;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} bidFlag != 2;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} bidFlag != 3;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} bidFlag != 4;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} bidFlag == 5;
    goto L414;

  L414:
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    Mem_T.INT4[SubunitAddrLen_2] := 0;
    call {:si_unique_call 1376} ntStatus_35 := AvcUnpackSubunitAddress(SubunitAddr_10, SubunitType_3, SubunitId_1, SubunitAddrLen_2);
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    call {:si_unique_call 1377} sdv_574 := ExAllocatePoolWithTag(0, Mem_T.INT4[SubunitAddrLen_2], 541283905);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    szTemp := strConst__li2bpl16;
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    call {:si_unique_call 1378} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[SubunitAddrLen_2]);
    call {:si_unique_call 1379} RtlInitUnicodeString(uniTemp, szTemp);
    call {:si_unique_call 1380} ntStatus_35 := AvcPackSubunitAddress(SubunitType_3, 0, 32, SubunitJunk, SubunitAddrLen_2);
    idx_19 := 0;
    goto L441;

  L441:
    call {:si_unique_call 1381} Tmp_917, Tmp_922, Tmp_934, Tmp_956, idx_19, vslice_dummy_var_217, vslice_dummy_var_218, vslice_dummy_var_288, vslice_dummy_var_289, vslice_dummy_var_290 := Avc_BuildIds_loop_L441(Tmp_917, Tmp_922, Tmp_934, SubunitAddrLen_2, Tmp_956, idx_19, SubunitType_3, vslice_dummy_var_217, vslice_dummy_var_218, vslice_dummy_var_288, vslice_dummy_var_289, vslice_dummy_var_290);
    goto L441_last;

  L441_last:
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} Mem_T.INT4[SubunitAddrLen_2] > idx_19;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} idx_19 != 0;
    call {:si_unique_call 1382} Tmp_956 := corral_nondet();
    call {:si_unique_call 1383} vslice_dummy_var_288 := RtlIntegerToUnicodeString(Tmp_956, 16, 0);
    call {:si_unique_call 1384} vslice_dummy_var_217 := corral_nondet();
    Tmp_934 := idx_19;
    assume {:nonnull} SubunitType_3 != 0;
    assume SubunitType_3 > 0;
    Tmp_922 := BAND(Mem_T.INT4[SubunitType_3 + Tmp_934 * 4], BOR(BOR(BOR(1, 2), 4), 8));
    call {:si_unique_call 1385} vslice_dummy_var_289 := RtlIntegerToUnicodeString(Tmp_922, 16, 0);
    call {:si_unique_call 1386} vslice_dummy_var_218 := corral_nondet();
    goto L461;

  L461:
    idx_19 := idx_19 + 1;
    goto L461_dummy;

  L461_dummy:
    assume false;
    return;

  anon195_Then:
    assume {:partition} idx_19 == 0;
    assume {:nonnull} SubunitType_3 != 0;
    assume SubunitType_3 > 0;
    Tmp_917 := Mem_T.INT4[SubunitType_3];
    call {:si_unique_call 1387} vslice_dummy_var_290 := RtlIntegerToUnicodeString(Tmp_917, 16, 0);
    goto L461;

  anon194_Then:
    assume {:partition} idx_19 >= Mem_T.INT4[SubunitAddrLen_2];
    assume {:nonnull} SubunitId_1 != 0;
    assume SubunitId_1 > 0;
    call {:si_unique_call 1388} vslice_dummy_var_216 := RtlIntegerToUnicodeString(Mem_T.INT4[SubunitId_1], 16, 0);
    NumberHardwareIds := 2;
    NumberCompatIds := 2;
    goto L153;

  L153:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} ntStatus_35 == 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc Tmp_950;
    call {:si_unique_call 1389} sdv_530 := ExAllocatePoolWithTag(0, Tmp_950, 541283905);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc Tmp_921;
    call {:si_unique_call 1390} sdv_RtlZeroMemory(0, Tmp_921);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} bidFlag != 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} bidFlag != 1;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} bidFlag != 2;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} bidFlag != 3;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} bidFlag != 4;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} bidFlag == 5;
    goto L172;

  L172:
    call {:si_unique_call 1391} vslice_dummy_var_191 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto L202;

  L202:
    call {:si_unique_call 1392} vslice_dummy_var_195 := corral_nondet();
    call {:si_unique_call 1393} vslice_dummy_var_273 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L210;

  L210:
    call {:si_unique_call 1394} vslice_dummy_var_196 := corral_nondet();
    call {:si_unique_call 1395} vslice_dummy_var_274 := corral_nondet();
    call {:si_unique_call 1396} vslice_dummy_var_197 := corral_nondet();
    call {:si_unique_call 1397} vslice_dummy_var_275 := corral_nondet();
    call {:si_unique_call 1398} vslice_dummy_var_198 := corral_nondet();
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1399} vslice_dummy_var_276 := corral_nondet();
    goto L226;

  L226:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1400} vslice_dummy_var_277 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L237;

  L237:
    call {:si_unique_call 1401} vslice_dummy_var_199 := corral_nondet();
    call {:si_unique_call 1402} vslice_dummy_var_278 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L245;

  L245:
    call {:si_unique_call 1403} vslice_dummy_var_200 := corral_nondet();
    call {:si_unique_call 1404} vslice_dummy_var_279 := corral_nondet();
    call {:si_unique_call 1405} vslice_dummy_var_201 := corral_nondet();
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1406} vslice_dummy_var_280 := corral_nondet();
    goto L168;

  L168:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc Tmp_935;
    call {:si_unique_call 1407} sdv_569 := ExAllocatePoolWithTag(0, Tmp_935, 541283905);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc Tmp_964;
    call {:si_unique_call 1408} sdv_RtlZeroMemory(0, Tmp_964);
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} bidFlag != 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} bidFlag != 1;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} bidFlag != 2;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} bidFlag != 3;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} bidFlag != 4;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} bidFlag == 5;
    goto L313;

  L313:
    call {:si_unique_call 1409} vslice_dummy_var_206 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L338;

  L338:
    call {:si_unique_call 1410} vslice_dummy_var_209 := corral_nondet();
    call {:si_unique_call 1411} vslice_dummy_var_262 := corral_nondet();
    call {:si_unique_call 1412} vslice_dummy_var_210 := corral_nondet();
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1413} vslice_dummy_var_263 := corral_nondet();
    goto L348;

  L348:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1414} vslice_dummy_var_264 := corral_nondet();
    call {:si_unique_call 1415} vslice_dummy_var_265 := corral_nondet();
    call {:si_unique_call 1416} vslice_dummy_var_211 := corral_nondet();
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1417} vslice_dummy_var_266 := corral_nondet();
    goto L309;

  L309:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc Tmp_957;
    call {:si_unique_call 1418} sdv_587 := ExAllocatePoolWithTag(0, Tmp_957, 541283905);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc Tmp_953;
    call {:si_unique_call 1419} sdv_RtlZeroMemory(0, Tmp_953);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    call {:si_unique_call 1420} vslice_dummy_var_215 := RtlLargeIntegerToUnicodeString(UniqueID__GET_UNIT_IDS(UnitInfo), 16, UniqueId__PDO_DATA(PdoData_4));
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    goto L100;

  L100:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    call {:si_unique_call 1421} sdv_ExFreePool(0);
    goto L101;

  L101:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    call {:si_unique_call 1422} sdv_ExFreePool(0);
    goto L105;

  L105:
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    call {:si_unique_call 1423} sdv_ExFreePool(0);
    goto L109;

  L109:
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    call {:si_unique_call 1424} sdv_ExFreePool(0);
    goto L113;

  L113:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} ntStatus_35 != 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    call {:si_unique_call 1425} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto L119;

  L119:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1426} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1427} RtlInitUnicodeString(HardwareIds__PDO_DATA(PdoData_4), 0);
    goto L124;

  L124:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1428} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1429} RtlInitUnicodeString(CompatIds__PDO_DATA(PdoData_4), 0);
    goto L131;

  L131:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1430} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1431} RtlInitUnicodeString(UniqueId__PDO_DATA(PdoData_4), 0);
    goto L117;

  L117:
    Tmp_916 := ntStatus_35;
    goto LM2;

  LM2:
    return;

  anon164_Then:
    goto L117;

  anon163_Then:
    goto L131;

  anon162_Then:
    goto L124;

  anon161_Then:
    goto L119;

  anon160_Then:
    assume {:partition} ntStatus_35 == 0;
    goto L117;

  anon159_Then:
    goto L113;

  anon158_Then:
    goto L109;

  anon157_Then:
    goto L105;

  anon156_Then:
    goto L101;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon220_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon190_Then:
    assume {:partition} 2 != bidFlag;
    goto L309;

  anon189_Then:
    assume {:partition} 2 != bidFlag;
    goto L348;

  anon188_Then:
    call {:si_unique_call 1432} vslice_dummy_var_267 := corral_nondet();
    goto L338;

  anon207_Then:
    assume {:partition} bidFlag != 5;
    goto L309;

  anon208_Then:
    assume {:partition} bidFlag == 4;
    call {:si_unique_call 1433} vslice_dummy_var_207 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto L323;

  L323:
    call {:si_unique_call 1434} vslice_dummy_var_208 := corral_nondet();
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1435} vslice_dummy_var_268 := corral_nondet();
    call {:si_unique_call 1436} vslice_dummy_var_269 := corral_nondet();
    goto L309;

  anon187_Then:
    call {:si_unique_call 1437} vslice_dummy_var_270 := corral_nondet();
    goto L323;

  anon209_Then:
    assume {:partition} bidFlag == 3;
    goto L313;

  anon210_Then:
    assume {:partition} bidFlag == 2;
    goto L313;

  anon211_Then:
    assume {:partition} bidFlag == 1;
    goto L310;

  L310:
    call {:si_unique_call 1438} vslice_dummy_var_205 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L370;

  L370:
    call {:si_unique_call 1439} vslice_dummy_var_212 := corral_nondet();
    call {:si_unique_call 1440} vslice_dummy_var_257 := corral_nondet();
    call {:si_unique_call 1441} vslice_dummy_var_213 := corral_nondet();
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} 1 == bidFlag;
    call {:si_unique_call 1442} vslice_dummy_var_258 := corral_nondet();
    goto L380;

  L380:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    call {:si_unique_call 1443} vslice_dummy_var_259 := corral_nondet();
    call {:si_unique_call 1444} vslice_dummy_var_214 := corral_nondet();
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} 1 == bidFlag;
    call {:si_unique_call 1445} vslice_dummy_var_260 := corral_nondet();
    goto L309;

  anon193_Then:
    assume {:partition} 1 != bidFlag;
    goto L309;

  anon192_Then:
    assume {:partition} 1 != bidFlag;
    goto L380;

  anon191_Then:
    call {:si_unique_call 1446} vslice_dummy_var_261 := corral_nondet();
    goto L370;

  anon186_Then:
    assume {:partition} bidFlag == 0;
    goto L310;

  anon219_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon178_Then:
    assume {:partition} 2 != bidFlag;
    goto L168;

  anon176_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto L260;

  L260:
    call {:si_unique_call 1447} vslice_dummy_var_281 := corral_nondet();
    goto L245;

  anon177_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L260;

  anon179_Then:
    goto L245;

  anon175_Then:
    call {:si_unique_call 1448} vslice_dummy_var_282 := corral_nondet();
    goto L237;

  anon174_Then:
    assume {:partition} 2 != bidFlag;
    goto L226;

  anon172_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L264;

  L264:
    call {:si_unique_call 1449} vslice_dummy_var_283 := corral_nondet();
    goto L210;

  anon173_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L264;

  anon180_Then:
    goto L210;

  anon171_Then:
    call {:si_unique_call 1450} vslice_dummy_var_284 := corral_nondet();
    goto L202;

  anon202_Then:
    assume {:partition} bidFlag != 5;
    goto L168;

  anon203_Then:
    assume {:partition} bidFlag == 4;
    call {:si_unique_call 1451} vslice_dummy_var_192 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L182;

  L182:
    call {:si_unique_call 1452} vslice_dummy_var_193 := corral_nondet();
    call {:si_unique_call 1453} vslice_dummy_var_285 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    goto L190;

  L190:
    call {:si_unique_call 1454} vslice_dummy_var_194 := corral_nondet();
    goto L168;

  anon168_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    goto L195;

  L195:
    call {:si_unique_call 1455} vslice_dummy_var_286 := corral_nondet();
    goto L190;

  anon169_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto L195;

  anon170_Then:
    goto L190;

  anon167_Then:
    call {:si_unique_call 1456} vslice_dummy_var_287 := corral_nondet();
    goto L182;

  anon204_Then:
    assume {:partition} bidFlag == 3;
    goto L172;

  anon205_Then:
    assume {:partition} bidFlag == 2;
    goto L172;

  anon206_Then:
    assume {:partition} bidFlag == 1;
    goto L169;

  L169:
    call {:si_unique_call 1457} vslice_dummy_var_190 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto L271;

  L271:
    call {:si_unique_call 1458} vslice_dummy_var_202 := corral_nondet();
    call {:si_unique_call 1459} vslice_dummy_var_254 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L279;

  L279:
    call {:si_unique_call 1460} vslice_dummy_var_203 := corral_nondet();
    call {:si_unique_call 1461} vslice_dummy_var_255 := corral_nondet();
    call {:si_unique_call 1462} vslice_dummy_var_204 := corral_nondet();
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} 1 == bidFlag;
    call {:si_unique_call 1463} vslice_dummy_var_256 := corral_nondet();
    goto L168;

  anon184_Then:
    assume {:partition} 1 != bidFlag;
    goto L168;

  anon182_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L294;

  L294:
    call {:si_unique_call 1464} vslice_dummy_var_271 := corral_nondet();
    goto L279;

  anon183_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L294;

  anon185_Then:
    goto L279;

  anon181_Then:
    call {:si_unique_call 1465} vslice_dummy_var_272 := corral_nondet();
    goto L271;

  anon166_Then:
    assume {:partition} bidFlag == 0;
    goto L169;

  anon218_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon165_Then:
    assume {:partition} ntStatus_35 != 0;
    goto L100;

  anon222_Then:
    ntStatus_35 := -1073741670;
    goto L153;

  anon197_Then:
    assume {:partition} bidFlag != 5;
    ntStatus_35 := -1073741811;
    goto L153;

  anon198_Then:
    assume {:partition} bidFlag == 4;
    NumberHardwareIds := 1;
    NumberCompatIds := 2;
    goto L153;

  anon199_Then:
    assume {:partition} bidFlag == 3;
    goto L414;

  anon200_Then:
    assume {:partition} bidFlag == 2;
    goto L414;

  anon201_Then:
    assume {:partition} bidFlag == 1;
    goto L146;

  L146:
    call {:si_unique_call 1466} vslice_dummy_var_253 := corral_nondet();
    NumberHardwareIds := 1;
    NumberCompatIds := 2;
    goto L153;

  anon153_Then:
    assume {:partition} bidFlag == 0;
    goto L146;

  anon217_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon155_Then:
    assume {:partition} bidFlag == 0;
    goto L72;

  anon154_Then:
    assume {:partition} bidFlag == 1;
    goto L72;

  anon216_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon152_Then:
    assume {:partition} bidFlag == 4;
    goto L72;

  anon150_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    havoc vslice_dummy_var_114;
    call {:si_unique_call 1467} vslice_dummy_var_219 := RtlIntegerToUnicodeString(vslice_dummy_var_114, 16, 0);
    goto L71;

  anon151_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    call {:si_unique_call 1468} vslice_dummy_var_221 := corral_nondet();
    goto L71;

  anon196_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    havoc vslice_dummy_var_115;
    call {:si_unique_call 1469} vslice_dummy_var_220 := RtlIntegerToUnicodeString(vslice_dummy_var_115, 16, 0);
    goto L71;

  anon215_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon149_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    havoc vslice_dummy_var_116;
    call {:si_unique_call 1470} vslice_dummy_var_187 := RtlIntegerToUnicodeString(vslice_dummy_var_116, 16, 0);
    goto L54;

  anon214_Then:
    ntStatus_35 := -1073741670;
    goto L100;

  anon213_Then:
    assume {:partition} 5 != bidFlag;
    goto L23;

  anon212_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_1394BusResetNotificationRequest"} Avc_1394BusResetNotificationRequest(actual_DevExt_22: int, actual_Irb_1: int) returns (Tmp_971: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_971 == 0 || Tmp_971 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_1394BusResetNotificationRequest"} Avc_1394BusResetNotificationRequest(actual_DevExt_22: int, actual_Irb_1: int) returns (Tmp_971: int)
{
  var {:pointer} Tmp_972: int;
  var {:scalar} OldIrql_11: int;
  var {:scalar} ntStatus_36: int;
  var {:pointer} DevExt_22: int;
  var {:pointer} Irb_1: int;

  anon0:
    DevExt_22 := actual_DevExt_22;
    Irb_1 := actual_Irb_1;
    ntStatus_36 := 0;
    call {:si_unique_call 1471} Tmp_972 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_972 != 0;
    assume Tmp_972 > 0;
    Mem_T.INT4[Tmp_972] := OldIrql_11;
    call {:si_unique_call 1472} sdv_KeAcquireSpinLock(0, Tmp_972);
    assume {:nonnull} Tmp_972 != 0;
    assume Tmp_972 > 0;
    OldIrql_11 := Mem_T.INT4[Tmp_972];
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    goto L13;

  L13:
    call {:si_unique_call 1473} sdv_KeReleaseSpinLock(0, OldIrql_11);
    Tmp_971 := ntStatus_36;
    return;

  anon5_Then:
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    goto L13;

  anon6_Then:
    ntStatus_36 := -1073741811;
    goto L13;
}



procedure {:origName "AvcReq_SubUnitInfo"} AvcReq_SubUnitInfo(actual_Command_20: int, actual_Page_1: int) returns (Tmp_973: int);
  modifies alloc, Mem_T.INT4, yogi_error, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcReq_SubUnitInfo"} AvcReq_SubUnitInfo(actual_Command_20: int, actual_Page_1: int) returns (Tmp_973: int)
{
  var {:pointer} Tmp_974: int;
  var {:pointer} Tmp_975: int;
  var {:pointer} Tmp_976: int;
  var {:scalar} ntStatus_37: int;
  var {:pointer} SubUnitInfo: int;
  var {:pointer} Tmp_977: int;
  var {:pointer} Tmp_979: int;
  var {:scalar} Tmp_980: int;
  var {:pointer} Command_20: int;
  var {:scalar} Page_1: int;

  anon0:
    Command_20 := actual_Command_20;
    Page_1 := actual_Page_1;
    call {:si_unique_call 1474} Tmp_974 := __HAVOC_malloc(16);
    call {:si_unique_call 1475} Tmp_975 := __HAVOC_malloc(16);
    call {:si_unique_call 1476} Tmp_976 := __HAVOC_malloc(16);
    call {:si_unique_call 1477} Tmp_977 := __HAVOC_malloc(2048);
    call {:si_unique_call 1478} Tmp_979 := __HAVOC_malloc(16);
    ntStatus_37 := 0;
    call {:si_unique_call 1479} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc Tmp_980;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc Tmp_977;
    SubUnitInfo := Tmp_977 + Tmp_980 * 4;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_976;
    assume {:nonnull} Tmp_976 != 0;
    assume Tmp_976 > 0;
    Mem_T.INT4[Tmp_976] := 255;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_975;
    assume {:nonnull} Tmp_975 != 0;
    assume Tmp_975 > 0;
    Mem_T.INT4[Tmp_975 + 1 * 4] := 255;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_974;
    assume {:nonnull} Tmp_974 != 0;
    assume Tmp_974 > 0;
    Mem_T.INT4[Tmp_974 + 2 * 4] := 255;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_979;
    assume {:nonnull} Tmp_979 != 0;
    assume Tmp_979 > 0;
    Mem_T.INT4[Tmp_979 + 3 * 4] := 255;
    call {:si_unique_call 1480} ntStatus_37 := AvcRobustStatusRequest(Command_20);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_37 != 0;
    goto L24;

  L24:
    Tmp_973 := ntStatus_37;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} ntStatus_37 == 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    ntStatus_37 := -1073741822;
    goto L24;

  anon10_Then:
    goto L24;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_EnumerateChildren"} Avc_EnumerateChildren(actual_BusExtension_9: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_EnumerateChildren"} Avc_EnumerateChildren(actual_BusExtension_9: int)
{
  var {:pointer} PdoData_5: int;
  var {:pointer} BusExtension_9: int;
  var vslice_dummy_var_291: int;

  anon0:
    call {:si_unique_call 1481} vslice_dummy_var_291 := __HAVOC_malloc(4);
    BusExtension_9 := actual_BusExtension_9;
    call {:si_unique_call 1482} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_9 != 0;
    assume BusExtension_9 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1483} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_9 != 0;
    assume BusExtension_9 > 0;
    havoc PdoData_5;
    goto L15;

  L15:
    call {:si_unique_call 1484} PdoData_5 := Avc_EnumerateChildren_loop_L15(PdoData_5);
    goto L15_last;

  L15_last:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc PdoData_5;
    goto anon10_Else_dummy;

  anon10_Else_dummy:
    assume false;
    return;

  anon10_Then:
    call {:si_unique_call 1485} ExReleaseFastMutex(0);
    call {:si_unique_call 1486} Avc_EnumerateExtrnalChildren(BusExtension_9);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    goto L1;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_FDO_Pnp"} Avc_FDO_Pnp(actual_DeviceObject_30: int, actual_Irp_35: int) returns (Tmp_983: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_FDO_Pnp"} Avc_FDO_Pnp(actual_DeviceObject_30: int, actual_Irp_35: int) returns (Tmp_983: int)
{
  var {:pointer} Relations: int;
  var {:pointer} PdoData_6: int;
  var {:pointer} PdoData_7: int;
  var {:scalar} Tmp_984: int;
  var {:scalar} cObjects: int;
  var {:scalar} cIncomingObjects: int;
  var {:pointer} Tmp_987: int;
  var {:pointer} IrpStack_11: int;
  var {:scalar} ulLength: int;
  var {:scalar} Tmp_991: int;
  var {:pointer} DeviceCapabilities: int;
  var {:pointer} sdv_602: int;
  var {:scalar} ntStatus_39: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} sdv_604: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:pointer} sdv_610: int;
  var {:scalar} Tmp_997: int;
  var {:pointer} BusExtension_10: int;
  var {:pointer} PdoData_8: int;
  var {:pointer} Next: int;
  var {:pointer} Tmp_998: int;
  var {:pointer} OldRelations: int;
  var {:pointer} Tmp_999: int;
  var {:pointer} Tmp_1000: int;
  var {:scalar} irpStatus: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Irp_35: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;

  anon0:
    DeviceObject_30 := actual_DeviceObject_30;
    Irp_35 := actual_Irp_35;
    call {:si_unique_call 1487} Tmp_995 := __HAVOC_malloc(4);
    call {:si_unique_call 1488} Tmp_998 := __HAVOC_malloc(4);
    call {:si_unique_call 1489} Tmp_999 := __HAVOC_malloc(4);
    call {:si_unique_call 1490} Tmp_1000 := __HAVOC_malloc(4);
    ntStatus_39 := 0;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    havoc BusExtension_10;
    call {:si_unique_call 1491} sdv_do_paged_code_check();
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1492} IrpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_35);
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    havoc MinorFunction_1;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} MinorFunction_1 != 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} MinorFunction_1 != 1;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} MinorFunction_1 != 2;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} MinorFunction_1 != 3;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} MinorFunction_1 != 4;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} MinorFunction_1 != 5;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} MinorFunction_1 != 6;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} MinorFunction_1 != 7;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} MinorFunction_1 != 9;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} MinorFunction_1 != 20;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} MinorFunction_1 == 23;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1493} vslice_dummy_var_302 := Avc_SetBusResetNotify(BusExtension_10, 0);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1494} AvcStopAllFCPProcessing(BusExtension_10);
    call {:si_unique_call 1495} vslice_dummy_var_293 := Avc_SetFcpNotify(BusExtension_10, 0);
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1496} Avc_SetUnitDirectory(BusExtension_10, 0);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1497} vslice_dummy_var_294 := IoSetDeviceInterfaceState(0, 0);
    call {:si_unique_call 1498} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc Next;
    goto L52;

  L52:
    call {:si_unique_call 1499} PdoData_7, Next := Avc_FDO_Pnp_loop_L52(PdoData_7, BusExtension_10, Next);
    goto L52_last;

  L52_last:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    PdoData_7 := Next;
    assume {:nonnull} Next != 0;
    assume Next > 0;
    havoc Next;
    call {:si_unique_call 1500} AvcRemoveFromPdoList(BusExtension_10, PdoData_7);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon122_Else_dummy;

  anon122_Else_dummy:
    assume false;
    return;

  anon122_Then:
    call {:si_unique_call 1501} ExReleaseFastMutex(0);
    goto L65;

  L65:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} 2 == MinorFunction_1;
    call {:si_unique_call 1502} IoDetachDevice(0);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1503} sdv_ExFreePool(0);
    goto L71;

  L71:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1504} sdv_ExFreePool(0);
    goto L75;

  L75:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1505} sdv_ExFreePool(0);
    goto L79;

  L79:
    call {:si_unique_call 1506} RtlFreeUnicodeString(0);
    call {:si_unique_call 1507} vslice_dummy_var_295 := KeCancelTimer(0);
    call {:si_unique_call 1508} IoDeleteDevice(0);
    goto L66;

  L66:
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    call {:si_unique_call 1509} sdv_IoSkipCurrentIrpStackLocation(Irp_35);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc vslice_dummy_var_117;
    call {:si_unique_call 1510} ntStatus_39 := sdv_IoCallDriver(vslice_dummy_var_117, Irp_35);
    Tmp_983 := ntStatus_39;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon126_Then:
    goto L79;

  anon125_Then:
    goto L75;

  anon124_Then:
    goto L71;

  anon123_Then:
    assume {:partition} 2 != MinorFunction_1;
    goto L66;

  anon180_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon178_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    assume {:partition} MinorFunction_1 != 23;
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    havoc ntStatus_39;
    goto L65;

  anon148_Then:
    assume {:partition} MinorFunction_1 == 20;
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    goto L65;

  anon149_Then:
    assume {:partition} MinorFunction_1 == 9;
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    havoc DeviceCapabilities;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto L65;

  anon127_Then:
    goto L65;

  anon177_Then:
    goto L65;

  anon150_Then:
    assume {:partition} MinorFunction_1 == 7;
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    cObjects := 0;
    call {:si_unique_call 1511} Avc_EnumerateChildren(BusExtension_10);
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1512} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc PdoData_8;
    goto L121;

  L121:
    call {:si_unique_call 1513} cObjects, PdoData_8 := Avc_FDO_Pnp_loop_L121(cObjects, PdoData_8);
    goto L121_last;

  L121_last:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    cObjects := cObjects + 1;
    goto L124;

  L124:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    havoc PdoData_8;
    goto L124_dummy;

  L124_dummy:
    assume false;
    return;

  anon129_Then:
    goto L124;

  anon128_Then:
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    havoc OldRelations;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} OldRelations != 0;
    assume {:nonnull} OldRelations != 0;
    assume OldRelations > 0;
    havoc cIncomingObjects;
    goto L129;

  L129:
    cObjects := cObjects + cIncomingObjects;
    ulLength := 8 + cObjects * 4;
    call {:si_unique_call 1514} sdv_602 := ExAllocatePoolWithTag(1, ulLength, 541283905);
    Relations := sdv_602;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Relations != 0;
    cObjects := 0;
    goto L140;

  L140:
    call {:si_unique_call 1515} Tmp_984, cObjects, Tmp_995, Tmp_996, Tmp_1000 := Avc_FDO_Pnp_loop_L140(Relations, Tmp_984, cObjects, cIncomingObjects, Tmp_995, Tmp_996, OldRelations, Tmp_1000);
    goto L140_last;

  L140_last:
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} cIncomingObjects > cObjects;
    Tmp_984 := cObjects;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_995;
    Tmp_996 := cObjects;
    assume {:nonnull} OldRelations != 0;
    assume OldRelations > 0;
    havoc Tmp_1000;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    assume {:nonnull} Tmp_995 != 0;
    assume Tmp_995 > 0;
    cObjects := cObjects + 1;
    goto anon130_Else_dummy;

  anon130_Else_dummy:
    assume false;
    return;

  anon130_Then:
    assume {:partition} cObjects >= cIncomingObjects;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc PdoData_8;
    goto L144;

  L144:
    call {:si_unique_call 1516} cObjects, Tmp_991, Tmp_997, PdoData_8, Tmp_998, Tmp_999, vslice_dummy_var_301 := Avc_FDO_Pnp_loop_L144(Relations, cObjects, Tmp_991, Tmp_997, PdoData_8, Tmp_998, Tmp_999, vslice_dummy_var_301);
    goto L144_last;

  L144_last:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    Tmp_991 := cObjects;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_999;
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    assume {:nonnull} Tmp_999 != 0;
    assume Tmp_999 > 0;
    Tmp_997 := cObjects;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_998;
    assume {:nonnull} Tmp_998 != 0;
    assume Tmp_998 > 0;
    call {:si_unique_call 1517} vslice_dummy_var_301 := sdv_ObReferenceObject(0);
    cObjects := cObjects + 1;
    goto L147;

  L147:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    havoc PdoData_8;
    goto L147_dummy;

  L147_dummy:
    assume false;
    return;

  anon133_Then:
    goto L147;

  anon132_Then:
    goto L147;

  anon131_Then:
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 1518} sdv_ExFreePool(0);
    goto L156;

  L156:
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    call {:si_unique_call 1519} ExReleaseFastMutex(0);
    goto L65;

  anon176_Then:
    goto L156;

  anon175_Then:
    assume {:partition} Relations == 0;
    call {:si_unique_call 1520} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    call {:si_unique_call 1521} sdv_IoCompleteRequest(0, 0);
    Tmp_983 := -1073741670;
    goto L1;

  anon174_Then:
    assume {:partition} OldRelations == 0;
    cIncomingObjects := 0;
    goto L129;

  anon173_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon121_Then:
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    havoc ntStatus_39;
    goto L65;

  anon151_Then:
    assume {:partition} MinorFunction_1 == 6;
    goto L65;

  anon152_Then:
    assume {:partition} MinorFunction_1 == 5;
    goto L65;

  anon153_Then:
    assume {:partition} MinorFunction_1 == 4;
    call {:si_unique_call 1522} vslice_dummy_var_292 := Avc_SetBusResetNotify(BusExtension_10, 0);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1523} AvcStopAllFCPProcessing(BusExtension_10);
    call {:si_unique_call 1524} vslice_dummy_var_296 := Avc_SetFcpNotify(BusExtension_10, 0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1525} Avc_SetUnitDirectory(BusExtension_10, 0);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    goto L65;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon171_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon154_Then:
    assume {:partition} MinorFunction_1 == 3;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto L65;

  anon155_Then:
    assume {:partition} MinorFunction_1 == 2;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1526} ExAcquireFastMutex(0);
    goto L182;

  L182:
    call {:si_unique_call 1527} PdoData_6, Tmp_987, PdoExtension_17, sdv_604, sdv_610 := Avc_FDO_Pnp_loop_L182(PdoData_6, Tmp_987, PdoExtension_17, sdv_604, sdv_610, BusExtension_10);
    goto L182_last;

  L182_last:
    call {:si_unique_call 1556} sdv_604 := sdv_IsListEmpty(0);
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} sdv_604 == 0;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1528} sdv_610 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_10));
    PdoData_6 := sdv_610;
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    havoc Tmp_987;
    assume {:nonnull} Tmp_987 != 0;
    assume Tmp_987 > 0;
    havoc PdoExtension_17;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    call {:si_unique_call 1529} RemoveConnectionMgr(PdoData_6);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    call {:si_unique_call 1530} sdv_ExFreePool(0);
    goto L229;

  L229:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    call {:si_unique_call 1531} sdv_ExFreePool(0);
    goto L233;

  L233:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    call {:si_unique_call 1532} sdv_ExFreePool(0);
    goto L237;

  L237:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    call {:si_unique_call 1533} sdv_ExFreePool(0);
    goto L241;

  L241:
    call {:si_unique_call 1534} sdv_ExFreePool(0);
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    call {:si_unique_call 1535} IoDeleteDevice(0);
    goto L241_dummy;

  L241_dummy:
    assume false;
    return;

  anon139_Then:
    goto L241;

  anon138_Then:
    goto L237;

  anon137_Then:
    goto L233;

  anon136_Then:
    goto L229;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon168_Then:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    call {:si_unique_call 1536} InitializeListHead(PdoList__PDO_DATA(PdoData_6));
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto anon168_Then_dummy;

  anon168_Then_dummy:
    assume false;
    return;

  anon134_Then:
    assume {:partition} sdv_604 != 0;
    call {:si_unique_call 1537} ExReleaseFastMutex(0);
    call {:si_unique_call 1538} AvcRemoveInstanceFromGlobalList(BusExtension_10);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto L197;

  L197:
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1539} AvcReleaseRemoveLockAndWait(RemoveLock__COMMON_DEVICE_EXTENSION(BusExtension_10));
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} yogi_error != 1;
    goto L65;

  anon164_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon135_Then:
    call {:si_unique_call 1540} vslice_dummy_var_297 := Avc_SetBusResetNotify(BusExtension_10, 0);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1541} AvcStopAllFCPProcessing(BusExtension_10);
    call {:si_unique_call 1542} vslice_dummy_var_298 := Avc_SetFcpNotify(BusExtension_10, 0);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1543} Avc_SetUnitDirectory(BusExtension_10, 0);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1544} vslice_dummy_var_299 := IoSetDeviceInterfaceState(0, 0);
    goto L197;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon166_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon165_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon156_Then:
    assume {:partition} MinorFunction_1 == 1;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto L65;

  anon158_Then:
    assume {:partition} MinorFunction_1 == 0;
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    call {:si_unique_call 1545} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_35);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    havoc vslice_dummy_var_118;
    call {:si_unique_call 1546} ntStatus_39 := Avc_SubmitIrpSynch(vslice_dummy_var_118, Irp_35);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} ntStatus_39 >= 0;
    irpStatus := ntStatus_39;
    call {:si_unique_call 1547} vslice_dummy_var_300 := IoSetDeviceInterfaceState(0, 1);
    call {:si_unique_call 1548} ntStatus_39 := AvcReq_UnitInfo(BusExtension_10);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} yogi_error != 1;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} ntStatus_39 >= 0;
    call {:si_unique_call 1549} ntStatus_39 := Avc_SetBusResetNotify(BusExtension_10, 1);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} yogi_error != 1;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} ntStatus_39 >= 0;
    call {:si_unique_call 1550} ntStatus_39 := Avc_SetFcpNotify(BusExtension_10, 1);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} ntStatus_39 >= 0;
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    call {:si_unique_call 1551} Avc_EnumerateVirtualChildren(BusExtension_10);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1552} ntStatus_39 := AvcPrepareForRequestCallback(BusExtension_10, 0);
    goto L275;

  L275:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} ntStatus_39 >= 0;
    ntStatus_39 := irpStatus;
    goto L262;

  L262:
    call {:si_unique_call 1553} sdv_IoCompleteRequest(0, 0);
    Tmp_983 := ntStatus_39;
    goto L1;

  anon142_Then:
    assume {:partition} 0 > ntStatus_39;
    assume {:nonnull} Irp_35 != 0;
    assume Irp_35 > 0;
    goto L262;

  anon163_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon145_Then:
    call {:si_unique_call 1554} ntStatus_39 := AvcPrepareForResponseCallback(BusExtension_10, 0);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} ntStatus_39 >= 0;
    call {:si_unique_call 1555} ntStatus_39 := AvcPrepareForRequestCallback(BusExtension_10, 0);
    goto L275;

  anon146_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L275;

  anon144_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L275;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L275;

  anon161_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon141_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L275;

  anon160_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon140_Then:
    assume {:partition} 0 > ntStatus_39;
    goto L262;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon157_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcRemoveInstanceFromGlobalList"} AvcRemoveInstanceFromGlobalList(actual_BusExtension_11: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcRemoveInstanceFromGlobalList"} AvcRemoveInstanceFromGlobalList(actual_BusExtension_11: int)
{
  var {:scalar} sdv_615: int;
  var {:pointer} Tmp_1001: int;
  var {:scalar} OldIrql_12: int;
  var {:pointer} BusExtension_11: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;

  anon0:
    call {:si_unique_call 1557} vslice_dummy_var_303 := __HAVOC_malloc(4);
    BusExtension_11 := actual_BusExtension_11;
    call {:si_unique_call 1558} sdv_615 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_615 == 0;
    call {:si_unique_call 1559} Tmp_1001 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1001 != 0;
    assume Tmp_1001 > 0;
    Mem_T.INT4[Tmp_1001] := OldIrql_12;
    call {:si_unique_call 1560} sdv_KeAcquireSpinLock(0, Tmp_1001);
    assume {:nonnull} Tmp_1001 != 0;
    assume Tmp_1001 > 0;
    OldIrql_12 := Mem_T.INT4[Tmp_1001];
    call {:si_unique_call 1561} vslice_dummy_var_304 := sdv_RemoveEntryList(0);
    assume {:nonnull} BusExtension_11 != 0;
    assume BusExtension_11 > 0;
    call {:si_unique_call 1562} InitializeListHead(FdoEntry__BUS_DEVICE_EXTENSION(BusExtension_11));
    call {:si_unique_call 1563} sdv_KeReleaseSpinLock(0, OldIrql_12);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} sdv_615 != 0;
    goto L1;
}



procedure {:origName "Avc_IsLegacyDV"} Avc_IsLegacyDV(actual_BusExtension_12: int) returns (Tmp_1003: int);
  modifies alloc, Mem_T.INT4, yogi_error, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_IsLegacyDV"} Avc_IsLegacyDV(actual_BusExtension_12: int) returns (Tmp_1003: int)
{
  var {:dopa} {:scalar} SubunitAddr_11: int;
  var {:scalar} rc_2: int;
  var {:pointer} Operands_7: int;
  var {:scalar} Tmp_1004: int;
  var {:scalar} Tmp_1005: int;
  var {:scalar} ntStatus_40: int;
  var {:pointer} Tmp_1006: int;
  var {:pointer} Tmp_1008: int;
  var {:pointer} Command_21: int;
  var {:pointer} Operands_8: int;
  var {:pointer} BusExtension_12: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;

  anon0:
    call {:si_unique_call 1564} SubunitAddr_11 := __HAVOC_malloc(4);
    call {:si_unique_call 1565} Command_21 := __HAVOC_malloc(4);
    BusExtension_12 := actual_BusExtension_12;
    call {:si_unique_call 1566} Tmp_1006 := __HAVOC_malloc(2048);
    call {:si_unique_call 1567} Tmp_1008 := __HAVOC_malloc(2048);
    rc_2 := 0;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    call {:si_unique_call 1568} sdv_do_paged_code_check();
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1569} ntStatus_40 := AvcAllocateUnitCommandContext(BusExtension_12, Command_21);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} ntStatus_40 != 0;
    goto L19;

  L19:
    Tmp_1003 := rc_2;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    assume {:partition} ntStatus_40 == 0;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc vslice_dummy_var_119;
    call {:si_unique_call 1570} ntStatus_40 := AvcReq_OutputPlugSignalFormat(vslice_dummy_var_119, 0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} ntStatus_40 == 0;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc Tmp_1005;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc Tmp_1006;
    Operands_7 := Tmp_1006 + Tmp_1005 * 4;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.INT4[Operands_7 + 1 * 4] != 32;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Mem_T.INT4[Operands_7 + 1 * 4] != 128;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Mem_T.INT4[Operands_7 + 1 * 4] != 160;
    ntStatus_40 := -1073741823;
    goto L23;

  L23:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} ntStatus_40 != 0;
    assume {:nonnull} SubunitAddr_11 != 0;
    assume SubunitAddr_11 > 0;
    Mem_T.INT4[SubunitAddr_11] := 32;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc vslice_dummy_var_120;
    call {:si_unique_call 1571} ntStatus_40 := AvcReq_OutputPlugSignalMode(vslice_dummy_var_120, SubunitAddr_11);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} ntStatus_40 == 0;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc Tmp_1004;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc Tmp_1008;
    Operands_8 := Tmp_1008 + Tmp_1004 * 4;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 0;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 4;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 6;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 8;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 14;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 128;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 132;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 134;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.INT4[Operands_8] != 136;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.INT4[Operands_8] == 142;
    goto L37;

  L37:
    rc_2 := 1;
    goto L24;

  L24:
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc vslice_dummy_var_121;
    call {:si_unique_call 1572} AvcFreeCommandContext(vslice_dummy_var_121);
    goto L19;

  anon60_Then:
    assume {:partition} Mem_T.INT4[Operands_8] != 142;
    goto L24;

  anon61_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 136;
    goto L37;

  anon62_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 134;
    goto L37;

  anon63_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 132;
    goto L37;

  anon64_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 128;
    goto L37;

  anon65_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 14;
    goto L37;

  anon66_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 8;
    goto L37;

  anon67_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 6;
    goto L37;

  anon68_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 4;
    goto L37;

  anon80_Then:
    assume {:partition} Mem_T.INT4[Operands_8] == 0;
    goto L37;

  anon58_Then:
    assume {:partition} ntStatus_40 != 0;
    goto L24;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:partition} ntStatus_40 == 0;
    goto L24;

  anon69_Then:
    assume {:partition} Mem_T.INT4[Operands_7 + 1 * 4] == 160;
    goto L23;

  anon70_Then:
    assume {:partition} Mem_T.INT4[Operands_7 + 1 * 4] == 128;
    goto L42;

  L42:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) != 0;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) != 4;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) != 8;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) != 112;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) != 116;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) == 120;
    goto L45;

  L45:
    rc_2 := 1;
    goto L23;

  anon71_Then:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) != 120;
    ntStatus_40 := -1073741823;
    goto L23;

  anon72_Then:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) == 116;
    goto L45;

  anon73_Then:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) == 112;
    goto L45;

  anon74_Then:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) == 8;
    goto L45;

  anon75_Then:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) == 4;
    goto L45;

  anon59_Then:
    assume {:partition} BAND(Mem_T.INT4[Operands_7 + 2 * 4], 124) == 0;
    goto L45;

  anon81_Then:
    assume {:partition} Mem_T.INT4[Operands_7 + 1 * 4] == 32;
    goto L42;

  anon56_Then:
    assume {:partition} ntStatus_40 != 0;
    goto L23;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcReq_UnitInfo"} AvcReq_UnitInfo(actual_BusExtension_13: int) returns (Tmp_1009: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcReq_UnitInfo"} AvcReq_UnitInfo(actual_BusExtension_13: int) returns (Tmp_1009: int)
{
  var {:pointer} Tmp_1010: int;
  var {:pointer} Irp_36: int;
  var {:scalar} ulUnitModelLength: int;
  var {:pointer} sdv_621: int;
  var {:scalar} ulModelLength: int;
  var {:scalar} ulVendorLength: int;
  var {:scalar} ntStatus_41: int;
  var {:pointer} NextIrpStack_8: int;
  var {:pointer} sdv_625: int;
  var {:pointer} sdv_626: int;
  var {:scalar} AvRequest: int;
  var {:pointer} BusExtension_13: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 1573} AvRequest := __HAVOC_malloc(460);
    BusExtension_13 := actual_BusExtension_13;
    ntStatus_41 := 0;
    call {:si_unique_call 1574} sdv_do_paged_code_check();
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc Tmp_1010;
    assume {:nonnull} Tmp_1010 != 0;
    assume Tmp_1010 > 0;
    havoc vslice_dummy_var_122;
    call {:si_unique_call 1575} Irp_36 := IoAllocateIrp(vslice_dummy_var_122, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Irp_36 != 0;
    call {:si_unique_call 1576} NextIrpStack_8 := sdv_IoGetNextIrpStackLocation(Irp_36);
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_123;
    call {:si_unique_call 1577} ntStatus_41 := Avc_SubmitIrpSynch(vslice_dummy_var_123, Irp_36);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} ntStatus_41 != 0;
    goto L56;

  L56:
    call {:si_unique_call 1578} IoFreeIrp(0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ntStatus_41 < 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 1579} sdv_ExFreePool(0);
    goto L61;

  L61:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 1580} sdv_ExFreePool(0);
    goto L65;

  L65:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    call {:si_unique_call 1581} sdv_ExFreePool(0);
    goto L69;

  L69:
    call {:si_unique_call 1582} sdv_RtlZeroMemory(0, 48);
    goto L10;

  L10:
    Tmp_1009 := ntStatus_41;
    goto LM2;

  LM2:
    return;

  anon52_Then:
    goto L69;

  anon51_Then:
    goto L65;

  anon50_Then:
    goto L61;

  anon49_Then:
    assume {:partition} 0 <= ntStatus_41;
    goto L10;

  anon47_Then:
    assume {:partition} ntStatus_41 == 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L77;

  L77:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc ulVendorLength;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc ulModelLength;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc ulUnitModelLength;
    call {:si_unique_call 1583} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_124;
    call {:si_unique_call 1584} sdv_626 := ExAllocatePoolWithTag(1, vslice_dummy_var_124, 541283905);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    ntStatus_41 := -1073741670;
    goto L56;

  anon62_Then:
    goto L89;

  L89:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_125;
    call {:si_unique_call 1585} sdv_625 := ExAllocatePoolWithTag(1, vslice_dummy_var_125, 541283905);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    ntStatus_41 := -1073741670;
    goto L56;

  anon63_Then:
    goto L97;

  L97:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_126;
    call {:si_unique_call 1586} sdv_621 := ExAllocatePoolWithTag(1, vslice_dummy_var_126, 541283905);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    ntStatus_41 := -1073741670;
    goto L56;

  anon64_Then:
    goto L105;

  L105:
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_127;
    call {:si_unique_call 1587} ntStatus_41 := Avc_SubmitIrpSynch(vslice_dummy_var_127, Irp_36);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} ntStatus_41 == 0;
    goto L120;

  L120:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc vslice_dummy_var_128;
    call {:si_unique_call 1588} ntStatus_41 := Avc_SubmitIrpSynch(vslice_dummy_var_128, Irp_36);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} ntStatus_41 == 0;
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto L56;

  anon57_Then:
    assume {:partition} ntStatus_41 != 0;
    goto L56;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume {:partition} ntStatus_41 != 0;
    goto L56;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    goto L105;

  anon54_Then:
    goto L97;

  anon61_Then:
    goto L89;

  anon48_Then:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L120;

  anon58_Then:
    goto L77;

  anon53_Then:
    goto L77;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:partition} Irp_36 == 0;
    ntStatus_41 := -1073741670;
    goto L10;

  anon45_Then:
    goto L10;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlLargeIntegerToUnicodeString"} RtlLargeIntegerToUnicodeString(actual_Input: int, actual_Base_1: int, actual_String_1: int) returns (Tmp_1015: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlLargeIntegerToUnicodeString"} RtlLargeIntegerToUnicodeString(actual_Input: int, actual_Base_1: int, actual_String_1: int) returns (Tmp_1015: int)
{
  var {:scalar} Tmp_1016: int;
  var {:scalar} Mask: int;
  var {:scalar} Value_1: int;
  var {:scalar} Tmp_1017: int;
  var {:scalar} Negate: int;
  var {:scalar} Length_6: int;
  var {:scalar} Shift: int;
  var {:scalar} Tmp_1018: int;
  var {:pointer} ptr: int;
  var {:scalar} Tmp_1019: int;
  var {:scalar} Tmp_1021: int;
  var {:pointer} Result: int;
  var {:pointer} Input: int;
  var {:scalar} Base_1: int;
  var {:pointer} String_1: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;

  anon0:
    Input := actual_Input;
    Base_1 := actual_Base_1;
    String_1 := actual_String_1;
    call {:si_unique_call 1589} Result := __HAVOC_malloc(260);
    ptr := Result + 64 * 4;
    Shift := 0;
    Negate := 0;
    call {:si_unique_call 1590} sdv_do_paged_code_check();
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    Mem_T.INT4[ptr] := 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Base_1 != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Base_1 != 2;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Base_1 != 8;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Base_1 != 10;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Base_1 == 16;
    Shift := Shift + 1;
    goto L20;

  L20:
    Shift := Shift + 1;
    Shift := Shift + 1;
    goto L19;

  L19:
    Shift := Shift + 1;
    assume {:nonnull} Input != 0;
    assume Input > 0;
    havoc Value_1;
    call {:si_unique_call 1591} Mask := corral_nondet();
    goto L25;

  L25:
    call {:si_unique_call 1592} Value_1, Tmp_1018, Tmp_1019 := RtlLargeIntegerToUnicodeString_loop_L25(Mask, Value_1, Tmp_1018, ptr, Tmp_1019);
    goto L25_last;

  L25_last:
    Tmp_1018 := BAND(Value_1, Mask);
    Tmp_1019 := Tmp_1018;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    havoc vslice_dummy_var_129;
    Mem_T.INT4[ptr] := vslice_dummy_var_129;
    call {:si_unique_call 1595} Value_1 := corral_nondet();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Value_1 == 0;
    goto L31;

  L31:
    Length_6 := (Result + 64 * 4) * 2 + 2;
    assume {:nonnull} String_1 != 0;
    assume String_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_1017 := Length_6;
    call {:si_unique_call 1593} sdv_RtlCopyMemory(0, 0, Tmp_1017);
    assume {:nonnull} String_1 != 0;
    assume String_1 > 0;
    Tmp_1015 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon32_Then:
    Tmp_1015 := 5;
    goto L1;

  anon33_Then:
    assume {:partition} Value_1 != 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon25_Then:
    assume {:partition} Base_1 != 16;
    Tmp_1015 := -1073741811;
    goto L1;

  anon26_Then:
    assume {:partition} Base_1 == 10;
    goto L18;

  L18:
    assume {:nonnull} Input != 0;
    assume Input > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Input != 0;
    assume Input > 0;
    havoc Value_1;
    Negate := 1;
    goto L48;

  L48:
    call {:si_unique_call 1594} Tmp_1016, Value_1, Tmp_1021 := RtlLargeIntegerToUnicodeString_loop_L48(Tmp_1016, Value_1, ptr, Tmp_1021);
    goto L48_last;

  L48_last:
    Tmp_1021 := INTMOD(Value_1, 10);
    Tmp_1016 := Tmp_1021;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    havoc vslice_dummy_var_130;
    Mem_T.INT4[ptr] := vslice_dummy_var_130;
    Value_1 := INTDIV(Value_1, 10);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Value_1 == 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Negate != 0;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    Mem_T.INT4[ptr] := 45;
    goto L31;

  anon24_Then:
    assume {:partition} Negate == 0;
    goto L31;

  anon31_Then:
    assume {:partition} Value_1 != 0;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:nonnull} Input != 0;
    assume Input > 0;
    havoc Value_1;
    goto L48;

  anon27_Then:
    assume {:partition} Base_1 == 8;
    goto L20;

  anon28_Then:
    assume {:partition} Base_1 == 2;
    goto L19;

  anon30_Then:
    assume {:partition} Base_1 == 0;
    goto L18;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcReq_OutputPlugSignalFormat"} AvcReq_OutputPlugSignalFormat(actual_Command_22: int, actual_Plug: int) returns (Tmp_1022: int);
  modifies alloc, Mem_T.INT4, yogi_error, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcReq_OutputPlugSignalFormat"} AvcReq_OutputPlugSignalFormat(actual_Command_22: int, actual_Plug: int) returns (Tmp_1022: int)
{
  var {:scalar} ntStatus_42: int;
  var {:scalar} Tmp_1024: int;
  var {:pointer} Tmp_1025: int;
  var {:pointer} Operands_9: int;
  var {:pointer} Command_22: int;
  var {:scalar} Plug: int;

  anon0:
    Command_22 := actual_Command_22;
    Plug := actual_Plug;
    call {:si_unique_call 1596} Tmp_1025 := __HAVOC_malloc(2048);
    ntStatus_42 := 0;
    call {:si_unique_call 1597} sdv_do_paged_code_check();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    havoc Tmp_1024;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    havoc Tmp_1025;
    Operands_9 := Tmp_1025 + Tmp_1024 * 4;
    assume {:nonnull} Operands_9 != 0;
    assume Operands_9 > 0;
    Mem_T.INT4[Operands_9] := Plug;
    assume {:nonnull} Operands_9 != 0;
    assume Operands_9 > 0;
    Mem_T.INT4[Operands_9 + 1 * 4] := 255;
    assume {:nonnull} Operands_9 != 0;
    assume Operands_9 > 0;
    Mem_T.INT4[Operands_9 + 2 * 4] := 255;
    assume {:nonnull} Operands_9 != 0;
    assume Operands_9 > 0;
    Mem_T.INT4[Operands_9 + 3 * 4] := 255;
    assume {:nonnull} Operands_9 != 0;
    assume Operands_9 > 0;
    Mem_T.INT4[Operands_9 + 4 * 4] := 255;
    call {:si_unique_call 1598} ntStatus_42 := AvcRobustStatusRequest(Command_22);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_42 != 0;
    goto L23;

  L23:
    Tmp_1022 := ntStatus_42;
    goto LM2;

  LM2:
    return;

  anon11_Then:
    assume {:partition} ntStatus_42 == 0;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    ntStatus_42 := -1073741822;
    goto L24;

  L24:
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    ntStatus_42 := -1073741811;
    goto L23;

  anon13_Then:
    goto L23;

  anon12_Then:
    goto L24;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_61883BusResetNotificationRequest"} Avc_61883BusResetNotificationRequest(actual_DevExt_23: int, actual_AvRequest_1: int) returns (Tmp_1026: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1026 == 0 || Tmp_1026 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_61883BusResetNotificationRequest"} Avc_61883BusResetNotificationRequest(actual_DevExt_23: int, actual_AvRequest_1: int) returns (Tmp_1026: int)
{
  var {:pointer} Tmp_1027: int;
  var {:scalar} OldIrql_13: int;
  var {:scalar} ntStatus_43: int;
  var {:pointer} DevExt_23: int;
  var {:pointer} AvRequest_1: int;

  anon0:
    DevExt_23 := actual_DevExt_23;
    AvRequest_1 := actual_AvRequest_1;
    ntStatus_43 := 0;
    call {:si_unique_call 1599} Tmp_1027 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1027 != 0;
    assume Tmp_1027 > 0;
    Mem_T.INT4[Tmp_1027] := OldIrql_13;
    call {:si_unique_call 1600} sdv_KeAcquireSpinLock(0, Tmp_1027);
    assume {:nonnull} Tmp_1027 != 0;
    assume Tmp_1027 > 0;
    OldIrql_13 := Mem_T.INT4[Tmp_1027];
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    assume {:nonnull} DevExt_23 != 0;
    assume DevExt_23 > 0;
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    assume {:nonnull} DevExt_23 != 0;
    assume DevExt_23 > 0;
    goto L13;

  L13:
    call {:si_unique_call 1601} sdv_KeReleaseSpinLock(0, OldIrql_13);
    Tmp_1026 := ntStatus_43;
    return;

  anon5_Then:
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} DevExt_23 != 0;
    assume DevExt_23 > 0;
    assume {:nonnull} DevExt_23 != 0;
    assume DevExt_23 > 0;
    goto L13;

  anon6_Then:
    ntStatus_43 := -1073741811;
    goto L13;
}



procedure {:origName "Avc_SetBusResetNotify"} Avc_SetBusResetNotify(actual_BusExtension_14: int, actual_bEnable: int) returns (Tmp_1028: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SetBusResetNotify"} Avc_SetBusResetNotify(actual_BusExtension_14: int, actual_bEnable: int) returns (Tmp_1028: int)
{
  var {:pointer} Irp_37: int;
  var {:pointer} Tmp_1029: int;
  var {:scalar} ntStatus_44: int;
  var {:pointer} NextIrpStack_9: int;
  var {:scalar} AvRequest_2: int;
  var {:pointer} BusExtension_14: int;
  var {:scalar} bEnable: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;

  anon0:
    call {:si_unique_call 1602} AvRequest_2 := __HAVOC_malloc(460);
    BusExtension_14 := actual_BusExtension_14;
    bEnable := actual_bEnable;
    ntStatus_44 := 0;
    call {:si_unique_call 1603} sdv_do_paged_code_check();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    havoc Tmp_1029;
    assume {:nonnull} Tmp_1029 != 0;
    assume Tmp_1029 > 0;
    havoc vslice_dummy_var_131;
    call {:si_unique_call 1604} Irp_37 := IoAllocateIrp(vslice_dummy_var_131, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Irp_37 != 0;
    call {:si_unique_call 1605} NextIrpStack_9 := sdv_IoGetNextIrpStackLocation(Irp_37);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} bEnable != 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    havoc vslice_dummy_var_132;
    call {:si_unique_call 1606} ntStatus_44 := Avc_SubmitIrpSynch(vslice_dummy_var_132, Irp_37);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L22;

  L22:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} bEnable != 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    goto L44;

  L44:
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    havoc vslice_dummy_var_133;
    call {:si_unique_call 1607} ntStatus_44 := Avc_SubmitIrpSynch(vslice_dummy_var_133, Irp_37);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  L34:
    call {:si_unique_call 1608} IoFreeIrp(0);
    goto L51;

  L51:
    Tmp_1028 := ntStatus_44;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} bEnable == 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    goto L44;

  anon17_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L34;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:partition} bEnable == 0;
    goto L22;

  anon15_Then:
    assume {:partition} Irp_37 == 0;
    ntStatus_44 := -1073741670;
    goto L51;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_BusResetCallback_sdv_static_function_4"} Avc_BusResetCallback_sdv_static_function_4(actual_Context_5: int, actual_BusResetInfo: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_BusResetCallback_sdv_static_function_4"} Avc_BusResetCallback_sdv_static_function_4(actual_Context_5: int, actual_BusResetInfo: int)
{
  var {:pointer} PdoData_9: int;
  var {:scalar} sdv_634: int;
  var {:pointer} Command_23: int;
  var {:pointer} Tmp_1032: int;
  var {:scalar} sdv_635: int;
  var {:scalar} OldIrql_14: int;
  var {:pointer} PdoExtension_18: int;
  var {:pointer} sdv_637: int;
  var {:pointer} Command_24: int;
  var {:pointer} Entry_10: int;
  var {:pointer} BusExtension_15: int;
  var {:pointer} Tmp_1033: int;
  var {:pointer} Context_5: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;

  anon0:
    call {:si_unique_call 1609} vslice_dummy_var_305 := __HAVOC_malloc(4);
    Context_5 := actual_Context_5;
    BusExtension_15 := Context_5;
    call {:si_unique_call 1610} Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    Mem_T.INT4[Tmp_1032] := OldIrql_14;
    call {:si_unique_call 1611} sdv_KeAcquireSpinLock(0, Tmp_1032);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_1032];
    call {:si_unique_call 1612} sdv_RtlCopyMemory(0, 0, 8);
    call {:si_unique_call 1613} sdv_KeReleaseSpinLock(0, OldIrql_14);
    call {:si_unique_call 1614} Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    Mem_T.INT4[Tmp_1032] := OldIrql_14;
    call {:si_unique_call 1615} sdv_KeAcquireSpinLock(0, Tmp_1032);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_1032];
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    goto L20;

  L20:
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    goto L24;

  L24:
    call {:si_unique_call 1616} sdv_KeReleaseSpinLock(0, OldIrql_14);
    call {:si_unique_call 1617} Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    Mem_T.INT4[Tmp_1032] := OldIrql_14;
    call {:si_unique_call 1618} sdv_KeAcquireSpinLock(0, Tmp_1032);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_1032];
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    havoc PdoData_9;
    goto L34;

  L34:
    call {:si_unique_call 1619} PdoData_9, Tmp_1032, OldIrql_14, PdoExtension_18, Tmp_1033 := Avc_BusResetCallback_sdv_static_function_4_loop_L34(PdoData_9, Tmp_1032, OldIrql_14, PdoExtension_18, Tmp_1033);
    goto L34_last;

  L34_last:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    havoc Tmp_1033;
    assume {:nonnull} Tmp_1033 != 0;
    assume Tmp_1033 > 0;
    havoc PdoExtension_18;
    call {:si_unique_call 1620} sdv_KeReleaseSpinLock(0, OldIrql_14);
    call {:si_unique_call 1621} Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    Mem_T.INT4[Tmp_1032] := OldIrql_14;
    call {:si_unique_call 1622} sdv_KeAcquireSpinLock(0, Tmp_1032);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_1032];
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    goto L47;

  L47:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    goto L51;

  L51:
    call {:si_unique_call 1623} sdv_KeReleaseSpinLock(0, OldIrql_14);
    call {:si_unique_call 1624} Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    Mem_T.INT4[Tmp_1032] := OldIrql_14;
    call {:si_unique_call 1625} sdv_KeAcquireSpinLock(0, Tmp_1032);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_1032];
    goto L37;

  L37:
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    havoc PdoData_9;
    goto L37_dummy;

  L37_dummy:
    assume false;
    return;

  anon29_Then:
    goto L51;

  anon28_Then:
    goto L47;

  anon27_Then:
    goto L37;

  anon25_Then:
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L63;

  L63:
    call {:si_unique_call 1626} sdv_KeReleaseSpinLock(0, OldIrql_14);
    return;

  anon26_Then:
    call {:si_unique_call 1627} sdv_634 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_634 == 0;
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    havoc Entry_10;
    goto L69;

  L69:
    call {:si_unique_call 1628} Command_24, Entry_10, vslice_dummy_var_306, vslice_dummy_var_307 := Avc_BusResetCallback_sdv_static_function_4_loop_L69(Command_24, Entry_10, BusExtension_15, vslice_dummy_var_306, vslice_dummy_var_307);
    goto L69_last;

  L69_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Command_24 := Entry_10;
    assume {:nonnull} Entry_10 != 0;
    assume Entry_10 > 0;
    havoc Entry_10;
    assume {:nonnull} Command_24 != 0;
    assume Command_24 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1629} vslice_dummy_var_306 := sdv_RemoveEntryList(0);
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    call {:si_unique_call 1630} vslice_dummy_var_307 := sdv_InsertTailList(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_15), Command_24);
    assume {:nonnull} Command_24 != 0;
    assume Command_24 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon31_Then:
    goto L70;

  L70:
    call {:si_unique_call 1631} Command_23, Tmp_1032, sdv_635, OldIrql_14, sdv_637 := Avc_BusResetCallback_sdv_static_function_4_loop_L70(Command_23, Tmp_1032, sdv_635, OldIrql_14, sdv_637, BusExtension_15);
    goto L70_last;

  L70_last:
    call {:si_unique_call 1639} sdv_635 := sdv_IsListEmpty(0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_635 == 0;
    assume {:nonnull} BusExtension_15 != 0;
    assume BusExtension_15 > 0;
    call {:si_unique_call 1632} sdv_637 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_15));
    Command_23 := sdv_637;
    call {:si_unique_call 1633} InitializeListHead(Command_23);
    call {:si_unique_call 1634} sdv_KeReleaseSpinLock(0, OldIrql_14);
    call {:si_unique_call 1635} AvcPendingIrpCompletion(Command_23);
    call {:si_unique_call 1636} AvcFreeCommandContext(Command_23);
    call {:si_unique_call 1637} Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    Mem_T.INT4[Tmp_1032] := OldIrql_14;
    call {:si_unique_call 1638} sdv_KeAcquireSpinLock(0, Tmp_1032);
    assume {:nonnull} Tmp_1032 != 0;
    assume Tmp_1032 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_1032];
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} sdv_635 != 0;
    goto L63;

  anon30_Then:
    assume {:partition} sdv_634 != 0;
    goto L63;

  anon24_Then:
    goto L24;

  anon23_Then:
    goto L20;
}



procedure {:origName "AvcAddInstanceToGlobalList"} AvcAddInstanceToGlobalList(actual_BusExtension_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcAddInstanceToGlobalList"} AvcAddInstanceToGlobalList(actual_BusExtension_16: int)
{
  var {:pointer} Tmp_1034: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} BusExtension_16: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;

  anon0:
    call {:si_unique_call 1640} vslice_dummy_var_308 := __HAVOC_malloc(4);
    BusExtension_16 := actual_BusExtension_16;
    call {:si_unique_call 1641} Tmp_1034 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1034 != 0;
    assume Tmp_1034 > 0;
    Mem_T.INT4[Tmp_1034] := OldIrql_15;
    call {:si_unique_call 1642} sdv_KeAcquireSpinLock(0, Tmp_1034);
    assume {:nonnull} Tmp_1034 != 0;
    assume Tmp_1034 > 0;
    OldIrql_15 := Mem_T.INT4[Tmp_1034];
    assume {:nonnull} BusExtension_16 != 0;
    assume BusExtension_16 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} BusExtension_16 != 0;
    assume BusExtension_16 > 0;
    call {:si_unique_call 1643} vslice_dummy_var_310 := sdv_InsertTailList(AvcVirtualInstanceList, FdoEntry__BUS_DEVICE_EXTENSION(BusExtension_16));
    goto L14;

  L14:
    call {:si_unique_call 1644} sdv_KeReleaseSpinLock(0, OldIrql_15);
    return;

  anon3_Then:
    assume {:nonnull} BusExtension_16 != 0;
    assume BusExtension_16 > 0;
    call {:si_unique_call 1645} vslice_dummy_var_309 := sdv_InsertTailList(AvcPeerInstanceList, FdoEntry__BUS_DEVICE_EXTENSION(BusExtension_16));
    goto L14;
}



procedure {:origName "AvcRemoveFromPdoList"} AvcRemoveFromPdoList(actual_BusExtension_17: int, actual_PdoData_10: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcRemoveFromPdoList"} AvcRemoveFromPdoList(actual_BusExtension_17: int, actual_PdoData_10: int)
{
  var {:pointer} Tmp_1037: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} PdoData_10: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;

  anon0:
    call {:si_unique_call 1646} vslice_dummy_var_311 := __HAVOC_malloc(4);
    PdoData_10 := actual_PdoData_10;
    call {:si_unique_call 1647} Tmp_1037 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1037 != 0;
    assume Tmp_1037 > 0;
    Mem_T.INT4[Tmp_1037] := oldIrql_5;
    call {:si_unique_call 1648} sdv_KeAcquireSpinLock(0, Tmp_1037);
    assume {:nonnull} Tmp_1037 != 0;
    assume Tmp_1037 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_1037];
    call {:si_unique_call 1649} vslice_dummy_var_312 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1650} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} PdoData_10 != 0;
    assume PdoData_10 > 0;
    call {:si_unique_call 1651} InitializeListHead(PdoList__PDO_DATA(PdoData_10));
    return;
}



procedure {:origName "AvcRobustStatusRequest"} AvcRobustStatusRequest(actual_Command_25: int) returns (Tmp_1038: int);
  modifies alloc, Mem_T.INT4, yogi_error, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcRobustStatusRequest"} AvcRobustStatusRequest(actual_Command_25: int) returns (Tmp_1038: int)
{
  var {:scalar} Retries_1: int;
  var {:scalar} ntStatus_45: int;
  var {:scalar} tmDelay_1: int;
  var {:pointer} Command_25: int;
  var vslice_dummy_var_313: int;

  anon0:
    call {:si_unique_call 1652} tmDelay_1 := __HAVOC_malloc(20);
    Command_25 := actual_Command_25;
    ntStatus_45 := 0;
    call {:si_unique_call 1653} sdv_do_paged_code_check();
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    Retries_1 := 0;
    goto L13;

  L13:
    call {:si_unique_call 1654} Retries_1, ntStatus_45, vslice_dummy_var_313 := AvcRobustStatusRequest_loop_L13(Retries_1, ntStatus_45, tmDelay_1, Command_25, vslice_dummy_var_313);
    goto L13_last;

  L13_last:
    assume {:CounterLoop 10} {:Counter "Retries_1"} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 10 > Retries_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Retries_1 != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_45 != 258;
    call {:si_unique_call 1655} vslice_dummy_var_313 := KeDelayExecutionThread(0, 0, 0);
    goto L16;

  L16:
    call {:si_unique_call 1656} ntStatus_45 := AvcStatus(Command_25);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_45 != 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_45 != -1073741435;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} ntStatus_45 != -1073741668;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_45 != -1073741643;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} ntStatus_45 != -1073741248;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_45 == 258;
    goto L27;

  L27:
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    goto L33;

  L33:
    Retries_1 := Retries_1 + 1;
    goto L33_dummy;

  L33_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} ntStatus_45 != 258;
    goto L14;

  L14:
    Tmp_1038 := ntStatus_45;
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} ntStatus_45 == -1073741248;
    goto L27;

  anon32_Then:
    assume {:partition} ntStatus_45 == -1073741643;
    goto L27;

  anon31_Then:
    assume {:partition} ntStatus_45 == -1073741668;
    goto L27;

  anon30_Then:
    assume {:partition} ntStatus_45 == -1073741435;
    goto L27;

  anon28_Then:
    assume {:partition} ntStatus_45 == 0;
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    goto L33;

  anon29_Then:
    goto L14;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:partition} ntStatus_45 == 258;
    goto L16;

  anon26_Then:
    assume {:partition} Retries_1 == 0;
    goto L16;

  anon25_Then:
    assume {:partition} Retries_1 >= 10;
    goto L14;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_UpdateVirtualSubunitInfo"} Avc_UpdateVirtualSubunitInfo(actual_BusExtension_18: int, actual_cbAddrSpec: int, actual_AddrSpec_2: int) returns (Tmp_1040: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_UpdateVirtualSubunitInfo"} Avc_UpdateVirtualSubunitInfo(actual_BusExtension_18: int, actual_cbAddrSpec: int, actual_AddrSpec_2: int) returns (Tmp_1040: int)
{
  var {:pointer} PdoData_11: int;
  var {:scalar} SubunitID_2: int;
  var {:scalar} InstanceID: int;
  var {:pointer} ValueName_3: int;
  var {:pointer} SubunitAddr_12: int;
  var {:pointer} szValueNameWorkingBuffer: int;
  var {:pointer} SubunitInfoBytes_1: int;
  var {:scalar} uniValueName: int;
  var {:scalar} sdv_646: int;
  var {:pointer} QueryTable_1: int;
  var {:scalar} ntStatus_46: int;
  var {:pointer} szTemp_1: int;
  var {:pointer} Tmp_1042: int;
  var {:scalar} cbAddr: int;
  var {:scalar} AllowedDelta: int;
  var {:scalar} sdv_654: int;
  var {:scalar} uniTemp_1: int;
  var {:dopa} {:scalar} MaxSubunitID: int;
  var {:pointer} SubunitType_4: int;
  var {:dopa} {:scalar} BytesUsed_5: int;
  var {:scalar} uniName_1: int;
  var {:scalar} Tmp_1044: int;
  var {:pointer} ListHandle_1: int;
  var {:pointer} sdv_660: int;
  var {:pointer} BusExtension_18: int;
  var {:scalar} cbAddrSpec: int;
  var {:pointer} AddrSpec_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;

  anon0:
    call {:si_unique_call 1657} vslice_dummy_var_314 := __HAVOC_malloc(24);
    call {:si_unique_call 1658} ValueName_3 := __HAVOC_malloc(4);
    call {:si_unique_call 1659} SubunitInfoBytes_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1660} uniValueName := __HAVOC_malloc(12);
    call {:si_unique_call 1661} uniTemp_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1662} MaxSubunitID := __HAVOC_malloc(4);
    call {:si_unique_call 1663} BytesUsed_5 := __HAVOC_malloc(4);
    call {:si_unique_call 1664} uniName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1665} ListHandle_1 := __HAVOC_malloc(4);
    BusExtension_18 := actual_BusExtension_18;
    cbAddrSpec := actual_cbAddrSpec;
    AddrSpec_2 := actual_AddrSpec_2;
    call {:si_unique_call 1666} SubunitAddr_12 := __HAVOC_malloc(128);
    call {:si_unique_call 1667} szValueNameWorkingBuffer := __HAVOC_malloc(1024);
    assume {:nonnull} SubunitInfoBytes_1 != 0;
    assume SubunitInfoBytes_1 > 0;
    call {:si_unique_call 1668} boogieTmp := __HAVOC_malloc(128);
    call {:si_unique_call 1669} szTemp_1 := __HAVOC_malloc(16);
    call {:si_unique_call 1670} Tmp_1042 := __HAVOC_malloc(80);
    call {:si_unique_call 1671} SubunitType_4 := __HAVOC_malloc(128);
    call {:si_unique_call 1672} vslice_dummy_var_318 := __HAVOC_malloc(8);
    cbAddr := cbAddrSpec - 4;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    Mem_T.INT4[BytesUsed_5] := 0;
    AllowedDelta := 3;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} cbAddr > 32;
    Tmp_1040 := -1073741306;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon81_Then:
    assume {:partition} 32 >= cbAddr;
    assume {:nonnull} AddrSpec_2 != 0;
    assume AddrSpec_2 > 0;
    havoc vslice_dummy_var_134;
    call {:si_unique_call 1673} ntStatus_46 := AvcValidateSubunitAddress(vslice_dummy_var_134, cbAddr, BytesUsed_5);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} ntStatus_46 != 0;
    goto L18;

  L18:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} ntStatus_46 != 0;
    goto L20;

  L20:
    Tmp_1040 := ntStatus_46;
    goto L1;

  anon59_Then:
    assume {:partition} ntStatus_46 == 0;
    ntStatus_46 := -1073741811;
    goto L20;

  anon57_Then:
    assume {:partition} ntStatus_46 == 0;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.INT4[BytesUsed_5] == cbAddr;
    goto L28;

  L28:
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    call {:si_unique_call 1674} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[BytesUsed_5]);
    assume {:nonnull} SubunitInfoBytes_1 != 0;
    assume SubunitInfoBytes_1 > 0;
    havoc vslice_dummy_var_135;
    call {:si_unique_call 1675} ntStatus_46 := AvcUnpackSubunitAddress(vslice_dummy_var_135, SubunitType_4, MaxSubunitID, BytesUsed_5);
    SubunitID_2 := 0;
    goto L36;

  L36:
    call {:si_unique_call 1676} SubunitID_2, ntStatus_46 := Avc_UpdateVirtualSubunitInfo_loop_L36(SubunitID_2, SubunitAddr_12, ntStatus_46, MaxSubunitID, SubunitType_4, BusExtension_18);
    goto L36_last;

  L36_last:
    assume {:nonnull} MaxSubunitID != 0;
    assume MaxSubunitID > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.INT4[MaxSubunitID] >= SubunitID_2;
    call {:si_unique_call 1677} ntStatus_46 := AvcPackSubunitAddress(SubunitType_4, SubunitID_2, 32, SubunitAddr_12, 0);
    call {:si_unique_call 1678} Avc_FindOrCreatePDO(BusExtension_18, SubunitAddr_12, 5);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    SubunitID_2 := SubunitID_2 + 1;
    goto anon82_Else_dummy;

  anon82_Else_dummy:
    assume false;
    return;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:partition} SubunitID_2 > Mem_T.INT4[MaxSubunitID];
    call {:si_unique_call 1679} ntStatus_46 := AvcPackSubunitAddress(SubunitType_4, SubunitID_2, 32, SubunitAddr_12, 0);
    call {:si_unique_call 1680} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    havoc PdoData_11;
    goto L53;

  L53:
    call {:si_unique_call 1681} PdoData_11, sdv_646, sdv_654 := Avc_UpdateVirtualSubunitInfo_loop_L53(PdoData_11, SubunitAddr_12, sdv_646, sdv_654, BusExtension_18);
    goto L53_last;

  L53_last:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    havoc vslice_dummy_var_136;
    call {:si_unique_call 1682} sdv_654 := AvcSubunitAddrsEqual(SubunitAddr_12, vslice_dummy_var_136);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_654 != 0;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto L63;

  L63:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    havoc PdoData_11;
    goto L66;

  L66:
    call {:si_unique_call 1683} PdoData_11, sdv_646 := Avc_UpdateVirtualSubunitInfo_loop_L66(PdoData_11, SubunitAddr_12, sdv_646, BusExtension_18);
    goto L66_last;

  L66_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    havoc vslice_dummy_var_137;
    call {:si_unique_call 1684} sdv_646 := AvcSubunitPackedTypesEqual(SubunitAddr_12, vslice_dummy_var_137);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_646 != 0;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto L71;

  L71:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    havoc PdoData_11;
    goto L71_dummy;

  L71_dummy:
    assume false;
    return;

  anon67_Then:
    goto L71;

  anon66_Then:
    assume {:partition} sdv_646 == 0;
    goto L71;

  anon65_Then:
    goto anon65_Then_dummy;

  anon65_Then_dummy:
    assume false;
    return;

  anon64_Then:
    goto L63;

  anon63_Then:
    assume {:partition} sdv_654 == 0;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    havoc PdoData_11;
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon62_Then:
    call {:si_unique_call 1685} ExReleaseFastMutex(0);
    assume {:nonnull} AddrSpec_2 != 0;
    assume AddrSpec_2 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 1686} ntStatus_46 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} ntStatus_46 >= 0;
    Tmp_1042 := strConst__li2bpl3;
    call {:si_unique_call 1687} RtlInitUnicodeString(uniName_1, Tmp_1042);
    call {:si_unique_call 1688} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1689} ntStatus_46 := ZwOpenKey(ListHandle_1, 983103, 0);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} ntStatus_46 >= 0;
    call {:si_unique_call 1690} sdv_660 := sdv_ExAllocateFromNPagedLookasideList(0);
    QueryTable_1 := sdv_660;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} QueryTable_1 != 0;
    call {:si_unique_call 1691} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    call {:si_unique_call 1692} ntStatus_46 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} ntStatus_46 >= 0;
    goto L122;

  L122:
    assume {:nonnull} SubunitInfoBytes_1 != 0;
    assume SubunitInfoBytes_1 > 0;
    havoc vslice_dummy_var_138;
    call {:si_unique_call 1693} ntStatus_46 := AvcGetDeviceDescriptionMessage(vslice_dummy_var_138, ValueName_3);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} ntStatus_46 == 0;
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    call {:si_unique_call 1694} vslice_dummy_var_319 := corral_nondet();
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    InstanceID := 1;
    goto L143;

  L143:
    call {:si_unique_call 1695} InstanceID, ntStatus_46, Tmp_1044, vslice_dummy_var_317, vslice_dummy_var_320, vslice_dummy_var_321, vslice_dummy_var_322 := Avc_UpdateVirtualSubunitInfo_loop_L143(InstanceID, uniValueName, ntStatus_46, szTemp_1, uniTemp_1, Tmp_1044, vslice_dummy_var_317, vslice_dummy_var_320, vslice_dummy_var_321, vslice_dummy_var_322);
    goto L143_last;

  L143_last:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} InstanceID != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} ntStatus_46 == 0;
    call {:si_unique_call 1696} ntStatus_46 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} ntStatus_46 == 0;
    assume {:nonnull} uniTemp_1 != 0;
    assume uniTemp_1 > 0;
    assume {:nonnull} uniTemp_1 != 0;
    assume uniTemp_1 > 0;
    assume {:nonnull} uniTemp_1 != 0;
    assume uniTemp_1 > 0;
    Tmp_1044 := InstanceID;
    call {:si_unique_call 1697} vslice_dummy_var_320 := RtlIntegerToUnicodeString(Tmp_1044, 10, 0);
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    call {:si_unique_call 1698} vslice_dummy_var_321 := corral_nondet();
    call {:si_unique_call 1699} vslice_dummy_var_322 := corral_nondet();
    call {:si_unique_call 1700} vslice_dummy_var_317 := corral_nondet();
    goto L152;

  L152:
    InstanceID := InstanceID + 1;
    goto L152_dummy;

  L152_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} ntStatus_46 != 0;
    goto L152;

  anon77_Then:
    assume {:partition} ntStatus_46 != 0;
    goto L144;

  L144:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} -1073741772 == ntStatus_46;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    call {:si_unique_call 1701} ntStatus_46 := RtlWriteRegistryValue(-1073741824, 0, 0, 3, 0, Mem_T.INT4[BytesUsed_5]);
    goto L171;

  L171:
    call {:si_unique_call 1702} sdv_ExFreePool(0);
    goto L128;

  L128:
    call {:si_unique_call 1703} ExFreeToNPagedLookasideList(AvcQueryTablePool, QueryTable_1);
    goto L106;

  L106:
    call {:si_unique_call 1704} vslice_dummy_var_316 := ZwClose(0);
    goto L97;

  L97:
    call {:si_unique_call 1705} vslice_dummy_var_315 := ZwClose(0);
    goto L76;

  L76:
    assume {:nonnull} AddrSpec_2 != 0;
    assume AddrSpec_2 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 1706} IoInvalidateDeviceRelations(0, 0);
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto L20;

  anon80_Then:
    goto L20;

  anon69_Then:
    goto L20;

  anon76_Then:
    assume {:partition} -1073741772 != ntStatus_46;
    goto L171;

  anon75_Then:
    assume {:partition} InstanceID == 0;
    goto L144;

  anon74_Then:
    assume {:partition} ntStatus_46 != 0;
    goto L128;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    assume {:partition} 0 > ntStatus_46;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} -1073741772 != ntStatus_46;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} -1073741536 == ntStatus_46;
    ntStatus_46 := 0;
    goto L128;

  anon79_Then:
    assume {:partition} -1073741536 != ntStatus_46;
    goto L128;

  anon73_Then:
    assume {:partition} -1073741772 == ntStatus_46;
    goto L122;

  anon83_Then:
    assume {:partition} QueryTable_1 == 0;
    goto L106;

  anon71_Then:
    assume {:partition} 0 > ntStatus_46;
    goto L97;

  anon70_Then:
    assume {:partition} 0 > ntStatus_46;
    goto L76;

  anon68_Then:
    goto L76;

  anon58_Then:
    assume {:partition} Mem_T.INT4[BytesUsed_5] != cbAddr;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} cbAddr - Mem_T.INT4[BytesUsed_5] == AllowedDelta;
    goto L28;

  anon60_Then:
    assume {:partition} cbAddr - Mem_T.INT4[BytesUsed_5] != AllowedDelta;
    goto L18;
}



procedure {:origName "Avc_PDO_Pnp"} Avc_PDO_Pnp(actual_DeviceObject_31: int, actual_Irp_38: int) returns (Tmp_1045: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_PDO_Pnp"} Avc_PDO_Pnp(actual_DeviceObject_31: int, actual_Irp_38: int) returns (Tmp_1045: int)
{
  var {:pointer} Tmp_1046: int;
  var {:pointer} PdoData_12: int;
  var {:pointer} PdoData_13: int;
  var {:pointer} sdv_661: int;
  var {:scalar} cbTemp: int;
  var {:pointer} idString: int;
  var {:pointer} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} wszTemp: int;
  var {:pointer} Tmp_1050: int;
  var {:pointer} IrpStack_12: int;
  var {:pointer} Tmp_1052: int;
  var {:pointer} sdv_666: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} sdv_667: int;
  var {:pointer} Tmp_1055: int;
  var {:pointer} Tmp_1056: int;
  var {:pointer} Tmp_1057: int;
  var {:pointer} Tmp_1058: int;
  var {:pointer} DeviceCapabilities_1: int;
  var {:scalar} ntStatus_47: int;
  var {:pointer} PdoExtension_19: int;
  var {:scalar} sdv_672: int;
  var {:pointer} Relation: int;
  var {:scalar} StartState: int;
  var {:pointer} UnitInfo_1: int;
  var {:pointer} sdv_675: int;
  var {:pointer} sdv_676: int;
  var {:pointer} Tmp_1062: int;
  var {:pointer} pwszSubunit: int;
  var {:pointer} Tmp_1063: int;
  var {:scalar} MinorFunction_2: int;
  var {:scalar} Length_7: int;
  var {:pointer} BusInfo: int;
  var {:pointer} Tmp_1064: int;
  var {:pointer} Tmp_1065: int;
  var {:pointer} sdv_679: int;
  var {:pointer} Tmp_1066: int;
  var {:scalar} Tmp_1067: int;
  var {:pointer} BusExtension_19: int;
  var {:pointer} PdoData_14: int;
  var {:scalar} uniDeviceText: int;
  var {:pointer} Tmp_1068: int;
  var {:pointer} Tmp_1069: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_38: int;
  var boogieTmp: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;

  anon0:
    call {:si_unique_call 1707} wszTemp := __HAVOC_malloc(4);
    call {:si_unique_call 1708} pwszSubunit := __HAVOC_malloc(4);
    call {:si_unique_call 1709} uniDeviceText := __HAVOC_malloc(12);
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_38 := actual_Irp_38;
    call {:si_unique_call 1710} Tmp_1046 := __HAVOC_malloc(28);
    call {:si_unique_call 1711} Tmp_1048 := __HAVOC_malloc(28);
    call {:si_unique_call 1712} Tmp_1054 := __HAVOC_malloc(28);
    call {:si_unique_call 1713} Tmp_1055 := __HAVOC_malloc(28);
    call {:si_unique_call 1714} Tmp_1057 := __HAVOC_malloc(28);
    call {:si_unique_call 1715} Tmp_1058 := __HAVOC_malloc(28);
    call {:si_unique_call 1716} vslice_dummy_var_328 := __HAVOC_malloc(8);
    call {:si_unique_call 1717} vslice_dummy_var_329 := __HAVOC_malloc(8);
    call {:si_unique_call 1718} Tmp_1069 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc PdoExtension_19;
    ntStatus_47 := 0;
    call {:si_unique_call 1719} sdv_do_paged_code_check();
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1720} IrpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_38);
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    havoc MinorFunction_2;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1064;
    assume {:nonnull} Tmp_1064 != 0;
    assume Tmp_1064 > 0;
    havoc StartState;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} MinorFunction_2 != 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} MinorFunction_2 != 1;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} MinorFunction_2 != 2;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} MinorFunction_2 != 3;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} MinorFunction_2 != 4;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} MinorFunction_2 != 5;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} MinorFunction_2 != 6;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} MinorFunction_2 != 7;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} MinorFunction_2 != 9;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} MinorFunction_2 != 10;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} MinorFunction_2 != 11;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} MinorFunction_2 != 12;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} MinorFunction_2 != 19;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} MinorFunction_2 != 21;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} MinorFunction_2 == 23;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    call {:si_unique_call 1721} vslice_dummy_var_323 := sdv_ObDereferenceObject(0);
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto L37;

  L37:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1047;
    assume {:nonnull} Tmp_1047 != 0;
    assume Tmp_1047 > 0;
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1068;
    assume {:nonnull} Tmp_1068 != 0;
    assume Tmp_1068 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1062;
    assume {:nonnull} Tmp_1062 != 0;
    assume Tmp_1062 > 0;
    havoc vslice_dummy_var_139;
    call {:si_unique_call 1722} vslice_dummy_var_330 := Avc_TriggerBusReset(vslice_dummy_var_139);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  L44:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} 2 == MinorFunction_2;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc PdoData_13;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} PdoData_13 != 0;
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    havoc BusExtension_19;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} BusExtension_19 != 0;
    call {:si_unique_call 1723} ExAcquireFastMutex(0);
    call {:si_unique_call 1724} AvcRemoveFromPdoList(BusExtension_19, PdoData_13);
    call {:si_unique_call 1725} ExReleaseFastMutex(0);
    goto L61;

  L61:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    call {:si_unique_call 1726} AvcReleaseRemoveLockAndWait(RemoveLock__COMMON_DEVICE_EXTENSION(PdoExtension_19));
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1727} RemoveConnectionMgr(PdoData_13);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    call {:si_unique_call 1728} sdv_ExFreePool(0);
    goto L77;

  L77:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    call {:si_unique_call 1729} sdv_ExFreePool(0);
    goto L81;

  L81:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    call {:si_unique_call 1730} sdv_ExFreePool(0);
    goto L85;

  L85:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    call {:si_unique_call 1731} sdv_ExFreePool(0);
    goto L89;

  L89:
    call {:si_unique_call 1732} sdv_ExFreePool(0);
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    call {:si_unique_call 1733} IoDeleteDevice(0);
    goto L50;

  L50:
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    call {:si_unique_call 1734} sdv_IoCompleteRequest(0, 0);
    Tmp_1045 := ntStatus_47;
    goto LM2;

  LM2:
    return;

  anon139_Then:
    goto L89;

  anon138_Then:
    goto L85;

  anon137_Then:
    goto L81;

  anon136_Then:
    goto L77;

  anon180_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon178_Then:
    assume {:partition} BusExtension_19 == 0;
    goto L61;

  anon135_Then:
    goto L54;

  L54:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    call {:si_unique_call 1735} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(PdoExtension_19));
    goto L50;

  anon177_Then:
    assume {:partition} PdoData_13 == 0;
    goto L54;

  anon133_Then:
    assume {:partition} 2 != MinorFunction_2;
    goto L50;

  anon176_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L44;

  anon134_Then:
    goto L44;

  anon132_Then:
    goto L44;

  anon195_Then:
    goto L37;

  anon154_Then:
    assume {:partition} MinorFunction_2 != 23;
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    havoc ntStatus_47;
    goto L43;

  anon155_Then:
    assume {:partition} MinorFunction_2 == 21;
    call {:si_unique_call 1736} sdv_676 := ExAllocatePoolWithTag(1, 24, 541283905);
    BusInfo := sdv_676;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} BusInfo != 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    goto L43;

  anon194_Then:
    assume {:partition} BusInfo == 0;
    ntStatus_47 := -1073741670;
    goto L43;

  anon156_Then:
    assume {:partition} MinorFunction_2 == 19;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc PdoData_14;
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    havoc Length_7;
    call {:si_unique_call 1737} sdv_675 := ExAllocatePoolWithTag(1, Length_7, 541283905);
    idString := sdv_675;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1738} sdv_RtlCopyMemory(0, 0, Length_7);
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    goto L43;

  anon193_Then:
    assume {:partition} idString == 0;
    ntStatus_47 := -1073741670;
    goto L43;

  anon142_Then:
    ntStatus_47 := -1073741823;
    goto L43;

  anon169_Then:
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    havoc ntStatus_47;
    goto L43;

  anon170_Then:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    havoc Length_7;
    call {:si_unique_call 1739} sdv_667 := ExAllocatePoolWithTag(1, Length_7, 541283905);
    idString := sdv_667;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1740} sdv_RtlCopyMemory(0, 0, Length_7);
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    goto L43;

  anon192_Then:
    assume {:partition} idString == 0;
    ntStatus_47 := -1073741670;
    goto L43;

  anon141_Then:
    ntStatus_47 := -1073741823;
    goto L43;

  anon171_Then:
    goto L119;

  L119:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    havoc Length_7;
    call {:si_unique_call 1741} sdv_679 := ExAllocatePoolWithTag(1, Length_7, 541283905);
    idString := sdv_679;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1742} sdv_RtlCopyMemory(0, 0, Length_7);
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    goto L43;

  anon191_Then:
    assume {:partition} idString == 0;
    ntStatus_47 := -1073741670;
    goto L43;

  anon140_Then:
    ntStatus_47 := -1073741823;
    goto L43;

  anon190_Then:
    goto L119;

  anon157_Then:
    assume {:partition} MinorFunction_2 == 12;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc PdoData_12;
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    havoc Tmp_1066;
    assume {:nonnull} Tmp_1066 != 0;
    assume Tmp_1066 > 0;
    UnitInfo_1 := UnitIDs__BUS_DEVICE_EXTENSION(Tmp_1066);
    assume {:nonnull} wszTemp != 0;
    assume wszTemp > 0;
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    call {:si_unique_call 1743} ntStatus_47 := AvcGetDescriptionMessage(65536, wszTemp);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} yogi_error != 1;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} ntStatus_47 == 0;
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    assume {:nonnull} wszTemp != 0;
    assume wszTemp > 0;
    goto L43;

  anon144_Then:
    assume {:partition} ntStatus_47 != 0;
    goto L43;

  anon189_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon168_Then:
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    havoc ntStatus_47;
    goto L43;

  anon184_Then:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    goto L184;

  L184:
    assume {:nonnull} pwszSubunit != 0;
    assume pwszSubunit > 0;
    cbTemp := 0;
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    havoc cbTemp;
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto L193;

  L193:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    havoc vslice_dummy_var_140;
    call {:si_unique_call 1744} ntStatus_47 := AvcGetDeviceDescriptionMessage(vslice_dummy_var_140, pwszSubunit);
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} yogi_error != 1;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} ntStatus_47 == 0;
    cbTemp := cbTemp + sdv_672 * 2 + 2;
    goto L194;

  L194:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    Tmp_1067 := cbTemp;
    call {:si_unique_call 1745} sdv_661 := ExAllocatePoolWithTag(1, Tmp_1067, 541283905);
    assume {:nonnull} wszTemp != 0;
    assume wszTemp > 0;
    assume {:nonnull} wszTemp != 0;
    assume wszTemp > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    call {:si_unique_call 1746} RtlInitUnicodeString(uniDeviceText, 0);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} wszTemp != 0;
    assume wszTemp > 0;
    call {:si_unique_call 1747} vslice_dummy_var_331 := corral_nondet();
    call {:si_unique_call 1748} vslice_dummy_var_332 := corral_nondet();
    call {:si_unique_call 1749} vslice_dummy_var_324 := corral_nondet();
    assume {:nonnull} pwszSubunit != 0;
    assume pwszSubunit > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 1750} vslice_dummy_var_333 := corral_nondet();
    call {:si_unique_call 1751} vslice_dummy_var_325 := corral_nondet();
    goto L228;

  L228:
    ntStatus_47 := 0;
    goto L235;

  L235:
    assume {:nonnull} pwszSubunit != 0;
    assume pwszSubunit > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    call {:si_unique_call 1752} sdv_ExFreePool(0);
    goto L236;

  L236:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} ntStatus_47 == 0;
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    assume {:nonnull} wszTemp != 0;
    assume wszTemp > 0;
    goto L43;

  anon152_Then:
    assume {:partition} ntStatus_47 != 0;
    goto L43;

  anon151_Then:
    goto L236;

  anon150_Then:
    goto L228;

  anon187_Then:
    ntStatus_47 := -1073741670;
    goto L235;

  anon148_Then:
    ntStatus_47 := -1073741670;
    goto L235;

  anon149_Then:
    assume {:partition} ntStatus_47 != 0;
    goto L194;

  anon186_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    goto L194;

  anon185_Then:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    havoc cbTemp;
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto L193;

  anon145_Then:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    goto L184;

  anon146_Then:
    goto L178;

  L178:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    havoc vslice_dummy_var_141;
    call {:si_unique_call 1753} ntStatus_47 := AvcGetDeviceDescriptionMessage(vslice_dummy_var_141, wszTemp);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} yogi_error != 1;
    goto L236;

  anon188_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L178;

  anon158_Then:
    assume {:partition} MinorFunction_2 == 11;
    goto L43;

  anon159_Then:
    assume {:partition} MinorFunction_2 == 10;
    goto L43;

  anon160_Then:
    assume {:partition} MinorFunction_2 == 9;
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    havoc DeviceCapabilities_1;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_1048;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    Mem_T.INT4[Tmp_1048 + 1 * 4] := 1;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_1046;
    assume {:nonnull} Tmp_1046 != 0;
    assume Tmp_1046 > 0;
    Mem_T.INT4[Tmp_1046 + 2 * 4] := 4;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_1054;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    Mem_T.INT4[Tmp_1054 + 3 * 4] := 4;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_1057;
    assume {:nonnull} Tmp_1057 != 0;
    assume Tmp_1057 > 0;
    Mem_T.INT4[Tmp_1057 + 4 * 4] := 4;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_1058;
    assume {:nonnull} Tmp_1058 != 0;
    assume Tmp_1058 > 0;
    Mem_T.INT4[Tmp_1058 + 5 * 4] := 4;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_1055;
    assume {:nonnull} Tmp_1055 != 0;
    assume Tmp_1055 > 0;
    Mem_T.INT4[Tmp_1055 + 6 * 4] := 4;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    goto L43;

  anon153_Then:
    goto L246;

  L246:
    ntStatus_47 := -1073741823;
    goto L43;

  anon183_Then:
    goto L246;

  anon161_Then:
    assume {:partition} MinorFunction_2 == 7;
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    call {:si_unique_call 1754} sdv_666 := ExAllocatePoolWithTag(1, 8, 541283905);
    Relation := sdv_666;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Relation != 0;
    call {:si_unique_call 1755} vslice_dummy_var_326 := sdv_ObReferenceObject(0);
    assume {:nonnull} Relation != 0;
    assume Relation > 0;
    assume {:nonnull} Relation != 0;
    assume Relation > 0;
    havoc Tmp_1069;
    assume {:nonnull} Tmp_1069 != 0;
    assume Tmp_1069 > 0;
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    goto L43;

  anon182_Then:
    assume {:partition} Relation == 0;
    ntStatus_47 := -1073741670;
    goto L43;

  anon131_Then:
    assume {:nonnull} Irp_38 != 0;
    assume Irp_38 > 0;
    havoc ntStatus_47;
    goto L43;

  anon162_Then:
    assume {:partition} MinorFunction_2 == 6;
    goto L43;

  anon163_Then:
    assume {:partition} MinorFunction_2 == 5;
    goto L43;

  anon164_Then:
    assume {:partition} MinorFunction_2 == 4;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    goto L43;

  anon165_Then:
    assume {:partition} MinorFunction_2 == 3;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto L43;

  anon166_Then:
    assume {:partition} MinorFunction_2 == 2;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    call {:si_unique_call 1756} vslice_dummy_var_327 := sdv_ObDereferenceObject(0);
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto L283;

  L283:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1063;
    assume {:nonnull} Tmp_1063 != 0;
    assume Tmp_1063 > 0;
    goto L43;

  anon181_Then:
    goto L283;

  anon167_Then:
    assume {:partition} MinorFunction_2 == 1;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto L43;

  anon173_Then:
    assume {:partition} MinorFunction_2 == 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1056;
    assume {:nonnull} Tmp_1056 != 0;
    assume Tmp_1056 > 0;
    havoc Tmp_1065;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} Tmp_1065 != 0;
    assume Tmp_1065 > 0;
    havoc vslice_dummy_var_142;
    call {:si_unique_call 1757} boogieTmp := IoGetAttachedDeviceReference(vslice_dummy_var_142);
    goto L43;

  anon174_Then:
    goto L43;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_SetFcpNotify"} Avc_SetFcpNotify(actual_BusExtension_20: int, actual_bEnable_1: int) returns (Tmp_1070: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SetFcpNotify"} Avc_SetFcpNotify(actual_BusExtension_20: int, actual_bEnable_1: int) returns (Tmp_1070: int)
{
  var {:pointer} Tmp_1072: int;
  var {:pointer} Irp_39: int;
  var {:scalar} ntStatus_48: int;
  var {:pointer} NextIrpStack_10: int;
  var {:scalar} AvRequest_3: int;
  var {:pointer} BusExtension_20: int;
  var {:scalar} bEnable_1: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;

  anon0:
    call {:si_unique_call 1758} AvRequest_3 := __HAVOC_malloc(460);
    BusExtension_20 := actual_BusExtension_20;
    bEnable_1 := actual_bEnable_1;
    ntStatus_48 := 0;
    call {:si_unique_call 1759} sdv_do_paged_code_check();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    havoc Tmp_1072;
    assume {:nonnull} Tmp_1072 != 0;
    assume Tmp_1072 > 0;
    havoc vslice_dummy_var_143;
    call {:si_unique_call 1760} Irp_39 := IoAllocateIrp(vslice_dummy_var_143, 0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irp_39 != 0;
    call {:si_unique_call 1761} NextIrpStack_10 := sdv_IoGetNextIrpStackLocation(Irp_39);
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} bEnable_1 != 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L28;

  L28:
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    havoc vslice_dummy_var_144;
    call {:si_unique_call 1762} ntStatus_48 := Avc_SubmitIrpSynch(vslice_dummy_var_144, Irp_39);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1763} IoFreeIrp(0);
    goto L38;

  L38:
    Tmp_1070 := ntStatus_48;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    goto L28;

  anon13_Then:
    assume {:partition} bEnable_1 == 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    goto L28;

  anon11_Then:
    assume {:partition} Irp_39 == 0;
    ntStatus_48 := -1073741670;
    goto L38;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_EnumerateExtrnalChildren"} Avc_EnumerateExtrnalChildren(actual_BusExtension_21: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_EnumerateExtrnalChildren"} Avc_EnumerateExtrnalChildren(actual_BusExtension_21: int)
{
  var {:pointer} PdoData_15: int;
  var {:scalar} SubunitID_3: int;
  var {:pointer} SubunitAddr_13: int;
  var {:scalar} Tmp_1073: int;
  var {:scalar} MorePages: int;
  var {:dopa} {:scalar} BytesUsed_6: int;
  var {:scalar} Tmp_1074: int;
  var {:pointer} SubunitInfoBytes_2: int;
  var {:scalar} SubunitAddrs: int;
  var {:scalar} Tmp_1075: int;
  var {:pointer} Tmp_1076: int;
  var {:scalar} Tmp_1077: int;
  var {:dopa} {:scalar} SubunitAddr_14: int;
  var {:pointer} Tmp_1079: int;
  var {:scalar} ntStatus_49: int;
  var {:pointer} Tmp_1082: int;
  var {:dopa} {:scalar} SubunitAddr_15: int;
  var {:pointer} Command_26: int;
  var {:scalar} Tmp_1084: int;
  var {:dopa} {:scalar} MaxSubunitID_1: int;
  var {:pointer} SubunitType_5: int;
  var {:dopa} {:scalar} BytesUsed_7: int;
  var {:scalar} HasSingleCameraSubunit: int;
  var {:scalar} StartOffset: int;
  var {:scalar} HasSingleTapeSubunit: int;
  var {:scalar} page: int;
  var {:scalar} Tmp_1085: int;
  var {:pointer} BusExtension_21: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;

  anon0:
    call {:si_unique_call 1764} BytesUsed_6 := __HAVOC_malloc(4);
    call {:si_unique_call 1765} SubunitAddr_14 := __HAVOC_malloc(4);
    call {:si_unique_call 1766} vslice_dummy_var_334 := __HAVOC_malloc(4);
    call {:si_unique_call 1767} SubunitAddr_15 := __HAVOC_malloc(4);
    call {:si_unique_call 1768} Command_26 := __HAVOC_malloc(4);
    call {:si_unique_call 1769} MaxSubunitID_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1770} BytesUsed_7 := __HAVOC_malloc(4);
    BusExtension_21 := actual_BusExtension_21;
    call {:si_unique_call 1771} SubunitAddr_13 := __HAVOC_malloc(128);
    call {:si_unique_call 1772} SubunitInfoBytes_2 := __HAVOC_malloc(128);
    call {:si_unique_call 1773} Tmp_1082 := __HAVOC_malloc(2048);
    call {:si_unique_call 1774} SubunitType_5 := __HAVOC_malloc(128);
    assume {:nonnull} Command_26 != 0;
    assume Command_26 > 0;
    ntStatus_49 := 0;
    call {:si_unique_call 1775} sdv_do_paged_code_check();
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1776} ntStatus_49 := AvcAllocateUnitCommandContext(BusExtension_21, Command_26);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} ntStatus_49 == 0;
    SubunitAddrs := 0;
    StartOffset := 0;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    MorePages := 1;
    page := 0;
    call {:si_unique_call 1777} sdv_RtlZeroMemory(0, 32);
    goto L107;

  L107:
    call {:si_unique_call 1778} Tmp_1073, MorePages, Tmp_1074, SubunitAddrs, Tmp_1075, Tmp_1076, Tmp_1077, ntStatus_49, Tmp_1082, Tmp_1084, StartOffset, page := Avc_EnumerateExtrnalChildren_loop_L107(Tmp_1073, MorePages, BytesUsed_6, Tmp_1074, SubunitInfoBytes_2, SubunitAddrs, Tmp_1075, Tmp_1076, Tmp_1077, ntStatus_49, Tmp_1082, Command_26, Tmp_1084, StartOffset, page);
    goto L107_last;

  L107_last:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} MorePages != 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} 8 > page;
    assume {:nonnull} Command_26 != 0;
    assume Command_26 > 0;
    havoc vslice_dummy_var_145;
    call {:si_unique_call 1779} ntStatus_49 := AvcReq_SubUnitInfo(vslice_dummy_var_145, page);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} ntStatus_49 != 0;
    MorePages := 0;
    goto L116;

  L116:
    page := page + 1;
    goto L116_dummy;

  L116_dummy:
    assume false;
    return;

  anon92_Then:
    assume {:partition} ntStatus_49 == 0;
    assume {:nonnull} Command_26 != 0;
    assume Command_26 > 0;
    havoc Tmp_1075;
    assume {:nonnull} Command_26 != 0;
    assume Command_26 > 0;
    havoc Tmp_1082;
    Tmp_1077 := page * 4;
    call {:si_unique_call 1780} sdv_RtlCopyMemory(0, 0, 4);
    goto L122;

  L122:
    call {:si_unique_call 1781} Tmp_1073, Tmp_1074, SubunitAddrs, Tmp_1076, ntStatus_49, Tmp_1084, StartOffset := Avc_EnumerateExtrnalChildren_loop_L122(Tmp_1073, BytesUsed_6, Tmp_1074, SubunitInfoBytes_2, SubunitAddrs, Tmp_1076, ntStatus_49, Tmp_1084, StartOffset);
    goto L122_last;

  L122_last:
    assume {:nonnull} BytesUsed_6 != 0;
    assume BytesUsed_6 > 0;
    Mem_T.INT4[BytesUsed_6] := 0;
    Tmp_1084 := StartOffset;
    assume {:nonnull} SubunitInfoBytes_2 != 0;
    assume SubunitInfoBytes_2 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Mem_T.INT4[SubunitInfoBytes_2 + Tmp_1084 * 4] == 255;
    MorePages := 0;
    goto L116;

  anon104_Then:
    assume {:partition} Mem_T.INT4[SubunitInfoBytes_2 + Tmp_1084 * 4] != 255;
    Tmp_1073 := 32 - StartOffset;
    Tmp_1074 := StartOffset;
    Tmp_1076 := SubunitInfoBytes_2 + Tmp_1074 * 4;
    call {:si_unique_call 1782} ntStatus_49 := AvcValidateSubunitAddress(Tmp_1076, Tmp_1073, BytesUsed_6);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} ntStatus_49 != 0;
    assume {:nonnull} BytesUsed_6 != 0;
    assume BytesUsed_6 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} INTMOD(StartOffset + Mem_T.INT4[BytesUsed_6], 4) != 0;
    MorePages := 0;
    goto L116;

  anon94_Then:
    assume {:partition} INTMOD(StartOffset + Mem_T.INT4[BytesUsed_6], 4) == 0;
    goto L116;

  anon93_Then:
    assume {:partition} ntStatus_49 == 0;
    assume {:nonnull} BytesUsed_6 != 0;
    assume BytesUsed_6 > 0;
    StartOffset := StartOffset + Mem_T.INT4[BytesUsed_6];
    SubunitAddrs := SubunitAddrs + 1;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} INTMOD(StartOffset, 4) != 0;
    goto anon105_Else_dummy;

  anon105_Else_dummy:
    assume false;
    return;

  anon105_Then:
    assume {:partition} INTMOD(StartOffset, 4) == 0;
    goto L116;

  anon103_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon91_Then:
    assume {:partition} page >= 8;
    goto L23;

  L23:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} SubunitAddrs != 0;
    HasSingleTapeSubunit := 0;
    HasSingleCameraSubunit := 0;
    StartOffset := 0;
    goto L30;

  L30:
    call {:si_unique_call 1783} SubunitID_3, SubunitAddrs, Tmp_1079, ntStatus_49, HasSingleCameraSubunit, StartOffset, HasSingleTapeSubunit, Tmp_1085 := Avc_EnumerateExtrnalChildren_loop_L30(SubunitID_3, SubunitAddr_13, SubunitInfoBytes_2, SubunitAddrs, Tmp_1079, ntStatus_49, MaxSubunitID_1, SubunitType_5, BytesUsed_7, HasSingleCameraSubunit, StartOffset, HasSingleTapeSubunit, Tmp_1085, BusExtension_21);
    goto L30_last;

  L30_last:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} SubunitAddrs != 0;
    Tmp_1085 := StartOffset;
    Tmp_1079 := SubunitInfoBytes_2 + Tmp_1085 * 4;
    call {:si_unique_call 1784} ntStatus_49 := AvcUnpackSubunitAddress(Tmp_1079, SubunitType_5, MaxSubunitID_1, BytesUsed_7);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} ntStatus_49 == 0;
    assume {:nonnull} SubunitType_5 != 0;
    assume SubunitType_5 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} Mem_T.INT4[SubunitType_5] == 4;
    assume {:nonnull} MaxSubunitID_1 != 0;
    assume MaxSubunitID_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.INT4[MaxSubunitID_1] == 0;
    HasSingleTapeSubunit := 1;
    goto L46;

  L46:
    assume {:nonnull} BytesUsed_7 != 0;
    assume BytesUsed_7 > 0;
    StartOffset := StartOffset + Mem_T.INT4[BytesUsed_7];
    SubunitAddrs := SubunitAddrs - 1;
    goto L46_dummy;

  L46_dummy:
    assume false;
    return;

  anon79_Then:
    assume {:partition} Mem_T.INT4[MaxSubunitID_1] != 0;
    goto L43;

  L43:
    assume {:nonnull} SubunitType_5 != 0;
    assume SubunitType_5 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.INT4[SubunitType_5] != 7;
    goto L51;

  L51:
    SubunitID_3 := 0;
    goto L52;

  L52:
    call {:si_unique_call 1785} SubunitID_3, ntStatus_49 := Avc_EnumerateExtrnalChildren_loop_L52(SubunitID_3, SubunitAddr_13, ntStatus_49, MaxSubunitID_1, SubunitType_5, BusExtension_21);
    goto L52_last;

  L52_last:
    assume {:nonnull} MaxSubunitID_1 != 0;
    assume MaxSubunitID_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.INT4[MaxSubunitID_1] >= SubunitID_3;
    call {:si_unique_call 1786} ntStatus_49 := AvcPackSubunitAddress(SubunitType_5, SubunitID_3, 32, SubunitAddr_13, 0);
    call {:si_unique_call 1787} Avc_FindOrCreatePDO(BusExtension_21, SubunitAddr_13, 3);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    SubunitID_3 := SubunitID_3 + 1;
    goto anon101_Else_dummy;

  anon101_Else_dummy:
    assume false;
    return;

  anon101_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon81_Then:
    assume {:partition} SubunitID_3 > Mem_T.INT4[MaxSubunitID_1];
    goto L46;

  anon78_Then:
    assume {:partition} Mem_T.INT4[SubunitType_5] == 7;
    assume {:nonnull} MaxSubunitID_1 != 0;
    assume MaxSubunitID_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.INT4[MaxSubunitID_1] != 0;
    goto L51;

  anon80_Then:
    assume {:partition} Mem_T.INT4[MaxSubunitID_1] == 0;
    HasSingleCameraSubunit := 1;
    goto L46;

  anon77_Then:
    assume {:partition} Mem_T.INT4[SubunitType_5] != 4;
    goto L43;

  anon76_Then:
    assume {:partition} ntStatus_49 != 0;
    goto L31;

  L31:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L63;

  L63:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} HasSingleTapeSubunit != 0;
    assume {:nonnull} SubunitAddr_14 != 0;
    assume SubunitAddr_14 > 0;
    Mem_T.INT4[SubunitAddr_14] := 32;
    call {:si_unique_call 1788} Avc_FindOrCreatePDO(BusExtension_21, SubunitAddr_14, 3);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    goto L64;

  L64:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} HasSingleCameraSubunit != 0;
    assume {:nonnull} SubunitAddr_15 != 0;
    assume SubunitAddr_15 > 0;
    Mem_T.INT4[SubunitAddr_15] := 56;
    call {:si_unique_call 1789} Avc_FindOrCreatePDO(BusExtension_21, SubunitAddr_15, 3);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto L70;

  L70:
    assume {:nonnull} Command_26 != 0;
    assume Command_26 > 0;
    havoc vslice_dummy_var_146;
    call {:si_unique_call 1790} AvcFreeCommandContext(vslice_dummy_var_146);
    goto L1;

  L1:
    goto LM2;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    assume {:partition} HasSingleCameraSubunit == 0;
    goto L70;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    assume {:partition} HasSingleTapeSubunit == 0;
    goto L64;

  anon75_Then:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} HasSingleTapeSubunit != 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} HasSingleCameraSubunit != 0;
    call {:si_unique_call 1791} Avc_FindOrCreatePDO(BusExtension_21, 0, 0);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    HasSingleCameraSubunit := 0;
    HasSingleTapeSubunit := HasSingleCameraSubunit;
    goto L63;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    assume {:partition} HasSingleCameraSubunit == 0;
    goto L63;

  anon82_Then:
    assume {:partition} HasSingleTapeSubunit == 0;
    goto L63;

  anon74_Then:
    assume {:partition} SubunitAddrs == 0;
    goto L31;

  anon72_Then:
    assume {:partition} SubunitAddrs == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} ntStatus_49 != 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} -1073741822 != ntStatus_49;
    call {:si_unique_call 1792} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    havoc PdoData_15;
    goto L91;

  L91:
    call {:si_unique_call 1793} PdoData_15 := Avc_EnumerateExtrnalChildren_loop_L91(PdoData_15);
    goto L91_last;

  L91_last:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    goto L96;

  L96:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    havoc PdoData_15;
    goto L96_dummy;

  L96_dummy:
    assume false;
    return;

  anon89_Then:
    goto L96;

  anon88_Then:
    call {:si_unique_call 1794} ExReleaseFastMutex(0);
    goto L70;

  anon87_Then:
    assume {:partition} -1073741822 == ntStatus_49;
    goto L84;

  L84:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    call {:si_unique_call 1795} Avc_FindOrCreatePDO(BusExtension_21, 0, 4);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto L70;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    goto L70;

  anon73_Then:
    assume {:partition} ntStatus_49 == 0;
    goto L84;

  anon90_Then:
    assume {:partition} MorePages == 0;
    goto L23;

  anon97_Then:
    goto L23;

  anon71_Then:
    assume {:partition} ntStatus_49 != 0;
    goto L1;

  anon96_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_335: int;

  anon0:
    call {:si_unique_call 1796} vslice_dummy_var_335 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "Avc_TriggerBusReset"} Avc_TriggerBusReset(actual_BusExtension_22: int) returns (Tmp_1088: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_TriggerBusReset"} Avc_TriggerBusReset(actual_BusExtension_22: int) returns (Tmp_1088: int)
{
  var {:pointer} Irp_40: int;
  var {:scalar} Irb_2: int;
  var {:scalar} ntStatus_50: int;
  var {:pointer} NextIrpStack_11: int;
  var {:pointer} Tmp_1090: int;
  var {:pointer} BusExtension_22: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 1797} Irb_2 := __HAVOC_malloc(860);
    BusExtension_22 := actual_BusExtension_22;
    ntStatus_50 := 0;
    call {:si_unique_call 1798} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc Tmp_1090;
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    havoc vslice_dummy_var_147;
    call {:si_unique_call 1799} Irp_40 := IoAllocateIrp(vslice_dummy_var_147, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irp_40 != 0;
    call {:si_unique_call 1800} NextIrpStack_11 := sdv_IoGetNextIrpStackLocation(Irp_40);
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} NextIrpStack_11 != 0;
    assume NextIrpStack_11 > 0;
    assume {:nonnull} NextIrpStack_11 != 0;
    assume NextIrpStack_11 > 0;
    assume {:nonnull} NextIrpStack_11 != 0;
    assume NextIrpStack_11 > 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc vslice_dummy_var_148;
    call {:si_unique_call 1801} ntStatus_50 := Avc_SubmitIrpSynch(vslice_dummy_var_148, Irp_40);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1802} IoFreeIrp(0);
    goto L34;

  L34:
    Tmp_1088 := ntStatus_50;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Irp_40 == 0;
    ntStatus_50 := -1073741670;
    goto L34;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_EnumerateVirtualChildren"} Avc_EnumerateVirtualChildren(actual_BusExtension_23: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_EnumerateVirtualChildren"} Avc_EnumerateVirtualChildren(actual_BusExtension_23: int)
{
  var {:pointer} Tmp_1091: int;
  var {:scalar} sdv_693: int;
  var {:pointer} QueryTable_2: int;
  var {:scalar} ntStatus_51: int;
  var {:pointer} sdv_698: int;
  var {:scalar} uniName_2: int;
  var {:pointer} ListHandle_2: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;

  anon0:
    call {:si_unique_call 1803} vslice_dummy_var_336 := __HAVOC_malloc(24);
    call {:si_unique_call 1804} vslice_dummy_var_337 := __HAVOC_malloc(4);
    call {:si_unique_call 1805} uniName_2 := __HAVOC_malloc(12);
    call {:si_unique_call 1806} ListHandle_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1807} Tmp_1091 := __HAVOC_malloc(80);
    call {:si_unique_call 1808} sdv_do_paged_code_check();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1809} sdv_693 := sdv_IsListEmpty(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_693 != 0;
    call {:si_unique_call 1810} ntStatus_51 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} ntStatus_51 >= 0;
    Tmp_1091 := strConst__li2bpl3;
    call {:si_unique_call 1811} RtlInitUnicodeString(uniName_2, Tmp_1091);
    call {:si_unique_call 1812} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1813} ntStatus_51 := ZwOpenKey(ListHandle_2, 983103, 0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_51 >= 0;
    call {:si_unique_call 1814} sdv_698 := sdv_ExAllocateFromNPagedLookasideList(0);
    QueryTable_2 := sdv_698;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} QueryTable_2 != 0;
    call {:si_unique_call 1815} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_2 != 0;
    assume QueryTable_2 > 0;
    assume {:nonnull} QueryTable_2 != 0;
    assume QueryTable_2 > 0;
    call {:si_unique_call 1816} vslice_dummy_var_340 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    call {:si_unique_call 1817} ExFreeToNPagedLookasideList(AvcQueryTablePool, QueryTable_2);
    goto L42;

  L42:
    call {:si_unique_call 1818} vslice_dummy_var_339 := ZwClose(0);
    goto L33;

  L33:
    call {:si_unique_call 1819} vslice_dummy_var_338 := ZwClose(0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} QueryTable_2 == 0;
    goto L42;

  anon13_Then:
    assume {:partition} 0 > ntStatus_51;
    goto L33;

  anon12_Then:
    assume {:partition} 0 > ntStatus_51;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_693 == 0;
    goto L1;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_RemoveVirtualSubunitInfo"} Avc_RemoveVirtualSubunitInfo(actual_BusExtension_24: int, actual_cbAddrSpec_1: int, actual_AddrSpec_3: int) returns (Tmp_1094: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_RemoveVirtualSubunitInfo"} Avc_RemoveVirtualSubunitInfo(actual_BusExtension_24: int, actual_cbAddrSpec_1: int, actual_AddrSpec_3: int) returns (Tmp_1094: int)
{
  var {:pointer} PdoData_16: int;
  var {:pointer} ValueName_4: int;
  var {:pointer} SubunitInfoBytes_3: int;
  var {:pointer} sdv_701: int;
  var {:pointer} QueryTable_3: int;
  var {:scalar} sdv_704: int;
  var {:scalar} ntStatus_52: int;
  var {:scalar} AllowedDelta_1: int;
  var {:scalar} cbAddr_1: int;
  var {:pointer} Tmp_1095: int;
  var {:pointer} Entry_11: int;
  var {:dopa} {:scalar} BytesUsed_8: int;
  var {:scalar} uniName_3: int;
  var {:pointer} ListHandle_3: int;
  var {:pointer} BusExtension_24: int;
  var {:scalar} cbAddrSpec_1: int;
  var {:pointer} AddrSpec_3: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1820} vslice_dummy_var_341 := __HAVOC_malloc(24);
    call {:si_unique_call 1821} BytesUsed_8 := __HAVOC_malloc(4);
    call {:si_unique_call 1822} uniName_3 := __HAVOC_malloc(12);
    call {:si_unique_call 1823} ListHandle_3 := __HAVOC_malloc(4);
    BusExtension_24 := actual_BusExtension_24;
    cbAddrSpec_1 := actual_cbAddrSpec_1;
    AddrSpec_3 := actual_AddrSpec_3;
    call {:si_unique_call 1824} ValueName_4 := __HAVOC_malloc(1024);
    call {:si_unique_call 1825} SubunitInfoBytes_3 := __HAVOC_malloc(128);
    call {:si_unique_call 1826} Tmp_1095 := __HAVOC_malloc(80);
    cbAddr_1 := cbAddrSpec_1 - 4;
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    Mem_T.INT4[BytesUsed_8] := 0;
    AllowedDelta_1 := 3;
    call {:si_unique_call 1827} sdv_do_paged_code_check();
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} cbAddr_1 > 32;
    Tmp_1094 := -1073741306;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} 32 >= cbAddr_1;
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    havoc vslice_dummy_var_149;
    call {:si_unique_call 1828} ntStatus_52 := AvcValidateSubunitAddress(vslice_dummy_var_149, cbAddr_1, BytesUsed_8);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_52 != 0;
    goto L21;

  L21:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} ntStatus_52 != 0;
    goto L23;

  L23:
    Tmp_1094 := ntStatus_52;
    goto L1;

  anon36_Then:
    assume {:partition} ntStatus_52 == 0;
    ntStatus_52 := -1073741811;
    goto L23;

  anon34_Then:
    assume {:partition} ntStatus_52 == 0;
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[BytesUsed_8] == cbAddr_1;
    goto L28;

  L28:
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    call {:si_unique_call 1829} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[BytesUsed_8]);
    call {:si_unique_call 1830} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    havoc Entry_11;
    PdoData_16 := 0;
    goto L36;

  L36:
    call {:si_unique_call 1831} PdoData_16, sdv_704, Entry_11 := Avc_RemoveVirtualSubunitInfo_loop_L36(PdoData_16, SubunitInfoBytes_3, sdv_704, Entry_11, BusExtension_24);
    goto L36_last;

  L36_last:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    PdoData_16 := Entry_11;
    assume {:nonnull} PdoData_16 != 0;
    assume PdoData_16 > 0;
    havoc vslice_dummy_var_150;
    call {:si_unique_call 1832} sdv_704 := AvcSubunitPackedTypesEqual(SubunitInfoBytes_3, vslice_dummy_var_150);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_704 != 0;
    assume {:nonnull} PdoData_16 != 0;
    assume PdoData_16 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    assume {:nonnull} PdoData_16 != 0;
    assume PdoData_16 > 0;
    goto L45;

  L45:
    assume {:nonnull} Entry_11 != 0;
    assume Entry_11 > 0;
    havoc Entry_11;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon40_Then:
    goto L45;

  anon39_Then:
    assume {:partition} sdv_704 == 0;
    goto L45;

  anon38_Then:
    call {:si_unique_call 1833} ExReleaseFastMutex(0);
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1834} ntStatus_52 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} ntStatus_52 >= 0;
    Tmp_1095 := strConst__li2bpl3;
    call {:si_unique_call 1835} RtlInitUnicodeString(uniName_3, Tmp_1095);
    call {:si_unique_call 1836} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1837} ntStatus_52 := ZwOpenKey(ListHandle_3, 983103, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} ntStatus_52 >= 0;
    call {:si_unique_call 1838} sdv_701 := sdv_ExAllocateFromNPagedLookasideList(0);
    QueryTable_3 := sdv_701;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} QueryTable_3 != 0;
    assume {:nonnull} ValueName_4 != 0;
    assume ValueName_4 > 0;
    Mem_T.INT4[ValueName_4] := 0;
    call {:si_unique_call 1839} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_3 != 0;
    assume QueryTable_3 > 0;
    assume {:nonnull} QueryTable_3 != 0;
    assume QueryTable_3 > 0;
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    assume {:nonnull} QueryTable_3 != 0;
    assume QueryTable_3 > 0;
    call {:si_unique_call 1840} ntStatus_52 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} -1073741536 == ntStatus_52;
    call {:si_unique_call 1841} ntStatus_52 := RtlDeleteRegistryValue(-1073741824, 0, 0);
    goto L96;

  L96:
    call {:si_unique_call 1842} ExFreeToNPagedLookasideList(AvcQueryTablePool, QueryTable_3);
    goto L80;

  L80:
    call {:si_unique_call 1843} vslice_dummy_var_343 := ZwClose(0);
    goto L71;

  L71:
    call {:si_unique_call 1844} vslice_dummy_var_342 := ZwClose(0);
    goto L50;

  L50:
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1845} IoInvalidateDeviceRelations(0, 0);
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    goto L23;

  anon46_Then:
    goto L23;

  anon42_Then:
    goto L23;

  anon45_Then:
    assume {:partition} -1073741536 != ntStatus_52;
    goto L96;

  anon48_Then:
    assume {:partition} QueryTable_3 == 0;
    goto L80;

  anon44_Then:
    assume {:partition} 0 > ntStatus_52;
    goto L71;

  anon43_Then:
    assume {:partition} 0 > ntStatus_52;
    goto L50;

  anon41_Then:
    goto L50;

  anon35_Then:
    assume {:partition} Mem_T.INT4[BytesUsed_8] != cbAddr_1;
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} cbAddr_1 - Mem_T.INT4[BytesUsed_8] == AllowedDelta_1;
    goto L28;

  anon37_Then:
    assume {:partition} cbAddr_1 - Mem_T.INT4[BytesUsed_8] != AllowedDelta_1;
    goto L21;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcAddToPdoList"} AvcAddToPdoList(actual_BusExtension_25: int, actual_PdoData_17: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcAddToPdoList"} AvcAddToPdoList(actual_BusExtension_25: int, actual_PdoData_17: int)
{
  var {:pointer} Tmp_1097: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} BusExtension_25: int;
  var {:pointer} PdoData_17: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;

  anon0:
    call {:si_unique_call 1846} vslice_dummy_var_344 := __HAVOC_malloc(4);
    BusExtension_25 := actual_BusExtension_25;
    PdoData_17 := actual_PdoData_17;
    call {:si_unique_call 1847} Tmp_1097 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1097 != 0;
    assume Tmp_1097 > 0;
    Mem_T.INT4[Tmp_1097] := oldIrql_6;
    call {:si_unique_call 1848} sdv_KeAcquireSpinLock(0, Tmp_1097);
    assume {:nonnull} Tmp_1097 != 0;
    assume Tmp_1097 > 0;
    oldIrql_6 := Mem_T.INT4[Tmp_1097];
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    assume {:nonnull} PdoData_17 != 0;
    assume PdoData_17 > 0;
    call {:si_unique_call 1849} vslice_dummy_var_345 := sdv_InsertTailList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_25), PdoList__PDO_DATA(PdoData_17));
    call {:si_unique_call 1850} sdv_KeReleaseSpinLock(0, oldIrql_6);
    return;
}



procedure {:origName "Avc_FindOrCreatePDO"} Avc_FindOrCreatePDO(actual_BusExtension_26: int, actual_SubunitAddr_16: int, actual_bidFlag_1: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_FindOrCreatePDO"} Avc_FindOrCreatePDO(actual_BusExtension_26: int, actual_SubunitAddr_16: int, actual_bidFlag_1: int)
{
  var {:pointer} Tmp_1100: int;
  var {:pointer} PdoData_18: int;
  var {:scalar} sdv_709: int;
  var {:scalar} Tmp_1101: int;
  var {:scalar} sdv_710: int;
  var {:dopa} {:scalar} TapeSubunitAddr: int;
  var {:scalar} sdv_711: int;
  var {:pointer} sdv_712: int;
  var {:pointer} PdoExtension_20: int;
  var {:scalar} ntStatus_53: int;
  var {:pointer} Tmp_1103: int;
  var {:pointer} PdoDeviceObject_1: int;
  var {:scalar} ntStatus_54: int;
  var {:pointer} Entry_12: int;
  var {:scalar} sdv_716: int;
  var {:pointer} Tmp_1104: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} BusExtension_26: int;
  var {:pointer} SubunitAddr_16: int;
  var {:scalar} bidFlag_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;

  anon0:
    call {:si_unique_call 1851} vslice_dummy_var_346 := __HAVOC_malloc(4);
    call {:si_unique_call 1852} TapeSubunitAddr := __HAVOC_malloc(4);
    call {:si_unique_call 1853} PdoDeviceObject_1 := __HAVOC_malloc(4);
    BusExtension_26 := actual_BusExtension_26;
    SubunitAddr_16 := actual_SubunitAddr_16;
    bidFlag_1 := actual_bidFlag_1;
    PdoData_18 := 0;
    call {:si_unique_call 1854} sdv_do_paged_code_check();
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1855} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    havoc Entry_12;
    goto L13;

  L13:
    call {:si_unique_call 1856} PdoData_18, sdv_709, Entry_12 := Avc_FindOrCreatePDO_loop_L13(PdoData_18, sdv_709, Entry_12, SubunitAddr_16);
    goto L13_last;

  L13_last:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    PdoData_18 := Entry_12;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    havoc vslice_dummy_var_151;
    call {:si_unique_call 1857} sdv_709 := AvcSubunitAddrsEqual(SubunitAddr_16, vslice_dummy_var_151);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_709 == 0;
    PdoData_18 := 0;
    assume {:nonnull} Entry_12 != 0;
    assume Entry_12 > 0;
    havoc Entry_12;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:partition} sdv_709 != 0;
    goto L14;

  L14:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} PdoData_18 != 0;
    goto L26;

  L26:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} PdoData_18 != 0;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    call {:si_unique_call 1858} ntStatus_53 := IoCreateDevice(0, 76, 0, 34, 128, 0, PdoDeviceObject_1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} ntStatus_53 == 0;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    havoc PdoExtension_20;
    call {:si_unique_call 1859} sdv_RtlZeroMemory(0, 76);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} bidFlag_1 == 5;
    Tmp_1101 := 1;
    goto L51;

  L51:
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_152;
    call {:si_unique_call 1860} boogieTmp := IoGetAttachedDeviceReference(vslice_dummy_var_152);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 1861} AvcInitializeRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(PdoExtension_20));
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 1862} Tmp_1104 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1104 != 0;
    assume Tmp_1104 > 0;
    havoc vslice_dummy_var_153;
    Mem_T.INT4[Tmp_1104] := vslice_dummy_var_153;
    call {:si_unique_call 1863} sdv_KeInitializeSpinLock(Tmp_1104);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1104 != 0;
    assume Tmp_1104 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc Tmp_1103;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    havoc Tmp_1100;
    assume {:nonnull} Tmp_1100 != 0;
    assume Tmp_1100 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    goto L75;

  L75:
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} 5 == bidFlag_1;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    goto L27;

  L27:
    call {:si_unique_call 1864} ExReleaseFastMutex(0);
    goto LM2;

  LM2:
    return;

  anon69_Then:
    assume {:partition} 5 != bidFlag_1;
    goto L27;

  anon68_Then:
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    havoc Tmp_1105;
    assume {:nonnull} Tmp_1105 != 0;
    assume Tmp_1105 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} PdoDeviceObject_1 != 0;
    assume PdoDeviceObject_1 > 0;
    goto L75;

  anon70_Then:
    goto L75;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    assume {:partition} bidFlag_1 != 5;
    Tmp_1101 := 0;
    goto L51;

  anon58_Then:
    assume {:partition} ntStatus_53 != 0;
    goto L27;

  anon55_Then:
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} 5 == bidFlag_1;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    goto L34;

  L34:
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    goto L27;

  anon57_Then:
    assume {:partition} 5 != bidFlag_1;
    goto L34;

  anon56_Then:
    goto L27;

  anon54_Then:
    assume {:partition} PdoData_18 == 0;
    goto L27;

  anon52_Then:
    assume {:partition} PdoData_18 == 0;
    call {:si_unique_call 1865} sdv_712 := ExAllocatePoolWithTag(0, 56, 541283905);
    PdoData_18 := sdv_712;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} PdoData_18 != 0;
    call {:si_unique_call 1866} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} TapeSubunitAddr != 0;
    assume TapeSubunitAddr > 0;
    Mem_T.INT4[TapeSubunitAddr] := 32;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} bidFlag_1 != 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} bidFlag_1 == 3;
    call {:si_unique_call 1867} sdv_716 := AvcSubunitAddrsEqual(TapeSubunitAddr, SubunitAddr_16);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_716 != 0;
    call {:si_unique_call 1868} sdv_711 := Avc_IsLegacyDV(BusExtension_26);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_711 != 0;
    bidFlag_1 := 2;
    goto L88;

  L88:
    call {:si_unique_call 1869} ntStatus_54 := Avc_BuildIds(BusExtension_26, PdoData_18, SubunitAddr_16, bidFlag_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} ntStatus_54 != 0;
    call {:si_unique_call 1870} sdv_ExFreePool(0);
    PdoData_18 := 0;
    goto L26;

  anon63_Then:
    assume {:partition} ntStatus_54 == 0;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    call {:si_unique_call 1871} AvcAddToPdoList(BusExtension_26, PdoData_18);
    goto L26;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:partition} sdv_711 == 0;
    goto L88;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} sdv_716 == 0;
    goto L88;

  anon64_Then:
    assume {:partition} bidFlag_1 != 3;
    goto L88;

  anon72_Then:
    assume {:partition} bidFlag_1 == 0;
    call {:si_unique_call 1872} sdv_710 := Avc_IsLegacyDV(BusExtension_26);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_710 != 0;
    bidFlag_1 := 1;
    goto L88;

  anon62_Then:
    assume {:partition} sdv_710 == 0;
    goto L88;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L88;

  anon71_Then:
    assume {:partition} PdoData_18 == 0;
    goto L26;

  anon51_Then:
    goto L14;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_SetUnitDirectory"} Avc_SetUnitDirectory(actual_BusExtension_27: int, actual_bEnable_2: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SetUnitDirectory"} Avc_SetUnitDirectory(actual_BusExtension_27: int, actual_bEnable_2: int)
{
  var {:pointer} Irp_41: int;
  var {:scalar} ntStatus_55: int;
  var {:pointer} Tmp_1107: int;
  var {:pointer} NextIrpStack_12: int;
  var {:pointer} Tmp_1108: int;
  var {:scalar} AvRequest_4: int;
  var {:pointer} BusExtension_27: int;
  var {:scalar} bEnable_2: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 1873} AvRequest_4 := __HAVOC_malloc(460);
    call {:si_unique_call 1874} vslice_dummy_var_347 := __HAVOC_malloc(4);
    BusExtension_27 := actual_BusExtension_27;
    bEnable_2 := actual_bEnable_2;
    call {:si_unique_call 1875} sdv_do_paged_code_check();
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} bEnable_2 != 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L8;

  L8:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} bEnable_2 != 0;
    goto L12;

  L12:
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    havoc Tmp_1107;
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    havoc vslice_dummy_var_154;
    call {:si_unique_call 1876} Irp_41 := IoAllocateIrp(vslice_dummy_var_154, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Irp_41 != 0;
    call {:si_unique_call 1877} NextIrpStack_12 := sdv_IoGetNextIrpStackLocation(Irp_41);
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} bEnable_2 != 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L32;

  L32:
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    havoc vslice_dummy_var_155;
    call {:si_unique_call 1878} ntStatus_55 := Avc_SubmitIrpSynch(vslice_dummy_var_155, Irp_41);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_55 >= 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} bEnable_2 != 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    havoc Tmp_1108;
    goto L49;

  L49:
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    goto L43;

  L43:
    call {:si_unique_call 1879} IoFreeIrp(0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon29_Then:
    assume {:partition} bEnable_2 == 0;
    Tmp_1108 := 0;
    goto L49;

  anon28_Then:
    assume {:partition} 0 > ntStatus_55;
    goto L43;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    goto L32;

  anon31_Then:
    assume {:partition} bEnable_2 == 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    goto L32;

  anon27_Then:
    assume {:partition} Irp_41 == 0;
    goto L1;

  anon24_Then:
    assume {:partition} bEnable_2 == 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L12;

  anon26_Then:
    goto L1;

  anon25_Then:
    goto L1;

  anon23_Then:
    assume {:partition} bEnable_2 == 0;
    goto L8;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_Close"} Avc_Close(actual_DeviceObject_32: int, actual_Irp_42: int) returns (Tmp_1110: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_Close"} Avc_Close(actual_DeviceObject_32: int, actual_Irp_42: int) returns (Tmp_1110: int)
{
  var {:scalar} ntStatus_56: int;
  var {:pointer} CommonExtension_6: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_42: int;
  var vslice_dummy_var_348: int;

  anon0:
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_42 := actual_Irp_42;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc CommonExtension_6;
    call {:si_unique_call 1880} vslice_dummy_var_348 := sdv_IoGetCurrentIrpStackLocation(Irp_42);
    ntStatus_56 := 0;
    call {:si_unique_call 1881} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CommonExtension_6 != 0;
    assume CommonExtension_6 > 0;
    call {:si_unique_call 1882} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_6));
    assume {:nonnull} Irp_42 != 0;
    assume Irp_42 > 0;
    assume {:nonnull} Irp_42 != 0;
    assume Irp_42 > 0;
    call {:si_unique_call 1883} sdv_IoCompleteRequest(0, 0);
    Tmp_1110 := ntStatus_56;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcReleaseRemoveLock"} AvcReleaseRemoveLock(actual_Lock: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcReleaseRemoveLock"} AvcReleaseRemoveLock(actual_Lock: int)
{
  var {:pointer} Tmp_1112: int;
  var {:scalar} lockValue: int;
  var {:pointer} Lock: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 1884} vslice_dummy_var_349 := __HAVOC_malloc(4);
    Lock := actual_Lock;
    call {:si_unique_call 1885} Tmp_1112 := __HAVOC_malloc(4);
    assume {:nonnull} Lock != 0;
    assume Lock > 0;
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    havoc vslice_dummy_var_156;
    Mem_T.INT4[Tmp_1112] := vslice_dummy_var_156;
    call {:si_unique_call 1886} lockValue := sdv_InterlockedDecrement(Tmp_1112);
    assume {:nonnull} Lock != 0;
    assume Lock > 0;
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} lockValue == 0;
    assume {:nonnull} Lock != 0;
    assume Lock > 0;
    call {:si_unique_call 1887} vslice_dummy_var_350 := KeSetEvent(RemoveEvent__AVC_REMOVE_LOCK(Lock), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} lockValue != 0;
    goto L1;
}



procedure {:origName "Avc_Create"} Avc_Create(actual_DeviceObject_33: int, actual_Irp_43: int) returns (Tmp_1114: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_Create"} Avc_Create(actual_DeviceObject_33: int, actual_Irp_43: int) returns (Tmp_1114: int)
{
  var {:pointer} IrpStack_14: int;
  var {:pointer} Tmp_1115: int;
  var {:scalar} ntStatus_57: int;
  var {:pointer} CommonExtension_7: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_43: int;

  anon0:
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_43 := actual_Irp_43;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc CommonExtension_7;
    call {:si_unique_call 1888} IrpStack_14 := sdv_IoGetCurrentIrpStackLocation(Irp_43);
    ntStatus_57 := 0;
    call {:si_unique_call 1889} sdv_do_paged_code_check();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  L17:
    ntStatus_57 := -1073741811;
    goto L18;

  L18:
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    ntStatus_57 := -1073741738;
    goto L19;

  L19:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_57 != 0;
    goto L24;

  L24:
    assume {:nonnull} Irp_43 != 0;
    assume Irp_43 > 0;
    assume {:nonnull} Irp_43 != 0;
    assume Irp_43 > 0;
    call {:si_unique_call 1890} sdv_IoCompleteRequest(0, 0);
    Tmp_1114 := ntStatus_57;
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} ntStatus_57 == 0;
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    call {:si_unique_call 1891} ntStatus_57 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_7));
    goto L24;

  anon12_Then:
    goto L19;

  anon11_Then:
    assume {:nonnull} IrpStack_14 != 0;
    assume IrpStack_14 > 0;
    havoc Tmp_1115;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L18;

  anon15_Then:
    goto L17;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcAcquireRemoveLock"} AvcAcquireRemoveLock(actual_Lock_1: int) returns (Tmp_1117: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1117 == -1073741738 || Tmp_1117 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcAcquireRemoveLock"} AvcAcquireRemoveLock(actual_Lock_1: int) returns (Tmp_1117: int)
{
  var {:scalar} sdv_726: int;
  var {:scalar} ntStatus_58: int;
  var {:pointer} Tmp_1118: int;
  var {:pointer} Lock_1: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;

  anon0:
    Lock_1 := actual_Lock_1;
    ntStatus_58 := 0;
    call {:si_unique_call 1892} Tmp_1118 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    havoc vslice_dummy_var_157;
    Mem_T.INT4[Tmp_1118] := vslice_dummy_var_157;
    call {:si_unique_call 1893} vslice_dummy_var_352 := sdv_InterlockedIncrement(Tmp_1118);
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1894} Tmp_1118 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    havoc vslice_dummy_var_158;
    Mem_T.INT4[Tmp_1118] := vslice_dummy_var_158;
    call {:si_unique_call 1895} sdv_726 := sdv_InterlockedDecrement(Tmp_1118);
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sdv_726 != 0;
    goto L19;

  L19:
    ntStatus_58 := -1073741738;
    goto L11;

  L11:
    Tmp_1117 := ntStatus_58;
    return;

  anon6_Then:
    assume {:partition} sdv_726 == 0;
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    call {:si_unique_call 1896} vslice_dummy_var_351 := KeSetEvent(RemoveEvent__AVC_REMOVE_LOCK(Lock_1), 0, 0);
    goto L19;

  anon5_Then:
    goto L11;
}



procedure {:origName "Avc_Cleanup"} Avc_Cleanup(actual_DeviceObject_34: int, actual_Irp_44: int) returns (Tmp_1119: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_Cleanup"} Avc_Cleanup(actual_DeviceObject_34: int, actual_Irp_44: int) returns (Tmp_1119: int)
{
  var {:pointer} IrpStack_15: int;
  var {:scalar} ntStatus_59: int;
  var {:pointer} CommonExtension_8: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_44: int;
  var vslice_dummy_var_159: int;

  anon0:
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_44 := actual_Irp_44;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    havoc CommonExtension_8;
    call {:si_unique_call 1897} IrpStack_15 := sdv_IoGetCurrentIrpStackLocation(Irp_44);
    ntStatus_59 := 0;
    call {:si_unique_call 1898} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} CommonExtension_8 != 0;
    assume CommonExtension_8 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} IrpStack_15 != 0;
    assume IrpStack_15 > 0;
    havoc vslice_dummy_var_159;
    call {:si_unique_call 1899} AvcStopSelectedFCPProcessing(CommonExtension_8, vslice_dummy_var_159);
    goto L16;

  L16:
    assume {:nonnull} Irp_44 != 0;
    assume Irp_44 > 0;
    assume {:nonnull} Irp_44 != 0;
    assume Irp_44 > 0;
    call {:si_unique_call 1900} sdv_IoCompleteRequest(0, 0);
    Tmp_1119 := ntStatus_59;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    goto L16;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_2: int, actual_RegistryPath: int) returns (Tmp_1121: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1121 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_2: int, actual_RegistryPath: int) returns (Tmp_1121: int)
{
  var {:pointer} Tmp_1122: int;
  var {:pointer} Tmp_1123: int;
  var {:pointer} Tmp_1124: int;
  var {:pointer} Tmp_1125: int;
  var {:scalar} ntStatus_60: int;
  var {:pointer} Tmp_1126: int;
  var {:pointer} Tmp_1127: int;
  var {:pointer} Tmp_1128: int;
  var {:pointer} Tmp_1129: int;
  var {:pointer} Tmp_1130: int;
  var {:pointer} Tmp_1131: int;
  var {:pointer} DriverObject_2: int;
  var vslice_dummy_var_160: int;

  anon0:
    DriverObject_2 := actual_DriverObject_2;
    call {:si_unique_call 1901} Tmp_1122 := __HAVOC_malloc(112);
    call {:si_unique_call 1902} Tmp_1123 := __HAVOC_malloc(112);
    call {:si_unique_call 1903} Tmp_1125 := __HAVOC_malloc(112);
    call {:si_unique_call 1904} Tmp_1126 := __HAVOC_malloc(112);
    call {:si_unique_call 1905} Tmp_1127 := __HAVOC_malloc(112);
    call {:si_unique_call 1906} Tmp_1128 := __HAVOC_malloc(112);
    call {:si_unique_call 1907} Tmp_1130 := __HAVOC_malloc(112);
    call {:si_unique_call 1908} Tmp_1131 := __HAVOC_malloc(112);
    ntStatus_60 := 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1125;
    assume {:nonnull} Tmp_1125 != 0;
    assume Tmp_1125 > 0;
    Mem_T.INT4[Tmp_1125] := li2bplFunctionConstant199;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1122;
    assume {:nonnull} Tmp_1122 != 0;
    assume Tmp_1122 > 0;
    Mem_T.INT4[Tmp_1122 + 2 * 4] := li2bplFunctionConstant200;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1123;
    assume {:nonnull} Tmp_1123 != 0;
    assume Tmp_1123 > 0;
    Mem_T.INT4[Tmp_1123 + 18 * 4] := li2bplFunctionConstant201;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1130;
    assume {:nonnull} Tmp_1130 != 0;
    assume Tmp_1130 > 0;
    Mem_T.INT4[Tmp_1130 + 27 * 4] := li2bplFunctionConstant202;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1131;
    assume {:nonnull} Tmp_1131 != 0;
    assume Tmp_1131 > 0;
    Mem_T.INT4[Tmp_1131 + 22 * 4] := li2bplFunctionConstant203;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1126;
    assume {:nonnull} Tmp_1126 != 0;
    assume Tmp_1126 > 0;
    Mem_T.INT4[Tmp_1126 + 14 * 4] := li2bplFunctionConstant204;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1127;
    assume {:nonnull} Tmp_1127 != 0;
    assume Tmp_1127 > 0;
    Mem_T.INT4[Tmp_1127 + 15 * 4] := li2bplFunctionConstant204;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1128;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    Mem_T.INT4[Tmp_1128 + 23 * 4] := li2bplFunctionConstant205;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1129;
    assume {:nonnull} Tmp_1129 != 0;
    assume Tmp_1129 > 0;
    call {:si_unique_call 1909} Tmp_1124 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1124 != 0;
    assume Tmp_1124 > 0;
    havoc vslice_dummy_var_160;
    Mem_T.INT4[Tmp_1124] := vslice_dummy_var_160;
    call {:si_unique_call 1910} sdv_KeInitializeSpinLock(Tmp_1124);
    assume {:nonnull} Tmp_1124 != 0;
    assume Tmp_1124 > 0;
    call {:si_unique_call 1911} InitializeListHead(AvcVirtualInstanceList);
    call {:si_unique_call 1912} InitializeListHead(AvcPeerInstanceList);
    call {:si_unique_call 1913} ExInitializeNPagedLookasideList(0, 0, 0, 0, 672, 543389281, 0);
    call {:si_unique_call 1914} ExInitializeNPagedLookasideList(0, 0, 0, 0, 256, 543389281, 0);
    call {:si_unique_call 1915} ExInitializeNPagedLookasideList(0, 0, 0, 0, 16, 543389281, 0);
    call {:si_unique_call 1916} ExInitializeNPagedLookasideList(0, 0, 0, 0, 560, 543389281, 0);
    call {:si_unique_call 1917} ExInitializeNPagedLookasideList(0, 0, 0, 0, 56, 543389281, 0);
    Tmp_1121 := ntStatus_60;
    return;
}



procedure {:origName "Avc_Unload"} Avc_Unload(actual_DriverObject_3: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_Unload"} Avc_Unload(actual_DriverObject_3: int)
{
  var vslice_dummy_var_353: int;

  anon0:
    call {:si_unique_call 1918} vslice_dummy_var_353 := __HAVOC_malloc(4);
    call {:si_unique_call 1919} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1920} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1921} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1922} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1923} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1924} ExDeleteNPagedLookasideList(0);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_354: int;

  anon0:
    call {:si_unique_call 1925} vslice_dummy_var_354 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_1: int, actual_Entry_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_1: int, actual_Entry_13: int)
{
  var {:pointer} Flink: int;
  var {:pointer} ListHead_1: int;
  var {:pointer} Entry_13: int;
  var vslice_dummy_var_355: int;

  anon0:
    call {:si_unique_call 1926} vslice_dummy_var_355 := __HAVOC_malloc(4);
    ListHead_1 := actual_ListHead_1;
    Entry_13 := actual_Entry_13;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc Flink;
    assume {:nonnull} Entry_13 != 0;
    assume Entry_13 > 0;
    assume {:nonnull} Entry_13 != 0;
    assume Entry_13 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    return;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_14: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_14: int)
{
  var {:pointer} Tmp_1139: int;
  var {:pointer} Lookaside_3: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;

  anon0:
    call {:si_unique_call 1927} vslice_dummy_var_356 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_1139 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_1139 != 0;
    assume Tmp_1139 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L1;

  anon5_Then:
    call {:si_unique_call 1928} vslice_dummy_var_357 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "AvcInitializeRemoveLock"} AvcInitializeRemoveLock(actual_Lock_2: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcInitializeRemoveLock"} AvcInitializeRemoveLock(actual_Lock_2: int)
{
  var {:pointer} Lock_2: int;
  var vslice_dummy_var_358: int;

  anon0:
    call {:si_unique_call 1929} vslice_dummy_var_358 := __HAVOC_malloc(4);
    Lock_2 := actual_Lock_2;
    call {:si_unique_call 1930} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Lock_2 != 0;
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    call {:si_unique_call 1931} KeInitializeEvent(RemoveEvent__AVC_REMOVE_LOCK(Lock_2), 1, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} Lock_2 == 0;
    goto L1;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_2: int)
{
  var {:pointer} ListHead_2: int;
  var vslice_dummy_var_359: int;

  anon0:
    call {:si_unique_call 1932} vslice_dummy_var_359 := __HAVOC_malloc(4);
    ListHead_2 := actual_ListHead_2;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    return;
}



procedure {:origName "Avc_SynchCompletionRoutine"} Avc_SynchCompletionRoutine(actual_DeviceObject_35: int, actual_Irp_45: int, actual_Event_6: int) returns (Tmp_1145: int);
  free ensures {:va_keep} Tmp_1145 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SynchCompletionRoutine"} Avc_SynchCompletionRoutine(actual_DeviceObject_35: int, actual_Irp_45: int, actual_Event_6: int) returns (Tmp_1145: int)
{
  var {:pointer} Event_6: int;
  var vslice_dummy_var_360: int;

  anon0:
    Event_6 := actual_Event_6;
    call {:si_unique_call 1933} vslice_dummy_var_360 := KeSetEvent(Event_6, 0, 0);
    Tmp_1145 := -1073741802;
    return;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_3: int) returns (Tmp_1147: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_3: int) returns (Tmp_1147: int)
{
  var {:pointer} Entry_15: int;
  var {:pointer} Flink_1: int;
  var {:pointer} ListHead_3: int;

  anon0:
    ListHead_3 := actual_ListHead_3;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc Entry_15;
    assume {:nonnull} Entry_15 != 0;
    assume Entry_15 > 0;
    havoc Flink_1;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    assume {:nonnull} Flink_1 != 0;
    assume Flink_1 > 0;
    Tmp_1147 := Entry_15;
    return;
}



procedure {:origName "AvcGetDescriptionMessage"} AvcGetDescriptionMessage(actual_MessageNumber: int, actual_description: int) returns (Tmp_1149: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcGetDescriptionMessage"} AvcGetDescriptionMessage(actual_MessageNumber: int, actual_description: int) returns (Tmp_1149: int)
{
  var {:scalar} sdv_731: int;
  var {:pointer} sdv_732: int;
  var {:scalar} cBytes: int;
  var {:scalar} MessageNumber: int;
  var {:pointer} description: int;

  anon0:
    MessageNumber := actual_MessageNumber;
    description := actual_description;
    call {:si_unique_call 1934} sdv_do_paged_code_check();
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} MessageNumber != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} MessageNumber != 8;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} MessageNumber != 16;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} MessageNumber != 24;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} MessageNumber != 32;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} MessageNumber != 40;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} MessageNumber != 48;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} MessageNumber != 56;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} MessageNumber != 72;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} MessageNumber != 80;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} MessageNumber != 88;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} MessageNumber != 65536;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} MessageNumber == 65537;
    goto L27;

  L27:
    cBytes := sdv_731 * 2 + 2;
    call {:si_unique_call 1935} sdv_732 := ExAllocatePoolWithTag(1, cBytes, 541283905);
    assume {:nonnull} description != 0;
    assume description > 0;
    assume {:nonnull} description != 0;
    assume description > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 1936} sdv_RtlCopyMemory(0, 0, cBytes);
    Tmp_1149 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon45_Then:
    Tmp_1149 := -1073741670;
    goto L1;

  anon32_Then:
    assume {:partition} MessageNumber != 65537;
    assume {:nonnull} description != 0;
    assume description > 0;
    Tmp_1149 := -1073741559;
    goto L1;

  anon33_Then:
    assume {:partition} MessageNumber == 65536;
    goto L27;

  anon34_Then:
    assume {:partition} MessageNumber == 88;
    goto L27;

  anon35_Then:
    assume {:partition} MessageNumber == 80;
    goto L27;

  anon36_Then:
    assume {:partition} MessageNumber == 72;
    goto L27;

  anon37_Then:
    assume {:partition} MessageNumber == 56;
    goto L27;

  anon38_Then:
    assume {:partition} MessageNumber == 48;
    goto L27;

  anon39_Then:
    assume {:partition} MessageNumber == 40;
    goto L27;

  anon40_Then:
    assume {:partition} MessageNumber == 32;
    goto L27;

  anon41_Then:
    assume {:partition} MessageNumber == 24;
    goto L27;

  anon42_Then:
    assume {:partition} MessageNumber == 16;
    goto L27;

  anon43_Then:
    assume {:partition} MessageNumber == 8;
    goto L27;

  anon31_Then:
    assume {:partition} MessageNumber == 0;
    goto L27;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Avc_SubmitIrpSynch"} Avc_SubmitIrpSynch(actual_DeviceObject_36: int, actual_Irp_46: int) returns (Tmp_1151: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Avc_SubmitIrpSynch"} Avc_SubmitIrpSynch(actual_DeviceObject_36: int, actual_Irp_46: int) returns (Tmp_1151: int)
{
  var {:scalar} Event_7: int;
  var {:scalar} ntStatus_61: int;
  var {:pointer} DeviceObject_36: int;
  var {:pointer} Irp_46: int;
  var vslice_dummy_var_361: int;

  anon0:
    call {:si_unique_call 1937} Event_7 := __HAVOC_malloc(124);
    DeviceObject_36 := actual_DeviceObject_36;
    Irp_46 := actual_Irp_46;
    call {:si_unique_call 1938} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1939} KeInitializeEvent(Event_7, 1, 0);
    call {:si_unique_call 1940} sdv_IoSetCompletionRoutine(Irp_46, li2bplFunctionConstant208, Event_7, 1, 1, 1);
    call {:si_unique_call 1941} ntStatus_61 := sdv_IoCallDriver(DeviceObject_36, Irp_46);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ntStatus_61 == 259;
    call {:si_unique_call 1942} vslice_dummy_var_361 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_46 != 0;
    assume Irp_46 > 0;
    havoc ntStatus_61;
    goto L19;

  L19:
    Tmp_1151 := ntStatus_61;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} ntStatus_61 != 259;
    goto L19;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcGetDeviceDescriptionMessage"} AvcGetDeviceDescriptionMessage(actual_SubunitAddr_17: int, actual_deviceDescription: int) returns (Tmp_1153: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcGetDeviceDescriptionMessage"} AvcGetDeviceDescriptionMessage(actual_SubunitAddr_17: int, actual_deviceDescription: int) returns (Tmp_1153: int)
{
  var {:scalar} messageNumber: int;
  var {:scalar} ntStatus_62: int;
  var {:pointer} SubunitAddr_17: int;
  var {:pointer} deviceDescription: int;

  anon0:
    SubunitAddr_17 := actual_SubunitAddr_17;
    deviceDescription := actual_deviceDescription;
    ntStatus_62 := -1073741559;
    call {:si_unique_call 1943} sdv_do_paged_code_check();
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} SubunitAddr_17 != 0;
    assume {:nonnull} SubunitAddr_17 != 0;
    assume SubunitAddr_17 > 0;
    messageNumber := BAND(Mem_T.INT4[SubunitAddr_17], BNOT(BOR(BOR(1, 2), 4)));
    call {:si_unique_call 1944} ntStatus_62 := AvcGetDescriptionMessage(messageNumber, deviceDescription);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L9;

  L9:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} -1073741559 == ntStatus_62;
    call {:si_unique_call 1945} ntStatus_62 := AvcGetDescriptionMessage(65537, deviceDescription);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L16;

  L16:
    Tmp_1153 := ntStatus_62;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} -1073741559 != ntStatus_62;
    goto L16;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} SubunitAddr_17 == 0;
    goto L9;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "AvcReleaseRemoveLockAndWait"} AvcReleaseRemoveLockAndWait(actual_Lock_3: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AvcReleaseRemoveLockAndWait"} AvcReleaseRemoveLockAndWait(actual_Lock_3: int)
{
  var {:scalar} sdv_738: int;
  var {:pointer} Tmp_1156: int;
  var {:pointer} Lock_3: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;

  anon0:
    call {:si_unique_call 1946} vslice_dummy_var_362 := __HAVOC_malloc(4);
    Lock_3 := actual_Lock_3;
    call {:si_unique_call 1947} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    call {:si_unique_call 1948} Tmp_1156 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    havoc vslice_dummy_var_161;
    Mem_T.INT4[Tmp_1156] := vslice_dummy_var_161;
    call {:si_unique_call 1949} vslice_dummy_var_364 := sdv_InterlockedDecrement(Tmp_1156);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    call {:si_unique_call 1950} Tmp_1156 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    havoc vslice_dummy_var_162;
    Mem_T.INT4[Tmp_1156] := vslice_dummy_var_162;
    call {:si_unique_call 1951} sdv_738 := sdv_InterlockedDecrement(Tmp_1156);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_738 > 0;
    call {:si_unique_call 1952} vslice_dummy_var_363 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} 0 >= sdv_738;
    goto L1;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AlternateOpcodesFlag__AVC_COMMAND_IRB"} {:fieldname "AlternateOpcodesFlag"} AlternateOpcodesFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AlternateOpcodes__AVC_COMMAND_CONTEXT"} {:fieldname "AlternateOpcodes"} AlternateOpcodes__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.AlternateOpcodes__AVC_COMMAND_IRB"} {:fieldname "AlternateOpcodes"} AlternateOpcodes__AVC_COMMAND_IRB(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_40"} {:fieldname "Argument1"} Argument1_unnamed_tag_40(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AssociatedIrp__IRP"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BidFlag__PDO_DATA"} {:fieldname "BidFlag"} BidFlag__PDO_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusExtension__PDO_DATA"} {:fieldname "BusExtension"} BusExtension__PDO_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__PNP_BUS_INFORMATION"} {:fieldname "BusNumber"} BusNumber__PNP_BUS_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_64"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_64(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotify__AV_61883_REQUEST"} {:fieldname "BusResetNotify"} BusResetNotify__AV_61883_REQUEST(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_64"} {:fieldname "BusReset"} BusReset_unnamed_tag_64(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusTypeGuid__PNP_BUS_INFORMATION"} {:fieldname "BusTypeGuid"} BusTypeGuid__PNP_BUS_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CallbackChain"} CallbackChain__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Callback__AVC_CALLBACK_LINK"} {:fieldname "Callback"} Callback__AVC_CALLBACK_LINK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CleanupList"} CleanupList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.CmdDelay__BUS_DEVICE_EXTENSION"} {:fieldname "CmdDelay"} CmdDelay__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 5696
}

function {:inline true} {:fieldmap "Mem_T.CmdResourceLock__BUS_DEVICE_EXTENSION"} {:fieldname "CmdResourceLock"} CmdResourceLock__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 5532
}

function {:inline true} {:fieldmap "Mem_T.CommandType__AVC_COMMAND_CONTEXT"} {:fieldname "CommandType"} CommandType__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.CommandType__AVC_COMMAND_IRB"} {:fieldname "CommandType"} CommandType__AVC_COMMAND_IRB(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "CompatIds"} CompatIds__PDO_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T._AVCPRECONNECTINFO"} {:fieldname "ConnectInfo"} ConnectInfo__AVC_PRECONNECT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._AVCCONNECTINFO"} {:fieldname "ConnectInfo"} ConnectInfo__AVC_SETCONNECT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ContentId_KSDRMAUDIOSTREAM_CONTENTID"} {:fieldname "ContentId"} ContentId_KSDRMAUDIOSTREAM_CONTENTID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Context_KSP_DRMAUDIOSTREAM_CONTENTID"} {:fieldname "Context"} Context_KSP_DRMAUDIOSTREAM_CONTENTID(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Context__AVC_CALLBACK_LINK"} {:fieldname "Context"} Context__AVC_CALLBACK_LINK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Context__BUS_RESET_NOTIFY"} {:fieldname "Context"} Context__BUS_RESET_NOTIFY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Context__PDO_DATA"} {:fieldname "Context"} Context__PDO_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__AVC_PEER_DO_LIST"} {:fieldname "Count"} Count__AVC_PEER_DO_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataFlow_KSPIN_DESCRIPTOR"} {:fieldname "DataFlow"} DataFlow_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DataFlow__AVCPRECONNECTINFO"} {:fieldname "DataFlow"} DataFlow__AVCPRECONNECTINFO(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_PARTIAL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data__KEY_VALUE_PARTIAL_INFORMATION"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Designation__AVC_COMMAND_CONTEXT"} {:fieldname "Designation"} Designation__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DevExt__AVC_COMMAND_CONTEXT"} {:fieldname "DevExt"} DevExt__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._GUID"} {:fieldname "DeviceID"} DeviceID__AVC_UNIQUE_ID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeAddress__BUS_GENERATION_NODE"} {:fieldname "DeviceNodeAddress"} DeviceNodeAddress__BUS_GENERATION_NODE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__AVC_PEER_DO_LOCATOR"} {:fieldname "DeviceObject"} DeviceObject__AVC_PEER_DO_LOCATOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__PDO_DATA"} {:fieldname "DeviceObject"} DeviceObject__PDO_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__COMMON_DEVICE_EXTENSION"} {:fieldname "DeviceState"} DeviceState__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_33"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_33(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DrmForwardContentToDeviceObject_KSP_DRMAUDIOSTREAM_CONTENTID"} {:fieldname "DrmForwardContentToDeviceObject"} DrmForwardContentToDeviceObject_KSP_DRMAUDIOSTREAM_CONTENTID(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Enumerated__PDO_DATA"} {:fieldname "Enumerated"} Enumerated__PDO_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ExtInputs__AVC_EXT_PLUG_COUNTS"} {:fieldname "ExtInputs"} ExtInputs__AVC_EXT_PLUG_COUNTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ExtOutputs__AVC_EXT_PLUG_COUNTS"} {:fieldname "ExtOutputs"} ExtOutputs__AVC_EXT_PLUG_COUNTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._AVC_EXT_PLUG_COUNTS"} {:fieldname "ExtPlugCounts"} ExtPlugCounts__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T.ExtensionCode__AVC_SUBUNIT_INFO"} {:fieldname "ExtensionCode"} ExtensionCode__AVC_SUBUNIT_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FdoEntry"} FdoEntry__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.FileName__FILE_OBJECT"} {:fieldname "FileName"} FileName__FILE_OBJECT(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FileObject__IO_STACK_LOCATION"} {:fieldname "FileObject"} FileObject__IO_STACK_LOCATION(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T.Flags_KSIDENTIFIER"} {:fieldname "Flags"} Flags_KSIDENTIFIER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Flags__AVCPRECONNECTINFO"} {:fieldname "Flags"} Flags__AVCPRECONNECTINFO(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.Flags__AVC_SUBUNIT_ADDR_SPEC"} {:fieldname "Flags"} Flags__AVC_SUBUNIT_ADDR_SPEC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__BUS_RESET_NOTIFY"} {:fieldname "Flags"} Flags__BUS_RESET_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRP"} {:fieldname "Flags"} Flags__IRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_FCP_NOTIFY"} {:fieldname "Flags"} Flags__SET_FCP_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_UNIT_DIRECTORY"} {:fieldname "Flags"} Flags__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Frame"} Frame__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 672
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Frame"} Frame__AVC_FCP_REQUEST(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T.Frame__FCP_GET_REQUEST"} {:fieldname "Frame"} Frame__FCP_GET_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Function"} Function__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Function__AVC_IRB"} {:fieldname "Function"} Function__AVC_IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Generation__AVC_COMMAND_CONTEXT"} {:fieldname "Generation"} Generation__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 2728
}

function {:inline true} {:fieldmap "Mem_T.Generation__AVC_COMMAND_IRB"} {:fieldname "Generation"} Generation__AVC_COMMAND_IRB(x: int) : int
{
  x + 2112
}

function {:inline true} {:fieldmap "Mem_T.Generation__AVC_PEER_DO_LOCATOR"} {:fieldname "Generation"} Generation__AVC_PEER_DO_LOCATOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.GetRequest__AV_61883_REQUEST"} {:fieldname "GetRequest"} GetRequest__AV_61883_REQUEST(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.GetUnitInfo__AV_61883_REQUEST"} {:fieldname "GetUnitInfo"} GetUnitInfo__AV_61883_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "HardwareIds"} HardwareIds__PDO_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Id_KSIDENTIFIER"} {:fieldname "Id"} Id_KSIDENTIFIER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Info__AVC_SUBUNIT_INFO_BLOCK"} {:fieldname "Info"} Info__AVC_SUBUNIT_INFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__GET_UNIT_INFO"} {:fieldname "Information"} Information__GET_UNIT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfacesCount_KSPIN_DESCRIPTOR"} {:fieldname "InterfacesCount"} InterfacesCount_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Interfaces_KSPIN_DESCRIPTOR"} {:fieldname "Interfaces"} Interfaces_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoCount__AVC_REMOVE_LOCK"} {:fieldname "IoCount"} IoCount__AVC_REMOVE_LOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IsVirtual__COMMON_DEVICE_EXTENSION"} {:fieldname "IsVirtual"} IsVirtual__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LegacyBusType__PNP_BUS_INFORMATION"} {:fieldname "LegacyBusType"} LegacyBusType__PNP_BUS_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Length__FCP_GET_REQUEST"} {:fieldname "Length"} Length__FCP_GET_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_6(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MediumsCount_KSPIN_DESCRIPTOR"} {:fieldname "MediumsCount"} MediumsCount_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mediums_KSPIN_DESCRIPTOR"} {:fieldname "Mediums"} Mediums_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModelID__GET_UNIT_IDS"} {:fieldname "ModelID"} ModelID__GET_UNIT_IDS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ModelText__GET_UNIT_IDS"} {:fieldname "ModelText"} ModelText__GET_UNIT_IDS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__AVC_COMMAND_CONTEXT"} {:fieldname "NodeAddress"} NodeAddress__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 2720
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__AVC_COMMAND_IRB"} {:fieldname "NodeAddress"} NodeAddress__AVC_COMMAND_IRB(x: int) : int
{
  x + 2104
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__AVC_PEER_DO_LOCATOR"} {:fieldname "NodeAddress"} NodeAddress__AVC_PEER_DO_LOCATOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__FCP_GET_REQUEST"} {:fieldname "NodeAddress"} NodeAddress__FCP_GET_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._BUS_GENERATION_NODE"} {:fieldname "NodeInfo"} NodeInfo__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.NtStatus__AVC_COMMAND_CONTEXT"} {:fieldname "NtStatus"} NtStatus__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NumInputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumInputPlugs"} NumInputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumOutputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumOutputPlugs"} NumOutputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Objects__AVC_PEER_DO_LIST"} {:fieldname "Objects"} Objects__AVC_PEER_DO_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Opcode__AVC_COMMAND_CONTEXT"} {:fieldname "Opcode"} Opcode__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Opcode"} Opcode__AVC_COMMAND_IRB(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.OperandLength__AVC_COMMAND_CONTEXT"} {:fieldname "OperandLength"} OperandLength__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.OperandLength__AVC_COMMAND_IRB"} {:fieldname "OperandLength"} OperandLength__AVC_COMMAND_IRB(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.OperandOffset__AVC_COMMAND_CONTEXT"} {:fieldname "OperandOffset"} OperandOffset__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.Operands__AVC_COMMAND_IRB"} {:fieldname "Operands"} Operands__AVC_COMMAND_IRB(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Page__AVC_SUBUNIT_INFO"} {:fieldname "Page"} Page__AVC_SUBUNIT_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PdoData__PDO_DEVICE_EXTENSION"} {:fieldname "PdoData"} PdoData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__PDO_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PeerList__AVC_MULTIFUNC_IRB"} {:fieldname "PeerList"} PeerList__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T.PeerLocator__AVC_MULTIFUNC_IRB"} {:fieldname "PeerLocator"} PeerLocator__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 512
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingIrpList"} PendingIrpList__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PendingRequestIrp__BUS_DEVICE_EXTENSION"} {:fieldname "PendingRequestIrp"} PendingRequestIrp__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingRequestList"} PendingRequestList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T._AVC_FCP_REQUEST"} {:fieldname "PendingRequest"} PendingRequest__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 2884
}

function {:inline true} {:fieldmap "Mem_T.PendingResponseIrp__BUS_DEVICE_EXTENSION"} {:fieldname "PendingResponseIrp"} PendingResponseIrp__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingResponseList"} PendingResponseList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T._AVC_FCP_REQUEST"} {:fieldname "PendingResponse"} PendingResponse__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysicalDeviceObject__BUS_DEVICE_EXTENSION"} {:fieldname "PhysicalDeviceObject"} PhysicalDeviceObject__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T._AVC_PIN_COUNT"} {:fieldname "PinCount"} PinCount__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PinCount__AVC_PIN_COUNT"} {:fieldname "PinCount"} PinCount__AVC_PIN_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._AVC_PIN_DESCRIPTOR"} {:fieldname "PinDescriptor"} PinDescriptor__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.KSPIN_DESCRIPTOR"} {:fieldname "PinDescriptor"} PinDescriptor__AVC_PIN_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._AVC_PIN_ID"} {:fieldname "PinId"} PinId__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.PinId__AVC_PIN_ID"} {:fieldname "PinId"} PinId__AVC_PIN_ID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T._AVC_PRECONNECT_INFO"} {:fieldname "PreConnectInfo"} PreConnectInfo__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryRoutine__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "QueryRoutine"} QueryRoutine__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RawData__AVC_SUBUNIT_INFO"} {:fieldname "RawData"} RawData__AVC_SUBUNIT_INFO(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RemovalPending__COMMON_DEVICE_EXTENSION"} {:fieldname "RemovalPending"} RemovalPending__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "RemoveEvent"} RemoveEvent__AVC_REMOVE_LOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._AVC_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removed__AVC_REMOVE_LOCK"} {:fieldname "Removed"} Removed__AVC_REMOVE_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Removed__COMMON_DEVICE_EXTENSION"} {:fieldname "Removed"} Removed__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.Request__AVC_COMMAND_CONTEXT"} {:fieldname "Request"} Request__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetLock__COMMON_DEVICE_EXTENSION"} {:fieldname "ResetLock"} ResetLock__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ResponseCode__AVC_COMMAND_CONTEXT"} {:fieldname "ResponseCode"} ResponseCode__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.ResponseCode__AVC_COMMAND_IRB"} {:fieldname "ResponseCode"} ResponseCode__AVC_COMMAND_IRB(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Response__AV_61883_REQUEST"} {:fieldname "Response"} Response__AV_61883_REQUEST(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.Retries__AVC_COMMAND_CONTEXT"} {:fieldname "Retries"} Retries__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Retries__AVC_COMMAND_IRB"} {:fieldname "Retries"} Retries__AVC_COMMAND_IRB(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.RetryFlag__AVC_COMMAND_IRB"} {:fieldname "RetryFlag"} RetryFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SendResponse__AV_61883_REQUEST"} {:fieldname "SendResponse"} SendResponse__AV_61883_REQUEST(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._AVC_SETCONNECT_INFO"} {:fieldname "SetConnectInfo"} SetConnectInfo__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.SetFcpNotify__AV_61883_REQUEST"} {:fieldname "SetFcpNotify"} SetFcpNotify__AV_61883_REQUEST(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.SetUnitDirectory__AV_61883_REQUEST"} {:fieldname "SetUnitDirectory"} SetUnitDirectory__AV_61883_REQUEST(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T._GUID"} {:fieldname "Set"} Set_KSIDENTIFIER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DEVICE_CAPABILITIES"} {:fieldname "Size"} Size__DEVICE_CAPABILITIES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Started__PDO_DATA"} {:fieldname "Started"} Started__PDO_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddrFlag__AVC_COMMAND_IRB"} {:fieldname "SubunitAddrFlag"} SubunitAddrFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddr__AVC_COMMAND_CONTEXT"} {:fieldname "SubunitAddr"} SubunitAddr__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddr__AVC_COMMAND_IRB"} {:fieldname "SubunitAddr"} SubunitAddr__AVC_COMMAND_IRB(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddr__PDO_DATA"} {:fieldname "SubunitAddr"} SubunitAddr__PDO_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddress__AVCCONNECTINFO"} {:fieldname "SubunitAddress"} SubunitAddress__AVCCONNECTINFO(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddress__AVCPRECONNECTINFO"} {:fieldname "SubunitAddress"} SubunitAddress__AVCPRECONNECTINFO(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "SubunitAddress"} SubunitAddress__AVC_SUBUNIT_ADDR_SPEC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SubunitPlugNumber__AVCCONNECTINFO"} {:fieldname "SubunitPlugNumber"} SubunitPlugNumber__AVCCONNECTINFO(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.SubunitPlugNumber__AVCPRECONNECTINFO"} {:fieldname "SubunitPlugNumber"} SubunitPlugNumber__AVCPRECONNECTINFO(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.Subunits__AVC_MULTIFUNC_IRB"} {:fieldname "Subunits"} Subunits__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_1"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__COMMON_DEVICE_EXTENSION"} {:fieldname "SystemState"} SystemState__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.Tag__COMMON_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TimeoutFlag__AVC_COMMAND_IRB"} {:fieldname "TimeoutFlag"} TimeoutFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "Timeout"} Timeout__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Timeout__AVC_COMMAND_IRB"} {:fieldname "Timeout"} Timeout__AVC_COMMAND_IRB(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TriggerBusReset__BUS_DEVICE_EXTENSION"} {:fieldname "TriggerBusReset"} TriggerBusReset__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._AVC_UNIQUE_ID"} {:fieldname "UniqueID"} UniqueID__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 468
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "UniqueID"} UniqueID__GET_UNIT_IDS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniqueId"} UniqueId__PDO_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UnitAddr"} UnitAddr__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T._GET_UNIT_CAPABILITIES"} {:fieldname "UnitCaps"} UnitCaps__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._GET_UNIT_IDS"} {:fieldname "UnitIDs"} UnitIDs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T.UnitInfoRetrieved__BUS_DEVICE_EXTENSION"} {:fieldname "UnitInfoRetrieved"} UnitInfoRetrieved__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.UnitModelID__GET_UNIT_IDS"} {:fieldname "UnitModelID"} UnitModelID__GET_UNIT_IDS(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.UnitModelText__GET_UNIT_IDS"} {:fieldname "UnitModelText"} UnitModelText__GET_UNIT_IDS(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.UnitPlugNumber__AVCCONNECTINFO"} {:fieldname "UnitPlugNumber"} UnitPlugNumber__AVCCONNECTINFO(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.UnitPlugNumber__AVCPRECONNECTINFO"} {:fieldname "UnitPlugNumber"} UnitPlugNumber__AVCPRECONNECTINFO(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__SET_UNIT_DIRECTORY"} {:fieldname "UnitSpecId"} UnitSpecId__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__SET_UNIT_DIRECTORY"} {:fieldname "UnitSwVersion"} UnitSwVersion__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.VendorID__GET_UNIT_IDS"} {:fieldname "VendorID"} VendorID__GET_UNIT_IDS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VendorText__GET_UNIT_IDS"} {:fieldname "VendorText"} VendorText__GET_UNIT_IDS(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Version__AVC_COMMAND_CONTEXT"} {:fieldname "Version"} Version__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.Version__AV_61883_REQUEST"} {:fieldname "Version"} Version__AV_61883_REQUEST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__DEVICE_CAPABILITIES"} {:fieldname "Version"} Version__DEVICE_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hCromEntry__BUS_DEVICE_EXTENSION"} {:fieldname "hCromEntry"} hCromEntry__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.hCromEntry__SET_UNIT_DIRECTORY"} {:fieldname "hCromEntry"} hCromEntry__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.hPlug__AVCCONNECTINFO"} {:fieldname "hPlug"} hPlug__AVCCONNECTINFO(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.m_Acquired_CKsPinDescriptor"} {:fieldname "m_Acquired"} m_Acquired_CKsPinDescriptor(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T._AVC_COMMAND_IRB"} {:fieldname "m_AvcIrb"} m_AvcIrb_CAvcCommandIrb(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CAvcSubunitAddress"} {:fieldname "m_DstAddr"} m_DstAddr_CKsPinDescriptor(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.m_DstPlug_CKsPinDescriptor"} {:fieldname "m_DstPlug"} m_DstPlug_CKsPinDescriptor(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.m_ExtInputPlugCount_CConnectionMgr"} {:fieldname "m_ExtInputPlugCount"} m_ExtInputPlugCount_CConnectionMgr(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.m_ExtOutputPlugCount_CConnectionMgr"} {:fieldname "m_ExtOutputPlugCount"} m_ExtOutputPlugCount_CConnectionMgr(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.m_Flags_CKsPinDescriptor"} {:fieldname "m_Flags"} m_Flags_CKsPinDescriptor(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.m_HaveConnectInfo_CKsPinDescriptor"} {:fieldname "m_HaveConnectInfo"} m_HaveConnectInfo_CKsPinDescriptor(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.m_InterfacesCount_CKsPinDescriptor"} {:fieldname "m_InterfacesCount"} m_InterfacesCount_CKsPinDescriptor(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.m_Interfaces_CKsPinDescriptor"} {:fieldname "m_Interfaces"} m_Interfaces_CKsPinDescriptor(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CSyncIrp"} {:fieldname "m_Irp"} m_Irp_CAvSyncIrp(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_Irp_CSyncIrp"} {:fieldname "m_Irp"} m_Irp_CSyncIrp(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.m_MediumsCount_CKsPinDescriptor"} {:fieldname "m_MediumsCount"} m_MediumsCount_CKsPinDescriptor(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.m_Mediums_CKsPinDescriptor"} {:fieldname "m_Mediums"} m_Mediums_CKsPinDescriptor(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.m_Parent_CSyncIrp"} {:fieldname "m_Parent"} m_Parent_CSyncIrp(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_PdoExtension_CConnectionMgr"} {:fieldname "m_PdoExtension"} m_PdoExtension_CConnectionMgr(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_PinDescriptorsCount_CConnectionMgr"} {:fieldname "m_PinDescriptorsCount"} m_PinDescriptorsCount_CConnectionMgr(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.m_PinDescriptors_CConnectionMgr"} {:fieldname "m_PinDescriptors"} m_PinDescriptors_CConnectionMgr(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CAvcSubunitAddress"} {:fieldname "m_SrcAddr"} m_SrcAddr_CKsPinDescriptor(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.m_SrcPlug_CKsPinDescriptor"} {:fieldname "m_SrcPlug"} m_SrcPlug_CKsPinDescriptor(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.m_SubunitPlugNumber_CKsPinDescriptor"} {:fieldname "m_SubunitPlugNumber"} m_SubunitPlugNumber_CKsPinDescriptor(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.m_UnitPlugNumber_CKsPinDescriptor"} {:fieldname "m_UnitPlugNumber"} m_UnitPlugNumber_CKsPinDescriptor(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.m_cbsua_CAvcSubunitAddress"} {:fieldname "m_cbsua"} m_cbsua_CAvcSubunitAddress(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.m_pKspd_CKsPinDescriptor"} {:fieldname "m_pKspd"} m_pKspd_CKsPinDescriptor(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_sua_CAvcSubunitAddress"} {:fieldname "m_sua"} m_sua_CAvcSubunitAddress(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.nLevel__GET_UNIT_INFO"} {:fieldname "nLevel"} nLevel__GET_UNIT_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.pfn1394ResetContext__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn1394ResetContext"} pfn1394ResetContext__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.pfn1394ResetRoutine__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn1394ResetRoutine"} pfn1394ResetRoutine__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.pfn61883ResetContext__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn61883ResetContext"} pfn61883ResetContext__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.pfn61883ResetRoutine__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn61883ResetRoutine"} pfn61883ResetRoutine__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__BUS_RESET_NOTIFY"} {:fieldname "pfnNotify"} pfnNotify__BUS_RESET_NOTIFY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CAvSyncIrp"} {:fieldname "sdv_derived_object"} sdv_derived_object_CAvSyncIrp(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CAvcCommandIrb"} {:fieldname "sdv_derived_object"} sdv_derived_object_CAvcCommandIrb(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CAvcSubunitAddress"} {:fieldname "sdv_derived_object"} sdv_derived_object_CAvcSubunitAddress(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CConnectionMgr"} {:fieldname "sdv_derived_object"} sdv_derived_object_CConnectionMgr(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_hash_749604085_CAvcCommandIrb"} {:fieldname "sdv_hash_749604085"} sdv_hash_749604085_CAvcCommandIrb(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulModelLength__GET_UNIT_IDS"} {:fieldname "ulModelLength"} ulModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ulUnitModelLength__GET_UNIT_IDS"} {:fieldname "ulUnitModelLength"} ulUnitModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ulVendorLength__GET_UNIT_IDS"} {:fieldname "ulVendorLength"} ulVendorLength__GET_UNIT_IDS(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ulWorkAround__BUS_DEVICE_EXTENSION"} {:fieldname "ulWorkAround"} ulWorkAround__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

const {:string ""} unique strConst__li2bpl0: int;

const {:string " "} unique strConst__li2bpl17: int;

const {:string "&"} unique strConst__li2bpl9: int;

const {:string "&DV"} unique strConst__li2bpl13: int;

const {:string "&ID_"} unique strConst__li2bpl12: int;

const {:string "&TYP_"} unique strConst__li2bpl11: int;

const {:string "AV/C Audio"} unique strConst__li2bpl19: int;

const {:string "AV/C Bulletin Board"} unique strConst__li2bpl27: int;

const {:string "AV/C Camera"} unique strConst__li2bpl25: int;

const {:string "AV/C Camera Storage"} unique strConst__li2bpl28: int;

const {:string "AV/C Conditional Access"} unique strConst__li2bpl24: int;

const {:string "AV/C Disc Recorder/Player"} unique strConst__li2bpl21: int;

const {:string "AV/C Monitor"} unique strConst__li2bpl18: int;

const {:string "AV/C Multifunction Device"} unique strConst__li2bpl29: int;

const {:string "AV/C Panel"} unique strConst__li2bpl26: int;

const {:string "AV/C Printer"} unique strConst__li2bpl20: int;

const {:string "AV/C Subunit"} unique strConst__li2bpl30: int;

const {:string "AV/C Tape Recorder/Player"} unique strConst__li2bpl22: int;

const {:string "AV/C Tuner"} unique strConst__li2bpl23: int;

const {:string "AVC\\"} unique strConst__li2bpl5: int;

const {:string "AvcFlags"} unique strConst__li2bpl4: int;

const {:string "CAMCORDER"} unique strConst__li2bpl7: int;

const {:string "GENERIC"} unique strConst__li2bpl14: int;

const {:string "MOD_"} unique strConst__li2bpl10: int;

const {:string "TYP_"} unique strConst__li2bpl15: int;

const {:string "The driver is calling PAGED_CODE() at IRQL >= DISPATCH_LEVEL."} unique strConst__li2bpl1: int;

const {:string "VAVC\\"} unique strConst__li2bpl6: int;

const {:string "VEN_"} unique strConst__li2bpl8: int;

const {:string "Virtual Device List"} unique strConst__li2bpl3: int;

const {:string "X"} unique strConst__li2bpl16: int;

const {:string "callee"} unique strConst__li2bpl2: int;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant200: int;

axiom li2bplFunctionConstant200 == 200;

const {:allocated} li2bplFunctionConstant201: int;

axiom li2bplFunctionConstant201 == 201;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant206: int;

axiom li2bplFunctionConstant206 == 206;

const {:allocated} li2bplFunctionConstant208: int;

axiom li2bplFunctionConstant208 == 208;

const {:allocated} li2bplFunctionConstant238: int;

axiom li2bplFunctionConstant238 == 238;

const {:allocated} li2bplFunctionConstant248: int;

axiom li2bplFunctionConstant248 == 248;

const {:allocated} li2bplFunctionConstant249: int;

axiom li2bplFunctionConstant249 == 249;

const {:allocated} li2bplFunctionConstant253: int;

axiom li2bplFunctionConstant253 == 253;

const {:allocated} li2bplFunctionConstant256: int;

axiom li2bplFunctionConstant256 == 256;

const {:allocated} li2bplFunctionConstant265: int;

axiom li2bplFunctionConstant265 == 265;

const {:allocated} li2bplFunctionConstant266: int;

axiom li2bplFunctionConstant266 == 266;

const {:allocated} li2bplFunctionConstant286: int;

axiom li2bplFunctionConstant286 == 286;

const {:allocated} li2bplFunctionConstant372: int;

axiom li2bplFunctionConstant372 == 372;

const {:allocated} li2bplFunctionConstant374: int;

axiom li2bplFunctionConstant374 == 374;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant377: int;

axiom li2bplFunctionConstant377 == 377;

const {:allocated} li2bplFunctionConstant380: int;

axiom li2bplFunctionConstant380 == 380;

const {:allocated} li2bplFunctionConstant404: int;

axiom li2bplFunctionConstant404 == 404;

const {:allocated} li2bplFunctionConstant574: int;

axiom li2bplFunctionConstant574 == 574;

const {:allocated} li2bplFunctionConstant618: int;

axiom li2bplFunctionConstant618 == 618;

const {:allocated} li2bplFunctionConstant636: int;

axiom li2bplFunctionConstant636 == 636;

const {:allocated} li2bplFunctionConstant789: int;

axiom li2bplFunctionConstant789 == 789;

const {:allocated} li2bplFunctionConstant791: int;

axiom li2bplFunctionConstant791 == 791;

const {:allocated} li2bplFunctionConstant794: int;

axiom li2bplFunctionConstant794 == 794;

function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation AvcSubunitPackedTypesEqual_loop_L16(in_Tmp_9: int, in_idx: int, in_Tmp_14: int, in_SubunitType1: int, in_SubunitType2: int) returns (out_Tmp_9: int, out_idx: int, out_Tmp_14: int)
{

  entry:
    out_Tmp_9, out_idx, out_Tmp_14 := in_Tmp_9, in_idx, in_Tmp_14;
    goto L16, exit;

  exit:
    return;

  L16:
    out_Tmp_14 := out_idx;
    assume {:nonnull} in_SubunitType1 != 0;
    assume in_SubunitType1 > 0;
    goto anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.INT4[in_SubunitType1 + out_Tmp_14 * 4] == 255;
    out_Tmp_9 := out_idx;
    assume {:nonnull} in_SubunitType2 != 0;
    assume in_SubunitType2 > 0;
    goto anon23_Then;

  anon23_Then:
    assume {:partition} Mem_T.INT4[in_SubunitType2 + out_Tmp_9 * 4] == 255;
    out_idx := out_idx + 1;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    havoc out_idx;
    return;
}



procedure {:LoopProcedure} AvcSubunitPackedTypesEqual_loop_L16(in_Tmp_9: int, in_idx: int, in_Tmp_14: int, in_SubunitType1: int, in_SubunitType2: int) returns (out_Tmp_9: int, out_idx: int, out_Tmp_14: int);
  free ensures {:va_keep} out_Tmp_9 == in_idx || out_Tmp_9 == in_Tmp_9;
  free ensures {:va_keep} out_Tmp_14 == in_idx || out_Tmp_14 == in_Tmp_14;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcStopAllFCPProcessing_loop_L22(in_sdv_8: int, in_OldIrql_1: int, in_sdv_13: int, in_Command_1: int, in_Tmp_16: int, in_DevExt_1: int) returns (out_sdv_8: int, out_OldIrql_1: int, out_sdv_13: int, out_Command_1: int, out_Tmp_16: int)
{

  entry:
    out_sdv_8, out_OldIrql_1, out_sdv_13, out_Command_1, out_Tmp_16 := in_sdv_8, in_OldIrql_1, in_sdv_13, in_Command_1, in_Tmp_16;
    goto L22, exit;

  exit:
    return;

  L22:
    call {:si_unique_call 1953} out_sdv_13 := sdv_IsListEmpty(0);
    goto anon17_Then;

  anon17_Then:
    assume {:partition} out_sdv_13 == 0;
    assume {:nonnull} in_DevExt_1 != 0;
    assume in_DevExt_1 > 0;
    call {:si_unique_call 1954} out_sdv_8 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(in_DevExt_1));
    out_Command_1 := out_sdv_8;
    call {:si_unique_call 1955} InitializeListHead(out_Command_1);
    call {:si_unique_call 1956} sdv_KeReleaseSpinLock(0, out_OldIrql_1);
    call {:si_unique_call 1957} AvcPendingIrpCompletion(out_Command_1);
    call {:si_unique_call 1958} AvcFreeCommandContext(out_Command_1);
    call {:si_unique_call 1959} out_Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    Mem_T.INT4[out_Tmp_16] := out_OldIrql_1;
    call {:si_unique_call 1960} sdv_KeAcquireSpinLock(0, out_Tmp_16);
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    out_OldIrql_1 := Mem_T.INT4[out_Tmp_16];
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 1961} {:si_old_unique_call 1} out_sdv_8, out_OldIrql_1, out_sdv_13, out_Command_1, out_Tmp_16 := AvcStopAllFCPProcessing_loop_L22(out_sdv_8, out_OldIrql_1, out_sdv_13, out_Command_1, out_Tmp_16, in_DevExt_1);
    return;
}



procedure {:LoopProcedure} AvcStopAllFCPProcessing_loop_L22(in_sdv_8: int, in_OldIrql_1: int, in_sdv_13: int, in_Command_1: int, in_Tmp_16: int, in_DevExt_1: int) returns (out_sdv_8: int, out_OldIrql_1: int, out_sdv_13: int, out_Command_1: int, out_Tmp_16: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_13 == 1 || out_sdv_13 == 0 || out_sdv_13 == in_sdv_13;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcStopAllFCPProcessing_loop_L15(in_OldIrql_1: int, in_sdv_12: int, in_sdv_14: int, in_Command_1: int, in_Tmp_16: int, in_DevExt_1: int) returns (out_OldIrql_1: int, out_sdv_12: int, out_sdv_14: int, out_Command_1: int, out_Tmp_16: int)
{

  entry:
    out_OldIrql_1, out_sdv_12, out_sdv_14, out_Command_1, out_Tmp_16 := in_OldIrql_1, in_sdv_12, in_sdv_14, in_Command_1, in_Tmp_16;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 1962} out_sdv_12 := sdv_IsListEmpty(0);
    goto anon16_Then;

  anon16_Then:
    assume {:partition} out_sdv_12 == 0;
    assume {:nonnull} in_DevExt_1 != 0;
    assume in_DevExt_1 > 0;
    call {:si_unique_call 1963} out_sdv_14 := RemoveHeadList(PendingRequestList__BUS_DEVICE_EXTENSION(in_DevExt_1));
    out_Command_1 := out_sdv_14;
    call {:si_unique_call 1964} InitializeListHead(out_Command_1);
    call {:si_unique_call 1965} sdv_KeReleaseSpinLock(0, out_OldIrql_1);
    assume {:nonnull} out_Command_1 != 0;
    assume out_Command_1 > 0;
    call {:si_unique_call 1966} AvcPendingIrpCompletion(out_Command_1);
    call {:si_unique_call 1967} AvcFreeCommandContext(out_Command_1);
    out_Command_1 := 0;
    call {:si_unique_call 1968} out_Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    Mem_T.INT4[out_Tmp_16] := out_OldIrql_1;
    call {:si_unique_call 1969} sdv_KeAcquireSpinLock(0, out_Tmp_16);
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    out_OldIrql_1 := Mem_T.INT4[out_Tmp_16];
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    call {:si_unique_call 1970} {:si_old_unique_call 1} out_OldIrql_1, out_sdv_12, out_sdv_14, out_Command_1, out_Tmp_16 := AvcStopAllFCPProcessing_loop_L15(out_OldIrql_1, out_sdv_12, out_sdv_14, out_Command_1, out_Tmp_16, in_DevExt_1);
    return;
}



procedure {:LoopProcedure} AvcStopAllFCPProcessing_loop_L15(in_OldIrql_1: int, in_sdv_12: int, in_sdv_14: int, in_Command_1: int, in_Tmp_16: int, in_DevExt_1: int) returns (out_OldIrql_1: int, out_sdv_12: int, out_sdv_14: int, out_Command_1: int, out_Tmp_16: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_12 == 1 || out_sdv_12 == 0 || out_sdv_12 == in_sdv_12;
  free ensures {:va_keep} out_Command_1 == 0 || out_Command_1 == in_Command_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcStopAllFCPProcessing_loop_L8(in_sdv_7: int, in_sdv_9: int, in_OldIrql_1: int, in_sdv_11: int, in_Command_1: int, in_CallbackLink: int, in_Tmp_16: int, in_sdv_16: int, in_DevExt_1: int) returns (out_sdv_7: int, out_sdv_9: int, out_OldIrql_1: int, out_sdv_11: int, out_Command_1: int, out_CallbackLink: int, out_Tmp_16: int, out_sdv_16: int)
{
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;

  entry:
    out_sdv_7, out_sdv_9, out_OldIrql_1, out_sdv_11, out_Command_1, out_CallbackLink, out_Tmp_16, out_sdv_16 := in_sdv_7, in_sdv_9, in_OldIrql_1, in_sdv_11, in_Command_1, in_CallbackLink, in_Tmp_16, in_sdv_16;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 1971} out_sdv_7 := sdv_IsListEmpty(0);
    goto anon15_Then;

  anon15_Then:
    assume {:partition} out_sdv_7 == 0;
    assume {:nonnull} in_DevExt_1 != 0;
    assume in_DevExt_1 > 0;
    call {:si_unique_call 1977} out_sdv_11 := RemoveHeadList(PendingResponseList__BUS_DEVICE_EXTENSION(in_DevExt_1));
    out_Command_1 := out_sdv_11;
    call {:si_unique_call 1978} InitializeListHead(out_Command_1);
    call {:si_unique_call 1979} sdv_KeReleaseSpinLock(0, out_OldIrql_1);
    assume {:nonnull} out_Command_1 != 0;
    assume out_Command_1 > 0;
    call {:si_unique_call 1980} out_sdv_9 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} out_sdv_9 == 0;
    assume {:nonnull} out_Command_1 != 0;
    assume out_Command_1 > 0;
    call {:si_unique_call 1983} out_sdv_16 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(out_Command_1));
    out_CallbackLink := out_sdv_16;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    havoc vslice_dummy_var_163;
    call {:si_unique_call 1981} AvcCommandCallback_sdv_static_function_2(out_Command_1, vslice_dummy_var_163);
    goto L107;

  L107:
    call {:si_unique_call 1974} ExFreeToNPagedLookasideList(AvcCommandLinkPool, out_CallbackLink);
    goto L97;

  L97:
    call {:si_unique_call 1972} out_Tmp_16 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    Mem_T.INT4[out_Tmp_16] := out_OldIrql_1;
    call {:si_unique_call 1973} sdv_KeAcquireSpinLock(0, out_Tmp_16);
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    out_OldIrql_1 := Mem_T.INT4[out_Tmp_16];
    goto L97_dummy;

  L97_dummy:
    call {:si_unique_call 1984} {:si_old_unique_call 1} out_sdv_7, out_sdv_9, out_OldIrql_1, out_sdv_11, out_Command_1, out_CallbackLink, out_Tmp_16, out_sdv_16 := AvcStopAllFCPProcessing_loop_L8(out_sdv_7, out_sdv_9, out_OldIrql_1, out_sdv_11, out_Command_1, out_CallbackLink, out_Tmp_16, out_sdv_16, in_DevExt_1);
    return;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    havoc vslice_dummy_var_164;
    call {:si_unique_call 1982} Avc_BusResetCallback_sdv_static_function_4(out_Command_1, vslice_dummy_var_164);
    goto L107;

  anon20_Then:
    assume {:partition} out_sdv_9 != 0;
    call {:si_unique_call 1975} AvcPendingIrpCompletion(out_Command_1);
    call {:si_unique_call 1976} AvcFreeCommandContext(out_Command_1);
    out_Command_1 := 0;
    goto L97;
}



procedure {:LoopProcedure} AvcStopAllFCPProcessing_loop_L8(in_sdv_7: int, in_sdv_9: int, in_OldIrql_1: int, in_sdv_11: int, in_Command_1: int, in_CallbackLink: int, in_Tmp_16: int, in_sdv_16: int, in_DevExt_1: int) returns (out_sdv_7: int, out_sdv_9: int, out_OldIrql_1: int, out_sdv_11: int, out_Command_1: int, out_CallbackLink: int, out_Tmp_16: int, out_sdv_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_7 == 1 || out_sdv_7 == 0 || out_sdv_7 == in_sdv_7;
  free ensures {:va_keep} out_sdv_9 == 1 || out_sdv_9 == 0 || out_sdv_9 == in_sdv_9;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcExtractMatchingIrps_sdv_static_function_2_loop_L11(in_Irp: int, in_sdv_17: int, in_IrpStack: int, in_oldCancelRoutine: int, in_nextIrpEntry: int, in_IrpEntry: int, in_FileObject: int, in_IrpList: int, in_vslice_dummy_var_8: int, in_vslice_dummy_var_9: int) returns (out_Irp: int, out_sdv_17: int, out_IrpStack: int, out_oldCancelRoutine: int, out_nextIrpEntry: int, out_IrpEntry: int, out_vslice_dummy_var_8: int, out_vslice_dummy_var_9: int)
{

  entry:
    out_Irp, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_IrpEntry, out_vslice_dummy_var_8, out_vslice_dummy_var_9 := in_Irp, in_sdv_17, in_IrpStack, in_oldCancelRoutine, in_nextIrpEntry, in_IrpEntry, in_vslice_dummy_var_8, in_vslice_dummy_var_9;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon10_Else;

  anon10_Else:
    call {:si_unique_call 1987} out_sdv_17 := sdv_containing_record(out_IrpEntry, 88);
    out_Irp := out_sdv_17;
    call {:si_unique_call 1988} out_IrpStack := sdv_IoGetCurrentIrpStackLocation(out_Irp);
    assume {:nonnull} out_IrpEntry != 0;
    assume out_IrpEntry > 0;
    havoc out_nextIrpEntry;
    assume {:nonnull} out_IrpStack != 0;
    assume out_IrpStack > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 1989} out_oldCancelRoutine := sdv_IoSetCancelRoutine(out_Irp, 0);
    call {:si_unique_call 1990} out_vslice_dummy_var_8 := sdv_RemoveEntryList(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} out_oldCancelRoutine != 0;
    call {:si_unique_call 1985} out_vslice_dummy_var_9 := sdv_InsertTailList(in_IrpList, out_IrpEntry);
    goto L26;

  L26:
    out_IrpEntry := out_nextIrpEntry;
    goto L26_dummy;

  L26_dummy:
    call {:si_unique_call 1991} {:si_old_unique_call 1} out_Irp, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_IrpEntry, out_vslice_dummy_var_8, out_vslice_dummy_var_9 := AvcExtractMatchingIrps_sdv_static_function_2_loop_L11(out_Irp, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_IrpEntry, in_FileObject, in_IrpList, out_vslice_dummy_var_8, out_vslice_dummy_var_9);
    return;

  anon11_Then:
    assume {:partition} out_oldCancelRoutine == 0;
    call {:si_unique_call 1986} InitializeListHead(out_IrpEntry);
    goto L26;

  anon12_Then:
    goto L26;
}



procedure {:LoopProcedure} AvcExtractMatchingIrps_sdv_static_function_2_loop_L11(in_Irp: int, in_sdv_17: int, in_IrpStack: int, in_oldCancelRoutine: int, in_nextIrpEntry: int, in_IrpEntry: int, in_FileObject: int, in_IrpList: int, in_vslice_dummy_var_8: int, in_vslice_dummy_var_9: int) returns (out_Irp: int, out_sdv_17: int, out_IrpStack: int, out_oldCancelRoutine: int, out_nextIrpEntry: int, out_IrpEntry: int, out_vslice_dummy_var_8: int, out_vslice_dummy_var_9: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} out_vslice_dummy_var_8 == 1 || out_vslice_dummy_var_8 == 0 || out_vslice_dummy_var_8 == in_vslice_dummy_var_8;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcExtractMatchingIrps_sdv_static_function_2_loop_L5(in_Irp: int, in_CommandEntry: int, in_sdv_17: int, in_IrpStack: int, in_oldCancelRoutine: int, in_nextIrpEntry: int, in_Command_2: int, in_IrpEntry: int, in_FileObject: int, in_IrpList: int, in_vslice_dummy_var_8: int, in_vslice_dummy_var_9: int) returns (out_Irp: int, out_CommandEntry: int, out_sdv_17: int, out_IrpStack: int, out_oldCancelRoutine: int, out_nextIrpEntry: int, out_Command_2: int, out_IrpEntry: int, out_vslice_dummy_var_8: int, out_vslice_dummy_var_9: int)
{

  entry:
    out_Irp, out_CommandEntry, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_Command_2, out_IrpEntry, out_vslice_dummy_var_8, out_vslice_dummy_var_9 := in_Irp, in_CommandEntry, in_sdv_17, in_IrpStack, in_oldCancelRoutine, in_nextIrpEntry, in_Command_2, in_IrpEntry, in_vslice_dummy_var_8, in_vslice_dummy_var_9;
    goto L5, exit;

  exit:
    return;

  L5:
    goto anon9_Else;

  anon9_Else:
    out_Command_2 := out_CommandEntry;
    assume {:nonnull} out_Command_2 != 0;
    assume out_Command_2 > 0;
    havoc out_IrpEntry;
    goto L11;

  L11:
    call {:si_unique_call 1992} out_Irp, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_IrpEntry, out_vslice_dummy_var_8, out_vslice_dummy_var_9 := AvcExtractMatchingIrps_sdv_static_function_2_loop_L11(out_Irp, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_IrpEntry, in_FileObject, in_IrpList, out_vslice_dummy_var_8, out_vslice_dummy_var_9);
    goto L11_last;

  L11_last:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1995} out_sdv_17 := sdv_containing_record(out_IrpEntry, 88);
    out_Irp := out_sdv_17;
    call {:si_unique_call 1996} out_IrpStack := sdv_IoGetCurrentIrpStackLocation(out_Irp);
    assume {:nonnull} out_IrpEntry != 0;
    assume out_IrpEntry > 0;
    havoc out_nextIrpEntry;
    assume {:nonnull} out_IrpStack != 0;
    assume out_IrpStack > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 1997} out_oldCancelRoutine := sdv_IoSetCancelRoutine(out_Irp, 0);
    call {:si_unique_call 1998} out_vslice_dummy_var_8 := sdv_RemoveEntryList(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} out_oldCancelRoutine != 0;
    call {:si_unique_call 1993} out_vslice_dummy_var_9 := sdv_InsertTailList(in_IrpList, out_IrpEntry);
    goto L26;

  L26:
    out_IrpEntry := out_nextIrpEntry;
    assume false;
    return;

  anon11_Then:
    assume {:partition} out_oldCancelRoutine == 0;
    call {:si_unique_call 1994} InitializeListHead(out_IrpEntry);
    goto L26;

  anon12_Then:
    goto L26;

  anon10_Then:
    assume {:nonnull} out_CommandEntry != 0;
    assume out_CommandEntry > 0;
    havoc out_CommandEntry;
    goto anon10_Then_dummy;

  anon10_Then_dummy:
    call {:si_unique_call 1999} {:si_old_unique_call 1} out_Irp, out_CommandEntry, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_Command_2, out_IrpEntry, out_vslice_dummy_var_8, out_vslice_dummy_var_9 := AvcExtractMatchingIrps_sdv_static_function_2_loop_L5(out_Irp, out_CommandEntry, out_sdv_17, out_IrpStack, out_oldCancelRoutine, out_nextIrpEntry, out_Command_2, out_IrpEntry, in_FileObject, in_IrpList, out_vslice_dummy_var_8, out_vslice_dummy_var_9);
    return;
}



procedure {:LoopProcedure} AvcExtractMatchingIrps_sdv_static_function_2_loop_L5(in_Irp: int, in_CommandEntry: int, in_sdv_17: int, in_IrpStack: int, in_oldCancelRoutine: int, in_nextIrpEntry: int, in_Command_2: int, in_IrpEntry: int, in_FileObject: int, in_IrpList: int, in_vslice_dummy_var_8: int, in_vslice_dummy_var_9: int) returns (out_Irp: int, out_CommandEntry: int, out_sdv_17: int, out_IrpStack: int, out_oldCancelRoutine: int, out_nextIrpEntry: int, out_Command_2: int, out_IrpEntry: int, out_vslice_dummy_var_8: int, out_vslice_dummy_var_9: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} out_vslice_dummy_var_8 == 1 || out_vslice_dummy_var_8 == 0 || out_vslice_dummy_var_8 == in_vslice_dummy_var_8;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcProcessSendResponse_loop_L54(in_Tmp_26: int, in_Padding: int, in_Tmp_32: int, in_Response_1: int, in_Tmp_34: int) returns (out_Tmp_26: int, out_Padding: int, out_Tmp_32: int, out_Tmp_34: int)
{

  entry:
    out_Tmp_26, out_Padding, out_Tmp_32, out_Tmp_34 := in_Tmp_26, in_Padding, in_Tmp_32, in_Tmp_34;
    goto L54, exit;

  exit:
    return;

  L54:
    goto anon27_Else;

  anon27_Else:
    assume {:partition} INTMOD(out_Padding, 4) != 0;
    out_Tmp_26 := out_Padding;
    out_Padding := out_Padding + 1;
    out_Tmp_34 := out_Tmp_26;
    assume {:nonnull} in_Response_1 != 0;
    assume in_Response_1 > 0;
    havoc out_Tmp_32;
    assume {:nonnull} out_Tmp_32 != 0;
    assume out_Tmp_32 > 0;
    Mem_T.INT4[out_Tmp_32 + out_Tmp_34 * 4] := 0;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    call {:si_unique_call 2000} {:si_old_unique_call 1} out_Tmp_26, out_Padding, out_Tmp_32, out_Tmp_34 := AvcProcessSendResponse_loop_L54(out_Tmp_26, out_Padding, out_Tmp_32, in_Response_1, out_Tmp_34);
    return;
}



procedure {:LoopProcedure} AvcProcessSendResponse_loop_L54(in_Tmp_26: int, in_Padding: int, in_Tmp_32: int, in_Response_1: int, in_Tmp_34: int) returns (out_Tmp_26: int, out_Padding: int, out_Tmp_32: int, out_Tmp_34: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcGetPeerDeviceObjectList_loop_L34(in_Count: int, in_Tmp_41: int, in_DevExt_5: int, in_sdv_32: int, in_Objects: int, in_Entry: int, in_Tmp_42: int, in_vslice_dummy_var_12: int) returns (out_Count: int, out_Tmp_41: int, out_DevExt_5: int, out_sdv_32: int, out_Entry: int, out_Tmp_42: int, out_vslice_dummy_var_12: int)
{

  entry:
    out_Count, out_Tmp_41, out_DevExt_5, out_sdv_32, out_Entry, out_Tmp_42, out_vslice_dummy_var_12 := in_Count, in_Tmp_41, in_DevExt_5, in_sdv_32, in_Entry, in_Tmp_42, in_vslice_dummy_var_12;
    goto L34, exit;

  exit:
    return;

  L34:
    goto anon8_Else;

  anon8_Else:
    call {:si_unique_call 2001} out_sdv_32 := sdv_containing_record(out_Entry, 72);
    out_DevExt_5 := out_sdv_32;
    call {:si_unique_call 2002} out_vslice_dummy_var_12 := sdv_ObReferenceObject(0);
    out_Tmp_42 := out_Count;
    out_Count := out_Count + 1;
    out_Tmp_41 := out_Tmp_42;
    assume {:nonnull} out_DevExt_5 != 0;
    assume out_DevExt_5 > 0;
    assume {:nonnull} in_Objects != 0;
    assume in_Objects > 0;
    assume {:nonnull} out_Entry != 0;
    assume out_Entry > 0;
    havoc out_Entry;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    call {:si_unique_call 2003} {:si_old_unique_call 1} out_Count, out_Tmp_41, out_DevExt_5, out_sdv_32, out_Entry, out_Tmp_42, out_vslice_dummy_var_12 := AvcGetPeerDeviceObjectList_loop_L34(out_Count, out_Tmp_41, out_DevExt_5, out_sdv_32, in_Objects, out_Entry, out_Tmp_42, out_vslice_dummy_var_12);
    return;
}



procedure {:LoopProcedure} AvcGetPeerDeviceObjectList_loop_L34(in_Count: int, in_Tmp_41: int, in_DevExt_5: int, in_sdv_32: int, in_Objects: int, in_Entry: int, in_Tmp_42: int, in_vslice_dummy_var_12: int) returns (out_Count: int, out_Tmp_41: int, out_DevExt_5: int, out_sdv_32: int, out_Entry: int, out_Tmp_42: int, out_vslice_dummy_var_12: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcGetPeerDeviceObjectList_loop_L22(in_Count: int, in_Entry: int) returns (out_Count: int, out_Entry: int)
{

  entry:
    out_Count, out_Entry := in_Count, in_Entry;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon7_Else;

  anon7_Else:
    out_Count := out_Count + 1;
    assume {:nonnull} out_Entry != 0;
    assume out_Entry > 0;
    havoc out_Entry;
    goto anon7_Else_dummy;

  anon7_Else_dummy:
    call {:si_unique_call 2004} {:si_old_unique_call 1} out_Count, out_Entry := AvcGetPeerDeviceObjectList_loop_L22(out_Count, out_Entry);
    return;
}



procedure {:LoopProcedure} AvcGetPeerDeviceObjectList_loop_L22(in_Count: int, in_Entry: int) returns (out_Count: int, out_Entry: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcPackSubunitInfo_loop_L25(in_PdoData: int, in_InnerPdoData: int, in_SubunitId: int, in_sdv_35: int) returns (out_InnerPdoData: int, out_sdv_35: int)
{
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;

  entry:
    out_InnerPdoData, out_sdv_35 := in_InnerPdoData, in_sdv_35;
    goto L25, exit;

  exit:
    return;

  L25:
    goto anon36_Else;

  anon36_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    assume {:nonnull} in_PdoData != 0;
    assume in_PdoData > 0;
    havoc vslice_dummy_var_165;
    havoc vslice_dummy_var_166;
    call {:si_unique_call 2005} out_sdv_35 := AvcSubunitPackedTypesEqual(vslice_dummy_var_165, vslice_dummy_var_166);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_sdv_35 != 0;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    Mem_T.INT4[in_SubunitId] := Mem_T.INT4[in_SubunitId] + 1;
    goto L28;

  L28:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    havoc out_InnerPdoData;
    goto L28_dummy;

  L28_dummy:
    call {:si_unique_call 2006} {:si_old_unique_call 1} out_InnerPdoData, out_sdv_35 := AvcPackSubunitInfo_loop_L25(in_PdoData, out_InnerPdoData, in_SubunitId, out_sdv_35);
    return;

  anon38_Then:
    assume {:partition} out_sdv_35 == 0;
    goto L28;

  anon37_Then:
    goto L28;
}



procedure {:LoopProcedure} AvcPackSubunitInfo_loop_L25(in_PdoData: int, in_InnerPdoData: int, in_SubunitId: int, in_sdv_35: int) returns (out_InnerPdoData: int, out_sdv_35: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} out_sdv_35 == 1 || out_sdv_35 == 0 || out_sdv_35 == in_sdv_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcPackSubunitInfo_loop_L7(in_PdoData: int, in_LocalBytesUsed: int, in_Tmp_43: int, in_Tmp_44: int, in_Offset_1: int, in_InnerPdoData: int, in_Tmp_45: int, in_SubunitId: int, in_sdv_35: int, in_ntStatus_1: int, in_Tmp_47: int, in_Tmp_49: int, in_Tmp_50: int, in_SubunitType: int, in_Tmp_51: int, in_Tmp_52: int, in_Tmp_53: int, in_Length: int, in_Buffer: int) returns (out_PdoData: int, out_Tmp_43: int, out_Tmp_44: int, out_Offset_1: int, out_InnerPdoData: int, out_Tmp_45: int, out_sdv_35: int, out_ntStatus_1: int, out_Tmp_47: int, out_Tmp_49: int, out_Tmp_50: int, out_Tmp_51: int, out_Tmp_52: int, out_Tmp_53: int)
{
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;

  entry:
    out_PdoData, out_Tmp_43, out_Tmp_44, out_Offset_1, out_InnerPdoData, out_Tmp_45, out_sdv_35, out_ntStatus_1, out_Tmp_47, out_Tmp_49, out_Tmp_50, out_Tmp_51, out_Tmp_52, out_Tmp_53 := in_PdoData, in_Tmp_43, in_Tmp_44, in_Offset_1, in_InnerPdoData, in_Tmp_45, in_sdv_35, in_ntStatus_1, in_Tmp_47, in_Tmp_49, in_Tmp_50, in_Tmp_51, in_Tmp_52, in_Tmp_53;
    goto L7, exit;

  exit:
    return;

  L7:
    goto anon29_Else;

  anon29_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc vslice_dummy_var_167;
    call {:si_unique_call 2009} out_ntStatus_1 := AvcUnpackSubunitAddress(vslice_dummy_var_167, in_SubunitType, in_SubunitId, in_LocalBytesUsed);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_ntStatus_1 == 0;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[in_SubunitId] == 0;
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc out_InnerPdoData;
    goto L25;

  L25:
    call {:si_unique_call 2011} out_InnerPdoData, out_sdv_35 := AvcPackSubunitInfo_loop_L25(out_PdoData, out_InnerPdoData, in_SubunitId, out_sdv_35);
    goto L25_last;

  L25_last:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc vslice_dummy_var_168;
    havoc vslice_dummy_var_169;
    call {:si_unique_call 2012} out_sdv_35 := AvcSubunitPackedTypesEqual(vslice_dummy_var_168, vslice_dummy_var_169);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_sdv_35 != 0;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    Mem_T.INT4[in_SubunitId] := Mem_T.INT4[in_SubunitId] + 1;
    goto L28;

  L28:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    havoc out_InnerPdoData;
    assume false;
    return;

  anon38_Then:
    assume {:partition} out_sdv_35 == 0;
    goto L28;

  anon37_Then:
    goto L28;

  anon36_Then:
    out_Tmp_44 := out_Offset_1;
    out_Tmp_53 := in_Buffer + out_Tmp_44 * 4;
    out_Tmp_52 := in_Length - out_Offset_1;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    call {:si_unique_call 2010} out_ntStatus_1 := AvcPackSubunitAddress(in_SubunitType, Mem_T.INT4[in_SubunitId], out_Tmp_52, out_Tmp_53, in_LocalBytesUsed);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_ntStatus_1 == 0;
    assume {:nonnull} in_LocalBytesUsed != 0;
    assume in_LocalBytesUsed > 0;
    out_Offset_1 := out_Offset_1 + Mem_T.INT4[in_LocalBytesUsed];
    goto L10;

  L10:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc out_PdoData;
    goto L10_dummy;

  L10_dummy:
    call {:si_unique_call 2013} {:si_old_unique_call 1} out_PdoData, out_Tmp_43, out_Tmp_44, out_Offset_1, out_InnerPdoData, out_Tmp_45, out_sdv_35, out_ntStatus_1, out_Tmp_47, out_Tmp_49, out_Tmp_50, out_Tmp_51, out_Tmp_52, out_Tmp_53 := AvcPackSubunitInfo_loop_L7(out_PdoData, in_LocalBytesUsed, out_Tmp_43, out_Tmp_44, out_Offset_1, out_InnerPdoData, out_Tmp_45, in_SubunitId, out_sdv_35, out_ntStatus_1, out_Tmp_47, out_Tmp_49, out_Tmp_50, in_SubunitType, out_Tmp_51, out_Tmp_52, out_Tmp_53, in_Length, in_Buffer);
    return;

  anon39_Then:
    assume {:partition} out_ntStatus_1 != 0;
    goto L10;

  anon35_Then:
    assume {:partition} Mem_T.INT4[in_SubunitId] != 0;
    goto L10;

  anon34_Then:
    assume {:partition} out_ntStatus_1 != 0;
    goto L10;

  anon32_Then:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L42;

  L42:
    assume {:nonnull} in_SubunitType != 0;
    assume in_SubunitType > 0;
    Mem_T.INT4[in_SubunitType] := 4;
    out_Tmp_50 := out_Offset_1;
    out_Tmp_47 := in_Buffer + out_Tmp_50 * 4;
    out_Tmp_49 := in_Length - out_Offset_1;
    call {:si_unique_call 2008} out_ntStatus_1 := AvcPackSubunitAddress(in_SubunitType, 0, out_Tmp_49, out_Tmp_47, in_LocalBytesUsed);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_ntStatus_1 != 0;
    goto L51;

  L51:
    assume {:nonnull} in_SubunitType != 0;
    assume in_SubunitType > 0;
    Mem_T.INT4[in_SubunitType] := 7;
    out_Tmp_43 := out_Offset_1;
    out_Tmp_51 := in_Buffer + out_Tmp_43 * 4;
    out_Tmp_45 := in_Length - out_Offset_1;
    call {:si_unique_call 2007} out_ntStatus_1 := AvcPackSubunitAddress(in_SubunitType, 0, out_Tmp_45, out_Tmp_51, in_LocalBytesUsed);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} out_ntStatus_1 == 0;
    assume {:nonnull} in_LocalBytesUsed != 0;
    assume in_LocalBytesUsed > 0;
    out_Offset_1 := out_Offset_1 + Mem_T.INT4[in_LocalBytesUsed];
    goto L10;

  anon42_Then:
    assume {:partition} out_ntStatus_1 != 0;
    goto L10;

  anon41_Then:
    assume {:partition} out_ntStatus_1 == 0;
    assume {:nonnull} in_LocalBytesUsed != 0;
    assume in_LocalBytesUsed > 0;
    out_Offset_1 := out_Offset_1 + Mem_T.INT4[in_LocalBytesUsed];
    goto L51;

  anon33_Then:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L42;

  anon40_Then:
    goto L10;

  anon31_Then:
    goto L10;
}



procedure {:LoopProcedure} AvcPackSubunitInfo_loop_L7(in_PdoData: int, in_LocalBytesUsed: int, in_Tmp_43: int, in_Tmp_44: int, in_Offset_1: int, in_InnerPdoData: int, in_Tmp_45: int, in_SubunitId: int, in_sdv_35: int, in_ntStatus_1: int, in_Tmp_47: int, in_Tmp_49: int, in_Tmp_50: int, in_SubunitType: int, in_Tmp_51: int, in_Tmp_52: int, in_Tmp_53: int, in_Length: int, in_Buffer: int) returns (out_PdoData: int, out_Tmp_43: int, out_Tmp_44: int, out_Offset_1: int, out_InnerPdoData: int, out_Tmp_45: int, out_sdv_35: int, out_ntStatus_1: int, out_Tmp_47: int, out_Tmp_49: int, out_Tmp_50: int, out_Tmp_51: int, out_Tmp_52: int, out_Tmp_53: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} out_sdv_35 == 1 || out_sdv_35 == 0 || out_sdv_35 == in_sdv_35;
  free ensures {:va_keep} out_ntStatus_1 == 0 || out_ntStatus_1 == -1073741811 || out_ntStatus_1 == in_ntStatus_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcFindPeerDeviceObject_loop_L21(in_DevExt_6: int, in_sdv_40: int, in_AvcIrb_1: int, in_ntStatus_2: int, in_Entry_1: int, in_vslice_dummy_var_14: int) returns (out_DevExt_6: int, out_sdv_40: int, out_ntStatus_2: int, out_Entry_1: int, out_vslice_dummy_var_14: int)
{

  entry:
    out_DevExt_6, out_sdv_40, out_ntStatus_2, out_Entry_1, out_vslice_dummy_var_14 := in_DevExt_6, in_sdv_40, in_ntStatus_2, in_Entry_1, in_vslice_dummy_var_14;
    goto L21, exit;

  exit:
    return;

  L21:
    goto anon11_Else;

  anon11_Else:
    goto anon12_Else;

  anon12_Else:
    assume {:partition} out_ntStatus_2 != 0;
    call {:si_unique_call 2015} out_sdv_40 := sdv_containing_record(out_Entry_1, 72);
    out_DevExt_6 := out_sdv_40;
    assume {:nonnull} in_AvcIrb_1 != 0;
    assume in_AvcIrb_1 > 0;
    assume {:nonnull} out_DevExt_6 != 0;
    assume out_DevExt_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} in_AvcIrb_1 != 0;
    assume in_AvcIrb_1 > 0;
    assume {:nonnull} out_DevExt_6 != 0;
    assume out_DevExt_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 2014} out_vslice_dummy_var_14 := sdv_ObReferenceObject(0);
    assume {:nonnull} in_AvcIrb_1 != 0;
    assume in_AvcIrb_1 > 0;
    assume {:nonnull} out_DevExt_6 != 0;
    assume out_DevExt_6 > 0;
    out_ntStatus_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} out_Entry_1 != 0;
    assume out_Entry_1 > 0;
    havoc out_Entry_1;
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 2016} {:si_old_unique_call 1} out_DevExt_6, out_sdv_40, out_ntStatus_2, out_Entry_1, out_vslice_dummy_var_14 := AvcFindPeerDeviceObject_loop_L21(out_DevExt_6, out_sdv_40, in_AvcIrb_1, out_ntStatus_2, out_Entry_1, out_vslice_dummy_var_14);
    return;

  anon13_Then:
    goto L32;

  anon15_Then:
    goto L32;
}



procedure {:LoopProcedure} AvcFindPeerDeviceObject_loop_L21(in_DevExt_6: int, in_sdv_40: int, in_AvcIrb_1: int, in_ntStatus_2: int, in_Entry_1: int, in_vslice_dummy_var_14: int) returns (out_DevExt_6: int, out_sdv_40: int, out_ntStatus_2: int, out_Entry_1: int, out_vslice_dummy_var_14: int);
  free ensures {:va_keep} out_ntStatus_2 == 0 || out_ntStatus_2 == in_ntStatus_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcStopSelectedFCPProcessing_loop_L23(in_Irp_6: int, in_sdv_42: int, in_sdv_44: int, in_IrpEntry_1: int, in_PendingIrpList: int) returns (out_Irp_6: int, out_sdv_42: int, out_sdv_44: int, out_IrpEntry_1: int)
{

  entry:
    out_Irp_6, out_sdv_42, out_sdv_44, out_IrpEntry_1 := in_Irp_6, in_sdv_42, in_sdv_44, in_IrpEntry_1;
    goto L23, exit;

  exit:
    return;

  L23:
    call {:si_unique_call 2017} out_sdv_42 := sdv_IsListEmpty(0);
    goto anon3_Else;

  anon3_Else:
    assume {:partition} out_sdv_42 == 0;
    call {:si_unique_call 2018} out_IrpEntry_1 := RemoveHeadList(in_PendingIrpList);
    call {:si_unique_call 2019} out_sdv_44 := sdv_containing_record(out_IrpEntry_1, 88);
    out_Irp_6 := out_sdv_44;
    assume {:nonnull} out_Irp_6 != 0;
    assume out_Irp_6 > 0;
    assume {:nonnull} out_Irp_6 != 0;
    assume out_Irp_6 > 0;
    call {:si_unique_call 2020} sdv_IoCompleteRequest(0, 0);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    call {:si_unique_call 2021} {:si_old_unique_call 1} out_Irp_6, out_sdv_42, out_sdv_44, out_IrpEntry_1 := AvcStopSelectedFCPProcessing_loop_L23(out_Irp_6, out_sdv_42, out_sdv_44, out_IrpEntry_1, in_PendingIrpList);
    return;
}



procedure {:LoopProcedure} AvcStopSelectedFCPProcessing_loop_L23(in_Irp_6: int, in_sdv_42: int, in_sdv_44: int, in_IrpEntry_1: int, in_PendingIrpList: int) returns (out_Irp_6: int, out_sdv_42: int, out_sdv_44: int, out_IrpEntry_1: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_42 == 1 || out_sdv_42 == 0 || out_sdv_42 == in_sdv_42;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcSubunitAddrsEqual_loop_L14(in_Tmp_72: int, in_idx_1: int, in_Tmp_75: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_72: int, out_idx_1: int, out_Tmp_75: int)
{

  entry:
    out_Tmp_72, out_idx_1, out_Tmp_75 := in_Tmp_72, in_idx_1, in_Tmp_75;
    goto L14, exit;

  exit:
    return;

  L14:
    out_Tmp_72 := out_idx_1;
    assume {:nonnull} in_SubunitAddr1 != 0;
    assume in_SubunitAddr1 > 0;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.INT4[in_SubunitAddr1 + out_Tmp_72 * 4] == 255;
    out_Tmp_75 := out_idx_1;
    assume {:nonnull} in_SubunitAddr2 != 0;
    assume in_SubunitAddr2 > 0;
    goto anon31_Then;

  anon31_Then:
    assume {:partition} Mem_T.INT4[in_SubunitAddr2 + out_Tmp_75 * 4] == 255;
    out_idx_1 := out_idx_1 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    havoc out_idx_1;
    return;
}



procedure {:LoopProcedure} AvcSubunitAddrsEqual_loop_L14(in_Tmp_72: int, in_idx_1: int, in_Tmp_75: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_72: int, out_idx_1: int, out_Tmp_75: int);
  free ensures {:va_keep} out_Tmp_72 == in_idx_1 || out_Tmp_72 == in_Tmp_72;
  free ensures {:va_keep} out_Tmp_75 == in_idx_1 || out_Tmp_75 == in_Tmp_75;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcSubunitAddrsEqual_loop_L23(in_Tmp_66: int, in_idx_1: int, in_Tmp_74: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_66: int, out_idx_1: int, out_Tmp_74: int)
{

  entry:
    out_Tmp_66, out_idx_1, out_Tmp_74 := in_Tmp_66, in_idx_1, in_Tmp_74;
    goto L23, exit;

  exit:
    return;

  L23:
    out_Tmp_66 := out_idx_1;
    assume {:nonnull} in_SubunitAddr1 != 0;
    assume in_SubunitAddr1 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.INT4[in_SubunitAddr1 + out_Tmp_66 * 4] == 255;
    out_Tmp_74 := out_idx_1;
    assume {:nonnull} in_SubunitAddr2 != 0;
    assume in_SubunitAddr2 > 0;
    goto anon35_Then;

  anon35_Then:
    assume {:partition} Mem_T.INT4[in_SubunitAddr2 + out_Tmp_74 * 4] == 255;
    out_idx_1 := out_idx_1 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    havoc out_idx_1;
    return;
}



procedure {:LoopProcedure} AvcSubunitAddrsEqual_loop_L23(in_Tmp_66: int, in_idx_1: int, in_Tmp_74: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_66: int, out_idx_1: int, out_Tmp_74: int);
  free ensures {:va_keep} out_Tmp_66 == in_idx_1 || out_Tmp_66 == in_Tmp_66;
  free ensures {:va_keep} out_Tmp_74 == in_idx_1 || out_Tmp_74 == in_Tmp_74;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcRequestCompletion_sdv_static_function_2_loop_L183(in_TargetExt: int, in_Entry_2: int, in_DevExt_10: int, in_HandlerFound: int, in_Command_8: int, in_sdv_67: int, in_Opcode_1: int) returns (out_TargetExt: int, out_Entry_2: int, out_HandlerFound: int, out_sdv_67: int)
{

  entry:
    out_TargetExt, out_Entry_2, out_HandlerFound, out_sdv_67 := in_TargetExt, in_Entry_2, in_HandlerFound, in_sdv_67;
    goto L183, exit;

  exit:
    return;

  L183:
    goto anon64_Else;

  anon64_Else:
    goto anon65_Else;

  anon65_Else:
    assume {:partition} out_HandlerFound == 0;
    call {:si_unique_call 2023} out_sdv_67 := sdv_containing_record(out_Entry_2, 72);
    out_TargetExt := out_sdv_67;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} out_TargetExt != in_DevExt_10;
    call {:si_unique_call 2022} out_HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_2(out_TargetExt, in_Opcode_1, in_Command_8);
    goto L194;

  L194:
    assume {:nonnull} out_Entry_2 != 0;
    assume out_Entry_2 > 0;
    havoc out_Entry_2;
    goto L194_dummy;

  L194_dummy:
    call {:si_unique_call 2024} {:si_old_unique_call 1} out_TargetExt, out_Entry_2, out_HandlerFound, out_sdv_67 := AvcRequestCompletion_sdv_static_function_2_loop_L183(out_TargetExt, out_Entry_2, in_DevExt_10, out_HandlerFound, in_Command_8, out_sdv_67, in_Opcode_1);
    return;

  anon69_Then:
    assume {:partition} out_TargetExt == in_DevExt_10;
    goto L194;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_2_loop_L183(in_TargetExt: int, in_Entry_2: int, in_DevExt_10: int, in_HandlerFound: int, in_Command_8: int, in_sdv_67: int, in_Opcode_1: int) returns (out_TargetExt: int, out_Entry_2: int, out_HandlerFound: int, out_sdv_67: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_HandlerFound == 1 || out_HandlerFound == 0 || out_HandlerFound == in_HandlerFound;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcRequestCompletion_sdv_static_function_2_loop_L129(in_SubunitAddr_2: int, in_Command_8: int, in_Entry_3: int, in_sdv_66: int) returns (out_Entry_3: int, out_sdv_66: int)
{
  var vslice_dummy_var_170: int;

  entry:
    out_Entry_3, out_sdv_66 := in_Entry_3, in_sdv_66;
    goto L129, exit;

  exit:
    return;

  L129:
    goto anon58_Else;

  anon58_Else:
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L135;

  L135:
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 2026} {:si_old_unique_call 1} out_Entry_3, out_sdv_66 := AvcRequestCompletion_sdv_static_function_2_loop_L129(in_SubunitAddr_2, in_Command_8, out_Entry_3, out_sdv_66);
    return;

  anon68_Then:
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    havoc vslice_dummy_var_170;
    call {:si_unique_call 2025} out_sdv_66 := AvcSubunitAddrsEqual(in_SubunitAddr_2, vslice_dummy_var_170);
    goto anon59_Then;

  anon59_Then:
    assume {:partition} out_sdv_66 == 0;
    goto L135;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_2_loop_L129(in_SubunitAddr_2: int, in_Command_8: int, in_Entry_3: int, in_sdv_66: int) returns (out_Entry_3: int, out_sdv_66: int);
  free ensures {:va_keep} out_sdv_66 == 1 || out_sdv_66 == 0 || out_sdv_66 == in_sdv_66;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcRequestCompletion_sdv_static_function_2_loop_L114(in_PdoData_1: int, in_SubunitAddr_2: int, in_sdv_58: int, in_Entry_3: int) returns (out_PdoData_1: int, out_sdv_58: int, out_Entry_3: int)
{
  var vslice_dummy_var_171: int;

  entry:
    out_PdoData_1, out_sdv_58, out_Entry_3 := in_PdoData_1, in_sdv_58, in_Entry_3;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon55_Else;

  anon55_Else:
    out_PdoData_1 := out_Entry_3;
    assume {:nonnull} out_PdoData_1 != 0;
    assume out_PdoData_1 > 0;
    havoc vslice_dummy_var_171;
    call {:si_unique_call 2027} out_sdv_58 := AvcSubunitAddrsEqual(in_SubunitAddr_2, vslice_dummy_var_171);
    goto anon57_Else;

  anon57_Else:
    assume {:partition} out_sdv_58 == 0;
    out_PdoData_1 := 0;
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    call {:si_unique_call 2028} {:si_old_unique_call 1} out_PdoData_1, out_sdv_58, out_Entry_3 := AvcRequestCompletion_sdv_static_function_2_loop_L114(out_PdoData_1, in_SubunitAddr_2, out_sdv_58, out_Entry_3);
    return;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_2_loop_L114(in_PdoData_1: int, in_SubunitAddr_2: int, in_sdv_58: int, in_Entry_3: int) returns (out_PdoData_1: int, out_sdv_58: int, out_Entry_3: int);
  free ensures {:va_keep} out_PdoData_1 == 0 || out_PdoData_1 == in_PdoData_1;
  free ensures {:va_keep} out_sdv_58 == 1 || out_sdv_58 == 0 || out_sdv_58 == in_sdv_58;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcRequestCompletion_sdv_static_function_2_loop_L97(in_PdoData_1: int, in_SubunitAddr_2: int, in_FdoEntry: int, in_sdv_58: int, in_TargetExt_1: int, in_sdv_64: int, in_Command_8: int, in_Entry_3: int, in_sdv_66: int, in_SubunitFound: int, in_vslice_dummy_var_20: int) returns (out_PdoData_1: int, out_FdoEntry: int, out_sdv_58: int, out_TargetExt_1: int, out_sdv_64: int, out_Entry_3: int, out_sdv_66: int, out_SubunitFound: int, out_vslice_dummy_var_20: int)
{
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;

  entry:
    out_PdoData_1, out_FdoEntry, out_sdv_58, out_TargetExt_1, out_sdv_64, out_Entry_3, out_sdv_66, out_SubunitFound, out_vslice_dummy_var_20 := in_PdoData_1, in_FdoEntry, in_sdv_58, in_TargetExt_1, in_sdv_64, in_Entry_3, in_sdv_66, in_SubunitFound, in_vslice_dummy_var_20;
    goto L97, exit;

  exit:
    return;

  L97:
    goto anon53_Else;

  anon53_Else:
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_SubunitFound == 0;
    call {:si_unique_call 2033} out_sdv_64 := sdv_containing_record(out_FdoEntry, 72);
    out_TargetExt_1 := out_sdv_64;
    out_PdoData_1 := 0;
    call {:si_unique_call 2034} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} out_TargetExt_1 != 0;
    assume out_TargetExt_1 > 0;
    havoc out_Entry_3;
    goto L114;

  L114:
    call {:si_unique_call 2032} out_PdoData_1, out_sdv_58, out_Entry_3 := AvcRequestCompletion_sdv_static_function_2_loop_L114(out_PdoData_1, in_SubunitAddr_2, out_sdv_58, out_Entry_3);
    goto L114_last;

  L114_last:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    out_PdoData_1 := out_Entry_3;
    assume {:nonnull} out_PdoData_1 != 0;
    assume out_PdoData_1 > 0;
    havoc vslice_dummy_var_173;
    call {:si_unique_call 2035} out_sdv_58 := AvcSubunitAddrsEqual(in_SubunitAddr_2, vslice_dummy_var_173);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_sdv_58 == 0;
    out_PdoData_1 := 0;
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume false;
    return;

  anon57_Then:
    assume {:partition} out_sdv_58 != 0;
    goto L115;

  L115:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} out_PdoData_1 != 0;
    out_SubunitFound := 1;
    assume {:nonnull} out_TargetExt_1 != 0;
    assume out_TargetExt_1 > 0;
    havoc out_Entry_3;
    goto L129;

  L129:
    call {:si_unique_call 2036} out_Entry_3, out_sdv_66 := AvcRequestCompletion_sdv_static_function_2_loop_L129(in_SubunitAddr_2, in_Command_8, out_Entry_3, out_sdv_66);
    goto L129_last;

  L129_last:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L135;

  L135:
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    assume false;
    return;

  anon68_Then:
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    havoc vslice_dummy_var_174;
    call {:si_unique_call 2037} out_sdv_66 := AvcSubunitAddrsEqual(in_SubunitAddr_2, vslice_dummy_var_174);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} out_sdv_66 != 0;
    call {:si_unique_call 2030} out_vslice_dummy_var_20 := sdv_RemoveEntryList(0);
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    havoc vslice_dummy_var_172;
    call {:si_unique_call 2031} InitializeListHead(vslice_dummy_var_172);
    goto L124;

  L124:
    call {:si_unique_call 2029} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_FdoEntry != 0;
    assume out_FdoEntry > 0;
    havoc out_FdoEntry;
    goto L124_dummy;

  L124_dummy:
    call {:si_unique_call 2038} {:si_old_unique_call 1} out_PdoData_1, out_FdoEntry, out_sdv_58, out_TargetExt_1, out_sdv_64, out_Entry_3, out_sdv_66, out_SubunitFound, out_vslice_dummy_var_20 := AvcRequestCompletion_sdv_static_function_2_loop_L97(out_PdoData_1, in_SubunitAddr_2, out_FdoEntry, out_sdv_58, out_TargetExt_1, out_sdv_64, in_Command_8, out_Entry_3, out_sdv_66, out_SubunitFound, out_vslice_dummy_var_20);
    return;

  anon59_Then:
    assume {:partition} out_sdv_66 == 0;
    goto L135;

  anon58_Then:
    goto L124;

  anon56_Then:
    assume {:partition} out_PdoData_1 == 0;
    goto L124;

  anon55_Then:
    goto L115;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_2_loop_L97(in_PdoData_1: int, in_SubunitAddr_2: int, in_FdoEntry: int, in_sdv_58: int, in_TargetExt_1: int, in_sdv_64: int, in_Command_8: int, in_Entry_3: int, in_sdv_66: int, in_SubunitFound: int, in_vslice_dummy_var_20: int) returns (out_PdoData_1: int, out_FdoEntry: int, out_sdv_58: int, out_TargetExt_1: int, out_sdv_64: int, out_Entry_3: int, out_sdv_66: int, out_SubunitFound: int, out_vslice_dummy_var_20: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_58 == 1 || out_sdv_58 == 0 || out_sdv_58 == in_sdv_58;
  free ensures {:va_keep} out_sdv_66 == 1 || out_sdv_66 == 0 || out_sdv_66 == in_sdv_66;
  free ensures {:va_keep} out_SubunitFound == 1 || out_SubunitFound == in_SubunitFound;
  free ensures {:va_keep} out_vslice_dummy_var_20 == 1 || out_vslice_dummy_var_20 == 0 || out_vslice_dummy_var_20 == in_vslice_dummy_var_20;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcPendingIrpCompletion_loop_L8(in_Irp_9: int, in_Status_7: int, in_IrpStack_2: int, in_CmdIrb_2: int, in_Command_9: int) returns (out_Irp_9: int, out_Status_7: int, out_IrpStack_2: int, out_CmdIrb_2: int)
{
  var vslice_dummy_var_175: int;

  entry:
    out_Irp_9, out_Status_7, out_IrpStack_2, out_CmdIrb_2 := in_Irp_9, in_Status_7, in_IrpStack_2, in_CmdIrb_2;
    goto L8, exit;

  exit:
    return;

  L8:
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_Irp_9 != 0;
    call {:si_unique_call 2042} out_IrpStack_2 := sdv_IoGetCurrentIrpStackLocation(out_Irp_9);
    assume {:nonnull} out_IrpStack_2 != 0;
    assume out_IrpStack_2 > 0;
    havoc out_CmdIrb_2;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    havoc out_Status_7;
    goto L23;

  L23:
    assume {:nonnull} out_Irp_9 != 0;
    assume out_Irp_9 > 0;
    assume {:nonnull} out_Irp_9 != 0;
    assume out_Irp_9 > 0;
    call {:si_unique_call 2039} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2040} out_Irp_9 := AvcDequeueFCPIrp(in_Command_9);
    goto L23_dummy;

  L23_dummy:
    call {:si_unique_call 2043} {:si_old_unique_call 1} out_Irp_9, out_Status_7, out_IrpStack_2, out_CmdIrb_2 := AvcPendingIrpCompletion_loop_L8(out_Irp_9, out_Status_7, out_IrpStack_2, out_CmdIrb_2, in_Command_9);
    return;

  anon15_Then:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    havoc vslice_dummy_var_175;
    call {:si_unique_call 2041} out_Status_7 := AvcUnpackFCPFrame(in_Command_9, Opcode__AVC_COMMAND_IRB(out_CmdIrb_2), 509, vslice_dummy_var_175);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} out_Status_7 == 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    goto L35;

  L35:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    goto L23;

  anon14_Then:
    goto L35;

  anon13_Then:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_9 != 0;
    assume in_Command_9 > 0;
    goto L35;

  anon12_Then:
    assume {:partition} out_Status_7 != 0;
    goto L23;
}



procedure {:LoopProcedure} AvcPendingIrpCompletion_loop_L8(in_Irp_9: int, in_Status_7: int, in_IrpStack_2: int, in_CmdIrb_2: int, in_Command_9: int) returns (out_Irp_9: int, out_Status_7: int, out_IrpStack_2: int, out_CmdIrb_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcFreeCommandContext_loop_L3(in_sdv_72: int, in_sdv_73: int, in_CallbackLink_1: int, in_Command_10: int) returns (out_sdv_72: int, out_sdv_73: int, out_CallbackLink_1: int)
{

  entry:
    out_sdv_72, out_sdv_73, out_CallbackLink_1 := in_sdv_72, in_sdv_73, in_CallbackLink_1;
    goto L3, exit;

  exit:
    return;

  L3:
    call {:si_unique_call 2044} out_sdv_72 := sdv_IsListEmpty(0);
    goto anon5_Else;

  anon5_Else:
    assume {:partition} out_sdv_72 == 0;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    call {:si_unique_call 2045} out_sdv_73 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(in_Command_10));
    out_CallbackLink_1 := out_sdv_73;
    call {:si_unique_call 2046} ExFreeToNPagedLookasideList(AvcCommandLinkPool, out_CallbackLink_1);
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    call {:si_unique_call 2047} {:si_old_unique_call 1} out_sdv_72, out_sdv_73, out_CallbackLink_1 := AvcFreeCommandContext_loop_L3(out_sdv_72, out_sdv_73, out_CallbackLink_1, in_Command_10);
    return;
}



procedure {:LoopProcedure} AvcFreeCommandContext_loop_L3(in_sdv_72: int, in_sdv_73: int, in_CallbackLink_1: int, in_Command_10: int) returns (out_sdv_72: int, out_sdv_73: int, out_CallbackLink_1: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_72 == 1 || out_sdv_72 == 0 || out_sdv_72 == in_sdv_72;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcPackSubunitAddress_loop_L38(in_Tmp_99: int, in_Tmp_102: int, in_idx_2: int, in_Tmp_103: int, in_SubunitID: int, in_Length_1: int, in_Buffer_1: int) returns (out_Tmp_99: int, out_Tmp_102: int, out_idx_2: int, out_Tmp_103: int, out_SubunitID: int)
{

  entry:
    out_Tmp_99, out_Tmp_102, out_idx_2, out_Tmp_103, out_SubunitID := in_Tmp_99, in_Tmp_102, in_idx_2, in_Tmp_103, in_SubunitID;
    goto L38, exit;

  exit:
    return;

  L38:
    goto anon52_Else;

  anon52_Else:
    assume {:partition} in_Length_1 > out_idx_2;
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_SubunitID != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} 255 > out_SubunitID;
    out_Tmp_102 := out_idx_2;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    Mem_T.INT4[in_Buffer_1 + out_Tmp_102 * 4] := out_SubunitID;
    goto L44;

  L44:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} out_SubunitID > 254;
    out_Tmp_103 := out_SubunitID - 254;
    goto L47;

  L47:
    out_SubunitID := out_Tmp_103;
    out_idx_2 := out_idx_2 + 1;
    goto L47_dummy;

  L47_dummy:
    call {:si_unique_call 2048} {:si_old_unique_call 1} out_Tmp_99, out_Tmp_102, out_idx_2, out_Tmp_103, out_SubunitID := AvcPackSubunitAddress_loop_L38(out_Tmp_99, out_Tmp_102, out_idx_2, out_Tmp_103, out_SubunitID, in_Length_1, in_Buffer_1);
    return;

  anon56_Then:
    assume {:partition} 254 >= out_SubunitID;
    out_Tmp_103 := 0;
    goto L47;

  anon55_Then:
    assume {:partition} out_SubunitID >= 255;
    out_Tmp_99 := out_idx_2;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    Mem_T.INT4[in_Buffer_1 + out_Tmp_99 * 4] := 255;
    goto L44;
}



procedure {:LoopProcedure} AvcPackSubunitAddress_loop_L38(in_Tmp_99: int, in_Tmp_102: int, in_idx_2: int, in_Tmp_103: int, in_SubunitID: int, in_Length_1: int, in_Buffer_1: int) returns (out_Tmp_99: int, out_Tmp_102: int, out_idx_2: int, out_Tmp_103: int, out_SubunitID: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcPackSubunitAddress_loop_L19(in_Tmp_100: int, in_Tmp_101: int, in_idx_2: int, in_Tmp_104: int, in_SubunitType_1: int, in_Length_1: int, in_Buffer_1: int, in_boogieTmp: int) returns (out_Tmp_100: int, out_Tmp_101: int, out_idx_2: int, out_Tmp_104: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_100, out_Tmp_101, out_idx_2, out_Tmp_104, out_boogieTmp := in_Tmp_100, in_Tmp_101, in_idx_2, in_Tmp_104, in_boogieTmp;
    goto L19, exit;

  exit:
    return;

  L19:
    goto anon45_Else;

  anon45_Else:
    assume {:partition} in_Length_1 > out_idx_2;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} out_idx_2 != 0;
    out_Tmp_101 := out_idx_2;
    out_Tmp_104 := out_idx_2;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    assume {:nonnull} in_SubunitType_1 != 0;
    assume in_SubunitType_1 > 0;
    Mem_T.INT4[in_Buffer_1 + out_Tmp_101 * 4] := Mem_T.INT4[in_SubunitType_1 + out_Tmp_104 * 4];
    goto L24;

  L24:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_idx_2 != 0;
    goto L26;

  L26:
    out_Tmp_100 := out_idx_2;
    assume {:nonnull} in_SubunitType_1 != 0;
    assume in_SubunitType_1 > 0;
    goto anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.INT4[in_SubunitType_1 + out_Tmp_100 * 4] == 255;
    goto L27;

  L27:
    out_idx_2 := out_idx_2 + 1;
    goto L27_dummy;

  L27_dummy:
    call {:si_unique_call 2050} {:si_old_unique_call 1} out_Tmp_100, out_Tmp_101, out_idx_2, out_Tmp_104, out_boogieTmp := AvcPackSubunitAddress_loop_L19(out_Tmp_100, out_Tmp_101, out_idx_2, out_Tmp_104, in_SubunitType_1, in_Length_1, in_Buffer_1, out_boogieTmp);
    return;

  anon48_Then:
    assume {:partition} out_idx_2 == 0;
    assume {:nonnull} in_SubunitType_1 != 0;
    assume in_SubunitType_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.INT4[in_SubunitType_1] == 30;
    goto L27;

  anon49_Then:
    assume {:partition} Mem_T.INT4[in_SubunitType_1] != 30;
    goto L26;

  anon47_Then:
    assume {:partition} out_idx_2 == 0;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    call {:si_unique_call 2049} out_boogieTmp := corral_nondet();
    Mem_T.INT4[in_Buffer_1] := out_boogieTmp;
    goto L24;
}



procedure {:LoopProcedure} AvcPackSubunitAddress_loop_L19(in_Tmp_100: int, in_Tmp_101: int, in_idx_2: int, in_Tmp_104: int, in_SubunitType_1: int, in_Length_1: int, in_Buffer_1: int, in_boogieTmp: int) returns (out_Tmp_100: int, out_Tmp_101: int, out_idx_2: int, out_Tmp_104: int, out_boogieTmp: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcValidateSubunitAddress_loop_L21(in_Tmp_115: int, in_idx_3: int, in_Buffer_2: int, in_cbIn: int) returns (out_Tmp_115: int, out_idx_3: int)
{

  entry:
    out_Tmp_115, out_idx_3 := in_Tmp_115, in_idx_3;
    goto L21, exit;

  exit:
    return;

  L21:
    goto anon41_Else;

  anon41_Else:
    assume {:partition} in_cbIn > out_idx_3;
    out_Tmp_115 := out_idx_3;
    assume {:nonnull} in_Buffer_2 != 0;
    assume in_Buffer_2 > 0;
    goto anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.INT4[in_Buffer_2 + out_Tmp_115 * 4] == 255;
    out_idx_3 := out_idx_3 + 1;
    goto anon50_Else_dummy;

  anon50_Else_dummy:
    havoc out_idx_3;
    return;
}



procedure {:LoopProcedure} AvcValidateSubunitAddress_loop_L21(in_Tmp_115: int, in_idx_3: int, in_Buffer_2: int, in_cbIn: int) returns (out_Tmp_115: int, out_idx_3: int);
  free ensures {:va_keep} out_Tmp_115 == in_idx_3 || out_Tmp_115 == in_Tmp_115;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcValidateSubunitAddress_loop_L14(in_Tmp_111: int, in_idx_3: int, in_Buffer_2: int, in_cbIn: int) returns (out_Tmp_111: int, out_idx_3: int)
{

  entry:
    out_Tmp_111, out_idx_3 := in_Tmp_111, in_idx_3;
    goto L14, exit;

  exit:
    return;

  L14:
    goto anon39_Else;

  anon39_Else:
    assume {:partition} in_cbIn > out_idx_3;
    out_Tmp_111 := out_idx_3;
    assume {:nonnull} in_Buffer_2 != 0;
    assume in_Buffer_2 > 0;
    goto anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.INT4[in_Buffer_2 + out_Tmp_111 * 4] == 255;
    out_idx_3 := out_idx_3 + 1;
    goto anon52_Else_dummy;

  anon52_Else_dummy:
    havoc out_idx_3;
    return;
}



procedure {:LoopProcedure} AvcValidateSubunitAddress_loop_L14(in_Tmp_111: int, in_idx_3: int, in_Buffer_2: int, in_cbIn: int) returns (out_Tmp_111: int, out_idx_3: int);
  free ensures {:va_keep} out_Tmp_111 == in_idx_3 || out_Tmp_111 == in_Tmp_111;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcHandleUnitCommand_sdv_static_function_2_loop_L32(in_Offset_3: int, in_VirtualDevExt: int, in_SubunitInfoBytes: int, in_Tmp_122: int, in_sdv_79: int, in_Tmp_125: int, in_Entry_4: int, in_BytesUsed_3: int, in_Tmp_126: int) returns (out_Offset_3: int, out_VirtualDevExt: int, out_Tmp_122: int, out_sdv_79: int, out_Tmp_125: int, out_Entry_4: int, out_Tmp_126: int)
{

  entry:
    out_Offset_3, out_VirtualDevExt, out_Tmp_122, out_sdv_79, out_Tmp_125, out_Entry_4, out_Tmp_126 := in_Offset_3, in_VirtualDevExt, in_Tmp_122, in_sdv_79, in_Tmp_125, in_Entry_4, in_Tmp_126;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 2051} out_sdv_79 := sdv_containing_record(out_Entry_4, 72);
    out_VirtualDevExt := out_sdv_79;
    assume {:nonnull} in_BytesUsed_3 != 0;
    assume in_BytesUsed_3 > 0;
    Mem_T.INT4[in_BytesUsed_3] := 0;
    call {:si_unique_call 2052} sdv_KeAcquireSpinLockAtDpcLevel(0);
    out_Tmp_125 := out_Offset_3;
    out_Tmp_126 := in_SubunitInfoBytes + out_Tmp_125 * 4;
    out_Tmp_122 := 32 - out_Offset_3;
    call {:si_unique_call 2053} AvcPackSubunitInfo(out_VirtualDevExt, out_Tmp_122, out_Tmp_126, in_BytesUsed_3);
    assume {:nonnull} in_BytesUsed_3 != 0;
    assume in_BytesUsed_3 > 0;
    out_Offset_3 := out_Offset_3 + Mem_T.INT4[in_BytesUsed_3];
    call {:si_unique_call 2054} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_Entry_4 != 0;
    assume out_Entry_4 > 0;
    havoc out_Entry_4;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 2055} {:si_old_unique_call 1} out_Offset_3, out_VirtualDevExt, out_Tmp_122, out_sdv_79, out_Tmp_125, out_Entry_4, out_Tmp_126 := AvcHandleUnitCommand_sdv_static_function_2_loop_L32(out_Offset_3, out_VirtualDevExt, in_SubunitInfoBytes, out_Tmp_122, out_sdv_79, out_Tmp_125, out_Entry_4, in_BytesUsed_3, out_Tmp_126);
    return;
}



procedure {:LoopProcedure} AvcHandleUnitCommand_sdv_static_function_2_loop_L32(in_Offset_3: int, in_VirtualDevExt: int, in_SubunitInfoBytes: int, in_Tmp_122: int, in_sdv_79: int, in_Tmp_125: int, in_Entry_4: int, in_BytesUsed_3: int, in_Tmp_126: int) returns (out_Offset_3: int, out_VirtualDevExt: int, out_Tmp_122: int, out_sdv_79: int, out_Tmp_125: int, out_Entry_4: int, out_Tmp_126: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcCommand_sdv_static_function_2_loop_L74(in_sdv_89: int, in_sdv_90: int, in_CallbackLink_2: int, in_Command_12: int) returns (out_sdv_89: int, out_sdv_90: int, out_CallbackLink_2: int)
{

  entry:
    out_sdv_89, out_sdv_90, out_CallbackLink_2 := in_sdv_89, in_sdv_90, in_CallbackLink_2;
    goto L74, exit;

  exit:
    return;

  L74:
    call {:si_unique_call 2056} out_sdv_90 := sdv_IsListEmpty(0);
    goto anon47_Else;

  anon47_Else:
    assume {:partition} out_sdv_90 == 0;
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    call {:si_unique_call 2057} out_sdv_89 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(in_Command_12));
    out_CallbackLink_2 := out_sdv_89;
    call {:si_unique_call 2058} ExFreeToNPagedLookasideList(AvcCommandLinkPool, out_CallbackLink_2);
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    call {:si_unique_call 2059} {:si_old_unique_call 1} out_sdv_89, out_sdv_90, out_CallbackLink_2 := AvcCommand_sdv_static_function_2_loop_L74(out_sdv_89, out_sdv_90, out_CallbackLink_2, in_Command_12);
    return;
}



procedure {:LoopProcedure} AvcCommand_sdv_static_function_2_loop_L74(in_sdv_89: int, in_sdv_90: int, in_CallbackLink_2: int, in_Command_12: int) returns (out_sdv_89: int, out_sdv_90: int, out_CallbackLink_2: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_90 == 1 || out_sdv_90 == 0 || out_sdv_90 == in_sdv_90;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcCommand_sdv_static_function_2_loop_L50(in_Retries: int, in_OldIrql_7: int, in_Irp_11: int, in_WaitForEvent: int, in_Tmp_141: int, in_Status_11: int, in_OldIrql_8: int, in_sdv_92: int, in_NextIrpStack_5: int, in_sdv_97: int, in_WaitForAbort: int, in_InvalidGenLimit: int, in_tmDelay: int, in_DevExt_15: int, in_Command_12: int, in_vslice_dummy_var_29: int, in_vslice_dummy_var_30: int, in_vslice_dummy_var_31: int, in_vslice_dummy_var_32: int, in_vslice_dummy_var_34: int) returns (out_Retries: int, out_OldIrql_7: int, out_WaitForEvent: int, out_Tmp_141: int, out_Status_11: int, out_OldIrql_8: int, out_sdv_92: int, out_NextIrpStack_5: int, out_sdv_97: int, out_WaitForAbort: int, out_InvalidGenLimit: int, out_vslice_dummy_var_29: int, out_vslice_dummy_var_30: int, out_vslice_dummy_var_31: int, out_vslice_dummy_var_32: int, out_vslice_dummy_var_34: int)
{
  var vslice_dummy_var_176: int;

  entry:
    out_Retries, out_OldIrql_7, out_WaitForEvent, out_Tmp_141, out_Status_11, out_OldIrql_8, out_sdv_92, out_NextIrpStack_5, out_sdv_97, out_WaitForAbort, out_InvalidGenLimit, out_vslice_dummy_var_29, out_vslice_dummy_var_30, out_vslice_dummy_var_31, out_vslice_dummy_var_32, out_vslice_dummy_var_34 := in_Retries, in_OldIrql_7, in_WaitForEvent, in_Tmp_141, in_Status_11, in_OldIrql_8, in_sdv_92, in_NextIrpStack_5, in_sdv_97, in_WaitForAbort, in_InvalidGenLimit, in_vslice_dummy_var_29, in_vslice_dummy_var_30, in_vslice_dummy_var_31, in_vslice_dummy_var_32, in_vslice_dummy_var_34;
    goto L50, exit;

  exit:
    return;

  L50:
    call {:si_unique_call 2060} out_NextIrpStack_5 := sdv_IoGetNextIrpStackLocation(in_Irp_11);
    assume {:nonnull} out_NextIrpStack_5 != 0;
    assume out_NextIrpStack_5 > 0;
    assume {:nonnull} out_NextIrpStack_5 != 0;
    assume out_NextIrpStack_5 > 0;
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    assume {:nonnull} out_NextIrpStack_5 != 0;
    assume out_NextIrpStack_5 > 0;
    call {:si_unique_call 2061} out_Status_11 := AvcPrepareForResponseCallback(in_DevExt_15, in_Command_12);
    goto anon45_Then;

  anon45_Then:
    assume {:partition} out_Status_11 == 0;
    assume {:nonnull} in_DevExt_15 != 0;
    assume in_DevExt_15 > 0;
    havoc vslice_dummy_var_176;
    call {:si_unique_call 2065} out_Status_11 := Avc_SubmitIrpSynch(vslice_dummy_var_176, in_Irp_11);
    goto anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_Status_11 != 0;
    out_WaitForAbort := 0;
    call {:si_unique_call 2077} out_Tmp_141 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_141 != 0;
    assume out_Tmp_141 > 0;
    Mem_T.INT4[out_Tmp_141] := out_OldIrql_8;
    call {:si_unique_call 2078} sdv_KeAcquireSpinLock(0, out_Tmp_141);
    assume {:nonnull} out_Tmp_141 != 0;
    assume out_Tmp_141 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_141];
    call {:si_unique_call 2079} out_sdv_92 := sdv_IsListEmpty(0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} out_sdv_92 != 0;
    out_WaitForAbort := 1;
    goto L104;

  L104:
    call {:si_unique_call 2074} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} out_WaitForAbort != 0;
    call {:si_unique_call 2073} out_vslice_dummy_var_30 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    havoc out_Status_11;
    goto L108;

  L108:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 258 == out_Status_11;
    out_Status_11 := -1073741248;
    goto L113;

  L113:
    goto anon52_Else;

  anon52_Else:
    assume {:partition} out_Status_11 != 0;
    assume {:nonnull} in_DevExt_15 != 0;
    assume in_DevExt_15 > 0;
    goto anon53_Else;

  anon53_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} -1072562032 == out_Status_11;
    goto anon56_Else;

  anon56_Else:
    assume {:partition} out_InvalidGenLimit != 0;
    assume {:nonnull} in_tmDelay != 0;
    assume in_tmDelay > 0;
    assume {:nonnull} in_tmDelay != 0;
    assume in_tmDelay > 0;
    call {:si_unique_call 2062} out_vslice_dummy_var_34 := KeDelayExecutionThread(0, 0, 0);
    out_InvalidGenLimit := out_InvalidGenLimit - 1;
    goto anon56_Else_dummy;

  anon56_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 2080} {:si_old_unique_call 1} out_Retries, out_OldIrql_7, out_WaitForEvent, out_Tmp_141, out_Status_11, out_OldIrql_8, out_sdv_92, out_NextIrpStack_5, out_sdv_97, out_WaitForAbort, out_InvalidGenLimit, out_vslice_dummy_var_29, out_vslice_dummy_var_30, out_vslice_dummy_var_31, out_vslice_dummy_var_32, out_vslice_dummy_var_34 := AvcCommand_sdv_static_function_2_loop_L50(out_Retries, out_OldIrql_7, in_Irp_11, out_WaitForEvent, out_Tmp_141, out_Status_11, out_OldIrql_8, out_sdv_92, out_NextIrpStack_5, out_sdv_97, out_WaitForAbort, out_InvalidGenLimit, in_tmDelay, in_DevExt_15, in_Command_12, out_vslice_dummy_var_29, out_vslice_dummy_var_30, out_vslice_dummy_var_31, out_vslice_dummy_var_32, out_vslice_dummy_var_34);
    return;

  anon54_Then:
    assume {:partition} -1072562032 != out_Status_11;
    goto anon55_Else;

  anon55_Else:
    assume {:partition} 258 == out_Status_11;
    goto anon57_Else;

  anon57_Else:
    assume {:partition} out_Retries != 0;
    out_Retries := out_Retries - 1;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    goto L_BAF_0;

  anon51_Then:
    assume {:partition} 258 != out_Status_11;
    goto L113;

  anon50_Then:
    assume {:partition} out_WaitForAbort == 0;
    goto L108;

  anon49_Then:
    assume {:partition} out_sdv_92 == 0;
    call {:si_unique_call 2075} out_vslice_dummy_var_29 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2076} InitializeListHead(in_Command_12);
    goto L104;

  anon48_Then:
    assume {:partition} out_Status_11 == 0;
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    call {:si_unique_call 2064} out_Status_11 := KeWaitForSingleObject(0, 0, 0, 0, Timeout__AVC_COMMAND_CONTEXT(in_Command_12));
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 258 == out_Status_11;
    out_WaitForEvent := 0;
    call {:si_unique_call 2070} out_Tmp_141 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_141 != 0;
    assume out_Tmp_141 > 0;
    Mem_T.INT4[out_Tmp_141] := out_OldIrql_7;
    call {:si_unique_call 2071} sdv_KeAcquireSpinLock(0, out_Tmp_141);
    assume {:nonnull} out_Tmp_141 != 0;
    assume out_Tmp_141 > 0;
    out_OldIrql_7 := Mem_T.INT4[out_Tmp_141];
    call {:si_unique_call 2072} out_sdv_97 := sdv_IsListEmpty(0);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_sdv_97 != 0;
    out_WaitForEvent := 1;
    goto L150;

  L150:
    call {:si_unique_call 2067} sdv_KeReleaseSpinLock(0, out_OldIrql_7);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_WaitForEvent != 0;
    call {:si_unique_call 2066} out_vslice_dummy_var_32 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    havoc out_Status_11;
    goto L154;

  L154:
    call {:si_unique_call 2063} IoReuseIrp(in_Irp_11, -1073741637);
    goto L113;

  anon61_Then:
    assume {:partition} out_WaitForEvent == 0;
    goto L154;

  anon60_Then:
    assume {:partition} out_sdv_97 == 0;
    call {:si_unique_call 2068} out_vslice_dummy_var_31 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2069} InitializeListHead(in_Command_12);
    goto L150;

  anon58_Then:
    assume {:partition} 258 != out_Status_11;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} out_Status_11 == 0;
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    havoc out_Status_11;
    goto L113;

  anon59_Then:
    assume {:partition} out_Status_11 != 0;
    goto L113;
}



procedure {:LoopProcedure} AvcCommand_sdv_static_function_2_loop_L50(in_Retries: int, in_OldIrql_7: int, in_Irp_11: int, in_WaitForEvent: int, in_Tmp_141: int, in_Status_11: int, in_OldIrql_8: int, in_sdv_92: int, in_NextIrpStack_5: int, in_sdv_97: int, in_WaitForAbort: int, in_InvalidGenLimit: int, in_tmDelay: int, in_DevExt_15: int, in_Command_12: int, in_vslice_dummy_var_29: int, in_vslice_dummy_var_30: int, in_vslice_dummy_var_31: int, in_vslice_dummy_var_32: int, in_vslice_dummy_var_34: int) returns (out_Retries: int, out_OldIrql_7: int, out_WaitForEvent: int, out_Tmp_141: int, out_Status_11: int, out_OldIrql_8: int, out_sdv_92: int, out_NextIrpStack_5: int, out_sdv_97: int, out_WaitForAbort: int, out_InvalidGenLimit: int, out_vslice_dummy_var_29: int, out_vslice_dummy_var_30: int, out_vslice_dummy_var_31: int, out_vslice_dummy_var_32: int, out_vslice_dummy_var_34: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_WaitForEvent == 1 || out_WaitForEvent == 0 || out_WaitForEvent == in_WaitForEvent;
  free ensures {:va_keep} out_sdv_92 == 1 || out_sdv_92 == 0 || out_sdv_92 == in_sdv_92;
  free ensures {:va_keep} out_sdv_97 == 1 || out_sdv_97 == 0 || out_sdv_97 == in_sdv_97;
  free ensures {:va_keep} out_WaitForAbort == 1 || out_WaitForAbort == 0 || out_WaitForAbort == in_WaitForAbort;
  free ensures {:va_keep} out_vslice_dummy_var_29 == 1 || out_vslice_dummy_var_29 == 0 || out_vslice_dummy_var_29 == in_vslice_dummy_var_29;
  free ensures {:va_keep} out_vslice_dummy_var_30 == 258 || out_vslice_dummy_var_30 == 0 || out_vslice_dummy_var_30 == in_vslice_dummy_var_30;
  free ensures {:va_keep} out_vslice_dummy_var_31 == 1 || out_vslice_dummy_var_31 == 0 || out_vslice_dummy_var_31 == in_vslice_dummy_var_31;
  free ensures {:va_keep} out_vslice_dummy_var_32 == 258 || out_vslice_dummy_var_32 == 0 || out_vslice_dummy_var_32 == in_vslice_dummy_var_32;
  free ensures {:va_keep} out_vslice_dummy_var_34 == 0 || out_vslice_dummy_var_34 == -1073741823 || out_vslice_dummy_var_34 == in_vslice_dummy_var_34;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcCommand_sdv_static_function_2_loop_L32(in_Tmp_138: int, in_Tmp_140: int, in_Padding_1: int, in_Tmp_142: int, in_Command_12: int) returns (out_Tmp_138: int, out_Tmp_140: int, out_Padding_1: int, out_Tmp_142: int)
{

  entry:
    out_Tmp_138, out_Tmp_140, out_Padding_1, out_Tmp_142 := in_Tmp_138, in_Tmp_140, in_Padding_1, in_Tmp_142;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon43_Else;

  anon43_Else:
    assume {:partition} INTMOD(out_Padding_1, 4) != 0;
    out_Tmp_138 := out_Padding_1;
    out_Padding_1 := out_Padding_1 + 1;
    out_Tmp_142 := out_Tmp_138;
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    havoc out_Tmp_140;
    assume {:nonnull} out_Tmp_140 != 0;
    assume out_Tmp_140 > 0;
    Mem_T.INT4[out_Tmp_140 + out_Tmp_142 * 4] := 0;
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    call {:si_unique_call 2081} {:si_old_unique_call 1} out_Tmp_138, out_Tmp_140, out_Padding_1, out_Tmp_142 := AvcCommand_sdv_static_function_2_loop_L32(out_Tmp_138, out_Tmp_140, out_Padding_1, out_Tmp_142, in_Command_12);
    return;
}



procedure {:LoopProcedure} AvcCommand_sdv_static_function_2_loop_L32(in_Tmp_138: int, in_Tmp_140: int, in_Padding_1: int, in_Tmp_142: int, in_Command_12: int) returns (out_Tmp_138: int, out_Tmp_140: int, out_Padding_1: int, out_Tmp_142: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcDequeueFCPIrp_loop_L11(in_sdv_101: int, in_listEntry: int, in_oldCancelRoutine_2: int, in_sdv_103: int, in_nextIrp: int, in_Command_13: int) returns (out_sdv_101: int, out_listEntry: int, out_oldCancelRoutine_2: int, out_sdv_103: int, out_nextIrp: int)
{

  entry:
    out_sdv_101, out_listEntry, out_oldCancelRoutine_2, out_sdv_103, out_nextIrp := in_sdv_101, in_listEntry, in_oldCancelRoutine_2, in_sdv_103, in_nextIrp;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon7_Then;

  anon7_Then:
    assume {:partition} out_nextIrp == 0;
    call {:si_unique_call 2086} out_sdv_101 := sdv_IsListEmpty(0);
    goto anon8_Else;

  anon8_Else:
    assume {:partition} out_sdv_101 == 0;
    assume {:nonnull} in_Command_13 != 0;
    assume in_Command_13 > 0;
    call {:si_unique_call 2083} out_listEntry := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(in_Command_13));
    call {:si_unique_call 2084} out_sdv_103 := sdv_containing_record(out_listEntry, 88);
    out_nextIrp := out_sdv_103;
    call {:si_unique_call 2085} out_oldCancelRoutine_2 := sdv_IoSetCancelRoutine(out_nextIrp, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} out_oldCancelRoutine_2 == 0;
    assume {:nonnull} out_nextIrp != 0;
    assume out_nextIrp > 0;
    call {:si_unique_call 2082} InitializeListHead(ListEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(out_nextIrp))));
    out_nextIrp := 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 2087} {:si_old_unique_call 1} out_sdv_101, out_listEntry, out_oldCancelRoutine_2, out_sdv_103, out_nextIrp := AvcDequeueFCPIrp_loop_L11(out_sdv_101, out_listEntry, out_oldCancelRoutine_2, out_sdv_103, out_nextIrp, in_Command_13);
    return;

  anon9_Then:
    assume {:partition} out_oldCancelRoutine_2 != 0;
    goto anon9_Then_dummy;

  anon9_Then_dummy:
    goto L_BAF_1;
}



procedure {:LoopProcedure} AvcDequeueFCPIrp_loop_L11(in_sdv_101: int, in_listEntry: int, in_oldCancelRoutine_2: int, in_sdv_103: int, in_nextIrp: int, in_Command_13: int) returns (out_sdv_101: int, out_listEntry: int, out_oldCancelRoutine_2: int, out_sdv_103: int, out_nextIrp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_101 == 1 || out_sdv_101 == 0 || out_sdv_101 == in_sdv_101;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcResponseCompletion_sdv_static_function_2_loop_L110(in_Tmp_152: int, in_Tmp_158: int, in_max: int, in_Command_14: int, in_idx_6: int, in_Opcode_3: int) returns (out_Tmp_152: int, out_Tmp_158: int, out_idx_6: int)
{

  entry:
    out_Tmp_152, out_Tmp_158, out_idx_6 := in_Tmp_152, in_Tmp_158, in_idx_6;
    goto L110, exit;

  exit:
    return;

  L110:
    goto anon127_Else;

  anon127_Else:
    assume {:partition} in_max >= out_idx_6;
    out_Tmp_158 := out_idx_6;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_152;
    assume {:nonnull} out_Tmp_152 != 0;
    assume out_Tmp_152 > 0;
    goto anon165_Then;

  anon165_Then:
    assume {:partition} in_Opcode_3 != Mem_T.INT4[out_Tmp_152 + out_Tmp_158 * 4];
    out_idx_6 := out_idx_6 + 1;
    goto anon165_Then_dummy;

  anon165_Then_dummy:
    call {:si_unique_call 2088} {:si_old_unique_call 1} out_Tmp_152, out_Tmp_158, out_idx_6 := AvcResponseCompletion_sdv_static_function_2_loop_L110(out_Tmp_152, out_Tmp_158, in_max, in_Command_14, out_idx_6, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_2_loop_L110(in_Tmp_152: int, in_Tmp_158: int, in_max: int, in_Command_14: int, in_idx_6: int, in_Opcode_3: int) returns (out_Tmp_152: int, out_Tmp_158: int, out_idx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcResponseCompletion_sdv_static_function_2_loop_L136(in_Tmp_150: int, in_Tmp_155: int, in_idx_5: int, in_Command_14: int, in_max_1: int, in_Opcode_3: int) returns (out_Tmp_150: int, out_Tmp_155: int, out_idx_5: int)
{

  entry:
    out_Tmp_150, out_Tmp_155, out_idx_5 := in_Tmp_150, in_Tmp_155, in_idx_5;
    goto L136, exit;

  exit:
    return;

  L136:
    goto anon132_Else;

  anon132_Else:
    assume {:partition} in_max_1 >= out_idx_5;
    out_Tmp_155 := out_idx_5;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_150;
    assume {:nonnull} out_Tmp_150 != 0;
    assume out_Tmp_150 > 0;
    goto anon164_Then;

  anon164_Then:
    assume {:partition} in_Opcode_3 != Mem_T.INT4[out_Tmp_150 + out_Tmp_155 * 4];
    out_idx_5 := out_idx_5 + 1;
    goto anon164_Then_dummy;

  anon164_Then_dummy:
    call {:si_unique_call 2089} {:si_old_unique_call 1} out_Tmp_150, out_Tmp_155, out_idx_5 := AvcResponseCompletion_sdv_static_function_2_loop_L136(out_Tmp_150, out_Tmp_155, out_idx_5, in_Command_14, in_max_1, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_2_loop_L136(in_Tmp_150: int, in_Tmp_155: int, in_idx_5: int, in_Command_14: int, in_max_1: int, in_Opcode_3: int) returns (out_Tmp_150: int, out_Tmp_155: int, out_idx_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcResponseCompletion_sdv_static_function_2_loop_L159(in_Tmp_151: int, in_idx_4: int, in_Tmp_153: int, in_Command_14: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_151: int, out_idx_4: int, out_Tmp_153: int)
{

  entry:
    out_Tmp_151, out_idx_4, out_Tmp_153 := in_Tmp_151, in_idx_4, in_Tmp_153;
    goto L159, exit;

  exit:
    return;

  L159:
    goto anon138_Else;

  anon138_Else:
    assume {:partition} in_max_2 >= out_idx_4;
    out_Tmp_151 := out_idx_4;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_153;
    assume {:nonnull} out_Tmp_153 != 0;
    assume out_Tmp_153 > 0;
    goto anon163_Then;

  anon163_Then:
    assume {:partition} in_Opcode_3 != Mem_T.INT4[out_Tmp_153 + out_Tmp_151 * 4];
    out_idx_4 := out_idx_4 + 1;
    goto anon163_Then_dummy;

  anon163_Then_dummy:
    call {:si_unique_call 2090} {:si_old_unique_call 1} out_Tmp_151, out_idx_4, out_Tmp_153 := AvcResponseCompletion_sdv_static_function_2_loop_L159(out_Tmp_151, out_idx_4, out_Tmp_153, in_Command_14, in_max_2, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_2_loop_L159(in_Tmp_151: int, in_idx_4: int, in_Tmp_153: int, in_Command_14: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_151: int, out_idx_4: int, out_Tmp_153: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcResponseCompletion_sdv_static_function_2_loop_L80(in_SubunitAddr_4: int, in_Tmp_150: int, in_Tmp_151: int, in_Tmp_152: int, in_ResponseCode_2: int, in_idx_4: int, in_Tmp_153: int, in_Tmp_154: int, in_Tmp_155: int, in_idx_5: int, in_Tmp_156: int, in_sdv_111: int, in_Tmp_158: int, in_max: int, in_Command_14: int, in_Entry_5: int, in_idx_6: int, in_OpcodesMatch: int, in_max_1: int, in_Tmp_159: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_150: int, out_Tmp_151: int, out_Tmp_152: int, out_idx_4: int, out_Tmp_153: int, out_Tmp_154: int, out_Tmp_155: int, out_idx_5: int, out_Tmp_156: int, out_sdv_111: int, out_Tmp_158: int, out_max: int, out_Command_14: int, out_Entry_5: int, out_idx_6: int, out_OpcodesMatch: int, out_max_1: int, out_Tmp_159: int, out_max_2: int)
{
  var vslice_dummy_var_177: int;

  entry:
    out_Tmp_150, out_Tmp_151, out_Tmp_152, out_idx_4, out_Tmp_153, out_Tmp_154, out_Tmp_155, out_idx_5, out_Tmp_156, out_sdv_111, out_Tmp_158, out_max, out_Command_14, out_Entry_5, out_idx_6, out_OpcodesMatch, out_max_1, out_Tmp_159, out_max_2 := in_Tmp_150, in_Tmp_151, in_Tmp_152, in_idx_4, in_Tmp_153, in_Tmp_154, in_Tmp_155, in_idx_5, in_Tmp_156, in_sdv_111, in_Tmp_158, in_max, in_Command_14, in_Entry_5, in_idx_6, in_OpcodesMatch, in_max_1, in_Tmp_159, in_max_2;
    goto L80, exit;

  exit:
    return;

  L80:
    goto anon116_Else;

  anon116_Else:
    out_Command_14 := out_Entry_5;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc vslice_dummy_var_177;
    call {:si_unique_call 2091} out_sdv_111 := AvcSubunitAddrsEqual(in_SubunitAddr_4, vslice_dummy_var_177);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} out_sdv_111 != 0;
    out_OpcodesMatch := 0;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    goto L97;

  L97:
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} in_ResponseCode_2 != 8;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} in_ResponseCode_2 == 12;
    goto L147;

  L147:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    out_Command_14 := 0;
    goto L119;

  L119:
    goto anon129_Then;

  anon129_Then:
    assume {:partition} out_Command_14 == 0;
    goto L86;

  L86:
    assume {:nonnull} out_Entry_5 != 0;
    assume out_Entry_5 > 0;
    havoc out_Entry_5;
    out_Command_14 := 0;
    goto L86_dummy;

  L86_dummy:
    call {:si_unique_call 2095} {:si_old_unique_call 1} out_Tmp_150, out_Tmp_151, out_Tmp_152, out_idx_4, out_Tmp_153, out_Tmp_154, out_Tmp_155, out_idx_5, out_Tmp_156, out_sdv_111, out_Tmp_158, out_max, out_Command_14, out_Entry_5, out_idx_6, out_OpcodesMatch, out_max_1, out_Tmp_159, out_max_2 := AvcResponseCompletion_sdv_static_function_2_loop_L80(in_SubunitAddr_4, out_Tmp_150, out_Tmp_151, out_Tmp_152, in_ResponseCode_2, out_idx_4, out_Tmp_153, out_Tmp_154, out_Tmp_155, out_idx_5, out_Tmp_156, out_sdv_111, out_Tmp_158, out_max, out_Command_14, out_Entry_5, out_idx_6, out_OpcodesMatch, out_max_1, out_Tmp_159, out_max_2, in_Opcode_3);
    return;

  anon134_Then:
    goto L119;

  anon155_Then:
    assume {:partition} in_ResponseCode_2 != 12;
    out_Command_14 := 0;
    goto L119;

  anon120_Then:
    assume {:partition} in_ResponseCode_2 == 8;
    goto L147;

  anon145_Then:
    out_Command_14 := 0;
    goto L119;

  anon146_Then:
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} in_ResponseCode_2 != 8;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} in_ResponseCode_2 != 10;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} in_ResponseCode_2 != 13;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} in_ResponseCode_2 == 15;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_154;
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    out_max := Mem_T.INT4[out_Tmp_154];
    out_idx_6 := 1;
    goto L110;

  L110:
    call {:si_unique_call 2094} out_Tmp_152, out_Tmp_158, out_idx_6 := AvcResponseCompletion_sdv_static_function_2_loop_L110(out_Tmp_152, out_Tmp_158, out_max, out_Command_14, out_idx_6, in_Opcode_3);
    goto L110_last;

  L110_last:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} out_max >= out_idx_6;
    out_Tmp_158 := out_idx_6;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_152;
    assume {:nonnull} out_Tmp_152 != 0;
    assume out_Tmp_152 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} in_Opcode_3 == Mem_T.INT4[out_Tmp_152 + out_Tmp_158 * 4];
    out_OpcodesMatch := 1;
    goto L111;

  L111:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} out_OpcodesMatch != 0;
    goto L119;

  anon128_Then:
    assume {:partition} out_OpcodesMatch == 0;
    out_Command_14 := 0;
    goto L119;

  anon165_Then:
    assume {:partition} in_Opcode_3 != Mem_T.INT4[out_Tmp_152 + out_Tmp_158 * 4];
    out_idx_6 := out_idx_6 + 1;
    assume false;
    return;

  anon127_Then:
    assume {:partition} out_idx_6 > out_max;
    goto L111;

  anon125_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    out_OpcodesMatch := 0;
    goto L352;

  L352:
    goto L111;

  anon126_Then:
    out_OpcodesMatch := 1;
    goto L352;

  anon124_Then:
    out_Command_14 := 0;
    goto L119;

  anon156_Then:
    assume {:partition} in_ResponseCode_2 != 15;
    out_Command_14 := 0;
    goto L119;

  anon157_Then:
    assume {:partition} in_ResponseCode_2 == 13;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_156;
    assume {:nonnull} out_Tmp_156 != 0;
    assume out_Tmp_156 > 0;
    out_max_1 := Mem_T.INT4[out_Tmp_156];
    out_idx_5 := 1;
    goto L136;

  L136:
    call {:si_unique_call 2093} out_Tmp_150, out_Tmp_155, out_idx_5 := AvcResponseCompletion_sdv_static_function_2_loop_L136(out_Tmp_150, out_Tmp_155, out_idx_5, out_Command_14, out_max_1, in_Opcode_3);
    goto L136_last;

  L136_last:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} out_max_1 >= out_idx_5;
    out_Tmp_155 := out_idx_5;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_150;
    assume {:nonnull} out_Tmp_150 != 0;
    assume out_Tmp_150 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} in_Opcode_3 == Mem_T.INT4[out_Tmp_150 + out_Tmp_155 * 4];
    out_OpcodesMatch := 1;
    goto L137;

  L137:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} out_OpcodesMatch == 0;
    out_Command_14 := 0;
    goto L119;

  anon133_Then:
    assume {:partition} out_OpcodesMatch != 0;
    goto L119;

  anon164_Then:
    assume {:partition} in_Opcode_3 != Mem_T.INT4[out_Tmp_150 + out_Tmp_155 * 4];
    out_idx_5 := out_idx_5 + 1;
    assume false;
    return;

  anon132_Then:
    assume {:partition} out_idx_5 > out_max_1;
    goto L137;

  anon123_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    out_OpcodesMatch := 0;
    goto L341;

  L341:
    goto L137;

  anon131_Then:
    out_OpcodesMatch := 1;
    goto L341;

  anon158_Then:
    assume {:partition} in_ResponseCode_2 == 10;
    goto L100;

  L100:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    out_Command_14 := 0;
    goto L119;

  anon122_Then:
    goto L119;

  anon121_Then:
    assume {:partition} in_ResponseCode_2 == 8;
    goto L100;

  anon147_Then:
    goto L97;

  anon148_Then:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} in_ResponseCode_2 != 8;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} in_ResponseCode_2 != 10;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} in_ResponseCode_2 != 11;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} in_ResponseCode_2 == 12;
    goto L153;

  L153:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_159;
    assume {:nonnull} out_Tmp_159 != 0;
    assume out_Tmp_159 > 0;
    out_max_2 := Mem_T.INT4[out_Tmp_159];
    out_idx_4 := 1;
    goto L159;

  L159:
    call {:si_unique_call 2092} out_Tmp_151, out_idx_4, out_Tmp_153 := AvcResponseCompletion_sdv_static_function_2_loop_L159(out_Tmp_151, out_idx_4, out_Tmp_153, out_Command_14, out_max_2, in_Opcode_3);
    goto L159_last;

  L159_last:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} out_max_2 >= out_idx_4;
    out_Tmp_151 := out_idx_4;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_153;
    assume {:nonnull} out_Tmp_153 != 0;
    assume out_Tmp_153 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} in_Opcode_3 == Mem_T.INT4[out_Tmp_153 + out_Tmp_151 * 4];
    out_OpcodesMatch := 1;
    goto L160;

  L160:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_OpcodesMatch == 0;
    out_Command_14 := 0;
    goto L119;

  anon139_Then:
    assume {:partition} out_OpcodesMatch != 0;
    goto L119;

  anon163_Then:
    assume {:partition} in_Opcode_3 != Mem_T.INT4[out_Tmp_153 + out_Tmp_151 * 4];
    out_idx_4 := out_idx_4 + 1;
    assume false;
    return;

  anon138_Then:
    assume {:partition} out_idx_4 > out_max_2;
    goto L160;

  anon136_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    out_OpcodesMatch := 0;
    goto L326;

  L326:
    goto L160;

  anon137_Then:
    out_OpcodesMatch := 1;
    goto L326;

  anon152_Then:
    assume {:partition} in_ResponseCode_2 != 12;
    out_Command_14 := 0;
    goto L119;

  anon153_Then:
    assume {:partition} in_ResponseCode_2 == 11;
    goto L153;

  anon154_Then:
    assume {:partition} in_ResponseCode_2 == 10;
    goto L152;

  L152:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    out_Command_14 := 0;
    goto L119;

  anon135_Then:
    goto L119;

  anon119_Then:
    assume {:partition} in_ResponseCode_2 == 8;
    goto L152;

  anon161_Then:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} in_ResponseCode_2 != 8;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} in_ResponseCode_2 != 9;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} in_ResponseCode_2 != 10;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} in_ResponseCode_2 == 15;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    goto L174;

  L174:
    out_Command_14 := 0;
    goto L119;

  anon141_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    goto L174;

  anon142_Then:
    goto L119;

  anon149_Then:
    assume {:partition} in_ResponseCode_2 != 15;
    out_Command_14 := 0;
    goto L119;

  anon150_Then:
    assume {:partition} in_ResponseCode_2 == 10;
    goto L171;

  L171:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    out_Command_14 := 0;
    goto L119;

  anon140_Then:
    goto L119;

  anon151_Then:
    assume {:partition} in_ResponseCode_2 == 9;
    goto L171;

  anon118_Then:
    assume {:partition} in_ResponseCode_2 == 8;
    goto L171;

  anon117_Then:
    assume {:partition} out_sdv_111 == 0;
    goto L86;

  anon160_Then:
    goto L86;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_2_loop_L80(in_SubunitAddr_4: int, in_Tmp_150: int, in_Tmp_151: int, in_Tmp_152: int, in_ResponseCode_2: int, in_idx_4: int, in_Tmp_153: int, in_Tmp_154: int, in_Tmp_155: int, in_idx_5: int, in_Tmp_156: int, in_sdv_111: int, in_Tmp_158: int, in_max: int, in_Command_14: int, in_Entry_5: int, in_idx_6: int, in_OpcodesMatch: int, in_max_1: int, in_Tmp_159: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_150: int, out_Tmp_151: int, out_Tmp_152: int, out_idx_4: int, out_Tmp_153: int, out_Tmp_154: int, out_Tmp_155: int, out_idx_5: int, out_Tmp_156: int, out_sdv_111: int, out_Tmp_158: int, out_max: int, out_Command_14: int, out_Entry_5: int, out_idx_6: int, out_OpcodesMatch: int, out_max_1: int, out_Tmp_159: int, out_max_2: int);
  free ensures {:va_keep} out_sdv_111 == 1 || out_sdv_111 == 0 || out_sdv_111 == in_sdv_111;
  free ensures {:va_keep} out_Command_14 == 0 || out_Command_14 == in_Command_14;
  free ensures {:va_keep} out_OpcodesMatch == 0 || out_OpcodesMatch == 1 || out_OpcodesMatch == in_OpcodesMatch;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L27(in_Tmp_165: int, in_Tmp_166: int, in_max_3: int, in_Command_15: int, in_idx_7: int, in_Opcode_4: int) returns (out_Tmp_165: int, out_Tmp_166: int, out_idx_7: int)
{

  entry:
    out_Tmp_165, out_Tmp_166, out_idx_7 := in_Tmp_165, in_Tmp_166, in_idx_7;
    goto L27, exit;

  exit:
    return;

  L27:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} in_max_3 >= out_idx_7;
    out_Tmp_165 := out_idx_7;
    assume {:nonnull} in_Command_15 != 0;
    assume in_Command_15 > 0;
    havoc out_Tmp_166;
    assume {:nonnull} out_Tmp_166 != 0;
    assume out_Tmp_166 > 0;
    goto anon27_Then;

  anon27_Then:
    assume {:partition} in_Opcode_4 != Mem_T.INT4[out_Tmp_166 + out_Tmp_165 * 4];
    out_idx_7 := out_idx_7 + 1;
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    call {:si_unique_call 2096} {:si_old_unique_call 1} out_Tmp_165, out_Tmp_166, out_idx_7 := AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L27(out_Tmp_165, out_Tmp_166, in_max_3, in_Command_15, out_idx_7, in_Opcode_4);
    return;
}



procedure {:LoopProcedure} AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L27(in_Tmp_165: int, in_Tmp_166: int, in_max_3: int, in_Command_15: int, in_idx_7: int, in_Opcode_4: int) returns (out_Tmp_165: int, out_Tmp_166: int, out_idx_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L11(in_Tmp_165: int, in_Tmp_166: int, in_Tmp_167: int, in_max_3: int, in_Command_15: int, in_Entry_6: int, in_idx_7: int, in_OpcodesMatch_1: int, in_Tmp_169: int, in_Opcode_4: int) returns (out_Tmp_165: int, out_Tmp_166: int, out_Tmp_167: int, out_max_3: int, out_Command_15: int, out_Entry_6: int, out_idx_7: int, out_OpcodesMatch_1: int, out_Tmp_169: int)
{

  entry:
    out_Tmp_165, out_Tmp_166, out_Tmp_167, out_max_3, out_Command_15, out_Entry_6, out_idx_7, out_OpcodesMatch_1, out_Tmp_169 := in_Tmp_165, in_Tmp_166, in_Tmp_167, in_max_3, in_Command_15, in_Entry_6, in_idx_7, in_OpcodesMatch_1, in_Tmp_169;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon19_Else;

  anon19_Else:
    out_Command_15 := out_Entry_6;
    assume {:nonnull} out_Command_15 != 0;
    assume out_Command_15 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L18;

  L18:
    assume {:nonnull} out_Entry_6 != 0;
    assume out_Entry_6 > 0;
    havoc out_Entry_6;
    goto L18_dummy;

  L18_dummy:
    call {:si_unique_call 2098} {:si_old_unique_call 1} out_Tmp_165, out_Tmp_166, out_Tmp_167, out_max_3, out_Command_15, out_Entry_6, out_idx_7, out_OpcodesMatch_1, out_Tmp_169 := AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L11(out_Tmp_165, out_Tmp_166, out_Tmp_167, out_max_3, out_Command_15, out_Entry_6, out_idx_7, out_OpcodesMatch_1, out_Tmp_169, in_Opcode_4);
    return;

  anon24_Then:
    assume {:nonnull} out_Command_15 != 0;
    assume out_Command_15 > 0;
    havoc out_Tmp_169;
    assume {:nonnull} out_Tmp_169 != 0;
    assume out_Tmp_169 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 255 == Mem_T.INT4[out_Tmp_169];
    out_OpcodesMatch_1 := 0;
    assume {:nonnull} out_Command_15 != 0;
    assume out_Command_15 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} out_Command_15 != 0;
    assume out_Command_15 > 0;
    havoc out_Tmp_167;
    assume {:nonnull} out_Tmp_167 != 0;
    assume out_Tmp_167 > 0;
    out_max_3 := Mem_T.INT4[out_Tmp_167];
    out_idx_7 := 1;
    goto L27;

  L27:
    call {:si_unique_call 2097} out_Tmp_165, out_Tmp_166, out_idx_7 := AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L27(out_Tmp_165, out_Tmp_166, out_max_3, out_Command_15, out_idx_7, in_Opcode_4);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_max_3 >= out_idx_7;
    out_Tmp_165 := out_idx_7;
    assume {:nonnull} out_Command_15 != 0;
    assume out_Command_15 > 0;
    havoc out_Tmp_166;
    assume {:nonnull} out_Tmp_166 != 0;
    assume out_Tmp_166 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} in_Opcode_4 == Mem_T.INT4[out_Tmp_166 + out_Tmp_165 * 4];
    out_OpcodesMatch_1 := 1;
    goto L28;

  L28:
    goto anon22_Then;

  anon22_Then:
    assume {:partition} out_OpcodesMatch_1 == 0;
    goto L18;

  anon27_Then:
    assume {:partition} in_Opcode_4 != Mem_T.INT4[out_Tmp_166 + out_Tmp_165 * 4];
    out_idx_7 := out_idx_7 + 1;
    assume false;
    return;

  anon21_Then:
    assume {:partition} out_idx_7 > out_max_3;
    goto L28;

  anon26_Then:
    assume {:nonnull} out_Command_15 != 0;
    assume out_Command_15 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_OpcodesMatch_1 := 0;
    goto L74;

  L74:
    goto L28;

  anon20_Then:
    out_OpcodesMatch_1 := 1;
    goto L74;

  anon25_Then:
    assume {:partition} 255 != Mem_T.INT4[out_Tmp_169];
    goto L18;
}



procedure {:LoopProcedure} AvcSearchForUnitCommandHandler_sdv_static_function_2_loop_L11(in_Tmp_165: int, in_Tmp_166: int, in_Tmp_167: int, in_max_3: int, in_Command_15: int, in_Entry_6: int, in_idx_7: int, in_OpcodesMatch_1: int, in_Tmp_169: int, in_Opcode_4: int) returns (out_Tmp_165: int, out_Tmp_166: int, out_Tmp_167: int, out_max_3: int, out_Command_15: int, out_Entry_6: int, out_idx_7: int, out_OpcodesMatch_1: int, out_Tmp_169: int);
  free ensures {:va_keep} out_OpcodesMatch_1 == 1 || out_OpcodesMatch_1 == 0 || out_OpcodesMatch_1 == in_OpcodesMatch_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcDuplicateCommandContext_sdv_static_function_2_loop_L38(in_sdv_118: int, in_Command_16: int, in_Entry_8: int, in_OrigCommand: int, in_vslice_dummy_var_39: int) returns (out_sdv_118: int, out_Entry_8: int, out_vslice_dummy_var_39: int)
{

  entry:
    out_sdv_118, out_Entry_8, out_vslice_dummy_var_39 := in_sdv_118, in_Entry_8, in_vslice_dummy_var_39;
    goto L38, exit;

  exit:
    return;

  L38:
    assume {:nonnull} in_OrigCommand != 0;
    assume in_OrigCommand > 0;
    call {:si_unique_call 2099} out_Entry_8 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(in_OrigCommand));
    assume {:nonnull} in_Command_16 != 0;
    assume in_Command_16 > 0;
    call {:si_unique_call 2100} out_vslice_dummy_var_39 := sdv_InsertTailList(CallbackChain__AVC_COMMAND_CONTEXT(in_Command_16), out_Entry_8);
    call {:si_unique_call 2101} out_sdv_118 := sdv_IsListEmpty(0);
    goto anon11_Then;

  anon11_Then:
    assume {:partition} out_sdv_118 == 0;
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    call {:si_unique_call 2102} {:si_old_unique_call 1} out_sdv_118, out_Entry_8, out_vslice_dummy_var_39 := AvcDuplicateCommandContext_sdv_static_function_2_loop_L38(out_sdv_118, in_Command_16, out_Entry_8, in_OrigCommand, out_vslice_dummy_var_39);
    return;
}



procedure {:LoopProcedure} AvcDuplicateCommandContext_sdv_static_function_2_loop_L38(in_sdv_118: int, in_Command_16: int, in_Entry_8: int, in_OrigCommand: int, in_vslice_dummy_var_39: int) returns (out_sdv_118: int, out_Entry_8: int, out_vslice_dummy_var_39: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} out_sdv_118 == 1 || out_sdv_118 == 0 || out_sdv_118 == in_sdv_118;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcDuplicateCommandContext_sdv_static_function_2_loop_L23(in_Entry_7: int, in_sdv_116: int, in_Command_16: int, in_OrigCommand: int, in_vslice_dummy_var_40: int) returns (out_Entry_7: int, out_sdv_116: int, out_vslice_dummy_var_40: int)
{

  entry:
    out_Entry_7, out_sdv_116, out_vslice_dummy_var_40 := in_Entry_7, in_sdv_116, in_vslice_dummy_var_40;
    goto L23, exit;

  exit:
    return;

  L23:
    call {:si_unique_call 2103} out_sdv_116 := sdv_IsListEmpty(0);
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_116 == 0;
    assume {:nonnull} in_OrigCommand != 0;
    assume in_OrigCommand > 0;
    call {:si_unique_call 2104} out_Entry_7 := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(in_OrigCommand));
    assume {:nonnull} in_Command_16 != 0;
    assume in_Command_16 > 0;
    call {:si_unique_call 2105} out_vslice_dummy_var_40 := sdv_InsertTailList(PendingIrpList__AVC_COMMAND_CONTEXT(in_Command_16), out_Entry_7);
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 2106} {:si_old_unique_call 1} out_Entry_7, out_sdv_116, out_vslice_dummy_var_40 := AvcDuplicateCommandContext_sdv_static_function_2_loop_L23(out_Entry_7, out_sdv_116, in_Command_16, in_OrigCommand, out_vslice_dummy_var_40);
    return;
}



procedure {:LoopProcedure} AvcDuplicateCommandContext_sdv_static_function_2_loop_L23(in_Entry_7: int, in_sdv_116: int, in_Command_16: int, in_OrigCommand: int, in_vslice_dummy_var_40: int) returns (out_Entry_7: int, out_sdv_116: int, out_vslice_dummy_var_40: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} out_sdv_116 == 1 || out_sdv_116 == 0 || out_sdv_116 == in_sdv_116;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcUnpackSubunitAddress_loop_L15(in_Tmp_198: int, in_idx_8: int, in_Tmp_202: int, in_Tmp_204: int, in_Buffer_3: int, in_SubunitType_2: int) returns (out_Tmp_198: int, out_idx_8: int, out_Tmp_202: int, out_Tmp_204: int)
{

  entry:
    out_Tmp_198, out_idx_8, out_Tmp_202, out_Tmp_204 := in_Tmp_198, in_idx_8, in_Tmp_202, in_Tmp_204;
    goto L15, exit;

  exit:
    return;

  L15:
    out_Tmp_204 := out_idx_8;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.INT4[in_Buffer_3 + out_Tmp_204 * 4] == 255;
    out_Tmp_202 := out_idx_8;
    out_Tmp_198 := out_idx_8;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    assume {:nonnull} in_SubunitType_2 != 0;
    assume in_SubunitType_2 > 0;
    Mem_T.INT4[in_SubunitType_2 + out_Tmp_202 * 4] := Mem_T.INT4[in_Buffer_3 + out_Tmp_198 * 4];
    out_idx_8 := out_idx_8 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    call {:si_unique_call 2107} {:si_old_unique_call 1} out_Tmp_198, out_idx_8, out_Tmp_202, out_Tmp_204 := AvcUnpackSubunitAddress_loop_L15(out_Tmp_198, out_idx_8, out_Tmp_202, out_Tmp_204, in_Buffer_3, in_SubunitType_2);
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L15(in_Tmp_198: int, in_idx_8: int, in_Tmp_202: int, in_Tmp_204: int, in_Buffer_3: int, in_SubunitType_2: int) returns (out_Tmp_198: int, out_idx_8: int, out_Tmp_202: int, out_Tmp_204: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcUnpackSubunitAddress_loop_L29(in_Tmp_195: int, in_Tmp_196: int, in_idx_8: int, in_Buffer_3: int, in_SubunitID_1: int) returns (out_Tmp_195: int, out_Tmp_196: int, out_idx_8: int)
{

  entry:
    out_Tmp_195, out_Tmp_196, out_idx_8 := in_Tmp_195, in_Tmp_196, in_idx_8;
    goto L29, exit;

  exit:
    return;

  L29:
    out_Tmp_196 := out_idx_8;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.INT4[in_Buffer_3 + out_Tmp_196 * 4] == 255;
    out_Tmp_195 := out_idx_8;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    assume {:nonnull} in_SubunitID_1 != 0;
    assume in_SubunitID_1 > 0;
    Mem_T.INT4[in_SubunitID_1] := Mem_T.INT4[in_SubunitID_1] + Mem_T.INT4[in_Buffer_3 + out_Tmp_195 * 4] - 1;
    out_idx_8 := out_idx_8 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    call {:si_unique_call 2108} {:si_old_unique_call 1} out_Tmp_195, out_Tmp_196, out_idx_8 := AvcUnpackSubunitAddress_loop_L29(out_Tmp_195, out_Tmp_196, out_idx_8, in_Buffer_3, in_SubunitID_1);
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L29(in_Tmp_195: int, in_Tmp_196: int, in_idx_8: int, in_Buffer_3: int, in_SubunitID_1: int) returns (out_Tmp_195: int, out_Tmp_196: int, out_idx_8: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcUnpackSubunitAddress_loop_L38(in_Tmp_192: int, in_idx_8: int, in_Buffer_3: int) returns (out_Tmp_192: int, out_idx_8: int)
{

  entry:
    out_Tmp_192, out_idx_8 := in_Tmp_192, in_idx_8;
    goto L38, exit;

  exit:
    return;

  L38:
    out_Tmp_192 := out_idx_8;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.INT4[in_Buffer_3 + out_Tmp_192 * 4] == 255;
    out_idx_8 := out_idx_8 + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    havoc out_idx_8;
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L38(in_Tmp_192: int, in_idx_8: int, in_Buffer_3: int) returns (out_Tmp_192: int, out_idx_8: int);
  free ensures {:va_keep} out_Tmp_192 == in_idx_8 || out_Tmp_192 == in_Tmp_192;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcUnpackSubunitAddress_loop_L43(in_Tmp_194: int, in_idx_8: int, in_Buffer_3: int) returns (out_Tmp_194: int, out_idx_8: int)
{

  entry:
    out_Tmp_194, out_idx_8 := in_Tmp_194, in_idx_8;
    goto L43, exit;

  exit:
    return;

  L43:
    out_Tmp_194 := out_idx_8;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.INT4[in_Buffer_3 + out_Tmp_194 * 4] == 255;
    out_idx_8 := out_idx_8 + 1;
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    havoc out_idx_8;
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L43(in_Tmp_194: int, in_idx_8: int, in_Buffer_3: int) returns (out_Tmp_194: int, out_idx_8: int);
  free ensures {:va_keep} out_Tmp_194 == in_idx_8 || out_Tmp_194 == in_Tmp_194;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_672547288_loop_L4(in_s_p_e_c_i_a_l_3: int, in_s_p_e_c_i_a_l_5: int, in_s_p_e_c_i_a_l_6: int) returns (out_s_p_e_c_i_a_l_5: int)
{

  entry:
    out_s_p_e_c_i_a_l_5 := in_s_p_e_c_i_a_l_5;
    goto L4, exit;

  exit:
    return;

  L4:
    out_s_p_e_c_i_a_l_5 := out_s_p_e_c_i_a_l_5 - 1;
    goto anon5_Else;

  anon5_Else:
    assume {:partition} out_s_p_e_c_i_a_l_5 >= 0;
    assume {:IndirectCall} true;
    assume in_s_p_e_c_i_a_l_6 == li2bplFunctionConstant636;
    call {:si_unique_call 2109} sdv_hash_330311584_sdv_special_DTOR(in_s_p_e_c_i_a_l_3);
    goto anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    havoc out_s_p_e_c_i_a_l_5;
    return;
}



procedure {:LoopProcedure} sdv_hash_672547288_loop_L4(in_s_p_e_c_i_a_l_3: int, in_s_p_e_c_i_a_l_5: int, in_s_p_e_c_i_a_l_6: int) returns (out_s_p_e_c_i_a_l_5: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_246154148_loop_L3(in_s_p_e_c_i_a_l_7: int, in_s_p_e_c_i_a_l_9: int, in_s_p_e_c_i_a_l_10: int) returns (out_s_p_e_c_i_a_l_9: int)
{

  entry:
    out_s_p_e_c_i_a_l_9 := in_s_p_e_c_i_a_l_9;
    goto L3, exit;

  exit:
    return;

  L3:
    out_s_p_e_c_i_a_l_9 := out_s_p_e_c_i_a_l_9 - 1;
    goto anon3_Else;

  anon3_Else:
    assume {:partition} out_s_p_e_c_i_a_l_9 >= 0;
    assume in_s_p_e_c_i_a_l_10 == 0;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    havoc out_s_p_e_c_i_a_l_9;
    return;
}



procedure {:LoopProcedure} sdv_hash_246154148_loop_L3(in_s_p_e_c_i_a_l_7: int, in_s_p_e_c_i_a_l_9: int, in_s_p_e_c_i_a_l_10: int) returns (out_s_p_e_c_i_a_l_9: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_132241128_loop_L54()
{

  entry:
    goto L54, exit;

  exit:
    return;

  L54:
    goto L54_dummy;

  L54_dummy:
    call {:si_unique_call 2110} {:si_old_unique_call 1} sdv_hash_132241128_loop_L54();
    return;
}



procedure {:LoopProcedure} sdv_hash_132241128_loop_L54();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L121(in_Tmp_406: int, in_Tmp_410: int, in_sdv_222: int, in_sdv_224: int, in_cConnectedExtOutputPlugs: int, in_cConnectedSrcPlugs: int, in_cConnectedExtInputPlugs: int, in_dstAddr_3: int, in_srcPlug_4: int, in_bFlags_2: int, in_srcAddr_4: int, in_Tmp_436: int, in_Tmp_437: int, in_dstPlug_4: int, in_SubunitAddr_8: int, in_cConnectedDstPlugs: int, in_Tmp_451: int, in_Tmp_454: int, in_sdv_259: int, in_Tmp_459: int, in_AvcIrb_6: int, in_sdv_267: int, in_Tmp_462: int, in_idx_12: int, in_sdv_277: int, in_this_28: int) returns (out_Tmp_406: int, out_Tmp_410: int, out_sdv_222: int, out_sdv_224: int, out_cConnectedExtOutputPlugs: int, out_cConnectedSrcPlugs: int, out_cConnectedExtInputPlugs: int, out_Tmp_436: int, out_Tmp_437: int, out_cConnectedDstPlugs: int, out_Tmp_454: int, out_sdv_259: int, out_sdv_267: int, out_Tmp_462: int, out_sdv_277: int)
{

  entry:
    out_Tmp_406, out_Tmp_410, out_sdv_222, out_sdv_224, out_cConnectedExtOutputPlugs, out_cConnectedSrcPlugs, out_cConnectedExtInputPlugs, out_Tmp_436, out_Tmp_437, out_cConnectedDstPlugs, out_Tmp_454, out_sdv_259, out_sdv_267, out_Tmp_462, out_sdv_277 := in_Tmp_406, in_Tmp_410, in_sdv_222, in_sdv_224, in_cConnectedExtOutputPlugs, in_cConnectedSrcPlugs, in_cConnectedExtInputPlugs, in_Tmp_436, in_Tmp_437, in_cConnectedDstPlugs, in_Tmp_454, in_sdv_259, in_sdv_267, in_Tmp_462, in_sdv_277;
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_srcAddr_4 != 0;
    assume in_srcAddr_4 > 0;
    call {:si_unique_call 2111} sdv_hash_948020419_sdv_special_CTOR(in_srcAddr_4);
    assume {:nonnull} in_dstAddr_3 != 0;
    assume in_dstAddr_3 > 0;
    call {:si_unique_call 2112} sdv_hash_948020419_sdv_special_CTOR(in_dstAddr_3);
    call {:si_unique_call 2113} out_sdv_224 := sdv_hash_889363889(in_this_28, in_AvcIrb_6, in_idx_12, in_bFlags_2, in_srcAddr_4, in_srcPlug_4, in_dstAddr_3, in_dstPlug_4);
    goto anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    goto anon160_Else;

  anon160_Else:
    assume {:partition} out_sdv_224 != 0;
    call {:si_unique_call 2123} out_sdv_267 := sdv_hash_986172016(in_srcAddr_4, in_SubunitAddr_8);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} out_sdv_267 != 0;
    out_cConnectedSrcPlugs := out_cConnectedSrcPlugs + 1;
    goto L153;

  L153:
    call {:si_unique_call 2119} out_sdv_259 := sdv_hash_986172016(in_dstAddr_3, in_SubunitAddr_8);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} out_sdv_259 != 0;
    out_cConnectedDstPlugs := out_cConnectedDstPlugs + 1;
    goto L161;

  L161:
    call {:si_unique_call 2114} sdv_hash_648551832_sdv_special_DTOR(in_dstAddr_3);
    call {:si_unique_call 2115} sdv_hash_648551832_sdv_special_DTOR(in_srcAddr_4);
    goto L161_dummy;

  L161_dummy:
    call {:si_unique_call 2124} {:si_old_unique_call 1} out_Tmp_406, out_Tmp_410, out_sdv_222, out_sdv_224, out_cConnectedExtOutputPlugs, out_cConnectedSrcPlugs, out_cConnectedExtInputPlugs, out_Tmp_436, out_Tmp_437, out_cConnectedDstPlugs, out_Tmp_454, out_sdv_259, out_sdv_267, out_Tmp_462, out_sdv_277 := sdv_hash_890537390_loop_L121(out_Tmp_406, out_Tmp_410, out_sdv_222, out_sdv_224, out_cConnectedExtOutputPlugs, out_cConnectedSrcPlugs, out_cConnectedExtInputPlugs, in_dstAddr_3, in_srcPlug_4, in_bFlags_2, in_srcAddr_4, out_Tmp_436, out_Tmp_437, in_dstPlug_4, in_SubunitAddr_8, out_cConnectedDstPlugs, in_Tmp_451, out_Tmp_454, out_sdv_259, in_Tmp_459, in_AvcIrb_6, out_sdv_267, out_Tmp_462, in_idx_12, out_sdv_277, in_this_28);
    return;

  anon162_Then:
    assume {:partition} out_sdv_259 == 0;
    call {:si_unique_call 2117} sdv_hash_543516765_sdv_special_CTOR(in_Tmp_451, 255);
    out_Tmp_462 := 1;
    call {:si_unique_call 2118} out_sdv_222 := sdv_hash_986172016(in_dstAddr_3, in_Tmp_451);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} out_sdv_222 != 0;
    assume {:nonnull} in_dstPlug_4 != 0;
    assume in_dstPlug_4 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[in_dstPlug_4], 128) != 0;
    out_Tmp_406 := 1;
    goto L180;

  L180:
    out_Tmp_454 := out_Tmp_406;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} out_Tmp_462 != 0;
    out_Tmp_462 := 0;
    call {:si_unique_call 2116} sdv_hash_648551832_sdv_special_DTOR(in_Tmp_451);
    goto L182;

  L182:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} out_Tmp_454 != 0;
    out_cConnectedExtOutputPlugs := out_cConnectedExtOutputPlugs + 1;
    goto L161;

  anon165_Then:
    assume {:partition} out_Tmp_454 == 0;
    goto L161;

  anon227_Then:
    assume {:partition} out_Tmp_462 == 0;
    goto L182;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[in_dstPlug_4], 128) == 0;
    goto L177;

  L177:
    out_Tmp_406 := 0;
    goto L180;

  anon163_Then:
    assume {:partition} out_sdv_222 == 0;
    goto L177;

  anon161_Then:
    assume {:partition} out_sdv_267 == 0;
    call {:si_unique_call 2121} sdv_hash_543516765_sdv_special_CTOR(in_Tmp_459, 255);
    out_Tmp_437 := 1;
    call {:si_unique_call 2122} out_sdv_277 := sdv_hash_986172016(in_srcAddr_4, in_Tmp_459);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} out_sdv_277 != 0;
    assume {:nonnull} in_srcPlug_4 != 0;
    assume in_srcPlug_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} BAND(Mem_T.INT4[in_srcPlug_4], 128) != 0;
    out_Tmp_410 := 1;
    goto L201;

  L201:
    out_Tmp_436 := out_Tmp_410;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} out_Tmp_437 != 0;
    out_Tmp_437 := 0;
    call {:si_unique_call 2120} sdv_hash_648551832_sdv_special_DTOR(in_Tmp_459);
    goto L203;

  L203:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} out_Tmp_436 != 0;
    out_cConnectedExtInputPlugs := out_cConnectedExtInputPlugs + 1;
    goto L153;

  anon168_Then:
    assume {:partition} out_Tmp_436 == 0;
    goto L153;

  anon228_Then:
    assume {:partition} out_Tmp_437 == 0;
    goto L203;

  anon167_Then:
    assume {:partition} BAND(Mem_T.INT4[in_srcPlug_4], 128) == 0;
    goto L198;

  L198:
    out_Tmp_410 := 0;
    goto L201;

  anon166_Then:
    assume {:partition} out_sdv_277 == 0;
    goto L198;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L121(in_Tmp_406: int, in_Tmp_410: int, in_sdv_222: int, in_sdv_224: int, in_cConnectedExtOutputPlugs: int, in_cConnectedSrcPlugs: int, in_cConnectedExtInputPlugs: int, in_dstAddr_3: int, in_srcPlug_4: int, in_bFlags_2: int, in_srcAddr_4: int, in_Tmp_436: int, in_Tmp_437: int, in_dstPlug_4: int, in_SubunitAddr_8: int, in_cConnectedDstPlugs: int, in_Tmp_451: int, in_Tmp_454: int, in_sdv_259: int, in_Tmp_459: int, in_AvcIrb_6: int, in_sdv_267: int, in_Tmp_462: int, in_idx_12: int, in_sdv_277: int, in_this_28: int) returns (out_Tmp_406: int, out_Tmp_410: int, out_sdv_222: int, out_sdv_224: int, out_cConnectedExtOutputPlugs: int, out_cConnectedSrcPlugs: int, out_cConnectedExtInputPlugs: int, out_Tmp_436: int, out_Tmp_437: int, out_cConnectedDstPlugs: int, out_Tmp_454: int, out_sdv_259: int, out_sdv_267: int, out_Tmp_462: int, out_sdv_277: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_406 == 1 || out_Tmp_406 == 0 || out_Tmp_406 == in_Tmp_406;
  free ensures {:va_keep} out_Tmp_410 == 1 || out_Tmp_410 == 0 || out_Tmp_410 == in_Tmp_410;
  free ensures {:va_keep} out_sdv_222 == 1 || out_sdv_222 == 0 || out_sdv_222 == in_sdv_222;
  free ensures {:va_keep} out_Tmp_436 == 1 || out_Tmp_436 == 0 || out_Tmp_436 == in_Tmp_436;
  free ensures {:va_keep} out_Tmp_437 == 0 || out_Tmp_437 == 1 || out_Tmp_437 == in_Tmp_437;
  free ensures {:va_keep} out_Tmp_454 == 1 || out_Tmp_454 == 0 || out_Tmp_454 == in_Tmp_454;
  free ensures {:va_keep} out_sdv_259 == 1 || out_sdv_259 == 0 || out_sdv_259 == in_sdv_259;
  free ensures {:va_keep} out_sdv_267 == 1 || out_sdv_267 == 0 || out_sdv_267 == in_sdv_267;
  free ensures {:va_keep} out_Tmp_462 == 0 || out_Tmp_462 == 1 || out_Tmp_462 == in_Tmp_462;
  free ensures {:va_keep} out_sdv_277 == 1 || out_sdv_277 == 0 || out_sdv_277 == in_sdv_277;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L301(in_sdv_211: int, in_srcAddr_3: int, in_srcPlug_3: int, in_sdv_220: int, in_Tmp_413: int, in_Tmp_415: int, in_Tmp_417: int, in_Tmp_418: int, in_Tmp_419: int, in_Tmp_422: int, in_bFlags_1: int, in_Tmp_425: int, in_dstPlug_3: int, in_Tmp_426: int, in_Tmp_427: int, in_sdv_234: int, in_Tmp_431: int, in_Tmp_435: int, in_sdv_244: int, in_Tmp_438: int, in_Tmp_441: int, in_SubunitAddr_8: int, in_sdv_249: int, in_pMedium_2: int, in_dstAddr_4: int, in_Tmp_442: int, in_sdv_251: int, in_Tmp_445: int, in_Tmp_455: int, in_idx_11: int, in_Tmp_458: int, in_AvcIrb_6: int, in_ntStatus_20: int, in_sdv_266: int, in_Tmp_461: int, in_Tmp_463: int, in_sdv_269: int, in_pMedium_3: int, in_sdv_272: int, in_cDstPlugs: int, in_Tmp_469: int, in_Tmp_471: int, in_Tmp_472: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_77: int, in_vslice_dummy_var_78: int, in_vslice_dummy_var_79: int, in_vslice_dummy_var_80: int, in_vslice_dummy_var_85: int, in_vslice_dummy_var_86: int) returns (out_sdv_211: int, out_sdv_220: int, out_Tmp_413: int, out_Tmp_415: int, out_Tmp_417: int, out_Tmp_418: int, out_Tmp_419: int, out_Tmp_422: int, out_Tmp_425: int, out_Tmp_426: int, out_Tmp_427: int, out_sdv_234: int, out_Tmp_431: int, out_Tmp_435: int, out_sdv_244: int, out_Tmp_438: int, out_Tmp_441: int, out_sdv_249: int, out_pMedium_2: int, out_Tmp_442: int, out_sdv_251: int, out_Tmp_455: int, out_Tmp_458: int, out_ntStatus_20: int, out_sdv_266: int, out_Tmp_463: int, out_sdv_269: int, out_pMedium_3: int, out_sdv_272: int, out_Tmp_469: int, out_Tmp_471: int, out_Tmp_472: int, out_iPinID: int, out_vslice_dummy_var_77: int, out_vslice_dummy_var_78: int, out_vslice_dummy_var_79: int, out_vslice_dummy_var_80: int, out_vslice_dummy_var_85: int, out_vslice_dummy_var_86: int)
{

  entry:
    out_sdv_211, out_sdv_220, out_Tmp_413, out_Tmp_415, out_Tmp_417, out_Tmp_418, out_Tmp_419, out_Tmp_422, out_Tmp_425, out_Tmp_426, out_Tmp_427, out_sdv_234, out_Tmp_431, out_Tmp_435, out_sdv_244, out_Tmp_438, out_Tmp_441, out_sdv_249, out_pMedium_2, out_Tmp_442, out_sdv_251, out_Tmp_455, out_Tmp_458, out_ntStatus_20, out_sdv_266, out_Tmp_463, out_sdv_269, out_pMedium_3, out_sdv_272, out_Tmp_469, out_Tmp_471, out_Tmp_472, out_iPinID, out_vslice_dummy_var_77, out_vslice_dummy_var_78, out_vslice_dummy_var_79, out_vslice_dummy_var_80, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := in_sdv_211, in_sdv_220, in_Tmp_413, in_Tmp_415, in_Tmp_417, in_Tmp_418, in_Tmp_419, in_Tmp_422, in_Tmp_425, in_Tmp_426, in_Tmp_427, in_sdv_234, in_Tmp_431, in_Tmp_435, in_sdv_244, in_Tmp_438, in_Tmp_441, in_sdv_249, in_pMedium_2, in_Tmp_442, in_sdv_251, in_Tmp_455, in_Tmp_458, in_ntStatus_20, in_sdv_266, in_Tmp_463, in_sdv_269, in_pMedium_3, in_sdv_272, in_Tmp_469, in_Tmp_471, in_Tmp_472, in_iPinID, in_vslice_dummy_var_77, in_vslice_dummy_var_78, in_vslice_dummy_var_79, in_vslice_dummy_var_80, in_vslice_dummy_var_85, in_vslice_dummy_var_86;
    goto L301, exit;

  exit:
    return;

  L301:
    assume {:nonnull} in_srcAddr_3 != 0;
    assume in_srcAddr_3 > 0;
    call {:si_unique_call 2125} sdv_hash_948020419_sdv_special_CTOR(in_srcAddr_3);
    assume {:nonnull} in_dstAddr_4 != 0;
    assume in_dstAddr_4 > 0;
    call {:si_unique_call 2126} sdv_hash_948020419_sdv_special_CTOR(in_dstAddr_4);
    call {:si_unique_call 2127} out_sdv_266 := sdv_hash_889363889(in_this_28, in_AvcIrb_6, in_idx_11, in_bFlags_1, in_srcAddr_3, in_srcPlug_3, in_dstAddr_4, in_dstPlug_3);
    goto anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    goto anon182_Else;

  anon182_Else:
    assume {:partition} out_sdv_266 != 0;
    call {:si_unique_call 2137} out_sdv_234 := sdv_hash_986172016(in_dstAddr_4, in_SubunitAddr_8);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_sdv_234 != 0;
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    out_iPinID := Mem_T.INT4[in_dstPlug_3];
    assume {:nonnull} in_bFlags_1 != 0;
    assume in_bFlags_1 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} BAND(Mem_T.INT4[in_bFlags_1], 1) != 0;
    assume {:nonnull} in_Tmp_461 != 0;
    assume in_Tmp_461 > 0;
    Mem_T.INT4[in_Tmp_461] := 255;
    out_Tmp_455 := in_Tmp_461;
    call {:si_unique_call 2142} out_sdv_220 := sdv_hash_405508819(in_srcAddr_3, out_Tmp_455);
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} out_sdv_220 == 0;
    goto L355;

  L355:
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    call {:si_unique_call 2143} out_pMedium_3 := sdv_hash_1062250938(in_this_28, in_srcAddr_3, Mem_T.INT4[in_srcPlug_3], in_dstAddr_4, Mem_T.INT4[in_dstPlug_3]);
    goto anon214_Else;

  anon214_Else:
    assume {:partition} yogi_error != 1;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} out_pMedium_3 != 0;
    out_Tmp_435 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_472;
    out_Tmp_427 := out_Tmp_472 + out_Tmp_435 * 324;
    call {:si_unique_call 2144} out_sdv_269 := sdv_hash_677052185(out_Tmp_427, 3);
    call {:si_unique_call 2145} out_vslice_dummy_var_78 := sdv_hash_174130848(out_sdv_269, 1, out_pMedium_3);
    goto anon215_Else;

  anon215_Else:
    assume {:partition} yogi_error != 1;
    goto L349;

  L349:
    call {:si_unique_call 2128} sdv_hash_648551832_sdv_special_DTOR(in_dstAddr_4);
    call {:si_unique_call 2129} sdv_hash_648551832_sdv_special_DTOR(in_srcAddr_3);
    goto L349_dummy;

  L349_dummy:
    call {:si_unique_call 2146} {:si_old_unique_call 1} out_sdv_211, out_sdv_220, out_Tmp_413, out_Tmp_415, out_Tmp_417, out_Tmp_418, out_Tmp_419, out_Tmp_422, out_Tmp_425, out_Tmp_426, out_Tmp_427, out_sdv_234, out_Tmp_431, out_Tmp_435, out_sdv_244, out_Tmp_438, out_Tmp_441, out_sdv_249, out_pMedium_2, out_Tmp_442, out_sdv_251, out_Tmp_455, out_Tmp_458, out_ntStatus_20, out_sdv_266, out_Tmp_463, out_sdv_269, out_pMedium_3, out_sdv_272, out_Tmp_469, out_Tmp_471, out_Tmp_472, out_iPinID, out_vslice_dummy_var_77, out_vslice_dummy_var_78, out_vslice_dummy_var_79, out_vslice_dummy_var_80, out_vslice_dummy_var_85, out_vslice_dummy_var_86 := sdv_hash_890537390_loop_L301(out_sdv_211, in_srcAddr_3, in_srcPlug_3, out_sdv_220, out_Tmp_413, out_Tmp_415, out_Tmp_417, out_Tmp_418, out_Tmp_419, out_Tmp_422, in_bFlags_1, out_Tmp_425, in_dstPlug_3, out_Tmp_426, out_Tmp_427, out_sdv_234, out_Tmp_431, out_Tmp_435, out_sdv_244, out_Tmp_438, out_Tmp_441, in_SubunitAddr_8, out_sdv_249, out_pMedium_2, in_dstAddr_4, out_Tmp_442, out_sdv_251, in_Tmp_445, out_Tmp_455, in_idx_11, out_Tmp_458, in_AvcIrb_6, out_ntStatus_20, out_sdv_266, in_Tmp_461, out_Tmp_463, out_sdv_269, out_pMedium_3, out_sdv_272, in_cDstPlugs, out_Tmp_469, out_Tmp_471, out_Tmp_472, out_iPinID, in_this_28, out_vslice_dummy_var_77, out_vslice_dummy_var_78, out_vslice_dummy_var_79, out_vslice_dummy_var_80, out_vslice_dummy_var_85, out_vslice_dummy_var_86);
    return;

  anon186_Then:
    assume {:partition} out_pMedium_3 == 0;
    out_ntStatus_20 := -1073741670;
    goto L349;

  anon184_Then:
    assume {:partition} out_sdv_220 != 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} BAND(Mem_T.INT4[in_srcPlug_3], 128) != 0;
    goto L355;

  anon185_Then:
    assume {:partition} BAND(Mem_T.INT4[in_srcPlug_3], 128) == 0;
    out_Tmp_471 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_419;
    out_Tmp_458 := out_Tmp_419 + out_Tmp_471 * 324;
    call {:si_unique_call 2130} out_sdv_249 := sdv_hash_677052185(out_Tmp_458, 8);
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    call {:si_unique_call 2131} out_vslice_dummy_var_77 := sdv_hash_859452142(out_sdv_249, Mem_T.INT4[in_srcPlug_3]);
    goto L349;

  anon213_Then:
    assume {:partition} BAND(Mem_T.INT4[in_bFlags_1], 1) == 0;
    out_Tmp_441 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_438;
    out_Tmp_469 := out_Tmp_438 + out_Tmp_441 * 324;
    call {:si_unique_call 2132} out_vslice_dummy_var_85 := sdv_hash_677052185(out_Tmp_469, 2);
    goto L349;

  anon183_Then:
    assume {:partition} out_sdv_234 == 0;
    call {:si_unique_call 2136} out_sdv_211 := sdv_hash_986172016(in_srcAddr_3, in_SubunitAddr_8);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_sdv_211 != 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    out_iPinID := in_cDstPlugs + Mem_T.INT4[in_srcPlug_3];
    assume {:nonnull} in_bFlags_1 != 0;
    assume in_bFlags_1 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} BAND(Mem_T.INT4[in_bFlags_1], 1) != 0;
    assume {:nonnull} in_Tmp_445 != 0;
    assume in_Tmp_445 > 0;
    Mem_T.INT4[in_Tmp_445] := 255;
    out_Tmp_418 := in_Tmp_445;
    call {:si_unique_call 2138} out_sdv_244 := sdv_hash_405508819(in_dstAddr_4, out_Tmp_418);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} out_sdv_244 == 0;
    goto L389;

  L389:
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    call {:si_unique_call 2139} out_pMedium_2 := sdv_hash_1062250938(in_this_28, in_srcAddr_3, Mem_T.INT4[in_srcPlug_3], in_dstAddr_4, Mem_T.INT4[in_dstPlug_3]);
    goto anon217_Else;

  anon217_Else:
    assume {:partition} yogi_error != 1;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} out_pMedium_2 != 0;
    out_Tmp_463 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_413;
    out_Tmp_415 := out_Tmp_413 + out_Tmp_463 * 324;
    call {:si_unique_call 2140} out_sdv_272 := sdv_hash_677052185(out_Tmp_415, 3);
    call {:si_unique_call 2141} out_vslice_dummy_var_80 := sdv_hash_174130848(out_sdv_272, 1, out_pMedium_2);
    goto anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto L349;

  anon190_Then:
    assume {:partition} out_pMedium_2 == 0;
    out_ntStatus_20 := -1073741670;
    goto L349;

  anon188_Then:
    assume {:partition} out_sdv_244 != 0;
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} BAND(Mem_T.INT4[in_dstPlug_3], 128) != 0;
    goto L389;

  anon189_Then:
    assume {:partition} BAND(Mem_T.INT4[in_dstPlug_3], 128) == 0;
    out_Tmp_426 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_431;
    out_Tmp_422 := out_Tmp_431 + out_Tmp_426 * 324;
    call {:si_unique_call 2133} out_sdv_251 := sdv_hash_677052185(out_Tmp_422, 8);
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    call {:si_unique_call 2134} out_vslice_dummy_var_79 := sdv_hash_859452142(out_sdv_251, Mem_T.INT4[in_dstPlug_3]);
    goto L349;

  anon216_Then:
    assume {:partition} BAND(Mem_T.INT4[in_bFlags_1], 1) == 0;
    out_Tmp_417 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_442;
    out_Tmp_425 := out_Tmp_442 + out_Tmp_417 * 324;
    call {:si_unique_call 2135} out_vslice_dummy_var_86 := sdv_hash_677052185(out_Tmp_425, 2);
    goto L349;

  anon187_Then:
    assume {:partition} out_sdv_211 == 0;
    goto L349;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L301(in_sdv_211: int, in_srcAddr_3: int, in_srcPlug_3: int, in_sdv_220: int, in_Tmp_413: int, in_Tmp_415: int, in_Tmp_417: int, in_Tmp_418: int, in_Tmp_419: int, in_Tmp_422: int, in_bFlags_1: int, in_Tmp_425: int, in_dstPlug_3: int, in_Tmp_426: int, in_Tmp_427: int, in_sdv_234: int, in_Tmp_431: int, in_Tmp_435: int, in_sdv_244: int, in_Tmp_438: int, in_Tmp_441: int, in_SubunitAddr_8: int, in_sdv_249: int, in_pMedium_2: int, in_dstAddr_4: int, in_Tmp_442: int, in_sdv_251: int, in_Tmp_445: int, in_Tmp_455: int, in_idx_11: int, in_Tmp_458: int, in_AvcIrb_6: int, in_ntStatus_20: int, in_sdv_266: int, in_Tmp_461: int, in_Tmp_463: int, in_sdv_269: int, in_pMedium_3: int, in_sdv_272: int, in_cDstPlugs: int, in_Tmp_469: int, in_Tmp_471: int, in_Tmp_472: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_77: int, in_vslice_dummy_var_78: int, in_vslice_dummy_var_79: int, in_vslice_dummy_var_80: int, in_vslice_dummy_var_85: int, in_vslice_dummy_var_86: int) returns (out_sdv_211: int, out_sdv_220: int, out_Tmp_413: int, out_Tmp_415: int, out_Tmp_417: int, out_Tmp_418: int, out_Tmp_419: int, out_Tmp_422: int, out_Tmp_425: int, out_Tmp_426: int, out_Tmp_427: int, out_sdv_234: int, out_Tmp_431: int, out_Tmp_435: int, out_sdv_244: int, out_Tmp_438: int, out_Tmp_441: int, out_sdv_249: int, out_pMedium_2: int, out_Tmp_442: int, out_sdv_251: int, out_Tmp_455: int, out_Tmp_458: int, out_ntStatus_20: int, out_sdv_266: int, out_Tmp_463: int, out_sdv_269: int, out_pMedium_3: int, out_sdv_272: int, out_Tmp_469: int, out_Tmp_471: int, out_Tmp_472: int, out_iPinID: int, out_vslice_dummy_var_77: int, out_vslice_dummy_var_78: int, out_vslice_dummy_var_79: int, out_vslice_dummy_var_80: int, out_vslice_dummy_var_85: int, out_vslice_dummy_var_86: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_211 == 1 || out_sdv_211 == 0 || out_sdv_211 == in_sdv_211;
  free ensures {:va_keep} out_sdv_220 == 1 || out_sdv_220 == 0 || out_sdv_220 == in_sdv_220;
  free ensures {:va_keep} out_Tmp_418 == in_Tmp_418 || out_Tmp_418 == in_Tmp_445;
  free ensures {:va_keep} out_sdv_234 == 1 || out_sdv_234 == 0 || out_sdv_234 == in_sdv_234;
  free ensures {:va_keep} out_sdv_244 == 1 || out_sdv_244 == 0 || out_sdv_244 == in_sdv_244;
  free ensures {:va_keep} out_Tmp_455 == in_Tmp_455 || out_Tmp_455 == in_Tmp_461;
  free ensures {:va_keep} out_ntStatus_20 == -1073741670 || out_ntStatus_20 == in_ntStatus_20;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L279(in_Tmp_405: int, in_cSrcPlugs: int, in_Tmp_411: int, in_sdv_238: int, in_iSrcPlug: int, in_Tmp_464: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_76: int) returns (out_Tmp_405: int, out_Tmp_411: int, out_sdv_238: int, out_iSrcPlug: int, out_Tmp_464: int, out_iPinID: int, out_vslice_dummy_var_76: int)
{

  entry:
    out_Tmp_405, out_Tmp_411, out_sdv_238, out_iSrcPlug, out_Tmp_464, out_iPinID, out_vslice_dummy_var_76 := in_Tmp_405, in_Tmp_411, in_sdv_238, in_iSrcPlug, in_Tmp_464, in_iPinID, in_vslice_dummy_var_76;
    goto L279, exit;

  exit:
    return;

  L279:
    goto anon181_Then;

  anon181_Then:
    assume {:partition} out_iSrcPlug < in_cSrcPlugs;
    out_Tmp_464 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_405;
    out_Tmp_411 := out_Tmp_405 + out_Tmp_464 * 324;
    call {:si_unique_call 2148} out_sdv_238 := sdv_hash_827633206(out_Tmp_411, KsSrcPinDescriptor);
    goto anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2147} out_vslice_dummy_var_76 := sdv_hash_265040478(out_sdv_238, out_iSrcPlug);
    out_iSrcPlug := out_iSrcPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon211_Else_dummy;

  anon211_Else_dummy:
    call {:si_unique_call 2149} {:si_old_unique_call 1} out_Tmp_405, out_Tmp_411, out_sdv_238, out_iSrcPlug, out_Tmp_464, out_iPinID, out_vslice_dummy_var_76 := sdv_hash_890537390_loop_L279(out_Tmp_405, in_cSrcPlugs, out_Tmp_411, out_sdv_238, out_iSrcPlug, out_Tmp_464, out_iPinID, in_this_28, out_vslice_dummy_var_76);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L279(in_Tmp_405: int, in_cSrcPlugs: int, in_Tmp_411: int, in_sdv_238: int, in_iSrcPlug: int, in_Tmp_464: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_76: int) returns (out_Tmp_405: int, out_Tmp_411: int, out_sdv_238: int, out_iSrcPlug: int, out_Tmp_464: int, out_iPinID: int, out_vslice_dummy_var_76: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L278(in_iDstPlug: int, in_sdv_212: int, in_Tmp_429: int, in_Tmp_440: int, in_Tmp_448: int, in_cDstPlugs: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_75: int) returns (out_iDstPlug: int, out_sdv_212: int, out_Tmp_429: int, out_Tmp_440: int, out_Tmp_448: int, out_iPinID: int, out_vslice_dummy_var_75: int)
{

  entry:
    out_iDstPlug, out_sdv_212, out_Tmp_429, out_Tmp_440, out_Tmp_448, out_iPinID, out_vslice_dummy_var_75 := in_iDstPlug, in_sdv_212, in_Tmp_429, in_Tmp_440, in_Tmp_448, in_iPinID, in_vslice_dummy_var_75;
    goto L278, exit;

  exit:
    return;

  L278:
    goto anon180_Else;

  anon180_Else:
    assume {:partition} in_cDstPlugs > out_iDstPlug;
    out_Tmp_429 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_448;
    out_Tmp_440 := out_Tmp_448 + out_Tmp_429 * 324;
    call {:si_unique_call 2151} out_sdv_212 := sdv_hash_827633206(out_Tmp_440, KsDstPinDescriptor);
    goto anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2150} out_vslice_dummy_var_75 := sdv_hash_265040478(out_sdv_212, out_iDstPlug);
    out_iDstPlug := out_iDstPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon210_Else_dummy;

  anon210_Else_dummy:
    call {:si_unique_call 2152} {:si_old_unique_call 1} out_iDstPlug, out_sdv_212, out_Tmp_429, out_Tmp_440, out_Tmp_448, out_iPinID, out_vslice_dummy_var_75 := sdv_hash_890537390_loop_L278(out_iDstPlug, out_sdv_212, out_Tmp_429, out_Tmp_440, out_Tmp_448, in_cDstPlugs, out_iPinID, in_this_28, out_vslice_dummy_var_75);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L278(in_iDstPlug: int, in_sdv_212: int, in_Tmp_429: int, in_Tmp_440: int, in_Tmp_448: int, in_cDstPlugs: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_75: int) returns (out_iDstPlug: int, out_sdv_212: int, out_Tmp_429: int, out_Tmp_440: int, out_Tmp_448: int, out_iPinID: int, out_vslice_dummy_var_75: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L419()
{

  entry:
    goto L419, exit;

  exit:
    return;

  L419:
    goto L419_dummy;

  L419_dummy:
    call {:si_unique_call 2153} {:si_old_unique_call 1} sdv_hash_890537390_loop_L419();
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L419();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L427(in_OutputIrb_1: int, in_cSrcPlugs: int, in_Irp_18: int, in_Tmp_412: int, in_sdv_239: int, in_Tmp_433: int, in_SubunitAddr_8: int, in_sdv_248: int, in_iSrcPlug: int, in_Tmp_447: int, in_AvcIrb_6: int, in_ntStatus_20: int, in_sdv_276: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_81: int) returns (out_Tmp_412: int, out_sdv_239: int, out_Tmp_433: int, out_sdv_248: int, out_iSrcPlug: int, out_Tmp_447: int, out_ntStatus_20: int, out_sdv_276: int, out_iPinID: int, out_vslice_dummy_var_81: int)
{

  entry:
    out_Tmp_412, out_sdv_239, out_Tmp_433, out_sdv_248, out_iSrcPlug, out_Tmp_447, out_ntStatus_20, out_sdv_276, out_iPinID, out_vslice_dummy_var_81 := in_Tmp_412, in_sdv_239, in_Tmp_433, in_sdv_248, in_iSrcPlug, in_Tmp_447, in_ntStatus_20, in_sdv_276, in_iPinID, in_vslice_dummy_var_81;
    goto L427, exit;

  exit:
    return;

  L427:
    goto anon194_Else;

  anon194_Else:
    assume {:partition} out_ntStatus_20 == 0;
    goto anon195_Else;

  anon195_Else:
    assume {:partition} in_cSrcPlugs > out_iSrcPlug;
    out_Tmp_412 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_447;
    out_Tmp_433 := out_Tmp_447 + out_Tmp_412 * 324;
    call {:si_unique_call 2159} out_sdv_248 := sdv_hash_827633206(out_Tmp_433, KsSrcPinDescriptor);
    goto anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2157} out_vslice_dummy_var_81 := sdv_hash_265040478(out_sdv_248, out_iSrcPlug);
    call {:si_unique_call 2158} out_ntStatus_20 := sdv_hash_802132520(in_AvcIrb_6, in_SubunitAddr_8, out_iSrcPlug, in_OutputIrb_1);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} out_ntStatus_20 >= 0;
    call {:si_unique_call 2155} out_sdv_276 := sdv_hash_291696418(in_OutputIrb_1);
    call {:si_unique_call 2156} out_ntStatus_20 := sdv_hash_592377359(in_Irp_18, out_sdv_276);
    goto L441;

  L441:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} out_ntStatus_20 != 0;
    goto L452;

  L452:
    out_iSrcPlug := out_iSrcPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto L452_dummy;

  L452_dummy:
    call {:si_unique_call 2161} {:si_old_unique_call 1} out_Tmp_412, out_sdv_239, out_Tmp_433, out_sdv_248, out_iSrcPlug, out_Tmp_447, out_ntStatus_20, out_sdv_276, out_iPinID, out_vslice_dummy_var_81 := sdv_hash_890537390_loop_L427(in_OutputIrb_1, in_cSrcPlugs, in_Irp_18, out_Tmp_412, out_sdv_239, out_Tmp_433, in_SubunitAddr_8, out_sdv_248, out_iSrcPlug, out_Tmp_447, in_AvcIrb_6, out_ntStatus_20, out_sdv_276, out_iPinID, in_this_28, out_vslice_dummy_var_81);
    return;

  anon197_Then:
    assume {:partition} out_ntStatus_20 == 0;
    call {:si_unique_call 2154} out_sdv_239 := sdv_hash_390207871(in_AvcIrb_6);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} out_sdv_239 == 12;
    call {:si_unique_call 2160} out_ntStatus_20 := sdv_hash_994092636(in_this_28, in_AvcIrb_6, out_iPinID);
    goto anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    goto L452;

  anon198_Then:
    assume {:partition} out_sdv_239 != 12;
    goto L452;

  anon196_Then:
    assume {:partition} 0 > out_ntStatus_20;
    goto L441;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L427(in_OutputIrb_1: int, in_cSrcPlugs: int, in_Irp_18: int, in_Tmp_412: int, in_sdv_239: int, in_Tmp_433: int, in_SubunitAddr_8: int, in_sdv_248: int, in_iSrcPlug: int, in_Tmp_447: int, in_AvcIrb_6: int, in_ntStatus_20: int, in_sdv_276: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_81: int) returns (out_Tmp_412: int, out_sdv_239: int, out_Tmp_433: int, out_sdv_248: int, out_iSrcPlug: int, out_Tmp_447: int, out_ntStatus_20: int, out_sdv_276: int, out_iPinID: int, out_vslice_dummy_var_81: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_276 == in_sdv_276 || out_sdv_276 == in_OutputIrb_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L425(in_iDstPlug: int, in_OutputIrb_1: int, in_sdv_216: int, in_Irp_18: int, in_Tmp_434: int, in_SubunitAddr_8: int, in_sdv_256: int, in_Tmp_450: int, in_Tmp_456: int, in_sdv_261: int, in_AvcIrb_6: int, in_ntStatus_20: int, in_cDstPlugs: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_82: int) returns (out_iDstPlug: int, out_sdv_216: int, out_Tmp_434: int, out_sdv_256: int, out_Tmp_450: int, out_Tmp_456: int, out_sdv_261: int, out_ntStatus_20: int, out_iPinID: int, out_vslice_dummy_var_82: int)
{

  entry:
    out_iDstPlug, out_sdv_216, out_Tmp_434, out_sdv_256, out_Tmp_450, out_Tmp_456, out_sdv_261, out_ntStatus_20, out_iPinID, out_vslice_dummy_var_82 := in_iDstPlug, in_sdv_216, in_Tmp_434, in_sdv_256, in_Tmp_450, in_Tmp_456, in_sdv_261, in_ntStatus_20, in_iPinID, in_vslice_dummy_var_82;
    goto L425, exit;

  exit:
    return;

  L425:
    goto anon192_Then;

  anon192_Then:
    assume {:partition} out_ntStatus_20 == 0;
    goto anon193_Else;

  anon193_Else:
    assume {:partition} in_cDstPlugs > out_iDstPlug;
    out_Tmp_456 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_434;
    out_Tmp_450 := out_Tmp_434 + out_Tmp_456 * 324;
    call {:si_unique_call 2167} out_sdv_216 := sdv_hash_827633206(out_Tmp_450, KsDstPinDescriptor);
    goto anon222_Else;

  anon222_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2165} out_vslice_dummy_var_82 := sdv_hash_265040478(out_sdv_216, out_iDstPlug);
    call {:si_unique_call 2166} out_ntStatus_20 := sdv_hash_575386943(in_AvcIrb_6, in_SubunitAddr_8, out_iDstPlug, in_OutputIrb_1);
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} out_ntStatus_20 >= 0;
    call {:si_unique_call 2163} out_sdv_261 := sdv_hash_291696418(in_OutputIrb_1);
    call {:si_unique_call 2164} out_ntStatus_20 := sdv_hash_592377359(in_Irp_18, out_sdv_261);
    goto L471;

  L471:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_ntStatus_20 != 0;
    goto L482;

  L482:
    out_iDstPlug := out_iDstPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto L482_dummy;

  L482_dummy:
    call {:si_unique_call 2169} {:si_old_unique_call 1} out_iDstPlug, out_sdv_216, out_Tmp_434, out_sdv_256, out_Tmp_450, out_Tmp_456, out_sdv_261, out_ntStatus_20, out_iPinID, out_vslice_dummy_var_82 := sdv_hash_890537390_loop_L425(out_iDstPlug, in_OutputIrb_1, out_sdv_216, in_Irp_18, out_Tmp_434, in_SubunitAddr_8, out_sdv_256, out_Tmp_450, out_Tmp_456, out_sdv_261, in_AvcIrb_6, out_ntStatus_20, in_cDstPlugs, out_iPinID, in_this_28, out_vslice_dummy_var_82);
    return;

  anon200_Then:
    assume {:partition} out_ntStatus_20 == 0;
    call {:si_unique_call 2162} out_sdv_256 := sdv_hash_390207871(in_AvcIrb_6);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} out_sdv_256 == 12;
    call {:si_unique_call 2168} out_ntStatus_20 := sdv_hash_994092636(in_this_28, in_AvcIrb_6, out_iPinID);
    goto anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    goto L482;

  anon201_Then:
    assume {:partition} out_sdv_256 != 12;
    goto L482;

  anon199_Then:
    assume {:partition} 0 > out_ntStatus_20;
    goto L471;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L425(in_iDstPlug: int, in_OutputIrb_1: int, in_sdv_216: int, in_Irp_18: int, in_Tmp_434: int, in_SubunitAddr_8: int, in_sdv_256: int, in_Tmp_450: int, in_Tmp_456: int, in_sdv_261: int, in_AvcIrb_6: int, in_ntStatus_20: int, in_cDstPlugs: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_82: int) returns (out_iDstPlug: int, out_sdv_216: int, out_Tmp_434: int, out_sdv_256: int, out_Tmp_450: int, out_Tmp_456: int, out_sdv_261: int, out_ntStatus_20: int, out_iPinID: int, out_vslice_dummy_var_82: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_261 == in_sdv_261 || out_sdv_261 == in_OutputIrb_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L489(in_cSrcPlugs: int, in_iSrcPlug: int, in_Tmp_443: int, in_sdv_254: int, in_Tmp_452: int, in_Tmp_470: int, in_sdv_279: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_84: int) returns (out_iSrcPlug: int, out_Tmp_443: int, out_sdv_254: int, out_Tmp_452: int, out_Tmp_470: int, out_sdv_279: int, out_iPinID: int, out_vslice_dummy_var_84: int)
{

  entry:
    out_iSrcPlug, out_Tmp_443, out_sdv_254, out_Tmp_452, out_Tmp_470, out_sdv_279, out_iPinID, out_vslice_dummy_var_84 := in_iSrcPlug, in_Tmp_443, in_sdv_254, in_Tmp_452, in_Tmp_470, in_sdv_279, in_iPinID, in_vslice_dummy_var_84;
    goto L489, exit;

  exit:
    return;

  L489:
    goto anon202_Else;

  anon202_Else:
    assume {:partition} in_cSrcPlugs > out_iSrcPlug;
    out_Tmp_470 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_452;
    out_Tmp_443 := out_Tmp_452 + out_Tmp_470 * 324;
    call {:si_unique_call 2172} out_sdv_254 := sdv_hash_827633206(out_Tmp_443, KsSrcPinDescriptor);
    goto anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2170} out_sdv_279 := sdv_hash_859452142(out_sdv_254, out_iSrcPlug);
    call {:si_unique_call 2171} out_vslice_dummy_var_84 := sdv_hash_677052185(out_sdv_279, 4);
    out_iSrcPlug := out_iSrcPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon225_Else_dummy;

  anon225_Else_dummy:
    call {:si_unique_call 2173} {:si_old_unique_call 1} out_iSrcPlug, out_Tmp_443, out_sdv_254, out_Tmp_452, out_Tmp_470, out_sdv_279, out_iPinID, out_vslice_dummy_var_84 := sdv_hash_890537390_loop_L489(in_cSrcPlugs, out_iSrcPlug, out_Tmp_443, out_sdv_254, out_Tmp_452, out_Tmp_470, out_sdv_279, out_iPinID, in_this_28, out_vslice_dummy_var_84);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L489(in_cSrcPlugs: int, in_iSrcPlug: int, in_Tmp_443: int, in_sdv_254: int, in_Tmp_452: int, in_Tmp_470: int, in_sdv_279: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_84: int) returns (out_iSrcPlug: int, out_Tmp_443: int, out_sdv_254: int, out_Tmp_452: int, out_Tmp_470: int, out_sdv_279: int, out_iPinID: int, out_vslice_dummy_var_84: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_890537390_loop_L422(in_iDstPlug: int, in_sdv_226: int, in_sdv_247: int, in_Tmp_446: int, in_Tmp_465: int, in_Tmp_467: int, in_cDstPlugs: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_83: int) returns (out_iDstPlug: int, out_sdv_226: int, out_sdv_247: int, out_Tmp_446: int, out_Tmp_465: int, out_Tmp_467: int, out_iPinID: int, out_vslice_dummy_var_83: int)
{

  entry:
    out_iDstPlug, out_sdv_226, out_sdv_247, out_Tmp_446, out_Tmp_465, out_Tmp_467, out_iPinID, out_vslice_dummy_var_83 := in_iDstPlug, in_sdv_226, in_sdv_247, in_Tmp_446, in_Tmp_465, in_Tmp_467, in_iPinID, in_vslice_dummy_var_83;
    goto L422, exit;

  exit:
    return;

  L422:
    goto anon191_Else;

  anon191_Else:
    assume {:partition} in_cDstPlugs > out_iDstPlug;
    out_Tmp_467 := out_iPinID;
    assume {:nonnull} in_this_28 != 0;
    assume in_this_28 > 0;
    havoc out_Tmp_446;
    out_Tmp_465 := out_Tmp_446 + out_Tmp_467 * 324;
    call {:si_unique_call 2176} out_sdv_226 := sdv_hash_827633206(out_Tmp_465, KsDstPinDescriptor);
    goto anon224_Else;

  anon224_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2174} out_sdv_247 := sdv_hash_859452142(out_sdv_226, out_iDstPlug);
    call {:si_unique_call 2175} out_vslice_dummy_var_83 := sdv_hash_677052185(out_sdv_247, 4);
    out_iDstPlug := out_iDstPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon224_Else_dummy;

  anon224_Else_dummy:
    call {:si_unique_call 2177} {:si_old_unique_call 1} out_iDstPlug, out_sdv_226, out_sdv_247, out_Tmp_446, out_Tmp_465, out_Tmp_467, out_iPinID, out_vslice_dummy_var_83 := sdv_hash_890537390_loop_L422(out_iDstPlug, out_sdv_226, out_sdv_247, out_Tmp_446, out_Tmp_465, out_Tmp_467, in_cDstPlugs, out_iPinID, in_this_28, out_vslice_dummy_var_83);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L422(in_iDstPlug: int, in_sdv_226: int, in_sdv_247: int, in_Tmp_446: int, in_Tmp_465: int, in_Tmp_467: int, in_cDstPlugs: int, in_iPinID: int, in_this_28: int, in_vslice_dummy_var_83: int) returns (out_iDstPlug: int, out_sdv_226: int, out_sdv_247: int, out_Tmp_446: int, out_Tmp_465: int, out_Tmp_467: int, out_iPinID: int, out_vslice_dummy_var_83: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_238556857_loop_L52()
{

  entry:
    goto L52, exit;

  exit:
    return;

  L52:
    goto L52_dummy;

  L52_dummy:
    call {:si_unique_call 2178} {:si_old_unique_call 1} sdv_hash_238556857_loop_L52();
    return;
}



procedure {:LoopProcedure} sdv_hash_238556857_loop_L52();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_405508819_loop_L15(in_Tmp_782: int, in_Tmp_788: int, in_Tmp_790: int, in_idx_15: int, in_this_48: int, in_sua_3: int) returns (out_Tmp_782: int, out_Tmp_788: int, out_Tmp_790: int, out_idx_15: int)
{

  entry:
    out_Tmp_782, out_Tmp_788, out_Tmp_790, out_idx_15 := in_Tmp_782, in_Tmp_788, in_Tmp_790, in_idx_15;
    goto L15, exit;

  exit:
    return;

  L15:
    out_Tmp_790 := out_idx_15;
    assume {:nonnull} in_this_48 != 0;
    assume in_this_48 > 0;
    havoc out_Tmp_788;
    assume {:nonnull} out_Tmp_788 != 0;
    assume out_Tmp_788 > 0;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.INT4[out_Tmp_788 + out_Tmp_790 * 4] == 255;
    out_Tmp_782 := out_idx_15;
    assume {:nonnull} in_sua_3 != 0;
    assume in_sua_3 > 0;
    goto anon31_Then;

  anon31_Then:
    assume {:partition} Mem_T.INT4[in_sua_3 + out_Tmp_782 * 4] == 255;
    out_idx_15 := out_idx_15 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    havoc out_idx_15;
    return;
}



procedure {:LoopProcedure} sdv_hash_405508819_loop_L15(in_Tmp_782: int, in_Tmp_788: int, in_Tmp_790: int, in_idx_15: int, in_this_48: int, in_sua_3: int) returns (out_Tmp_782: int, out_Tmp_788: int, out_Tmp_790: int, out_idx_15: int);
  free ensures {:va_keep} out_Tmp_782 == in_idx_15 || out_Tmp_782 == in_Tmp_782;
  free ensures {:va_keep} out_Tmp_790 == in_idx_15 || out_Tmp_790 == in_Tmp_790;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_405508819_loop_L24(in_Tmp_784: int, in_Tmp_785: int, in_idx_15: int, in_Tmp_797: int, in_this_48: int, in_sua_3: int) returns (out_Tmp_784: int, out_Tmp_785: int, out_idx_15: int, out_Tmp_797: int)
{

  entry:
    out_Tmp_784, out_Tmp_785, out_idx_15, out_Tmp_797 := in_Tmp_784, in_Tmp_785, in_idx_15, in_Tmp_797;
    goto L24, exit;

  exit:
    return;

  L24:
    out_Tmp_785 := out_idx_15;
    assume {:nonnull} in_this_48 != 0;
    assume in_this_48 > 0;
    havoc out_Tmp_784;
    assume {:nonnull} out_Tmp_784 != 0;
    assume out_Tmp_784 > 0;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.INT4[out_Tmp_784 + out_Tmp_785 * 4] == 255;
    out_Tmp_797 := out_idx_15;
    assume {:nonnull} in_sua_3 != 0;
    assume in_sua_3 > 0;
    goto anon35_Then;

  anon35_Then:
    assume {:partition} Mem_T.INT4[in_sua_3 + out_Tmp_797 * 4] == 255;
    out_idx_15 := out_idx_15 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    havoc out_idx_15;
    return;
}



procedure {:LoopProcedure} sdv_hash_405508819_loop_L24(in_Tmp_784: int, in_Tmp_785: int, in_idx_15: int, in_Tmp_797: int, in_this_48: int, in_sua_3: int) returns (out_Tmp_784: int, out_Tmp_785: int, out_idx_15: int, out_Tmp_797: int);
  free ensures {:va_keep} out_Tmp_785 == in_idx_15 || out_Tmp_785 == in_Tmp_785;
  free ensures {:va_keep} out_Tmp_797 == in_idx_15 || out_Tmp_797 == in_Tmp_797;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_332631937_loop_L14(in_Tmp_840: int, in_Tmp_848: int, in_Tmp_851: int, in_idx_17: int, in_this_60: int, in_limit_1: int, in_sua_6: int) returns (out_Tmp_840: int, out_Tmp_848: int, out_Tmp_851: int, out_idx_17: int)
{

  entry:
    out_Tmp_840, out_Tmp_848, out_Tmp_851, out_idx_17 := in_Tmp_840, in_Tmp_848, in_Tmp_851, in_idx_17;
    goto L14, exit;

  exit:
    return;

  L14:
    goto anon28_Else;

  anon28_Else:
    assume {:partition} in_limit_1 > out_idx_17;
    out_Tmp_851 := out_idx_17;
    assume {:nonnull} in_sua_6 != 0;
    assume in_sua_6 > 0;
    goto anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.INT4[in_sua_6 + out_Tmp_851 * 4] == 255;
    out_Tmp_848 := out_idx_17;
    assume {:nonnull} in_this_60 != 0;
    assume in_this_60 > 0;
    havoc out_Tmp_840;
    assume {:nonnull} out_Tmp_840 != 0;
    assume out_Tmp_840 > 0;
    Mem_T.INT4[out_Tmp_840 + out_Tmp_848 * 4] := 255;
    out_idx_17 := out_idx_17 + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 2179} {:si_old_unique_call 1} out_Tmp_840, out_Tmp_848, out_Tmp_851, out_idx_17 := sdv_hash_332631937_loop_L14(out_Tmp_840, out_Tmp_848, out_Tmp_851, out_idx_17, in_this_60, in_limit_1, in_sua_6);
    return;
}



procedure {:LoopProcedure} sdv_hash_332631937_loop_L14(in_Tmp_840: int, in_Tmp_848: int, in_Tmp_851: int, in_idx_17: int, in_this_60: int, in_limit_1: int, in_sua_6: int) returns (out_Tmp_840: int, out_Tmp_848: int, out_Tmp_851: int, out_idx_17: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation sdv_hash_332631937_loop_L25(in_Tmp_837: int, in_Tmp_842: int, in_Tmp_844: int, in_idx_17: int, in_this_60: int, in_limit_1: int, in_sua_6: int) returns (out_Tmp_837: int, out_Tmp_842: int, out_Tmp_844: int, out_idx_17: int)
{

  entry:
    out_Tmp_837, out_Tmp_842, out_Tmp_844, out_idx_17 := in_Tmp_837, in_Tmp_842, in_Tmp_844, in_idx_17;
    goto L25, exit;

  exit:
    return;

  L25:
    goto anon31_Else;

  anon31_Else:
    assume {:partition} in_limit_1 > out_idx_17;
    out_Tmp_842 := out_idx_17;
    assume {:nonnull} in_sua_6 != 0;
    assume in_sua_6 > 0;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.INT4[in_sua_6 + out_Tmp_842 * 4] == 255;
    out_Tmp_837 := out_idx_17;
    assume {:nonnull} in_this_60 != 0;
    assume in_this_60 > 0;
    havoc out_Tmp_844;
    assume {:nonnull} out_Tmp_844 != 0;
    assume out_Tmp_844 > 0;
    Mem_T.INT4[out_Tmp_844 + out_Tmp_837 * 4] := 255;
    out_idx_17 := out_idx_17 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    call {:si_unique_call 2180} {:si_old_unique_call 1} out_Tmp_837, out_Tmp_842, out_Tmp_844, out_idx_17 := sdv_hash_332631937_loop_L25(out_Tmp_837, out_Tmp_842, out_Tmp_844, out_idx_17, in_this_60, in_limit_1, in_sua_6);
    return;
}



procedure {:LoopProcedure} sdv_hash_332631937_loop_L25(in_Tmp_837: int, in_Tmp_842: int, in_Tmp_844: int, in_idx_17: int, in_this_60: int, in_limit_1: int, in_sua_6: int) returns (out_Tmp_837: int, out_Tmp_842: int, out_Tmp_844: int, out_idx_17: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_BuildIds_loop_L441(in_Tmp_917: int, in_Tmp_922: int, in_Tmp_934: int, in_SubunitAddrLen_2: int, in_Tmp_956: int, in_idx_19: int, in_SubunitType_3: int, in_vslice_dummy_var_217: int, in_vslice_dummy_var_218: int, in_vslice_dummy_var_288: int, in_vslice_dummy_var_289: int, in_vslice_dummy_var_290: int) returns (out_Tmp_917: int, out_Tmp_922: int, out_Tmp_934: int, out_Tmp_956: int, out_idx_19: int, out_vslice_dummy_var_217: int, out_vslice_dummy_var_218: int, out_vslice_dummy_var_288: int, out_vslice_dummy_var_289: int, out_vslice_dummy_var_290: int)
{

  entry:
    out_Tmp_917, out_Tmp_922, out_Tmp_934, out_Tmp_956, out_idx_19, out_vslice_dummy_var_217, out_vslice_dummy_var_218, out_vslice_dummy_var_288, out_vslice_dummy_var_289, out_vslice_dummy_var_290 := in_Tmp_917, in_Tmp_922, in_Tmp_934, in_Tmp_956, in_idx_19, in_vslice_dummy_var_217, in_vslice_dummy_var_218, in_vslice_dummy_var_288, in_vslice_dummy_var_289, in_vslice_dummy_var_290;
    goto L441, exit;

  exit:
    return;

  L441:
    assume {:nonnull} in_SubunitAddrLen_2 != 0;
    assume in_SubunitAddrLen_2 > 0;
    goto anon194_Else;

  anon194_Else:
    assume {:partition} Mem_T.INT4[in_SubunitAddrLen_2] > out_idx_19;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} out_idx_19 != 0;
    call {:si_unique_call 2181} out_Tmp_956 := corral_nondet();
    call {:si_unique_call 2182} out_vslice_dummy_var_288 := RtlIntegerToUnicodeString(out_Tmp_956, 16, 0);
    call {:si_unique_call 2183} out_vslice_dummy_var_217 := corral_nondet();
    out_Tmp_934 := out_idx_19;
    assume {:nonnull} in_SubunitType_3 != 0;
    assume in_SubunitType_3 > 0;
    out_Tmp_922 := BAND(Mem_T.INT4[in_SubunitType_3 + out_Tmp_934 * 4], BOR(BOR(BOR(1, 2), 4), 8));
    call {:si_unique_call 2184} out_vslice_dummy_var_289 := RtlIntegerToUnicodeString(out_Tmp_922, 16, 0);
    call {:si_unique_call 2185} out_vslice_dummy_var_218 := corral_nondet();
    goto L461;

  L461:
    out_idx_19 := out_idx_19 + 1;
    goto L461_dummy;

  L461_dummy:
    havoc out_idx_19;
    return;

  anon195_Then:
    assume {:partition} out_idx_19 == 0;
    assume {:nonnull} in_SubunitType_3 != 0;
    assume in_SubunitType_3 > 0;
    out_Tmp_917 := Mem_T.INT4[in_SubunitType_3];
    call {:si_unique_call 2186} out_vslice_dummy_var_290 := RtlIntegerToUnicodeString(out_Tmp_917, 16, 0);
    goto L461;
}



procedure {:LoopProcedure} Avc_BuildIds_loop_L441(in_Tmp_917: int, in_Tmp_922: int, in_Tmp_934: int, in_SubunitAddrLen_2: int, in_Tmp_956: int, in_idx_19: int, in_SubunitType_3: int, in_vslice_dummy_var_217: int, in_vslice_dummy_var_218: int, in_vslice_dummy_var_288: int, in_vslice_dummy_var_289: int, in_vslice_dummy_var_290: int) returns (out_Tmp_917: int, out_Tmp_922: int, out_Tmp_934: int, out_Tmp_956: int, out_idx_19: int, out_vslice_dummy_var_217: int, out_vslice_dummy_var_218: int, out_vslice_dummy_var_288: int, out_vslice_dummy_var_289: int, out_vslice_dummy_var_290: int);
  free ensures {:va_keep} out_Tmp_934 == in_idx_19 || out_Tmp_934 == in_Tmp_934;
  free ensures {:va_keep} out_vslice_dummy_var_288 == 0 || out_vslice_dummy_var_288 == -1073741823 || out_vslice_dummy_var_288 == in_vslice_dummy_var_288;
  free ensures {:va_keep} out_vslice_dummy_var_289 == 0 || out_vslice_dummy_var_289 == -1073741823 || out_vslice_dummy_var_289 == in_vslice_dummy_var_289;
  free ensures {:va_keep} out_vslice_dummy_var_290 == 0 || out_vslice_dummy_var_290 == -1073741823 || out_vslice_dummy_var_290 == in_vslice_dummy_var_290;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_EnumerateChildren_loop_L15(in_PdoData_5: int) returns (out_PdoData_5: int)
{

  entry:
    out_PdoData_5 := in_PdoData_5;
    goto L15, exit;

  exit:
    return;

  L15:
    goto anon10_Else;

  anon10_Else:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    goto anon10_Else_dummy;

  anon10_Else_dummy:
    call {:si_unique_call 2187} {:si_old_unique_call 1} out_PdoData_5 := Avc_EnumerateChildren_loop_L15(out_PdoData_5);
    return;
}



procedure {:LoopProcedure} Avc_EnumerateChildren_loop_L15(in_PdoData_5: int) returns (out_PdoData_5: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_FDO_Pnp_loop_L52(in_PdoData_7: int, in_BusExtension_10: int, in_Next: int) returns (out_PdoData_7: int, out_Next: int)
{

  entry:
    out_PdoData_7, out_Next := in_PdoData_7, in_Next;
    goto L52, exit;

  exit:
    return;

  L52:
    goto anon122_Else;

  anon122_Else:
    out_PdoData_7 := out_Next;
    assume {:nonnull} out_Next != 0;
    assume out_Next > 0;
    havoc out_Next;
    call {:si_unique_call 2188} AvcRemoveFromPdoList(in_BusExtension_10, out_PdoData_7);
    assume {:nonnull} out_PdoData_7 != 0;
    assume out_PdoData_7 > 0;
    assume {:nonnull} out_PdoData_7 != 0;
    assume out_PdoData_7 > 0;
    goto anon122_Else_dummy;

  anon122_Else_dummy:
    call {:si_unique_call 2189} {:si_old_unique_call 1} out_PdoData_7, out_Next := Avc_FDO_Pnp_loop_L52(out_PdoData_7, in_BusExtension_10, out_Next);
    return;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L52(in_PdoData_7: int, in_BusExtension_10: int, in_Next: int) returns (out_PdoData_7: int, out_Next: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_FDO_Pnp_loop_L144(in_Relations: int, in_cObjects: int, in_Tmp_991: int, in_Tmp_997: int, in_PdoData_8: int, in_Tmp_998: int, in_Tmp_999: int, in_vslice_dummy_var_301: int) returns (out_cObjects: int, out_Tmp_991: int, out_Tmp_997: int, out_PdoData_8: int, out_Tmp_998: int, out_Tmp_999: int, out_vslice_dummy_var_301: int)
{

  entry:
    out_cObjects, out_Tmp_991, out_Tmp_997, out_PdoData_8, out_Tmp_998, out_Tmp_999, out_vslice_dummy_var_301 := in_cObjects, in_Tmp_991, in_Tmp_997, in_PdoData_8, in_Tmp_998, in_Tmp_999, in_vslice_dummy_var_301;
    goto L144, exit;

  exit:
    return;

  L144:
    goto anon131_Else;

  anon131_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    out_Tmp_991 := out_cObjects;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_999;
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    assume {:nonnull} out_Tmp_999 != 0;
    assume out_Tmp_999 > 0;
    out_Tmp_997 := out_cObjects;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_998;
    assume {:nonnull} out_Tmp_998 != 0;
    assume out_Tmp_998 > 0;
    call {:si_unique_call 2190} out_vslice_dummy_var_301 := sdv_ObReferenceObject(0);
    out_cObjects := out_cObjects + 1;
    goto L147;

  L147:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    havoc out_PdoData_8;
    goto L147_dummy;

  L147_dummy:
    call {:si_unique_call 2191} {:si_old_unique_call 1} out_cObjects, out_Tmp_991, out_Tmp_997, out_PdoData_8, out_Tmp_998, out_Tmp_999, out_vslice_dummy_var_301 := Avc_FDO_Pnp_loop_L144(in_Relations, out_cObjects, out_Tmp_991, out_Tmp_997, out_PdoData_8, out_Tmp_998, out_Tmp_999, out_vslice_dummy_var_301);
    return;

  anon133_Then:
    goto L147;

  anon132_Then:
    goto L147;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L144(in_Relations: int, in_cObjects: int, in_Tmp_991: int, in_Tmp_997: int, in_PdoData_8: int, in_Tmp_998: int, in_Tmp_999: int, in_vslice_dummy_var_301: int) returns (out_cObjects: int, out_Tmp_991: int, out_Tmp_997: int, out_PdoData_8: int, out_Tmp_998: int, out_Tmp_999: int, out_vslice_dummy_var_301: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_FDO_Pnp_loop_L140(in_Relations: int, in_Tmp_984: int, in_cObjects: int, in_cIncomingObjects: int, in_Tmp_995: int, in_Tmp_996: int, in_OldRelations: int, in_Tmp_1000: int) returns (out_Tmp_984: int, out_cObjects: int, out_Tmp_995: int, out_Tmp_996: int, out_Tmp_1000: int)
{

  entry:
    out_Tmp_984, out_cObjects, out_Tmp_995, out_Tmp_996, out_Tmp_1000 := in_Tmp_984, in_cObjects, in_Tmp_995, in_Tmp_996, in_Tmp_1000;
    goto L140, exit;

  exit:
    return;

  L140:
    goto anon130_Else;

  anon130_Else:
    assume {:partition} in_cIncomingObjects > out_cObjects;
    out_Tmp_984 := out_cObjects;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_995;
    out_Tmp_996 := out_cObjects;
    assume {:nonnull} in_OldRelations != 0;
    assume in_OldRelations > 0;
    havoc out_Tmp_1000;
    assume {:nonnull} out_Tmp_1000 != 0;
    assume out_Tmp_1000 > 0;
    assume {:nonnull} out_Tmp_995 != 0;
    assume out_Tmp_995 > 0;
    out_cObjects := out_cObjects + 1;
    goto anon130_Else_dummy;

  anon130_Else_dummy:
    call {:si_unique_call 2192} {:si_old_unique_call 1} out_Tmp_984, out_cObjects, out_Tmp_995, out_Tmp_996, out_Tmp_1000 := Avc_FDO_Pnp_loop_L140(in_Relations, out_Tmp_984, out_cObjects, in_cIncomingObjects, out_Tmp_995, out_Tmp_996, in_OldRelations, out_Tmp_1000);
    return;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L140(in_Relations: int, in_Tmp_984: int, in_cObjects: int, in_cIncomingObjects: int, in_Tmp_995: int, in_Tmp_996: int, in_OldRelations: int, in_Tmp_1000: int) returns (out_Tmp_984: int, out_cObjects: int, out_Tmp_995: int, out_Tmp_996: int, out_Tmp_1000: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_FDO_Pnp_loop_L121(in_cObjects: int, in_PdoData_8: int) returns (out_cObjects: int, out_PdoData_8: int)
{

  entry:
    out_cObjects, out_PdoData_8 := in_cObjects, in_PdoData_8;
    goto L121, exit;

  exit:
    return;

  L121:
    goto anon128_Else;

  anon128_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    out_cObjects := out_cObjects + 1;
    goto L124;

  L124:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    havoc out_PdoData_8;
    goto L124_dummy;

  L124_dummy:
    call {:si_unique_call 2193} {:si_old_unique_call 1} out_cObjects, out_PdoData_8 := Avc_FDO_Pnp_loop_L121(out_cObjects, out_PdoData_8);
    return;

  anon129_Then:
    goto L124;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L121(in_cObjects: int, in_PdoData_8: int) returns (out_cObjects: int, out_PdoData_8: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_FDO_Pnp_loop_L182(in_PdoData_6: int, in_Tmp_987: int, in_PdoExtension_17: int, in_sdv_604: int, in_sdv_610: int, in_BusExtension_10: int) returns (out_PdoData_6: int, out_Tmp_987: int, out_PdoExtension_17: int, out_sdv_604: int, out_sdv_610: int)
{

  entry:
    out_PdoData_6, out_Tmp_987, out_PdoExtension_17, out_sdv_604, out_sdv_610 := in_PdoData_6, in_Tmp_987, in_PdoExtension_17, in_sdv_604, in_sdv_610;
    goto L182, exit;

  exit:
    return;

  L182:
    call {:si_unique_call 2194} out_sdv_604 := sdv_IsListEmpty(0);
    goto anon134_Else;

  anon134_Else:
    assume {:partition} out_sdv_604 == 0;
    assume {:nonnull} in_BusExtension_10 != 0;
    assume in_BusExtension_10 > 0;
    call {:si_unique_call 2202} out_sdv_610 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(in_BusExtension_10));
    out_PdoData_6 := out_sdv_610;
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    havoc out_Tmp_987;
    assume {:nonnull} out_Tmp_987 != 0;
    assume out_Tmp_987 > 0;
    havoc out_PdoExtension_17;
    assume {:nonnull} out_PdoExtension_17 != 0;
    assume out_PdoExtension_17 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    call {:si_unique_call 2201} RemoveConnectionMgr(out_PdoData_6);
    goto anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    call {:si_unique_call 2200} sdv_ExFreePool(0);
    goto L229;

  L229:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    call {:si_unique_call 2199} sdv_ExFreePool(0);
    goto L233;

  L233:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    call {:si_unique_call 2198} sdv_ExFreePool(0);
    goto L237;

  L237:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    call {:si_unique_call 2197} sdv_ExFreePool(0);
    goto L241;

  L241:
    call {:si_unique_call 2195} sdv_ExFreePool(0);
    assume {:nonnull} out_PdoExtension_17 != 0;
    assume out_PdoExtension_17 > 0;
    call {:si_unique_call 2196} IoDeleteDevice(0);
    goto L241_dummy;

  L241_dummy:
    goto L_BAF_2;

  L_BAF_2:
    call {:si_unique_call 2204} {:si_old_unique_call 1} out_PdoData_6, out_Tmp_987, out_PdoExtension_17, out_sdv_604, out_sdv_610 := Avc_FDO_Pnp_loop_L182(out_PdoData_6, out_Tmp_987, out_PdoExtension_17, out_sdv_604, out_sdv_610, in_BusExtension_10);
    return;

  anon139_Then:
    goto L241;

  anon138_Then:
    goto L237;

  anon137_Then:
    goto L233;

  anon136_Then:
    goto L229;

  anon168_Then:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    call {:si_unique_call 2203} InitializeListHead(PdoList__PDO_DATA(out_PdoData_6));
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto anon168_Then_dummy;

  anon168_Then_dummy:
    goto L_BAF_2;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L182(in_PdoData_6: int, in_Tmp_987: int, in_PdoExtension_17: int, in_sdv_604: int, in_sdv_610: int, in_BusExtension_10: int) returns (out_PdoData_6: int, out_Tmp_987: int, out_PdoExtension_17: int, out_sdv_604: int, out_sdv_610: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_604 == 1 || out_sdv_604 == 0 || out_sdv_604 == in_sdv_604;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation RtlLargeIntegerToUnicodeString_loop_L25(in_Mask: int, in_Value_1: int, in_Tmp_1018: int, in_ptr: int, in_Tmp_1019: int) returns (out_Value_1: int, out_Tmp_1018: int, out_Tmp_1019: int)
{
  var vslice_dummy_var_178: int;

  entry:
    out_Value_1, out_Tmp_1018, out_Tmp_1019 := in_Value_1, in_Tmp_1018, in_Tmp_1019;
    goto L25, exit;

  exit:
    return;

  L25:
    out_Tmp_1018 := BAND(out_Value_1, in_Mask);
    out_Tmp_1019 := out_Tmp_1018;
    assume {:nonnull} in_ptr != 0;
    assume in_ptr > 0;
    havoc vslice_dummy_var_178;
    Mem_T.INT4[in_ptr] := vslice_dummy_var_178;
    call {:si_unique_call 2205} out_Value_1 := corral_nondet();
    goto anon33_Then;

  anon33_Then:
    assume {:partition} out_Value_1 != 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    call {:si_unique_call 2206} {:si_old_unique_call 1} out_Value_1, out_Tmp_1018, out_Tmp_1019 := RtlLargeIntegerToUnicodeString_loop_L25(in_Mask, out_Value_1, out_Tmp_1018, in_ptr, out_Tmp_1019);
    return;
}



procedure {:LoopProcedure} RtlLargeIntegerToUnicodeString_loop_L25(in_Mask: int, in_Value_1: int, in_Tmp_1018: int, in_ptr: int, in_Tmp_1019: int) returns (out_Value_1: int, out_Tmp_1018: int, out_Tmp_1019: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation RtlLargeIntegerToUnicodeString_loop_L48(in_Tmp_1016: int, in_Value_1: int, in_ptr: int, in_Tmp_1021: int) returns (out_Tmp_1016: int, out_Value_1: int, out_Tmp_1021: int)
{
  var vslice_dummy_var_179: int;

  entry:
    out_Tmp_1016, out_Value_1, out_Tmp_1021 := in_Tmp_1016, in_Value_1, in_Tmp_1021;
    goto L48, exit;

  exit:
    return;

  L48:
    out_Tmp_1021 := INTMOD(out_Value_1, 10);
    out_Tmp_1016 := out_Tmp_1021;
    assume {:nonnull} in_ptr != 0;
    assume in_ptr > 0;
    havoc vslice_dummy_var_179;
    Mem_T.INT4[in_ptr] := vslice_dummy_var_179;
    out_Value_1 := INTDIV(out_Value_1, 10);
    goto anon31_Then;

  anon31_Then:
    assume {:partition} out_Value_1 != 0;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    call {:si_unique_call 2207} {:si_old_unique_call 1} out_Tmp_1016, out_Value_1, out_Tmp_1021 := RtlLargeIntegerToUnicodeString_loop_L48(out_Tmp_1016, out_Value_1, in_ptr, out_Tmp_1021);
    return;
}



procedure {:LoopProcedure} RtlLargeIntegerToUnicodeString_loop_L48(in_Tmp_1016: int, in_Value_1: int, in_ptr: int, in_Tmp_1021: int) returns (out_Tmp_1016: int, out_Value_1: int, out_Tmp_1021: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_BusResetCallback_sdv_static_function_4_loop_L70(in_Command_23: int, in_Tmp_1032: int, in_sdv_635: int, in_OldIrql_14: int, in_sdv_637: int, in_BusExtension_15: int) returns (out_Command_23: int, out_Tmp_1032: int, out_sdv_635: int, out_OldIrql_14: int, out_sdv_637: int)
{

  entry:
    out_Command_23, out_Tmp_1032, out_sdv_635, out_OldIrql_14, out_sdv_637 := in_Command_23, in_Tmp_1032, in_sdv_635, in_OldIrql_14, in_sdv_637;
    goto L70, exit;

  exit:
    return;

  L70:
    call {:si_unique_call 2208} out_sdv_635 := sdv_IsListEmpty(0);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_sdv_635 == 0;
    assume {:nonnull} in_BusExtension_15 != 0;
    assume in_BusExtension_15 > 0;
    call {:si_unique_call 2209} out_sdv_637 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(in_BusExtension_15));
    out_Command_23 := out_sdv_637;
    call {:si_unique_call 2210} InitializeListHead(out_Command_23);
    call {:si_unique_call 2211} sdv_KeReleaseSpinLock(0, out_OldIrql_14);
    call {:si_unique_call 2212} AvcPendingIrpCompletion(out_Command_23);
    call {:si_unique_call 2213} AvcFreeCommandContext(out_Command_23);
    call {:si_unique_call 2214} out_Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    Mem_T.INT4[out_Tmp_1032] := out_OldIrql_14;
    call {:si_unique_call 2215} sdv_KeAcquireSpinLock(0, out_Tmp_1032);
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_1032];
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    call {:si_unique_call 2216} {:si_old_unique_call 1} out_Command_23, out_Tmp_1032, out_sdv_635, out_OldIrql_14, out_sdv_637 := Avc_BusResetCallback_sdv_static_function_4_loop_L70(out_Command_23, out_Tmp_1032, out_sdv_635, out_OldIrql_14, out_sdv_637, in_BusExtension_15);
    return;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_4_loop_L70(in_Command_23: int, in_Tmp_1032: int, in_sdv_635: int, in_OldIrql_14: int, in_sdv_637: int, in_BusExtension_15: int) returns (out_Command_23: int, out_Tmp_1032: int, out_sdv_635: int, out_OldIrql_14: int, out_sdv_637: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_635 == 1 || out_sdv_635 == 0 || out_sdv_635 == in_sdv_635;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_BusResetCallback_sdv_static_function_4_loop_L69(in_Command_24: int, in_Entry_10: int, in_BusExtension_15: int, in_vslice_dummy_var_306: int, in_vslice_dummy_var_307: int) returns (out_Command_24: int, out_Entry_10: int, out_vslice_dummy_var_306: int, out_vslice_dummy_var_307: int)
{

  entry:
    out_Command_24, out_Entry_10, out_vslice_dummy_var_306, out_vslice_dummy_var_307 := in_Command_24, in_Entry_10, in_vslice_dummy_var_306, in_vslice_dummy_var_307;
    goto L69, exit;

  exit:
    return;

  L69:
    goto anon31_Else;

  anon31_Else:
    out_Command_24 := out_Entry_10;
    assume {:nonnull} out_Entry_10 != 0;
    assume out_Entry_10 > 0;
    havoc out_Entry_10;
    assume {:nonnull} out_Command_24 != 0;
    assume out_Command_24 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2217} out_vslice_dummy_var_306 := sdv_RemoveEntryList(0);
    assume {:nonnull} in_BusExtension_15 != 0;
    assume in_BusExtension_15 > 0;
    call {:si_unique_call 2218} out_vslice_dummy_var_307 := sdv_InsertTailList(CleanupList__BUS_DEVICE_EXTENSION(in_BusExtension_15), out_Command_24);
    assume {:nonnull} out_Command_24 != 0;
    assume out_Command_24 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    goto L_BAF_3;

  L_BAF_3:
    call {:si_unique_call 2219} {:si_old_unique_call 1} out_Command_24, out_Entry_10, out_vslice_dummy_var_306, out_vslice_dummy_var_307 := Avc_BusResetCallback_sdv_static_function_4_loop_L69(out_Command_24, out_Entry_10, in_BusExtension_15, out_vslice_dummy_var_306, out_vslice_dummy_var_307);
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_3;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_4_loop_L69(in_Command_24: int, in_Entry_10: int, in_BusExtension_15: int, in_vslice_dummy_var_306: int, in_vslice_dummy_var_307: int) returns (out_Command_24: int, out_Entry_10: int, out_vslice_dummy_var_306: int, out_vslice_dummy_var_307: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} out_vslice_dummy_var_306 == 1 || out_vslice_dummy_var_306 == 0 || out_vslice_dummy_var_306 == in_vslice_dummy_var_306;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_BusResetCallback_sdv_static_function_4_loop_L34(in_PdoData_9: int, in_Tmp_1032: int, in_OldIrql_14: int, in_PdoExtension_18: int, in_Tmp_1033: int) returns (out_PdoData_9: int, out_Tmp_1032: int, out_OldIrql_14: int, out_PdoExtension_18: int, out_Tmp_1033: int)
{

  entry:
    out_PdoData_9, out_Tmp_1032, out_OldIrql_14, out_PdoExtension_18, out_Tmp_1033 := in_PdoData_9, in_Tmp_1032, in_OldIrql_14, in_PdoExtension_18, in_Tmp_1033;
    goto L34, exit;

  exit:
    return;

  L34:
    goto anon25_Else;

  anon25_Else:
    assume {:nonnull} out_PdoData_9 != 0;
    assume out_PdoData_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_PdoData_9 != 0;
    assume out_PdoData_9 > 0;
    havoc out_Tmp_1033;
    assume {:nonnull} out_Tmp_1033 != 0;
    assume out_Tmp_1033 > 0;
    havoc out_PdoExtension_18;
    call {:si_unique_call 2223} sdv_KeReleaseSpinLock(0, out_OldIrql_14);
    call {:si_unique_call 2224} out_Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    Mem_T.INT4[out_Tmp_1032] := out_OldIrql_14;
    call {:si_unique_call 2225} sdv_KeAcquireSpinLock(0, out_Tmp_1032);
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_1032];
    assume {:nonnull} out_PdoExtension_18 != 0;
    assume out_PdoExtension_18 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} out_PdoExtension_18 != 0;
    assume out_PdoExtension_18 > 0;
    goto L47;

  L47:
    assume {:nonnull} out_PdoExtension_18 != 0;
    assume out_PdoExtension_18 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} out_PdoExtension_18 != 0;
    assume out_PdoExtension_18 > 0;
    goto L51;

  L51:
    call {:si_unique_call 2220} sdv_KeReleaseSpinLock(0, out_OldIrql_14);
    call {:si_unique_call 2221} out_Tmp_1032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    Mem_T.INT4[out_Tmp_1032] := out_OldIrql_14;
    call {:si_unique_call 2222} sdv_KeAcquireSpinLock(0, out_Tmp_1032);
    assume {:nonnull} out_Tmp_1032 != 0;
    assume out_Tmp_1032 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_1032];
    goto L37;

  L37:
    assume {:nonnull} out_PdoData_9 != 0;
    assume out_PdoData_9 > 0;
    havoc out_PdoData_9;
    goto L37_dummy;

  L37_dummy:
    call {:si_unique_call 2226} {:si_old_unique_call 1} out_PdoData_9, out_Tmp_1032, out_OldIrql_14, out_PdoExtension_18, out_Tmp_1033 := Avc_BusResetCallback_sdv_static_function_4_loop_L34(out_PdoData_9, out_Tmp_1032, out_OldIrql_14, out_PdoExtension_18, out_Tmp_1033);
    return;

  anon29_Then:
    goto L51;

  anon28_Then:
    goto L47;

  anon27_Then:
    goto L37;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_4_loop_L34(in_PdoData_9: int, in_Tmp_1032: int, in_OldIrql_14: int, in_PdoExtension_18: int, in_Tmp_1033: int) returns (out_PdoData_9: int, out_Tmp_1032: int, out_OldIrql_14: int, out_PdoExtension_18: int, out_Tmp_1033: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AvcRobustStatusRequest_loop_L13(in_Retries_1: int, in_ntStatus_45: int, in_tmDelay_1: int, in_Command_25: int, in_vslice_dummy_var_313: int) returns (out_Retries_1: int, out_ntStatus_45: int, out_vslice_dummy_var_313: int)
{

  entry:
    out_Retries_1, out_ntStatus_45, out_vslice_dummy_var_313 := in_Retries_1, in_ntStatus_45, in_vslice_dummy_var_313;
    goto L13, exit;

  exit:
    return;

  L13:
    assume {:CounterLoop 10} {:Counter "Retries_1"} true;
    goto anon25_Else;

  anon25_Else:
    assume {:partition} 10 > out_Retries_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_Retries_1 != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_ntStatus_45 != 258;
    call {:si_unique_call 2228} out_vslice_dummy_var_313 := KeDelayExecutionThread(0, 0, 0);
    goto L16;

  L16:
    call {:si_unique_call 2227} out_ntStatus_45 := AvcStatus(in_Command_25);
    goto anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_ntStatus_45 != 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} out_ntStatus_45 != -1073741435;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} out_ntStatus_45 != -1073741668;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_ntStatus_45 != -1073741643;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_ntStatus_45 != -1073741248;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} out_ntStatus_45 == 258;
    goto L27;

  L27:
    assume {:nonnull} in_tmDelay_1 != 0;
    assume in_tmDelay_1 > 0;
    goto L33;

  L33:
    out_Retries_1 := out_Retries_1 + 1;
    goto L33_dummy;

  L33_dummy:
    call {:si_unique_call 2229} {:si_old_unique_call 1} out_Retries_1, out_ntStatus_45, out_vslice_dummy_var_313 := AvcRobustStatusRequest_loop_L13(out_Retries_1, out_ntStatus_45, in_tmDelay_1, in_Command_25, out_vslice_dummy_var_313);
    return;

  anon33_Then:
    assume {:partition} out_ntStatus_45 == -1073741248;
    goto L27;

  anon32_Then:
    assume {:partition} out_ntStatus_45 == -1073741643;
    goto L27;

  anon31_Then:
    assume {:partition} out_ntStatus_45 == -1073741668;
    goto L27;

  anon30_Then:
    assume {:partition} out_ntStatus_45 == -1073741435;
    goto L27;

  anon28_Then:
    assume {:partition} out_ntStatus_45 == 0;
    assume {:nonnull} in_Command_25 != 0;
    assume in_Command_25 > 0;
    goto anon29_Else;

  anon29_Else:
    assume {:nonnull} in_tmDelay_1 != 0;
    assume in_tmDelay_1 > 0;
    goto L33;

  anon27_Then:
    assume {:partition} out_ntStatus_45 == 258;
    goto L16;

  anon26_Then:
    assume {:partition} out_Retries_1 == 0;
    goto L16;
}



procedure {:LoopProcedure} AvcRobustStatusRequest_loop_L13(in_Retries_1: int, in_ntStatus_45: int, in_tmDelay_1: int, in_Command_25: int, in_vslice_dummy_var_313: int) returns (out_Retries_1: int, out_ntStatus_45: int, out_vslice_dummy_var_313: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_vslice_dummy_var_313 == 0 || out_vslice_dummy_var_313 == -1073741823 || out_vslice_dummy_var_313 == in_vslice_dummy_var_313;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_UpdateVirtualSubunitInfo_loop_L66(in_PdoData_11: int, in_SubunitAddr_12: int, in_sdv_646: int, in_BusExtension_18: int) returns (out_PdoData_11: int, out_sdv_646: int)
{
  var vslice_dummy_var_180: int;

  entry:
    out_PdoData_11, out_sdv_646 := in_PdoData_11, in_sdv_646;
    goto L66, exit;

  exit:
    return;

  L66:
    goto anon65_Else;

  anon65_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc vslice_dummy_var_180;
    call {:si_unique_call 2230} out_sdv_646 := AvcSubunitPackedTypesEqual(in_SubunitAddr_12, vslice_dummy_var_180);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_sdv_646 != 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto L71;

  L71:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc out_PdoData_11;
    goto L71_dummy;

  L71_dummy:
    call {:si_unique_call 2231} {:si_old_unique_call 1} out_PdoData_11, out_sdv_646 := Avc_UpdateVirtualSubunitInfo_loop_L66(out_PdoData_11, in_SubunitAddr_12, out_sdv_646, in_BusExtension_18);
    return;

  anon67_Then:
    goto L71;

  anon66_Then:
    assume {:partition} out_sdv_646 == 0;
    goto L71;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L66(in_PdoData_11: int, in_SubunitAddr_12: int, in_sdv_646: int, in_BusExtension_18: int) returns (out_PdoData_11: int, out_sdv_646: int);
  free ensures {:va_keep} out_sdv_646 == 1 || out_sdv_646 == 0 || out_sdv_646 == in_sdv_646;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 2} Avc_UpdateVirtualSubunitInfo_loop_L143(in_InstanceID: int, in_uniValueName: int, in_ntStatus_46: int, in_szTemp_1: int, in_uniTemp_1: int, in_Tmp_1044: int, in_vslice_dummy_var_317: int, in_vslice_dummy_var_320: int, in_vslice_dummy_var_321: int, in_vslice_dummy_var_322: int) returns (out_InstanceID: int, out_ntStatus_46: int, out_Tmp_1044: int, out_vslice_dummy_var_317: int, out_vslice_dummy_var_320: int, out_vslice_dummy_var_321: int, out_vslice_dummy_var_322: int)
{

  entry:
    out_InstanceID, out_ntStatus_46, out_Tmp_1044, out_vslice_dummy_var_317, out_vslice_dummy_var_320, out_vslice_dummy_var_321, out_vslice_dummy_var_322 := in_InstanceID, in_ntStatus_46, in_Tmp_1044, in_vslice_dummy_var_317, in_vslice_dummy_var_320, in_vslice_dummy_var_321, in_vslice_dummy_var_322;
    goto L143, exit;

  exit:
    return;

  L143:
    goto anon75_Else;

  anon75_Else:
    assume {:partition} out_InstanceID != 0;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} out_ntStatus_46 == 0;
    call {:si_unique_call 2236} out_ntStatus_46 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} out_ntStatus_46 == 0;
    assume {:nonnull} in_uniTemp_1 != 0;
    assume in_uniTemp_1 > 0;
    assume {:nonnull} in_uniTemp_1 != 0;
    assume in_uniTemp_1 > 0;
    assume {:nonnull} in_uniTemp_1 != 0;
    assume in_uniTemp_1 > 0;
    out_Tmp_1044 := out_InstanceID;
    call {:si_unique_call 2232} out_vslice_dummy_var_320 := RtlIntegerToUnicodeString(out_Tmp_1044, 10, 0);
    assume {:nonnull} in_uniValueName != 0;
    assume in_uniValueName > 0;
    call {:si_unique_call 2233} out_vslice_dummy_var_321 := corral_nondet();
    call {:si_unique_call 2234} out_vslice_dummy_var_322 := corral_nondet();
    call {:si_unique_call 2235} out_vslice_dummy_var_317 := corral_nondet();
    goto L152;

  L152:
    out_InstanceID := out_InstanceID + 1;
    goto L152_dummy;

  L152_dummy:
    call {:si_unique_call 2237} {:si_old_unique_call 1} out_InstanceID, out_ntStatus_46, out_Tmp_1044, out_vslice_dummy_var_317, out_vslice_dummy_var_320, out_vslice_dummy_var_321, out_vslice_dummy_var_322 := Avc_UpdateVirtualSubunitInfo_loop_L143(out_InstanceID, in_uniValueName, out_ntStatus_46, in_szTemp_1, in_uniTemp_1, out_Tmp_1044, out_vslice_dummy_var_317, out_vslice_dummy_var_320, out_vslice_dummy_var_321, out_vslice_dummy_var_322);
    return;

  anon78_Then:
    assume {:partition} out_ntStatus_46 != 0;
    goto L152;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L143(in_InstanceID: int, in_uniValueName: int, in_ntStatus_46: int, in_szTemp_1: int, in_uniTemp_1: int, in_Tmp_1044: int, in_vslice_dummy_var_317: int, in_vslice_dummy_var_320: int, in_vslice_dummy_var_321: int, in_vslice_dummy_var_322: int) returns (out_InstanceID: int, out_ntStatus_46: int, out_Tmp_1044: int, out_vslice_dummy_var_317: int, out_vslice_dummy_var_320: int, out_vslice_dummy_var_321: int, out_vslice_dummy_var_322: int);
  free ensures {:va_keep} out_ntStatus_46 == 0 || out_ntStatus_46 == -1073741823 || out_ntStatus_46 == in_ntStatus_46;
  free ensures {:va_keep} out_vslice_dummy_var_320 == 0 || out_vslice_dummy_var_320 == -1073741823 || out_vslice_dummy_var_320 == in_vslice_dummy_var_320;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_UpdateVirtualSubunitInfo_loop_L53(in_PdoData_11: int, in_SubunitAddr_12: int, in_sdv_646: int, in_sdv_654: int, in_BusExtension_18: int) returns (out_PdoData_11: int, out_sdv_646: int, out_sdv_654: int)
{
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;

  entry:
    out_PdoData_11, out_sdv_646, out_sdv_654 := in_PdoData_11, in_sdv_646, in_sdv_654;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon62_Else;

  anon62_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc vslice_dummy_var_182;
    call {:si_unique_call 2240} out_sdv_654 := AvcSubunitAddrsEqual(in_SubunitAddr_12, vslice_dummy_var_182);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} out_sdv_654 != 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto L63;

  L63:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc out_PdoData_11;
    goto L66;

  L66:
    call {:si_unique_call 2238} out_PdoData_11, out_sdv_646 := Avc_UpdateVirtualSubunitInfo_loop_L66(out_PdoData_11, in_SubunitAddr_12, out_sdv_646, in_BusExtension_18);
    goto L66_last;

  L66_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc vslice_dummy_var_181;
    call {:si_unique_call 2239} out_sdv_646 := AvcSubunitPackedTypesEqual(in_SubunitAddr_12, vslice_dummy_var_181);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_sdv_646 != 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto L71;

  L71:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc out_PdoData_11;
    assume false;
    return;

  anon67_Then:
    goto L71;

  anon66_Then:
    assume {:partition} out_sdv_646 == 0;
    goto L71;

  anon65_Then:
    goto anon65_Then_dummy;

  anon65_Then_dummy:
    goto L_BAF_4;

  L_BAF_4:
    call {:si_unique_call 2241} {:si_old_unique_call 1} out_PdoData_11, out_sdv_646, out_sdv_654 := Avc_UpdateVirtualSubunitInfo_loop_L53(out_PdoData_11, in_SubunitAddr_12, out_sdv_646, out_sdv_654, in_BusExtension_18);
    return;

  anon64_Then:
    goto L63;

  anon63_Then:
    assume {:partition} out_sdv_654 == 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc out_PdoData_11;
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    goto L_BAF_4;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L53(in_PdoData_11: int, in_SubunitAddr_12: int, in_sdv_646: int, in_sdv_654: int, in_BusExtension_18: int) returns (out_PdoData_11: int, out_sdv_646: int, out_sdv_654: int);
  free ensures {:va_keep} out_sdv_646 == 1 || out_sdv_646 == 0 || out_sdv_646 == in_sdv_646;
  free ensures {:va_keep} out_sdv_654 == 1 || out_sdv_654 == 0 || out_sdv_654 == in_sdv_654;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_UpdateVirtualSubunitInfo_loop_L36(in_SubunitID_2: int, in_SubunitAddr_12: int, in_ntStatus_46: int, in_MaxSubunitID: int, in_SubunitType_4: int, in_BusExtension_18: int) returns (out_SubunitID_2: int, out_ntStatus_46: int)
{

  entry:
    out_SubunitID_2, out_ntStatus_46 := in_SubunitID_2, in_ntStatus_46;
    goto L36, exit;

  exit:
    return;

  L36:
    assume {:nonnull} in_MaxSubunitID != 0;
    assume in_MaxSubunitID > 0;
    goto anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID] >= out_SubunitID_2;
    call {:si_unique_call 2242} out_ntStatus_46 := AvcPackSubunitAddress(in_SubunitType_4, out_SubunitID_2, 32, in_SubunitAddr_12, 0);
    call {:si_unique_call 2243} Avc_FindOrCreatePDO(in_BusExtension_18, in_SubunitAddr_12, 5);
    goto anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    out_SubunitID_2 := out_SubunitID_2 + 1;
    goto anon82_Else_dummy;

  anon82_Else_dummy:
    call {:si_unique_call 2244} {:si_old_unique_call 1} out_SubunitID_2, out_ntStatus_46 := Avc_UpdateVirtualSubunitInfo_loop_L36(out_SubunitID_2, in_SubunitAddr_12, out_ntStatus_46, in_MaxSubunitID, in_SubunitType_4, in_BusExtension_18);
    return;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L36(in_SubunitID_2: int, in_SubunitAddr_12: int, in_ntStatus_46: int, in_MaxSubunitID: int, in_SubunitType_4: int, in_BusExtension_18: int) returns (out_SubunitID_2: int, out_ntStatus_46: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_ntStatus_46 == 0 || out_ntStatus_46 == -1073741811 || out_ntStatus_46 == in_ntStatus_46;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_EnumerateExtrnalChildren_loop_L122(in_Tmp_1073: int, in_BytesUsed_6: int, in_Tmp_1074: int, in_SubunitInfoBytes_2: int, in_SubunitAddrs: int, in_Tmp_1076: int, in_ntStatus_49: int, in_Tmp_1084: int, in_StartOffset: int) returns (out_Tmp_1073: int, out_Tmp_1074: int, out_SubunitAddrs: int, out_Tmp_1076: int, out_ntStatus_49: int, out_Tmp_1084: int, out_StartOffset: int)
{

  entry:
    out_Tmp_1073, out_Tmp_1074, out_SubunitAddrs, out_Tmp_1076, out_ntStatus_49, out_Tmp_1084, out_StartOffset := in_Tmp_1073, in_Tmp_1074, in_SubunitAddrs, in_Tmp_1076, in_ntStatus_49, in_Tmp_1084, in_StartOffset;
    goto L122, exit;

  exit:
    return;

  L122:
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    Mem_T.INT4[in_BytesUsed_6] := 0;
    out_Tmp_1084 := out_StartOffset;
    assume {:nonnull} in_SubunitInfoBytes_2 != 0;
    assume in_SubunitInfoBytes_2 > 0;
    goto anon104_Then;

  anon104_Then:
    assume {:partition} Mem_T.INT4[in_SubunitInfoBytes_2 + out_Tmp_1084 * 4] != 255;
    out_Tmp_1073 := 32 - out_StartOffset;
    out_Tmp_1074 := out_StartOffset;
    out_Tmp_1076 := in_SubunitInfoBytes_2 + out_Tmp_1074 * 4;
    call {:si_unique_call 2245} out_ntStatus_49 := AvcValidateSubunitAddress(out_Tmp_1076, out_Tmp_1073, in_BytesUsed_6);
    goto anon93_Then;

  anon93_Then:
    assume {:partition} out_ntStatus_49 == 0;
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    out_StartOffset := out_StartOffset + Mem_T.INT4[in_BytesUsed_6];
    out_SubunitAddrs := out_SubunitAddrs + 1;
    goto anon105_Else;

  anon105_Else:
    assume {:partition} INTMOD(out_StartOffset, 4) != 0;
    goto anon105_Else_dummy;

  anon105_Else_dummy:
    call {:si_unique_call 2246} {:si_old_unique_call 1} out_Tmp_1073, out_Tmp_1074, out_SubunitAddrs, out_Tmp_1076, out_ntStatus_49, out_Tmp_1084, out_StartOffset := Avc_EnumerateExtrnalChildren_loop_L122(out_Tmp_1073, in_BytesUsed_6, out_Tmp_1074, in_SubunitInfoBytes_2, out_SubunitAddrs, out_Tmp_1076, out_ntStatus_49, out_Tmp_1084, out_StartOffset);
    return;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L122(in_Tmp_1073: int, in_BytesUsed_6: int, in_Tmp_1074: int, in_SubunitInfoBytes_2: int, in_SubunitAddrs: int, in_Tmp_1076: int, in_ntStatus_49: int, in_Tmp_1084: int, in_StartOffset: int) returns (out_Tmp_1073: int, out_Tmp_1074: int, out_SubunitAddrs: int, out_Tmp_1076: int, out_ntStatus_49: int, out_Tmp_1084: int, out_StartOffset: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} out_ntStatus_49 == 0 || out_ntStatus_49 == -1073741811 || out_ntStatus_49 == in_ntStatus_49;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_EnumerateExtrnalChildren_loop_L107(in_Tmp_1073: int, in_MorePages: int, in_BytesUsed_6: int, in_Tmp_1074: int, in_SubunitInfoBytes_2: int, in_SubunitAddrs: int, in_Tmp_1075: int, in_Tmp_1076: int, in_Tmp_1077: int, in_ntStatus_49: int, in_Tmp_1082: int, in_Command_26: int, in_Tmp_1084: int, in_StartOffset: int, in_page: int) returns (out_Tmp_1073: int, out_MorePages: int, out_Tmp_1074: int, out_SubunitAddrs: int, out_Tmp_1075: int, out_Tmp_1076: int, out_Tmp_1077: int, out_ntStatus_49: int, out_Tmp_1082: int, out_Tmp_1084: int, out_StartOffset: int, out_page: int)
{
  var vslice_dummy_var_183: int;

  entry:
    out_Tmp_1073, out_MorePages, out_Tmp_1074, out_SubunitAddrs, out_Tmp_1075, out_Tmp_1076, out_Tmp_1077, out_ntStatus_49, out_Tmp_1082, out_Tmp_1084, out_StartOffset, out_page := in_Tmp_1073, in_MorePages, in_Tmp_1074, in_SubunitAddrs, in_Tmp_1075, in_Tmp_1076, in_Tmp_1077, in_ntStatus_49, in_Tmp_1082, in_Tmp_1084, in_StartOffset, in_page;
    goto L107, exit;

  exit:
    return;

  L107:
    goto anon90_Else;

  anon90_Else:
    assume {:partition} out_MorePages != 0;
    goto anon91_Else;

  anon91_Else:
    assume {:partition} 8 > out_page;
    assume {:nonnull} in_Command_26 != 0;
    assume in_Command_26 > 0;
    havoc vslice_dummy_var_183;
    call {:si_unique_call 2250} out_ntStatus_49 := AvcReq_SubUnitInfo(vslice_dummy_var_183, out_page);
    goto anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_ntStatus_49 != 0;
    out_MorePages := 0;
    goto L116;

  L116:
    out_page := out_page + 1;
    goto L116_dummy;

  L116_dummy:
    call {:si_unique_call 2251} {:si_old_unique_call 1} out_Tmp_1073, out_MorePages, out_Tmp_1074, out_SubunitAddrs, out_Tmp_1075, out_Tmp_1076, out_Tmp_1077, out_ntStatus_49, out_Tmp_1082, out_Tmp_1084, out_StartOffset, out_page := Avc_EnumerateExtrnalChildren_loop_L107(out_Tmp_1073, out_MorePages, in_BytesUsed_6, out_Tmp_1074, in_SubunitInfoBytes_2, out_SubunitAddrs, out_Tmp_1075, out_Tmp_1076, out_Tmp_1077, out_ntStatus_49, out_Tmp_1082, in_Command_26, out_Tmp_1084, out_StartOffset, out_page);
    return;

  anon92_Then:
    assume {:partition} out_ntStatus_49 == 0;
    assume {:nonnull} in_Command_26 != 0;
    assume in_Command_26 > 0;
    havoc out_Tmp_1075;
    assume {:nonnull} in_Command_26 != 0;
    assume in_Command_26 > 0;
    havoc out_Tmp_1082;
    out_Tmp_1077 := out_page * 4;
    call {:si_unique_call 2249} sdv_RtlCopyMemory(0, 0, 4);
    goto L122;

  L122:
    call {:si_unique_call 2248} out_Tmp_1073, out_Tmp_1074, out_SubunitAddrs, out_Tmp_1076, out_ntStatus_49, out_Tmp_1084, out_StartOffset := Avc_EnumerateExtrnalChildren_loop_L122(out_Tmp_1073, in_BytesUsed_6, out_Tmp_1074, in_SubunitInfoBytes_2, out_SubunitAddrs, out_Tmp_1076, out_ntStatus_49, out_Tmp_1084, out_StartOffset);
    goto L122_last;

  L122_last:
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    Mem_T.INT4[in_BytesUsed_6] := 0;
    out_Tmp_1084 := out_StartOffset;
    assume {:nonnull} in_SubunitInfoBytes_2 != 0;
    assume in_SubunitInfoBytes_2 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Mem_T.INT4[in_SubunitInfoBytes_2 + out_Tmp_1084 * 4] == 255;
    out_MorePages := 0;
    goto L116;

  anon104_Then:
    assume {:partition} Mem_T.INT4[in_SubunitInfoBytes_2 + out_Tmp_1084 * 4] != 255;
    out_Tmp_1073 := 32 - out_StartOffset;
    out_Tmp_1074 := out_StartOffset;
    out_Tmp_1076 := in_SubunitInfoBytes_2 + out_Tmp_1074 * 4;
    call {:si_unique_call 2247} out_ntStatus_49 := AvcValidateSubunitAddress(out_Tmp_1076, out_Tmp_1073, in_BytesUsed_6);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} out_ntStatus_49 != 0;
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} INTMOD(out_StartOffset + Mem_T.INT4[in_BytesUsed_6], 4) != 0;
    out_MorePages := 0;
    goto L116;

  anon94_Then:
    assume {:partition} INTMOD(out_StartOffset + Mem_T.INT4[in_BytesUsed_6], 4) == 0;
    goto L116;

  anon93_Then:
    assume {:partition} out_ntStatus_49 == 0;
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    out_StartOffset := out_StartOffset + Mem_T.INT4[in_BytesUsed_6];
    out_SubunitAddrs := out_SubunitAddrs + 1;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} INTMOD(out_StartOffset, 4) != 0;
    assume false;
    return;

  anon105_Then:
    assume {:partition} INTMOD(out_StartOffset, 4) == 0;
    goto L116;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L107(in_Tmp_1073: int, in_MorePages: int, in_BytesUsed_6: int, in_Tmp_1074: int, in_SubunitInfoBytes_2: int, in_SubunitAddrs: int, in_Tmp_1075: int, in_Tmp_1076: int, in_Tmp_1077: int, in_ntStatus_49: int, in_Tmp_1082: int, in_Command_26: int, in_Tmp_1084: int, in_StartOffset: int, in_page: int) returns (out_Tmp_1073: int, out_MorePages: int, out_Tmp_1074: int, out_SubunitAddrs: int, out_Tmp_1075: int, out_Tmp_1076: int, out_Tmp_1077: int, out_ntStatus_49: int, out_Tmp_1082: int, out_Tmp_1084: int, out_StartOffset: int, out_page: int);
  modifies Mem_T.INT4, alloc, yogi_error, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_MorePages == 0 || out_MorePages == in_MorePages;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_EnumerateExtrnalChildren_loop_L52(in_SubunitID_3: int, in_SubunitAddr_13: int, in_ntStatus_49: int, in_MaxSubunitID_1: int, in_SubunitType_5: int, in_BusExtension_21: int) returns (out_SubunitID_3: int, out_ntStatus_49: int)
{

  entry:
    out_SubunitID_3, out_ntStatus_49 := in_SubunitID_3, in_ntStatus_49;
    goto L52, exit;

  exit:
    return;

  L52:
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID_1] >= out_SubunitID_3;
    call {:si_unique_call 2252} out_ntStatus_49 := AvcPackSubunitAddress(in_SubunitType_5, out_SubunitID_3, 32, in_SubunitAddr_13, 0);
    call {:si_unique_call 2253} Avc_FindOrCreatePDO(in_BusExtension_21, in_SubunitAddr_13, 3);
    goto anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    out_SubunitID_3 := out_SubunitID_3 + 1;
    goto anon101_Else_dummy;

  anon101_Else_dummy:
    call {:si_unique_call 2254} {:si_old_unique_call 1} out_SubunitID_3, out_ntStatus_49 := Avc_EnumerateExtrnalChildren_loop_L52(out_SubunitID_3, in_SubunitAddr_13, out_ntStatus_49, in_MaxSubunitID_1, in_SubunitType_5, in_BusExtension_21);
    return;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L52(in_SubunitID_3: int, in_SubunitAddr_13: int, in_ntStatus_49: int, in_MaxSubunitID_1: int, in_SubunitType_5: int, in_BusExtension_21: int) returns (out_SubunitID_3: int, out_ntStatus_49: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_ntStatus_49 == 0 || out_ntStatus_49 == -1073741811 || out_ntStatus_49 == in_ntStatus_49;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_EnumerateExtrnalChildren_loop_L30(in_SubunitID_3: int, in_SubunitAddr_13: int, in_SubunitInfoBytes_2: int, in_SubunitAddrs: int, in_Tmp_1079: int, in_ntStatus_49: int, in_MaxSubunitID_1: int, in_SubunitType_5: int, in_BytesUsed_7: int, in_HasSingleCameraSubunit: int, in_StartOffset: int, in_HasSingleTapeSubunit: int, in_Tmp_1085: int, in_BusExtension_21: int) returns (out_SubunitID_3: int, out_SubunitAddrs: int, out_Tmp_1079: int, out_ntStatus_49: int, out_HasSingleCameraSubunit: int, out_StartOffset: int, out_HasSingleTapeSubunit: int, out_Tmp_1085: int)
{

  entry:
    out_SubunitID_3, out_SubunitAddrs, out_Tmp_1079, out_ntStatus_49, out_HasSingleCameraSubunit, out_StartOffset, out_HasSingleTapeSubunit, out_Tmp_1085 := in_SubunitID_3, in_SubunitAddrs, in_Tmp_1079, in_ntStatus_49, in_HasSingleCameraSubunit, in_StartOffset, in_HasSingleTapeSubunit, in_Tmp_1085;
    goto L30, exit;

  exit:
    return;

  L30:
    goto anon74_Else;

  anon74_Else:
    assume {:partition} out_SubunitAddrs != 0;
    out_Tmp_1085 := out_StartOffset;
    out_Tmp_1079 := in_SubunitInfoBytes_2 + out_Tmp_1085 * 4;
    call {:si_unique_call 2255} out_ntStatus_49 := AvcUnpackSubunitAddress(out_Tmp_1079, in_SubunitType_5, in_MaxSubunitID_1, in_BytesUsed_7);
    goto anon76_Else;

  anon76_Else:
    assume {:partition} out_ntStatus_49 == 0;
    assume {:nonnull} in_SubunitType_5 != 0;
    assume in_SubunitType_5 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} Mem_T.INT4[in_SubunitType_5] == 4;
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID_1] == 0;
    out_HasSingleTapeSubunit := 1;
    goto L46;

  L46:
    assume {:nonnull} in_BytesUsed_7 != 0;
    assume in_BytesUsed_7 > 0;
    out_StartOffset := out_StartOffset + Mem_T.INT4[in_BytesUsed_7];
    out_SubunitAddrs := out_SubunitAddrs - 1;
    goto L46_dummy;

  L46_dummy:
    call {:si_unique_call 2259} {:si_old_unique_call 1} out_SubunitID_3, out_SubunitAddrs, out_Tmp_1079, out_ntStatus_49, out_HasSingleCameraSubunit, out_StartOffset, out_HasSingleTapeSubunit, out_Tmp_1085 := Avc_EnumerateExtrnalChildren_loop_L30(out_SubunitID_3, in_SubunitAddr_13, in_SubunitInfoBytes_2, out_SubunitAddrs, out_Tmp_1079, out_ntStatus_49, in_MaxSubunitID_1, in_SubunitType_5, in_BytesUsed_7, out_HasSingleCameraSubunit, out_StartOffset, out_HasSingleTapeSubunit, out_Tmp_1085, in_BusExtension_21);
    return;

  anon79_Then:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID_1] != 0;
    goto L43;

  L43:
    assume {:nonnull} in_SubunitType_5 != 0;
    assume in_SubunitType_5 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.INT4[in_SubunitType_5] != 7;
    goto L51;

  L51:
    out_SubunitID_3 := 0;
    goto L52;

  L52:
    call {:si_unique_call 2256} out_SubunitID_3, out_ntStatus_49 := Avc_EnumerateExtrnalChildren_loop_L52(out_SubunitID_3, in_SubunitAddr_13, out_ntStatus_49, in_MaxSubunitID_1, in_SubunitType_5, in_BusExtension_21);
    goto L52_last;

  L52_last:
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID_1] >= out_SubunitID_3;
    call {:si_unique_call 2257} out_ntStatus_49 := AvcPackSubunitAddress(in_SubunitType_5, out_SubunitID_3, 32, in_SubunitAddr_13, 0);
    call {:si_unique_call 2258} Avc_FindOrCreatePDO(in_BusExtension_21, in_SubunitAddr_13, 3);
    goto anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    out_SubunitID_3 := out_SubunitID_3 + 1;
    assume false;
    return;

  anon81_Then:
    assume {:partition} out_SubunitID_3 > Mem_T.INT4[in_MaxSubunitID_1];
    goto L46;

  anon78_Then:
    assume {:partition} Mem_T.INT4[in_SubunitType_5] == 7;
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID_1] != 0;
    goto L51;

  anon80_Then:
    assume {:partition} Mem_T.INT4[in_MaxSubunitID_1] == 0;
    out_HasSingleCameraSubunit := 1;
    goto L46;

  anon77_Then:
    assume {:partition} Mem_T.INT4[in_SubunitType_5] != 4;
    goto L43;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L30(in_SubunitID_3: int, in_SubunitAddr_13: int, in_SubunitInfoBytes_2: int, in_SubunitAddrs: int, in_Tmp_1079: int, in_ntStatus_49: int, in_MaxSubunitID_1: int, in_SubunitType_5: int, in_BytesUsed_7: int, in_HasSingleCameraSubunit: int, in_StartOffset: int, in_HasSingleTapeSubunit: int, in_Tmp_1085: int, in_BusExtension_21: int) returns (out_SubunitID_3: int, out_SubunitAddrs: int, out_Tmp_1079: int, out_ntStatus_49: int, out_HasSingleCameraSubunit: int, out_StartOffset: int, out_HasSingleTapeSubunit: int, out_Tmp_1085: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_ntStatus_49 == 0 || out_ntStatus_49 == -1073741811 || out_ntStatus_49 == in_ntStatus_49;
  free ensures {:va_keep} out_HasSingleCameraSubunit == 1 || out_HasSingleCameraSubunit == in_HasSingleCameraSubunit;
  free ensures {:va_keep} out_HasSingleTapeSubunit == 1 || out_HasSingleTapeSubunit == in_HasSingleTapeSubunit;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_EnumerateExtrnalChildren_loop_L91(in_PdoData_15: int) returns (out_PdoData_15: int)
{

  entry:
    out_PdoData_15 := in_PdoData_15;
    goto L91, exit;

  exit:
    return;

  L91:
    goto anon88_Else;

  anon88_Else:
    assume {:nonnull} out_PdoData_15 != 0;
    assume out_PdoData_15 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} out_PdoData_15 != 0;
    assume out_PdoData_15 > 0;
    goto L96;

  L96:
    assume {:nonnull} out_PdoData_15 != 0;
    assume out_PdoData_15 > 0;
    havoc out_PdoData_15;
    goto L96_dummy;

  L96_dummy:
    call {:si_unique_call 2260} {:si_old_unique_call 1} out_PdoData_15 := Avc_EnumerateExtrnalChildren_loop_L91(out_PdoData_15);
    return;

  anon89_Then:
    goto L96;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L91(in_PdoData_15: int) returns (out_PdoData_15: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_RemoveVirtualSubunitInfo_loop_L36(in_PdoData_16: int, in_SubunitInfoBytes_3: int, in_sdv_704: int, in_Entry_11: int, in_BusExtension_24: int) returns (out_PdoData_16: int, out_sdv_704: int, out_Entry_11: int)
{
  var vslice_dummy_var_184: int;

  entry:
    out_PdoData_16, out_sdv_704, out_Entry_11 := in_PdoData_16, in_sdv_704, in_Entry_11;
    goto L36, exit;

  exit:
    return;

  L36:
    goto anon38_Else;

  anon38_Else:
    out_PdoData_16 := out_Entry_11;
    assume {:nonnull} out_PdoData_16 != 0;
    assume out_PdoData_16 > 0;
    havoc vslice_dummy_var_184;
    call {:si_unique_call 2261} out_sdv_704 := AvcSubunitPackedTypesEqual(in_SubunitInfoBytes_3, vslice_dummy_var_184);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_sdv_704 != 0;
    assume {:nonnull} out_PdoData_16 != 0;
    assume out_PdoData_16 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} in_BusExtension_24 != 0;
    assume in_BusExtension_24 > 0;
    assume {:nonnull} out_PdoData_16 != 0;
    assume out_PdoData_16 > 0;
    goto L45;

  L45:
    assume {:nonnull} out_Entry_11 != 0;
    assume out_Entry_11 > 0;
    havoc out_Entry_11;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 2262} {:si_old_unique_call 1} out_PdoData_16, out_sdv_704, out_Entry_11 := Avc_RemoveVirtualSubunitInfo_loop_L36(out_PdoData_16, in_SubunitInfoBytes_3, out_sdv_704, out_Entry_11, in_BusExtension_24);
    return;

  anon40_Then:
    goto L45;

  anon39_Then:
    assume {:partition} out_sdv_704 == 0;
    goto L45;
}



procedure {:LoopProcedure} Avc_RemoveVirtualSubunitInfo_loop_L36(in_PdoData_16: int, in_SubunitInfoBytes_3: int, in_sdv_704: int, in_Entry_11: int, in_BusExtension_24: int) returns (out_PdoData_16: int, out_sdv_704: int, out_Entry_11: int);
  free ensures {:va_keep} out_sdv_704 == 1 || out_sdv_704 == 0 || out_sdv_704 == in_sdv_704;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Avc_FindOrCreatePDO_loop_L13(in_PdoData_18: int, in_sdv_709: int, in_Entry_12: int, in_SubunitAddr_16: int) returns (out_PdoData_18: int, out_sdv_709: int, out_Entry_12: int)
{
  var vslice_dummy_var_185: int;

  entry:
    out_PdoData_18, out_sdv_709, out_Entry_12 := in_PdoData_18, in_sdv_709, in_Entry_12;
    goto L13, exit;

  exit:
    return;

  L13:
    goto anon51_Else;

  anon51_Else:
    out_PdoData_18 := out_Entry_12;
    assume {:nonnull} out_PdoData_18 != 0;
    assume out_PdoData_18 > 0;
    havoc vslice_dummy_var_185;
    call {:si_unique_call 2263} out_sdv_709 := AvcSubunitAddrsEqual(in_SubunitAddr_16, vslice_dummy_var_185);
    goto anon53_Else;

  anon53_Else:
    assume {:partition} out_sdv_709 == 0;
    out_PdoData_18 := 0;
    assume {:nonnull} out_Entry_12 != 0;
    assume out_Entry_12 > 0;
    havoc out_Entry_12;
    goto anon53_Else_dummy;

  anon53_Else_dummy:
    call {:si_unique_call 2264} {:si_old_unique_call 1} out_PdoData_18, out_sdv_709, out_Entry_12 := Avc_FindOrCreatePDO_loop_L13(out_PdoData_18, out_sdv_709, out_Entry_12, in_SubunitAddr_16);
    return;
}



procedure {:LoopProcedure} Avc_FindOrCreatePDO_loop_L13(in_PdoData_18: int, in_sdv_709: int, in_Entry_12: int, in_SubunitAddr_16: int) returns (out_PdoData_18: int, out_sdv_709: int, out_Entry_12: int);
  free ensures {:va_keep} out_PdoData_18 == 0 || out_PdoData_18 == in_PdoData_18;
  free ensures {:va_keep} out_sdv_709 == 1 || out_sdv_709 == 0 || out_sdv_709 == in_sdv_709;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_595: int, dup_assertVar: bool);
  modifies alloc, yogi_error, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_595: int, dup_assertVar: bool)
{

  start:
    call Tmp_595, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


