var {:scalar} alloc: int;

var {:scalar} yogi_error: int;

var {:scalar} sdv_irql_previous_5: int;

var {:scalar} sdv_irql_previous_2: int;

var {:scalar} sdv_irql_current: int;

var {:scalar} sdv_irql_previous: int;

var {:scalar} sdv_irql_previous_4: int;

var {:scalar} sdv_irql_previous_3: int;

var {:scalar} Mem_T.CancelIrql__IRP: [int]int;

var {:scalar} Mem_T.INT4: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const SerialPortNameGuid: int;

const SerailPortPerfGuid: int;

const SerialPortPropertiesGuid: int;

const SerialPortHWGuid: int;

const CyzGlobals: int;

const SerialPortCommGuid: int;

const CyzPhysicalZero: int;

const KeTickCount: int;

const CyzPhysicalZero_1: int;

const driverDefaults: int;

const CyzPhysicalZero_2: int;

const currentInstance_sdv_static_local_variable_117: int;

const GUID_DEVINTERFACE_COMPORT: int;

const sdv_cancelFptr: int;

const CyzPhysicalZero_3: int;

const CyzPhysicalZero_4: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_io_create_device_called: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_20: int, actual_sdv_21: int) returns (Tmp_18: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_20: int, actual_sdv_21: int) returns (Tmp_18: int)
{
  var {:scalar} sdv_22: int;

  anon0:
    call {:si_unique_call 0} Tmp_18 := __HAVOC_malloc(4);
    call {:si_unique_call 1} sdv_22 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    assume {:nonnull} sdv_22 != 0;
    assume sdv_22 > 0;
    Mem_T.INT4[Tmp_18] := Mem_T.INT4[sdv_22];
    return;
}



procedure {:origName "CyzFlush"} CyzFlush(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_28: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFlush"} CyzFlush(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_28: int)
{
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} Tmp_31: int;
  var {:pointer} Tmp_32: int;
  var {:pointer} Extension: int;
  var {:scalar} sdv_38: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Tmp_35: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    Irp := actual_Irp;
    call {:si_unique_call 2} Tmp_29 := __HAVOC_malloc(72);
    call {:si_unique_call 3} Tmp_30 := __HAVOC_malloc(72);
    call {:si_unique_call 4} Tmp_31 := __HAVOC_malloc(72);
    call {:si_unique_call 5} Tmp_32 := __HAVOC_malloc(76);
    call {:si_unique_call 6} Tmp_33 := __HAVOC_malloc(96);
    call {:si_unique_call 7} Tmp_35 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc Extension;
    call {:si_unique_call 8} sdv_do_paged_code_check();
    Tmp_33 := strConst__li2bpl0;
    call {:si_unique_call 9} vslice_dummy_var_0 := CyzDbgPrintEx(9, Tmp_33);
    Tmp_32 := strConst__li2bpl1;
    call {:si_unique_call 10} vslice_dummy_var_1 := CyzDbgPrintEx(2, Tmp_32);
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    call {:si_unique_call 11} status := CyzIRPPrologue(Irp, Extension);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status != 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status >= 0;
    goto L29;

  L29:
    Tmp_29 := strConst__li2bpl3;
    call {:si_unique_call 12} vslice_dummy_var_2 := CyzDbgPrintEx(2, Tmp_29);
    Tmp_28 := status;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} 0 > status;
    Tmp_31 := strConst__li2bpl2;
    call {:si_unique_call 13} vslice_dummy_var_3 := CyzDbgPrintEx(9, Tmp_31);
    call {:si_unique_call 14} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 15} CyzIRPEpilogue(Extension);
    goto L29;

  anon11_Then:
    assume {:partition} status == 0;
    call {:si_unique_call 16} sdv_38 := CyzCompleteIfError(DeviceObject, Irp);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_38 != 0;
    Tmp_35 := strConst__li2bpl4;
    call {:si_unique_call 17} vslice_dummy_var_4 := CyzDbgPrintEx(2, Tmp_35);
    Tmp_28 := -1073741536;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_38 == 0;
    assume {:nonnull} Extension != 0;
    assume Extension > 0;
    call {:si_unique_call 18} status := CyzStartOrQueue(Extension, Irp, WriteQueue__CYZ_DEVICE_EXTENSION(Extension), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension), li2bplFunctionConstant131);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_30 := strConst__li2bpl5;
    call {:si_unique_call 19} vslice_dummy_var_5 := CyzDbgPrintEx(2, Tmp_30);
    Tmp_28 := status;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 20} vslice_dummy_var_6 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartFlush"} CyzStartFlush(actual_Extension_1: int) returns (Tmp_38: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartFlush"} CyzStartFlush(actual_Extension_1: int) returns (Tmp_38: int)
{
  var {:pointer} NewIrp: int;
  var {:pointer} Tmp_39: int;
  var {:pointer} Extension_1: int;
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 21} NewIrp := __HAVOC_malloc(4);
    Extension_1 := actual_Extension_1;
    call {:si_unique_call 22} sdv_do_paged_code_check();
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_39;
    assume {:nonnull} Tmp_39 != 0;
    assume Tmp_39 > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 23} CyzGetNextWrite#1(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_1), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_1), NewIrp, 1, Extension_1);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} NewIrp != 0;
    assume NewIrp > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 24} vslice_dummy_var_7 := CyzStartWrite#1(Extension_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L12;

  L12:
    Tmp_38 := 0;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    goto L12;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 25} vslice_dummy_var_8 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyzGetRegistryKeyValueLength"} CyzGetRegistryKeyValueLength(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int) returns (Tmp_43: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetRegistryKeyValueLength"} CyzGetRegistryKeyValueLength(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int) returns (Tmp_43: int)
{
  var {:pointer} fullInfo: int;
  var {:scalar} length: int;
  var {:pointer} sdv_41: int;
  var {:scalar} keyName: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} KeyNameString: int;
  var {:scalar} KeyNameStringLength: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 26} keyName := __HAVOC_malloc(12);
    KeyNameString := actual_KeyNameString;
    KeyNameStringLength := actual_KeyNameStringLength;
    call {:si_unique_call 27} sdv_do_paged_code_check();
    call {:si_unique_call 28} RtlInitUnicodeString(keyName, KeyNameString);
    length := 24 + KeyNameStringLength;
    call {:si_unique_call 29} sdv_41 := ExAllocatePoolWithTag(1, length, -797279933);
    fullInfo := sdv_41;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} fullInfo != 0;
    call {:si_unique_call 30} Tmp_44 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    Mem_T.INT4[Tmp_44] := length;
    call {:si_unique_call 31} vslice_dummy_var_9 := ZwQueryValueKey(0, 0, 1, 0, length, Tmp_44);
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    length := Mem_T.INT4[Tmp_44];
    call {:si_unique_call 32} sdv_ExFreePool(0);
    goto L18;

  L18:
    Tmp_43 := length;
    return;

  anon3_Then:
    assume {:partition} fullInfo == 0;
    goto L18;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 33} vslice_dummy_var_10 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGetRegistryKeyValue"} CyzGetRegistryKeyValue(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int, actual_Data: int, actual_DataLength: int) returns (Tmp_47: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_47 == -1073741811 || Tmp_47 == -1073741823 || Tmp_47 == 0 || Tmp_47 == 5 || Tmp_47 == -1073741789 || Tmp_47 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetRegistryKeyValue"} CyzGetRegistryKeyValue(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int, actual_Data: int, actual_DataLength: int) returns (Tmp_47: int)
{
  var {:pointer} fullInfo_1: int;
  var {:pointer} Tmp_48: int;
  var {:scalar} length_1: int;
  var {:pointer} Tmp_49: int;
  var {:pointer} sdv_44: int;
  var {:scalar} ntStatus: int;
  var {:scalar} keyName_1: int;
  var {:pointer} Tmp_50: int;
  var {:pointer} KeyNameString_1: int;
  var {:scalar} KeyNameStringLength_1: int;
  var {:scalar} DataLength: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 34} keyName_1 := __HAVOC_malloc(12);
    KeyNameString_1 := actual_KeyNameString_1;
    KeyNameStringLength_1 := actual_KeyNameStringLength_1;
    DataLength := actual_DataLength;
    call {:si_unique_call 35} Tmp_48 := __HAVOC_malloc(120);
    call {:si_unique_call 36} Tmp_49 := __HAVOC_malloc(112);
    ntStatus := -1073741670;
    call {:si_unique_call 37} sdv_do_paged_code_check();
    Tmp_48 := strConst__li2bpl7;
    call {:si_unique_call 38} vslice_dummy_var_11 := CyzDbgPrintEx(2, Tmp_48);
    call {:si_unique_call 39} RtlInitUnicodeString(keyName_1, KeyNameString_1);
    length_1 := 24 + KeyNameStringLength_1 + DataLength;
    call {:si_unique_call 40} sdv_44 := ExAllocatePoolWithTag(1, length_1, -797279933);
    fullInfo_1 := sdv_44;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fullInfo_1 != 0;
    call {:si_unique_call 41} Tmp_50 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    Mem_T.INT4[Tmp_50] := length_1;
    call {:si_unique_call 42} ntStatus := ZwQueryValueKey(0, 0, 1, 0, length_1, Tmp_50);
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    length_1 := Mem_T.INT4[Tmp_50];
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} fullInfo_1 != 0;
    assume fullInfo_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} fullInfo_1 != 0;
    assume fullInfo_1 > 0;
    havoc vslice_dummy_var_0;
    call {:si_unique_call 43} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_0);
    goto L31;

  L31:
    call {:si_unique_call 44} sdv_ExFreePool(0);
    goto L23;

  L23:
    Tmp_49 := strConst__li2bpl8;
    call {:si_unique_call 45} vslice_dummy_var_12 := CyzDbgPrintEx(2, Tmp_49);
    Tmp_47 := ntStatus;
    return;

  anon8_Then:
    goto L31;

  anon7_Then:
    assume {:partition} 0 > ntStatus;
    goto L31;

  anon9_Then:
    assume {:partition} fullInfo_1 == 0;
    goto L23;
}



procedure {:origName "CyzSetMCRContents"} CyzSetMCRContents(actual_Context: int) returns (Tmp_52: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetMCRContents"} CyzSetMCRContents(actual_Context: int) returns (Tmp_52: int)
{
  var {:scalar} op: int;
  var {:scalar} Tmp_54: int;
  var {:pointer} Extension_2: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:pointer} Result: int;
  var {:scalar} rs: int;
  var {:pointer} Context: int;

  anon0:
    Context := actual_Context;
    Tmp_55 := Context;
    assume {:nonnull} Tmp_55 != 0;
    assume Tmp_55 > 0;
    havoc Extension_2;
    Tmp_56 := Context;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc Result;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    call {:si_unique_call 46} rs := corral_nondet();
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} BAND(Mem_T.INT4[Result], 1) != 0;
    rs := BOR(rs, 4);
    goto L18;

  L18:
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mem_T.INT4[Result], 2) != 0;
    rs := BOR(rs, 1);
    goto L21;

  L21:
    Tmp_54 := BOR(rs, 0);
    call {:si_unique_call 47} CyzIssueCmd(Extension_2, 4, Tmp_54, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 48} op := corral_nondet();
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} BAND(Mem_T.INT4[Result], 16) != 0;
    op := BOR(op, 4);
    goto L35;

  L35:
    call {:si_unique_call 49} CyzIssueCmd(Extension_2, 2, 0, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_52 := 0;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} BAND(Mem_T.INT4[Result], 16) == 0;
    op := BAND(op, BNOT(4));
    goto L35;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} BAND(Mem_T.INT4[Result], 2) == 0;
    rs := BAND(rs, BNOT(1));
    goto L21;

  anon11_Then:
    assume {:partition} BAND(Mem_T.INT4[Result], 1) == 0;
    rs := BAND(rs, BNOT(4));
    goto L18;
}



procedure {:origName "CyzGetProperties"} CyzGetProperties(actual_Extension_3: int, actual_Properties: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetProperties"} CyzGetProperties(actual_Extension_3: int, actual_Properties: int)
{
  var {:pointer} Extension_3: int;
  var {:pointer} Properties: int;
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 50} vslice_dummy_var_13 := __HAVOC_malloc(4);
    Extension_3 := actual_Extension_3;
    Properties := actual_Properties;
    call {:si_unique_call 51} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    return;
}



procedure {:origName "CyzGetStats"} CyzGetStats(actual_Context_1: int) returns (Tmp_59: int);
  free ensures {:va_keep} Tmp_59 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetStats"} CyzGetStats(actual_Context_1: int) returns (Tmp_59: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} Tmp_60: int;
  var {:pointer} Tmp_61: int;
  var {:pointer} sp: int;
  var {:pointer} extension: int;
  var {:pointer} Context_1: int;

  anon0:
    Context_1 := actual_Context_1;
    call {:si_unique_call 52} irpSp := sdv_IoGetCurrentIrpStackLocation(Context_1);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    havoc Tmp_60;
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    havoc extension;
    Tmp_61 := Context_1;
    assume {:nonnull} Tmp_61 != 0;
    assume Tmp_61 > 0;
    havoc sp;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    Tmp_59 := 0;
    return;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 53} vslice_dummy_var_14 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzIoControl"} CyzIoControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_65: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIoControl"} CyzIoControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_65: int)
{
  var {:scalar} OldIrql: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} NewChars: int;
  var {:scalar} Tmp_68: int;
  var {:pointer} NewTimeouts: int;
  var {:scalar} Tmp_69: int;
  var {:scalar} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} escapeChar: int;
  var {:scalar} Mask: int;
  var {:scalar} S: int;
  var {:pointer} Lc: int;
  var {:scalar} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:scalar} Status: int;
  var {:scalar} prologueStatus: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:scalar} S_1: int;
  var {:pointer} Rs: int;
  var {:pointer} Br: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_80: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} IrpSp: int;
  var {:scalar} S_2: int;
  var {:scalar} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} HandFlow: int;
  var {:scalar} OldIrql_1: int;
  var {:scalar} LData: int;
  var {:scalar} S_3: int;
  var {:pointer} Extension_4: int;
  var {:scalar} LParity: int;
  var {:scalar} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:scalar} Tmp_86: int;
  var {:scalar} Tmp_87: int;
  var {:scalar} sdv_80: int;
  var {:pointer} Tmp_88: int;
  var {:scalar} S_4: int;
  var {:pointer} Tmp_89: int;
  var {:scalar} Mask_1: int;
  var {:scalar} ModemControl: int;
  var {:scalar} NewMask: int;
  var {:pointer} Xc: int;
  var {:pointer} Tmp_90: int;
  var {:scalar} LStop: int;
  var {:pointer} Tmp_91: int;
  var {:scalar} S_5: int;
  var {:scalar} rs_1: int;
  var {:scalar} BaudRate: int;
  var {:scalar} S_6: int;
  var {:scalar} S_7: int;
  var {:scalar} Tmp_92: int;
  var {:scalar} pollIrql: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} Lc_1: int;
  var {:pointer} Tmp_94: int;
  var {:scalar} S_8: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 54} S := __HAVOC_malloc(8);
    call {:si_unique_call 55} S_1 := __HAVOC_malloc(8);
    call {:si_unique_call 56} S_2 := __HAVOC_malloc(8);
    call {:si_unique_call 57} S_3 := __HAVOC_malloc(8);
    call {:si_unique_call 58} S_4 := __HAVOC_malloc(8);
    call {:si_unique_call 59} S_5 := __HAVOC_malloc(8);
    call {:si_unique_call 60} S_6 := __HAVOC_malloc(8);
    call {:si_unique_call 61} S_7 := __HAVOC_malloc(8);
    call {:si_unique_call 62} S_8 := __HAVOC_malloc(8);
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    call {:si_unique_call 63} Tmp_66 := __HAVOC_malloc(124);
    call {:si_unique_call 64} Tmp_71 := __HAVOC_malloc(72);
    call {:si_unique_call 65} Tmp_73 := __HAVOC_malloc(96);
    call {:si_unique_call 66} Tmp_76 := __HAVOC_malloc(148);
    call {:si_unique_call 67} Tmp_79 := __HAVOC_malloc(128);
    call {:si_unique_call 68} Tmp_80 := __HAVOC_malloc(136);
    call {:si_unique_call 69} Tmp_90 := __HAVOC_malloc(140);
    call {:si_unique_call 70} Tmp_91 := __HAVOC_malloc(68);
    call {:si_unique_call 71} Tmp_94 := __HAVOC_malloc(148);
    call {:si_unique_call 72} Tmp_95 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc Extension_4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon530_Then, anon530_Else;

  anon530_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 73} sdv_IoCompleteRequest(0, 0);
    Tmp_65 := -1073741808;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon530_Then:
    call {:si_unique_call 74} prologueStatus := CyzIRPPrologue(Irp_1, Extension_4);
    goto anon531_Then, anon531_Else;

  anon531_Else:
    assume {:partition} yogi_error != 1;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} prologueStatus != 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} prologueStatus != 259;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_71 := strConst__li2bpl2;
    call {:si_unique_call 75} vslice_dummy_var_35 := CyzDbgPrintEx(9, Tmp_71);
    call {:si_unique_call 76} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 77} CyzIRPEpilogue(Extension_4);
    goto L25;

  L25:
    Tmp_65 := prologueStatus;
    goto L1;

  anon412_Then:
    assume {:partition} prologueStatus == 259;
    goto L25;

  anon411_Then:
    assume {:partition} prologueStatus == 0;
    Tmp_73 := strConst__li2bpl0;
    call {:si_unique_call 78} vslice_dummy_var_36 := CyzDbgPrintEx(9, Tmp_73);
    call {:si_unique_call 79} sdv_80 := CyzCompleteIfError(DeviceObject_1, Irp_1);
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} sdv_80 != 0;
    Tmp_65 := -1073741536;
    goto L1;

  anon413_Then:
    assume {:partition} sdv_80 == 0;
    call {:si_unique_call 80} IrpSp := sdv_IoGetCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Status := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon532_Then, anon532_Else;

  anon532_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon520_Then, anon520_Else;

  anon520_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon519_Then, anon519_Else;

  anon519_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon518_Then, anon518_Else;

  anon518_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon517_Then, anon517_Else;

  anon517_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon516_Then, anon516_Else;

  anon516_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon515_Then, anon515_Else;

  anon515_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon514_Then, anon514_Else;

  anon514_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon513_Then, anon513_Else;

  anon513_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon512_Then, anon512_Else;

  anon512_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon511_Then, anon511_Else;

  anon511_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon510_Then, anon510_Else;

  anon510_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon509_Then, anon509_Else;

  anon509_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon508_Then, anon508_Else;

  anon508_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon507_Then, anon507_Else;

  anon507_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon506_Then, anon506_Else;

  anon506_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon505_Then, anon505_Else;

  anon505_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon504_Then, anon504_Else;

  anon504_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon503_Then, anon503_Else;

  anon503_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon502_Then, anon502_Else;

  anon502_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon501_Then, anon501_Else;

  anon501_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon500_Then, anon500_Else;

  anon500_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon499_Then, anon499_Else;

  anon499_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon498_Then, anon498_Else;

  anon498_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon497_Then, anon497_Else;

  anon497_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon496_Then, anon496_Else;

  anon496_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon495_Then, anon495_Else;

  anon495_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon494_Then, anon494_Else;

  anon494_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon493_Then, anon493_Else;

  anon493_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon492_Then, anon492_Else;

  anon492_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon491_Then, anon491_Else;

  anon491_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon490_Then, anon490_Else;

  anon490_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon489_Then, anon489_Else;

  anon489_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon488_Then, anon488_Else;

  anon488_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon487_Then, anon487_Else;

  anon487_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon486_Then, anon486_Else;

  anon486_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon485_Then, anon485_Else;

  anon485_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    Status := -1073741789;
    goto L96;

  L96:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_95 := strConst__li2bpl2;
    call {:si_unique_call 81} vslice_dummy_var_37 := CyzDbgPrintEx(9, Tmp_95);
    call {:si_unique_call 82} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 83} CyzIRPEpilogue(Extension_4);
    Tmp_65 := Status;
    goto L1;

  anon425_Then:
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon612_Then, anon612_Else;

  anon612_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_1;
    call {:si_unique_call 84} Status := CyzGotoPowerState(vslice_dummy_var_1, Extension_4, 1);
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} Status >= 0;
    goto L109;

  L109:
    call {:si_unique_call 85} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 86} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 87} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 88} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 89} vslice_dummy_var_15 := CyzSetFCRContents(S_1);
    goto anon613_Then, anon613_Else;

  anon613_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 90} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon614_Then, anon614_Else;

  anon614_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 91} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon615_Then, anon615_Else;

  anon615_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon615_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon614_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon613_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon426_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon612_Then:
    goto L109;

  anon485_Then:
    Status := -1073741811;
    goto L96;

  anon486_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    Status := -1073741789;
    goto L96;

  anon427_Then:
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon608_Then, anon608_Else;

  anon608_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_2;
    call {:si_unique_call 92} Status := CyzGotoPowerState(vslice_dummy_var_2, Extension_4, 1);
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:partition} Status >= 0;
    goto L137;

  L137:
    call {:si_unique_call 93} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 94} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 95} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 96} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 97} vslice_dummy_var_16 := CyzSetMCRContents(S);
    goto anon609_Then, anon609_Else;

  anon609_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 98} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon610_Then, anon610_Else;

  anon610_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 99} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon611_Then, anon611_Else;

  anon611_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon611_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon610_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon609_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon428_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon608_Then:
    goto L137;

  anon487_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    Status := -1073741789;
    goto L96;

  anon429_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    call {:si_unique_call 100} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 101} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 102} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 103} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 104} vslice_dummy_var_17 := CyzGetMCRContents(S_6);
    call {:si_unique_call 105} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon606_Then, anon606_Else;

  anon606_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 106} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon607_Then, anon607_Else;

  anon607_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon607_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon606_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon488_Then:
    call {:si_unique_call 107} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 108} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 109} vslice_dummy_var_18 := CyzClearStats(Extension_4);
    call {:si_unique_call 110} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon605_Then, anon605_Else;

  anon605_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon605_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon489_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    Status := -1073741789;
    goto L96;

  anon424_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 111} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 112} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 113} vslice_dummy_var_19 := CyzGetStats(Irp_1);
    call {:si_unique_call 114} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon604_Then, anon604_Else;

  anon604_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon604_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon490_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    Status := -1073741789;
    goto L96;

  anon423_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_81;
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    Mem_T.INT4[Tmp_81] := 0;
    goto L96;

  anon491_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc escapeChar;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon600_Then, anon600_Else;

  anon600_Else:
    Status := -1073741789;
    goto L96;

  anon600_Then:
    call {:si_unique_call 115} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 116} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} Mem_T.INT4[escapeChar] != 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    goto L220;

  L220:
    Status := -1073741811;
    call {:si_unique_call 117} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon601_Then, anon601_Else;

  anon601_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon601_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon431_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    goto L220;

  anon433_Then:
    goto L217;

  L217:
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    call {:si_unique_call 118} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 119} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 120} vslice_dummy_var_20 := CyzSetEscapeChar(Irp_1);
    call {:si_unique_call 121} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon602_Then, anon602_Else;

  anon602_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 122} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon603_Then, anon603_Else;

  anon603_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon603_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon602_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon432_Then:
    goto L220;

  anon430_Then:
    assume {:partition} Mem_T.INT4[escapeChar] == 0;
    goto L217;

  anon492_Then:
    ModemControl := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon599_Then, anon599_Else;

  anon599_Else:
    Status := -1073741789;
    goto L96;

  anon599_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 123} rs_1 := corral_nondet();
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} BAND(rs_1, 4) != 0;
    ModemControl := BOR(ModemControl, 1);
    goto L254;

  L254:
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} BAND(rs_1, 1) != 0;
    ModemControl := BOR(ModemControl, 2);
    goto L256;

  L256:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    Mem_T.INT4[Tmp_75] := ModemControl;
    goto L96;

  anon435_Then:
    assume {:partition} BAND(rs_1, 1) == 0;
    goto L256;

  anon434_Then:
    assume {:partition} BAND(rs_1, 4) == 0;
    goto L254;

  anon493_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    Status := -1073741789;
    goto L96;

  anon422_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_88 := AssociatedIrp__IRP(Irp_1);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc vslice_dummy_var_3;
    call {:si_unique_call 124} CyzGetProperties(Extension_4, vslice_dummy_var_3);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto L96;

  anon494_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Xc;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon597_Then, anon597_Else;

  anon597_Else:
    Status := -1073741789;
    goto L96;

  anon597_Then:
    assume {:nonnull} Xc != 0;
    assume Xc > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    Status := -1073741811;
    goto L96;

  anon436_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 125} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant194);
    goto anon598_Then, anon598_Else;

  anon598_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon598_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon495_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    Status := -1073741789;
    goto L96;

  anon437_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    call {:si_unique_call 126} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 127} IoAcquireCancelSpinLock(Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 128} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 129} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 130} vslice_dummy_var_21 := CyzGetCommStatus(S_8);
    call {:si_unique_call 131} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon596_Then, anon596_Else;

  anon596_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 132} IoReleaseCancelSpinLock(OldIrql_1);
    goto L96;

  anon596_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon496_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    Status := -1073741789;
    goto L96;

  anon438_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    call {:si_unique_call 133} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 134} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 135} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 136} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 137} vslice_dummy_var_22 := CyzGetModemUpdate(S_7);
    goto anon593_Then, anon593_Else;

  anon593_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 138} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon594_Then, anon594_Else;

  anon594_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 139} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon595_Then, anon595_Else;

  anon595_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon595_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon594_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon593_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon497_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc HandFlow;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon587_Then, anon587_Else;

  anon587_Else:
    Status := -1073741789;
    goto L96;

  anon587_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    Status := -1073741811;
    goto L96;

  anon439_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    Status := -1073741811;
    goto L96;

  anon440_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    havoc Tmp_70;
    goto anon588_Then, anon588_Else;

  anon588_Else:
    assume {:partition} Tmp_70 == 3;
    Status := -1073741811;
    goto L96;

  anon588_Then:
    assume {:partition} Tmp_70 != 3;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    goto L341;

  L341:
    Status := -1073741811;
    goto L96;

  anon441_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    goto L345;

  L345:
    Status := -1073741811;
    goto L96;

  anon443_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    call {:si_unique_call 140} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 141} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    Status := -1073741811;
    call {:si_unique_call 142} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon589_Then, anon589_Else;

  anon589_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon589_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon446_Then:
    goto L353;

  L353:
    call {:si_unique_call 143} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 144} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 145} vslice_dummy_var_23 := CyzSetHandFlow(S_5);
    goto anon590_Then, anon590_Else;

  anon590_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 146} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon591_Then, anon591_Else;

  anon591_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 147} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon592_Then, anon592_Else;

  anon592_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon592_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon591_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon590_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon445_Then:
    goto L353;

  anon444_Then:
    goto L345;

  anon442_Then:
    goto L341;

  anon498_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    Status := -1073741789;
    goto L96;

  anon421_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 148} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 149} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_93;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    call {:si_unique_call 150} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon586_Then, anon586_Else;

  anon586_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon586_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon499_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc NewChars;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon581_Then, anon581_Else;

  anon581_Else:
    Status := -1073741789;
    goto L96;

  anon581_Then:
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    call {:si_unique_call 151} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 152} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    goto L397;

  L397:
    Status := -1073741811;
    call {:si_unique_call 153} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon582_Then, anon582_Else;

  anon582_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon582_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon448_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    goto L397;

  anon449_Then:
    goto L394;

  L394:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    call {:si_unique_call 154} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 155} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 156} vslice_dummy_var_24 := CyzSetChars(S_3);
    goto anon583_Then, anon583_Else;

  anon583_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 157} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon584_Then, anon584_Else;

  anon584_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 158} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon585_Then, anon585_Else;

  anon585_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon585_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon584_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon583_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon447_Then:
    goto L394;

  anon500_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    Status := -1073741789;
    goto L96;

  anon420_Then:
    call {:si_unique_call 159} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 160} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_83;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 161} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon580_Then, anon580_Else;

  anon580_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon580_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon501_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Lc_1;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon573_Then, anon573_Else;

  anon573_Else:
    Status := -1073741789;
    goto L96;

  anon573_Then:
    call {:si_unique_call 162} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 163} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_82;
    goto anon574_Then, anon574_Else;

  anon574_Else:
    assume {:partition} Tmp_82 == 1;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  L438:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  L443:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_72;
    goto anon575_Then, anon575_Else;

  anon575_Else:
    assume {:partition} Tmp_72 == 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  L449:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 164} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon576_Then, anon576_Else;

  anon576_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon576_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon453_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  anon575_Then:
    assume {:partition} Tmp_72 != 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  anon451_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon452_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon454_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon455_Then:
    goto L443;

  anon450_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon574_Then:
    assume {:partition} Tmp_82 != 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_92;
    goto anon577_Then, anon577_Else;

  anon577_Else:
    assume {:partition} Tmp_92 == 2;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon577_Then:
    assume {:partition} Tmp_92 != 2;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_87;
    goto anon578_Then, anon578_Else;

  anon578_Else:
    assume {:partition} Tmp_87 == 4;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon578_Then:
    assume {:partition} Tmp_87 != 4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_69;
    goto anon579_Then, anon579_Else;

  anon579_Else:
    assume {:partition} Tmp_69 == 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon579_Then:
    assume {:partition} Tmp_69 != 8;
    goto L438;

  anon502_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Br;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon571_Then, anon571_Else;

  anon571_Else:
    Status := -1073741789;
    goto L96;

  anon571_Then:
    call {:si_unique_call 165} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 166} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Br != 0;
    assume Br > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 167} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon572_Then, anon572_Else;

  anon572_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto L96;

  anon572_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon503_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    Status := -1073741789;
    goto L96;

  anon456_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    Mask := Mem_T.INT4[Tmp_74];
    goto anon569_Then, anon569_Else;

  anon569_Else:
    assume {:partition} Mask != 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    assume {:partition} BAND(Mask, -16) == 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 168} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, PurgeQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant380);
    goto anon570_Then, anon570_Else;

  anon570_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon570_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon457_Then:
    assume {:partition} BAND(Mask, -16) != 0;
    goto L485;

  L485:
    Status := -1073741811;
    goto L96;

  anon569_Then:
    assume {:partition} Mask == 0;
    goto L485;

  anon504_Then:
    Tmp_90 := strConst__li2bpl9;
    call {:si_unique_call 169} vslice_dummy_var_42 := CyzDbgPrintEx(9, Tmp_90);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    Tmp_79 := strConst__li2bpl11;
    call {:si_unique_call 170} vslice_dummy_var_43 := CyzDbgPrintEx(6, Tmp_79);
    Status := -1073741789;
    goto L96;

  anon458_Then:
    Tmp_94 := strConst__li2bpl10;
    call {:si_unique_call 171} vslice_dummy_var_44 := CyzDbgPrintEx(9, Tmp_94);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 172} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, MaskQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant177);
    goto anon568_Then, anon568_Else;

  anon568_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon568_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon505_Then:
    Tmp_80 := strConst__li2bpl12;
    call {:si_unique_call 173} vslice_dummy_var_38 := CyzDbgPrintEx(9, Tmp_80);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    Tmp_66 := strConst__li2bpl13;
    call {:si_unique_call 174} vslice_dummy_var_39 := CyzDbgPrintEx(6, Tmp_66);
    Status := -1073741789;
    goto L96;

  anon459_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    NewMask := Mem_T.INT4[Tmp_67];
    goto anon566_Then, anon566_Else;

  anon566_Else:
    assume {:partition} BAND(NewMask, -8192) != 0;
    Tmp_91 := strConst__li2bpl15;
    call {:si_unique_call 175} vslice_dummy_var_40 := CyzDbgPrintEx(6, Tmp_91);
    Status := -1073741811;
    goto L96;

  anon566_Then:
    assume {:partition} BAND(NewMask, -8192) == 0;
    Tmp_76 := strConst__li2bpl14;
    call {:si_unique_call 176} vslice_dummy_var_41 := CyzDbgPrintEx(9, Tmp_76);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 177} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, MaskQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant177);
    goto anon567_Then, anon567_Else;

  anon567_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon567_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon506_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    Status := -1073741789;
    goto L96;

  anon419_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_85;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    havoc vslice_dummy_var_4;
    Mem_T.INT4[Tmp_85] := vslice_dummy_var_4;
    goto L96;

  anon507_Then:
    call {:si_unique_call 178} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 179} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 180} vslice_dummy_var_25 := CyzPretendXon(Extension_4);
    call {:si_unique_call 181} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon565_Then, anon565_Else;

  anon565_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon565_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon508_Then:
    call {:si_unique_call 182} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 183} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 184} vslice_dummy_var_26 := CyzPretendXoff(Extension_4);
    goto anon563_Then, anon563_Else;

  anon563_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 185} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon564_Then, anon564_Else;

  anon564_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon564_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon563_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon509_Then:
    goto L59;

  L59:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_5;
    call {:si_unique_call 186} Status := CyzGotoPowerState(vslice_dummy_var_5, Extension_4, 1);
    goto anon460_Then, anon460_Else;

  anon460_Else:
    assume {:partition} Status >= 0;
    goto L547;

  L547:
    call {:si_unique_call 187} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 188} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_86;
    goto anon557_Then, anon557_Else;

  anon557_Else:
    assume {:partition} Tmp_86 == 128;
    goto L559;

  L559:
    Status := -1073741811;
    goto L560;

  L560:
    call {:si_unique_call 189} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon558_Then, anon558_Else;

  anon558_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon558_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon557_Then:
    assume {:partition} Tmp_86 != 128;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_84;
    goto anon559_Then, anon559_Else;

  anon559_Else:
    assume {:partition} Tmp_84 != 192;
    call {:si_unique_call 190} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 191} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon461_Then, anon461_Else;

  anon461_Else:
    call {:si_unique_call 192} vslice_dummy_var_28 := CyzSetRTS(Extension_4);
    goto anon560_Then, anon560_Else;

  anon560_Else:
    assume {:partition} yogi_error != 1;
    goto L575;

  L575:
    call {:si_unique_call 193} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon561_Then, anon561_Else;

  anon561_Else:
    assume {:partition} yogi_error != 1;
    goto L560;

  anon561_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon560_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon461_Then:
    call {:si_unique_call 194} vslice_dummy_var_27 := CyzClrRTS(Extension_4);
    goto anon562_Then, anon562_Else;

  anon562_Else:
    assume {:partition} yogi_error != 1;
    goto L575;

  anon562_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon559_Then:
    assume {:partition} Tmp_84 == 192;
    goto L559;

  anon460_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon418_Then:
    goto L547;

  anon510_Then:
    goto L59;

  anon511_Then:
    goto L96;

  anon512_Then:
    goto L57;

  L57:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_6;
    call {:si_unique_call 195} Status := CyzGotoPowerState(vslice_dummy_var_6, Extension_4, 1);
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:partition} Status >= 0;
    goto L578;

  L578:
    call {:si_unique_call 196} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 197} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_68;
    goto anon552_Then, anon552_Else;

  anon552_Else:
    assume {:partition} Tmp_68 == 2;
    Status := -1073741811;
    goto L593;

  L593:
    call {:si_unique_call 198} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon553_Then, anon553_Else;

  anon553_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon553_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon552_Then:
    assume {:partition} Tmp_68 != 2;
    call {:si_unique_call 199} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 200} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    call {:si_unique_call 201} vslice_dummy_var_30 := CyzSetDTR(Extension_4);
    goto anon554_Then, anon554_Else;

  anon554_Else:
    assume {:partition} yogi_error != 1;
    goto L604;

  L604:
    call {:si_unique_call 202} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon555_Then, anon555_Else;

  anon555_Else:
    assume {:partition} yogi_error != 1;
    goto L593;

  anon555_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon554_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon463_Then:
    call {:si_unique_call 203} vslice_dummy_var_29 := CyzClrDTR(Extension_4);
    goto anon556_Then, anon556_Else;

  anon556_Else:
    assume {:partition} yogi_error != 1;
    goto L604;

  anon556_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon462_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon417_Then:
    goto L578;

  anon513_Then:
    goto L57;

  anon514_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    Status := -1073741789;
    goto L96;

  anon416_Then:
    call {:si_unique_call 204} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 205} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_89;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 206} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon551_Then, anon551_Else;

  anon551_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon551_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon515_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc NewTimeouts;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon549_Then, anon549_Else;

  anon549_Else:
    Status := -1073741789;
    goto L96;

  anon549_Then:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon466_Then, anon466_Else;

  anon466_Else:
    Status := -1073741811;
    goto L96;

  anon466_Then:
    goto L623;

  L623:
    call {:si_unique_call 207} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 208} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    call {:si_unique_call 209} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon550_Then, anon550_Else;

  anon550_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon550_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon465_Then:
    goto L623;

  anon464_Then:
    goto L623;

  anon516_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon467_Then, anon467_Else;

  anon467_Else:
    Status := -1073741789;
    goto L96;

  anon467_Then:
    call {:si_unique_call 210} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql;
    call {:si_unique_call 211} IoAcquireCancelSpinLock(Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon468_Then, anon468_Else;

  anon468_Else:
    Status := -1073741811;
    call {:si_unique_call 212} IoReleaseCancelSpinLock(OldIrql);
    goto L96;

  anon468_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    call {:si_unique_call 213} IoReleaseCancelSpinLock(OldIrql);
    Status := -1073741536;
    goto L96;

  anon469_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 214} IoReleaseCancelSpinLock(OldIrql);
    call {:si_unique_call 215} CyzStartImmediate(Extension_4);
    goto anon548_Then, anon548_Else;

  anon548_Else:
    assume {:partition} yogi_error != 1;
    Tmp_65 := 259;
    goto L1;

  anon548_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon517_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_7;
    call {:si_unique_call 216} Status := CyzGotoPowerState(vslice_dummy_var_7, Extension_4, 1);
    goto anon470_Then, anon470_Else;

  anon470_Else:
    assume {:partition} Status >= 0;
    goto L665;

  L665:
    call {:si_unique_call 217} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 218} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 219} vslice_dummy_var_31 := CyzTurnOffBreak(Extension_4);
    goto anon546_Then, anon546_Else;

  anon546_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 220} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon547_Then, anon547_Else;

  anon547_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon547_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon546_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon470_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon415_Then:
    goto L665;

  anon518_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_8;
    call {:si_unique_call 221} Status := CyzGotoPowerState(vslice_dummy_var_8, Extension_4, 1);
    goto anon471_Then, anon471_Else;

  anon471_Else:
    assume {:partition} Status >= 0;
    goto L681;

  L681:
    call {:si_unique_call 222} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 223} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 224} vslice_dummy_var_32 := CyzTurnOnBreak(Extension_4);
    goto anon544_Then, anon544_Else;

  anon544_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 225} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon545_Then, anon545_Else;

  anon545_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon545_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon544_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon471_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon414_Then:
    goto L681;

  anon519_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Lc;
    Mask_1 := 255;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon539_Then, anon539_Else;

  anon539_Else:
    Status := -1073741789;
    goto L96;

  anon539_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 226} Status := CyzGotoPowerState(vslice_dummy_var_9, Extension_4, 1);
    goto anon474_Then, anon474_Else;

  anon474_Else:
    assume {:partition} Status >= 0;
    goto L707;

  L707:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon473_Then, anon473_Else;

  anon473_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon523_Then, anon523_Else;

  anon523_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon522_Then, anon522_Else;

  anon522_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon521_Then, anon521_Else;

  anon521_Else:
    LData := 8;
    Mask_1 := 255;
    goto L721;

  L721:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon540_Then, anon540_Else;

  anon540_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon527_Then, anon527_Else;

  anon527_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon526_Then, anon526_Else;

  anon526_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon525_Then, anon525_Else;

  anon525_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon524_Then, anon524_Else;

  anon524_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 8;
    goto L731;

  L731:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon475_Then, anon475_Else;

  anon475_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon529_Then, anon529_Else;

  anon529_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon528_Then, anon528_Else;

  anon528_Else:
    goto anon477_Then, anon477_Else;

  anon477_Else:
    assume {:partition} LData == 1;
    Status := -1073741811;
    goto L96;

  anon477_Then:
    assume {:partition} LData != 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 64;
    goto L741;

  L741:
    call {:si_unique_call 227} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 228} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 229} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 230} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 231} vslice_dummy_var_33 := CyzSetLineControl(Extension_4);
    goto anon541_Then, anon541_Else;

  anon541_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 232} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon542_Then, anon542_Else;

  anon542_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 233} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon543_Then, anon543_Else;

  anon543_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon543_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon542_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon541_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon528_Then:
    Status := -1073741811;
    goto L96;

  anon529_Then:
    goto anon476_Then, anon476_Else;

  anon476_Else:
    assume {:partition} LData != 1;
    Status := -1073741811;
    goto L96;

  anon476_Then:
    assume {:partition} LData == 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 32;
    goto L741;

  anon475_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 16;
    goto L741;

  anon524_Then:
    Status := -1073741811;
    goto L96;

  anon525_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 4;
    goto L731;

  anon526_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 2;
    goto L731;

  anon527_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 1;
    goto L731;

  anon540_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 0;
    goto L731;

  anon521_Then:
    Status := -1073741811;
    goto L96;

  anon522_Then:
    LData := 4;
    Mask_1 := 127;
    goto L721;

  anon523_Then:
    LData := 2;
    Mask_1 := 63;
    goto L721;

  anon473_Then:
    LData := 1;
    Mask_1 := 31;
    goto L721;

  anon474_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon472_Then:
    goto L707;

  anon520_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Rs;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon537_Then, anon537_Else;

  anon537_Else:
    Status := -1073741789;
    goto L96;

  anon537_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    goto anon478_Then, anon478_Else;

  anon478_Else:
    Status := 0;
    goto L96;

  anon478_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    havoc vslice_dummy_var_10;
    call {:si_unique_call 234} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, vslice_dummy_var_10, -797279933);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon479_Then, anon479_Else;

  anon479_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 235} Tmp_65 := CyzStartOrQueue(Extension_4, Irp_1, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant381);
    goto anon538_Then, anon538_Else;

  anon538_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon538_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon479_Then:
    goto L96;

  anon532_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon480_Then, anon480_Else;

  anon480_Else:
    Status := -1073741789;
    goto L96;

  anon480_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    havoc BaudRate;
    goto anon533_Then, anon533_Else;

  anon533_Else:
    assume {:partition} BaudRate != 0;
    goto anon481_Then, anon481_Else;

  anon481_Else:
    assume {:partition} Status >= 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon482_Then, anon482_Else;

  anon482_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_11;
    call {:si_unique_call 236} Status := CyzGotoPowerState(vslice_dummy_var_11, Extension_4, 1);
    goto anon483_Then, anon483_Else;

  anon483_Else:
    assume {:partition} Status >= 0;
    goto L814;

  L814:
    call {:si_unique_call 237} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := OldIrql_1;
    call {:si_unique_call 238} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_78];
    goto anon484_Then, anon484_Else;

  anon484_Else:
    assume {:partition} Status >= 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    call {:si_unique_call 239} Tmp_78 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    Mem_T.INT4[Tmp_78] := pollIrql;
    call {:si_unique_call 240} sdv_KeAcquireSpinLock(0, Tmp_78);
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    pollIrql := Mem_T.INT4[Tmp_78];
    call {:si_unique_call 241} vslice_dummy_var_34 := CyzSetBaud(S_2);
    goto anon534_Then, anon534_Else;

  anon534_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 242} sdv_KeReleaseSpinLock(0, pollIrql);
    goto anon535_Then, anon535_Else;

  anon535_Else:
    assume {:partition} yogi_error != 1;
    goto L825;

  L825:
    call {:si_unique_call 243} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto anon536_Then, anon536_Else;

  anon536_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon536_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon535_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon534_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon484_Then:
    assume {:partition} 0 > Status;
    goto L825;

  anon483_Then:
    assume {:partition} 0 > Status;
    goto L96;

  anon482_Then:
    goto L814;

  anon481_Then:
    assume {:partition} 0 > Status;
    goto L814;

  anon533_Then:
    assume {:partition} BaudRate == 0;
    Status := -1073741811;
    goto L96;

  anon531_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzClearStats"} CyzClearStats(actual_Context_2: int) returns (Tmp_96: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_96 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClearStats"} CyzClearStats(actual_Context_2: int) returns (Tmp_96: int)
{
  var {:pointer} Tmp_98: int;
  var {:pointer} Tmp_100: int;
  var {:pointer} Context_2: int;

  anon0:
    Context_2 := actual_Context_2;
    Tmp_100 := Context_2;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    call {:si_unique_call 244} sdv_RtlZeroMemory(0, 24);
    Tmp_98 := Context_2;
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    call {:si_unique_call 245} sdv_RtlZeroMemory(0, 24);
    Tmp_96 := 0;
    return;
}



procedure {:origName "CyzSetEscapeChar"} CyzSetEscapeChar(actual_Context_3: int) returns (Tmp_102: int);
  free ensures {:va_keep} Tmp_102 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetEscapeChar"} CyzSetEscapeChar(actual_Context_3: int) returns (Tmp_102: int)
{
  var {:pointer} Tmp_103: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} sdv_99: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} extension_1: int;
  var {:pointer} Context_3: int;

  anon0:
    Context_3 := actual_Context_3;
    call {:si_unique_call 246} sdv_99 := sdv_IoGetCurrentIrpStackLocation(Context_3);
    assume {:nonnull} sdv_99 != 0;
    assume sdv_99 > 0;
    havoc Tmp_106;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    havoc extension_1;
    Tmp_104 := Context_3;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    havoc Tmp_103;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    assume {:nonnull} extension_1 != 0;
    assume extension_1 > 0;
    Tmp_102 := 0;
    return;
}



procedure {:origName "CyzGetCommStatus"} CyzGetCommStatus(actual_Context_4: int) returns (Tmp_107: int);
  free ensures {:va_keep} Tmp_107 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetCommStatus"} CyzGetCommStatus(actual_Context_4: int) returns (Tmp_107: int)
{
  var {:pointer} Stat: int;
  var {:pointer} sdv_100: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Extension_5: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Context_4: int;
  var vslice_dummy_var_12: int;

  anon0:
    Context_4 := actual_Context_4;
    Tmp_108 := Context_4;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    havoc Extension_5;
    Tmp_110 := Context_4;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    havoc Stat;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    havoc vslice_dummy_var_12;
    call {:si_unique_call 247} sdv_100 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_12);
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} sdv_100 != 0;
    assume sdv_100 > 0;
    goto L13;

  L13:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L22;

  L22:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L24;

  L24:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L26;

  L26:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L28;

  L28:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L20;

  L20:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L33;

  L33:
    Tmp_107 := 0;
    return;

  anon25_Then:
    goto L33;

  anon19_Then:
    goto L31;

  anon24_Then:
    goto L20;

  anon23_Then:
    goto L28;

  anon22_Then:
    goto L26;

  anon21_Then:
    goto L24;

  anon20_Then:
    goto L22;

  anon27_Then:
    goto L20;

  anon26_Then:
    goto L13;
}



procedure {:origName "CyzIssueCmd"} CyzIssueCmd(actual_Extension_6: int, actual_cmd: int, actual_param: int, actual_wait: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIssueCmd"} CyzIssueCmd(actual_Extension_6: int, actual_cmd: int, actual_param: int, actual_wait: int)
{
  var {:scalar} interval100ms: int;
  var {:scalar} Tmp_111: int;
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:pointer} Tmp_112: int;
  var {:pointer} Tmp_113: int;
  var {:scalar} Tmp_114: int;
  var {:scalar} sdv_101: int;
  var {:pointer} Tmp_115: int;
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:scalar} OldIrql_2: int;
  var {:scalar} sdv_102: int;
  var {:pointer} s_p_e_c_i_a_l_2: int;
  var {:scalar} sdv_103: int;
  var {:scalar} sdv_104: int;
  var {:scalar} difference: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:scalar} Tmp_120: int;
  var {:pointer} s_p_e_c_i_a_l_4: int;
  var {:pointer} Tmp_121: int;
  var {:scalar} startOfSpin: int;
  var {:scalar} nextQuery: int;
  var {:pointer} Tmp_122: int;
  var {:scalar} Tmp_123: int;
  var {:pointer} Extension_6: int;
  var {:scalar} wait: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 248} interval100ms := __HAVOC_malloc(20);
    call {:si_unique_call 249} Tmp_114 := __HAVOC_malloc(20);
    call {:si_unique_call 250} vslice_dummy_var_45 := __HAVOC_malloc(4);
    call {:si_unique_call 251} difference := __HAVOC_malloc(20);
    call {:si_unique_call 252} startOfSpin := __HAVOC_malloc(20);
    call {:si_unique_call 253} nextQuery := __HAVOC_malloc(20);
    call {:si_unique_call 254} Tmp_123 := __HAVOC_malloc(20);
    Extension_6 := actual_Extension_6;
    wait := actual_wait;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    call {:si_unique_call 255} Tmp_122 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    Mem_T.INT4[Tmp_122] := OldIrql_2;
    call {:si_unique_call 256} sdv_KeAcquireSpinLock(0, Tmp_122);
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    OldIrql_2 := Mem_T.INT4[Tmp_122];
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_116;
    assume {:nonnull} Tmp_116 != 0;
    assume Tmp_116 > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    Tmp_121 := KeTickCount;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc s_p_e_c_i_a_l_1;
    goto L20;

  L20:
    call {:si_unique_call 257} CyzIssueCmd_loop_L20(s_p_e_c_i_a_l_1, startOfSpin);
    goto L20_last;

  L20_last:
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L27;

  L27:
    call {:si_unique_call 258} sdv_101, Tmp_117, sdv_102, s_p_e_c_i_a_l_2 := CyzIssueCmd_loop_L27(interval100ms, sdv_101, Tmp_117, sdv_102, s_p_e_c_i_a_l_2, difference, startOfSpin, nextQuery);
    goto L27_last;

  L27_last:
    call {:si_unique_call 271} sdv_101 := corral_nondet();
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} BAND(sdv_101, 255) != 0;
    Tmp_117 := KeTickCount;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    havoc s_p_e_c_i_a_l_2;
    goto L35;

  L35:
    call {:si_unique_call 259} CyzIssueCmd_loop_L35(s_p_e_c_i_a_l_2, nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 260} sdv_102 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L49;

  L49:
    call {:si_unique_call 261} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Tmp_123 != 0;
    assume Tmp_123 > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_112;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    havoc vslice_dummy_var_13;
    havoc vslice_dummy_var_14;
    call {:si_unique_call 262} CyzLogError(vslice_dummy_var_13, 0, vslice_dummy_var_14, Tmp_123, 0, 0, 0, Tmp_111, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto L49;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon37_Then:
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} BAND(sdv_101, 255) == 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} wait != 0;
    Tmp_119 := KeTickCount;
    assume {:nonnull} Tmp_119 != 0;
    assume Tmp_119 > 0;
    havoc s_p_e_c_i_a_l_3;
    goto L74;

  L74:
    call {:si_unique_call 263} CyzIssueCmd_loop_L74(s_p_e_c_i_a_l_3, startOfSpin);
    goto L74_last;

  L74_last:
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L81;

  L81:
    call {:si_unique_call 264} Tmp_113, sdv_103, sdv_104, s_p_e_c_i_a_l_4 := CyzIssueCmd_loop_L81(interval100ms, Tmp_113, sdv_103, sdv_104, difference, s_p_e_c_i_a_l_4, startOfSpin, nextQuery);
    goto L81_last;

  L81_last:
    call {:si_unique_call 270} sdv_103 := corral_nondet();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} BAND(sdv_103, 255) != 0;
    Tmp_113 := KeTickCount;
    assume {:nonnull} Tmp_113 != 0;
    assume Tmp_113 > 0;
    havoc s_p_e_c_i_a_l_4;
    goto L88;

  L88:
    call {:si_unique_call 265} CyzIssueCmd_loop_L88(s_p_e_c_i_a_l_4, nextQuery);
    goto L88_last;

  L88_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 266} sdv_104 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L102;

  L102:
    call {:si_unique_call 267} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_115;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    havoc vslice_dummy_var_15;
    havoc vslice_dummy_var_16;
    call {:si_unique_call 268} CyzLogError(vslice_dummy_var_15, 0, vslice_dummy_var_16, Tmp_114, 0, 0, 0, Tmp_120, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto L102;

  anon34_Then:
    goto anon34_Then_dummy;

  anon34_Then_dummy:
    assume false;
    return;

  anon40_Then:
    goto anon40_Then_dummy;

  anon40_Then_dummy:
    assume false;
    return;

  anon33_Then:
    assume {:partition} BAND(sdv_103, 255) == 0;
    goto L68;

  L68:
    call {:si_unique_call 269} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} wait == 0;
    goto L68;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    assume false;
    return;
}



procedure {:origName "CyzSetFCRContents"} CyzSetFCRContents(actual_Context_5: int) returns (Tmp_124: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetFCRContents"} CyzSetFCRContents(actual_Context_5: int) returns (Tmp_124: int)
{
  var {:pointer} Tmp_126: int;
  var {:pointer} Extension_7: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Result_1: int;
  var {:pointer} Context_5: int;

  anon0:
    Context_5 := actual_Context_5;
    Tmp_127 := Context_5;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc Extension_7;
    Tmp_126 := Context_5;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    havoc Result_1;
    assume {:nonnull} Result_1 != 0;
    assume Result_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 4) != 0;
    call {:si_unique_call 272} CyzIssueCmd(Extension_7, 87, 0, 0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L8;

  L8:
    assume {:nonnull} Result_1 != 0;
    assume Result_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 2) != 0;
    call {:si_unique_call 273} CyzIssueCmd(Extension_7, 86, 0, 0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L12;

  L12:
    Tmp_124 := 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 2) == 0;
    goto L12;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} BAND(Mem_T.INT4[Result_1], 4) == 0;
    goto L8;
}



procedure {:origName "CyzGetMCRContents"} CyzGetMCRContents(actual_Context_6: int) returns (Tmp_128: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_128 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetMCRContents"} CyzGetMCRContents(actual_Context_6: int) returns (Tmp_128: int)
{
  var {:pointer} Tmp_129: int;
  var {:scalar} op_1: int;
  var {:pointer} Extension_8: int;
  var {:pointer} Tmp_131: int;
  var {:pointer} Result_2: int;
  var {:scalar} rs_2: int;
  var {:pointer} Context_6: int;

  anon0:
    Context_6 := actual_Context_6;
    Tmp_131 := Context_6;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    havoc Extension_8;
    Tmp_129 := Context_6;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc Result_2;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    call {:si_unique_call 274} rs_2 := corral_nondet();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(rs_2, 4) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := BOR(Mem_T.INT4[Result_2], 1);
    goto L17;

  L17:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} BAND(rs_2, 1) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := BOR(Mem_T.INT4[Result_2], 2);
    goto L19;

  L19:
    call {:si_unique_call 275} op_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(op_1, 4) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    Mem_T.INT4[Result_2] := BOR(Mem_T.INT4[Result_2], 16);
    goto L25;

  L25:
    Tmp_128 := 0;
    return;

  anon9_Then:
    assume {:partition} BAND(op_1, 4) == 0;
    goto L25;

  anon8_Then:
    assume {:partition} BAND(rs_2, 1) == 0;
    goto L19;

  anon7_Then:
    assume {:partition} BAND(rs_2, 4) == 0;
    goto L17;
}



procedure {:origName "CyzGetModemUpdate"} CyzGetModemUpdate(actual_Context_7: int) returns (Tmp_132: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetModemUpdate"} CyzGetModemUpdate(actual_Context_7: int) returns (Tmp_132: int)
{
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Extension_9: int;
  var {:pointer} Result_3: int;
  var {:pointer} Context_7: int;
  var boogieTmp: int;

  anon0:
    Context_7 := actual_Context_7;
    Tmp_135 := Context_7;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc Extension_9;
    Tmp_133 := Context_7;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc Result_3;
    assume {:nonnull} Result_3 != 0;
    assume Result_3 > 0;
    call {:si_unique_call 276} boogieTmp := CyzHandleModemUpdate#1(Extension_9, 0, 0);
    Mem_T.INT4[Result_3] := boogieTmp;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_132 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzSetChars"} CyzSetChars(actual_Context_8: int) returns (Tmp_136: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetChars"} CyzSetChars(actual_Context_8: int) returns (Tmp_136: int)
{
  var {:pointer} Tmp_137: int;
  var {:pointer} Extension_10: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Context_8: int;

  anon0:
    Context_8 := actual_Context_8;
    Tmp_137 := Context_8;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    havoc Extension_10;
    Tmp_140 := Context_8;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    havoc Tmp_142;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    call {:si_unique_call 277} CyzIssueCmd(Extension_10, 3, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_136 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzSetBaud"} CyzSetBaud(actual_Context_9: int) returns (Tmp_143: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetBaud"} CyzSetBaud(actual_Context_9: int) returns (Tmp_143: int)
{
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} Extension_11: int;
  var {:pointer} Context_9: int;

  anon0:
    Context_9 := actual_Context_9;
    Tmp_146 := Context_9;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    havoc Extension_11;
    Tmp_145 := Context_9;
    assume {:nonnull} Tmp_145 != 0;
    assume Tmp_145 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    call {:si_unique_call 278} CyzIssueCmd(Extension_11, 3, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_143 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzSetLineControl"} CyzSetLineControl(actual_Context_10: int) returns (Tmp_147: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetLineControl"} CyzSetLineControl(actual_Context_10: int) returns (Tmp_147: int)
{
  var {:pointer} Extension_12: int;
  var {:pointer} Context_10: int;

  anon0:
    Context_10 := actual_Context_10;
    Extension_12 := Context_10;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 279} CyzIssueCmd(Extension_12, 3, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_147 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCleanLists"} CyzCleanLists(actual_Context_11: int) returns (Tmp_149: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_149 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCleanLists"} CyzCleanLists(actual_Context_11: int) returns (Tmp_149: int)
{
  var {:scalar} i: int;
  var {:scalar} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} pDevExt: int;
  var {:scalar} cancelled: int;
  var {:scalar} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} pDispatch_1: int;
  var {:pointer} Context_11: int;
  var vslice_dummy_var_46: int;

  anon0:
    Context_11 := actual_Context_11;
    call {:si_unique_call 280} Tmp_151 := __HAVOC_malloc(256);
    call {:si_unique_call 281} Tmp_154 := __HAVOC_malloc(256);
    call {:si_unique_call 282} Tmp_155 := __HAVOC_malloc(140);
    pDevExt := Context_11;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc pDispatch_1;
    Tmp_155 := strConst__li2bpl16;
    call {:si_unique_call 283} vslice_dummy_var_46 := CyzDbgPrintEx(12, Tmp_155);
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc Tmp_152;
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    i := 0;
    goto L15;

  L15:
    call {:si_unique_call 284} i, Tmp_150, Tmp_153, Tmp_154 := CyzCleanLists_loop_L15(i, Tmp_150, pDevExt, Tmp_153, Tmp_154, pDispatch_1);
    goto L15_last;

  L15_last:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Tmp_150 := i;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    havoc Tmp_154;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L18;

  L18:
    i := i + 1;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon18_Then:
    goto L16;

  L16:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    call {:si_unique_call 285} cancelled := KeCancelTimer(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} cancelled != 0;
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto L12;

  L12:
    Tmp_149 := 1;
    return;

  anon17_Then:
    assume {:partition} cancelled == 0;
    goto L12;

  anon15_Then:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto L12;

  anon16_Then:
    goto L18;

  anon14_Then:
    goto L16;

  anon13_Then:
    goto L12;
}



procedure {:origName "CyzDoesPortExist"} CyzDoesPortExist(actual_Extension_13: int, actual_InsertString: int) returns (Tmp_157: int);
  free ensures {:va_keep} Tmp_157 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDoesPortExist"} CyzDoesPortExist(actual_Extension_13: int, actual_InsertString: int) returns (Tmp_157: int)
{

  anon0:
    Tmp_157 := 1;
    return;
}



procedure {:origName "CyzMemCompare"} CyzMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_159: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_159 == 0 || Tmp_159 == 2 || Tmp_159 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMemCompare"} CyzMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_159: int)
{
  var {:scalar} A: int;
  var {:scalar} B: int;
  var {:scalar} b: int;
  var {:scalar} higher: int;
  var {:scalar} lowerSpan: int;
  var {:scalar} lower: int;
  var {:scalar} a: int;
  var {:pointer} structPtr888A: int;
  var {:scalar} SpanOfA: int;
  var {:pointer} structPtr888B: int;
  var {:scalar} SpanOfB: int;

  anon0:
    call {:si_unique_call 286} A := __HAVOC_malloc(20);
    call {:si_unique_call 287} B := __HAVOC_malloc(20);
    call {:si_unique_call 288} b := __HAVOC_malloc(20);
    call {:si_unique_call 289} higher := __HAVOC_malloc(20);
    call {:si_unique_call 290} lower := __HAVOC_malloc(20);
    call {:si_unique_call 291} a := __HAVOC_malloc(20);
    structPtr888A := actual_structPtr888A;
    SpanOfA := actual_SpanOfA;
    structPtr888B := actual_structPtr888B;
    SpanOfB := actual_SpanOfB;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_159 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfB;
    goto L17;

  L17:
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_159 := 2;
    goto L1;

  anon8_Then:
    Tmp_159 := 1;
    goto L1;

  anon7_Then:
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfA;
    goto L17;
}



procedure {:origName "CyzReset"} CyzReset(actual_Context_12: int) returns (Tmp_161: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReset"} CyzReset(actual_Context_12: int) returns (Tmp_161: int)
{
  var {:scalar} s: int;
  var {:pointer} extension_2: int;
  var {:pointer} Context_12: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 292} s := __HAVOC_malloc(8);
    Context_12 := actual_Context_12;
    extension_2 := Context_12;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 293} vslice_dummy_var_49 := CyzSetLineControl(extension_2);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 294} vslice_dummy_var_47 := CyzSetupNewHandFlow(extension_2, HandFlow__CYZ_DEVICE_EXTENSION(extension_2));
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 295} vslice_dummy_var_48 := CyzHandleModemUpdate#1(extension_2, 0, 0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} s != 0;
    assume s > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} s != 0;
    assume s > 0;
    call {:si_unique_call 296} vslice_dummy_var_50 := CyzSetBaud(s);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 297} CyzIssueCmd(extension_2, 3, 0, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Tmp_161 := 0;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzRemoveDevObj"} CyzRemoveDevObj(actual_PDevObj: int) returns (Tmp_163: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_163 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRemoveDevObj"} CyzRemoveDevObj(actual_PDevObj: int) returns (Tmp_163: int)
{
  var {:pointer} pDevExt_1: int;
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} PDevObj: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;

  anon0:
    PDevObj := actual_PDevObj;
    call {:si_unique_call 298} Tmp_169 := __HAVOC_malloc(84);
    call {:si_unique_call 299} Tmp_170 := __HAVOC_malloc(88);
    assume {:nonnull} PDevObj != 0;
    assume PDevObj > 0;
    havoc pDevExt_1;
    call {:si_unique_call 300} sdv_do_paged_code_check();
    Tmp_170 := strConst__li2bpl17;
    call {:si_unique_call 301} vslice_dummy_var_51 := CyzDbgPrintEx(2, Tmp_170);
    call {:si_unique_call 302} IoDetachDevice(0);
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 303} sdv_ExFreePool(0);
    goto L15;

  L15:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 304} sdv_ExFreePool(0);
    goto L19;

  L19:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 305} sdv_ExFreePool(0);
    goto L23;

  L23:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 306} sdv_ExFreePool(0);
    goto L27;

  L27:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 307} sdv_ExFreePool(0);
    goto L31;

  L31:
    call {:si_unique_call 308} IoDeleteDevice(0);
    Tmp_169 := strConst__li2bpl18;
    call {:si_unique_call 309} vslice_dummy_var_52 := CyzDbgPrintEx(2, Tmp_169);
    Tmp_163 := 0;
    return;

  anon15_Then:
    goto L31;

  anon14_Then:
    goto L27;

  anon13_Then:
    goto L23;

  anon12_Then:
    goto L19;

  anon11_Then:
    goto L15;
}



procedure {:origName "CyzFindInitController"} CyzFindInitController(actual_PDevObj_1: int, actual_PConfig: int) returns (Tmp_172: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFindInitController"} CyzFindInitController(actual_PDevObj_1: int, actual_PConfig: int) returns (Tmp_172: int)
{
  var {:pointer} Tmp_173: int;
  var {:scalar} Tmp_174: int;
  var {:scalar} Tmp_175: int;
  var {:scalar} Tmp_176: int;
  var {:scalar} sdv_116: int;
  var {:scalar} sdv_118: int;
  var {:scalar} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} pCurDevObj: int;
  var {:pointer} Tmp_179: int;
  var {:scalar} Tmp_180: int;
  var {:pointer} pDevExt_2: int;
  var {:pointer} sdv_120: int;
  var {:scalar} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:scalar} Tmp_183: int;
  var {:pointer} sdv_122: int;
  var {:pointer} Tmp_184: int;
  var {:scalar} sdv_124: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} pExtension: int;
  var {:scalar} oldIrql: int;
  var {:scalar} sdv_128: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:scalar} sdv_129: int;
  var {:scalar} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} sdv_133: int;
  var {:scalar} status_1: int;
  var {:scalar} serialPhysicalMax: int;
  var {:pointer} Tmp_192: int;
  var {:scalar} sdv_135: int;
  var {:scalar} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:pointer} PDevObj_1: int;
  var {:pointer} PConfig: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 310} Tmp_177 := __HAVOC_malloc(20);
    call {:si_unique_call 311} Tmp_180 := __HAVOC_malloc(20);
    call {:si_unique_call 312} Tmp_189 := __HAVOC_malloc(20);
    call {:si_unique_call 313} serialPhysicalMax := __HAVOC_malloc(20);
    PDevObj_1 := actual_PDevObj_1;
    PConfig := actual_PConfig;
    call {:si_unique_call 314} Tmp_173 := __HAVOC_malloc(104);
    call {:si_unique_call 315} Tmp_178 := __HAVOC_malloc(116);
    call {:si_unique_call 316} Tmp_179 := __HAVOC_malloc(60);
    call {:si_unique_call 317} Tmp_184 := __HAVOC_malloc(328);
    call {:si_unique_call 318} Tmp_185 := __HAVOC_malloc(328);
    call {:si_unique_call 319} Tmp_186 := __HAVOC_malloc(336);
    call {:si_unique_call 320} Tmp_187 := __HAVOC_malloc(324);
    call {:si_unique_call 321} Tmp_188 := __HAVOC_malloc(128);
    call {:si_unique_call 322} Tmp_192 := __HAVOC_malloc(776);
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    havoc pDevExt_2;
    Tmp_188 := strConst__li2bpl26;
    call {:si_unique_call 323} vslice_dummy_var_53 := CyzDbgPrintEx(2, Tmp_188);
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    Tmp_192 := strConst__li2bpl27;
    call {:si_unique_call 324} vslice_dummy_var_54 := CyzDbgPrintEx(4, Tmp_192);
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_17;
    havoc vslice_dummy_var_18;
    call {:si_unique_call 325} sdv_128 := CyzMemCompare(vslice_dummy_var_17, vslice_dummy_var_18, serialPhysicalMax, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_128 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_190;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_191 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_19;
    havoc vslice_dummy_var_20;
    havoc vslice_dummy_var_21;
    call {:si_unique_call 326} CyzLogError(vslice_dummy_var_19, 0, vslice_dummy_var_20, Tmp_189, 0, 0, 0, Tmp_191, 0, -1073475558, Tmp_190, vslice_dummy_var_21, 0, 0);
    Tmp_186 := strConst__li2bpl19;
    call {:si_unique_call 327} vslice_dummy_var_55 := CyzDbgPrintEx(1, Tmp_186);
    Tmp_172 := -1073741810;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    assume {:partition} sdv_128 == 2;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_22;
    havoc vslice_dummy_var_23;
    call {:si_unique_call 328} sdv_129 := CyzMemCompare(vslice_dummy_var_22, vslice_dummy_var_23, serialPhysicalMax, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_129 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_174;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_175 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_24;
    havoc vslice_dummy_var_25;
    havoc vslice_dummy_var_26;
    call {:si_unique_call 329} CyzLogError(vslice_dummy_var_24, 0, vslice_dummy_var_25, Tmp_177, 0, 0, 0, Tmp_175, 0, -1073475557, Tmp_174, vslice_dummy_var_26, 0, 0);
    Tmp_184 := strConst__li2bpl20;
    call {:si_unique_call 330} vslice_dummy_var_56 := CyzDbgPrintEx(1, Tmp_184);
    Tmp_172 := -1073741810;
    goto L1;

  anon36_Then:
    assume {:partition} sdv_129 == 2;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_27;
    havoc vslice_dummy_var_28;
    call {:si_unique_call 331} sdv_133 := CyzMemCompare(vslice_dummy_var_27, vslice_dummy_var_28, Tmp_180, 0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_133 != 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_29;
    havoc vslice_dummy_var_30;
    havoc vslice_dummy_var_31;
    havoc vslice_dummy_var_32;
    call {:si_unique_call 332} sdv_124 := CyzMemCompare(vslice_dummy_var_29, vslice_dummy_var_30, vslice_dummy_var_31, vslice_dummy_var_32);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_124 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_193;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_176 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_33;
    havoc vslice_dummy_var_34;
    havoc vslice_dummy_var_35;
    havoc vslice_dummy_var_36;
    call {:si_unique_call 333} CyzLogError(vslice_dummy_var_33, 0, vslice_dummy_var_34, vslice_dummy_var_35, 0, 0, 0, Tmp_176, 0, -1073475556, Tmp_193, vslice_dummy_var_36, 0, 0);
    Tmp_187 := strConst__li2bpl21;
    call {:si_unique_call 334} vslice_dummy_var_57 := CyzDbgPrintEx(1, Tmp_187);
    Tmp_172 := -1073741810;
    goto L1;

  anon38_Then:
    assume {:partition} sdv_124 == 2;
    goto L52;

  L52:
    call {:si_unique_call 335} Tmp_182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    Mem_T.INT4[Tmp_182] := oldIrql;
    call {:si_unique_call 336} sdv_KeAcquireSpinLock(0, Tmp_182);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    oldIrql := Mem_T.INT4[Tmp_182];
    call {:si_unique_call 337} sdv_135 := sdv_IsListEmpty(0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_135 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L75;

  L75:
    call {:si_unique_call 338} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L82;

  L82:
    call {:si_unique_call 339} sdv_116, pCurDevObj, sdv_120, Tmp_182, pExtension, oldIrql := CyzFindInitController_loop_L82(sdv_116, pCurDevObj, sdv_120, Tmp_182, pExtension, oldIrql, PConfig);
    goto L82_last;

  L82_last:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_37;
    havoc vslice_dummy_var_38;
    havoc vslice_dummy_var_39;
    havoc vslice_dummy_var_40;
    call {:si_unique_call 340} sdv_116 := CyzMemCompare(vslice_dummy_var_37, vslice_dummy_var_38, vslice_dummy_var_39, vslice_dummy_var_40);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_116 == 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_41;
    havoc vslice_dummy_var_42;
    havoc vslice_dummy_var_43;
    havoc vslice_dummy_var_44;
    call {:si_unique_call 341} sdv_118 := CyzMemCompare(vslice_dummy_var_41, vslice_dummy_var_42, vslice_dummy_var_43, vslice_dummy_var_44);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_194;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_181;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_183 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_45;
    havoc vslice_dummy_var_46;
    havoc vslice_dummy_var_47;
    havoc vslice_dummy_var_48;
    havoc vslice_dummy_var_49;
    call {:si_unique_call 342} CyzLogError(vslice_dummy_var_45, 0, vslice_dummy_var_46, vslice_dummy_var_47, 0, 0, 0, Tmp_183, 0, -1073475550, Tmp_181, vslice_dummy_var_48, Tmp_194, vslice_dummy_var_49);
    Tmp_185 := strConst__li2bpl24;
    call {:si_unique_call 343} vslice_dummy_var_59 := CyzDbgPrintEx(1, Tmp_185);
    Tmp_172 := -1073741810;
    goto L1;

  anon45_Then:
    assume {:partition} sdv_118 == 0;
    Tmp_178 := strConst__li2bpl23;
    call {:si_unique_call 344} vslice_dummy_var_60 := CyzDbgPrintEx(4, Tmp_178);
    Tmp_179 := strConst__li2bpl25;
    call {:si_unique_call 345} vslice_dummy_var_61 := CyzDbgPrintEx(4, Tmp_179);
    call {:si_unique_call 346} status_1 := CyzInitMultiPort(pExtension, PConfig, PDevObj_1);
    Tmp_172 := status_1;
    goto L1;

  anon44_Then:
    assume {:partition} sdv_116 != 0;
    goto L83;

  L83:
    call {:si_unique_call 347} Tmp_182 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    Mem_T.INT4[Tmp_182] := oldIrql;
    call {:si_unique_call 348} sdv_KeAcquireSpinLock(0, Tmp_182);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    oldIrql := Mem_T.INT4[Tmp_182];
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 349} sdv_120 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_120;
    goto L119;

  L119:
    call {:si_unique_call 350} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    assume false;
    return;

  anon47_Then:
    goto L79;

  L79:
    Tmp_173 := strConst__li2bpl22;
    call {:si_unique_call 351} vslice_dummy_var_58 := CyzDbgPrintEx(4, Tmp_173);
    call {:si_unique_call 352} status_1 := CyzInitController(PDevObj_1, PConfig);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_1 >= 0;
    Tmp_172 := 0;
    goto L1;

  anon48_Then:
    assume {:partition} 0 > status_1;
    Tmp_172 := status_1;
    goto L1;

  anon46_Then:
    goto L79;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto L119;

  anon43_Then:
    goto L83;

  anon42_Then:
    goto L83;

  anon41_Then:
    goto L83;

  anon40_Then:
    goto L79;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    assume {:partition} sdv_135 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 353} sdv_122 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_122;
    goto L75;

  anon37_Then:
    assume {:partition} sdv_133 == 0;
    goto L52;
}



procedure {:origName "CyzDisableInterfacesResources"} CyzDisableInterfacesResources(actual_PDevObj_2: int, actual_DisableUART: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDisableInterfacesResources"} CyzDisableInterfacesResources(actual_PDevObj_2: int, actual_DisableUART: int)
{
  var {:pointer} Tmp_197: int;
  var {:pointer} pDevExt_3: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:pointer} PDevObj_2: int;
  var {:scalar} DisableUART: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 354} vslice_dummy_var_62 := __HAVOC_malloc(4);
    PDevObj_2 := actual_PDevObj_2;
    DisableUART := actual_DisableUART;
    call {:si_unique_call 355} Tmp_197 := __HAVOC_malloc(124);
    call {:si_unique_call 356} Tmp_198 := __HAVOC_malloc(92);
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    havoc pDevExt_3;
    call {:si_unique_call 357} sdv_do_paged_code_check();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} DisableUART != 0;
    Tmp_199 := strConst__li2bpl29;
    goto L11;

  L11:
    Tmp_197 := strConst__li2bpl30;
    call {:si_unique_call 358} vslice_dummy_var_64 := CyzDbgPrintEx(2, Tmp_197);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 1) != 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 2) != 0;
    goto L20;

  L20:
    call {:si_unique_call 359} vslice_dummy_var_63 := IoWMIRegistrationControl(0, 2);
    goto L15;

  L15:
    call {:si_unique_call 360} CyzUndoExternalNaming(pDevExt_3);
    Tmp_198 := strConst__li2bpl31;
    call {:si_unique_call 361} vslice_dummy_var_65 := CyzDbgPrintEx(2, Tmp_198);
    goto LM2;

  LM2:
    return;

  anon11_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 2) == 0;
    call {:si_unique_call 362} CyzReleaseResources(pDevExt_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_3)], 1) == 0;
    goto L15;

  anon9_Then:
    assume {:partition} DisableUART == 0;
    Tmp_199 := strConst__li2bpl28;
    goto L11;
}



procedure {:origName "CyzKillPendingIrps"} CyzKillPendingIrps(actual_PDevObj_3: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillPendingIrps"} CyzKillPendingIrps(actual_PDevObj_3: int)
{
  var {:pointer} pDevExt_4: int;
  var {:pointer} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:scalar} cancelRoutine: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} PDevObj_3: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 363} vslice_dummy_var_66 := __HAVOC_malloc(4);
    PDevObj_3 := actual_PDevObj_3;
    call {:si_unique_call 364} Tmp_203 := __HAVOC_malloc(100);
    call {:si_unique_call 365} Tmp_205 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_3 != 0;
    assume PDevObj_3 > 0;
    havoc pDevExt_4;
    Tmp_203 := strConst__li2bpl33;
    call {:si_unique_call 366} vslice_dummy_var_68 := CyzDbgPrintEx(2, Tmp_203);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 367} CyzKillAllReadsOrWrites#1(PDevObj_3, WriteQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 368} CyzKillAllReadsOrWrites#1(PDevObj_3, ReadQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentReadIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 369} CyzKillAllReadsOrWrites#1(PDevObj_3, PurgeQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 370} CyzKillAllReadsOrWrites#1(PDevObj_3, MaskQueue__CYZ_DEVICE_EXTENSION(pDevExt_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(pDevExt_4));
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 371} Tmp_207 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    Mem_T.INT4[Tmp_207] := oldIrql_1;
    call {:si_unique_call 372} IoAcquireCancelSpinLock(Tmp_207);
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    oldIrql_1 := Mem_T.INT4[Tmp_207];
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    havoc cancelRoutine;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} cancelRoutine != 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_200;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_200)] := oldIrql_1;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_204;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant456;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_50;
    call {:si_unique_call 373} CyzCancelCurrentRead#1(PDevObj_3, vslice_dummy_var_50);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  L40:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 374} vslice_dummy_var_67 := IoCancelIrp(0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto L41;

  L41:
    call {:si_unique_call 375} CyzKillAllStalled(PDevObj_3);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    Tmp_205 := strConst__li2bpl32;
    call {:si_unique_call 376} vslice_dummy_var_69 := CyzDbgPrintEx(2, Tmp_205);
    goto LM2;

  LM2:
    return;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    goto L41;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant196;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_51;
    call {:si_unique_call 377} CyzCancelCurrentWrite#1(PDevObj_3, vslice_dummy_var_51);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant198;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_52;
    call {:si_unique_call 378} CyzCancelCurrentXoff#1(PDevObj_3, vslice_dummy_var_52);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon55_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant312;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 379} CyzCancelImmediate#1(PDevObj_3, vslice_dummy_var_53);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant149;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_54;
    call {:si_unique_call 380} CyzCancelQueued(PDevObj_3, vslice_dummy_var_54);
    goto L40;

  anon41_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant178;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_55;
    call {:si_unique_call 381} CyzCancelWait#1(PDevObj_3, vslice_dummy_var_55);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant151;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_56;
    call {:si_unique_call 382} CyzFilterCancelQueued(PDevObj_3, vslice_dummy_var_56);
    goto L40;

  anon50_Then:
    assume {:partition} cancelRoutine == 0;
    call {:si_unique_call 383} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon39_Then:
    call {:si_unique_call 384} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 385} vslice_dummy_var_70 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzReleaseResources"} CyzReleaseResources(actual_PDevExt: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReleaseResources"} CyzReleaseResources(actual_PDevExt: int)
{
  var {:scalar} sdv_145: int;
  var {:scalar} sdv_147: int;
  var {:scalar} sdv_148: int;
  var {:scalar} sdv_149: int;
  var {:scalar} sdv_150: int;
  var {:scalar} sdv_152: int;
  var {:scalar} sdv_153: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:scalar} sdv_158: int;
  var {:pointer} Tmp_213: int;
  var {:scalar} sdv_163: int;
  var {:scalar} sdv_165: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_171: int;
  var {:scalar} sdv_173: int;
  var {:scalar} pollCount: int;
  var {:scalar} timerStarted: int;
  var {:scalar} sdv_176: int;
  var {:scalar} timerDrained: int;
  var {:pointer} pDispatch_2: int;
  var {:scalar} pollIrql_1: int;
  var {:scalar} sdv_179: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} PDevExt: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 386} vslice_dummy_var_71 := __HAVOC_malloc(4);
    PDevExt := actual_PDevExt;
    call {:si_unique_call 387} Tmp_210 := __HAVOC_malloc(104);
    call {:si_unique_call 388} Tmp_213 := __HAVOC_malloc(132);
    call {:si_unique_call 389} Tmp_214 := __HAVOC_malloc(88);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc pDispatch_2;
    Tmp_210 := strConst__li2bpl36;
    call {:si_unique_call 390} vslice_dummy_var_81 := CyzDbgPrintEx(2, Tmp_210);
    call {:si_unique_call 391} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    Mem_T.INT4[Tmp_211] := oldIrql_2;
    call {:si_unique_call 392} sdv_KeAcquireSpinLock(0, Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    oldIrql_2 := Mem_T.INT4[Tmp_211];
    call {:si_unique_call 393} vslice_dummy_var_72 := sdv_RemoveEntryList(0);
    call {:si_unique_call 394} sdv_KeReleaseSpinLock(0, oldIrql_2);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 395} InitializeListHead(AllDevObjs__CYZ_DEVICE_EXTENSION(PDevExt));
    call {:si_unique_call 396} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    Mem_T.INT4[Tmp_211] := pollIrql_1;
    call {:si_unique_call 397} sdv_KeAcquireSpinLock(0, Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    pollIrql_1 := Mem_T.INT4[Tmp_211];
    call {:si_unique_call 398} vslice_dummy_var_73 := CyzCleanLists(PDevExt);
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc timerStarted;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc timerDrained;
    call {:si_unique_call 399} sdv_KeReleaseSpinLock(0, pollIrql_1);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} timerStarted != 0;
    goto L38;

  L38:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 400} vslice_dummy_var_74 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 401} vslice_dummy_var_75 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 402} vslice_dummy_var_76 := CyzCancelTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 403} vslice_dummy_var_77 := CyzCancelTimer(ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 404} vslice_dummy_var_78 := CyzCancelTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 405} vslice_dummy_var_79 := CyzCancelTimer(LowerRTSTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    call {:si_unique_call 406} sdv_179 := KeRemoveQueueDpc(0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_179 != 0;
    call {:si_unique_call 407} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_57;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_57;
    call {:si_unique_call 408} vslice_dummy_var_82 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L60;

  L60:
    call {:si_unique_call 409} sdv_163 := KeRemoveQueueDpc(0);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_163 != 0;
    call {:si_unique_call 410} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_58;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_58;
    call {:si_unique_call 411} vslice_dummy_var_83 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L67;

  L67:
    call {:si_unique_call 412} sdv_150 := KeRemoveQueueDpc(0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_150 != 0;
    call {:si_unique_call 413} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_59;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_59;
    call {:si_unique_call 414} vslice_dummy_var_84 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L74;

  L74:
    call {:si_unique_call 415} sdv_173 := KeRemoveQueueDpc(0);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_173 != 0;
    call {:si_unique_call 416} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_60;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_60;
    call {:si_unique_call 417} vslice_dummy_var_85 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L81;

  L81:
    call {:si_unique_call 418} sdv_147 := KeRemoveQueueDpc(0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_147 != 0;
    call {:si_unique_call 419} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_61;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_61;
    call {:si_unique_call 420} vslice_dummy_var_86 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L88;

  L88:
    call {:si_unique_call 421} sdv_165 := KeRemoveQueueDpc(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_165 != 0;
    call {:si_unique_call 422} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_62;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_62;
    call {:si_unique_call 423} vslice_dummy_var_87 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L95;

  L95:
    call {:si_unique_call 424} sdv_152 := KeRemoveQueueDpc(0);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_152 != 0;
    call {:si_unique_call 425} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_63;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_63;
    call {:si_unique_call 426} vslice_dummy_var_88 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L102;

  L102:
    call {:si_unique_call 427} sdv_153 := KeRemoveQueueDpc(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_153 != 0;
    call {:si_unique_call 428} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_64;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_64;
    call {:si_unique_call 429} vslice_dummy_var_89 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L109;

  L109:
    call {:si_unique_call 430} sdv_149 := KeRemoveQueueDpc(0);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_149 != 0;
    call {:si_unique_call 431} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_65;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_65;
    call {:si_unique_call 432} vslice_dummy_var_90 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L116;

  L116:
    call {:si_unique_call 433} sdv_176 := KeRemoveQueueDpc(0);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_176 != 0;
    call {:si_unique_call 434} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_66;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_66;
    call {:si_unique_call 435} vslice_dummy_var_91 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L123;

  L123:
    call {:si_unique_call 436} sdv_158 := KeRemoveQueueDpc(0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_158 != 0;
    call {:si_unique_call 437} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_67;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_67;
    call {:si_unique_call 438} vslice_dummy_var_92 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L130;

  L130:
    call {:si_unique_call 439} sdv_145 := KeRemoveQueueDpc(0);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} sdv_145 != 0;
    call {:si_unique_call 440} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_68;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_68;
    call {:si_unique_call 441} vslice_dummy_var_93 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L137;

  L137:
    call {:si_unique_call 442} sdv_171 := KeRemoveQueueDpc(0);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} sdv_171 != 0;
    call {:si_unique_call 443} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    havoc vslice_dummy_var_69;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_69;
    call {:si_unique_call 444} vslice_dummy_var_94 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto L144;

  L144:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 445} MmUnmapIoSpace(0, 64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L148;

  L148:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 446} MmUnmapIoSpace(0, 96);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L153;

  L153:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 447} MmUnmapIoSpace(0, 64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L158;

  L158:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_70;
    call {:si_unique_call 448} MmUnmapIoSpace(0, vslice_dummy_var_70);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L163;

  L163:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_97;
    call {:si_unique_call 449} MmUnmapIoSpace(0, vslice_dummy_var_97);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L168;

  L168:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    call {:si_unique_call 450} MmUnmapIoSpace(0, 5768);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_98;
    call {:si_unique_call 451} MmUnmapIoSpace(0, vslice_dummy_var_98);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L178;

  L178:
    Tmp_214 := strConst__li2bpl34;
    call {:si_unique_call 452} vslice_dummy_var_95 := CyzDbgPrintEx(2, Tmp_214);
    goto LM2;

  LM2:
    return;

  anon76_Then:
    goto L178;

  anon75_Then:
    goto L173;

  anon74_Then:
    goto L168;

  anon73_Then:
    goto L163;

  anon72_Then:
    goto L158;

  anon71_Then:
    goto L153;

  anon70_Then:
    goto L148;

  anon69_Then:
    assume {:partition} sdv_171 == 0;
    goto L144;

  anon68_Then:
    assume {:partition} sdv_145 == 0;
    goto L137;

  anon67_Then:
    assume {:partition} sdv_158 == 0;
    goto L130;

  anon66_Then:
    assume {:partition} sdv_176 == 0;
    goto L123;

  anon65_Then:
    assume {:partition} sdv_149 == 0;
    goto L116;

  anon64_Then:
    assume {:partition} sdv_153 == 0;
    goto L109;

  anon63_Then:
    assume {:partition} sdv_152 == 0;
    goto L102;

  anon62_Then:
    assume {:partition} sdv_165 == 0;
    goto L95;

  anon61_Then:
    assume {:partition} sdv_147 == 0;
    goto L88;

  anon60_Then:
    assume {:partition} sdv_173 == 0;
    goto L81;

  anon59_Then:
    assume {:partition} sdv_150 == 0;
    goto L74;

  anon58_Then:
    assume {:partition} sdv_163 == 0;
    goto L67;

  anon57_Then:
    assume {:partition} sdv_179 == 0;
    goto L60;

  anon55_Then:
    assume {:partition} timerStarted == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} timerDrained != 0;
    goto L188;

  L188:
    call {:si_unique_call 453} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    Mem_T.INT4[Tmp_211] := pollIrql_1;
    call {:si_unique_call 454} sdv_KeAcquireSpinLock(0, Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    pollIrql_1 := Mem_T.INT4[Tmp_211];
    call {:si_unique_call 455} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc vslice_dummy_var_99;
    Mem_T.INT4[Tmp_211] := vslice_dummy_var_99;
    call {:si_unique_call 456} sdv_148 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    pollCount := sdv_148;
    call {:si_unique_call 457} sdv_KeReleaseSpinLock(0, pollIrql_1);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} pollCount == 0;
    Tmp_213 := strConst__li2bpl35;
    call {:si_unique_call 458} vslice_dummy_var_96 := CyzDbgPrintEx(12, Tmp_213);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    call {:si_unique_call 459} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L38;

  anon78_Then:
    goto L38;

  anon77_Then:
    assume {:partition} pollCount != 0;
    goto L38;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume {:partition} timerDrained == 0;
    call {:si_unique_call 460} vslice_dummy_var_80 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L188;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzInitController"} CyzInitController(actual_PDevObj_4: int, actual_PConfigData: int) returns (Tmp_215: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_215 == 0 || Tmp_215 == -1073741810 || Tmp_215 == -1073741709 || Tmp_215 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInitController"} CyzInitController(actual_PDevObj_4: int, actual_PConfigData: int) returns (Tmp_215: int)
{
  var {:scalar} Tmp_216: int;
  var {:scalar} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} rx: int;
  var {:pointer} Tmp_219: int;
  var {:scalar} Tmp_220: int;
  var {:pointer} sdv_185: int;
  var {:scalar} firstTimeThisBoard: int;
  var {:scalar} Tmp_221: int;
  var {:scalar} Tmp_222: int;
  var {:scalar} Tmp_223: int;
  var {:scalar} Tmp_224: int;
  var {:scalar} Tmp_225: int;
  var {:pointer} sdv_191: int;
  var {:scalar} Tmp_226: int;
  var {:scalar} sdv_193: int;
  var {:pointer} Tmp_227: int;
  var {:scalar} incPoll: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} Tmp_229: int;
  var {:scalar} Tmp_230: int;
  var {:pointer} pDevExt_5: int;
  var {:scalar} Tmp_231: int;
  var {:scalar} zf_1: int;
  var {:scalar} Tmp_232: int;
  var {:pointer} BoardMemory: int;
  var {:scalar} Tmp_233: int;
  var {:scalar} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:scalar} Tmp_236: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} sdv_198: int;
  var {:scalar} Tmp_240: int;
  var {:scalar} Tmp_241: int;
  var {:pointer} Tmp_242: int;
  var {:scalar} Tmp_243: int;
  var {:scalar} allocedDispatch: int;
  var {:scalar} Tmp_244: int;
  var {:scalar} Tmp_245: int;
  var {:scalar} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} sdv_205: int;
  var {:scalar} Tmp_249: int;
  var {:scalar} Tmp_250: int;
  var {:pointer} sdv_206: int;
  var {:scalar} buf_2: int;
  var {:scalar} Tmp_251: int;
  var {:scalar} Tmp_252: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} sdv_211: int;
  var {:scalar} Tmp_254: int;
  var {:scalar} Tmp_255: int;
  var {:pointer} zfw: int;
  var {:scalar} Tmp_256: int;
  var {:scalar} Tmp_257: int;
  var {:scalar} board_2: int;
  var {:pointer} sdv_214: int;
  var {:scalar} status_2: int;
  var {:scalar} tx_1: int;
  var {:pointer} sdv_216: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:scalar} pollingCycle: int;
  var {:pointer} pDispatch_3: int;
  var {:scalar} ch_8: int;
  var {:scalar} Tmp_260: int;
  var {:scalar} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} Tmp_265: int;
  var {:scalar} intr: int;
  var {:pointer} Tmp_266: int;
  var {:pointer} PDevObj_4: int;
  var {:pointer} PConfigData: int;
  var boogieTmp: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;

  anon0:
    call {:si_unique_call 461} Tmp_216 := __HAVOC_malloc(20);
    call {:si_unique_call 462} rx := __HAVOC_malloc(20);
    call {:si_unique_call 463} Tmp_220 := __HAVOC_malloc(20);
    call {:si_unique_call 464} vslice_dummy_var_97 := __HAVOC_malloc(20);
    call {:si_unique_call 465} vslice_dummy_var_98 := __HAVOC_malloc(20);
    call {:si_unique_call 466} Tmp_222 := __HAVOC_malloc(20);
    call {:si_unique_call 467} Tmp_223 := __HAVOC_malloc(20);
    call {:si_unique_call 468} Tmp_224 := __HAVOC_malloc(20);
    call {:si_unique_call 469} Tmp_225 := __HAVOC_malloc(20);
    call {:si_unique_call 470} Tmp_231 := __HAVOC_malloc(20);
    call {:si_unique_call 471} zf_1 := __HAVOC_malloc(20);
    call {:si_unique_call 472} Tmp_236 := __HAVOC_malloc(20);
    call {:si_unique_call 473} Tmp_240 := __HAVOC_malloc(20);
    call {:si_unique_call 474} vslice_dummy_var_99 := __HAVOC_malloc(20);
    call {:si_unique_call 475} Tmp_243 := __HAVOC_malloc(20);
    call {:si_unique_call 476} vslice_dummy_var_100 := __HAVOC_malloc(20);
    call {:si_unique_call 477} Tmp_245 := __HAVOC_malloc(20);
    call {:si_unique_call 478} buf_2 := __HAVOC_malloc(20);
    call {:si_unique_call 479} Tmp_251 := __HAVOC_malloc(20);
    call {:si_unique_call 480} vslice_dummy_var_101 := __HAVOC_malloc(20);
    call {:si_unique_call 481} Tmp_254 := __HAVOC_malloc(20);
    call {:si_unique_call 482} Tmp_255 := __HAVOC_malloc(20);
    call {:si_unique_call 483} board_2 := __HAVOC_malloc(20);
    call {:si_unique_call 484} vslice_dummy_var_102 := __HAVOC_malloc(20);
    call {:si_unique_call 485} tx_1 := __HAVOC_malloc(20);
    call {:si_unique_call 486} ch_8 := __HAVOC_malloc(20);
    call {:si_unique_call 487} Tmp_261 := __HAVOC_malloc(20);
    call {:si_unique_call 488} vslice_dummy_var_103 := __HAVOC_malloc(20);
    call {:si_unique_call 489} Tmp_264 := __HAVOC_malloc(20);
    PDevObj_4 := actual_PDevObj_4;
    PConfigData := actual_PConfigData;
    call {:si_unique_call 490} Tmp_218 := __HAVOC_malloc(4096);
    call {:si_unique_call 491} Tmp_219 := __HAVOC_malloc(132);
    call {:si_unique_call 492} Tmp_227 := __HAVOC_malloc(184);
    call {:si_unique_call 493} Tmp_229 := __HAVOC_malloc(236);
    call {:si_unique_call 494} Tmp_235 := __HAVOC_malloc(180);
    call {:si_unique_call 495} Tmp_238 := __HAVOC_malloc(840);
    call {:si_unique_call 496} Tmp_242 := __HAVOC_malloc(140);
    call {:si_unique_call 497} Tmp_247 := __HAVOC_malloc(172);
    call {:si_unique_call 498} Tmp_248 := __HAVOC_malloc(168);
    call {:si_unique_call 499} Tmp_258 := __HAVOC_malloc(228);
    call {:si_unique_call 500} Tmp_259 := __HAVOC_malloc(176);
    call {:si_unique_call 501} Tmp_262 := __HAVOC_malloc(168);
    call {:si_unique_call 502} Tmp_266 := __HAVOC_malloc(6144);
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    havoc pDevExt_5;
    status_2 := 0;
    allocedDispatch := 0;
    pDispatch_3 := 0;
    incPoll := 0;
    call {:si_unique_call 503} sdv_do_paged_code_check();
    Tmp_227 := strConst__li2bpl37;
    call {:si_unique_call 504} vslice_dummy_var_104 := CyzDbgPrintEx(4, Tmp_227);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    firstTimeThisBoard := 0;
    goto L40;

  L40:
    call {:si_unique_call 505} KeInitializeTimer(0);
    call {:si_unique_call 506} KeInitializeTimer(0);
    call {:si_unique_call 507} KeInitializeTimer(0);
    call {:si_unique_call 508} KeInitializeTimer(0);
    call {:si_unique_call 509} KeInitializeTimer(0);
    call {:si_unique_call 510} KeInitializeTimer(0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 511} KeInitializeDpc(CompleteWriteDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant199, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 512} KeInitializeDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant347, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 513} KeInitializeDpc(TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant348, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 514} KeInitializeDpc(IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant349, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 515} KeInitializeDpc(TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant203, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 516} KeInitializeDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant350, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 517} KeInitializeDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant313, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 518} KeInitializeDpc(TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant315, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 519} KeInitializeDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant182, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 520} KeInitializeDpc(XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant205, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 521} KeInitializeDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant204, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 522} KeInitializeDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant351, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 523} KeInitializeDpc(PerhapsLowerRTSDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant352, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 524} KeInitializeDpc(IsrUnlockPagesDpc__CYZ_DEVICE_EXTENSION(pDevExt_5), li2bplFunctionConstant161, 0);
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_121;
    call {:si_unique_call 525} sdv_205 := MmMapIoSpace(Tmp_251, vslice_dummy_var_121, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_122;
    call {:si_unique_call 526} sdv_206 := MmMapIoSpace(Tmp_255, vslice_dummy_var_122, 0);
    BoardMemory := sdv_206;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BoardMemory != 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  L132:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L134;

  L134:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L135;

  L135:
    call {:si_unique_call 527} vslice_dummy_var_105 := corral_nondet();
    zfw := BoardMemory;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_241;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    havoc Tmp_266;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_226;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    havoc Tmp_218;
    call {:si_unique_call 528} vslice_dummy_var_106 := corral_nondet();
    call {:si_unique_call 529} vslice_dummy_var_107 := corral_nondet();
    call {:si_unique_call 530} vslice_dummy_var_108 := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 531} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 532} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 533} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 534} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 535} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 536} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 537} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 538} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 539} boogieTmp := corral_nondet();
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 540} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 541} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 542} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 543} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 544} boogieTmp := corral_nondet();
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 545} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 546} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 547} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 548} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 549} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 550} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 551} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 552} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 553} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 554} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 555} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 556} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 557} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 558} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 559} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 560} boogieTmp := corral_nondet();
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_123;
    call {:si_unique_call 561} MmUnmapIoSpace(0, vslice_dummy_var_123);
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 562} sdv_211 := MmMapIoSpace(Tmp_222, 64, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} ch_8 != 0;
    assume ch_8 > 0;
    call {:si_unique_call 563} sdv_214 := MmMapIoSpace(Tmp_223, 96, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} buf_2 != 0;
    assume buf_2 > 0;
    call {:si_unique_call 564} sdv_185 := MmMapIoSpace(Tmp_245, 64, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 565} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 566} boogieTmp := corral_nondet();
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_124;
    call {:si_unique_call 567} sdv_198 := MmMapIoSpace(Tmp_224, vslice_dummy_var_124, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_125;
    call {:si_unique_call 568} sdv_191 := MmMapIoSpace(Tmp_231, vslice_dummy_var_125, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 569} sdv_216 := MmMapIoSpace(Tmp_225, 5768, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 570} sdv_193 := CyzDoesPortExist(pDevExt_5, DeviceName__CYZ_DEVICE_EXTENSION(pDevExt_5));
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_193 != 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 571} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 572} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 573} boogieTmp := corral_nondet();
    Tmp_238 := strConst__li2bpl47;
    call {:si_unique_call 574} vslice_dummy_var_109 := CyzDbgPrintEx(4, Tmp_238);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc pDispatch_3;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} firstTimeThisBoard != 0;
    pollingCycle := 10;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_126;
    call {:si_unique_call 575} boogieTmp := RtlLargeIntegerNegate(vslice_dummy_var_126);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 576} Tmp_228 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_127;
    Mem_T.INT4[Tmp_228] := vslice_dummy_var_127;
    call {:si_unique_call 577} sdv_KeInitializeSpinLock(Tmp_228);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 578} KeInitializeTimer(0);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 579} KeInitializeDpc(PollingDpc__CYZ_DISPATCH(pDispatch_3), li2bplFunctionConstant113, 0);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 580} KeInitializeEvent(PendingDpcEvent__CYZ_DISPATCH(pDispatch_3), 1, 0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 581} intr := corral_nondet();
    intr := BOR(intr, BOR(65536, 131072));
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 582} boogieTmp := corral_nondet();
    goto L261;

  L261:
    call {:si_unique_call 583} Tmp_228 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_128;
    Mem_T.INT4[Tmp_228] := vslice_dummy_var_128;
    call {:si_unique_call 584} vslice_dummy_var_110 := sdv_InterlockedIncrement(Tmp_228);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    incPoll := 1;
    goto L299;

  L299:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_2 >= 0;
    goto L301;

  L301:
    Tmp_215 := status_2;
    return;

  anon61_Then:
    assume {:partition} 0 > status_2;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} incPoll != 0;
    call {:si_unique_call 585} Tmp_228 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_129;
    Mem_T.INT4[Tmp_228] := vslice_dummy_var_129;
    call {:si_unique_call 586} vslice_dummy_var_111 := sdv_InterlockedDecrement(Tmp_228);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    goto L302;

  L302:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} allocedDispatch != 0;
    call {:si_unique_call 587} sdv_ExFreePool(0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L306;

  L306:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_130;
    call {:si_unique_call 588} MmUnmapIoSpace(0, vslice_dummy_var_130);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L311;

  L311:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 589} MmUnmapIoSpace(0, 64);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L316;

  L316:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 590} MmUnmapIoSpace(0, 96);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L321;

  L321:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 591} MmUnmapIoSpace(0, 64);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L326;

  L326:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_131;
    call {:si_unique_call 592} MmUnmapIoSpace(0, vslice_dummy_var_131);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L331;

  L331:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_132;
    call {:si_unique_call 593} MmUnmapIoSpace(0, vslice_dummy_var_132);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L336;

  L336:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 594} MmUnmapIoSpace(0, 5768);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L301;

  anon70_Then:
    goto L301;

  anon69_Then:
    goto L336;

  anon68_Then:
    goto L331;

  anon67_Then:
    goto L326;

  anon66_Then:
    goto L321;

  anon65_Then:
    goto L316;

  anon64_Then:
    goto L311;

  anon63_Then:
    assume {:partition} allocedDispatch == 0;
    goto L306;

  anon62_Then:
    assume {:partition} incPoll == 0;
    goto L302;

  anon84_Then:
    assume {:partition} firstTimeThisBoard == 0;
    goto L261;

  anon60_Then:
    assume {:partition} sdv_193 == 0;
    Tmp_242 := strConst__li2bpl38;
    call {:si_unique_call 595} vslice_dummy_var_112 := CyzDbgPrintEx(1, Tmp_242);
    status_2 := -1073741810;
    goto L299;

  anon83_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_217;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_253 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_133;
    havoc vslice_dummy_var_134;
    havoc vslice_dummy_var_135;
    havoc vslice_dummy_var_136;
    call {:si_unique_call 596} CyzLogError(vslice_dummy_var_133, vslice_dummy_var_134, vslice_dummy_var_135, Tmp_254, 0, 0, 0, Tmp_253, 0, -1073475524, Tmp_217, vslice_dummy_var_136, 0, 0);
    Tmp_235 := strConst__li2bpl39;
    call {:si_unique_call 597} vslice_dummy_var_113 := CyzDbgPrintEx(1, Tmp_235);
    status_2 := -1073741709;
    goto L299;

  anon82_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_260;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_256 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_137;
    havoc vslice_dummy_var_138;
    havoc vslice_dummy_var_139;
    havoc vslice_dummy_var_140;
    call {:si_unique_call 598} CyzLogError(vslice_dummy_var_137, vslice_dummy_var_138, vslice_dummy_var_139, Tmp_264, 0, 0, 0, Tmp_256, 0, -1073475525, Tmp_260, vslice_dummy_var_140, 0, 0);
    Tmp_262 := strConst__li2bpl40;
    call {:si_unique_call 599} vslice_dummy_var_114 := CyzDbgPrintEx(1, Tmp_262);
    status_2 := -1073741709;
    goto L299;

  anon81_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_233;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_221 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} Tmp_240 != 0;
    assume Tmp_240 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_141;
    havoc vslice_dummy_var_142;
    havoc vslice_dummy_var_143;
    havoc vslice_dummy_var_144;
    call {:si_unique_call 600} CyzLogError(vslice_dummy_var_141, vslice_dummy_var_142, vslice_dummy_var_143, Tmp_240, 0, 0, 0, Tmp_221, 0, -1073475526, Tmp_233, vslice_dummy_var_144, 0, 0);
    Tmp_248 := strConst__li2bpl41;
    call {:si_unique_call 601} vslice_dummy_var_115 := CyzDbgPrintEx(1, Tmp_248);
    status_2 := -1073741709;
    goto L299;

  anon80_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_230;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_265 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} Tmp_216 != 0;
    assume Tmp_216 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_145;
    havoc vslice_dummy_var_146;
    havoc vslice_dummy_var_147;
    havoc vslice_dummy_var_148;
    call {:si_unique_call 602} CyzLogError(vslice_dummy_var_145, vslice_dummy_var_146, vslice_dummy_var_147, Tmp_216, 0, 0, 0, Tmp_265, 0, -1073475527, Tmp_230, vslice_dummy_var_148, 0, 0);
    Tmp_259 := strConst__li2bpl42;
    call {:si_unique_call 603} vslice_dummy_var_116 := CyzDbgPrintEx(1, Tmp_259);
    status_2 := -1073741709;
    goto L299;

  anon79_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_234;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_250 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_149;
    havoc vslice_dummy_var_150;
    havoc vslice_dummy_var_151;
    havoc vslice_dummy_var_152;
    call {:si_unique_call 604} CyzLogError(vslice_dummy_var_149, vslice_dummy_var_150, vslice_dummy_var_151, Tmp_243, 0, 0, 0, Tmp_250, 0, -1073475528, Tmp_234, vslice_dummy_var_152, 0, 0);
    Tmp_247 := strConst__li2bpl43;
    call {:si_unique_call 605} vslice_dummy_var_117 := CyzDbgPrintEx(1, Tmp_247);
    status_2 := -1073741709;
    goto L299;

  anon78_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_249;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_252 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_153;
    havoc vslice_dummy_var_154;
    havoc vslice_dummy_var_155;
    havoc vslice_dummy_var_156;
    call {:si_unique_call 606} CyzLogError(vslice_dummy_var_153, vslice_dummy_var_154, vslice_dummy_var_155, Tmp_220, 0, 0, 0, Tmp_252, 0, -1073475529, Tmp_249, vslice_dummy_var_156, 0, 0);
    Tmp_219 := strConst__li2bpl44;
    call {:si_unique_call 607} vslice_dummy_var_118 := CyzDbgPrintEx(1, Tmp_219);
    status_2 := -1073741709;
    goto L299;

  anon58_Then:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L135;

  anon59_Then:
    goto L134;

  anon72_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon73_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon74_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon77_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L132;

  anon76_Then:
    assume {:partition} BoardMemory == 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_246;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_232 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_157;
    havoc vslice_dummy_var_158;
    havoc vslice_dummy_var_159;
    havoc vslice_dummy_var_160;
    call {:si_unique_call 608} CyzLogError(vslice_dummy_var_157, vslice_dummy_var_158, vslice_dummy_var_159, Tmp_261, 0, 0, 0, Tmp_232, 0, -1073475574, Tmp_246, vslice_dummy_var_160, 0, 0);
    Tmp_258 := strConst__li2bpl45;
    call {:si_unique_call 609} vslice_dummy_var_119 := CyzDbgPrintEx(1, Tmp_258);
    status_2 := -1073741709;
    goto L299;

  anon75_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_257;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    Tmp_244 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData)] + 1;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_161;
    havoc vslice_dummy_var_162;
    havoc vslice_dummy_var_163;
    havoc vslice_dummy_var_164;
    call {:si_unique_call 610} CyzLogError(vslice_dummy_var_161, vslice_dummy_var_162, vslice_dummy_var_163, Tmp_236, 0, 0, 0, Tmp_244, 0, -1073475573, Tmp_257, vslice_dummy_var_164, 0, 0);
    Tmp_229 := strConst__li2bpl46;
    call {:si_unique_call 611} vslice_dummy_var_120 := CyzDbgPrintEx(1, Tmp_229);
    status_2 := -1073741709;
    goto L299;

  anon57_Then:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 612} boogieTmp := ExAllocatePoolWithTag(0, 384, -797279933);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 613} sdv_RtlZeroMemory(0, 384);
    allocedDispatch := 1;
    firstTimeThisBoard := 1;
    goto L40;

  anon71_Then:
    status_2 := -1073741670;
    goto L299;
}



procedure {:origName "CyzInitMultiPort"} CyzInitMultiPort(actual_PDevExt_1: int, actual_PConfigData_1: int, actual_PDevObj_5: int) returns (Tmp_271: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_271 == 0 || Tmp_271 == -1073741810 || Tmp_271 == -1073741709 || Tmp_271 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInitMultiPort"} CyzInitMultiPort(actual_PDevExt_1: int, actual_PConfigData_1: int, actual_PDevObj_5: int) returns (Tmp_271: int)
{
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:pointer} pNewExt: int;
  var {:scalar} status_3: int;
  var {:pointer} PDevExt_1: int;
  var {:pointer} PConfigData_1: int;
  var {:pointer} PDevObj_5: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;

  anon0:
    PDevExt_1 := actual_PDevExt_1;
    PConfigData_1 := actual_PConfigData_1;
    PDevObj_5 := actual_PDevObj_5;
    call {:si_unique_call 614} Tmp_272 := __HAVOC_malloc(104);
    call {:si_unique_call 615} Tmp_273 := __HAVOC_malloc(104);
    call {:si_unique_call 616} Tmp_274 := __HAVOC_malloc(124);
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    havoc pNewExt;
    call {:si_unique_call 617} sdv_do_paged_code_check();
    Tmp_274 := strConst__li2bpl50;
    call {:si_unique_call 618} vslice_dummy_var_121 := CyzDbgPrintEx(2, Tmp_274);
    assume {:nonnull} PDevExt_1 != 0;
    assume PDevExt_1 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    call {:si_unique_call 619} status_3 := CyzInitController(PDevObj_5, PConfigData_1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_3 >= 0;
    Tmp_273 := strConst__li2bpl52;
    call {:si_unique_call 620} vslice_dummy_var_122 := CyzDbgPrintEx(2, Tmp_273);
    Tmp_271 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 0 > status_3;
    Tmp_272 := strConst__li2bpl51;
    call {:si_unique_call 621} vslice_dummy_var_123 := CyzDbgPrintEx(2, Tmp_272);
    Tmp_271 := status_3;
    goto L1;
}



procedure {:origName "CyzSetPowerD3"} CyzSetPowerD3(actual_PDevObj_6: int, actual_PIrp: int) returns (Tmp_276: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetPowerD3"} CyzSetPowerD3(actual_PDevObj_6: int, actual_PIrp: int) returns (Tmp_276: int)
{
  var {:pointer} SD2: int;
  var {:pointer} Tmp_277: int;
  var {:pointer} pDevExt_6: int;
  var {:scalar} sdv_2: int;
  var {:pointer} pIrpStack: int;
  var {:pointer} PDevObj_6: int;
  var {:pointer} PIrp: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;

  anon0:
    call {:si_unique_call 622} sdv_2 := __HAVOC_malloc(8);
    PDevObj_6 := actual_PDevObj_6;
    PIrp := actual_PIrp;
    call {:si_unique_call 623} Tmp_277 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    havoc pDevExt_6;
    call {:si_unique_call 624} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 625} sdv_do_paged_code_check();
    Tmp_277 := strConst__li2bpl53;
    call {:si_unique_call 626} vslice_dummy_var_125 := CyzDbgPrintEx(6, Tmp_277);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 627} vslice_dummy_var_124 := CyzSendWaitWake(pDevExt_6);
    goto L19;

  L19:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    havoc vslice_dummy_var_165;
    havoc vslice_dummy_var_166;
    call {:si_unique_call 628} SD2 := PoSetPowerState(0, vslice_dummy_var_165, vslice_dummy_var_166);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 629} vslice_dummy_var_126 := CyzTryToDisableTimer(pDevExt_6);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 630} CyzSaveDeviceState(pDevExt_6);
    goto L26;

  L26:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    call {:si_unique_call 631} PoStartNextPowerIrp(0);
    call {:si_unique_call 632} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_167;
    call {:si_unique_call 633} Tmp_276 := CyzPoCallDriver(pDevExt_6, vslice_dummy_var_167, PIrp);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    goto L26;

  anon9_Then:
    goto L19;
}



procedure {:origName "CyzRestoreDeviceState"} CyzRestoreDeviceState(actual_PDevExt_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRestoreDeviceState"} CyzRestoreDeviceState(actual_PDevExt_2: int)
{
  var {:pointer} Tmp_280: int;
  var {:scalar} Tmp_281: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} Tmp_283: int;
  var {:pointer} Tmp_284: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} pDispatch_4: int;
  var {:pointer} PDevExt_2: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;

  anon0:
    call {:si_unique_call 634} vslice_dummy_var_127 := __HAVOC_malloc(4);
    PDevExt_2 := actual_PDevExt_2;
    call {:si_unique_call 635} Tmp_280 := __HAVOC_malloc(256);
    call {:si_unique_call 636} Tmp_282 := __HAVOC_malloc(116);
    call {:si_unique_call 637} Tmp_283 := __HAVOC_malloc(72);
    call {:si_unique_call 638} Tmp_285 := __HAVOC_malloc(52);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    call {:si_unique_call 639} sdv_do_paged_code_check();
    Tmp_282 := strConst__li2bpl54;
    call {:si_unique_call 640} vslice_dummy_var_130 := CyzDbgPrintEx(11, Tmp_282);
    Tmp_285 := strConst__li2bpl55;
    call {:si_unique_call 641} vslice_dummy_var_131 := CyzDbgPrintEx(11, Tmp_285);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_283 := strConst__li2bpl56;
    call {:si_unique_call 642} vslice_dummy_var_132 := CyzDbgPrintEx(12, Tmp_283);
    call {:si_unique_call 643} vslice_dummy_var_128 := CyzReset(PDevExt_2);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    havoc pDispatch_4;
    call {:si_unique_call 644} Tmp_284 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    Mem_T.INT4[Tmp_284] := oldIrql_3;
    call {:si_unique_call 645} sdv_KeAcquireSpinLock(0, Tmp_284);
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_284];
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    havoc Tmp_281;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    havoc Tmp_280;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L35;

  L35:
    call {:si_unique_call 646} sdv_KeReleaseSpinLock(0, oldIrql_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    havoc vslice_dummy_var_168;
    havoc vslice_dummy_var_169;
    call {:si_unique_call 647} vslice_dummy_var_129 := KeSetTimerEx(0, vslice_dummy_var_168, vslice_dummy_var_169, 0);
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    goto L35;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    goto L1;
}



procedure {:origName "CyzDevicePowerComplete"} CyzDevicePowerComplete(actual_DeviceObject_2: int, actual_Irp_2: int, actual_Context_13: int) returns (Tmp_286: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDevicePowerComplete"} CyzDevicePowerComplete(actual_DeviceObject_2: int, actual_Irp_2: int, actual_Context_13: int) returns (Tmp_286: int)
{
  var {:pointer} SD1: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} pDevExt_7: int;
  var {:scalar} powerState: int;
  var {:scalar} sdv_1: int;
  var {:pointer} stack: int;
  var {:scalar} powerType: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var vslice_dummy_var_133: int;

  anon0:
    call {:si_unique_call 648} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 649} sdv_1 := __HAVOC_malloc(8);
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 650} Tmp_287 := __HAVOC_malloc(72);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 651} sdv_IoMarkIrpPending(0);
    goto L8;

  L8:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc pDevExt_7;
    call {:si_unique_call 652} stack := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} stack != 0;
    assume stack > 0;
    havoc powerType;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    assume {:nonnull} stack != 0;
    assume stack > 0;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    assume {:nonnull} stack != 0;
    assume stack > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 653} CyzRestoreDeviceState(pDevExt_7);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L20;

  L20:
    call {:si_unique_call 654} SD1 := PoSetPowerState(0, powerType, powerState);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    call {:si_unique_call 655} PoStartNextPowerIrp(0);
    Tmp_287 := strConst__li2bpl2;
    call {:si_unique_call 656} vslice_dummy_var_133 := CyzDbgPrintEx(9, Tmp_287);
    call {:si_unique_call 657} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 658} CyzIRPEpilogue(pDevExt_7);
    Tmp_286 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    goto L20;

  anon7_Then:
    goto L8;
}



procedure {:origName "CyzSendWaitWake"} CyzSendWaitWake(actual_PDevExt_3: int) returns (Tmp_289: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_289 == -1073741436 || Tmp_289 == 0 || Tmp_289 == -1073741584 || Tmp_289 == 259 || Tmp_289 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSendWaitWake"} CyzSendWaitWake(actual_PDevExt_3: int) returns (Tmp_289: int)
{
  var {:scalar} powerState_1: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} PDevExt_3: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;

  anon0:
    call {:si_unique_call 659} powerState_1 := __HAVOC_malloc(8);
    PDevExt_3 := actual_PDevExt_3;
    call {:si_unique_call 660} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_289 := -1073741436;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_289 := -1073741436;
    goto L1;

  anon12_Then:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 661} Tmp_290 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    havoc vslice_dummy_var_170;
    Mem_T.INT4[Tmp_290] := vslice_dummy_var_170;
    call {:si_unique_call 662} vslice_dummy_var_134 := sdv_InterlockedIncrement(Tmp_290);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    havoc vslice_dummy_var_171;
    call {:si_unique_call 663} status_5 := PoRequestPowerIrp#1(vslice_dummy_var_171, 0, powerState_1, li2bplFunctionConstant290, PDevExt_3, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_5 == 259;
    status_5 := 0;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L27;

  L27:
    Tmp_289 := status_5;
    goto L1;

  anon14_Then:
    assume {:partition} status_5 != 259;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_5 < 0;
    call {:si_unique_call 664} CyzIRPEpilogue(PDevExt_3);
    goto L27;

  anon15_Then:
    assume {:partition} 0 <= status_5;
    goto L27;

  anon13_Then:
    Tmp_289 := -1073741436;
    goto L1;
}



procedure {:origName "CyzPowerDispatch"} CyzPowerDispatch(actual_PDevObj_7: int, actual_PIrp_1: int) returns (Tmp_291: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPowerDispatch"} CyzPowerDispatch(actual_PDevObj_7: int, actual_PIrp_1: int) returns (Tmp_291: int)
{
  var {:pointer} Tmp_292: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} pDevExt_8: int;
  var {:pointer} Tmp_295: int;
  var {:pointer} Tmp_296: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:pointer} Tmp_299: int;
  var {:pointer} pIrpStack_1: int;
  var {:pointer} Tmp_300: int;
  var {:pointer} Tmp_301: int;
  var {:pointer} pLowerDevObj: int;
  var {:pointer} Tmp_302: int;
  var {:scalar} status_6: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} PDevObj_7: int;
  var {:pointer} PIrp_1: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;

  anon0:
    PDevObj_7 := actual_PDevObj_7;
    PIrp_1 := actual_PIrp_1;
    call {:si_unique_call 665} Tmp_292 := __HAVOC_malloc(100);
    call {:si_unique_call 666} Tmp_293 := __HAVOC_malloc(72);
    call {:si_unique_call 667} Tmp_295 := __HAVOC_malloc(136);
    call {:si_unique_call 668} Tmp_296 := __HAVOC_malloc(72);
    call {:si_unique_call 669} Tmp_297 := __HAVOC_malloc(72);
    call {:si_unique_call 670} Tmp_298 := __HAVOC_malloc(124);
    call {:si_unique_call 671} Tmp_299 := __HAVOC_malloc(72);
    call {:si_unique_call 672} Tmp_300 := __HAVOC_malloc(80);
    call {:si_unique_call 673} Tmp_301 := __HAVOC_malloc(100);
    call {:si_unique_call 674} Tmp_302 := __HAVOC_malloc(104);
    call {:si_unique_call 675} Tmp_303 := __HAVOC_malloc(104);
    call {:si_unique_call 676} Tmp_304 := __HAVOC_malloc(112);
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    havoc pDevExt_8;
    call {:si_unique_call 677} pIrpStack_1 := sdv_IoGetCurrentIrpStackLocation(PIrp_1);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    havoc pLowerDevObj;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 678} sdv_do_paged_code_check();
    call {:si_unique_call 679} status_6 := CyzIRPPrologue(PIrp_1, pDevExt_8);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_6 != 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_6 != 259;
    call {:si_unique_call 680} PoStartNextPowerIrp(0);
    Tmp_299 := strConst__li2bpl2;
    call {:si_unique_call 681} vslice_dummy_var_137 := CyzDbgPrintEx(9, Tmp_299);
    call {:si_unique_call 682} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 683} CyzIRPEpilogue(pDevExt_8);
    goto L26;

  L26:
    Tmp_291 := status_6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon50_Then:
    assume {:partition} status_6 == 259;
    goto L26;

  anon49_Then:
    assume {:partition} status_6 == 0;
    status_6 := 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_304 := strConst__li2bpl60;
    call {:si_unique_call 684} vslice_dummy_var_147 := CyzDbgPrintEx(12, Tmp_304);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L57;

  L57:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_6;
    call {:si_unique_call 685} PoStartNextPowerIrp(0);
    Tmp_297 := strConst__li2bpl2;
    call {:si_unique_call 686} vslice_dummy_var_148 := CyzDbgPrintEx(9, Tmp_297);
    call {:si_unique_call 687} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 688} CyzIRPEpilogue(pDevExt_8);
    Tmp_291 := status_6;
    goto L1;

  anon54_Then:
    goto L58;

  L58:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    status_6 := 0;
    call {:si_unique_call 689} PoStartNextPowerIrp(0);
    call {:si_unique_call 690} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 691} Tmp_291 := CyzPoCallDriver(pDevExt_8, pLowerDevObj, PIrp_1);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L58;

  anon51_Then:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L58;

  anon52_Then:
    goto L57;

  anon58_Then:
    goto L40;

  L40:
    call {:si_unique_call 692} PoStartNextPowerIrp(0);
    call {:si_unique_call 693} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 694} status_6 := CyzPoCallDriver(pDevExt_8, pLowerDevObj, PIrp_1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    Tmp_291 := status_6;
    goto L1;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_302 := strConst__li2bpl59;
    call {:si_unique_call 695} vslice_dummy_var_140 := CyzDbgPrintEx(12, Tmp_302);
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_293 := strConst__li2bpl63;
    call {:si_unique_call 696} vslice_dummy_var_142 := CyzDbgPrintEx(12, Tmp_293);
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_6;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    Tmp_295 := strConst__li2bpl64;
    call {:si_unique_call 697} vslice_dummy_var_143 := CyzDbgPrintEx(12, Tmp_295);
    goto L40;

  anon69_Then:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L107;

  L107:
    Tmp_292 := strConst__li2bpl65;
    call {:si_unique_call 698} vslice_dummy_var_145 := CyzDbgPrintEx(12, Tmp_292);
    call {:si_unique_call 699} Tmp_291 := CyzSetPowerD3(PDevObj_7, PIrp_1);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon62_Then:
    goto L40;

  anon63_Then:
    goto L107;

  anon64_Then:
    goto L107;

  anon56_Then:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(pDevExt_8)] != 0;
    Tmp_301 := strConst__li2bpl66;
    call {:si_unique_call 700} vslice_dummy_var_144 := CyzDbgPrintEx(12, Tmp_301);
    call {:si_unique_call 701} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 702} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    call {:si_unique_call 703} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant285, 0, 1, 1, 1);
    call {:si_unique_call 704} vslice_dummy_var_135 := PoCallDriver(0, PIrp_1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    Tmp_291 := 259;
    goto L1;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:partition} Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(pDevExt_8)] == 0;
    goto L40;

  anon61_Then:
    Tmp_300 := strConst__li2bpl61;
    call {:si_unique_call 705} vslice_dummy_var_146 := CyzDbgPrintEx(12, Tmp_300);
    goto L40;

  anon55_Then:
    Tmp_296 := strConst__li2bpl62;
    call {:si_unique_call 706} vslice_dummy_var_141 := CyzDbgPrintEx(12, Tmp_296);
    call {:si_unique_call 707} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 708} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    call {:si_unique_call 709} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant284, 0, 1, 1, 1);
    call {:si_unique_call 710} vslice_dummy_var_136 := PoCallDriver(0, PIrp_1);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_291 := 259;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    Tmp_298 := strConst__li2bpl58;
    call {:si_unique_call 711} vslice_dummy_var_139 := CyzDbgPrintEx(12, Tmp_298);
    goto L40;

  anon66_Then:
    Tmp_303 := strConst__li2bpl57;
    call {:si_unique_call 712} vslice_dummy_var_138 := CyzDbgPrintEx(12, Tmp_303);
    goto L40;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzSaveDeviceState"} CyzSaveDeviceState(actual_PDevExt_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSaveDeviceState"} CyzSaveDeviceState(actual_PDevExt_4: int)
{
  var {:pointer} Tmp_306: int;
  var {:pointer} Tmp_307: int;
  var {:pointer} PDevExt_4: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;

  anon0:
    call {:si_unique_call 713} vslice_dummy_var_149 := __HAVOC_malloc(4);
    PDevExt_4 := actual_PDevExt_4;
    call {:si_unique_call 714} Tmp_306 := __HAVOC_malloc(116);
    call {:si_unique_call 715} Tmp_307 := __HAVOC_malloc(112);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 716} sdv_do_paged_code_check();
    Tmp_306 := strConst__li2bpl67;
    call {:si_unique_call 717} vslice_dummy_var_150 := CyzDbgPrintEx(11, Tmp_306);
    Tmp_307 := strConst__li2bpl68;
    call {:si_unique_call 718} vslice_dummy_var_151 := CyzDbgPrintEx(11, Tmp_307);
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 719} vslice_dummy_var_152 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGotoPowerState"} CyzGotoPowerState(actual_PDevObj_9: int, actual_PDevExt_5: int, actual_DevPowerState: int) returns (Tmp_313: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_313 == 0 || Tmp_313 == -1073741584 || Tmp_313 == 259 || Tmp_313 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGotoPowerState"} CyzGotoPowerState(actual_PDevObj_9: int, actual_PDevExt_5: int, actual_DevPowerState: int) returns (Tmp_313: int)
{
  var {:scalar} powerState_3: int;
  var {:pointer} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:scalar} gotoPowEvent: int;
  var {:scalar} status_8: int;
  var {:pointer} PDevObj_9: int;
  var {:scalar} DevPowerState: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 720} powerState_3 := __HAVOC_malloc(8);
    call {:si_unique_call 721} gotoPowEvent := __HAVOC_malloc(124);
    PDevObj_9 := actual_PDevObj_9;
    DevPowerState := actual_DevPowerState;
    call {:si_unique_call 722} Tmp_314 := __HAVOC_malloc(108);
    call {:si_unique_call 723} Tmp_315 := __HAVOC_malloc(88);
    call {:si_unique_call 724} sdv_do_paged_code_check();
    Tmp_315 := strConst__li2bpl69;
    call {:si_unique_call 725} vslice_dummy_var_154 := CyzDbgPrintEx(11, Tmp_315);
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    call {:si_unique_call 726} KeInitializeEvent(gotoPowEvent, 1, 0);
    call {:si_unique_call 727} status_8 := PoRequestPowerIrp#1(PDevObj_9, 2, powerState_3, li2bplFunctionConstant280, gotoPowEvent, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_8 == 259;
    call {:si_unique_call 728} vslice_dummy_var_153 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    status_8 := 0;
    goto L21;

  L21:
    Tmp_314 := strConst__li2bpl70;
    call {:si_unique_call 729} vslice_dummy_var_155 := CyzDbgPrintEx(11, Tmp_314);
    Tmp_313 := status_8;
    return;

  anon3_Then:
    assume {:partition} status_8 != 259;
    goto L21;
}



procedure {:origName "CyzSystemPowerComplete"} CyzSystemPowerComplete(actual_DeviceObject_3: int, actual_Irp_3: int, actual_Context_15: int) returns (Tmp_317: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_317 == -1073741802 || Tmp_317 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSystemPowerComplete"} CyzSystemPowerComplete(actual_DeviceObject_3: int, actual_Irp_3: int, actual_Context_15: int) returns (Tmp_317: int)
{
  var {:pointer} Tmp_318: int;
  var {:scalar} powerState_4: int;
  var {:pointer} powerContext: int;
  var {:pointer} sdv_266: int;
  var {:scalar} Tmp_319: int;
  var {:pointer} data: int;
  var {:pointer} Tmp_321: int;
  var {:scalar} status_9: int;
  var {:pointer} stack_1: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 730} powerState_4 := __HAVOC_malloc(8);
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_3 := actual_Irp_3;
    call {:si_unique_call 731} Tmp_318 := __HAVOC_malloc(28);
    call {:si_unique_call 732} Tmp_321 := __HAVOC_malloc(72);
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    havoc status_9;
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc data;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_9 >= 0;
    call {:si_unique_call 733} stack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L24;

  L24:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    havoc Tmp_319;
    assume {:nonnull} data != 0;
    assume data > 0;
    havoc Tmp_318;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  L26:
    call {:si_unique_call 734} sdv_266 := ExAllocatePoolWithTag(0, 8, -797279933);
    powerContext := sdv_266;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} powerContext != 0;
    assume {:nonnull} powerContext != 0;
    assume powerContext > 0;
    assume {:nonnull} powerContext != 0;
    assume powerContext > 0;
    call {:si_unique_call 735} status_9 := PoRequestPowerIrp#1(DeviceObject_3, 2, powerState_4, li2bplFunctionConstant283, powerContext, 0);
    goto L38;

  L38:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_9 >= 0;
    goto L40;

  L40:
    Tmp_317 := -1073741802;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} 0 > status_9;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} powerContext != 0;
    call {:si_unique_call 736} sdv_ExFreePool(0);
    goto L41;

  L41:
    call {:si_unique_call 737} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    Tmp_321 := strConst__li2bpl2;
    call {:si_unique_call 738} vslice_dummy_var_156 := CyzDbgPrintEx(9, Tmp_321);
    call {:si_unique_call 739} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 740} CyzIRPEpilogue(data);
    goto L40;

  anon26_Then:
    assume {:partition} powerContext == 0;
    goto L41;

  anon36_Then:
    assume {:partition} powerContext == 0;
    status_9 := -1073741670;
    goto L38;

  anon27_Then:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  anon28_Then:
    goto L24;

  anon29_Then:
    goto L24;

  anon30_Then:
    goto L24;

  anon31_Then:
    goto L24;

  anon32_Then:
    goto L24;

  anon33_Then:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  anon35_Then:
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    goto L26;

  anon34_Then:
    assume {:partition} 0 > status_9;
    call {:si_unique_call 741} PoStartNextPowerIrp(0);
    call {:si_unique_call 742} CyzIRPEpilogue(data);
    Tmp_317 := 0;
    goto L1;
}



procedure {:origName "CyzGiveImmediateToIsr"} CyzGiveImmediateToIsr(actual_Context_16: int) returns (Tmp_322: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_322 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveImmediateToIsr"} CyzGiveImmediateToIsr(actual_Context_16: int) returns (Tmp_322: int)
{
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:pointer} sdv_269: int;
  var {:pointer} Tmp_323: int;
  var {:scalar} s_p_e_c_i_a_l_6: int;
  var {:pointer} Extension_15: int;
  var {:pointer} Tmp_325: int;
  var {:pointer} Context_16: int;
  var vslice_dummy_var_172: int;

  anon0:
    Context_16 := actual_Context_16;
    Extension_15 := Context_16;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_325;
    assume {:nonnull} Tmp_325 != 0;
    assume Tmp_325 > 0;
    havoc Tmp_323;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    s_p_e_c_i_a_l_6 := 1;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_172;
    call {:si_unique_call 743} sdv_269 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_172);
    assume {:nonnull} sdv_269 != 0;
    assume sdv_269 > 0;
    s_p_e_c_i_a_l_5 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_269)));
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_5] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_5], s_p_e_c_i_a_l_6);
    Tmp_322 := 0;
    return;
}



procedure {:origName "CyzGrabImmediateFromIsr"} CyzGrabImmediateFromIsr(actual_Context_17: int) returns (Tmp_328: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_328 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabImmediateFromIsr"} CyzGrabImmediateFromIsr(actual_Context_17: int) returns (Tmp_328: int)
{
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:pointer} sdv_270: int;
  var {:scalar} s_p_e_c_i_a_l_8: int;
  var {:pointer} Extension_17: int;
  var {:pointer} Context_17: int;
  var vslice_dummy_var_173: int;

  anon0:
    Context_17 := actual_Context_17;
    Extension_17 := Context_17;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    s_p_e_c_i_a_l_8 := 1;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_173;
    call {:si_unique_call 744} sdv_270 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_173);
    assume {:nonnull} sdv_270 != 0;
    assume sdv_270 > 0;
    s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_270)));
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_7] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_7], BNOT(s_p_e_c_i_a_l_8));
    goto L6;

  L6:
    Tmp_328 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 745} vslice_dummy_var_157 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartImmediate"} CyzStartImmediate(actual_Extension_19: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartImmediate"} CyzStartImmediate(actual_Extension_19: int)
{
  var {:pointer} Tmp_335: int;
  var {:pointer} s_p_e_c_i_a_l_9: int;
  var {:pointer} Tmp_336: int;
  var {:scalar} TotalTime: int;
  var {:pointer} sdv_274: int;
  var {:scalar} UseATimer: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} sdv_276: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} sdv_277: int;
  var {:pointer} Tmp_338: int;
  var {:scalar} s_p_e_c_i_a_l_10: int;
  var {:pointer} s_p_e_c_i_a_l_11: int;
  var {:pointer} Tmp_339: int;
  var {:pointer} OldIrp_1: int;
  var {:scalar} s_p_e_c_i_a_l_12: int;
  var {:pointer} Tmp_340: int;
  var {:scalar} Timeouts: int;
  var {:scalar} pollIrql_3: int;
  var {:pointer} Extension_19: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;

  anon0:
    call {:si_unique_call 746} TotalTime := __HAVOC_malloc(20);
    call {:si_unique_call 747} Timeouts := __HAVOC_malloc(20);
    call {:si_unique_call 748} vslice_dummy_var_158 := __HAVOC_malloc(4);
    Extension_19 := actual_Extension_19;
    call {:si_unique_call 749} Tmp_335 := __HAVOC_malloc(80);
    call {:si_unique_call 750} Tmp_336 := __HAVOC_malloc(96);
    call {:si_unique_call 751} Tmp_337 := __HAVOC_malloc(72);
    Tmp_336 := strConst__li2bpl71;
    call {:si_unique_call 752} vslice_dummy_var_162 := CyzDbgPrintEx(2, Tmp_336);
    UseATimer := 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_338;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    call {:si_unique_call 753} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 754} Tmp_340 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    Mem_T.INT4[Tmp_340] := OldIrql_4;
    call {:si_unique_call 755} sdv_KeAcquireSpinLock(0, Tmp_340);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    OldIrql_4 := Mem_T.INT4[Tmp_340];
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    call {:si_unique_call 756} sdv_KeReleaseSpinLock(0, OldIrql_4);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L25;

  L25:
    UseATimer := 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    goto L29;

  L29:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_174;
    call {:si_unique_call 757} sdv_277 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_174);
    assume {:nonnull} sdv_277 != 0;
    assume sdv_277 > 0;
    call {:si_unique_call 758} Tmp_340 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    Mem_T.INT4[Tmp_340] := OldIrql_4;
    call {:si_unique_call 759} IoAcquireCancelSpinLock(Tmp_340);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    OldIrql_4 := Mem_T.INT4[Tmp_340];
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_339;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc OldIrp_1;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 760} IoReleaseCancelSpinLock(OldIrql_4);
    assume {:nonnull} OldIrp_1 != 0;
    assume OldIrp_1 > 0;
    assume {:nonnull} OldIrp_1 != 0;
    assume OldIrp_1 > 0;
    Tmp_337 := strConst__li2bpl2;
    call {:si_unique_call 761} vslice_dummy_var_163 := CyzDbgPrintEx(9, Tmp_337);
    call {:si_unique_call 762} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 763} CyzIRPEpilogue(Extension_19);
    goto L57;

  L57:
    Tmp_335 := strConst__li2bpl72;
    call {:si_unique_call 764} vslice_dummy_var_164 := CyzDbgPrintEx(2, Tmp_335);
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_175;
    call {:si_unique_call 765} vslice_dummy_var_159 := sdv_IoSetCancelRoutine(vslice_dummy_var_175, li2bplFunctionConstant312);
    s_p_e_c_i_a_l_10 := 2;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_176;
    call {:si_unique_call 766} sdv_274 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_176);
    assume {:nonnull} sdv_274 != 0;
    assume sdv_274 > 0;
    s_p_e_c_i_a_l_9 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_274)));
    assume {:nonnull} s_p_e_c_i_a_l_9 != 0;
    assume s_p_e_c_i_a_l_9 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_9] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_9], s_p_e_c_i_a_l_10);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} UseATimer != 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 767} vslice_dummy_var_160 := CyzSetTimer(ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_19), TotalTime, TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_19), Extension_19);
    s_p_e_c_i_a_l_12 := 4;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_177;
    call {:si_unique_call 768} sdv_276 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_177);
    assume {:nonnull} sdv_276 != 0;
    assume sdv_276 > 0;
    s_p_e_c_i_a_l_11 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_276)));
    assume {:nonnull} s_p_e_c_i_a_l_11 != 0;
    assume s_p_e_c_i_a_l_11 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_11] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_11], s_p_e_c_i_a_l_12);
    goto L69;

  L69:
    call {:si_unique_call 769} Tmp_340 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    Mem_T.INT4[Tmp_340] := pollIrql_3;
    call {:si_unique_call 770} sdv_KeAcquireSpinLock(0, Tmp_340);
    assume {:nonnull} Tmp_340 != 0;
    assume Tmp_340 > 0;
    pollIrql_3 := Mem_T.INT4[Tmp_340];
    call {:si_unique_call 771} vslice_dummy_var_161 := CyzGiveImmediateToIsr(Extension_19);
    call {:si_unique_call 772} sdv_KeReleaseSpinLock(0, pollIrql_3);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 773} IoReleaseCancelSpinLock(OldIrql_4);
    goto L57;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} UseATimer == 0;
    goto L69;

  anon13_Then:
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L29;

  anon14_Then:
    goto L25;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 774} vslice_dummy_var_165 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCreateOpen"} CyzCreateOpen(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_344: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCreateOpen"} CyzCreateOpen(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_344: int)
{
  var {:scalar} localStatus: int;
  var {:pointer} sdv_282: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} sdv_284: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} sdv_291: int;
  var {:scalar} sdv_292: int;
  var {:scalar} sdv_293: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} sdv_298: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} pDispatch_5: int;
  var {:pointer} extension_3: int;
  var {:scalar} pollIrql_4: int;
  var {:scalar} pollingIrql: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;

  anon0:
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 775} Tmp_346 := __HAVOC_malloc(72);
    call {:si_unique_call 776} Tmp_347 := __HAVOC_malloc(256);
    call {:si_unique_call 777} Tmp_348 := __HAVOC_malloc(72);
    call {:si_unique_call 778} Tmp_349 := __HAVOC_malloc(72);
    call {:si_unique_call 779} Tmp_350 := __HAVOC_malloc(72);
    call {:si_unique_call 780} Tmp_351 := __HAVOC_malloc(96);
    call {:si_unique_call 781} Tmp_353 := __HAVOC_malloc(72);
    call {:si_unique_call 782} Tmp_354 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_5 != 0;
    assume DeviceObject_5 > 0;
    havoc extension_3;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc pDispatch_5;
    call {:si_unique_call 783} sdv_do_paged_code_check();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 784} sdv_IoCompleteRequest(0, 0);
    Tmp_344 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    call {:si_unique_call 785} ExAcquireFastMutex(0);
    call {:si_unique_call 786} localStatus := CyzIRPPrologue(Irp_5, extension_3);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} localStatus != 0;
    call {:si_unique_call 787} ExReleaseFastMutex(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} localStatus != 259;
    Tmp_350 := strConst__li2bpl2;
    call {:si_unique_call 788} vslice_dummy_var_170 := CyzDbgPrintEx(9, Tmp_350);
    call {:si_unique_call 789} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 790} CyzIRPEpilogue(extension_3);
    goto L34;

  L34:
    Tmp_344 := localStatus;
    goto L1;

  anon41_Then:
    assume {:partition} localStatus == 259;
    goto L34;

  anon40_Then:
    assume {:partition} localStatus == 0;
    call {:si_unique_call 791} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 792} sdv_292 := sdv_InterlockedIncrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_292 != 1;
    call {:si_unique_call 793} ExReleaseFastMutex(0);
    call {:si_unique_call 794} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 795} vslice_dummy_var_171 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_346 := strConst__li2bpl2;
    call {:si_unique_call 796} vslice_dummy_var_172 := CyzDbgPrintEx(9, Tmp_346);
    call {:si_unique_call 797} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 798} CyzIRPEpilogue(extension_3);
    Tmp_344 := -1073741790;
    goto L1;

  anon42_Then:
    assume {:partition} sdv_292 == 1;
    Tmp_351 := strConst__li2bpl0;
    call {:si_unique_call 799} vslice_dummy_var_173 := CyzDbgPrintEx(9, Tmp_351);
    Tmp_348 := strConst__li2bpl73;
    call {:si_unique_call 800} vslice_dummy_var_174 := CyzDbgPrintEx(6, Tmp_348);
    call {:si_unique_call 801} sdv_291 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_291 != 0;
    assume sdv_291 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    call {:si_unique_call 802} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 803} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 804} vslice_dummy_var_175 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    Tmp_353 := strConst__li2bpl2;
    call {:si_unique_call 805} vslice_dummy_var_176 := CyzDbgPrintEx(9, Tmp_353);
    call {:si_unique_call 806} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 807} CyzIRPEpilogue(extension_3);
    Tmp_344 := -1073741565;
    goto L1;

  anon43_Then:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 808} sdv_293 := corral_nondet();
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_293 != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_293 != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_293 == 2;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_181;
    call {:si_unique_call 809} sdv_282 := ExAllocatePoolWithTag(0, vslice_dummy_var_181, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L98;

  L98:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_182;
    call {:si_unique_call 810} sdv_284 := ExAllocatePoolWithTag(0, vslice_dummy_var_182, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L97;

  L97:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_183;
    call {:si_unique_call 811} sdv_298 := ExAllocatePoolWithTag(0, vslice_dummy_var_183, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L96;

  L96:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 812} MmLockPagableSectionByHandle(0);
    call {:si_unique_call 813} vslice_dummy_var_166 := CyzGotoPowerState(DeviceObject_5, extension_3, 1);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 814} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 815} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 816} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 817} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    Mem_T.INT4[Tmp_352] := pollIrql_4;
    call {:si_unique_call 818} sdv_KeAcquireSpinLock(0, Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    pollIrql_4 := Mem_T.INT4[Tmp_352];
    call {:si_unique_call 819} vslice_dummy_var_167 := CyzClearStats(extension_3);
    call {:si_unique_call 820} sdv_KeReleaseSpinLock(0, pollIrql_4);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 821} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    Mem_T.INT4[Tmp_352] := pollIrql_4;
    call {:si_unique_call 822} sdv_KeAcquireSpinLock(0, Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    pollIrql_4 := Mem_T.INT4[Tmp_352];
    call {:si_unique_call 823} vslice_dummy_var_168 := CyzMarkOpen(extension_3);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 824} sdv_KeReleaseSpinLock(0, pollIrql_4);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 825} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    Mem_T.INT4[Tmp_352] := pollingIrql;
    call {:si_unique_call 826} sdv_KeAcquireSpinLock(0, Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    pollingIrql := Mem_T.INT4[Tmp_352];
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc Tmp_345;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    havoc Tmp_347;
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L168;

  L168:
    call {:si_unique_call 827} sdv_KeReleaseSpinLock(0, pollingIrql);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 828} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc localStatus;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} localStatus >= 0;
    goto L179;

  L179:
    Tmp_354 := strConst__li2bpl2;
    call {:si_unique_call 829} vslice_dummy_var_177 := CyzDbgPrintEx(9, Tmp_354);
    call {:si_unique_call 830} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 831} CyzIRPEpilogue(extension_3);
    Tmp_344 := localStatus;
    goto L1;

  anon55_Then:
    assume {:partition} 0 > localStatus;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 832} sdv_ExFreePool(0);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L189;

  L189:
    call {:si_unique_call 833} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 834} vslice_dummy_var_178 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    goto L179;

  anon46_Then:
    goto L189;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    havoc vslice_dummy_var_184;
    havoc vslice_dummy_var_185;
    call {:si_unique_call 835} vslice_dummy_var_169 := KeSetTimerEx(0, vslice_dummy_var_184, vslice_dummy_var_185, 0);
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto L168;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    call {:si_unique_call 836} ExReleaseFastMutex(0);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 837} Tmp_352 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[Tmp_352] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)];
    call {:si_unique_call 838} vslice_dummy_var_179 := sdv_InterlockedDecrement(Tmp_352);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_3)] := Mem_T.INT4[Tmp_352];
    Tmp_349 := strConst__li2bpl2;
    call {:si_unique_call 839} vslice_dummy_var_180 := CyzDbgPrintEx(9, Tmp_349);
    call {:si_unique_call 840} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 841} CyzIRPEpilogue(extension_3);
    Tmp_344 := -1073741670;
    goto L1;

  anon56_Then:
    goto L96;

  anon57_Then:
    goto L96;

  anon47_Then:
    assume {:partition} sdv_293 != 2;
    goto L96;

  anon48_Then:
    assume {:partition} sdv_293 == 1;
    goto L98;

  anon44_Then:
    assume {:partition} sdv_293 == 0;
    goto L97;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzTryToDisableTimer"} CyzTryToDisableTimer(actual_Context_18: int) returns (Tmp_355: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTryToDisableTimer"} CyzTryToDisableTimer(actual_Context_18: int) returns (Tmp_355: int)
{
  var {:scalar} Tmp_356: int;
  var {:scalar} channel: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} cancelled_1: int;
  var {:scalar} oldIrql_4: int;
  var {:scalar} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} pDispatch_6: int;
  var {:pointer} extension_4: int;
  var {:pointer} Context_18: int;
  var vslice_dummy_var_181: int;

  anon0:
    Context_18 := actual_Context_18;
    call {:si_unique_call 842} Tmp_358 := __HAVOC_malloc(256);
    call {:si_unique_call 843} Tmp_360 := __HAVOC_malloc(256);
    extension_4 := Context_18;
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    havoc pDispatch_6;
    call {:si_unique_call 844} Tmp_357 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    Mem_T.INT4[Tmp_357] := oldIrql_4;
    call {:si_unique_call 845} sdv_KeAcquireSpinLock(0, Tmp_357);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    oldIrql_4 := Mem_T.INT4[Tmp_357];
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    havoc Tmp_356;
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    havoc Tmp_358;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    channel := 0;
    goto L14;

  L14:
    call {:si_unique_call 846} channel, Tmp_359, Tmp_360 := CyzTryToDisableTimer_loop_L14(channel, Tmp_359, Tmp_360, pDispatch_6);
    goto L14_last;

  L14_last:
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_359 := channel;
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    havoc Tmp_360;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    channel := channel + 1;
    goto anon14_Else_dummy;

  anon14_Else_dummy:
    assume false;
    return;

  anon14_Then:
    goto L15;

  L15:
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    call {:si_unique_call 847} cancelled_1 := KeCancelTimer(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} cancelled_1 != 0;
    assume {:nonnull} pDispatch_6 != 0;
    assume pDispatch_6 > 0;
    goto L29;

  L29:
    call {:si_unique_call 848} vslice_dummy_var_181 := KeRemoveQueueDpc(0);
    goto L19;

  L19:
    call {:si_unique_call 849} sdv_KeReleaseSpinLock(0, oldIrql_4);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_355 := 0;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} cancelled_1 == 0;
    goto L29;

  anon12_Then:
    goto L19;

  anon11_Then:
    goto L15;
}



procedure {:origName "CyzClose"} CyzClose(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_361: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClose"} CyzClose(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_361: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:pointer} structPtr888d200ms: int;
  var {:pointer} structPtr888d100ms: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:scalar} flushCount: int;
  var {:scalar} sdv: int;
  var {:scalar} charTime: int;
  var {:scalar} waitAmount2: int;
  var {:scalar} pendingDPCs: int;
  var {:scalar} waitAmount1: int;
  var {:scalar} sdv_316: int;
  var {:scalar} S_9: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:scalar} tx_2: int;
  var {:scalar} d200ms: int;
  var {:scalar} tenCharDelay: int;
  var {:pointer} Tmp_366: int;
  var {:pointer} Tmp_367: int;
  var {:scalar} d100ms: int;
  var {:scalar} tx_3: int;
  var {:pointer} Tmp_368: int;
  var {:pointer} Tmp_369: int;
  var {:dopa} {:scalar} txempty: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} tx_4: int;
  var {:scalar} status_10: int;
  var {:pointer} extension_5: int;
  var {:scalar} pollIrql_5: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Tmp_372: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;

  anon0:
    call {:si_unique_call 850} sdv := __HAVOC_malloc(20);
    call {:si_unique_call 851} charTime := __HAVOC_malloc(20);
    call {:si_unique_call 852} vslice_dummy_var_182 := __HAVOC_malloc(20);
    call {:si_unique_call 853} S_9 := __HAVOC_malloc(8);
    call {:si_unique_call 854} d200ms := __HAVOC_malloc(20);
    call {:si_unique_call 855} tenCharDelay := __HAVOC_malloc(20);
    call {:si_unique_call 856} vslice_dummy_var_183 := __HAVOC_malloc(20);
    call {:si_unique_call 857} d100ms := __HAVOC_malloc(20);
    call {:si_unique_call 858} txempty := __HAVOC_malloc(4);
    DeviceObject_6 := actual_DeviceObject_6;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 859} Tmp_362 := __HAVOC_malloc(124);
    call {:si_unique_call 860} Tmp_363 := __HAVOC_malloc(92);
    call {:si_unique_call 861} Tmp_364 := __HAVOC_malloc(76);
    call {:si_unique_call 862} Tmp_365 := __HAVOC_malloc(72);
    call {:si_unique_call 863} Tmp_366 := __HAVOC_malloc(128);
    call {:si_unique_call 864} Tmp_367 := __HAVOC_malloc(96);
    call {:si_unique_call 865} Tmp_368 := __HAVOC_malloc(52);
    call {:si_unique_call 866} Tmp_369 := __HAVOC_malloc(72);
    call {:si_unique_call 867} Tmp_370 := __HAVOC_malloc(72);
    call {:si_unique_call 868} Tmp_372 := __HAVOC_malloc(80);
    call {:si_unique_call 869} structPtr888d200ms := RtlConvertLongToLargeInteger(-2000000);
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    call {:si_unique_call 870} structPtr888d100ms := RtlConvertLongToLargeInteger(-1000000);
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    havoc extension_5;
    call {:si_unique_call 871} ExAcquireFastMutex(0);
    call {:si_unique_call 872} status_10 := CyzIRPPrologue(Irp_6, extension_5);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_10 != 0;
    Tmp_362 := strConst__li2bpl74;
    call {:si_unique_call 873} vslice_dummy_var_197 := CyzDbgPrintEx(3, Tmp_362);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_10 == -1073741738;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 874} sdv_ExFreePool(0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    havoc status_10;
    goto L44;

  L44:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_10 != 259;
    Tmp_369 := strConst__li2bpl2;
    call {:si_unique_call 875} vslice_dummy_var_198 := CyzDbgPrintEx(9, Tmp_369);
    call {:si_unique_call 876} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 877} CyzIRPEpilogue(extension_5);
    call {:si_unique_call 878} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[Tmp_371] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)];
    call {:si_unique_call 879} vslice_dummy_var_199 := sdv_InterlockedDecrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)] := Mem_T.INT4[Tmp_371];
    goto L52;

  L52:
    call {:si_unique_call 880} ExReleaseFastMutex(0);
    Tmp_361 := status_10;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    assume {:partition} status_10 == 259;
    goto L52;

  anon57_Then:
    assume {:partition} status_10 != -1073741738;
    goto L44;

  anon55_Then:
    assume {:partition} status_10 == 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} 1 > Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)];
    Tmp_366 := strConst__li2bpl75;
    call {:si_unique_call 881} vslice_dummy_var_200 := CyzDbgPrintEx(0, Tmp_366);
    Tmp_363 := strConst__li2bpl76;
    call {:si_unique_call 882} vslice_dummy_var_201 := CyzDbgPrintEx(0, Tmp_363);
    call {:si_unique_call 883} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_370 := strConst__li2bpl2;
    call {:si_unique_call 884} vslice_dummy_var_202 := CyzDbgPrintEx(9, Tmp_370);
    call {:si_unique_call 885} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 886} CyzIRPEpilogue(extension_5);
    Tmp_361 := -1073741808;
    goto L1;

  anon56_Then:
    assume {:partition} Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)] >= 1;
    Tmp_367 := strConst__li2bpl0;
    call {:si_unique_call 887} vslice_dummy_var_203 := CyzDbgPrintEx(9, Tmp_367);
    Tmp_368 := strConst__li2bpl77;
    call {:si_unique_call 888} vslice_dummy_var_204 := CyzDbgPrintEx(6, Tmp_368);
    call {:si_unique_call 889} structPtr888sdv := CyzGetCharTime(extension_5);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 890} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 891} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 892} vslice_dummy_var_184 := CyzTurnOffBreak(extension_5);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 893} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 894} tx_3 := corral_nondet();
    call {:si_unique_call 895} tx_4 := corral_nondet();
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc tx_2;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} tx_3 >= tx_4;
    waitAmount1 := tx_3 - tx_4;
    waitAmount2 := 0;
    goto L123;

  L123:
    flushCount := waitAmount1 + waitAmount2;
    flushCount := flushCount + 74;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    goto L127;

  L127:
    call {:si_unique_call 896} flushCount, pollIrql_5, Tmp_371, vslice_dummy_var_185, vslice_dummy_var_186 := CyzClose_loop_L127(flushCount, S_9, txempty, pollIrql_5, Tmp_371, vslice_dummy_var_185, vslice_dummy_var_186);
    goto L127_last;

  L127_last:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} flushCount != 0;
    call {:si_unique_call 897} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 898} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 899} vslice_dummy_var_185 := CyzCheckIfTxEmpty(S_9);
    call {:si_unique_call 900} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} txempty != 0;
    assume txempty > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.INT4[txempty] == 0;
    call {:si_unique_call 901} vslice_dummy_var_186 := KeDelayExecutionThread(0, 0, 0);
    flushCount := flushCount - 1;
    goto anon60_Else_dummy;

  anon60_Else_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} Mem_T.INT4[txempty] != 0;
    goto L128;

  L128:
    call {:si_unique_call 902} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 903} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 904} vslice_dummy_var_187 := CyzMarkClose(extension_5);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 905} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 906} CyzIssueCmd(extension_5, 17, 0, 0);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L153;

  L153:
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} tenCharDelay != 0;
    assume tenCharDelay > 0;
    call {:si_unique_call 907} vslice_dummy_var_205 := KeDelayExecutionThread(0, 1, 0);
    call {:si_unique_call 908} vslice_dummy_var_188 := CyzClrDTR(extension_5);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L167;

  L167:
    call {:si_unique_call 909} vslice_dummy_var_189 := CyzClose_loop_L167(extension_5, vslice_dummy_var_189);
    goto L167_last;

  L167_last:
    call {:si_unique_call 940} vslice_dummy_var_189 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    call {:si_unique_call 910} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 911} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 912} vslice_dummy_var_190 := CyzNullSynch(0);
    call {:si_unique_call 913} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L164;

  L164:
    call {:si_unique_call 914} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 915} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 916} vslice_dummy_var_191 := CyzClrRTS(extension_5);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 917} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 918} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    Mem_T.INT4[Tmp_371] := pollIrql_5;
    call {:si_unique_call 919} sdv_KeAcquireSpinLock(0, Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    pollIrql_5 := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 920} vslice_dummy_var_192 := CyzDisableHw(extension_5);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 921} sdv_KeReleaseSpinLock(0, pollIrql_5);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 922} vslice_dummy_var_193 := CyzTryToDisableTimer(extension_5);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 923} sdv_ExFreePool(0);
    goto L203;

  L203:
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 924} vslice_dummy_var_195 := IoCancelIrp(0);
    goto L209;

  L209:
    call {:si_unique_call 925} vslice_dummy_var_194 := CyzGotoPowerState(DeviceObject_6, extension_5, 4);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_365 := strConst__li2bpl2;
    call {:si_unique_call 926} vslice_dummy_var_206 := CyzDbgPrintEx(9, Tmp_365);
    call {:si_unique_call 927} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 928} CyzIRPEpilogue(extension_5);
    call {:si_unique_call 929} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc vslice_dummy_var_211;
    Mem_T.INT4[Tmp_371] := vslice_dummy_var_211;
    call {:si_unique_call 930} sdv_316 := sdv_InterlockedDecrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    pendingDPCs := sdv_316;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} pendingDPCs != 0;
    Tmp_372 := strConst__li2bpl79;
    call {:si_unique_call 931} vslice_dummy_var_207 := CyzDbgPrintEx(4, Tmp_372);
    call {:si_unique_call 932} vslice_dummy_var_196 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L231;

  L231:
    Tmp_364 := strConst__li2bpl78;
    call {:si_unique_call 933} vslice_dummy_var_208 := CyzDbgPrintEx(4, Tmp_364);
    call {:si_unique_call 934} ExReleaseFastMutex(0);
    call {:si_unique_call 935} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc vslice_dummy_var_212;
    Mem_T.INT4[Tmp_371] := vslice_dummy_var_212;
    call {:si_unique_call 936} vslice_dummy_var_209 := sdv_InterlockedIncrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 937} Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[Tmp_371] := Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)];
    call {:si_unique_call 938} vslice_dummy_var_210 := sdv_InterlockedDecrement(Tmp_371);
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    Mem_T.INT4[OpenCount__CYZ_DEVICE_EXTENSION(extension_5)] := Mem_T.INT4[Tmp_371];
    call {:si_unique_call 939} MmUnlockPagableImageSection(0);
    Tmp_361 := 0;
    goto L1;

  anon81_Then:
    assume {:partition} pendingDPCs == 0;
    goto L231;

  anon80_Then:
    goto L209;

  anon79_Then:
    goto L203;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon62_Then:
    goto L164;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    goto L153;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    assume {:partition} flushCount == 0;
    goto L128;

  anon67_Then:
    assume {:partition} tx_4 > tx_3;
    waitAmount1 := tx_2 - tx_4;
    waitAmount2 := tx_3;
    goto L123;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzMarkOpen"} CyzMarkOpen(actual_Context_19: int) returns (Tmp_373: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMarkOpen"} CyzMarkOpen(actual_Context_19: int) returns (Tmp_373: int)
{
  var {:pointer} extension_6: int;
  var {:pointer} Context_19: int;
  var vslice_dummy_var_211: int;

  anon0:
    Context_19 := actual_Context_19;
    extension_6 := Context_19;
    call {:si_unique_call 941} vslice_dummy_var_211 := CyzReset(extension_6);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    Tmp_373 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_212: int;

  anon0:
    call {:si_unique_call 942} vslice_dummy_var_212 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzNullSynch"} CyzNullSynch(actual_Context_20: int) returns (Tmp_377: int);
  free ensures {:va_keep} Tmp_377 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzNullSynch"} CyzNullSynch(actual_Context_20: int) returns (Tmp_377: int)
{

  anon0:
    Tmp_377 := 0;
    return;
}



procedure {:origName "CyzGetCharTime"} CyzGetCharTime(actual_Extension_20: int) returns (SD3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetCharTime"} CyzGetCharTime(actual_Extension_20: int) returns (SD3: int)
{
  var {:scalar} dataSize: int;
  var {:scalar} Tmp_3: int;
  var {:scalar} charTime_1: int;
  var {:scalar} Tmp_379: int;
  var {:scalar} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:scalar} bitTime: int;
  var {:scalar} paritySize: int;
  var {:scalar} Tmp_383: int;
  var {:scalar} tmp: int;
  var {:scalar} stopSize: int;
  var {:pointer} Extension_20: int;

  anon0:
    call {:si_unique_call 943} Tmp_3 := __HAVOC_malloc(20);
    call {:si_unique_call 944} tmp := __HAVOC_malloc(20);
    Extension_20 := actual_Extension_20;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_383;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Tmp_383 == 1;
    dataSize := 5;
    goto L13;

  L13:
    paritySize := 1;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L16;

  L16:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_382;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_382 == 16;
    stopSize := 1;
    goto L20;

  L20:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc bitTime;
    charTime_1 := bitTime + (dataSize + paritySize + stopSize) * bitTime;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    SD3 := Tmp_3;
    return;

  anon13_Then:
    assume {:partition} Tmp_382 != 16;
    stopSize := 2;
    goto L20;

  anon12_Then:
    paritySize := 0;
    goto L16;

  anon11_Then:
    assume {:partition} Tmp_383 != 1;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_381;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Tmp_381 == 2;
    dataSize := 6;
    goto L13;

  anon14_Then:
    assume {:partition} Tmp_381 != 2;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_379;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_379 == 4;
    dataSize := 7;
    goto L13;

  anon15_Then:
    assume {:partition} Tmp_379 != 4;
    dataSize := 8;
    goto L13;
}



procedure {:origName "CyzDisableHw"} CyzDisableHw(actual_Context_21: int) returns (Tmp_384: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDisableHw"} CyzDisableHw(actual_Context_21: int) returns (Tmp_384: int)
{
  var {:pointer} extension_7: int;
  var {:pointer} Context_21: int;

  anon0:
    Context_21 := actual_Context_21;
    extension_7 := Context_21;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 945} CyzIssueCmd(extension_7, 2, 0, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 946} CyzIssueCmd(extension_7, 1, 0, 0);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_384 := 0;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzMarkClose"} CyzMarkClose(actual_Context_22: int) returns (Tmp_386: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMarkClose"} CyzMarkClose(actual_Context_22: int) returns (Tmp_386: int)
{
  var {:pointer} extension_8: int;
  var {:pointer} Context_22: int;

  anon0:
    Context_22 := actual_Context_22;
    extension_8 := Context_22;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    call {:si_unique_call 947} CyzIssueCmd(extension_8, 2, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    Tmp_386 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCleanup"} CyzCleanup(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_388: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCleanup"} CyzCleanup(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_388: int)
{
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:scalar} status_11: int;
  var {:pointer} extension_9: int;
  var {:pointer} Tmp_391: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;

  anon0:
    DeviceObject_7 := actual_DeviceObject_7;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 948} Tmp_389 := __HAVOC_malloc(72);
    call {:si_unique_call 949} Tmp_390 := __HAVOC_malloc(96);
    call {:si_unique_call 950} Tmp_391 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc extension_9;
    call {:si_unique_call 951} sdv_do_paged_code_check();
    call {:si_unique_call 952} status_11 := CyzIRPPrologue(Irp_7, extension_9);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_11 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_11 == -1073741738;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc status_11;
    goto L18;

  L18:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_11 != 259;
    Tmp_391 := strConst__li2bpl2;
    call {:si_unique_call 953} vslice_dummy_var_213 := CyzDbgPrintEx(9, Tmp_391);
    call {:si_unique_call 954} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 955} CyzIRPEpilogue(extension_9);
    goto L21;

  L21:
    Tmp_388 := status_11;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} status_11 == 259;
    goto L21;

  anon12_Then:
    assume {:partition} status_11 != -1073741738;
    goto L18;

  anon11_Then:
    assume {:partition} status_11 == 0;
    Tmp_390 := strConst__li2bpl0;
    call {:si_unique_call 956} vslice_dummy_var_214 := CyzDbgPrintEx(9, Tmp_390);
    call {:si_unique_call 957} CyzKillPendingIrps(DeviceObject_7);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Tmp_389 := strConst__li2bpl2;
    call {:si_unique_call 958} vslice_dummy_var_215 := CyzDbgPrintEx(9, Tmp_389);
    call {:si_unique_call 959} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 960} CyzIRPEpilogue(extension_9);
    Tmp_388 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzGetPortInfo"} CyzGetPortInfo(actual_PDevObj_10: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_393: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_393 == -1073741488 || Tmp_393 == -1073741670 || Tmp_393 == 0 || Tmp_393 == -1073741811 || Tmp_393 == -1073741808 || Tmp_393 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetPortInfo"} CyzGetPortInfo(actual_PDevObj_10: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_393: int)
{
  var {:scalar} i_1: int;
  var {:pointer} pPartialResourceList: int;
  var {:pointer} pFullTrResourceDesc: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} count: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} Tmp_399: int;
  var {:pointer} keyHandle: int;
  var {:scalar} Tmp_400: int;
  var {:pointer} Tmp_401: int;
  var {:scalar} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} pPartialTrResourceDesc: int;
  var {:scalar} Tmp_404: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} pDevExt_10: int;
  var {:scalar} Tmp_406: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:scalar} Tmp_411: int;
  var {:pointer} Tmp_412: int;
  var {:dopa} {:scalar} firmwareVersion: int;
  var {:pointer} Tmp_413: int;
  var {:pointer} FwVersionBuffer: int;
  var {:scalar} Tmp_414: int;
  var {:scalar} foundIt: int;
  var {:pointer} Tmp_415: int;
  var {:scalar} Tmp_416: int;
  var {:scalar} Tmp_417: int;
  var {:pointer} pFullResourceDesc: int;
  var {:pointer} Tmp_418: int;
  var {:scalar} Tmp_419: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} Tmp_421: int;
  var {:scalar} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} FwVersion: int;
  var {:pointer} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:pointer} pPartialTrResourceList: int;
  var {:scalar} Tmp_430: int;
  var {:scalar} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} pPartialResourceDesc: int;
  var {:pointer} Tmp_433: int;
  var {:pointer} PDevObj_10: int;
  var {:pointer} PResList: int;
  var {:pointer} PTrResList: int;
  var {:pointer} PConfig_1: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;

  anon0:
    call {:si_unique_call 961} Tmp_399 := __HAVOC_malloc(20);
    call {:si_unique_call 962} firmwareVersion := __HAVOC_malloc(4);
    call {:si_unique_call 963} Tmp_414 := __HAVOC_malloc(20);
    call {:si_unique_call 964} Tmp_416 := __HAVOC_malloc(20);
    call {:si_unique_call 965} Tmp_419 := __HAVOC_malloc(20);
    call {:si_unique_call 966} Tmp_421 := __HAVOC_malloc(20);
    call {:si_unique_call 967} FwVersion := __HAVOC_malloc(12);
    call {:si_unique_call 968} Tmp_430 := __HAVOC_malloc(20);
    PDevObj_10 := actual_PDevObj_10;
    PResList := actual_PResList;
    PTrResList := actual_PTrResList;
    PConfig_1 := actual_PConfig_1;
    call {:si_unique_call 969} Tmp_394 := __HAVOC_malloc(92);
    call {:si_unique_call 970} Tmp_395 := __HAVOC_malloc(64);
    call {:si_unique_call 971} Tmp_396 := __HAVOC_malloc(104);
    call {:si_unique_call 972} Tmp_398 := __HAVOC_malloc(264);
    call {:si_unique_call 973} Tmp_401 := __HAVOC_malloc(104);
    call {:si_unique_call 974} Tmp_403 := __HAVOC_malloc(96);
    call {:si_unique_call 975} Tmp_405 := __HAVOC_malloc(208);
    call {:si_unique_call 976} Tmp_408 := __HAVOC_malloc(232);
    call {:si_unique_call 977} Tmp_409 := __HAVOC_malloc(108);
    call {:si_unique_call 978} Tmp_410 := __HAVOC_malloc(56);
    call {:si_unique_call 979} Tmp_412 := __HAVOC_malloc(92);
    call {:si_unique_call 980} Tmp_413 := __HAVOC_malloc(112);
    call {:si_unique_call 981} FwVersionBuffer := __HAVOC_malloc(40);
    call {:si_unique_call 982} Tmp_415 := __HAVOC_malloc(112);
    call {:si_unique_call 983} Tmp_418 := __HAVOC_malloc(264);
    call {:si_unique_call 984} Tmp_420 := __HAVOC_malloc(96);
    call {:si_unique_call 985} Tmp_423 := __HAVOC_malloc(84);
    call {:si_unique_call 986} Tmp_424 := __HAVOC_malloc(100);
    call {:si_unique_call 987} Tmp_425 := __HAVOC_malloc(40);
    call {:si_unique_call 988} Tmp_426 := __HAVOC_malloc(80);
    call {:si_unique_call 989} Tmp_427 := __HAVOC_malloc(120);
    call {:si_unique_call 990} Tmp_428 := __HAVOC_malloc(96);
    call {:si_unique_call 991} Tmp_429 := __HAVOC_malloc(152);
    call {:si_unique_call 992} Tmp_433 := __HAVOC_malloc(100);
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    havoc pDevExt_10;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    status_12 := -1073741822;
    pFullResourceDesc := 0;
    pFullTrResourceDesc := 0;
    call {:si_unique_call 993} sdv_do_paged_code_check();
    Tmp_433 := strConst__li2bpl80;
    call {:si_unique_call 994} vslice_dummy_var_218 := CyzDbgPrintEx(11, Tmp_433);
    Tmp_428 := strConst__li2bpl81;
    call {:si_unique_call 995} vslice_dummy_var_219 := CyzDbgPrintEx(12, Tmp_428);
    Tmp_409 := strConst__li2bpl82;
    call {:si_unique_call 996} vslice_dummy_var_220 := CyzDbgPrintEx(12, Tmp_409);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} PResList != 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} PTrResList != 0;
    assume {:nonnull} PResList != 0;
    assume PResList > 0;
    havoc Tmp_398;
    pFullResourceDesc := Tmp_398;
    assume {:nonnull} PTrResList != 0;
    assume PTrResList > 0;
    havoc Tmp_418;
    pFullTrResourceDesc := Tmp_418;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pFullResourceDesc != 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    pPartialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullResourceDesc);
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc pPartialResourceDesc;
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    i_1 := 0;
    goto L53;

  L53:
    call {:si_unique_call 997} i_1 := CyzGetPortInfo_loop_L53(i_1, count, pPartialResourceDesc, PConfig_1);
    goto L53_last;

  L53_last:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L62;

  L62:
    i_1 := i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon48_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon46_Then:
    assume {:partition} i_1 >= count;
    goto L46;

  L46:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} pFullTrResourceDesc != 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    pPartialTrResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullTrResourceDesc);
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc pPartialTrResourceDesc;
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    i_1 := 0;
    goto L73;

  L73:
    call {:si_unique_call 998} i_1 := CyzGetPortInfo_loop_L73(i_1, count, pPartialTrResourceDesc, PConfig_1);
    goto L73_last;

  L73_last:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L81;

  L81:
    i_1 := i_1 + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon50_Then:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L81;

  anon51_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L81;

  anon49_Then:
    assume {:partition} i_1 >= count;
    goto L66;

  L66:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] := 0;
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    Mem_T.INT4[firmwareVersion] := 0;
    call {:si_unique_call 999} status_12 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_12 >= 0;
    Tmp_425 := strConst__li2bpl84;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 1000} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_425, 20, PortIndex__CONFIG_DATA(PConfig_1), 4);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_12 >= 0;
    goto L99;

  L99:
    Tmp_395 := strConst__li2bpl85;
    call {:si_unique_call 1001} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_395, 32, firmwareVersion, 4);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_12 >= 0;
    goto L105;

  L105:
    Tmp_410 := strConst__li2bpl86;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 1002} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_410, 28, WriteComplete__CONFIG_DATA(PConfig_1), 4);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_12 >= 0;
    goto L111;

  L111:
    call {:si_unique_call 1003} vslice_dummy_var_216 := ZwClose(0);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 803 > Mem_T.INT4[firmwareVersion];
    call {:si_unique_call 1004} RtlInitUnicodeString(FwVersion, 0);
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    call {:si_unique_call 1005} vslice_dummy_var_221 := RtlIntegerToUnicodeString(803, 16, 0);
    Tmp_412 := strConst__li2bpl87;
    call {:si_unique_call 1006} vslice_dummy_var_222 := CyzDbgPrintEx(14, Tmp_412);
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_213;
    havoc vslice_dummy_var_214;
    havoc vslice_dummy_var_215;
    call {:si_unique_call 1007} CyzLogError(vslice_dummy_var_213, 0, vslice_dummy_var_214, Tmp_416, 0, 0, 0, 0, status_12, -1073475530, Tmp_411, vslice_dummy_var_215, 0, 0);
    status_12 := -1073741488;
    goto L140;

  L140:
    Tmp_393 := status_12;
    goto L1;

  L1:
    return;

  anon58_Then:
    assume {:partition} Mem_T.INT4[firmwareVersion] >= 803;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] >= 64;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_422;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_237;
    havoc vslice_dummy_var_238;
    havoc vslice_dummy_var_239;
    call {:si_unique_call 1008} CyzLogError(vslice_dummy_var_237, 0, vslice_dummy_var_238, Tmp_419, 0, 0, 0, Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)], 0, -1073475563, Tmp_422, vslice_dummy_var_239, 0, 0);
    Tmp_424 := strConst__li2bpl88;
    call {:si_unique_call 1009} vslice_dummy_var_223 := CyzDbgPrintEx(14, Tmp_424);
    status_12 := -1073741670;
    goto L140;

  anon59_Then:
    assume {:partition} 64 > Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)];
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_431;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_397 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_240;
    havoc vslice_dummy_var_241;
    havoc vslice_dummy_var_242;
    call {:si_unique_call 1010} CyzLogError(vslice_dummy_var_240, 0, vslice_dummy_var_241, Tmp_414, 0, 0, 0, Tmp_397, 0, -1073475562, Tmp_431, vslice_dummy_var_242, 0, 0);
    Tmp_423 := strConst__li2bpl89;
    call {:si_unique_call 1011} vslice_dummy_var_224 := CyzDbgPrintEx(14, Tmp_423);
    status_12 := -1073741670;
    goto L140;

  anon61_Then:
    call {:si_unique_call 1012} vslice_dummy_var_217 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant232, 0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} foundIt == 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_432;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_406 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_243;
    havoc vslice_dummy_var_244;
    havoc vslice_dummy_var_245;
    call {:si_unique_call 1013} CyzLogError(vslice_dummy_var_243, 0, vslice_dummy_var_244, Tmp_421, 0, 0, 0, Tmp_406, 0, -1073475561, Tmp_432, vslice_dummy_var_245, 0, 0);
    Tmp_408 := strConst__li2bpl90;
    call {:si_unique_call 1014} vslice_dummy_var_232 := CyzDbgPrintEx(14, Tmp_408);
    status_12 := -1073741670;
    goto L140;

  anon62_Then:
    assume {:partition} foundIt != 0;
    goto L152;

  L152:
    status_12 := 0;
    Tmp_415 := strConst__li2bpl99;
    call {:si_unique_call 1015} vslice_dummy_var_225 := CyzDbgPrintEx(4, Tmp_415);
    Tmp_401 := strConst__li2bpl91;
    call {:si_unique_call 1016} vslice_dummy_var_226 := CyzDbgPrintEx(4, Tmp_401);
    Tmp_426 := strConst__li2bpl92;
    call {:si_unique_call 1017} vslice_dummy_var_227 := CyzDbgPrintEx(4, Tmp_426);
    Tmp_403 := strConst__li2bpl93;
    call {:si_unique_call 1018} vslice_dummy_var_228 := CyzDbgPrintEx(4, Tmp_403);
    Tmp_427 := strConst__li2bpl94;
    call {:si_unique_call 1019} vslice_dummy_var_229 := CyzDbgPrintEx(4, Tmp_427);
    Tmp_413 := strConst__li2bpl95;
    call {:si_unique_call 1020} vslice_dummy_var_230 := CyzDbgPrintEx(4, Tmp_413);
    Tmp_394 := strConst__li2bpl96;
    call {:si_unique_call 1021} vslice_dummy_var_231 := CyzDbgPrintEx(4, Tmp_394);
    goto L140;

  anon60_Then:
    goto L152;

  anon57_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_400;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_417 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_246;
    havoc vslice_dummy_var_247;
    havoc vslice_dummy_var_248;
    call {:si_unique_call 1022} CyzLogError(vslice_dummy_var_246, 0, vslice_dummy_var_247, Tmp_399, 0, 0, 0, Tmp_417, 0, -1073475567, Tmp_400, vslice_dummy_var_248, 0, 0);
    Tmp_420 := strConst__li2bpl97;
    call {:si_unique_call 1023} vslice_dummy_var_233 := CyzDbgPrintEx(14, Tmp_420);
    status_12 := -1073741670;
    goto L140;

  anon56_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_402;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_404 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} Tmp_430 != 0;
    assume Tmp_430 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_249;
    havoc vslice_dummy_var_250;
    havoc vslice_dummy_var_251;
    call {:si_unique_call 1024} CyzLogError(vslice_dummy_var_249, 0, vslice_dummy_var_250, Tmp_430, 0, 0, 0, Tmp_404, 0, -1073475568, Tmp_402, vslice_dummy_var_251, 0, 0);
    Tmp_396 := strConst__li2bpl98;
    call {:si_unique_call 1025} vslice_dummy_var_234 := CyzDbgPrintEx(14, Tmp_396);
    status_12 := -1073741670;
    goto L140;

  anon55_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[WriteComplete__CONFIG_DATA(PConfig_1)] := 0;
    goto L111;

  anon54_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    Mem_T.INT4[firmwareVersion] := 0;
    Tmp_405 := strConst__li2bpl100;
    call {:si_unique_call 1026} vslice_dummy_var_235 := CyzDbgPrintEx(14, Tmp_405);
    goto L105;

  anon53_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] := -1;
    goto L99;

  anon52_Then:
    assume {:partition} 0 > status_12;
    Tmp_429 := strConst__li2bpl83;
    call {:si_unique_call 1027} vslice_dummy_var_236 := CyzDbgPrintEx(14, Tmp_429);
    goto L140;

  anon45_Then:
    assume {:partition} pFullTrResourceDesc == 0;
    goto L66;

  anon63_Then:
    assume {:partition} pFullResourceDesc == 0;
    goto L46;

  anon44_Then:
    assume {:partition} PTrResList == 0;
    goto L41;

  L41:
    Tmp_393 := -1073741670;
    goto L1;

  anon43_Then:
    assume {:partition} PResList == 0;
    goto L41;
}



procedure {:origName "CyzSyncCompletion"} CyzSyncCompletion(actual_DeviceObject_8: int, actual_Irp_8: int, actual_CyzSyncEvent: int) returns (Tmp_434: int);
  free ensures {:va_keep} Tmp_434 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSyncCompletion"} CyzSyncCompletion(actual_DeviceObject_8: int, actual_Irp_8: int, actual_CyzSyncEvent: int) returns (Tmp_434: int)
{
  var {:pointer} CyzSyncEvent_1: int;
  var {:pointer} CyzSyncEvent: int;
  var vslice_dummy_var_237: int;

  anon0:
    CyzSyncEvent := actual_CyzSyncEvent;
    CyzSyncEvent_1 := CyzSyncEvent;
    call {:si_unique_call 1028} vslice_dummy_var_237 := KeSetEvent(CyzSyncEvent_1, 0, 0);
    Tmp_434 := -1073741802;
    return;
}



procedure {:origName "CyzFinishStartDevice"} CyzFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_436: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFinishStartDevice"} CyzFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_436: int)
{
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:dopa} {:scalar} powerPolicy: int;
  var {:pointer} pDevExt_11: int;
  var {:pointer} pnpKey: int;
  var {:pointer} pConfig: int;
  var {:pointer} sdv_377: int;
  var {:pointer} sdv_379: int;
  var {:pointer} Tmp_440: int;
  var {:pointer} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:scalar} Tmp_444: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} status_13: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} countSoFar: int;
  var {:scalar} pollIrql_6: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} PDevObj_11: int;
  var {:pointer} PResList_1: int;
  var {:pointer} PTrResList_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;

  anon0:
    call {:si_unique_call 1029} powerPolicy := __HAVOC_malloc(4);
    call {:si_unique_call 1030} Tmp_444 := __HAVOC_malloc(20);
    call {:si_unique_call 1031} Tmp_446 := __HAVOC_malloc(20);
    PDevObj_11 := actual_PDevObj_11;
    PResList_1 := actual_PResList_1;
    PTrResList_1 := actual_PTrResList_1;
    call {:si_unique_call 1032} Tmp_437 := __HAVOC_malloc(168);
    call {:si_unique_call 1033} Tmp_438 := __HAVOC_malloc(272);
    call {:si_unique_call 1034} Tmp_439 := __HAVOC_malloc(120);
    call {:si_unique_call 1035} Tmp_440 := __HAVOC_malloc(144);
    call {:si_unique_call 1036} Tmp_441 := __HAVOC_malloc(100);
    call {:si_unique_call 1037} Tmp_447 := __HAVOC_malloc(104);
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc pDevExt_11;
    call {:si_unique_call 1038} sdv_do_paged_code_check();
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 2) != 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 1) != 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1039} CyzSetDeviceFlags(pDevExt_11, Flags__CYZ_DEVICE_EXTENSION(pDevExt_11), 2, 0);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L28;

  L28:
    call {:si_unique_call 1040} sdv_379 := ExAllocatePoolWithTag(1, 80, -797279933);
    pConfig := sdv_379;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1041} sdv_RtlZeroMemory(0, 80);
    call {:si_unique_call 1042} status_13 := CyzGetPortInfo(PDevObj_11, PResList_1, PTrResList_1, pConfig);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} status_13 < 0;
    goto L53;

  L53:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  L59:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    Tmp_445 := 1;
    goto L70;

  L70:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  L79:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  L85:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_252;
    call {:si_unique_call 1043} boogieTmp := CyzReportMaxBaudRate(vslice_dummy_var_252);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1044} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    call {:si_unique_call 1045} sdv_377 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_377 != 0;
    assume sdv_377 > 0;
    countSoFar := SerialCount__CONFIGURATION_INFORMATION(sdv_377);
    assume {:nonnull} countSoFar != 0;
    assume countSoFar > 0;
    Mem_T.INT4[countSoFar] := Mem_T.INT4[countSoFar] + 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1046} vslice_dummy_var_244 := IoWMIRegistrationControl(0, 1);
    goto L113;

  L113:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    call {:si_unique_call 1047} CyzUnstallIrps(pDevExt_11);
    goto L114;

  L114:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1048} CyzSetDeviceFlags(pDevExt_11, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_11), -1, 0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1049} CyzSetDeviceFlags(pDevExt_11, Flags__CYZ_DEVICE_EXTENSION(pDevExt_11), 1, 1);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} yogi_error != 1;
    goto L124;

  L124:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1050} sdv_ExFreePool(0);
    goto L125;

  L125:
    Tmp_439 := strConst__li2bpl102;
    call {:si_unique_call 1051} vslice_dummy_var_243 := CyzDbgPrintEx(11, Tmp_439);
    Tmp_436 := status_13;
    goto LM2;

  LM2:
    return;

  anon95_Then:
    assume {:partition} pConfig == 0;
    goto L125;

  anon123_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon122_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon94_Then:
    goto L114;

  anon93_Then:
    goto L113;

  anon109_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  anon110_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  anon92_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L85;

  anon105_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon106_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon107_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon108_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon121_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L79;

  anon91_Then:
    Tmp_445 := 0;
    goto L70;

  anon102_Then:
    goto L59;

  anon103_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  anon104_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  anon120_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto L59;

  anon90_Then:
    assume {:partition} 0 > status_13;
    Tmp_447 := strConst__li2bpl101;
    call {:si_unique_call 1052} vslice_dummy_var_245 := CyzDbgPrintEx(4, Tmp_447);
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 1053} CyzKillPendingIrps(PDevObj_11);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1054} CyzSetDeviceFlags(pDevExt_11, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_11), 1, 1);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1055} CyzSetDeviceFlags(pDevExt_11, Flags__CYZ_DEVICE_EXTENSION(pDevExt_11), 1, 0);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto L124;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon125_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon124_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon96_Then:
    goto L124;

  anon87_Then:
    assume {:partition} 0 <= status_13;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_253;
    call {:si_unique_call 1056} status_13 := CyzGotoPowerState(vslice_dummy_var_253, pDevExt_11, 1);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_13 < 0;
    goto L53;

  anon89_Then:
    assume {:partition} 0 <= status_13;
    goto L44;

  L44:
    call {:si_unique_call 1057} status_13 := CyzFindInitController(PDevObj_11, pConfig);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1058} CyzAddToAllDevs(AllDevObjs__CYZ_DEVICE_EXTENSION(pDevExt_11));
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1059} Tmp_443 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    Mem_T.INT4[Tmp_443] := pollIrql_6;
    call {:si_unique_call 1060} sdv_KeAcquireSpinLock(0, Tmp_443);
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    pollIrql_6 := Mem_T.INT4[Tmp_443];
    call {:si_unique_call 1061} vslice_dummy_var_238 := CyzReset(pDevExt_11);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1062} vslice_dummy_var_239 := CyzMarkClose(pDevExt_11);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1063} vslice_dummy_var_240 := CyzClrRTS(pDevExt_11);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1064} vslice_dummy_var_241 := CyzClrDTR(pDevExt_11);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1065} sdv_KeReleaseSpinLock(0, pollIrql_6);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_437 := strConst__li2bpl103;
    call {:si_unique_call 1066} vslice_dummy_var_242 := CyzDbgPrintEx(12, Tmp_437);
    goto L53;

  anon98_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    havoc vslice_dummy_var_254;
    call {:si_unique_call 1067} status_13 := CyzDoExternalNaming(pDevExt_11, vslice_dummy_var_254);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} status_13 < 0;
    Tmp_440 := strConst__li2bpl104;
    call {:si_unique_call 1068} vslice_dummy_var_246 := CyzDbgPrintEx(14, Tmp_440);
    status_13 := 0;
    goto L53;

  anon99_Then:
    assume {:partition} 0 <= status_13;
    goto L53;

  anon119_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon97_Then:
    assume {:partition} 0 > status_13;
    goto L53;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon88_Then:
    goto L44;

  anon112_Then:
    assume {:partition} pConfig == 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_255;
    call {:si_unique_call 1069} CyzLogError(vslice_dummy_var_255, 0, Tmp_444, Tmp_446, 0, 0, 0, 31, 0, -1073475576, 0, 0, 0, 0);
    Tmp_438 := strConst__li2bpl105;
    call {:si_unique_call 1070} vslice_dummy_var_247 := CyzDbgPrintEx(14, Tmp_438);
    status_13 := -1073741670;
    goto L53;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 1) == 0;
    goto L18;

  L18:
    call {:si_unique_call 1071} status_13 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} status_13 >= 0;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    Mem_T.INT4[powerPolicy] := 0;
    Tmp_441 := strConst__li2bpl106;
    call {:si_unique_call 1072} vslice_dummy_var_248 := CyzGetRegistryKeyValue(pnpKey, Tmp_441, 50, powerPolicy, 4);
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Mem_T.INT4[powerPolicy] != 0;
    Tmp_448 := 0;
    goto L222;

  L222:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    call {:si_unique_call 1073} vslice_dummy_var_249 := ZwClose(0);
    goto L28;

  anon101_Then:
    assume {:partition} Mem_T.INT4[powerPolicy] == 0;
    Tmp_448 := 1;
    goto L222;

  anon100_Then:
    assume {:partition} 0 > status_13;
    goto L28;

  anon85_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_11)], 2) == 0;
    goto L18;
}



procedure {:origName "CyzUndoExternalNaming"} CyzUndoExternalNaming(actual_Extension_21: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUndoExternalNaming"} CyzUndoExternalNaming(actual_Extension_21: int)
{
  var {:pointer} Tmp_449: int;
  var {:pointer} keyHandle_1: int;
  var {:pointer} pRegName: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} symLinkName: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_458: int;
  var {:scalar} Tmp_459: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} Extension_21: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;

  anon0:
    call {:si_unique_call 1074} vslice_dummy_var_250 := __HAVOC_malloc(4);
    call {:si_unique_call 1075} pRegName := __HAVOC_malloc(4);
    call {:si_unique_call 1076} symLinkName := __HAVOC_malloc(12);
    call {:si_unique_call 1077} Tmp_458 := __HAVOC_malloc(20);
    Extension_21 := actual_Extension_21;
    call {:si_unique_call 1078} Tmp_449 := __HAVOC_malloc(76);
    call {:si_unique_call 1079} Tmp_455 := __HAVOC_malloc(132);
    call {:si_unique_call 1080} vslice_dummy_var_253 := __HAVOC_malloc(44);
    call {:si_unique_call 1081} Tmp_460 := __HAVOC_malloc(224);
    call {:si_unique_call 1082} sdv_do_paged_code_check();
    Tmp_460 := strConst__li2bpl107;
    call {:si_unique_call 1083} vslice_dummy_var_254 := CyzDbgPrintEx(6, Tmp_460);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(Extension_21)] == 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 1084} status_14 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1085} sdv_ExFreePool(0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L17;

  L17:
    call {:si_unique_call 1086} status_14 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_14 == 0;
    call {:si_unique_call 1087} RtlInitUnicodeString(symLinkName, 0);
    call {:si_unique_call 1088} status_14 := CyzReadSymName(Extension_21, keyHandle_1, symLinkName, pRegName);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_14 != 0;
    goto L43;

  L43:
    call {:si_unique_call 1089} vslice_dummy_var_251 := ZwClose(0);
    goto L14;

  L14:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1090} sdv_ExFreePool(0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1091} status_14 := RtlDeleteRegistryValue(4, 0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_14 < 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_451;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_456;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    havoc vslice_dummy_var_257;
    havoc vslice_dummy_var_258;
    havoc vslice_dummy_var_259;
    havoc vslice_dummy_var_260;
    call {:si_unique_call 1092} CyzLogError(vslice_dummy_var_257, vslice_dummy_var_258, vslice_dummy_var_259, Tmp_458, 0, 0, 0, Tmp_459, status_14, 266246, Tmp_451, vslice_dummy_var_260, 0, 0);
    Tmp_455 := strConst__li2bpl110;
    call {:si_unique_call 1093} vslice_dummy_var_255 := CyzDbgPrintEx(14, Tmp_455);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} 0 <= status_14;
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L1;

  anon23_Then:
    goto L55;

  anon27_Then:
    assume {:partition} status_14 == 0;
    Tmp_449 := strConst__li2bpl108;
    call {:si_unique_call 1094} vslice_dummy_var_256 := CyzDbgPrintEx(4, Tmp_449);
    call {:si_unique_call 1095} vslice_dummy_var_252 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 1096} sdv_ExFreePool(0);
    call {:si_unique_call 1097} sdv_ExFreePool(0);
    goto L43;

  anon26_Then:
    assume {:partition} status_14 != 0;
    goto L14;

  anon25_Then:
    goto L17;

  anon24_Then:
    goto L14;

  anon22_Then:
    goto L14;

  anon21_Then:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(Extension_21)] != 0;
    goto L1;
}



procedure {:origName "CyzReportMaxBaudRate"} CyzReportMaxBaudRate(actual_Bauds: int) returns (Tmp_462: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_462 == 131072 || Tmp_462 == 115200 || Tmp_462 == 57344 || Tmp_462 == 57600 || Tmp_462 == 38400 || Tmp_462 == 19200 || Tmp_462 == 14400 || Tmp_462 == 9600 || Tmp_462 == 7200 || Tmp_462 == 4800 || Tmp_462 == 2400 || Tmp_462 == 1800 || Tmp_462 == 1200 || Tmp_462 == 600 || Tmp_462 == 300 || Tmp_462 == 150 || Tmp_462 == 135 || Tmp_462 == 110 || Tmp_462 == 75 || Tmp_462 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReportMaxBaudRate"} CyzReportMaxBaudRate(actual_Bauds: int) returns (Tmp_462: int)
{
  var {:scalar} Bauds: int;

  anon0:
    Bauds := actual_Bauds;
    call {:si_unique_call 1098} sdv_do_paged_code_check();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Bauds, 65536) != 0;
    Tmp_462 := 131072;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} BAND(Bauds, 65536) == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(Bauds, 131072) != 0;
    Tmp_462 := 115200;
    goto L1;

  anon40_Then:
    assume {:partition} BAND(Bauds, 131072) == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Bauds, 32768) != 0;
    Tmp_462 := 57344;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(Bauds, 32768) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Bauds, 262144) != 0;
    Tmp_462 := 57600;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(Bauds, 262144) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(Bauds, 16384) != 0;
    Tmp_462 := 38400;
    goto L1;

  anon43_Then:
    assume {:partition} BAND(Bauds, 16384) == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Bauds, 8192) != 0;
    Tmp_462 := 19200;
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Bauds, 8192) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Bauds, 4096) != 0;
    Tmp_462 := 14400;
    goto L1;

  anon45_Then:
    assume {:partition} BAND(Bauds, 4096) == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Bauds, 2048) != 0;
    Tmp_462 := 9600;
    goto L1;

  anon46_Then:
    assume {:partition} BAND(Bauds, 2048) == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Bauds, 1024) != 0;
    Tmp_462 := 7200;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Bauds, 1024) == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Bauds, 512) != 0;
    Tmp_462 := 4800;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Bauds, 512) == 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Bauds, 256) != 0;
    Tmp_462 := 2400;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(Bauds, 256) == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Bauds, 128) != 0;
    Tmp_462 := 1800;
    goto L1;

  anon50_Then:
    assume {:partition} BAND(Bauds, 128) == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Bauds, 64) != 0;
    Tmp_462 := 1200;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(Bauds, 64) == 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Bauds, 32) != 0;
    Tmp_462 := 600;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Bauds, 32) == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Bauds, 16) != 0;
    Tmp_462 := 300;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(Bauds, 16) == 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(Bauds, 8) != 0;
    Tmp_462 := 150;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(Bauds, 8) == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(Bauds, 4) != 0;
    Tmp_462 := 135;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(Bauds, 4) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(Bauds, 2) != 0;
    Tmp_462 := 110;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(Bauds, 2) == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Bauds, 1) != 0;
    Tmp_462 := 75;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(Bauds, 1) == 0;
    Tmp_462 := 0;
    goto L1;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_257: int;

  anon0:
    call {:si_unique_call 1099} vslice_dummy_var_257 := __HAVOC_malloc(4);
    assume currentInstance_sdv_static_local_variable_117 == 0;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyzPnpDispatch"} CyzPnpDispatch(actual_PDevObj_12: int, actual_PIrp_2: int) returns (Tmp_466: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPnpDispatch"} CyzPnpDispatch(actual_PDevObj_12: int, actual_PIrp_2: int) returns (Tmp_466: int)
{
  var {:pointer} sdv_399: int;
  var {:scalar} pIdBuf: int;
  var {:pointer} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:scalar} sdv_404: int;
  var {:scalar} gotMemory: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} pResList: int;
  var {:dopa} {:scalar} portIndex: int;
  var {:pointer} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:pointer} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} pDevExt_12: int;
  var {:scalar} Tmp_478: int;
  var {:pointer} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:pointer} WideString: int;
  var {:pointer} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:pointer} Tmp_484: int;
  var {:scalar} cap: int;
  var {:pointer} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:scalar} pnpIdStrLen: int;
  var {:pointer} Tmp_487: int;
  var {:scalar} pendingIRPs: int;
  var {:pointer} pQueryCapsEvent: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} pIrpStack_2: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} pLowerDevObj_2: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} sdv_437: int;
  var {:pointer} sdv_440: int;
  var {:pointer} pResDesc: int;
  var {:scalar} allocLen: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} sdv_444: int;
  var {:pointer} Tmp_497: int;
  var {:scalar} listNum: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:scalar} pendingIRPs_1: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} pReqList: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:scalar} pendingIRPs_2: int;
  var {:pointer} Tmp_512: int;
  var {:pointer} Tmp_513: int;
  var {:pointer} Tmp_514: int;
  var {:pointer} Tmp_515: int;
  var {:pointer} Tmp_516: int;
  var {:pointer} Tmp_517: int;
  var {:pointer} Tmp_518: int;
  var {:scalar} j: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} Tmp_520: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:scalar} Tmp_523: int;
  var {:pointer} Tmp_525: int;
  var {:scalar} sdv_465: int;
  var {:pointer} pnpKey_1: int;
  var {:pointer} Tmp_526: int;
  var {:pointer} Tmp_527: int;
  var {:pointer} Tmp_528: int;
  var {:pointer} pResFiltEvent: int;
  var {:pointer} Tmp_529: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:pointer} Tmp_534: int;
  var {:pointer} Tmp_535: int;
  var {:scalar} curStrLen: int;
  var {:pointer} curStr: int;
  var {:scalar} gotRuntime: int;
  var {:scalar} sdv_484: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} pDevCaps: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} status_15: int;
  var {:scalar} sdv_490: int;
  var {:scalar} sdv_491: int;
  var {:pointer} Tmp_541: int;
  var {:pointer} Tmp_542: int;
  var {:scalar} Tmp_543: int;
  var {:pointer} PDevObj_12: int;
  var {:pointer} PIrp_2: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;

  anon0:
    call {:si_unique_call 1100} pIdBuf := __HAVOC_malloc(12);
    call {:si_unique_call 1101} portIndex := __HAVOC_malloc(4);
    PDevObj_12 := actual_PDevObj_12;
    PIrp_2 := actual_PIrp_2;
    call {:si_unique_call 1102} Tmp_467 := __HAVOC_malloc(60);
    call {:si_unique_call 1103} Tmp_469 := __HAVOC_malloc(176);
    call {:si_unique_call 1104} Tmp_470 := __HAVOC_malloc(72);
    call {:si_unique_call 1105} Tmp_471 := __HAVOC_malloc(28);
    call {:si_unique_call 1106} Tmp_472 := __HAVOC_malloc(72);
    call {:si_unique_call 1107} Tmp_473 := __HAVOC_malloc(60);
    call {:si_unique_call 1108} Tmp_474 := __HAVOC_malloc(72);
    call {:si_unique_call 1109} Tmp_475 := __HAVOC_malloc(72);
    call {:si_unique_call 1110} Tmp_476 := __HAVOC_malloc(144);
    call {:si_unique_call 1111} Tmp_477 := __HAVOC_malloc(72);
    call {:si_unique_call 1112} Tmp_479 := __HAVOC_malloc(116);
    call {:si_unique_call 1113} WideString := __HAVOC_malloc(800);
    call {:si_unique_call 1114} Tmp_481 := __HAVOC_malloc(132);
    call {:si_unique_call 1115} Tmp_482 := __HAVOC_malloc(100);
    call {:si_unique_call 1116} Tmp_483 := __HAVOC_malloc(112);
    call {:si_unique_call 1117} Tmp_484 := __HAVOC_malloc(40);
    call {:si_unique_call 1118} Tmp_485 := __HAVOC_malloc(92);
    call {:si_unique_call 1119} Tmp_487 := __HAVOC_malloc(116);
    call {:si_unique_call 1120} Tmp_488 := __HAVOC_malloc(136);
    call {:si_unique_call 1121} Tmp_489 := __HAVOC_malloc(120);
    call {:si_unique_call 1122} Tmp_491 := __HAVOC_malloc(128);
    call {:si_unique_call 1123} Tmp_492 := __HAVOC_malloc(72);
    call {:si_unique_call 1124} Tmp_493 := __HAVOC_malloc(176);
    call {:si_unique_call 1125} Tmp_495 := __HAVOC_malloc(72);
    call {:si_unique_call 1126} vslice_dummy_var_268 := __HAVOC_malloc(20);
    call {:si_unique_call 1127} Tmp_497 := __HAVOC_malloc(60);
    call {:si_unique_call 1128} Tmp_499 := __HAVOC_malloc(60);
    call {:si_unique_call 1129} Tmp_501 := __HAVOC_malloc(120);
    call {:si_unique_call 1130} vslice_dummy_var_269 := __HAVOC_malloc(64);
    call {:si_unique_call 1131} Tmp_503 := __HAVOC_malloc(128);
    call {:si_unique_call 1132} Tmp_504 := __HAVOC_malloc(28);
    call {:si_unique_call 1133} Tmp_505 := __HAVOC_malloc(28);
    call {:si_unique_call 1134} Tmp_506 := __HAVOC_malloc(112);
    call {:si_unique_call 1135} Tmp_507 := __HAVOC_malloc(88);
    call {:si_unique_call 1136} Tmp_508 := __HAVOC_malloc(120);
    call {:si_unique_call 1137} Tmp_510 := __HAVOC_malloc(132);
    call {:si_unique_call 1138} Tmp_511 := __HAVOC_malloc(392);
    call {:si_unique_call 1139} Tmp_512 := __HAVOC_malloc(152);
    call {:si_unique_call 1140} Tmp_513 := __HAVOC_malloc(72);
    call {:si_unique_call 1141} Tmp_514 := __HAVOC_malloc(112);
    call {:si_unique_call 1142} Tmp_515 := __HAVOC_malloc(144);
    call {:si_unique_call 1143} Tmp_516 := __HAVOC_malloc(136);
    call {:si_unique_call 1144} Tmp_517 := __HAVOC_malloc(72);
    call {:si_unique_call 1145} Tmp_518 := __HAVOC_malloc(140);
    call {:si_unique_call 1146} Tmp_519 := __HAVOC_malloc(60);
    call {:si_unique_call 1147} Tmp_520 := __HAVOC_malloc(168);
    call {:si_unique_call 1148} Tmp_521 := __HAVOC_malloc(132);
    call {:si_unique_call 1149} Tmp_522 := __HAVOC_malloc(60);
    call {:si_unique_call 1150} Tmp_525 := __HAVOC_malloc(144);
    call {:si_unique_call 1151} Tmp_526 := __HAVOC_malloc(60);
    call {:si_unique_call 1152} Tmp_527 := __HAVOC_malloc(380);
    call {:si_unique_call 1153} Tmp_528 := __HAVOC_malloc(180);
    call {:si_unique_call 1154} Tmp_529 := __HAVOC_malloc(72);
    call {:si_unique_call 1155} Tmp_530 := __HAVOC_malloc(88);
    call {:si_unique_call 1156} Tmp_531 := __HAVOC_malloc(60);
    call {:si_unique_call 1157} Tmp_532 := __HAVOC_malloc(72);
    call {:si_unique_call 1158} Tmp_533 := __HAVOC_malloc(100);
    call {:si_unique_call 1159} Tmp_534 := __HAVOC_malloc(116);
    call {:si_unique_call 1160} Tmp_535 := __HAVOC_malloc(148);
    call {:si_unique_call 1161} Tmp_536 := __HAVOC_malloc(112);
    call {:si_unique_call 1162} Tmp_537 := __HAVOC_malloc(28);
    call {:si_unique_call 1163} Tmp_538 := __HAVOC_malloc(60);
    call {:si_unique_call 1164} Tmp_539 := __HAVOC_malloc(88);
    call {:si_unique_call 1165} Tmp_540 := __HAVOC_malloc(156);
    call {:si_unique_call 1166} Tmp_541 := __HAVOC_malloc(72);
    call {:si_unique_call 1167} Tmp_542 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    havoc pDevExt_12;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc pLowerDevObj_2;
    call {:si_unique_call 1168} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1169} sdv_do_paged_code_check();
    call {:si_unique_call 1170} status_15 := CyzIRPPrologue(PIrp_2, pDevExt_12);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} status_15 != 0;
    Tmp_513 := strConst__li2bpl2;
    call {:si_unique_call 1171} vslice_dummy_var_270 := CyzDbgPrintEx(9, Tmp_513);
    call {:si_unique_call 1172} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1173} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon185_Then:
    assume {:partition} status_15 == 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L280;

  L280:
    call {:si_unique_call 1174} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1175} status_15 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:partition} yogi_error != 1;
    Tmp_466 := status_15;
    goto L1;

  anon257_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon210_Then:
    Tmp_521 := strConst__li2bpl120;
    call {:si_unique_call 1176} vslice_dummy_var_327 := CyzDbgPrintEx(12, Tmp_521);
    Tmp_467 := strConst__li2bpl121;
    call {:si_unique_call 1177} vslice_dummy_var_328 := CyzDbgPrintEx(12, Tmp_467);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1178} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 8, 1);
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1179} CyzKillPendingIrps(PDevObj_12);
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1180} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_331;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_331;
    call {:si_unique_call 1181} vslice_dummy_var_329 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1182} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_332;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_332;
    call {:si_unique_call 1183} sdv_490 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    pendingIRPs_1 := sdv_490;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:partition} pendingIRPs_1 != 0;
    call {:si_unique_call 1184} vslice_dummy_var_258 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L92;

  L92:
    call {:si_unique_call 1185} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_333;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_333;
    call {:si_unique_call 1186} vslice_dummy_var_330 := sdv_InterlockedIncrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1187} CyzDisableInterfacesResources(PDevObj_12, 0);
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1188} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1189} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon275_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon274_Then:
    assume {:partition} pendingIRPs_1 == 0;
    goto L92;

  anon273_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon272_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon211_Then:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 4) != 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto L109;

  L109:
    call {:si_unique_call 1190} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1191} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon271_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 4) == 0;
    goto L109;

  anon212_Then:
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    Mem_T.INT4[portIndex] := 0;
    Tmp_482 := strConst__li2bpl145;
    call {:si_unique_call 1192} vslice_dummy_var_321 := CyzDbgPrintEx(12, Tmp_482);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    call {:si_unique_call 1193} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1194} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon264_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon190_Then:
    goto L128;

  L128:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1195} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1196} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon189_Then:
    call {:si_unique_call 1197} status_15 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} status_15 >= 0;
    Tmp_484 := strConst__li2bpl84;
    call {:si_unique_call 1198} status_15 := CyzGetRegistryKeyValue(pnpKey_1, Tmp_484, 20, portIndex, 4);
    call {:si_unique_call 1199} vslice_dummy_var_259 := ZwClose(0);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    call {:si_unique_call 1200} sdv_491 := corral_nondet();
    pnpIdStrLen := sdv_491;
    pnpIdStrLen := pnpIdStrLen * 2 + 2;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    allocLen := 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc curStr;
    goto L179;

  L179:
    call {:si_unique_call 1201} allocLen, curStrLen := CyzPnpDispatch_loop_L179(allocLen, sdv_465, curStrLen, curStr);
    goto L179_last;

  L179_last:
    curStrLen := sdv_465;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} curStrLen != 0;
    allocLen := allocLen + curStrLen * 2 + 2;
    goto anon267_Else_dummy;

  anon267_Else_dummy:
    assume false;
    return;

  anon267_Then:
    assume {:partition} curStrLen == 0;
    allocLen := allocLen + 2;
    Tmp_500 := allocLen + pnpIdStrLen + 2;
    call {:si_unique_call 1202} sdv_437 := ExAllocatePoolWithTag(1, Tmp_500, -797279933);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_480;
    call {:si_unique_call 1203} sdv_RtlZeroMemory(0, Tmp_480);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1204} sdv_RtlCopyMemory(0, 0, allocLen);
    call {:si_unique_call 1205} vslice_dummy_var_260 := corral_nondet();
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1206} sdv_ExFreePool(0);
    goto L208;

  L208:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1207} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1208} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon269_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon268_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1209} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_541 := strConst__li2bpl2;
    call {:si_unique_call 1210} vslice_dummy_var_322 := CyzDbgPrintEx(9, Tmp_541);
    call {:si_unique_call 1211} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1212} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon266_Then:
    Tmp_519 := strConst__li2bpl122;
    call {:si_unique_call 1213} vslice_dummy_var_323 := CyzDbgPrintEx(12, Tmp_519);
    Tmp_478 := pnpIdStrLen + 4;
    call {:si_unique_call 1214} sdv_399 := ExAllocatePoolWithTag(1, Tmp_478, -797279933);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_523;
    call {:si_unique_call 1215} sdv_RtlZeroMemory(0, Tmp_523);
    call {:si_unique_call 1216} vslice_dummy_var_261 := corral_nondet();
    goto L208;

  anon270_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_472 := strConst__li2bpl2;
    call {:si_unique_call 1217} vslice_dummy_var_324 := CyzDbgPrintEx(9, Tmp_472);
    call {:si_unique_call 1218} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1219} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon192_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_495 := strConst__li2bpl2;
    call {:si_unique_call 1220} vslice_dummy_var_325 := CyzDbgPrintEx(9, Tmp_495);
    call {:si_unique_call 1221} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1222} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon191_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_542 := strConst__li2bpl2;
    call {:si_unique_call 1223} vslice_dummy_var_326 := CyzDbgPrintEx(9, Tmp_542);
    call {:si_unique_call 1224} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1225} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon188_Then:
    goto L128;

  anon213_Then:
    Tmp_533 := strConst__li2bpl119;
    call {:si_unique_call 1226} vslice_dummy_var_320 := CyzDbgPrintEx(12, Tmp_533);
    goto L280;

  anon214_Then:
    Tmp_530 := strConst__li2bpl118;
    call {:si_unique_call 1227} vslice_dummy_var_319 := CyzDbgPrintEx(12, Tmp_530);
    goto L280;

  anon215_Then:
    Tmp_487 := strConst__li2bpl117;
    call {:si_unique_call 1228} vslice_dummy_var_318 := CyzDbgPrintEx(12, Tmp_487);
    goto L280;

  anon216_Then:
    Tmp_536 := strConst__li2bpl116;
    call {:si_unique_call 1229} vslice_dummy_var_317 := CyzDbgPrintEx(12, Tmp_536);
    goto L280;

  anon217_Then:
    Tmp_528 := strConst__li2bpl139;
    call {:si_unique_call 1230} vslice_dummy_var_305 := CyzDbgPrintEx(12, Tmp_528);
    Tmp_497 := strConst__li2bpl121;
    call {:si_unique_call 1231} vslice_dummy_var_306 := CyzDbgPrintEx(12, Tmp_497);
    call {:si_unique_call 1232} sdv_444 := ExAllocatePoolWithTag(0, 16, -797279933);
    pResFiltEvent := sdv_444;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} pResFiltEvent != 0;
    call {:si_unique_call 1233} KeInitializeEvent(pResFiltEvent, 1, 0);
    call {:si_unique_call 1234} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1235} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant219, pResFiltEvent, 1, 1, 1);
    call {:si_unique_call 1236} status_15 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} yogi_error != 1;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} status_15 == 259;
    call {:si_unique_call 1237} vslice_dummy_var_262 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L330;

  L330:
    call {:si_unique_call 1238} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto L338;

  L338:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc pReqList;
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    havoc Tmp_511;
    pResList := Tmp_511;
    Tmp_469 := strConst__li2bpl140;
    call {:si_unique_call 1239} vslice_dummy_var_307 := CyzDbgPrintEx(12, Tmp_469);
    listNum := 0;
    goto L344;

  L344:
    call {:si_unique_call 1240} gotMemory, Tmp_479, Tmp_481, Tmp_486, Tmp_488, pResDesc, listNum, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_308, vslice_dummy_var_309, vslice_dummy_var_310, vslice_dummy_var_311, vslice_dummy_var_312 := CyzPnpDispatch_loop_L344(gotMemory, pResList, Tmp_479, Tmp_481, Tmp_486, Tmp_488, pLowerDevObj_2, pResDesc, listNum, pReqList, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_308, vslice_dummy_var_309, vslice_dummy_var_310, vslice_dummy_var_311, vslice_dummy_var_312);
    goto L344_last;

  L344_last:
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    gotRuntime := 0;
    gotMemory := 0;
    Tmp_479 := strConst__li2bpl141;
    call {:si_unique_call 1241} vslice_dummy_var_308 := CyzDbgPrintEx(12, Tmp_479);
    j := 0;
    goto L353;

  L353:
    call {:si_unique_call 1242} gotMemory, Tmp_481, Tmp_486, Tmp_488, pResDesc, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_309, vslice_dummy_var_310, vslice_dummy_var_311, vslice_dummy_var_312 := CyzPnpDispatch_loop_L353(gotMemory, pResList, Tmp_481, Tmp_486, Tmp_488, pLowerDevObj_2, pResDesc, Tmp_512, Tmp_515, j, Tmp_527, gotRuntime, vslice_dummy_var_309, vslice_dummy_var_310, vslice_dummy_var_311, vslice_dummy_var_312);
    goto L353_last;

  L353_last:
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    Tmp_486 := j;
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    havoc Tmp_527;
    pResDesc := Tmp_527 + Tmp_486 * 380;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto L370;

  L370:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} gotRuntime != 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} gotMemory == 0;
    goto L371;

  L371:
    j := j + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon200_Then:
    assume {:partition} gotMemory != 0;
    goto L354;

  L354:
    listNum := listNum + 1;
    goto L354_dummy;

  L354_dummy:
    assume false;
    return;

  anon199_Then:
    assume {:partition} gotRuntime == 0;
    goto L371;

  anon232_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    gotRuntime := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_512 := strConst__li2bpl143;
    call {:si_unique_call 1243} vslice_dummy_var_311 := CyzDbgPrintEx(12, Tmp_512);
    goto L370;

  anon198_Then:
    gotMemory := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_515 := strConst__li2bpl144;
    call {:si_unique_call 1244} vslice_dummy_var_312 := CyzDbgPrintEx(12, Tmp_515);
    goto L370;

  anon233_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_481 := strConst__li2bpl142;
    call {:si_unique_call 1245} vslice_dummy_var_310 := CyzDbgPrintEx(12, Tmp_481);
    goto L370;

  anon263_Then:
    Tmp_488 := strConst__li2bpl123;
    call {:si_unique_call 1246} vslice_dummy_var_309 := CyzDbgPrintEx(12, Tmp_488);
    goto L370;

  anon197_Then:
    goto L354;

  anon196_Then:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_477 := strConst__li2bpl2;
    call {:si_unique_call 1247} vslice_dummy_var_313 := CyzDbgPrintEx(9, Tmp_477);
    call {:si_unique_call 1248} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1249} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := 0;
    goto L1;

  anon194_Then:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto L338;

  anon195_Then:
    Tmp_501 := strConst__li2bpl124;
    call {:si_unique_call 1250} vslice_dummy_var_314 := CyzDbgPrintEx(12, Tmp_501);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_15;
    Tmp_474 := strConst__li2bpl2;
    call {:si_unique_call 1251} vslice_dummy_var_315 := CyzDbgPrintEx(9, Tmp_474);
    call {:si_unique_call 1252} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1253} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon193_Then:
    assume {:partition} status_15 != 259;
    goto L330;

  anon262_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    assume {:partition} pResFiltEvent == 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_517 := strConst__li2bpl2;
    call {:si_unique_call 1254} vslice_dummy_var_316 := CyzDbgPrintEx(9, Tmp_517);
    call {:si_unique_call 1255} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1256} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon218_Then:
    Tmp_493 := strConst__li2bpl115;
    call {:si_unique_call 1257} vslice_dummy_var_304 := CyzDbgPrintEx(12, Tmp_493);
    goto L280;

  anon219_Then:
    Tmp_520 := strConst__li2bpl125;
    call {:si_unique_call 1258} vslice_dummy_var_300 := CyzDbgPrintEx(12, Tmp_520);
    call {:si_unique_call 1259} sdv_440 := ExAllocatePoolWithTag(0, 16, -797279933);
    pQueryCapsEvent := sdv_440;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:partition} pQueryCapsEvent != 0;
    call {:si_unique_call 1260} KeInitializeEvent(pQueryCapsEvent, 1, 0);
    call {:si_unique_call 1261} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1262} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant219, pQueryCapsEvent, 1, 1, 1);
    call {:si_unique_call 1263} status_15 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} yogi_error != 1;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} status_15 == 259;
    call {:si_unique_call 1264} vslice_dummy_var_263 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L444;

  L444:
    call {:si_unique_call 1265} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_15;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto L469;

  L469:
    Tmp_475 := strConst__li2bpl2;
    call {:si_unique_call 1266} vslice_dummy_var_302 := CyzDbgPrintEx(9, Tmp_475);
    call {:si_unique_call 1267} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1268} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon260_Then:
    Tmp_514 := strConst__li2bpl126;
    call {:si_unique_call 1269} vslice_dummy_var_301 := CyzDbgPrintEx(12, Tmp_514);
    call {:si_unique_call 1270} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    havoc pDevCaps;
    cap := 2;
    goto L462;

  L462:
    call {:si_unique_call 1271} Tmp_468, cap, Tmp_504, Tmp_505, Tmp_543 := CyzPnpDispatch_loop_L462(Tmp_468, pDevExt_12, cap, Tmp_504, Tmp_505, pDevCaps, Tmp_543);
    goto L462_last;

  L462_last:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} 7 > cap;
    Tmp_543 := cap;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_505;
    Tmp_468 := cap;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    havoc Tmp_504;
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    Mem_T.INT4[Tmp_505 + Tmp_543 * 4] := Mem_T.INT4[Tmp_504 + Tmp_468 * 4];
    cap := cap + 1;
    goto anon202_Else_dummy;

  anon202_Else_dummy:
    assume false;
    return;

  anon202_Then:
    assume {:partition} cap >= 7;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    Mem_T.INT4[Tmp_537] := 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    Mem_T.INT4[Tmp_471 + 1 * 4] := 1;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto L469;

  anon201_Then:
    assume {:partition} status_15 != 259;
    goto L444;

  anon259_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon258_Then:
    assume {:partition} pQueryCapsEvent == 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_529 := strConst__li2bpl2;
    call {:si_unique_call 1272} vslice_dummy_var_303 := CyzDbgPrintEx(9, Tmp_529);
    call {:si_unique_call 1273} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1274} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := -1073741670;
    goto L1;

  anon220_Then:
    Tmp_491 := strConst__li2bpl114;
    call {:si_unique_call 1275} vslice_dummy_var_299 := CyzDbgPrintEx(12, Tmp_491);
    goto L280;

  anon221_Then:
    Tmp_540 := strConst__li2bpl113;
    call {:si_unique_call 1276} vslice_dummy_var_292 := CyzDbgPrintEx(12, Tmp_540);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    Tmp_476 := strConst__li2bpl132;
    call {:si_unique_call 1277} vslice_dummy_var_297 := CyzDbgPrintEx(12, Tmp_476);
    goto L510;

  L510:
    call {:si_unique_call 1278} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1279} status_15 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:partition} yogi_error != 1;
    Tmp_466 := status_15;
    goto L1;

  anon256_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    Tmp_485 := strConst__li2bpl127;
    call {:si_unique_call 1280} vslice_dummy_var_298 := CyzDbgPrintEx(12, Tmp_485);
    goto L510;

  anon229_Then:
    Tmp_503 := strConst__li2bpl131;
    call {:si_unique_call 1281} vslice_dummy_var_296 := CyzDbgPrintEx(12, Tmp_503);
    goto L510;

  anon230_Then:
    Tmp_489 := strConst__li2bpl130;
    call {:si_unique_call 1282} vslice_dummy_var_295 := CyzDbgPrintEx(12, Tmp_489);
    goto L510;

  anon231_Then:
    Tmp_510 := strConst__li2bpl129;
    call {:si_unique_call 1283} vslice_dummy_var_294 := CyzDbgPrintEx(12, Tmp_510);
    goto L510;

  anon203_Then:
    Tmp_506 := strConst__li2bpl128;
    call {:si_unique_call 1284} vslice_dummy_var_293 := CyzDbgPrintEx(12, Tmp_506);
    goto L510;

  anon222_Then:
    Tmp_518 := strConst__li2bpl112;
    call {:si_unique_call 1285} vslice_dummy_var_290 := CyzDbgPrintEx(12, Tmp_518);
    Tmp_538 := strConst__li2bpl121;
    call {:si_unique_call 1286} vslice_dummy_var_291 := CyzDbgPrintEx(12, Tmp_538);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1287} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 0);
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} yogi_error != 1;
    goto L527;

  L527:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1288} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1289} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon255_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon254_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon204_Then:
    goto L527;

  anon223_Then:
    Tmp_516 := strConst__li2bpl133;
    call {:si_unique_call 1290} vslice_dummy_var_286 := CyzDbgPrintEx(12, Tmp_516);
    Tmp_522 := strConst__li2bpl121;
    call {:si_unique_call 1291} vslice_dummy_var_287 := CyzDbgPrintEx(12, Tmp_522);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    call {:si_unique_call 1292} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1293} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon251_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon205_Then:
    call {:si_unique_call 1294} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 1295} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_539 := strConst__li2bpl138;
    call {:si_unique_call 1296} vslice_dummy_var_288 := CyzDbgPrintEx(12, Tmp_539);
    Tmp_492 := strConst__li2bpl2;
    call {:si_unique_call 1297} vslice_dummy_var_289 := CyzDbgPrintEx(9, Tmp_492);
    call {:si_unique_call 1298} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1299} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := 17;
    goto L1;

  anon206_Then:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1300} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 1);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1301} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1302} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1303} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon253_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon252_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon224_Then:
    Tmp_483 := strConst__li2bpl134;
    call {:si_unique_call 1304} vslice_dummy_var_282 := CyzDbgPrintEx(12, Tmp_483);
    Tmp_526 := strConst__li2bpl121;
    call {:si_unique_call 1305} vslice_dummy_var_283 := CyzDbgPrintEx(12, Tmp_526);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1306} CyzSetDeviceFlags(pDevExt_12, Flags__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 1);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1307} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 4, 1);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1308} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 2, 0);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1309} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_334;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_334;
    call {:si_unique_call 1310} vslice_dummy_var_284 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1311} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_335;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_335;
    call {:si_unique_call 1312} sdv_404 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    pendingIRPs := sdv_404;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} pendingIRPs != 0;
    call {:si_unique_call 1313} vslice_dummy_var_264 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L614;

  L614:
    call {:si_unique_call 1314} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_336;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_336;
    call {:si_unique_call 1315} vslice_dummy_var_285 := sdv_InterlockedIncrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 1) != 0;
    call {:si_unique_call 1316} CyzReleaseResources(pDevExt_12);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    goto L621;

  L621:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1317} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1318} Tmp_466 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon250_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon207_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(pDevExt_12)], 1) == 0;
    goto L621;

  anon248_Then:
    assume {:partition} pendingIRPs == 0;
    goto L614;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon225_Then:
    Tmp_535 := strConst__li2bpl111;
    call {:si_unique_call 1319} vslice_dummy_var_280 := CyzDbgPrintEx(12, Tmp_535);
    Tmp_531 := strConst__li2bpl121;
    call {:si_unique_call 1320} vslice_dummy_var_281 := CyzDbgPrintEx(12, Tmp_531);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1321} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1322} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1323} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon244_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    Tmp_508 := strConst__li2bpl135;
    call {:si_unique_call 1324} vslice_dummy_var_277 := CyzDbgPrintEx(12, Tmp_508);
    Tmp_499 := strConst__li2bpl121;
    call {:si_unique_call 1325} vslice_dummy_var_278 := CyzDbgPrintEx(12, Tmp_499);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1326} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1327} CyzKillPendingIrps(PDevObj_12);
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1328} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_337;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_337;
    call {:si_unique_call 1329} vslice_dummy_var_279 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1330} Tmp_494 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_338;
    Mem_T.INT4[Tmp_494] := vslice_dummy_var_338;
    call {:si_unique_call 1331} sdv_484 := sdv_InterlockedDecrement(Tmp_494);
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    pendingIRPs_2 := sdv_484;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} pendingIRPs_2 != 0;
    call {:si_unique_call 1332} vslice_dummy_var_265 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L668;

  L668:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12)], 8) != 0;
    goto L675;

  L675:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1333} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 1334} status_15 := sdv_IoCallDriver(pLowerDevObj_2, PIrp_2);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1335} vslice_dummy_var_266 := CyzRemoveDevObj(PDevObj_12);
    Tmp_466 := status_15;
    goto L1;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon208_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12)], 8) == 0;
    call {:si_unique_call 1336} CyzDisableInterfacesResources(PDevObj_12, 1);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L675;

  anon242_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon240_Then:
    assume {:partition} pendingIRPs_2 == 0;
    goto L668;

  anon239_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon238_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    Tmp_525 := strConst__li2bpl136;
    call {:si_unique_call 1337} vslice_dummy_var_273 := CyzDbgPrintEx(12, Tmp_525);
    Tmp_473 := strConst__li2bpl121;
    call {:si_unique_call 1338} vslice_dummy_var_274 := CyzDbgPrintEx(12, Tmp_473);
    call {:si_unique_call 1339} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    call {:si_unique_call 1340} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_507 := strConst__li2bpl138;
    call {:si_unique_call 1341} vslice_dummy_var_275 := CyzDbgPrintEx(12, Tmp_507);
    Tmp_470 := strConst__li2bpl2;
    call {:si_unique_call 1342} vslice_dummy_var_276 := CyzDbgPrintEx(9, Tmp_470);
    call {:si_unique_call 1343} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1344} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := 17;
    goto L1;

  anon209_Then:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1345} CyzSetDeviceFlags(pDevExt_12, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 1);
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1346} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 1347} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 1348} Tmp_466 := CyzIoCallDriver(pDevExt_12, pLowerDevObj_2, PIrp_2);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon237_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon236_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon186_Then:
    Tmp_534 := strConst__li2bpl137;
    call {:si_unique_call 1349} vslice_dummy_var_271 := CyzDbgPrintEx(12, Tmp_534);
    call {:si_unique_call 1350} MmLockPagableSectionByHandle(0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1351} status_15 := CyzStartDevice(PDevObj_12, PIrp_2);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1352} vslice_dummy_var_267 := CyzGotoPowerState(PDevObj_12, pDevExt_12, 4);
    call {:si_unique_call 1353} MmUnlockPagableImageSection(0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    Tmp_532 := strConst__li2bpl2;
    call {:si_unique_call 1354} vslice_dummy_var_272 := CyzDbgPrintEx(9, Tmp_532);
    call {:si_unique_call 1355} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1356} CyzIRPEpilogue(pDevExt_12);
    Tmp_466 := status_15;
    goto L1;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon234_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzStartDevice"} CyzStartDevice(actual_PDevObj_13: int, actual_PIrp_3: int) returns (Tmp_544: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartDevice"} CyzStartDevice(actual_PDevObj_13: int, actual_PIrp_3: int) returns (Tmp_544: int)
{
  var {:pointer} Tmp_545: int;
  var {:pointer} Tmp_546: int;
  var {:pointer} keyHandle_2: int;
  var {:pointer} portResourcesTr: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} pDevExt_13: int;
  var {:pointer} Tmp_549: int;
  var {:pointer} portResources: int;
  var {:pointer} Tmp_550: int;
  var {:pointer} Tmp_551: int;
  var {:pointer} sdv_506: int;
  var {:scalar} dataLength: int;
  var {:pointer} sdv_513: int;
  var {:pointer} pLowerDevObj_3: int;
  var {:pointer} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:scalar} status_16: int;
  var {:pointer} Tmp_554: int;
  var {:scalar} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:pointer} PDevObj_13: int;
  var {:pointer} PIrp_3: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;

  anon0:
    call {:si_unique_call 1357} Tmp_555 := __HAVOC_malloc(20);
    call {:si_unique_call 1358} Tmp_556 := __HAVOC_malloc(20);
    PDevObj_13 := actual_PDevObj_13;
    PIrp_3 := actual_PIrp_3;
    call {:si_unique_call 1359} Tmp_545 := __HAVOC_malloc(64);
    call {:si_unique_call 1360} Tmp_546 := __HAVOC_malloc(112);
    call {:si_unique_call 1361} Tmp_547 := __HAVOC_malloc(56);
    call {:si_unique_call 1362} Tmp_549 := __HAVOC_malloc(152);
    call {:si_unique_call 1363} Tmp_550 := __HAVOC_malloc(208);
    call {:si_unique_call 1364} Tmp_551 := __HAVOC_malloc(200);
    call {:si_unique_call 1365} Tmp_552 := __HAVOC_malloc(56);
    call {:si_unique_call 1366} Tmp_553 := __HAVOC_malloc(100);
    call {:si_unique_call 1367} Tmp_554 := __HAVOC_malloc(64);
    call {:si_unique_call 1368} vslice_dummy_var_331 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    status_16 := -1073741822;
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    havoc pDevExt_13;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc pLowerDevObj_3;
    portResources := 0;
    portResourcesTr := 0;
    call {:si_unique_call 1369} sdv_do_paged_code_check();
    Tmp_553 := strConst__li2bpl148;
    call {:si_unique_call 1370} vslice_dummy_var_334 := CyzDbgPrintEx(11, Tmp_553);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1371} KeInitializeEvent(CyzStartEvent__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 0);
    call {:si_unique_call 1372} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1373} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant219, CyzStartEvent__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 1, 1);
    call {:si_unique_call 1374} status_16 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_16 == 259;
    call {:si_unique_call 1375} vslice_dummy_var_332 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_16;
    goto L40;

  L40:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} status_16 >= 0;
    call {:si_unique_call 1376} status_16 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_16 >= 0;
    Tmp_547 := strConst__li2bpl150;
    call {:si_unique_call 1377} dataLength := CyzGetRegistryKeyValueLength(keyHandle_2, Tmp_547, 28);
    call {:si_unique_call 1378} sdv_506 := ExAllocatePoolWithTag(1, dataLength, -797279933);
    portResources := sdv_506;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} portResources != 0;
    Tmp_552 := strConst__li2bpl150;
    call {:si_unique_call 1379} status_16 := CyzGetRegistryKeyValue(keyHandle_2, Tmp_552, 28, portResources, dataLength);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_16 < 0;
    Tmp_551 := strConst__li2bpl152;
    call {:si_unique_call 1380} vslice_dummy_var_336 := CyzDbgPrintEx(14, Tmp_551);
    goto L77;

  L77:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} portResources != 0;
    call {:si_unique_call 1381} sdv_ExFreePool(0);
    goto L78;

  L78:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} portResourcesTr != 0;
    call {:si_unique_call 1382} sdv_ExFreePool(0);
    goto L82;

  L82:
    call {:si_unique_call 1383} vslice_dummy_var_333 := ZwClose(0);
    goto L88;

  L88:
    Tmp_544 := status_16;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:partition} portResourcesTr == 0;
    goto L82;

  anon27_Then:
    assume {:partition} portResources == 0;
    goto L78;

  anon26_Then:
    assume {:partition} 0 <= status_16;
    goto L65;

  L65:
    Tmp_545 := strConst__li2bpl151;
    call {:si_unique_call 1384} dataLength := CyzGetRegistryKeyValueLength(keyHandle_2, Tmp_545, 32);
    call {:si_unique_call 1385} sdv_513 := ExAllocatePoolWithTag(1, dataLength, -797279933);
    portResourcesTr := sdv_513;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} portResourcesTr != 0;
    Tmp_554 := strConst__li2bpl151;
    call {:si_unique_call 1386} status_16 := CyzGetRegistryKeyValue(keyHandle_2, Tmp_554, 32, portResourcesTr, dataLength);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_16 < 0;
    Tmp_550 := strConst__li2bpl153;
    call {:si_unique_call 1387} vslice_dummy_var_335 := CyzDbgPrintEx(14, Tmp_550);
    goto L77;

  anon29_Then:
    assume {:partition} 0 <= status_16;
    goto L95;

  L95:
    call {:si_unique_call 1388} status_16 := CyzFinishStartDevice(PDevObj_13, portResources, portResourcesTr);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L77;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} portResourcesTr == 0;
    goto L95;

  anon31_Then:
    assume {:partition} portResources == 0;
    goto L65;

  anon25_Then:
    assume {:partition} 0 > status_16;
    Tmp_549 := strConst__li2bpl83;
    call {:si_unique_call 1389} vslice_dummy_var_337 := CyzDbgPrintEx(14, Tmp_549);
    goto L88;

  anon24_Then:
    assume {:partition} 0 > status_16;
    Tmp_546 := strConst__li2bpl149;
    call {:si_unique_call 1390} vslice_dummy_var_338 := CyzDbgPrintEx(14, Tmp_546);
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_339;
    call {:si_unique_call 1391} CyzLogError(vslice_dummy_var_339, 0, Tmp_555, Tmp_556, 0, 0, 0, 0, status_16, -1073475531, 0, 0, 0, 0);
    Tmp_544 := status_16;
    goto L1;

  anon23_Then:
    assume {:partition} status_16 != 259;
    goto L40;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzDoExternalNaming"} CyzDoExternalNaming(actual_PDevExt_6: int, actual_PDrvObj: int) returns (Tmp_557: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_557 == -1073741811 || Tmp_557 == -1073741808 || Tmp_557 == -1073741823 || Tmp_557 == 0 || Tmp_557 == 5 || Tmp_557 == -1073741789 || Tmp_557 == -1073741670 || Tmp_557 == -1073741772 || Tmp_557 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDoExternalNaming"} CyzDoExternalNaming(actual_PDevExt_6: int, actual_PDrvObj: int) returns (Tmp_557: int)
{
  var {:pointer} Tmp_558: int;
  var {:scalar} Tmp_559: int;
  var {:pointer} Tmp_560: int;
  var {:scalar} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:scalar} bufLen: int;
  var {:scalar} Tmp_564: int;
  var {:pointer} Tmp_566: int;
  var {:scalar} Tmp_568: int;
  var {:scalar} linkName: int;
  var {:scalar} Tmp_570: int;
  var {:pointer} keyHandle_3: int;
  var {:pointer} Tmp_572: int;
  var {:scalar} Tmp_574: int;
  var {:scalar} Tmp_575: int;
  var {:pointer} Tmp_576: int;
  var {:pointer} Tmp_578: int;
  var {:scalar} Tmp_579: int;
  var {:pointer} sdv_533: int;
  var {:pointer} pRegName_1: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} Tmp_585: int;
  var {:pointer} Tmp_586: int;
  var {:scalar} Tmp_587: int;
  var {:scalar} Tmp_588: int;
  var {:scalar} sdv_537: int;
  var {:scalar} Tmp_589: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} Tmp_591: int;
  var {:scalar} Tmp_592: int;
  var {:scalar} Tmp_593: int;
  var {:scalar} Tmp_594: int;
  var {:scalar} Tmp_595: int;
  var {:pointer} sdv_544: int;
  var {:pointer} sdv_545: int;
  var {:scalar} Tmp_597: int;
  var {:pointer} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} Tmp_604: int;
  var {:pointer} Tmp_605: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} sdv_553: int;
  var {:scalar} status_17: int;
  var {:pointer} pDevObj: int;
  var {:scalar} Tmp_608: int;
  var {:scalar} Tmp_609: int;
  var {:pointer} sdv_556: int;
  var {:pointer} PDevExt_6: int;
  var {:pointer} PDrvObj: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;

  anon0:
    call {:si_unique_call 1392} linkName := __HAVOC_malloc(12);
    call {:si_unique_call 1393} Tmp_570 := __HAVOC_malloc(20);
    call {:si_unique_call 1394} Tmp_574 := __HAVOC_malloc(20);
    call {:si_unique_call 1395} Tmp_575 := __HAVOC_malloc(20);
    call {:si_unique_call 1396} Tmp_579 := __HAVOC_malloc(20);
    call {:si_unique_call 1397} Tmp_585 := __HAVOC_malloc(20);
    call {:si_unique_call 1398} Tmp_587 := __HAVOC_malloc(20);
    call {:si_unique_call 1399} Tmp_588 := __HAVOC_malloc(20);
    call {:si_unique_call 1400} Tmp_590 := __HAVOC_malloc(20);
    call {:si_unique_call 1401} Tmp_592 := __HAVOC_malloc(20);
    call {:si_unique_call 1402} Tmp_593 := __HAVOC_malloc(20);
    call {:si_unique_call 1403} Tmp_594 := __HAVOC_malloc(20);
    call {:si_unique_call 1404} Tmp_595 := __HAVOC_malloc(20);
    call {:si_unique_call 1405} Tmp_604 := __HAVOC_malloc(20);
    call {:si_unique_call 1406} Tmp_609 := __HAVOC_malloc(20);
    PDevExt_6 := actual_PDevExt_6;
    PDrvObj := actual_PDrvObj;
    call {:si_unique_call 1407} Tmp_558 := __HAVOC_malloc(148);
    call {:si_unique_call 1408} vslice_dummy_var_347 := __HAVOC_malloc(44);
    call {:si_unique_call 1409} Tmp_566 := __HAVOC_malloc(156);
    call {:si_unique_call 1410} vslice_dummy_var_348 := __HAVOC_malloc(44);
    call {:si_unique_call 1411} vslice_dummy_var_349 := __HAVOC_malloc(8);
    call {:si_unique_call 1412} Tmp_572 := __HAVOC_malloc(196);
    call {:si_unique_call 1413} Tmp_576 := __HAVOC_malloc(164);
    call {:si_unique_call 1414} Tmp_578 := __HAVOC_malloc(168);
    call {:si_unique_call 1415} Tmp_581 := __HAVOC_malloc(192);
    call {:si_unique_call 1416} Tmp_582 := __HAVOC_malloc(36);
    call {:si_unique_call 1417} vslice_dummy_var_350 := __HAVOC_malloc(44);
    call {:si_unique_call 1418} Tmp_586 := __HAVOC_malloc(200);
    call {:si_unique_call 1419} Tmp_591 := __HAVOC_malloc(44);
    call {:si_unique_call 1420} vslice_dummy_var_351 := __HAVOC_malloc(8);
    call {:si_unique_call 1421} Tmp_599 := __HAVOC_malloc(88);
    call {:si_unique_call 1422} Tmp_601 := __HAVOC_malloc(156);
    call {:si_unique_call 1423} Tmp_602 := __HAVOC_malloc(64);
    call {:si_unique_call 1424} Tmp_605 := __HAVOC_malloc(180);
    call {:si_unique_call 1425} Tmp_606 := __HAVOC_malloc(236);
    status_17 := 0;
    pRegName_1 := 0;
    call {:si_unique_call 1426} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc pDevObj;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1427} status_17 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_17 != 0;
    Tmp_557 := status_17;
    goto L1;

  L1:
    return;

  anon45_Then:
    assume {:partition} status_17 == 0;
    Tmp_599 := strConst__li2bpl154;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1428} vslice_dummy_var_352 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_599, 44, SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_6), 4);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_6)] != 0;
    call {:si_unique_call 1429} vslice_dummy_var_339 := ZwClose(0);
    Tmp_557 := 0;
    goto L1;

  anon46_Then:
    assume {:partition} Mem_T.INT4[SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_6)] == 0;
    call {:si_unique_call 1430} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_589;
    call {:si_unique_call 1431} sdv_544 := ExAllocatePoolWithTag(1, Tmp_589, -797279933);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_562;
    call {:si_unique_call 1432} sdv_RtlZeroMemory(0, Tmp_562);
    call {:si_unique_call 1433} sdv_545 := ExAllocatePoolWithTag(1, 258, -797279933);
    pRegName_1 := sdv_545;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pRegName_1 != 0;
    Tmp_582 := strConst__li2bpl155;
    call {:si_unique_call 1434} status_17 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_582, 18, pRegName_1, 256);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_17 >= 0;
    goto L60;

  L60:
    call {:si_unique_call 1435} vslice_dummy_var_340 := ZwClose(0);
    bufLen := sdv_537 * 2 + 2;
    call {:si_unique_call 1436} sdv_556 := ExAllocatePoolWithTag(1, bufLen, -797279933);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 1437} sdv_RtlZeroMemory(0, bufLen);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1438} vslice_dummy_var_353 := corral_nondet();
    call {:si_unique_call 1439} vslice_dummy_var_354 := corral_nondet();
    call {:si_unique_call 1440} vslice_dummy_var_355 := corral_nondet();
    call {:si_unique_call 1441} vslice_dummy_var_356 := corral_nondet();
    call {:si_unique_call 1442} vslice_dummy_var_341 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_603;
    call {:si_unique_call 1443} sdv_553 := ExAllocatePoolWithTag(1, Tmp_603, -797279933);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_568;
    call {:si_unique_call 1444} sdv_RtlZeroMemory(0, Tmp_568);
    call {:si_unique_call 1445} vslice_dummy_var_342 := corral_nondet();
    call {:si_unique_call 1446} sdv_533 := ExAllocatePoolWithTag(1, 66, -797279933);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_608;
    call {:si_unique_call 1447} sdv_RtlZeroMemory(0, Tmp_608);
    call {:si_unique_call 1448} vslice_dummy_var_343 := corral_nondet();
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_560;
    call {:si_unique_call 1449} sdv_RtlZeroMemory(0, 2);
    Tmp_602 := strConst__li2bpl159;
    call {:si_unique_call 1450} vslice_dummy_var_357 := CyzDbgPrintEx(4, Tmp_602);
    call {:si_unique_call 1451} status_17 := IoCreateSymbolicLink(0, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_17 >= 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_597;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1452} status_17 := RtlWriteRegistryValue(4, 0, 0, 1, 0, Tmp_597);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_17 >= 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1453} status_17 := IoRegisterDeviceInterface(0, 0, 0, DeviceClassSymbolicName__CYZ_DEVICE_EXTENSION(PDevExt_6));
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_17 >= 0;
    call {:si_unique_call 1454} status_17 := IoSetDeviceInterfaceState(0, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_17 >= 0;
    goto L162;

  L162:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_17 >= 0;
    goto L164;

  L164:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1455} sdv_ExFreePool(0);
    goto L165;

  L165:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} pRegName_1 != 0;
    call {:si_unique_call 1456} sdv_ExFreePool(0);
    goto L169;

  L169:
    Tmp_557 := status_17;
    goto L1;

  anon55_Then:
    assume {:partition} pRegName_1 == 0;
    goto L169;

  anon54_Then:
    goto L165;

  anon52_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1457} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1458} vslice_dummy_var_344 := IoDeleteSymbolicLink(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L178;

  L178:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1459} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L183;

  L183:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1460} vslice_dummy_var_358 := RtlDeleteRegistryValue(4, 0, 0);
    goto L188;

  L188:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1461} vslice_dummy_var_345 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1462} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L192;

  L192:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    call {:si_unique_call 1463} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L164;

  anon60_Then:
    goto L164;

  anon59_Then:
    goto L192;

  anon58_Then:
    goto L188;

  anon57_Then:
    goto L183;

  anon56_Then:
    goto L178;

  anon53_Then:
    goto L173;

  anon51_Then:
    assume {:partition} 0 > status_17;
    Tmp_605 := strConst__li2bpl161;
    call {:si_unique_call 1464} vslice_dummy_var_359 := CyzDbgPrintEx(14, Tmp_605);
    goto L162;

  anon50_Then:
    assume {:partition} 0 > status_17;
    Tmp_586 := strConst__li2bpl160;
    call {:si_unique_call 1465} vslice_dummy_var_360 := CyzDbgPrintEx(14, Tmp_586);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto L162;

  anon49_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_600;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc vslice_dummy_var_371;
    call {:si_unique_call 1466} CyzLogError(PDrvObj, pDevObj, Tmp_592, Tmp_575, 0, 0, 0, Tmp_561, status_17, 266245, Tmp_600, vslice_dummy_var_371, 0, 0);
    Tmp_606 := strConst__li2bpl162;
    call {:si_unique_call 1467} vslice_dummy_var_361 := CyzDbgPrintEx(14, Tmp_606);
    goto L162;

  anon48_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_559;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc Tmp_564;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc vslice_dummy_var_372;
    call {:si_unique_call 1468} CyzLogError(PDrvObj, pDevObj, Tmp_594, Tmp_585, 0, 0, 0, Tmp_564, status_17, 266244, Tmp_559, vslice_dummy_var_372, 0, 0);
    Tmp_581 := strConst__li2bpl163;
    call {:si_unique_call 1469} vslice_dummy_var_362 := CyzDbgPrintEx(14, Tmp_581);
    goto L162;

  anon66_Then:
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    call {:si_unique_call 1470} CyzLogError(PDrvObj, pDevObj, Tmp_574, Tmp_570, 0, 0, 0, 75, 0, -1073475576, 0, 0, 0, 0);
    Tmp_601 := strConst__li2bpl164;
    call {:si_unique_call 1471} vslice_dummy_var_363 := CyzDbgPrintEx(14, Tmp_601);
    status_17 := -1073741670;
    goto L162;

  anon65_Then:
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    call {:si_unique_call 1472} CyzLogError(PDrvObj, pDevObj, Tmp_593, Tmp_588, 0, 0, 0, 74, 0, -1073475576, 0, 0, 0, 0);
    Tmp_572 := strConst__li2bpl165;
    call {:si_unique_call 1473} vslice_dummy_var_364 := CyzDbgPrintEx(14, Tmp_572);
    status_17 := -1073741670;
    goto L162;

  anon64_Then:
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    call {:si_unique_call 1474} CyzLogError(PDrvObj, pDevObj, Tmp_595, Tmp_587, 0, 0, 0, 73, 0, -1073475576, 0, 0, 0, 0);
    Tmp_566 := strConst__li2bpl166;
    call {:si_unique_call 1475} vslice_dummy_var_365 := CyzDbgPrintEx(14, Tmp_566);
    status_17 := -1073741670;
    goto L162;

  anon47_Then:
    assume {:partition} 0 > status_17;
    Tmp_591 := strConst__li2bpl156;
    call {:si_unique_call 1476} status_17 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_591, 22, pRegName_1, 256);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_17 < 0;
    Tmp_576 := strConst__li2bpl167;
    call {:si_unique_call 1477} vslice_dummy_var_366 := CyzDbgPrintEx(14, Tmp_576);
    call {:si_unique_call 1478} vslice_dummy_var_346 := ZwClose(0);
    goto L162;

  anon61_Then:
    assume {:partition} 0 <= status_17;
    goto L60;

  anon63_Then:
    assume {:partition} pRegName_1 == 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    call {:si_unique_call 1479} CyzLogError(PDrvObj, pDevObj, Tmp_604, Tmp_579, 0, 0, 0, 72, 0, -1073475576, 0, 0, 0, 0);
    Tmp_558 := strConst__li2bpl168;
    call {:si_unique_call 1480} vslice_dummy_var_367 := CyzDbgPrintEx(14, Tmp_558);
    status_17 := -1073741670;
    call {:si_unique_call 1481} vslice_dummy_var_368 := ZwClose(0);
    goto L162;

  anon62_Then:
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    assume {:nonnull} Tmp_609 != 0;
    assume Tmp_609 > 0;
    call {:si_unique_call 1482} CyzLogError(PDrvObj, pDevObj, Tmp_609, Tmp_590, 0, 0, 0, 71, 0, -1073475576, 0, 0, 0, 0);
    Tmp_578 := strConst__li2bpl169;
    call {:si_unique_call 1483} vslice_dummy_var_369 := CyzDbgPrintEx(14, Tmp_578);
    status_17 := -1073741670;
    call {:si_unique_call 1484} vslice_dummy_var_370 := ZwClose(0);
    goto L162;
}



procedure {:origName "CyzReadSymName"} CyzReadSymName(actual_PDevExt_7: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_612: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_612 == -1073741811 || Tmp_612 == -1073741823 || Tmp_612 == 0 || Tmp_612 == 5 || Tmp_612 == -1073741789 || Tmp_612 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReadSymName"} CyzReadSymName(actual_PDevExt_7: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_612: int)
{
  var {:scalar} Tmp_614: int;
  var {:scalar} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:scalar} linkName_1: int;
  var {:scalar} Tmp_617: int;
  var {:scalar} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} sdv_560: int;
  var {:pointer} Tmp_621: int;
  var {:pointer} sdv_562: int;
  var {:scalar} Tmp_622: int;
  var {:pointer} sdv_564: int;
  var {:pointer} Tmp_623: int;
  var {:pointer} Tmp_624: int;
  var {:scalar} Tmp_625: int;
  var {:scalar} status_18: int;
  var {:pointer} Tmp_626: int;
  var {:pointer} pDevObj_1: int;
  var {:pointer} pDrvObj: int;
  var {:scalar} Tmp_629: int;
  var {:scalar} Tmp_630: int;
  var {:pointer} PDevExt_7: int;
  var {:pointer} hRegKey: int;
  var {:pointer} PSymName: int;
  var {:pointer} PpRegName: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;

  anon0:
    call {:si_unique_call 1485} Tmp_615 := __HAVOC_malloc(20);
    call {:si_unique_call 1486} linkName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1487} Tmp_618 := __HAVOC_malloc(20);
    call {:si_unique_call 1488} Tmp_629 := __HAVOC_malloc(20);
    call {:si_unique_call 1489} Tmp_630 := __HAVOC_malloc(20);
    PDevExt_7 := actual_PDevExt_7;
    hRegKey := actual_hRegKey;
    PSymName := actual_PSymName;
    PpRegName := actual_PpRegName;
    call {:si_unique_call 1490} Tmp_616 := __HAVOC_malloc(168);
    call {:si_unique_call 1491} Tmp_619 := __HAVOC_malloc(148);
    call {:si_unique_call 1492} vslice_dummy_var_373 := __HAVOC_malloc(8);
    call {:si_unique_call 1493} Tmp_621 := __HAVOC_malloc(164);
    call {:si_unique_call 1494} Tmp_623 := __HAVOC_malloc(60);
    call {:si_unique_call 1495} Tmp_624 := __HAVOC_malloc(36);
    call {:si_unique_call 1496} Tmp_626 := __HAVOC_malloc(44);
    call {:si_unique_call 1497} vslice_dummy_var_374 := __HAVOC_malloc(8);
    call {:si_unique_call 1498} vslice_dummy_var_375 := __HAVOC_malloc(44);
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    havoc pDevObj_1;
    assume {:nonnull} pDevObj_1 != 0;
    assume pDevObj_1 > 0;
    havoc pDrvObj;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    call {:si_unique_call 1499} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_622;
    call {:si_unique_call 1500} sdv_560 := ExAllocatePoolWithTag(257, Tmp_622, -797279933);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_625;
    call {:si_unique_call 1501} sdv_RtlZeroMemory(0, Tmp_625);
    call {:si_unique_call 1502} sdv_564 := ExAllocatePoolWithTag(257, 258, -797279933);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_624 := strConst__li2bpl155;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_383;
    call {:si_unique_call 1503} status_18 := CyzGetRegistryKeyValue(hRegKey, Tmp_624, 18, vslice_dummy_var_383, 256);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_18 >= 0;
    goto L39;

  L39:
    call {:si_unique_call 1504} vslice_dummy_var_376 := corral_nondet();
    call {:si_unique_call 1505} vslice_dummy_var_377 := corral_nondet();
    call {:si_unique_call 1506} vslice_dummy_var_378 := corral_nondet();
    call {:si_unique_call 1507} vslice_dummy_var_371 := corral_nondet();
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_617;
    call {:si_unique_call 1508} sdv_562 := ExAllocatePoolWithTag(257, Tmp_617, -797279933);
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_614;
    call {:si_unique_call 1509} sdv_RtlZeroMemory(0, Tmp_614);
    call {:si_unique_call 1510} vslice_dummy_var_372 := corral_nondet();
    Tmp_623 := strConst__li2bpl170;
    call {:si_unique_call 1511} vslice_dummy_var_379 := CyzDbgPrintEx(4, Tmp_623);
    goto L69;

  L69:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1512} sdv_ExFreePool(0);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto L70;

  L70:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_18 >= 0;
    goto L76;

  L76:
    Tmp_612 := status_18;
    return;

  anon19_Then:
    assume {:partition} 0 > status_18;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1513} sdv_ExFreePool(0);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto L76;

  anon20_Then:
    goto L76;

  anon18_Then:
    goto L70;

  anon24_Then:
    status_18 := -1073741670;
    goto L69;

  anon17_Then:
    assume {:partition} 0 > status_18;
    Tmp_626 := strConst__li2bpl156;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_384;
    call {:si_unique_call 1514} status_18 := CyzGetRegistryKeyValue(hRegKey, Tmp_626, 22, vslice_dummy_var_384, 256);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_18 < 0;
    Tmp_621 := strConst__li2bpl167;
    call {:si_unique_call 1515} vslice_dummy_var_380 := CyzDbgPrintEx(14, Tmp_621);
    goto L69;

  anon21_Then:
    assume {:partition} 0 <= status_18;
    goto L39;

  anon23_Then:
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    call {:si_unique_call 1516} CyzLogError(pDrvObj, pDevObj_1, Tmp_629, Tmp_615, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_619 := strConst__li2bpl168;
    call {:si_unique_call 1517} vslice_dummy_var_381 := CyzDbgPrintEx(14, Tmp_619);
    status_18 := -1073741670;
    goto L69;

  anon22_Then:
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    call {:si_unique_call 1518} CyzLogError(pDrvObj, pDevObj_1, Tmp_618, Tmp_630, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_616 := strConst__li2bpl169;
    call {:si_unique_call 1519} vslice_dummy_var_382 := CyzDbgPrintEx(14, Tmp_616);
    status_18 := -1073741670;
    goto L69;
}



procedure {:origName "CyzAddToAllDevs"} CyzAddToAllDevs(actual_PListEntry: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzAddToAllDevs"} CyzAddToAllDevs(actual_PListEntry: int)
{
  var {:pointer} Tmp_631: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} PListEntry: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;

  anon0:
    call {:si_unique_call 1520} vslice_dummy_var_383 := __HAVOC_malloc(4);
    PListEntry := actual_PListEntry;
    call {:si_unique_call 1521} Tmp_631 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    Mem_T.INT4[Tmp_631] := oldIrql_5;
    call {:si_unique_call 1522} sdv_KeAcquireSpinLock(0, Tmp_631);
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_631];
    call {:si_unique_call 1523} vslice_dummy_var_384 := sdv_InsertTailList(AllDevObjs__CYZ_GLOBALS(CyzGlobals), PListEntry);
    call {:si_unique_call 1524} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller: int, actual_sdv_572: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller: int, actual_sdv_572: int)
{
  var {:pointer} caller: int;
  var {:scalar} sdv_572: int;

  anon0:
    caller := actual_caller;
    sdv_572 := actual_sdv_572;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_irql_current == 2;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_572 != sdv_irql_previous;
    call {:si_unique_call 1525} SLIC_ABORT_1_1(caller, sdv_572);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} sdv_572 == sdv_irql_previous;
    goto L2;

  anon10_Then:
    assume {:partition} sdv_irql_current != 2;
    call {:si_unique_call 1526} SLIC_ABORT_1_0(caller, sdv_572);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init21"} _sdv_init21();
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init21"} _sdv_init21()
{

  anon0:
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_1: int, actual_sdv_573: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_1: int, actual_sdv_573: int)
{
  var {:pointer} caller_1: int;
  var {:scalar} sdv_573: int;

  anon0:
    caller_1 := actual_caller_1;
    sdv_573 := actual_sdv_573;
    call {:si_unique_call 1527} SLIC_ERROR_ROUTINE(strConst__li2bpl171);
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_ABORT_1_1"} SLIC_ABORT_1_1(actual_caller_2: int, actual_sdv_574: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_1_1"} SLIC_ABORT_1_1(actual_caller_2: int, actual_sdv_574: int)
{
  var {:pointer} caller_2: int;
  var {:scalar} sdv_574: int;

  anon0:
    caller_2 := actual_caller_2;
    sdv_574 := actual_sdv_574;
    call {:si_unique_call 1528} SLIC_ERROR_ROUTINE(strConst__li2bpl172);
    return;
}



procedure {:origName "CyzClrRTS"} CyzClrRTS(actual_Context_23: int) returns (Tmp_633: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClrRTS"} CyzClrRTS(actual_Context_23: int) returns (Tmp_633: int)
{
  var {:pointer} Tmp_634: int;
  var {:scalar} Tmp_635: int;
  var {:pointer} Extension_22: int;
  var {:scalar} Tmp_636: int;
  var {:scalar} rs_3: int;
  var {:pointer} Context_23: int;
  var vslice_dummy_var_385: int;

  anon0:
    Context_23 := actual_Context_23;
    call {:si_unique_call 1529} Tmp_634 := __HAVOC_malloc(124);
    Extension_22 := Context_23;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_635;
    Tmp_634 := strConst__li2bpl173;
    call {:si_unique_call 1530} vslice_dummy_var_385 := CyzDbgPrintEx(13, Tmp_634);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 1531} rs_3 := corral_nondet();
    rs_3 := BAND(rs_3, BNOT(1));
    Tmp_636 := BOR(rs_3, 0);
    call {:si_unique_call 1532} CyzIssueCmd(Extension_22, 4, Tmp_636, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_633 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzClrDTR"} CyzClrDTR(actual_Context_24: int) returns (Tmp_638: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzClrDTR"} CyzClrDTR(actual_Context_24: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:scalar} Tmp_641: int;
  var {:pointer} Extension_23: int;
  var {:scalar} Tmp_642: int;
  var {:scalar} rs_4: int;
  var {:pointer} Context_24: int;
  var vslice_dummy_var_386: int;

  anon0:
    Context_24 := actual_Context_24;
    call {:si_unique_call 1533} Tmp_639 := __HAVOC_malloc(124);
    Extension_23 := Context_24;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_641;
    Tmp_639 := strConst__li2bpl174;
    call {:si_unique_call 1534} vslice_dummy_var_386 := CyzDbgPrintEx(13, Tmp_639);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1535} rs_4 := corral_nondet();
    rs_4 := BAND(rs_4, BNOT(4));
    Tmp_642 := BOR(rs_4, 0);
    call {:si_unique_call 1536} CyzIssueCmd(Extension_23, 4, Tmp_642, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_638 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzSetupNewHandFlow"} CyzSetupNewHandFlow(actual_Extension_24: int, actual_NewHandFlow: int) returns (Tmp_643: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetupNewHandFlow"} CyzSetupNewHandFlow(actual_Extension_24: int, actual_NewHandFlow: int) returns (Tmp_643: int)
{
  var {:scalar} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:scalar} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} Tmp_649: int;
  var {:scalar} New: int;
  var {:scalar} Tmp_650: int;
  var {:pointer} Tmp_651: int;
  var {:scalar} Tmp_652: int;
  var {:scalar} Tmp_653: int;
  var {:scalar} Tmp_654: int;
  var {:scalar} Tmp_655: int;
  var {:scalar} Tmp_656: int;
  var {:scalar} sdv_588: int;
  var {:scalar} Tmp_657: int;
  var {:scalar} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} Tmp_660: int;
  var {:scalar} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:scalar} Tmp_663: int;
  var {:pointer} Tmp_664: int;
  var {:scalar} Tmp_665: int;
  var {:scalar} Tmp_666: int;
  var {:scalar} Tmp_668: int;
  var {:scalar} sdv_605: int;
  var {:scalar} hw: int;
  var {:scalar} Tmp_669: int;
  var {:scalar} Tmp_670: int;
  var {:scalar} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:scalar} Tmp_673: int;
  var {:scalar} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:scalar} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} Tmp_680: int;
  var {:pointer} Extension_24: int;
  var {:pointer} NewHandFlow: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 1537} New := __HAVOC_malloc(16);
    Extension_24 := actual_Extension_24;
    NewHandFlow := actual_NewHandFlow;
    call {:si_unique_call 1538} Tmp_647 := __HAVOC_malloc(152);
    call {:si_unique_call 1539} Tmp_648 := __HAVOC_malloc(200);
    call {:si_unique_call 1540} Tmp_651 := __HAVOC_malloc(200);
    call {:si_unique_call 1541} Tmp_659 := __HAVOC_malloc(228);
    call {:si_unique_call 1542} Tmp_662 := __HAVOC_malloc(200);
    call {:si_unique_call 1543} Tmp_664 := __HAVOC_malloc(196);
    call {:si_unique_call 1544} Tmp_672 := __HAVOC_malloc(84);
    call {:si_unique_call 1545} Tmp_675 := __HAVOC_malloc(200);
    call {:si_unique_call 1546} Tmp_677 := __HAVOC_malloc(196);
    call {:si_unique_call 1547} Tmp_678 := __HAVOC_malloc(200);
    call {:si_unique_call 1548} Tmp_679 := __HAVOC_malloc(200);
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_655;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_660;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Tmp_655 == Tmp_660;
    goto L13;

  L13:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_680;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_656;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} Tmp_680 == Tmp_656;
    goto L18;

  L18:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_654;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_671;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Tmp_654 == Tmp_671;
    goto L23;

  L23:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_657;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_646;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Tmp_657 == Tmp_646;
    goto L28;

  L28:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_666;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_658;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Tmp_666 == Tmp_658;
    goto L33;

  L33:
    call {:si_unique_call 1549} CyzIssueCmd(Extension_24, 3, 0, 0);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    Tmp_643 := 0;
    goto LM2;

  LM2:
    return;

  anon146_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon145_Then:
    assume {:partition} Tmp_666 != Tmp_658;
    goto L29;

  L29:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    call {:si_unique_call 1550} hw := corral_nondet();
    hw := BOR(hw, 2048);
    goto L49;

  L49:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 1551} hw := corral_nondet();
    hw := BOR(hw, 512);
    goto L61;

  L61:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    call {:si_unique_call 1552} hw := corral_nondet();
    hw := BOR(hw, 256);
    goto L33;

  anon115_Then:
    call {:si_unique_call 1553} hw := corral_nondet();
    hw := BAND(hw, BNOT(256));
    goto L33;

  anon114_Then:
    call {:si_unique_call 1554} hw := corral_nondet();
    hw := BAND(hw, BNOT(512));
    goto L61;

  anon113_Then:
    call {:si_unique_call 1555} hw := corral_nondet();
    hw := BAND(hw, BNOT(2048));
    goto L49;

  anon112_Then:
    goto L29;

  anon144_Then:
    assume {:partition} Tmp_657 != Tmp_646;
    goto L24;

  L24:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1556} CyzProdXonXoff(Extension_24, 1);
    goto L28;

  anon116_Then:
    goto L28;

  anon111_Then:
    goto L28;

  anon110_Then:
    goto L24;

  anon143_Then:
    assume {:partition} Tmp_654 != Tmp_671;
    goto L19;

  L19:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1557} CyzProdXonXoff(Extension_24, 0);
    goto L23;

  anon118_Then:
    goto L23;

  anon109_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1558} CyzProdXonXoff(Extension_24, 1);
    goto L23;

  anon117_Then:
    goto L23;

  anon108_Then:
    goto L19;

  anon140_Then:
    assume {:partition} Tmp_680 != Tmp_656;
    goto L14;

  L14:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_669;
    Tmp_672 := strConst__li2bpl177;
    call {:si_unique_call 1559} vslice_dummy_var_397 := CyzDbgPrintEx(13, Tmp_672);
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_676;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Tmp_676 == 128;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_644;
    Tmp_651 := strConst__li2bpl178;
    call {:si_unique_call 1560} vslice_dummy_var_398 := CyzDbgPrintEx(13, Tmp_651);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1561} vslice_dummy_var_399 := CyzSetRTS(Extension_24);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon142_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon121_Then:
    goto L18;

  anon120_Then:
    call {:si_unique_call 1562} vslice_dummy_var_387 := CyzSetRTS(Extension_24);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon147_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon119_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_649;
    Tmp_677 := strConst__li2bpl179;
    call {:si_unique_call 1563} vslice_dummy_var_400 := CyzDbgPrintEx(13, Tmp_677);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1564} vslice_dummy_var_401 := CyzClrRTS(Extension_24);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon148_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon141_Then:
    assume {:partition} Tmp_676 != 128;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_653;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Tmp_653 == 64;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_663;
    Tmp_648 := strConst__li2bpl180;
    call {:si_unique_call 1565} vslice_dummy_var_402 := CyzDbgPrintEx(13, Tmp_648);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L134;

  L134:
    call {:si_unique_call 1566} vslice_dummy_var_388 := CyzSetRTS(Extension_24);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon122_Then:
    goto L134;

  anon149_Then:
    assume {:partition} Tmp_653 != 64;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_645;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} Tmp_645 == 192;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_673;
    Tmp_659 := strConst__li2bpl181;
    call {:si_unique_call 1567} vslice_dummy_var_403 := CyzDbgPrintEx(13, Tmp_659);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L145;

  L145:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L156;

  L156:
    call {:si_unique_call 1568} vslice_dummy_var_389 := CyzSetRTS(Extension_24);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon153_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon152_Then:
    call {:si_unique_call 1569} sdv_605 := CyzAmountInTxBuffer(Extension_24);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} sdv_605 == 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    call {:si_unique_call 1570} sdv_588 := sdv_IsListEmpty(0);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} sdv_588 != 0;
    goto L167;

  L167:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1571} vslice_dummy_var_404 := CyzPerhapsLowerRTS#1(Extension_24);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon154_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon128_Then:
    assume {:partition} sdv_588 == 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto L167;

  anon129_Then:
    goto L156;

  anon127_Then:
    goto L156;

  anon126_Then:
    goto L156;

  anon125_Then:
    assume {:partition} sdv_605 != 0;
    goto L156;

  anon124_Then:
    goto L145;

  anon151_Then:
    assume {:partition} Tmp_645 != 192;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_665;
    Tmp_662 := strConst__li2bpl180;
    call {:si_unique_call 1572} vslice_dummy_var_405 := CyzDbgPrintEx(13, Tmp_662);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L171;

  L171:
    call {:si_unique_call 1573} vslice_dummy_var_390 := CyzClrRTS(Extension_24);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  anon155_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    goto L171;

  anon107_Then:
    goto L14;

  anon137_Then:
    assume {:partition} Tmp_655 != Tmp_660;
    goto L9;

  L9:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_652;
    Tmp_647 := strConst__li2bpl175;
    call {:si_unique_call 1574} vslice_dummy_var_394 := CyzDbgPrintEx(13, Tmp_647);
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_668;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Tmp_668 == 2;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_674;
    Tmp_678 := strConst__li2bpl176;
    call {:si_unique_call 1575} vslice_dummy_var_395 := CyzDbgPrintEx(13, Tmp_678);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1576} vslice_dummy_var_396 := CyzSetDTR(Extension_24);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon139_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon135_Then:
    goto L13;

  anon134_Then:
    call {:si_unique_call 1577} vslice_dummy_var_391 := CyzSetDTR(Extension_24);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon156_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon133_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_661;
    Tmp_664 := strConst__li2bpl182;
    call {:si_unique_call 1578} vslice_dummy_var_406 := CyzDbgPrintEx(13, Tmp_664);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1579} vslice_dummy_var_407 := CyzClrDTR(Extension_24);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon157_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon138_Then:
    assume {:partition} Tmp_668 != 2;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_670;
    Tmp_675 := strConst__li2bpl183;
    call {:si_unique_call 1580} vslice_dummy_var_408 := CyzDbgPrintEx(13, Tmp_675);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L209;

  L209:
    call {:si_unique_call 1581} vslice_dummy_var_392 := CyzSetDTR(Extension_24);
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon158_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon132_Then:
    goto L209;

  anon130_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_650;
    Tmp_679 := strConst__li2bpl184;
    call {:si_unique_call 1582} vslice_dummy_var_409 := CyzDbgPrintEx(13, Tmp_679);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L217;

  L217:
    call {:si_unique_call 1583} vslice_dummy_var_393 := CyzClrDTR(Extension_24);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon131_Then:
    goto L217;

  anon136_Then:
    goto L9;
}



procedure {:origName "CyzHandleReducedIntBuffer"} CyzHandleReducedIntBuffer(actual_Extension_25: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzHandleReducedIntBuffer"} CyzHandleReducedIntBuffer(actual_Extension_25: int)
{
  var {:pointer} Extension_25: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;

  anon0:
    call {:si_unique_call 1584} vslice_dummy_var_410 := __HAVOC_malloc(4);
    Extension_25 := actual_Extension_25;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1585} vslice_dummy_var_411 := CyzSetDTR(Extension_25);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L6;

  L6:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1586} vslice_dummy_var_412 := CyzSetRTS(Extension_25);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L11;

  L11:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 1587} CyzProdXonXoff(Extension_25, 1);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon19_Then:
    goto L1;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    goto L11;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L6;

  anon16_Then:
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "CyzSetDTR"} CyzSetDTR(actual_Context_25: int) returns (Tmp_683: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetDTR"} CyzSetDTR(actual_Context_25: int) returns (Tmp_683: int)
{
  var {:scalar} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Extension_26: int;
  var {:scalar} Tmp_687: int;
  var {:scalar} rs_5: int;
  var {:pointer} Context_25: int;
  var vslice_dummy_var_413: int;

  anon0:
    Context_25 := actual_Context_25;
    call {:si_unique_call 1588} Tmp_685 := __HAVOC_malloc(120);
    Extension_26 := Context_25;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_684;
    Tmp_685 := strConst__li2bpl185;
    call {:si_unique_call 1589} vslice_dummy_var_413 := CyzDbgPrintEx(13, Tmp_685);
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    call {:si_unique_call 1590} rs_5 := corral_nondet();
    rs_5 := BOR(rs_5, 4);
    Tmp_687 := BOR(rs_5, 0);
    call {:si_unique_call 1591} CyzIssueCmd(Extension_26, 4, Tmp_687, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_683 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzProdXonXoff"} CyzProdXonXoff(actual_Extension_27: int, actual_SendXon: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProdXonXoff"} CyzProdXonXoff(actual_Extension_27: int, actual_SendXon: int)
{
  var {:pointer} Extension_27: int;
  var {:scalar} SendXon: int;
  var vslice_dummy_var_414: int;

  anon0:
    call {:si_unique_call 1592} vslice_dummy_var_414 := __HAVOC_malloc(4);
    Extension_27 := actual_Extension_27;
    SendXon := actual_SendXon;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} SendXon != 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} SendXon == 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    goto L1;
}



procedure {:origName "CyzTurnOffBreak"} CyzTurnOffBreak(actual_Context_26: int) returns (Tmp_690: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTurnOffBreak"} CyzTurnOffBreak(actual_Context_26: int) returns (Tmp_690: int)
{
  var {:pointer} Extension_28: int;
  var {:pointer} Context_26: int;
  var vslice_dummy_var_415: int;

  anon0:
    Context_26 := actual_Context_26;
    Extension_28 := Context_26;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1593} CyzIssueCmd(Extension_28, 68, 0, 0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L14;

  L14:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    call {:si_unique_call 1594} vslice_dummy_var_415 := CyzPerhapsLowerRTS#1(Extension_28);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  L7:
    Tmp_690 := 0;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L19;

  L19:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L14;

  anon17_Then:
    goto L7;

  anon15_Then:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L19;

  anon16_Then:
    goto L14;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    goto L7;
}



procedure {:origName "CyzTurnOnBreak"} CyzTurnOnBreak(actual_Context_27: int) returns (Tmp_692: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTurnOnBreak"} CyzTurnOnBreak(actual_Context_27: int) returns (Tmp_692: int)
{
  var {:scalar} Tmp_694: int;
  var {:pointer} Extension_29: int;
  var {:pointer} Context_27: int;
  var vslice_dummy_var_416: int;

  anon0:
    Context_27 := actual_Context_27;
    Extension_29 := Context_27;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_694;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Tmp_694 == 192;
    call {:si_unique_call 1595} vslice_dummy_var_416 := CyzSetRTS(Extension_29);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    goto L8;

  L8:
    call {:si_unique_call 1596} CyzIssueCmd(Extension_29, 67, 0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    Tmp_692 := 0;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Tmp_694 != 192;
    goto L8;
}



procedure {:origName "CyzSetRTS"} CyzSetRTS(actual_Context_28: int) returns (Tmp_695: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetRTS"} CyzSetRTS(actual_Context_28: int) returns (Tmp_695: int)
{
  var {:scalar} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Extension_30: int;
  var {:scalar} Tmp_699: int;
  var {:scalar} rs_6: int;
  var {:pointer} Context_28: int;
  var vslice_dummy_var_417: int;

  anon0:
    Context_28 := actual_Context_28;
    call {:si_unique_call 1597} Tmp_698 := __HAVOC_malloc(120);
    Extension_30 := Context_28;
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    havoc Tmp_699;
    Tmp_698 := strConst__li2bpl186;
    call {:si_unique_call 1598} vslice_dummy_var_417 := CyzDbgPrintEx(13, Tmp_698);
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    call {:si_unique_call 1599} rs_6 := corral_nondet();
    rs_6 := BOR(rs_6, 1);
    Tmp_697 := BOR(rs_6, 0);
    call {:si_unique_call 1600} CyzIssueCmd(Extension_30, 4, Tmp_697, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_695 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzPretendXoff"} CyzPretendXoff(actual_Context_29: int) returns (Tmp_700: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPretendXoff"} CyzPretendXoff(actual_Context_29: int) returns (Tmp_700: int)
{
  var {:scalar} Tmp_701: int;
  var {:scalar} sdv_618: int;
  var {:pointer} Extension_31: int;
  var {:pointer} Context_29: int;

  anon0:
    Context_29 := actual_Context_29;
    Extension_31 := Context_29;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_701;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Tmp_701 == 192;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    call {:si_unique_call 1601} sdv_618 := CyzInsertQueueDpc#1(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_31), 0, 0, Extension_31);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_618 != 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto L8;

  L8:
    Tmp_700 := 0;
    goto LM2;

  LM2:
    return;

  anon7_Then:
    assume {:partition} sdv_618 == 0;
    goto L8;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} Tmp_701 != 192;
    goto L8;
}



procedure {:origName "CyzSetHandFlow"} CyzSetHandFlow(actual_Context_30: int) returns (Tmp_708: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetHandFlow"} CyzSetHandFlow(actual_Context_30: int) returns (Tmp_708: int)
{
  var {:pointer} S_10: int;
  var {:pointer} HandFlow_1: int;
  var {:pointer} Extension_33: int;
  var {:pointer} Context_30: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;

  anon0:
    Context_30 := actual_Context_30;
    S_10 := Context_30;
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    havoc Extension_33;
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    havoc HandFlow_1;
    call {:si_unique_call 1602} vslice_dummy_var_419 := CyzSetupNewHandFlow(Extension_33, HandFlow_1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1603} vslice_dummy_var_418 := CyzHandleModemUpdate#1(Extension_33, 0, 0);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_708 := 0;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzPretendXon"} CyzPretendXon(actual_Context_31: int) returns (Tmp_710: int);
  free ensures {:va_keep} Tmp_710 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPretendXon"} CyzPretendXon(actual_Context_31: int) returns (Tmp_710: int)
{
  var {:pointer} Extension_34: int;
  var {:pointer} Context_31: int;

  anon0:
    Context_31 := actual_Context_31;
    Extension_34 := Context_31;
    assume {:nonnull} Extension_34 != 0;
    assume Extension_34 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_34 != 0;
    assume Extension_34 > 0;
    goto L6;

  L6:
    Tmp_710 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_420: int;

  anon0:
    call {:si_unique_call 1604} vslice_dummy_var_420 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartPurge"} CyzStartPurge(actual_Extension_36: int) returns (Tmp_717: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartPurge"} CyzStartPurge(actual_Extension_36: int) returns (Tmp_717: int)
{
  var {:pointer} Tmp_718: int;
  var {:pointer} Tmp_719: int;
  var {:scalar} Mask_2: int;
  var {:pointer} Tmp_720: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} NewIrp_2: int;
  var {:pointer} Tmp_721: int;
  var {:scalar} pollIrql_7: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} Extension_36: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;

  anon0:
    call {:si_unique_call 1605} NewIrp_2 := __HAVOC_malloc(4);
    Extension_36 := actual_Extension_36;
    goto L5;

  L5:
    call {:si_unique_call 1606} Tmp_718, Tmp_719, Mask_2, Tmp_720, OldIrql_5, Tmp_721, pollIrql_7, Tmp_722, vslice_dummy_var_421 := CyzStartPurge_loop_L5(Tmp_718, Tmp_719, Mask_2, Tmp_720, OldIrql_5, NewIrp_2, Tmp_721, pollIrql_7, Tmp_722, Extension_36, vslice_dummy_var_421);
    goto L5_last;

  L5_last:
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    Mask_2 := Mem_T.INT4[Tmp_721];
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mask_2, 1) != 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_385;
    call {:si_unique_call 1607} CyzKillAllReadsOrWrites#1(vslice_dummy_var_385, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_386;
    call {:si_unique_call 1608} CyzKillAllReadsOrWrites#1(vslice_dummy_var_386, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  L7:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(Mask_2, 2) != 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_387;
    call {:si_unique_call 1609} CyzKillAllReadsOrWrites#1(vslice_dummy_var_387, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  L14:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(Mask_2, 8) != 0;
    call {:si_unique_call 1610} Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    Mem_T.INT4[Tmp_720] := OldIrql_5;
    call {:si_unique_call 1611} sdv_KeAcquireSpinLock(0, Tmp_720);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    OldIrql_5 := Mem_T.INT4[Tmp_720];
    call {:si_unique_call 1612} Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    Mem_T.INT4[Tmp_720] := pollIrql_7;
    call {:si_unique_call 1613} sdv_KeAcquireSpinLock(0, Tmp_720);
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    pollIrql_7 := Mem_T.INT4[Tmp_720];
    call {:si_unique_call 1614} vslice_dummy_var_421 := CyzPurgeInterruptBuff(Extension_36);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1615} sdv_KeReleaseSpinLock(0, pollIrql_7);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1616} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  L18:
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    call {:si_unique_call 1617} CyzGetNextIrp(CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(Extension_36), PurgeQueue__CYZ_DEVICE_EXTENSION(Extension_36), NewIrp_2, 1, Extension_36);
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_717 := 0;
    goto LM2;

  LM2:
    return;

  anon23_Then:
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} BAND(Mask_2, 8) == 0;
    goto L18;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    assume {:partition} BAND(Mask_2, 2) == 0;
    goto L14;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:partition} BAND(Mask_2, 1) == 0;
    goto L7;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_422: int;

  anon0:
    call {:si_unique_call 1618} vslice_dummy_var_422 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzPurgeInterruptBuff"} CyzPurgeInterruptBuff(actual_Context_33: int) returns (Tmp_725: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPurgeInterruptBuff"} CyzPurgeInterruptBuff(actual_Context_33: int) returns (Tmp_725: int)
{
  var {:scalar} rx_2: int;
  var {:pointer} Tmp_726: int;
  var {:scalar} rx_3: int;
  var {:scalar} rxchar: int;
  var {:pointer} Extension_37: int;
  var {:scalar} Tmp_729: int;
  var {:pointer} Context_33: int;

  anon0:
    Context_33 := actual_Context_33;
    Extension_37 := Context_33;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    call {:si_unique_call 1619} rx_3 := corral_nondet();
    call {:si_unique_call 1620} rx_2 := corral_nondet();
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L20;

  L20:
    call {:si_unique_call 1621} rx_2, Tmp_726, rxchar, Tmp_729 := CyzPurgeInterruptBuff_loop_L20(rx_2, Tmp_726, rx_3, rxchar, Extension_37, Tmp_729);
    goto L20_last;

  L20_last:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} rx_2 != rx_3;
    Tmp_729 := rx_2;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    havoc Tmp_726;
    call {:si_unique_call 1622} rxchar := corral_nondet();
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    rx_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon19_Else_dummy;

  anon19_Else_dummy:
    assume false;
    return;

  anon19_Then:
    goto anon19_Then_dummy;

  anon19_Then_dummy:
    assume false;
    return;

  anon18_Then:
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    assume false;
    return;

  anon17_Then:
    rx_2 := rx_2 + 1;
    goto L32;

  anon16_Then:
    assume {:partition} rx_2 == rx_3;
    goto L35;

  L35:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    call {:si_unique_call 1623} CyzHandleReducedIntBuffer(Extension_37);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L36;

  L36:
    Tmp_725 := 0;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    goto L36;

  anon15_Then:
    rx_2 := rx_3;
    goto L35;
}



procedure {:origName "CyzCompleteIfError"} CyzCompleteIfError(actual_DeviceObject_9: int, actual_Irp_9: int) returns (Tmp_730: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_730 == -1073741536 || Tmp_730 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteIfError"} CyzCompleteIfError(actual_DeviceObject_9: int, actual_Irp_9: int) returns (Tmp_730: int)
{
  var {:pointer} irpSp_1: int;
  var {:pointer} Tmp_732: int;
  var {:scalar} status_19: int;
  var {:pointer} extension_10: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_423: int;

  anon0:
    DeviceObject_9 := actual_DeviceObject_9;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 1624} Tmp_732 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc extension_10;
    status_19 := 0;
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1625} irpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L17;

  L17:
    status_19 := -1073741536;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Tmp_732 := strConst__li2bpl2;
    call {:si_unique_call 1626} vslice_dummy_var_423 := CyzDbgPrintEx(9, Tmp_732);
    call {:si_unique_call 1627} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1628} CyzIRPEpilogue(extension_10);
    goto L8;

  L8:
    Tmp_730 := status_19;
    return;

  anon10_Then:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  anon11_Then:
    goto L8;

  anon9_Then:
    goto L8;

  anon12_Then:
    goto L8;
}



procedure {:origName "CyzLogError"} CyzLogError(actual_DriverObject: int, actual_DeviceObject_10: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzLogError"} CyzLogError(actual_DriverObject: int, actual_DeviceObject_10: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int)
{
  var {:scalar} P1: int;
  var {:scalar} P2: int;
  var {:scalar} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:scalar} sdv_635: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} sdv_636: int;
  var {:scalar} dumpToAllocate: int;
  var {:pointer} sdv_637: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_740: int;
  var {:scalar} Tmp_741: int;
  var {:pointer} Tmp_742: int;
  var {:pointer} ptrToFirstInsert: int;
  var {:scalar} Tmp_744: int;
  var {:pointer} DriverObject: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} structPtr888P1: int;
  var {:pointer} structPtr888P2: int;
  var {:scalar} SequenceNumber: int;
  var {:scalar} MajorFunctionCode: int;
  var {:scalar} RetryCount: int;
  var {:scalar} UniqueErrorValue: int;
  var {:scalar} FinalStatus: int;
  var {:scalar} SpecificIOStatus: int;
  var {:scalar} LengthOfInsert1: int;
  var {:pointer} Insert1: int;
  var {:scalar} LengthOfInsert2: int;
  var {:pointer} Insert2: int;
  var vslice_dummy_var_424: int;

  anon0:
    call {:si_unique_call 1629} P1 := __HAVOC_malloc(20);
    call {:si_unique_call 1630} P2 := __HAVOC_malloc(20);
    call {:si_unique_call 1631} Tmp_733 := __HAVOC_malloc(20);
    call {:si_unique_call 1632} vslice_dummy_var_424 := __HAVOC_malloc(4);
    call {:si_unique_call 1633} Tmp_741 := __HAVOC_malloc(20);
    DriverObject := actual_DriverObject;
    DeviceObject_10 := actual_DeviceObject_10;
    structPtr888P1 := actual_structPtr888P1;
    structPtr888P2 := actual_structPtr888P2;
    SequenceNumber := actual_SequenceNumber;
    MajorFunctionCode := actual_MajorFunctionCode;
    RetryCount := actual_RetryCount;
    UniqueErrorValue := actual_UniqueErrorValue;
    FinalStatus := actual_FinalStatus;
    SpecificIOStatus := actual_SpecificIOStatus;
    LengthOfInsert1 := actual_LengthOfInsert1;
    Insert1 := actual_Insert1;
    LengthOfInsert2 := actual_LengthOfInsert2;
    Insert2 := actual_Insert2;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    call {:si_unique_call 1634} Tmp_734 := __HAVOC_malloc(4);
    call {:si_unique_call 1635} Tmp_735 := __HAVOC_malloc(4);
    call {:si_unique_call 1636} Tmp_738 := __HAVOC_malloc(4);
    call {:si_unique_call 1637} Tmp_740 := __HAVOC_malloc(4);
    call {:si_unique_call 1638} Tmp_742 := __HAVOC_malloc(4);
    dumpToAllocate := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Insert1 != 0;
    goto L11;

  L11:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Insert2 != 0;
    goto L13;

  L13:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} DeviceObject_10 != 0;
    goto L16;

  L16:
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    call {:si_unique_call 1639} sdv_635 := CyzMemCompare(P1, 1, Tmp_741, 1);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_635 != 0;
    dumpToAllocate := 8;
    goto L21;

  L21:
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    call {:si_unique_call 1640} sdv_636 := CyzMemCompare(P2, 1, Tmp_733, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_636 != 0;
    dumpToAllocate := dumpToAllocate + 8;
    goto L27;

  L27:
    Tmp_744 := 48 + dumpToAllocate + LengthOfInsert1 + LengthOfInsert2;
    call {:si_unique_call 1641} sdv_637 := IoAllocateErrorLogEntry(0, Tmp_744);
    errorLogEntry := sdv_637;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} errorLogEntry != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} dumpToAllocate != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_738;
    call {:si_unique_call 1642} sdv_RtlCopyMemory(0, 0, 8);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} dumpToAllocate > 8;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_740;
    call {:si_unique_call 1643} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_734;
    ptrToFirstInsert := Tmp_734;
    goto L54;

  L54:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} LengthOfInsert1 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1644} sdv_RtlCopyMemory(0, 0, LengthOfInsert1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} LengthOfInsert2 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1645} sdv_RtlCopyMemory(0, 0, LengthOfInsert2);
    goto L56;

  L56:
    call {:si_unique_call 1646} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} LengthOfInsert2 == 0;
    goto L56;

  anon30_Then:
    assume {:partition} LengthOfInsert1 == 0;
    goto L56;

  anon25_Then:
    assume {:partition} 8 >= dumpToAllocate;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_742;
    ptrToFirstInsert := Tmp_742;
    goto L54;

  anon29_Then:
    assume {:partition} dumpToAllocate == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_735;
    ptrToFirstInsert := Tmp_735;
    goto L54;

  anon28_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_636 == 0;
    goto L27;

  anon23_Then:
    assume {:partition} sdv_635 == 0;
    goto L21;

  anon22_Then:
    assume {:partition} DeviceObject_10 == 0;
    goto L16;

  anon21_Then:
    assume {:partition} Insert2 == 0;
    LengthOfInsert2 := 0;
    goto L13;

  anon27_Then:
    assume {:partition} Insert1 == 0;
    LengthOfInsert1 := 0;
    goto L11;
}



procedure {:origName "CyzUnstallIrps"} CyzUnstallIrps(actual_PDevExt_8: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUnstallIrps"} CyzUnstallIrps(actual_PDevExt_8: int)
{
  var {:pointer} Tmp_745: int;
  var {:pointer} Tmp_746: int;
  var {:pointer} sdv_641: int;
  var {:pointer} Tmp_747: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} pIrpStack_4: int;
  var {:scalar} Tmp_749: int;
  var {:pointer} pIrp_1: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} pDevObj_2: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} pDrvObj_1: int;
  var {:pointer} pIrpLink: int;
  var {:pointer} PDevExt_8: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;

  anon0:
    call {:si_unique_call 1647} vslice_dummy_var_425 := __HAVOC_malloc(4);
    PDevExt_8 := actual_PDevExt_8;
    call {:si_unique_call 1648} Tmp_745 := __HAVOC_malloc(124);
    call {:si_unique_call 1649} Tmp_747 := __HAVOC_malloc(112);
    call {:si_unique_call 1650} Tmp_750 := __HAVOC_malloc(84);
    call {:si_unique_call 1651} Tmp_751 := __HAVOC_malloc(68);
    Tmp_750 := strConst__li2bpl187;
    call {:si_unique_call 1652} vslice_dummy_var_426 := CyzDbgPrintEx(2, Tmp_750);
    call {:si_unique_call 1653} Tmp_746 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    Mem_T.INT4[Tmp_746] := oldIrql_6;
    call {:si_unique_call 1654} IoAcquireCancelSpinLock(Tmp_746);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    oldIrql_6 := Mem_T.INT4[Tmp_746];
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L16;

  L16:
    call {:si_unique_call 1655} Tmp_745, Tmp_746, sdv_641, Tmp_747, oldIrql_6, pIrpStack_4, Tmp_749, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, vslice_dummy_var_427, vslice_dummy_var_428, vslice_dummy_var_429 := CyzUnstallIrps_loop_L16(Tmp_745, Tmp_746, sdv_641, Tmp_747, oldIrql_6, pIrpStack_4, Tmp_749, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, PDevExt_8, vslice_dummy_var_427, vslice_dummy_var_428, vslice_dummy_var_429);
    goto L16_last;

  L16_last:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1656} sdv_641 := sdv_containing_record(pIrpLink, 88);
    pIrp_1 := sdv_641;
    call {:si_unique_call 1657} vslice_dummy_var_427 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1658} pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(pIrp_1);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    havoc pDevObj_2;
    assume {:nonnull} pDevObj_2 != 0;
    assume pDevObj_2 > 0;
    havoc pDrvObj_1;
    call {:si_unique_call 1659} vslice_dummy_var_428 := sdv_IoSetCancelRoutine(pIrp_1, 0);
    call {:si_unique_call 1660} IoReleaseCancelSpinLock(oldIrql_6);
    Tmp_745 := strConst__li2bpl188;
    call {:si_unique_call 1661} vslice_dummy_var_429 := CyzDbgPrintEx(12, Tmp_745);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    havoc Tmp_749;
    assume {:nonnull} pDrvObj_1 != 0;
    assume pDrvObj_1 > 0;
    havoc Tmp_747;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume Tmp_749 != 27;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume Tmp_749 != 26;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Tmp_749 != 25;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume Tmp_749 != 24;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume Tmp_749 != 23;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume Tmp_749 != 22;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume Tmp_749 != 21;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume Tmp_749 != 20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume Tmp_749 != 19;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume Tmp_749 != 18;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume Tmp_749 != 17;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume Tmp_749 != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume Tmp_749 != 15;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume Tmp_749 != 14;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume Tmp_749 != 13;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume Tmp_749 != 12;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume Tmp_749 != 11;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume Tmp_749 != 10;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume Tmp_749 != 9;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume Tmp_749 != 8;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume Tmp_749 != 7;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume Tmp_749 != 6;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume Tmp_749 != 5;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume Tmp_749 != 4;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume Tmp_749 != 3;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume Tmp_749 != 2;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume Tmp_749 != 1;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume false;
    return;

  anon87_Then:
    assume Tmp_749 == 0;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747] == 0;
    goto L45;

  L45:
    call {:si_unique_call 1662} Tmp_746 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    Mem_T.INT4[Tmp_746] := oldIrql_6;
    call {:si_unique_call 1663} IoAcquireCancelSpinLock(Tmp_746);
    assume {:nonnull} Tmp_746 != 0;
    assume Tmp_746 > 0;
    oldIrql_6 := Mem_T.INT4[Tmp_746];
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon86_Then:
    assume Tmp_749 == 1;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 1 * 4] == 0;
    goto L45;

  anon85_Then:
    assume Tmp_749 == 2;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 2 * 4] == 0;
    goto L45;

  anon84_Then:
    assume Tmp_749 == 3;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 3 * 4] == 0;
    goto L45;

  anon83_Then:
    assume Tmp_749 == 4;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 4 * 4] == 0;
    goto L45;

  anon82_Then:
    assume Tmp_749 == 5;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 5 * 4] == 0;
    goto L45;

  anon81_Then:
    assume Tmp_749 == 6;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 6 * 4] == 0;
    goto L45;

  anon80_Then:
    assume Tmp_749 == 7;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 7 * 4] == 0;
    goto L45;

  anon79_Then:
    assume Tmp_749 == 8;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 8 * 4] == 0;
    goto L45;

  anon78_Then:
    assume Tmp_749 == 9;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 9 * 4] == 0;
    goto L45;

  anon77_Then:
    assume Tmp_749 == 10;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 10 * 4] == 0;
    goto L45;

  anon76_Then:
    assume Tmp_749 == 11;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 11 * 4] == 0;
    goto L45;

  anon75_Then:
    assume Tmp_749 == 12;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 12 * 4] == 0;
    goto L45;

  anon74_Then:
    assume Tmp_749 == 13;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 13 * 4] == 0;
    goto L45;

  anon73_Then:
    assume Tmp_749 == 14;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 14 * 4] == 0;
    goto L45;

  anon72_Then:
    assume Tmp_749 == 15;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 15 * 4] == 0;
    goto L45;

  anon71_Then:
    assume Tmp_749 == 16;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 16 * 4] == 0;
    goto L45;

  anon70_Then:
    assume Tmp_749 == 17;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 17 * 4] == 0;
    goto L45;

  anon69_Then:
    assume Tmp_749 == 18;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 18 * 4] == 0;
    goto L45;

  anon68_Then:
    assume Tmp_749 == 19;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 19 * 4] == 0;
    goto L45;

  anon67_Then:
    assume Tmp_749 == 20;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 20 * 4] == 0;
    goto L45;

  anon66_Then:
    assume Tmp_749 == 21;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 21 * 4] == 0;
    goto L45;

  anon65_Then:
    assume Tmp_749 == 22;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 22 * 4] == 0;
    goto L45;

  anon64_Then:
    assume Tmp_749 == 23;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 23 * 4] == 0;
    goto L45;

  anon63_Then:
    assume Tmp_749 == 24;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 24 * 4] == 0;
    goto L45;

  anon62_Then:
    assume Tmp_749 == 25;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 25 * 4] == 0;
    goto L45;

  anon61_Then:
    assume Tmp_749 == 26;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 26 * 4] == 0;
    goto L45;

  anon60_Then:
    assume Tmp_749 == 27;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume Mem_T.INT4[Tmp_747 + 27 * 4] == 0;
    goto L45;

  anon59_Then:
    call {:si_unique_call 1664} IoReleaseCancelSpinLock(oldIrql_6);
    Tmp_751 := strConst__li2bpl189;
    call {:si_unique_call 1665} vslice_dummy_var_430 := CyzDbgPrintEx(2, Tmp_751);
    return;
}



procedure {:origName "CyzUnlockPages"} CyzUnlockPages(actual_PDpc: int, actual_PDeferredContext: int, actual_PSysContext1: int, actual_PSysContext2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUnlockPages"} CyzUnlockPages(actual_PDpc: int, actual_PDeferredContext: int, actual_PSysContext1: int, actual_PSysContext2: int)
{
  var {:pointer} pDevExt_14: int;
  var {:pointer} PDeferredContext: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;

  anon0:
    call {:si_unique_call 1666} vslice_dummy_var_431 := __HAVOC_malloc(4);
    PDeferredContext := actual_PDeferredContext;
    pDevExt_14 := PDeferredContext;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1667} vslice_dummy_var_432 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(pDevExt_14), 0, 0);
    return;
}



procedure {:origName "CyzDpcEpilogue"} CyzDpcEpilogue(actual_PDevExt_9: int, actual_PDpc_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDpcEpilogue"} CyzDpcEpilogue(actual_PDevExt_9: int, actual_PDpc_1: int)
{
  var {:scalar} pendingCnt: int;
  var {:pointer} Tmp_755: int;
  var {:pointer} PDevExt_9: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_388: int;

  anon0:
    call {:si_unique_call 1668} vslice_dummy_var_433 := __HAVOC_malloc(4);
    PDevExt_9 := actual_PDevExt_9;
    call {:si_unique_call 1669} Tmp_755 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    havoc vslice_dummy_var_388;
    Mem_T.INT4[Tmp_755] := vslice_dummy_var_388;
    call {:si_unique_call 1670} pendingCnt := sdv_InterlockedDecrement(Tmp_755);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_755 != 0;
    assume Tmp_755 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt == 0;
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    call {:si_unique_call 1671} vslice_dummy_var_434 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_9), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt != 0;
    goto L1;
}



procedure {:origName "CyzSetTimer"} CyzSetTimer(actual_Timer: int, actual_SD2_2: int, actual_Dpc_1: int, actual_PDevExt_10: int) returns (Tmp_756: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_756 == 1 || Tmp_756 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetTimer"} CyzSetTimer(actual_Timer: int, actual_SD2_2: int, actual_Dpc_1: int, actual_PDevExt_10: int) returns (Tmp_756: int)
{
  var {:scalar} DueTime_2: int;
  var {:pointer} Tmp_757: int;
  var {:scalar} set: int;
  var {:pointer} SD2_2: int;
  var {:pointer} PDevExt_10: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;

  anon0:
    call {:si_unique_call 1672} DueTime_2 := __HAVOC_malloc(20);
    SD2_2 := actual_SD2_2;
    PDevExt_10 := actual_PDevExt_10;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_2 != 0;
    assume SD2_2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_2 != 0;
    assume SD2_2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_2 != 0;
    assume SD2_2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_2 != 0;
    assume SD2_2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2_2 != 0;
    assume SD2_2 > 0;
    call {:si_unique_call 1673} Tmp_757 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    havoc vslice_dummy_var_389;
    Mem_T.INT4[Tmp_757] := vslice_dummy_var_389;
    call {:si_unique_call 1674} vslice_dummy_var_435 := sdv_InterlockedIncrement(Tmp_757);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    call {:si_unique_call 1675} set := KeSetTimer(0, DueTime_2, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} set != 0;
    call {:si_unique_call 1676} Tmp_757 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    havoc vslice_dummy_var_390;
    Mem_T.INT4[Tmp_757] := vslice_dummy_var_390;
    call {:si_unique_call 1677} vslice_dummy_var_436 := sdv_InterlockedDecrement(Tmp_757);
    assume {:nonnull} PDevExt_10 != 0;
    assume PDevExt_10 > 0;
    assume {:nonnull} Tmp_757 != 0;
    assume Tmp_757 > 0;
    goto L12;

  L12:
    Tmp_756 := set;
    return;

  anon3_Then:
    assume {:partition} set == 0;
    goto L12;
}



procedure {:origName "CyzRundownIrpRefs"} CyzRundownIrpRefs(actual_CurrentOpIrp_2: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_11: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRundownIrpRefs"} CyzRundownIrpRefs(actual_CurrentOpIrp_2: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_11: int)
{
  var {:pointer} s_p_e_c_i_a_l_15: int;
  var {:pointer} sdv_657: int;
  var {:pointer} sdv_658: int;
  var {:pointer} s_p_e_c_i_a_l_16: int;
  var {:pointer} Tmp_763: int;
  var {:scalar} s_p_e_c_i_a_l_17: int;
  var {:scalar} sdv_660: int;
  var {:pointer} sdv_661: int;
  var {:scalar} sdv_662: int;
  var {:pointer} s_p_e_c_i_a_l_18: int;
  var {:scalar} s_p_e_c_i_a_l_19: int;
  var {:scalar} s_p_e_c_i_a_l_20: int;
  var {:pointer} CurrentOpIrp_2: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:pointer} PDevExt_11: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;

  anon0:
    call {:si_unique_call 1678} vslice_dummy_var_437 := __HAVOC_malloc(4);
    CurrentOpIrp_2 := actual_CurrentOpIrp_2;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    PDevExt_11 := actual_PDevExt_11;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    s_p_e_c_i_a_l_17 := 2;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_391;
    call {:si_unique_call 1679} sdv_657 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_391);
    assume {:nonnull} sdv_657 != 0;
    assume sdv_657 > 0;
    s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_657)));
    assume {:nonnull} s_p_e_c_i_a_l_15 != 0;
    assume s_p_e_c_i_a_l_15 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_15] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_15], BNOT(s_p_e_c_i_a_l_17));
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_392;
    call {:si_unique_call 1680} vslice_dummy_var_438 := sdv_IoSetCancelRoutine(vslice_dummy_var_392, 0);
    goto L4;

  L4:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IntervalTimer_1 != 0;
    call {:si_unique_call 1681} sdv_660 := CyzCancelTimer(IntervalTimer_1, PDevExt_11);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_660 != 0;
    s_p_e_c_i_a_l_19 := 8;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_393;
    call {:si_unique_call 1682} sdv_661 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_393);
    assume {:nonnull} sdv_661 != 0;
    assume sdv_661 > 0;
    s_p_e_c_i_a_l_18 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_661)));
    assume {:nonnull} s_p_e_c_i_a_l_18 != 0;
    assume s_p_e_c_i_a_l_18 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_18] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_18], BNOT(s_p_e_c_i_a_l_19));
    goto L16;

  L16:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TotalTimer_1 != 0;
    call {:si_unique_call 1683} sdv_662 := CyzCancelTimer(TotalTimer_1, PDevExt_11);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_662 != 0;
    s_p_e_c_i_a_l_20 := 4;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_394;
    call {:si_unique_call 1684} sdv_658 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_394);
    assume {:nonnull} sdv_658 != 0;
    assume sdv_658 > 0;
    s_p_e_c_i_a_l_16 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_658)));
    assume {:nonnull} s_p_e_c_i_a_l_16 != 0;
    assume s_p_e_c_i_a_l_16 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_16] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_16], BNOT(s_p_e_c_i_a_l_20));
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} sdv_662 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} TotalTimer_1 == 0;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_660 == 0;
    goto L16;

  anon11_Then:
    assume {:partition} IntervalTimer_1 == 0;
    goto L16;

  anon15_Then:
    goto L4;
}



procedure {:origName "CyzIRPEpilogue"} CyzIRPEpilogue(actual_PDevExt_12: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIRPEpilogue"} CyzIRPEpilogue(actual_PDevExt_12: int)
{
  var {:pointer} Tmp_766: int;
  var {:scalar} pendingCnt_1: int;
  var {:pointer} PDevExt_12: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_395: int;

  anon0:
    call {:si_unique_call 1685} vslice_dummy_var_439 := __HAVOC_malloc(4);
    PDevExt_12 := actual_PDevExt_12;
    call {:si_unique_call 1686} Tmp_766 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    havoc vslice_dummy_var_395;
    Mem_T.INT4[Tmp_766] := vslice_dummy_var_395;
    call {:si_unique_call 1687} pendingCnt_1 := sdv_InterlockedDecrement(Tmp_766);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt_1 == 0;
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    call {:si_unique_call 1688} vslice_dummy_var_440 := KeSetEvent(PendingIRPEvent__CYZ_DEVICE_EXTENSION(PDevExt_12), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt_1 != 0;
    goto L1;
}



procedure {:origName "CyzCancelQueued"} CyzCancelQueued(actual_DeviceObject_11: int, actual_Irp_10: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelQueued"} CyzCancelQueued(actual_DeviceObject_11: int, actual_Irp_10: int)
{
  var {:pointer} irpSp_2: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} extension_11: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;

  anon0:
    call {:si_unique_call 1689} vslice_dummy_var_441 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_10 := actual_Irp_10;
    call {:si_unique_call 1690} Tmp_768 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    havoc extension_11;
    call {:si_unique_call 1691} irpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1692} vslice_dummy_var_442 := sdv_RemoveEntryList(0);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} extension_11 != 0;
    assume extension_11 > 0;
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto L18;

  L18:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1693} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_10)]);
    Tmp_768 := strConst__li2bpl2;
    call {:si_unique_call 1694} vslice_dummy_var_443 := CyzDbgPrintEx(9, Tmp_768);
    call {:si_unique_call 1695} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1696} CyzIRPEpilogue(extension_11);
    return;

  anon11_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L32;

  L32:
    assume {:nonnull} extension_11 != 0;
    assume extension_11 > 0;
    goto L18;

  anon13_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1697} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto L18;

  anon15_Then:
    goto L18;

  anon14_Then:
    goto L32;

  anon12_Then:
    goto L18;
}



procedure {:origName "CyzIRPPrologue"} CyzIRPPrologue(actual_PIrp_4: int, actual_PDevExt_13: int) returns (Tmp_771: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIRPPrologue"} CyzIRPPrologue(actual_PIrp_4: int, actual_PDevExt_13: int) returns (Tmp_771: int)
{
  var {:pointer} Tmp_772: int;
  var {:pointer} PIrp_4: int;
  var {:pointer} PDevExt_13: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_396: int;

  anon0:
    PIrp_4 := actual_PIrp_4;
    PDevExt_13 := actual_PDevExt_13;
    call {:si_unique_call 1698} Tmp_772 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    havoc vslice_dummy_var_396;
    Mem_T.INT4[Tmp_772] := vslice_dummy_var_396;
    call {:si_unique_call 1699} vslice_dummy_var_444 := sdv_InterlockedIncrement(Tmp_772);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    call {:si_unique_call 1700} Tmp_771 := CyzFilterIrps(PIrp_4, PDevExt_13);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzGetNextIrp"} CyzGetNextIrp(actual_CurrentOpIrp_4: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_12: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextIrp"} CyzGetNextIrp(actual_CurrentOpIrp_4: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_12: int)
{
  var {:pointer} Tmp_780: int;
  var {:scalar} oldIrql_7: int;
  var {:pointer} CurrentOpIrp_4: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} NextIrp: int;
  var {:scalar} CompleteCurrent_1: int;
  var {:pointer} extension_12: int;
  var vslice_dummy_var_445: int;

  anon0:
    call {:si_unique_call 1701} vslice_dummy_var_445 := __HAVOC_malloc(4);
    CurrentOpIrp_4 := actual_CurrentOpIrp_4;
    QueueToProcess_2 := actual_QueueToProcess_2;
    NextIrp := actual_NextIrp;
    CompleteCurrent_1 := actual_CompleteCurrent_1;
    extension_12 := actual_extension_12;
    call {:si_unique_call 1702} Tmp_780 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    Mem_T.INT4[Tmp_780] := oldIrql_7;
    call {:si_unique_call 1703} IoAcquireCancelSpinLock(Tmp_780);
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    oldIrql_7 := Mem_T.INT4[Tmp_780];
    call {:si_unique_call 1704} CyzGetNextIrpLocked(CurrentOpIrp_4, QueueToProcess_2, NextIrp, CompleteCurrent_1, extension_12, oldIrql_7);
    return;
}



procedure {:origName "CyzFilterIrps"} CyzFilterIrps(actual_PIrp_5: int, actual_PDevExt_15: int) returns (Tmp_783: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFilterIrps"} CyzFilterIrps(actual_PIrp_5: int, actual_PDevExt_15: int) returns (Tmp_783: int)
{
  var {:scalar} oldIrqlFlags: int;
  var {:scalar} oldIrql_8: int;
  var {:pointer} pIrpStack_5: int;
  var {:pointer} Tmp_784: int;
  var {:pointer} PIrp_5: int;
  var {:pointer} PDevExt_15: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;

  anon0:
    PIrp_5 := actual_PIrp_5;
    PDevExt_15 := actual_PDevExt_15;
    call {:si_unique_call 1705} pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(PIrp_5);
    call {:si_unique_call 1706} Tmp_784 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    Mem_T.INT4[Tmp_784] := oldIrqlFlags;
    call {:si_unique_call 1707} sdv_KeAcquireSpinLock(0, Tmp_784);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    oldIrqlFlags := Mem_T.INT4[Tmp_784];
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)] != 0;
    goto L14;

  L14:
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 1) != 0;
    goto L16;

  L16:
    call {:si_unique_call 1708} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Tmp_783 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_783 := -1073741738;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 1) == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 8) == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 2) != 0;
    call {:si_unique_call 1709} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_783 := 0;
    goto L1;

  anon34_Then:
    call {:si_unique_call 1710} Tmp_784 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    Mem_T.INT4[Tmp_784] := oldIrql_8;
    call {:si_unique_call 1711} IoAcquireCancelSpinLock(Tmp_784);
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    oldIrql_8 := Mem_T.INT4[Tmp_784];
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1712} IoReleaseCancelSpinLock(oldIrql_8);
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_783 := -1073741536;
    goto L1;

  anon35_Then:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    call {:si_unique_call 1713} sdv_IoMarkIrpPending(0);
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    call {:si_unique_call 1714} vslice_dummy_var_446 := sdv_InsertTailList(StalledIrpQueue__CYZ_DEVICE_EXTENSION(PDevExt_15), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(PIrp_5))));
    call {:si_unique_call 1715} vslice_dummy_var_447 := sdv_IoSetCancelRoutine(PIrp_5, li2bplFunctionConstant151);
    call {:si_unique_call 1716} IoReleaseCancelSpinLock(oldIrql_8);
    Tmp_783 := 259;
    goto L1;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 2) == 0;
    call {:si_unique_call 1717} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    Tmp_783 := 0;
    goto L1;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)], 8) != 0;
    goto L16;

  anon30_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) != 0;
    goto L16;

  anon27_Then:
    assume {:partition} Mem_T.INT4[DevicePNPAccept__CYZ_DEVICE_EXTENSION(PDevExt_15)] == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) == 0;
    call {:si_unique_call 1718} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_783 := 0;
    goto L1;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYZ_DEVICE_EXTENSION(PDevExt_15)], 4) != 0;
    goto L14;
}



procedure {:origName "CyzStartOrQueue"} CyzStartOrQueue(actual_Extension_39: int, actual_Irp_11: int, actual_QueueToExamine: int, actual_CurrentOpIrp_5: int, actual_Starter_1: int) returns (Tmp_785: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartOrQueue"} CyzStartOrQueue(actual_Extension_39: int, actual_Irp_11: int, actual_QueueToExamine: int, actual_CurrentOpIrp_5: int, actual_Starter_1: int) returns (Tmp_785: int)
{
  var {:pointer} Tmp_786: int;
  var {:pointer} irpSp_3: int;
  var {:pointer} sdv_679: int;
  var {:pointer} Tmp_787: int;
  var {:pointer} sdv_681: int;
  var {:pointer} sdv_683: int;
  var {:scalar} oldIrql_9: int;
  var {:pointer} sdv_684: int;
  var {:scalar} sdv_685: int;
  var {:pointer} sdv_688: int;
  var {:pointer} Extension_39: int;
  var {:pointer} Irp_11: int;
  var {:pointer} QueueToExamine: int;
  var {:pointer} CurrentOpIrp_5: int;
  var {:scalar} Starter_1: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;

  anon0:
    Extension_39 := actual_Extension_39;
    Irp_11 := actual_Irp_11;
    QueueToExamine := actual_QueueToExamine;
    CurrentOpIrp_5 := actual_CurrentOpIrp_5;
    Starter_1 := actual_Starter_1;
    call {:si_unique_call 1719} Tmp_787 := __HAVOC_malloc(72);
    call {:si_unique_call 1720} Tmp_786 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    Mem_T.INT4[Tmp_786] := oldIrql_9;
    call {:si_unique_call 1721} IoAcquireCancelSpinLock(Tmp_786);
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    oldIrql_9 := Mem_T.INT4[Tmp_786];
    call {:si_unique_call 1722} sdv_679 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_679 != 0;
    assume sdv_679 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1723} sdv_684 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} Extension_39 != 0;
    assume Extension_39 > 0;
    assume {:nonnull} sdv_684 != 0;
    assume sdv_684 > 0;
    goto L18;

  L18:
    call {:si_unique_call 1724} sdv_685 := sdv_IsListEmpty(0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_685 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    call {:si_unique_call 1725} IoReleaseCancelSpinLock(oldIrql_9);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant131;
    call {:si_unique_call 1726} Tmp_785 := CyzStartFlush(Extension_39);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant177;
    call {:si_unique_call 1727} Tmp_785 := CyzStartMask(Extension_39);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant380;
    call {:si_unique_call 1728} Tmp_785 := CyzStartPurge(Extension_39);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant381;
    call {:si_unique_call 1729} Tmp_785 := CyzStartRead(Extension_39);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 1730} Tmp_785 := CyzStartWrite#1(Extension_39);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    goto L22;

  L22:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 1731} irpSp_3 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    call {:si_unique_call 1732} IoReleaseCancelSpinLock(oldIrql_9);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 1733} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto L42;

  L42:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Tmp_787 := strConst__li2bpl2;
    call {:si_unique_call 1734} vslice_dummy_var_450 := CyzDbgPrintEx(9, Tmp_787);
    call {:si_unique_call 1735} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1736} CyzIRPEpilogue(Extension_39);
    Tmp_785 := -1073741536;
    goto L1;

  anon40_Then:
    goto L42;

  anon37_Then:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 1737} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 1738} vslice_dummy_var_448 := sdv_InsertTailList(QueueToExamine, ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_11))));
    call {:si_unique_call 1739} vslice_dummy_var_449 := sdv_IoSetCancelRoutine(Irp_11, li2bplFunctionConstant149);
    call {:si_unique_call 1740} IoReleaseCancelSpinLock(oldIrql_9);
    Tmp_785 := 259;
    goto L1;

  anon36_Then:
    assume {:partition} sdv_685 == 0;
    goto L22;

  anon35_Then:
    call {:si_unique_call 1741} sdv_683 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_683 != 0;
    assume sdv_683 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1742} sdv_681 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_681 != 0;
    assume sdv_681 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L78;

  L78:
    assume {:nonnull} Extension_39 != 0;
    assume Extension_39 > 0;
    goto L18;

  anon42_Then:
    call {:si_unique_call 1743} sdv_688 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_688 != 0;
    assume sdv_688 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L78;

  anon43_Then:
    goto L18;

  anon41_Then:
    goto L18;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_451: int;

  anon0:
    call {:si_unique_call 1744} vslice_dummy_var_451 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCancelTimer"} CyzCancelTimer(actual_Timer_1: int, actual_PDevExt_16: int) returns (Tmp_790: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_790 == 1 || Tmp_790 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelTimer"} CyzCancelTimer(actual_Timer_1: int, actual_PDevExt_16: int) returns (Tmp_790: int)
{
  var {:scalar} cancelled_2: int;
  var {:pointer} Timer_1: int;
  var {:pointer} PDevExt_16: int;
  var vslice_dummy_var_397: int;

  anon0:
    Timer_1 := actual_Timer_1;
    PDevExt_16 := actual_PDevExt_16;
    call {:si_unique_call 1745} cancelled_2 := KeCancelTimer(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cancelled_2 != 0;
    assume {:nonnull} Timer_1 != 0;
    assume Timer_1 > 0;
    havoc vslice_dummy_var_397;
    call {:si_unique_call 1746} CyzDpcEpilogue(PDevExt_16, vslice_dummy_var_397);
    goto L9;

  L9:
    Tmp_790 := cancelled_2;
    return;

  anon3_Then:
    assume {:partition} cancelled_2 == 0;
    goto L9;
}



procedure {:origName "CyzIoCallDriver"} CyzIoCallDriver(actual_PDevExt_17: int, actual_PDevObj_14: int, actual_PIrp_6: int) returns (Tmp_792: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzIoCallDriver"} CyzIoCallDriver(actual_PDevExt_17: int, actual_PDevObj_14: int, actual_PIrp_6: int) returns (Tmp_792: int)
{
  var {:scalar} status_20: int;
  var {:pointer} PDevExt_17: int;
  var {:pointer} PDevObj_14: int;
  var {:pointer} PIrp_6: int;

  anon0:
    PDevExt_17 := actual_PDevExt_17;
    PDevObj_14 := actual_PDevObj_14;
    PIrp_6 := actual_PIrp_6;
    call {:si_unique_call 1747} status_20 := sdv_IoCallDriver(PDevObj_14, PIrp_6);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1748} CyzIRPEpilogue(PDevExt_17);
    Tmp_792 := status_20;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzSetDeviceFlags"} CyzSetDeviceFlags(actual_PDevExt_18: int, actual_PFlags: int, actual_Value: int, actual_Set: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzSetDeviceFlags"} CyzSetDeviceFlags(actual_PDevExt_18: int, actual_PFlags: int, actual_Value: int, actual_Set: int)
{
  var {:scalar} oldIrql_10: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} PFlags: int;
  var {:scalar} Value: int;
  var {:scalar} Set: int;
  var vslice_dummy_var_452: int;

  anon0:
    call {:si_unique_call 1749} vslice_dummy_var_452 := __HAVOC_malloc(4);
    PFlags := actual_PFlags;
    Value := actual_Value;
    Set := actual_Set;
    call {:si_unique_call 1750} Tmp_794 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    Mem_T.INT4[Tmp_794] := oldIrql_10;
    call {:si_unique_call 1751} sdv_KeAcquireSpinLock(0, Tmp_794);
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    oldIrql_10 := Mem_T.INT4[Tmp_794];
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Set != 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    Mem_T.INT4[PFlags] := BOR(Mem_T.INT4[PFlags], Value);
    goto L10;

  L10:
    call {:si_unique_call 1752} sdv_KeReleaseSpinLock(0, oldIrql_10);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} Set == 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    Mem_T.INT4[PFlags] := BAND(Mem_T.INT4[PFlags], BNOT(Value));
    goto L10;
}



procedure {:origName "CyzKillAllStalled"} CyzKillAllStalled(actual_PDevObj_15: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillAllStalled"} CyzKillAllStalled(actual_PDevObj_15: int)
{
  var {:pointer} currentLastIrp_1: int;
  var {:pointer} Tmp_796: int;
  var {:scalar} cancelIrql_1: int;
  var {:pointer} pDevExt_15: int;
  var {:scalar} sdv_691: int;
  var {:pointer} sdv_692: int;
  var {:scalar} cancelRoutine_2: int;
  var {:pointer} PDevObj_15: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_398: int;

  anon0:
    call {:si_unique_call 1753} vslice_dummy_var_453 := __HAVOC_malloc(4);
    PDevObj_15 := actual_PDevObj_15;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    havoc pDevExt_15;
    call {:si_unique_call 1754} Tmp_796 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    Mem_T.INT4[Tmp_796] := cancelIrql_1;
    call {:si_unique_call 1755} IoAcquireCancelSpinLock(Tmp_796);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    cancelIrql_1 := Mem_T.INT4[Tmp_796];
    goto L10;

  L10:
    call {:si_unique_call 1756} currentLastIrp_1, Tmp_796, cancelIrql_1, sdv_691, sdv_692, cancelRoutine_2, vslice_dummy_var_454 := CyzKillAllStalled_loop_L10(currentLastIrp_1, Tmp_796, cancelIrql_1, pDevExt_15, sdv_691, sdv_692, cancelRoutine_2, PDevObj_15, vslice_dummy_var_454);
    goto L10_last;

  L10_last:
    call {:si_unique_call 1769} sdv_691 := sdv_IsListEmpty(0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sdv_691 == 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_398;
    call {:si_unique_call 1757} sdv_692 := sdv_containing_record(vslice_dummy_var_398, 88);
    currentLastIrp_1 := sdv_692;
    call {:si_unique_call 1758} vslice_dummy_var_454 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    havoc cancelRoutine_2;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp_1)] := cancelIrql_1;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant456;
    call {:si_unique_call 1759} CyzCancelCurrentRead#1(PDevObj_15, currentLastIrp_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  L32:
    call {:si_unique_call 1760} Tmp_796 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    Mem_T.INT4[Tmp_796] := cancelIrql_1;
    call {:si_unique_call 1761} IoAcquireCancelSpinLock(Tmp_796);
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    cancelIrql_1 := Mem_T.INT4[Tmp_796];
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon30_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 1762} CyzCancelCurrentWrite#1(PDevObj_15, currentLastIrp_1);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant198;
    call {:si_unique_call 1763} CyzCancelCurrentXoff#1(PDevObj_15, currentLastIrp_1);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant312;
    call {:si_unique_call 1764} CyzCancelImmediate#1(PDevObj_15, currentLastIrp_1);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 1765} CyzCancelQueued(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon26_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant178;
    call {:si_unique_call 1766} CyzCancelWait#1(PDevObj_15, currentLastIrp_1);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 1767} CyzFilterCancelQueued(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon25_Then:
    assume {:partition} sdv_691 != 0;
    call {:si_unique_call 1768} IoReleaseCancelSpinLock(cancelIrql_1);
    goto LM2;
}



procedure {:origName "CyzFilterCancelQueued"} CyzFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_7: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFilterCancelQueued"} CyzFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_7: int)
{
  var {:pointer} PDevObj_16: int;
  var {:pointer} PIrp_7: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;

  anon0:
    call {:si_unique_call 1770} vslice_dummy_var_455 := __HAVOC_malloc(4);
    PDevObj_16 := actual_PDevObj_16;
    PIrp_7 := actual_PIrp_7;
    assume {:nonnull} PDevObj_16 != 0;
    assume PDevObj_16 > 0;
    call {:si_unique_call 1771} vslice_dummy_var_456 := sdv_IoGetCurrentIrpStackLocation(PIrp_7);
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    call {:si_unique_call 1772} vslice_dummy_var_457 := sdv_RemoveEntryList(0);
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    call {:si_unique_call 1773} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(PIrp_7)]);
    return;
}



procedure {:origName "CyzGetNextIrpLocked"} CyzGetNextIrpLocked(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_13: int, actual_OldIrql_6: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_OldIrql_6;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextIrpLocked"} CyzGetNextIrpLocked(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_13: int, actual_OldIrql_6: int)
{
  var {:scalar} sdv_696: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} sdv_700: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} headOfList: int;
  var {:pointer} CurrentOpIrp_6: int;
  var {:pointer} QueueToProcess_3: int;
  var {:pointer} NextIrp_1: int;
  var {:scalar} CompleteCurrent_2: int;
  var {:pointer} extension_13: int;
  var {:scalar} OldIrql_6: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_399: int;

  anon0:
    call {:si_unique_call 1774} vslice_dummy_var_458 := __HAVOC_malloc(4);
    CurrentOpIrp_6 := actual_CurrentOpIrp_6;
    QueueToProcess_3 := actual_QueueToProcess_3;
    NextIrp_1 := actual_NextIrp_1;
    CompleteCurrent_2 := actual_CompleteCurrent_2;
    extension_13 := actual_extension_13;
    OldIrql_6 := actual_OldIrql_6;
    call {:si_unique_call 1775} Tmp_801 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    havoc oldIrp_1;
    call {:si_unique_call 1776} sdv_696 := sdv_IsListEmpty(0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_696 == 0;
    call {:si_unique_call 1777} headOfList := RemoveHeadList(QueueToProcess_3);
    call {:si_unique_call 1778} sdv_700 := sdv_containing_record(headOfList, 88);
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    havoc vslice_dummy_var_399;
    call {:si_unique_call 1779} vslice_dummy_var_460 := sdv_IoSetCancelRoutine(vslice_dummy_var_399, 0);
    goto L11;

  L11:
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    assume {:nonnull} NextIrp_1 != 0;
    assume NextIrp_1 > 0;
    call {:si_unique_call 1780} IoReleaseCancelSpinLock(OldIrql_6);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} CompleteCurrent_2 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldIrp_1 != 0;
    Tmp_801 := strConst__li2bpl2;
    call {:si_unique_call 1781} vslice_dummy_var_459 := CyzDbgPrintEx(9, Tmp_801);
    call {:si_unique_call 1782} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1783} CyzIRPEpilogue(extension_13);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} oldIrp_1 == 0;
    goto L1;

  anon8_Then:
    assume {:partition} CompleteCurrent_2 == 0;
    goto L1;

  anon7_Then:
    assume {:partition} sdv_696 != 0;
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    goto L11;
}



procedure {:origName "CyzPoCallDriver"} CyzPoCallDriver(actual_PDevExt_19: int, actual_PDevObj_17: int, actual_PIrp_8: int) returns (Tmp_803: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPoCallDriver"} CyzPoCallDriver(actual_PDevExt_19: int, actual_PDevObj_17: int, actual_PIrp_8: int) returns (Tmp_803: int)
{
  var {:scalar} status_21: int;
  var {:pointer} PDevExt_19: int;
  var {:pointer} PIrp_8: int;

  anon0:
    PDevExt_19 := actual_PDevExt_19;
    PIrp_8 := actual_PIrp_8;
    call {:si_unique_call 1784} status_21 := PoCallDriver(0, PIrp_8);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1785} CyzIRPEpilogue(PDevExt_19);
    Tmp_803 := status_21;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_461: int;

  anon0:
    call {:si_unique_call 1786} vslice_dummy_var_461 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGiveXoffToIsr"} CyzGiveXoffToIsr(actual_Context_34: int) returns (Tmp_819: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_819 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveXoffToIsr"} CyzGiveXoffToIsr(actual_Context_34: int) returns (Tmp_819: int)
{
  var {:pointer} s_p_e_c_i_a_l_27: int;
  var {:pointer} sdv_715: int;
  var {:scalar} s_p_e_c_i_a_l_28: int;
  var {:pointer} Extension_42: int;
  var {:pointer} Tmp_821: int;
  var {:pointer} Xc_1: int;
  var {:pointer} Context_34: int;
  var vslice_dummy_var_400: int;

  anon0:
    Context_34 := actual_Context_34;
    Extension_42 := Context_34;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    havoc Tmp_821;
    assume {:nonnull} Tmp_821 != 0;
    assume Tmp_821 > 0;
    havoc Xc_1;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    s_p_e_c_i_a_l_28 := 1;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    havoc vslice_dummy_var_400;
    call {:si_unique_call 1787} sdv_715 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_400);
    assume {:nonnull} sdv_715 != 0;
    assume sdv_715 > 0;
    s_p_e_c_i_a_l_27 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_715)));
    assume {:nonnull} s_p_e_c_i_a_l_27 != 0;
    assume s_p_e_c_i_a_l_27 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_27] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_27], s_p_e_c_i_a_l_28);
    Tmp_819 := 0;
    return;
}



procedure {:origName "CyzGrabXoffFromIsr"} CyzGrabXoffFromIsr(actual_Context_37: int) returns (Tmp_839: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_839 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabXoffFromIsr"} CyzGrabXoffFromIsr(actual_Context_37: int) returns (Tmp_839: int)
{
  var {:pointer} s_p_e_c_i_a_l_31: int;
  var {:pointer} sdv_727: int;
  var {:scalar} s_p_e_c_i_a_l_32: int;
  var {:pointer} Extension_47: int;
  var {:pointer} Context_37: int;
  var vslice_dummy_var_401: int;

  anon0:
    Context_37 := actual_Context_37;
    Extension_47 := Context_37;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    s_p_e_c_i_a_l_32 := 1;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc vslice_dummy_var_401;
    call {:si_unique_call 1788} sdv_727 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_401);
    assume {:nonnull} sdv_727 != 0;
    assume sdv_727 > 0;
    s_p_e_c_i_a_l_31 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_727)));
    assume {:nonnull} s_p_e_c_i_a_l_31 != 0;
    assume s_p_e_c_i_a_l_31 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_31] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_31], BNOT(s_p_e_c_i_a_l_32));
    goto L6;

  L6:
    Tmp_839 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "CyzGrabWriteFromIsr"} CyzGrabWriteFromIsr(actual_Context_38: int) returns (Tmp_845: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabWriteFromIsr"} CyzGrabWriteFromIsr(actual_Context_38: int) returns (Tmp_845: int)
{
  var {:pointer} s_p_e_c_i_a_l_33: int;
  var {:pointer} Tmp_846: int;
  var {:pointer} Tmp_847: int;
  var {:pointer} sdv_728: int;
  var {:pointer} sdv_729: int;
  var {:scalar} s_p_e_c_i_a_l_34: int;
  var {:pointer} Extension_50: int;
  var {:pointer} sdv_730: int;
  var {:pointer} Context_38: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;

  anon0:
    Context_38 := actual_Context_38;
    Extension_50 := Context_38;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc vslice_dummy_var_402;
    call {:si_unique_call 1789} sdv_728 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_402);
    assume {:nonnull} sdv_728 != 0;
    assume sdv_728 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc vslice_dummy_var_403;
    call {:si_unique_call 1790} sdv_729 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_403);
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_846;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Tmp_846 != 0;
    assume Tmp_846 > 0;
    assume {:nonnull} sdv_729 != 0;
    assume sdv_729 > 0;
    goto L17;

  L17:
    s_p_e_c_i_a_l_34 := 1;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc vslice_dummy_var_404;
    call {:si_unique_call 1791} sdv_730 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_404);
    assume {:nonnull} sdv_730 != 0;
    assume sdv_730 > 0;
    s_p_e_c_i_a_l_33 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_730)));
    assume {:nonnull} s_p_e_c_i_a_l_33 != 0;
    assume s_p_e_c_i_a_l_33 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_33] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_33], BNOT(s_p_e_c_i_a_l_34));
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    call {:si_unique_call 1792} CyzIssueCmd(Extension_50, 87, 0, 1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L6;

  L6:
    Tmp_845 := 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    goto L6;

  anon9_Then:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_847;
    assume {:nonnull} Tmp_847 != 0;
    assume Tmp_847 > 0;
    goto L17;

  anon10_Then:
    goto L6;
}



procedure {:origName "CyzWrite"} CyzWrite(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_854: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzWrite"} CyzWrite(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_854: int)
{
  var {:pointer} Tmp_855: int;
  var {:pointer} Tmp_856: int;
  var {:scalar} sdv_745: int;
  var {:pointer} Tmp_857: int;
  var {:pointer} sdv_747: int;
  var {:pointer} Tmp_858: int;
  var {:pointer} Tmp_859: int;
  var {:pointer} Extension_52: int;
  var {:pointer} Tmp_861: int;
  var {:pointer} Tmp_862: int;
  var {:scalar} status_22: int;
  var {:pointer} Tmp_863: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;

  anon0:
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 1793} Tmp_855 := __HAVOC_malloc(96);
    call {:si_unique_call 1794} Tmp_856 := __HAVOC_malloc(72);
    call {:si_unique_call 1795} Tmp_857 := __HAVOC_malloc(72);
    call {:si_unique_call 1796} Tmp_858 := __HAVOC_malloc(72);
    call {:si_unique_call 1797} Tmp_859 := __HAVOC_malloc(76);
    call {:si_unique_call 1798} Tmp_861 := __HAVOC_malloc(72);
    call {:si_unique_call 1799} Tmp_862 := __HAVOC_malloc(72);
    call {:si_unique_call 1800} Tmp_863 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc Extension_52;
    Tmp_859 := strConst__li2bpl204;
    call {:si_unique_call 1801} vslice_dummy_var_462 := CyzDbgPrintEx(2, Tmp_859);
    call {:si_unique_call 1802} status_22 := CyzIRPPrologue(Irp_15, Extension_52);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_22 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_22 != 259;
    Tmp_862 := strConst__li2bpl2;
    call {:si_unique_call 1803} vslice_dummy_var_463 := CyzDbgPrintEx(9, Tmp_862);
    call {:si_unique_call 1804} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1805} CyzIRPEpilogue(Extension_52);
    goto L18;

  L18:
    Tmp_858 := strConst__li2bpl200;
    call {:si_unique_call 1806} vslice_dummy_var_464 := CyzDbgPrintEx(2, Tmp_858);
    Tmp_854 := status_22;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} status_22 == 259;
    goto L18;

  anon13_Then:
    assume {:partition} status_22 == 0;
    Tmp_855 := strConst__li2bpl0;
    call {:si_unique_call 1807} vslice_dummy_var_465 := CyzDbgPrintEx(9, Tmp_855);
    call {:si_unique_call 1808} sdv_745 := CyzCompleteIfError(DeviceObject_15, Irp_15);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_745 != 0;
    Tmp_857 := strConst__li2bpl201;
    call {:si_unique_call 1809} vslice_dummy_var_466 := CyzDbgPrintEx(2, Tmp_857);
    Tmp_854 := -1073741536;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_745 == 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 1810} sdv_747 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} sdv_747 != 0;
    assume sdv_747 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    call {:si_unique_call 1811} status_22 := CyzStartOrQueue(Extension_52, Irp_15, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_52), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_52), li2bplFunctionConstant194);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    Tmp_863 := strConst__li2bpl202;
    call {:si_unique_call 1812} vslice_dummy_var_467 := CyzDbgPrintEx(2, Tmp_863);
    Tmp_854 := status_22;
    goto L1;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Tmp_861 := strConst__li2bpl2;
    call {:si_unique_call 1813} vslice_dummy_var_468 := CyzDbgPrintEx(9, Tmp_861);
    call {:si_unique_call 1814} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1815} CyzIRPEpilogue(Extension_52);
    Tmp_856 := strConst__li2bpl203;
    call {:si_unique_call 1816} vslice_dummy_var_469 := CyzDbgPrintEx(2, Tmp_856);
    Tmp_854 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzGrabWaitFromIsr"} CyzGrabWaitFromIsr(actual_Context_39: int) returns (Tmp_864: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_864 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabWaitFromIsr"} CyzGrabWaitFromIsr(actual_Context_39: int) returns (Tmp_864: int)
{
  var {:pointer} s_p_e_c_i_a_l_39: int;
  var {:pointer} Tmp_866: int;
  var {:pointer} Tmp_867: int;
  var {:pointer} Tmp_868: int;
  var {:scalar} s_p_e_c_i_a_l_40: int;
  var {:pointer} sdv_757: int;
  var {:pointer} Extension_53: int;
  var {:pointer} Tmp_869: int;
  var {:pointer} Tmp_870: int;
  var {:pointer} Context_39: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_405: int;

  anon0:
    Context_39 := actual_Context_39;
    call {:si_unique_call 1817} Tmp_868 := __HAVOC_malloc(92);
    call {:si_unique_call 1818} Tmp_870 := __HAVOC_malloc(336);
    Extension_53 := Context_39;
    Tmp_868 := strConst__li2bpl206;
    call {:si_unique_call 1819} vslice_dummy_var_470 := CyzDbgPrintEx(6, Tmp_868);
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_870 := strConst__li2bpl205;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc Tmp_867;
    call {:si_unique_call 1820} vslice_dummy_var_471 := CyzDbgPrintEx(7, Tmp_870);
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc Tmp_869;
    assume {:nonnull} Tmp_869 != 0;
    assume Tmp_869 > 0;
    Mem_T.INT4[Tmp_869] := 0;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc Tmp_866;
    assume {:nonnull} Tmp_866 != 0;
    assume Tmp_866 > 0;
    s_p_e_c_i_a_l_40 := 1;
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    havoc vslice_dummy_var_405;
    call {:si_unique_call 1821} sdv_757 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_405);
    assume {:nonnull} sdv_757 != 0;
    assume sdv_757 > 0;
    s_p_e_c_i_a_l_39 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_757)));
    assume {:nonnull} s_p_e_c_i_a_l_39 != 0;
    assume s_p_e_c_i_a_l_39 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_39] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_39], BNOT(s_p_e_c_i_a_l_40));
    goto L9;

  L9:
    Tmp_864 := 0;
    return;

  anon3_Then:
    goto L9;
}



procedure {:origName "CyzFinishOldWait"} CyzFinishOldWait(actual_Context_40: int) returns (Tmp_871: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzFinishOldWait"} CyzFinishOldWait(actual_Context_40: int) returns (Tmp_871: int)
{
  var {:pointer} Tmp_872: int;
  var {:pointer} Tmp_873: int;
  var {:pointer} Tmp_874: int;
  var {:pointer} Tmp_875: int;
  var {:pointer} Tmp_876: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} Tmp_878: int;
  var {:pointer} Tmp_880: int;
  var {:pointer} Extension_54: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} Tmp_883: int;
  var {:pointer} Context_40: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;

  anon0:
    Context_40 := actual_Context_40;
    call {:si_unique_call 1822} Tmp_875 := __HAVOC_malloc(336);
    call {:si_unique_call 1823} Tmp_877 := __HAVOC_malloc(248);
    call {:si_unique_call 1824} Tmp_880 := __HAVOC_malloc(84);
    Extension_54 := Context_40;
    Tmp_880 := strConst__li2bpl207;
    call {:si_unique_call 1825} vslice_dummy_var_472 := CyzDbgPrintEx(6, Tmp_880);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_875 := strConst__li2bpl205;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_882;
    call {:si_unique_call 1826} vslice_dummy_var_473 := CyzDbgPrintEx(7, Tmp_875);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_876;
    assume {:nonnull} Tmp_876 != 0;
    assume Tmp_876 > 0;
    Mem_T.INT4[Tmp_876] := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_872;
    assume {:nonnull} Tmp_872 != 0;
    assume Tmp_872 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 1827} vslice_dummy_var_474 := CyzInsertQueueDpc#1(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L9;

  L9:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_874;
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc Tmp_878;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Tmp_878 != 0;
    assume Tmp_878 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_873;
    assume {:nonnull} Tmp_873 != 0;
    assume Tmp_873 > 0;
    havoc Tmp_881;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    Tmp_877 := strConst__li2bpl208;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_883;
    call {:si_unique_call 1828} vslice_dummy_var_475 := CyzDbgPrintEx(7, Tmp_877);
    Tmp_871 := 0;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    goto L9;
}



procedure {:origName "CyzGiveWaitToIsr"} CyzGiveWaitToIsr(actual_Context_41: int) returns (Tmp_884: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveWaitToIsr"} CyzGiveWaitToIsr(actual_Context_41: int) returns (Tmp_884: int)
{
  var {:pointer} s_p_e_c_i_a_l_41: int;
  var {:pointer} Tmp_886: int;
  var {:pointer} Tmp_887: int;
  var {:pointer} Tmp_888: int;
  var {:pointer} sdv_764: int;
  var {:scalar} s_p_e_c_i_a_l_42: int;
  var {:pointer} Tmp_889: int;
  var {:pointer} Extension_55: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} Tmp_891: int;
  var {:pointer} Tmp_892: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} Tmp_895: int;
  var {:pointer} Context_41: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;

  anon0:
    Context_41 := actual_Context_41;
    call {:si_unique_call 1829} Tmp_886 := __HAVOC_malloc(312);
    call {:si_unique_call 1830} Tmp_887 := __HAVOC_malloc(168);
    call {:si_unique_call 1831} Tmp_889 := __HAVOC_malloc(84);
    call {:si_unique_call 1832} Tmp_894 := __HAVOC_malloc(308);
    Extension_55 := Context_41;
    Tmp_889 := strConst__li2bpl211;
    call {:si_unique_call 1833} vslice_dummy_var_476 := CyzDbgPrintEx(6, Tmp_889);
    s_p_e_c_i_a_l_42 := 1;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc vslice_dummy_var_406;
    call {:si_unique_call 1834} sdv_764 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_406);
    assume {:nonnull} sdv_764 != 0;
    assume sdv_764 > 0;
    s_p_e_c_i_a_l_41 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_764)));
    assume {:nonnull} s_p_e_c_i_a_l_41 != 0;
    assume s_p_e_c_i_a_l_41 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_41] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_41], s_p_e_c_i_a_l_42);
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_894 := strConst__li2bpl210;
    call {:si_unique_call 1835} vslice_dummy_var_477 := CyzDbgPrintEx(7, Tmp_894);
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_892;
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    havoc Tmp_891;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Tmp_891 != 0;
    assume Tmp_891 > 0;
    havoc vslice_dummy_var_407;
    Mem_T.INT4[Tmp_891] := vslice_dummy_var_407;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_895;
    assume {:nonnull} Tmp_895 != 0;
    assume Tmp_895 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    call {:si_unique_call 1836} vslice_dummy_var_478 := CyzInsertQueueDpc#1(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_55), 0, 0, Extension_55);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L30;

  L30:
    Tmp_884 := 0;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    Tmp_887 := strConst__li2bpl209;
    call {:si_unique_call 1837} vslice_dummy_var_479 := CyzDbgPrintEx(7, Tmp_887);
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_888;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    Tmp_886 := strConst__li2bpl212;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_893;
    call {:si_unique_call 1838} vslice_dummy_var_480 := CyzDbgPrintEx(7, Tmp_886);
    goto L30;
}



procedure {:origName "CyzStartMask"} CyzStartMask(actual_Extension_56: int) returns (Tmp_896: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartMask"} CyzStartMask(actual_Extension_56: int) returns (Tmp_896: int)
{
  var {:pointer} Tmp_897: int;
  var {:pointer} s_p_e_c_i_a_l_43: int;
  var {:scalar} FirstStatus_1: int;
  var {:pointer} Tmp_898: int;
  var {:scalar} SetFirstStatus_1: int;
  var {:pointer} Tmp_899: int;
  var {:pointer} Tmp_900: int;
  var {:pointer} Tmp_901: int;
  var {:pointer} Tmp_902: int;
  var {:pointer} Tmp_903: int;
  var {:pointer} Tmp_904: int;
  var {:pointer} Tmp_905: int;
  var {:pointer} IrpSp_3: int;
  var {:scalar} OldIrql_14: int;
  var {:pointer} Tmp_906: int;
  var {:pointer} NewIrp_5: int;
  var {:scalar} s_p_e_c_i_a_l_44: int;
  var {:pointer} Tmp_907: int;
  var {:pointer} sdv_783: int;
  var {:pointer} Tmp_908: int;
  var {:pointer} Tmp_909: int;
  var {:pointer} Tmp_910: int;
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_912: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} sdv_786: int;
  var {:pointer} Tmp_914: int;
  var {:scalar} pollIrql_12: int;
  var {:pointer} Tmp_915: int;
  var {:pointer} Extension_56: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;

  anon0:
    call {:si_unique_call 1839} NewIrp_5 := __HAVOC_malloc(4);
    Extension_56 := actual_Extension_56;
    call {:si_unique_call 1840} Tmp_897 := __HAVOC_malloc(68);
    call {:si_unique_call 1841} Tmp_898 := __HAVOC_malloc(288);
    call {:si_unique_call 1842} Tmp_900 := __HAVOC_malloc(84);
    call {:si_unique_call 1843} Tmp_901 := __HAVOC_malloc(288);
    call {:si_unique_call 1844} Tmp_902 := __HAVOC_malloc(288);
    call {:si_unique_call 1845} Tmp_903 := __HAVOC_malloc(368);
    call {:si_unique_call 1846} Tmp_904 := __HAVOC_malloc(160);
    call {:si_unique_call 1847} Tmp_908 := __HAVOC_malloc(288);
    call {:si_unique_call 1848} Tmp_909 := __HAVOC_malloc(284);
    call {:si_unique_call 1849} Tmp_910 := __HAVOC_malloc(148);
    call {:si_unique_call 1850} Tmp_911 := __HAVOC_malloc(128);
    call {:si_unique_call 1851} Tmp_912 := __HAVOC_malloc(368);
    call {:si_unique_call 1852} Tmp_913 := __HAVOC_malloc(368);
    call {:si_unique_call 1853} Tmp_915 := __HAVOC_malloc(368);
    SetFirstStatus_1 := 0;
    Tmp_897 := strConst__li2bpl220;
    call {:si_unique_call 1854} vslice_dummy_var_483 := CyzDbgPrintEx(6, Tmp_897);
    goto L12;

  L12:
    call {:si_unique_call 1855} s_p_e_c_i_a_l_43, FirstStatus_1, Tmp_898, SetFirstStatus_1, Tmp_899, Tmp_900, Tmp_901, Tmp_902, Tmp_903, Tmp_904, Tmp_905, IrpSp_3, OldIrql_14, Tmp_906, s_p_e_c_i_a_l_44, Tmp_907, sdv_783, Tmp_908, Tmp_909, Tmp_910, Tmp_911, Tmp_912, Tmp_913, sdv_786, Tmp_914, pollIrql_12, Tmp_915, vslice_dummy_var_481, vslice_dummy_var_482, vslice_dummy_var_484, vslice_dummy_var_485, vslice_dummy_var_486, vslice_dummy_var_487, vslice_dummy_var_488, vslice_dummy_var_489, vslice_dummy_var_490, vslice_dummy_var_491, vslice_dummy_var_492, vslice_dummy_var_493, vslice_dummy_var_494, vslice_dummy_var_495, vslice_dummy_var_496, vslice_dummy_var_497 := CyzStartMask_loop_L12(s_p_e_c_i_a_l_43, FirstStatus_1, Tmp_898, SetFirstStatus_1, Tmp_899, Tmp_900, Tmp_901, Tmp_902, Tmp_903, Tmp_904, Tmp_905, IrpSp_3, OldIrql_14, Tmp_906, NewIrp_5, s_p_e_c_i_a_l_44, Tmp_907, sdv_783, Tmp_908, Tmp_909, Tmp_910, Tmp_911, Tmp_912, Tmp_913, sdv_786, Tmp_914, pollIrql_12, Tmp_915, Extension_56, vslice_dummy_var_481, vslice_dummy_var_482, vslice_dummy_var_484, vslice_dummy_var_485, vslice_dummy_var_486, vslice_dummy_var_487, vslice_dummy_var_488, vslice_dummy_var_489, vslice_dummy_var_490, vslice_dummy_var_491, vslice_dummy_var_492, vslice_dummy_var_493, vslice_dummy_var_494, vslice_dummy_var_495, vslice_dummy_var_496, vslice_dummy_var_497);
    goto L12_last;

  L12_last:
    Tmp_911 := strConst__li2bpl213;
    call {:si_unique_call 1887} vslice_dummy_var_484 := CyzDbgPrintEx(7, Tmp_911);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_411;
    call {:si_unique_call 1888} IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_411);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_900 := strConst__li2bpl214;
    call {:si_unique_call 1856} vslice_dummy_var_485 := CyzDbgPrintEx(7, Tmp_900);
    call {:si_unique_call 1857} Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    Mem_T.INT4[Tmp_906] := pollIrql_12;
    call {:si_unique_call 1858} sdv_KeAcquireSpinLock(0, Tmp_906);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    pollIrql_12 := Mem_T.INT4[Tmp_906];
    call {:si_unique_call 1859} vslice_dummy_var_481 := CyzFinishOldWait(Extension_56);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1860} sdv_KeReleaseSpinLock(0, pollIrql_12);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_907;
    assume {:nonnull} Tmp_907 != 0;
    assume Tmp_907 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 1861} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 1, Extension_56);
    Tmp_912 := strConst__li2bpl216;
    call {:si_unique_call 1862} vslice_dummy_var_486 := CyzDbgPrintEx(7, Tmp_912);
    goto L44;

  L44:
    assume {:nonnull} NewIrp_5 != 0;
    assume NewIrp_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_896 := FirstStatus_1;
    goto LM2;

  LM2:
    return;

  anon29_Then:
    goto anon29_Then_dummy;

  anon29_Then_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_898 := strConst__li2bpl215;
    call {:si_unique_call 1863} vslice_dummy_var_487 := CyzDbgPrintEx(7, Tmp_898);
    FirstStatus_1 := 0;
    SetFirstStatus_1 := 1;
    goto L38;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1864} Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    Mem_T.INT4[Tmp_906] := OldIrql_14;
    call {:si_unique_call 1865} IoAcquireCancelSpinLock(Tmp_906);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_906];
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_905;
    assume {:nonnull} Tmp_905 != 0;
    assume Tmp_905 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_904 := strConst__li2bpl219;
    call {:si_unique_call 1866} vslice_dummy_var_491 := CyzDbgPrintEx(7, Tmp_904);
    call {:si_unique_call 1867} IoReleaseCancelSpinLock(OldIrql_14);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_914;
    assume {:nonnull} Tmp_914 != 0;
    assume Tmp_914 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L71;

  L71:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 1868} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 1, Extension_56);
    Tmp_913 := strConst__li2bpl216;
    call {:si_unique_call 1869} vslice_dummy_var_492 := CyzDbgPrintEx(7, Tmp_913);
    goto L44;

  anon37_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_902 := strConst__li2bpl215;
    call {:si_unique_call 1870} vslice_dummy_var_493 := CyzDbgPrintEx(7, Tmp_902);
    FirstStatus_1 := -1073741536;
    SetFirstStatus_1 := 1;
    goto L71;

  anon36_Then:
    Tmp_910 := strConst__li2bpl218;
    call {:si_unique_call 1871} vslice_dummy_var_494 := CyzDbgPrintEx(7, Tmp_910);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L83;

  L83:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_408;
    call {:si_unique_call 1872} sdv_783 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_408);
    assume {:nonnull} sdv_783 != 0;
    assume sdv_783 > 0;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_409;
    call {:si_unique_call 1873} vslice_dummy_var_495 := sdv_IoSetCancelRoutine(vslice_dummy_var_409, li2bplFunctionConstant178);
    s_p_e_c_i_a_l_44 := 2;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc vslice_dummy_var_410;
    call {:si_unique_call 1874} sdv_786 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_410);
    assume {:nonnull} sdv_786 != 0;
    assume sdv_786 > 0;
    s_p_e_c_i_a_l_43 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_786)));
    assume {:nonnull} s_p_e_c_i_a_l_43 != 0;
    assume s_p_e_c_i_a_l_43 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_43] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_43], s_p_e_c_i_a_l_44);
    call {:si_unique_call 1875} Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    Mem_T.INT4[Tmp_906] := pollIrql_12;
    call {:si_unique_call 1876} sdv_KeAcquireSpinLock(0, Tmp_906);
    assume {:nonnull} Tmp_906 != 0;
    assume Tmp_906 > 0;
    pollIrql_12 := Mem_T.INT4[Tmp_906];
    call {:si_unique_call 1877} vslice_dummy_var_482 := CyzGiveWaitToIsr(Extension_56);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1878} sdv_KeReleaseSpinLock(0, pollIrql_12);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 1879} CyzGetNextIrpLocked(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 0, Extension_56, OldIrql_14);
    Tmp_903 := strConst__li2bpl216;
    call {:si_unique_call 1880} vslice_dummy_var_496 := CyzDbgPrintEx(7, Tmp_903);
    goto L44;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_908 := strConst__li2bpl215;
    call {:si_unique_call 1881} vslice_dummy_var_497 := CyzDbgPrintEx(7, Tmp_908);
    FirstStatus_1 := 259;
    SetFirstStatus_1 := 1;
    call {:si_unique_call 1882} sdv_IoMarkIrpPending(0);
    goto L83;

  anon30_Then:
    goto L48;

  L48:
    Tmp_909 := strConst__li2bpl217;
    call {:si_unique_call 1883} vslice_dummy_var_488 := CyzDbgPrintEx(7, Tmp_909);
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    havoc Tmp_899;
    assume {:nonnull} Tmp_899 != 0;
    assume Tmp_899 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L125;

  L125:
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    call {:si_unique_call 1884} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_56), NewIrp_5, 1, Extension_56);
    Tmp_915 := strConst__li2bpl216;
    call {:si_unique_call 1885} vslice_dummy_var_489 := CyzDbgPrintEx(7, Tmp_915);
    goto L44;

  anon35_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_901 := strConst__li2bpl215;
    call {:si_unique_call 1886} vslice_dummy_var_490 := CyzDbgPrintEx(7, Tmp_901);
    FirstStatus_1 := -1073741811;
    SetFirstStatus_1 := 1;
    goto L125;

  anon28_Then:
    goto L48;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_498: int;

  anon0:
    call {:si_unique_call 1889} vslice_dummy_var_498 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int)
{
  var {:pointer} ListHead: int;
  var vslice_dummy_var_499: int;

  anon0:
    call {:si_unique_call 1890} vslice_dummy_var_499 := __HAVOC_malloc(4);
    ListHead := actual_ListHead;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    return;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_1005: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_1005: int)
{
  var {:pointer} Entry: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_1: int;

  anon0:
    ListHead_1 := actual_ListHead_1;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc Entry;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Flink;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_1005 := Entry;
    return;
}



procedure {:origName "CyzDbgPrintEx"} CyzDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1007: int);
  free ensures {:va_keep} Tmp_1007 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzDbgPrintEx"} CyzDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1007: int)
{

  anon0:
    Tmp_1007 := 0;
    return;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_500: int;

  anon0:
    call {:si_unique_call 1891} vslice_dummy_var_500 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (SD2_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (SD2_3: int)
{
  var {:scalar} Result_4: int;
  var {:scalar} Tmp_2: int;
  var {:scalar} SignedInteger: int;

  anon0:
    call {:si_unique_call 1892} Result_4 := __HAVOC_malloc(20);
    call {:si_unique_call 1893} Tmp_2 := __HAVOC_malloc(20);
    SignedInteger := actual_SignedInteger;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    SD2_3 := Tmp_2;
    return;
}



procedure {:origName "CyzAmountInTxBuffer"} CyzAmountInTxBuffer(actual_extension_14: int) returns (Tmp_1038: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzAmountInTxBuffer"} CyzAmountInTxBuffer(actual_extension_14: int) returns (Tmp_1038: int)
{
  var {:scalar} txAmount1: int;
  var {:scalar} tx_8: int;
  var {:scalar} tx_9: int;
  var {:scalar} txAmount2: int;
  var {:scalar} tx_10: int;
  var {:pointer} extension_14: int;

  anon0:
    extension_14 := actual_extension_14;
    assume {:nonnull} extension_14 != 0;
    assume extension_14 > 0;
    call {:si_unique_call 1894} tx_9 := corral_nondet();
    call {:si_unique_call 1895} tx_10 := corral_nondet();
    assume {:nonnull} extension_14 != 0;
    assume extension_14 > 0;
    havoc tx_8;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} tx_9 >= tx_10;
    txAmount1 := tx_9 - tx_10;
    txAmount2 := 0;
    goto L23;

  L23:
    Tmp_1038 := txAmount1 + txAmount2;
    return;

  anon3_Then:
    assume {:partition} tx_10 > tx_9;
    txAmount1 := tx_8 - tx_10;
    txAmount2 := tx_9;
    goto L23;
}



procedure {:origName "CyzCheckIfTxEmpty"} CyzCheckIfTxEmpty(actual_Context_43: int) returns (Tmp_1040: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1040 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCheckIfTxEmpty"} CyzCheckIfTxEmpty(actual_Context_43: int) returns (Tmp_1040: int)
{
  var {:pointer} pHoldingEmpty: int;
  var {:pointer} S_11: int;
  var {:pointer} Extension_63: int;
  var {:pointer} Context_43: int;
  var vslice_dummy_var_412: int;

  anon0:
    Context_43 := actual_Context_43;
    S_11 := Context_43;
    assume {:nonnull} S_11 != 0;
    assume S_11 > 0;
    havoc Extension_63;
    assume {:nonnull} S_11 != 0;
    assume S_11 > 0;
    havoc pHoldingEmpty;
    assume {:nonnull} Extension_63 != 0;
    assume Extension_63 > 0;
    assume {:nonnull} pHoldingEmpty != 0;
    assume pHoldingEmpty > 0;
    havoc vslice_dummy_var_412;
    Mem_T.INT4[pHoldingEmpty] := vslice_dummy_var_412;
    Tmp_1040 := 0;
    return;
}



procedure {:origName "RtlLargeIntegerNegate"} RtlLargeIntegerNegate(actual_structPtr888Subtrahend: int) returns (SD1_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlLargeIntegerNegate"} RtlLargeIntegerNegate(actual_structPtr888Subtrahend: int) returns (SD1_1: int)
{
  var {:scalar} Subtrahend: int;
  var {:scalar} Difference: int;
  var {:scalar} Tmp_1: int;
  var {:pointer} structPtr888Subtrahend: int;

  anon0:
    call {:si_unique_call 1896} Subtrahend := __HAVOC_malloc(20);
    call {:si_unique_call 1897} Difference := __HAVOC_malloc(20);
    call {:si_unique_call 1898} Tmp_1 := __HAVOC_malloc(20);
    structPtr888Subtrahend := actual_structPtr888Subtrahend;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    SD1_1 := Tmp_1;
    return;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_501: int;

  anon0:
    call {:si_unique_call 1899} vslice_dummy_var_501 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_502: int;

  anon0:
    call {:si_unique_call 1900} vslice_dummy_var_502 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_503: int;

  anon0:
    call {:si_unique_call 1901} vslice_dummy_var_503 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1062: int);
  free ensures {:va_keep} Tmp_1062 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1062: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_1062 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_504: int;

  anon0:
    call {:si_unique_call 1902} vslice_dummy_var_504 := __HAVOC_malloc(4);
    p := actual_p;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p != 0;
    assume p > 0;
    Mem_T.INT4[p] := sdv_irql_previous;
    return;
}



procedure {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int)
{
  var vslice_dummy_var_505: int;

  anon0:
    call {:si_unique_call 1903} vslice_dummy_var_505 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_SD1_2: int, actual_Dpc_7: int) returns (Tmp_1068: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1068 == 1 || Tmp_1068 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_SD1_2: int, actual_Dpc_7: int) returns (Tmp_1068: int)
{
  var {:scalar} DueTime_1: int;
  var {:pointer} SD1_2: int;

  anon0:
    call {:si_unique_call 1904} DueTime_1 := __HAVOC_malloc(20);
    SD1_2 := actual_SD1_2;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1068 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1068 := 0;
    goto L1;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_506: int;

  anon0:
    call {:si_unique_call 1905} vslice_dummy_var_506 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1072: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1072: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_1072 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_1072 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_1072 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_8: int, actual_DeferredRoutine: int, actual_DeferredContext_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_8: int, actual_DeferredRoutine: int, actual_DeferredContext_6: int)
{
  var {:pointer} Dpc_8: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_507: int;

  anon0:
    call {:si_unique_call 1906} vslice_dummy_var_507 := __HAVOC_malloc(4);
    Dpc_8 := actual_Dpc_8;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_8 != 0;
    assume Dpc_8 > 0;
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_508: int;

  anon0:
    call {:si_unique_call 1907} vslice_dummy_var_508 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_1078: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_1078: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_1078 := r;
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_509: int;

  anon0:
    call {:si_unique_call 1908} vslice_dummy_var_509 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_510: int;

  anon0:
    call {:si_unique_call 1909} vslice_dummy_var_510 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_1: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_1: int, actual_pirp_4: int)
{
  var vslice_dummy_var_511: int;

  anon0:
    call {:si_unique_call 1910} vslice_dummy_var_511 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_512: int;

  anon0:
    call {:si_unique_call 1911} vslice_dummy_var_512 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_9: int) returns (Tmp_1088: int);
  free ensures {:va_keep} Tmp_1088 == 1 || Tmp_1088 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_9: int) returns (Tmp_1088: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1088 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1088 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1090: int);
  free ensures {:va_keep} Tmp_1090 == 0 || Tmp_1090 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1090: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1090 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1090 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;

  anon0:
    call {:si_unique_call 1912} vslice_dummy_var_513 := __HAVOC_malloc(4);
    call {:si_unique_call 1913} sdv_stub_driver_init();
    call {:si_unique_call 1914} vslice_dummy_var_514 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName: int) returns (Tmp_1094: int);
  free ensures {:va_keep} Tmp_1094 == 0 || Tmp_1094 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName: int) returns (Tmp_1094: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1094 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1094 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1096: int);
  free ensures {:va_keep} Tmp_1096 == 0 || Tmp_1096 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1096: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1096 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1096 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_1098: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_1098: int)
{
  var {:pointer} sdv_851: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1915} sdv_851 := __HAVOC_malloc(1);
    Tmp_1098 := sdv_851;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1098 := 0;
    goto L1;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_1100: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_1100: int)
{
  var {:pointer} sdv_853: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1916} sdv_853 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1100 := sdv_853;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1100 := 0;
    goto L1;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_17: int, actual_Irp_17: int) returns (Tmp_1102: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_17: int, actual_Irp_17: int) returns (Tmp_1102: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_23: int;
  var {:pointer} Irp_17: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;

  anon0:
    call {:si_unique_call 1917} completion := __HAVOC_malloc(4);
    Irp_17 := actual_Irp_17;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    Mem_T.INT4[completion] := 0;
    status_23 := 259;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L29;

  L29:
    Tmp_1102 := status_23;
    goto LM2;

  LM2:
    return;

  anon56_Then:
    havoc vslice_dummy_var_413;
    call {:si_unique_call 1918} vslice_dummy_var_515 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_17, vslice_dummy_var_413, completion);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L23;

  anon54_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L19;

  anon69_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc vslice_dummy_var_414;
    call {:si_unique_call 1919} vslice_dummy_var_518 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_17, vslice_dummy_var_414, completion);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L29;

  anon67_Then:
    goto L29;

  anon66_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L62;

  anon65_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L58;

  anon70_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc vslice_dummy_var_415;
    call {:si_unique_call 1920} vslice_dummy_var_516 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_17, vslice_dummy_var_415, completion);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L29;

  anon59_Then:
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L36;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L32;

  anon53_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc vslice_dummy_var_416;
    call {:si_unique_call 1921} vslice_dummy_var_517 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_17, vslice_dummy_var_416, completion);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L29;

  anon63_Then:
    goto L29;

  anon62_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L49;

  anon61_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L45;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_18: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_18: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 1922} State := __HAVOC_malloc(8);
    call {:si_unique_call 1923} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1924} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_1105: int);
  free ensures {:va_keep} Tmp_1105 == 1 || Tmp_1105 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_1105: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1105 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1105 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_519: int;

  anon0:
    call {:si_unique_call 1925} vslice_dummy_var_519 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_44: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_44: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp_4: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_44: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_520: int;

  anon0:
    call {:si_unique_call 1926} vslice_dummy_var_520 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_44 := actual_Context_44;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 1927} irpSp_4 := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    return;
}



procedure {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_10: int) returns (Tmp_1111: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1111 == 1 || Tmp_1111 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_10: int) returns (Tmp_1111: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 1928} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1111 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1111 := 0;
    goto L1;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_521: int;

  anon0:
    call {:si_unique_call 1929} vslice_dummy_var_521 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 1;
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1115: int);
  free ensures {:va_keep} Tmp_1115 == 1 || Tmp_1115 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1115: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1115 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1115 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo: int, actual_Path: int, actual_ValueName: int) returns (Tmp_1117: int);
  free ensures {:va_keep} Tmp_1117 == 0 || Tmp_1117 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo: int, actual_Path: int, actual_ValueName: int) returns (Tmp_1117: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1117 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1117 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_18: int)
{
  var vslice_dummy_var_522: int;

  anon0:
    call {:si_unique_call 1930} vslice_dummy_var_522 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1121: int);
  free ensures {:va_keep} Tmp_1121 == 258 || Tmp_1121 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1121: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1121 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1121 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_1121 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_19: int)
{
  var vslice_dummy_var_523: int;

  anon0:
    call {:si_unique_call 1931} vslice_dummy_var_523 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_1125: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_1125: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_1125 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_1129: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_1129: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc Tmp_1129;
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_524: int;

  anon0:
    call {:si_unique_call 1932} vslice_dummy_var_524 := __HAVOC_malloc(4);
    new := actual_new;
    sdv_irql_current := new;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0 || sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin()
{
  var vslice_dummy_var_525: int;

  anon0:
    call {:si_unique_call 1933} vslice_dummy_var_525 := __HAVOC_malloc(4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    goto L1;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_1139: int, dup_assertVar: bool);
  modifies alloc, yogi_error, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_1139: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_1140: int;
  var {:scalar} Tmp_1142: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var SerialPortNameGuid__Loc: int;
  var SerailPortPerfGuid__Loc: int;
  var SerialPortPropertiesGuid__Loc: int;
  var SerialPortHWGuid__Loc: int;
  var CyzGlobals__Loc: int;
  var SerialPortCommGuid__Loc: int;
  var CyzPhysicalZero__Loc: int;
  var KeTickCount__Loc: int;
  var CyzPhysicalZero_1__Loc: int;
  var driverDefaults__Loc: int;
  var CyzPhysicalZero_2__Loc: int;
  var GUID_DEVINTERFACE_COMPORT__Loc: int;
  var CyzPhysicalZero_3__Loc: int;
  var CyzPhysicalZero_4__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_762: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_800: int;
  var vslice_dummy_var_801: int;
  var vslice_dummy_var_802: int;
  var vslice_dummy_var_803: int;
  var vslice_dummy_var_804: int;
  var vslice_dummy_var_805: int;
  var vslice_dummy_var_806: int;
  var vslice_dummy_var_807: int;
  var vslice_dummy_var_808: int;
  var vslice_dummy_var_809: int;
  var vslice_dummy_var_810: int;
  var vslice_dummy_var_811: int;
  var vslice_dummy_var_812: int;
  var vslice_dummy_var_813: int;
  var vslice_dummy_var_814: int;
  var vslice_dummy_var_815: int;
  var vslice_dummy_var_816: int;
  var vslice_dummy_var_817: int;
  var vslice_dummy_var_818: int;
  var vslice_dummy_var_819: int;
  var vslice_dummy_var_820: int;
  var vslice_dummy_var_821: int;
  var vslice_dummy_var_822: int;
  var vslice_dummy_var_823: int;
  var vslice_dummy_var_824: int;
  var vslice_dummy_var_825: int;
  var vslice_dummy_var_826: int;
  var vslice_dummy_var_827: int;
  var vslice_dummy_var_828: int;
  var vslice_dummy_var_829: int;
  var vslice_dummy_var_830: int;
  var vslice_dummy_var_831: int;
  var vslice_dummy_var_832: int;
  var vslice_dummy_var_833: int;
  var vslice_dummy_var_834: int;
  var vslice_dummy_var_835: int;
  var vslice_dummy_var_836: int;
  var vslice_dummy_var_837: int;
  var vslice_dummy_var_838: int;
  var vslice_dummy_var_839: int;
  var vslice_dummy_var_840: int;
  var vslice_dummy_var_841: int;
  var vslice_dummy_var_842: int;
  var vslice_dummy_var_843: int;
  var vslice_dummy_var_844: int;
  var vslice_dummy_var_845: int;
  var vslice_dummy_var_846: int;
  var vslice_dummy_var_847: int;
  var vslice_dummy_var_848: int;
  var vslice_dummy_var_849: int;
  var vslice_dummy_var_850: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 1934} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 1935} SerialPortNameGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortNameGuid__Loc == SerialPortNameGuid;
    assume SerialPortNameGuid != 0;
    call {:si_unique_call 1936} SerailPortPerfGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerailPortPerfGuid__Loc == SerailPortPerfGuid;
    assume SerailPortPerfGuid != 0;
    call {:si_unique_call 1937} SerialPortPropertiesGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortPropertiesGuid__Loc == SerialPortPropertiesGuid;
    assume SerialPortPropertiesGuid != 0;
    call {:si_unique_call 1938} SerialPortHWGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortHWGuid__Loc == SerialPortHWGuid;
    assume SerialPortHWGuid != 0;
    call {:si_unique_call 1939} CyzGlobals__Loc := __HAVOC_malloc_or_null(28);
    assume CyzGlobals__Loc == CyzGlobals;
    assume CyzGlobals != 0;
    call {:si_unique_call 1940} SerialPortCommGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortCommGuid__Loc == SerialPortCommGuid;
    assume SerialPortCommGuid != 0;
    call {:si_unique_call 1941} CyzPhysicalZero__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero__Loc == CyzPhysicalZero;
    assume CyzPhysicalZero != 0;
    call {:si_unique_call 1942} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 1943} CyzPhysicalZero_1__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_1__Loc == CyzPhysicalZero_1;
    assume CyzPhysicalZero_1 != 0;
    call {:si_unique_call 1944} driverDefaults__Loc := __HAVOC_malloc_or_null(68);
    assume driverDefaults__Loc == driverDefaults;
    assume driverDefaults != 0;
    call {:si_unique_call 1945} CyzPhysicalZero_2__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_2__Loc == CyzPhysicalZero_2;
    assume CyzPhysicalZero_2 != 0;
    call {:si_unique_call 1946} GUID_DEVINTERFACE_COMPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_COMPORT__Loc == GUID_DEVINTERFACE_COMPORT;
    assume GUID_DEVINTERFACE_COMPORT != 0;
    call {:si_unique_call 1947} CyzPhysicalZero_3__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_3__Loc == CyzPhysicalZero_3;
    assume CyzPhysicalZero_3 != 0;
    call {:si_unique_call 1948} CyzPhysicalZero_4__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_4__Loc == CyzPhysicalZero_4;
    assume CyzPhysicalZero_4 != 0;
    call {:si_unique_call 1949} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 1950} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 1951} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1952} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 1953} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1954} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1955} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 1956} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 1957} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 1958} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 1959} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 1960} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1961} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 1962} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 1963} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 1964} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 1965} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 1966} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 1967} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1968} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 1969} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 1970} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 1971} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 1972} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 1973} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 1974} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1975} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 1976} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 1977} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 1978} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 1979} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1980} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 1981} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 1982} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 1983} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 1984} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 1985} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 1986} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1987} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 1988} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1989} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 1990} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 1991} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 1992} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 1993} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 1994} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 1995} vslice_dummy_var_756 := __HAVOC_malloc(4);
    call {:si_unique_call 1996} vslice_dummy_var_757 := __HAVOC_malloc(4);
    call {:si_unique_call 1997} vslice_dummy_var_758 := __HAVOC_malloc(4);
    call {:si_unique_call 1998} vslice_dummy_var_759 := __HAVOC_malloc(4);
    call {:si_unique_call 1999} vslice_dummy_var_760 := __HAVOC_malloc(4);
    call {:si_unique_call 2000} vslice_dummy_var_761 := __HAVOC_malloc(4);
    call {:si_unique_call 2001} vslice_dummy_var_417 := __HAVOC_malloc(60);
    call {:si_unique_call 2002} vslice_dummy_var_762 := __HAVOC_malloc(4);
    call {:si_unique_call 2003} vslice_dummy_var_763 := __HAVOC_malloc(4);
    call {:si_unique_call 2004} vslice_dummy_var_764 := __HAVOC_malloc(4);
    call {:si_unique_call 2005} vslice_dummy_var_765 := __HAVOC_malloc(4);
    call {:si_unique_call 2006} vslice_dummy_var_766 := __HAVOC_malloc(4);
    call {:si_unique_call 2007} vslice_dummy_var_767 := __HAVOC_malloc(4);
    call {:si_unique_call 2008} vslice_dummy_var_768 := __HAVOC_malloc(4);
    call {:si_unique_call 2009} vslice_dummy_var_769 := __HAVOC_malloc(4);
    call {:si_unique_call 2010} vslice_dummy_var_770 := __HAVOC_malloc(4);
    call {:si_unique_call 2011} vslice_dummy_var_771 := __HAVOC_malloc(4);
    call {:si_unique_call 2012} vslice_dummy_var_772 := __HAVOC_malloc(4);
    call {:si_unique_call 2013} vslice_dummy_var_773 := __HAVOC_malloc(4);
    call {:si_unique_call 2014} vslice_dummy_var_774 := __HAVOC_malloc(4);
    call {:si_unique_call 2015} vslice_dummy_var_775 := __HAVOC_malloc(4);
    call {:si_unique_call 2016} vslice_dummy_var_776 := __HAVOC_malloc(4);
    call {:si_unique_call 2017} vslice_dummy_var_777 := __HAVOC_malloc(4);
    call {:si_unique_call 2018} vslice_dummy_var_778 := __HAVOC_malloc(4);
    call {:si_unique_call 2019} vslice_dummy_var_779 := __HAVOC_malloc(4);
    call {:si_unique_call 2020} vslice_dummy_var_780 := __HAVOC_malloc(4);
    call {:si_unique_call 2021} vslice_dummy_var_781 := __HAVOC_malloc(4);
    call {:si_unique_call 2022} vslice_dummy_var_782 := __HAVOC_malloc(4);
    call {:si_unique_call 2023} vslice_dummy_var_783 := __HAVOC_malloc(4);
    call {:si_unique_call 2024} vslice_dummy_var_784 := __HAVOC_malloc(4);
    call {:si_unique_call 2025} vslice_dummy_var_785 := __HAVOC_malloc(4);
    call {:si_unique_call 2026} vslice_dummy_var_786 := __HAVOC_malloc(4);
    call {:si_unique_call 2027} vslice_dummy_var_787 := __HAVOC_malloc(4);
    call {:si_unique_call 2028} vslice_dummy_var_788 := __HAVOC_malloc(4);
    call {:si_unique_call 2029} vslice_dummy_var_789 := __HAVOC_malloc(4);
    call {:si_unique_call 2030} vslice_dummy_var_790 := __HAVOC_malloc(4);
    call {:si_unique_call 2031} vslice_dummy_var_791 := __HAVOC_malloc(4);
    call {:si_unique_call 2032} vslice_dummy_var_792 := __HAVOC_malloc(4);
    call {:si_unique_call 2033} vslice_dummy_var_793 := __HAVOC_malloc(4);
    call {:si_unique_call 2034} vslice_dummy_var_794 := __HAVOC_malloc(4);
    call {:si_unique_call 2035} vslice_dummy_var_795 := __HAVOC_malloc(4);
    call {:si_unique_call 2036} vslice_dummy_var_796 := __HAVOC_malloc(4);
    call {:si_unique_call 2037} vslice_dummy_var_797 := __HAVOC_malloc(4);
    call {:si_unique_call 2038} vslice_dummy_var_798 := __HAVOC_malloc(4);
    call {:si_unique_call 2039} vslice_dummy_var_799 := __HAVOC_malloc(4);
    call {:si_unique_call 2040} vslice_dummy_var_800 := __HAVOC_malloc(4);
    call {:si_unique_call 2041} vslice_dummy_var_801 := __HAVOC_malloc(4);
    call {:si_unique_call 2042} vslice_dummy_var_418 := __HAVOC_malloc(60);
    call {:si_unique_call 2043} vslice_dummy_var_802 := __HAVOC_malloc(4);
    call {:si_unique_call 2044} vslice_dummy_var_803 := __HAVOC_malloc(4);
    call {:si_unique_call 2045} vslice_dummy_var_804 := __HAVOC_malloc(4);
    call {:si_unique_call 2046} vslice_dummy_var_805 := __HAVOC_malloc(4);
    call {:si_unique_call 2047} vslice_dummy_var_806 := __HAVOC_malloc(4);
    call {:si_unique_call 2048} vslice_dummy_var_807 := __HAVOC_malloc(4);
    call {:si_unique_call 2049} vslice_dummy_var_808 := __HAVOC_malloc(4);
    call {:si_unique_call 2050} vslice_dummy_var_809 := __HAVOC_malloc(4);
    call {:si_unique_call 2051} vslice_dummy_var_810 := __HAVOC_malloc(4);
    call {:si_unique_call 2052} vslice_dummy_var_811 := __HAVOC_malloc(4);
    call {:si_unique_call 2053} vslice_dummy_var_812 := __HAVOC_malloc(4);
    call {:si_unique_call 2054} vslice_dummy_var_813 := __HAVOC_malloc(4);
    call {:si_unique_call 2055} vslice_dummy_var_814 := __HAVOC_malloc(4);
    call {:si_unique_call 2056} vslice_dummy_var_815 := __HAVOC_malloc(4);
    call {:si_unique_call 2057} vslice_dummy_var_816 := __HAVOC_malloc(4);
    call {:si_unique_call 2058} vslice_dummy_var_817 := __HAVOC_malloc(4);
    call {:si_unique_call 2059} vslice_dummy_var_818 := __HAVOC_malloc(4);
    call {:si_unique_call 2060} vslice_dummy_var_819 := __HAVOC_malloc(4);
    call {:si_unique_call 2061} vslice_dummy_var_820 := __HAVOC_malloc(4);
    call {:si_unique_call 2062} vslice_dummy_var_821 := __HAVOC_malloc(4);
    call {:si_unique_call 2063} vslice_dummy_var_822 := __HAVOC_malloc(4);
    call {:si_unique_call 2064} vslice_dummy_var_823 := __HAVOC_malloc(4);
    call {:si_unique_call 2065} vslice_dummy_var_824 := __HAVOC_malloc(4);
    call {:si_unique_call 2066} vslice_dummy_var_825 := __HAVOC_malloc(4);
    call {:si_unique_call 2067} vslice_dummy_var_826 := __HAVOC_malloc(4);
    call {:si_unique_call 2068} vslice_dummy_var_827 := __HAVOC_malloc(4);
    call {:si_unique_call 2069} vslice_dummy_var_828 := __HAVOC_malloc(4);
    call {:si_unique_call 2070} vslice_dummy_var_829 := __HAVOC_malloc(4);
    call {:si_unique_call 2071} vslice_dummy_var_830 := __HAVOC_malloc(4);
    call {:si_unique_call 2072} vslice_dummy_var_831 := __HAVOC_malloc(4);
    call {:si_unique_call 2073} vslice_dummy_var_832 := __HAVOC_malloc(4);
    call {:si_unique_call 2074} vslice_dummy_var_833 := __HAVOC_malloc(4);
    call {:si_unique_call 2075} vslice_dummy_var_834 := __HAVOC_malloc(4);
    call {:si_unique_call 2076} vslice_dummy_var_835 := __HAVOC_malloc(4);
    call {:si_unique_call 2077} vslice_dummy_var_836 := __HAVOC_malloc(4);
    call {:si_unique_call 2078} vslice_dummy_var_837 := __HAVOC_malloc(4);
    call {:si_unique_call 2079} vslice_dummy_var_838 := __HAVOC_malloc(4);
    call {:si_unique_call 2080} vslice_dummy_var_839 := __HAVOC_malloc(4);
    call {:si_unique_call 2081} vslice_dummy_var_840 := __HAVOC_malloc(4);
    call {:si_unique_call 2082} vslice_dummy_var_841 := __HAVOC_malloc(4);
    call {:si_unique_call 2083} vslice_dummy_var_842 := __HAVOC_malloc(4);
    call {:si_unique_call 2084} vslice_dummy_var_843 := __HAVOC_malloc(4);
    call {:si_unique_call 2085} vslice_dummy_var_844 := __HAVOC_malloc(4);
    call {:si_unique_call 2086} vslice_dummy_var_845 := __HAVOC_malloc(4);
    call {:si_unique_call 2087} vslice_dummy_var_846 := __HAVOC_malloc(4);
    call {:si_unique_call 2088} vslice_dummy_var_847 := __HAVOC_malloc(4);
    call {:si_unique_call 2089} vslice_dummy_var_848 := __HAVOC_malloc(4);
    call {:si_unique_call 2090} vslice_dummy_var_849 := __HAVOC_malloc(4);
    call {:si_unique_call 2091} vslice_dummy_var_850 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 2092} corralExtraInit();
    call {:si_unique_call 2093} corralExplainErrorInit();
    call {:si_unique_call 2094} _sdv_init21();
    call {:si_unique_call 2095} _sdv_init18();
    call {:si_unique_call 2096} _sdv_init19();
    call {:si_unique_call 2097} _sdv_init17();
    call {:si_unique_call 2098} _sdv_init1();
    call {:si_unique_call 2099} _sdv_init4();
    call {:si_unique_call 2100} _sdv_init5();
    call {:si_unique_call 2101} _sdv_init3();
    call {:si_unique_call 2102} _sdv_init16();
    call {:si_unique_call 2103} _sdv_init14();
    call {:si_unique_call 2104} _sdv_init6();
    call {:si_unique_call 2105} _sdv_init15();
    call {:si_unique_call 2106} _sdv_init10();
    call {:si_unique_call 2107} _sdv_init11();
    call {:si_unique_call 2108} _sdv_init9();
    call {:si_unique_call 2109} _sdv_init12();
    call {:si_unique_call 2110} _sdv_init13();
    call {:si_unique_call 2111} _sdv_init7();
    call {:si_unique_call 2112} _sdv_init8();
    call {:si_unique_call 2113} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_1142 := 0;
    goto L44;

  L44:
    assume Tmp_1142 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_1140 := 0;
    goto L48;

  L48:
    assume Tmp_1140 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 2114} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L42;

  L42:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_1140 := 1;
    goto L48;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_1142 := 1;
    goto L44;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1143: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1143: int)
{
  var {:pointer} sdv_868: int;

  anon0:
    call {:si_unique_call 2115} sdv_868 := __HAVOC_malloc(1);
    Tmp_1143 := sdv_868;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_526: int;

  anon0:
    call {:si_unique_call 2116} vslice_dummy_var_526 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_20: int) returns (Tmp_1147: int);
  free ensures {:va_keep} Tmp_1147 == 0 || Tmp_1147 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_20: int) returns (Tmp_1147: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1147 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1147 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1149: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1149: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Mem_T.INT4[Addend] := Mem_T.INT4[Addend] - 1;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Tmp_1149 := Mem_T.INT4[Addend];
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_527: int;

  anon0:
    call {:si_unique_call 2117} vslice_dummy_var_527 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int)
{
  var vslice_dummy_var_528: int;

  anon0:
    call {:si_unique_call 2118} vslice_dummy_var_528 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_529: int;

  anon0:
    call {:si_unique_call 2119} vslice_dummy_var_529 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_1159: int);
  free ensures {:va_keep} Tmp_1159 == 0 || Tmp_1159 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_1159: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1159 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1159 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_530: int;

  anon0:
    call {:si_unique_call 2120} vslice_dummy_var_530 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_47: int) returns (Tmp_1163: int);
  free ensures {:va_keep} Tmp_1163 == 0 || Tmp_1163 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_47: int) returns (Tmp_1163: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1163 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1163 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int)
{
  var vslice_dummy_var_531: int;

  anon0:
    call {:si_unique_call 2121} vslice_dummy_var_531 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int)
{
  var vslice_dummy_var_532: int;

  anon0:
    call {:si_unique_call 2122} vslice_dummy_var_532 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_10: int) returns (Tmp_1169: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_10: int) returns (Tmp_1169: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} sdv_880: int;
  var {:scalar} Tmp_1170: int;
  var {:scalar} Tmp_1171: int;
  var {:scalar} status_25: int;
  var {:pointer} po: int;
  var {:pointer} pirp_10: int;

  anon0:
    po := actual_po;
    pirp_10 := actual_pirp_10;
    status_25 := 0;
    minor := sdv_880;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 2123} sdv_SetStatus(pirp_10);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2124} sdv_stub_dispatch_begin();
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_1170 := 0;
    goto L216;

  L216:
    assume Tmp_1170 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L66;

  L66:
    call {:si_unique_call 2125} status_25 := CyzPnpDispatch(po, pirp_10);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 2126} sdv_stub_dispatch_end(status_25, 0);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    Tmp_1169 := status_25;
    goto LM2;

  LM2:
    return;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L66;

  anon65_Then:
    Tmp_1170 := 1;
    goto L216;

  anon63_Then:
    goto L61;

  anon89_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_1171 := 0;
    goto L222;

  L222:
    assume Tmp_1171 != 0;
    goto L60;

  anon62_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_1171 := 1;
    goto L222;

  anon66_Then:
    call {:si_unique_call 2127} status_25 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2128} status_25 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2129} sdv_SetPowerIrpMinorFunction(pirp_10);
    call {:si_unique_call 2130} status_25 := CyzPowerDispatch(po, pirp_10);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2131} status_25 := CyzCleanup(po, pirp_10);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 2132} status_25 := sdv_DoNothing();
    goto L72;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2133} status_25 := sdv_DoNothing();
    goto L72;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2134} status_25 := sdv_DoNothing();
    goto L72;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2135} status_25 := CyzIoControl(po, pirp_10);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    call {:si_unique_call 2136} status_25 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2137} status_25 := CyzFlush(po, pirp_10);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2138} status_25 := sdv_DoNothing();
    goto L72;

  anon77_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2139} status_25 := sdv_DoNothing();
    goto L72;

  anon78_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2140} status_25 := CyzWrite(po, pirp_10);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2141} status_25 := CyzRead(po, pirp_10);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2142} status_25 := CyzClose(po, pirp_10);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2143} status_25 := CyzCreateOpen(po, pirp_10);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_1173: int);
  free ensures {:va_keep} Tmp_1173 == -1073741823 || Tmp_1173 == -1073741808 || Tmp_1173 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_1173: int)
{
  var {:scalar} Tmp_1175: int;
  var {:pointer} SymbolicLinkName_2: int;

  anon0:
    SymbolicLinkName_2 := actual_SymbolicLinkName_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1173 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_1173 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName_2 != 0;
    assume SymbolicLinkName_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1175 := 0;
    goto L22;

  L22:
    assume Tmp_1175 != 0;
    Tmp_1173 := 0;
    goto L1;

  anon8_Then:
    Tmp_1175 := 1;
    goto L22;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == actual_new_1 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_533: int;

  anon0:
    call {:si_unique_call 2144} vslice_dummy_var_533 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    call {:si_unique_call 2145} SLIC_sdv_KeReleaseSpinLock_entry(strConst__li2bpl227, new_1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := new_1;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_534: int;

  anon0:
    call {:si_unique_call 2146} vslice_dummy_var_534 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init19"} {:osmodel} _sdv_init19();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 0;
  free ensures {:va_keep} sdv_irql_previous_2 == 0;
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == 0;
  free ensures {:va_keep} sdv_irql_previous_4 == 0;
  free ensures {:va_keep} sdv_irql_previous_3 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init19"} {:osmodel} _sdv_init19()
{
  var vslice_dummy_var_535: int;

  anon0:
    call {:si_unique_call 2147} vslice_dummy_var_535 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_io_create_device_called == 0;
    sdv_irql_current := 0;
    sdv_irql_previous := 0;
    sdv_irql_previous_2 := 0;
    sdv_irql_previous_3 := 0;
    sdv_irql_previous_4 := 0;
    sdv_irql_previous_5 := 0;
    assume sdv_maskedEflags == 0;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_isr_routine == li2bplFunctionConstant514;
    assume sdv_ke_dpc == li2bplFunctionConstant516;
    assume sdv_io_dpc == li2bplFunctionConstant519;
    assume sdv_p_devobj_top == sdv_devobj_top;
    Mem_T.INT4[sdv_MmMapIoSpace_int] := 0;
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_536: int;

  anon0:
    call {:si_unique_call 2148} vslice_dummy_var_536 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_1184: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1184 == -1073741811 || Tmp_1184 == -1073741823 || Tmp_1184 == 0 || Tmp_1184 == 5 || Tmp_1184 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_1184: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_892: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength := actual_ResultLength;
    L := sdv_892;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_1184 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_1184 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1184 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_3;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1184 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1184 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_3;
    goto L13;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1186: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1186: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 2149} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_1186 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_537: int;

  anon0:
    call {:si_unique_call 2150} vslice_dummy_var_537 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1192: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1192: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Mem_T.INT4[Addend_1] := Mem_T.INT4[Addend_1] + 1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Tmp_1192 := Mem_T.INT4[Addend_1];
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_538: int;

  anon0:
    call {:si_unique_call 2151} vslice_dummy_var_538 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1196: int);
  free ensures {:va_keep} Tmp_1196 == 1 || Tmp_1196 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1196: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1196 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1196 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_22: int, actual_Irp_21: int) returns (Tmp_1198: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_22: int, actual_Irp_21: int) returns (Tmp_1198: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_26: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;

  anon0:
    call {:si_unique_call 2152} completion_1 := __HAVOC_malloc(4);
    Irp_21 := actual_Irp_21;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    Mem_T.INT4[completion_1] := 0;
    status_26 := 259;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L29;

  L29:
    Tmp_1198 := status_26;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    havoc vslice_dummy_var_419;
    call {:si_unique_call 2153} vslice_dummy_var_539 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_21, vslice_dummy_var_419, completion_1);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L23;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L19;

  anon68_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc vslice_dummy_var_420;
    call {:si_unique_call 2154} vslice_dummy_var_542 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_21, vslice_dummy_var_420, completion_1);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L29;

  anon66_Then:
    goto L29;

  anon65_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L62;

  anon64_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L58;

  anon69_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc vslice_dummy_var_421;
    call {:si_unique_call 2155} vslice_dummy_var_540 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_21, vslice_dummy_var_421, completion_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L29;

  anon58_Then:
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L36;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L32;

  anon70_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc vslice_dummy_var_422;
    call {:si_unique_call 2156} vslice_dummy_var_541 := sdv_RunIoCompletionRoutines(sdv_p_devobj_fdo, Irp_21, vslice_dummy_var_422, completion_1);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L29;

  anon62_Then:
    goto L29;

  anon61_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L49;

  anon60_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L45;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines(actual_DeviceObject_23: int, actual_Irp_22: int, actual_Context_48: int, actual_Completion: int) returns (Tmp_1200: int);
  modifies sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, alloc, Mem_T.INT4, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines(actual_DeviceObject_23: int, actual_Irp_22: int, actual_Context_48: int, actual_Completion: int) returns (Tmp_1200: int)
{
  var {:scalar} Status_1: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_22: int;
  var {:pointer} Context_48: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_22 := actual_Irp_22;
    Context_48 := actual_Context_48;
    Completion := actual_Completion;
    call {:si_unique_call 2157} irpsp := sdv_IoGetNextIrpStackLocation(Irp_22);
    Status_1 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2158} Status_1 := CyzDevicePowerComplete(DeviceObject_23, Irp_22, Context_48);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    Mem_T.INT4[Completion] := 1;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2159} Status_1 := CyzSyncCompletion(DeviceObject_23, Irp_22, Context_48);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    Mem_T.INT4[Completion] := 1;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2160} Status_1 := CyzSystemPowerComplete(DeviceObject_23, Irp_22, Context_48);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    Mem_T.INT4[Completion] := 1;
    goto L45;

  L45:
    Tmp_1200 := Status_1;
    goto LM2;

  LM2:
    return;

  anon10_Then:
    goto L45;

  anon9_Then:
    goto L28;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    goto L11;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_543: int;

  anon0:
    call {:si_unique_call 2161} vslice_dummy_var_543 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_5: int)
{
  var vslice_dummy_var_544: int;

  anon0:
    call {:si_unique_call 2162} vslice_dummy_var_544 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_24: int, actual_Irp_23: int) returns (Tmp_1206: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_24: int, actual_Irp_23: int) returns (Tmp_1206: int)
{
  var {:pointer} Irp_23: int;

  anon0:
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 2163} Tmp_1206 := IofCallDriver(0, Irp_23);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int)
{
  var {:pointer} p_2: int;
  var vslice_dummy_var_545: int;

  anon0:
    call {:si_unique_call 2164} vslice_dummy_var_545 := __HAVOC_malloc(4);
    p_2 := actual_p_2;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    Mem_T.INT4[p_2] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int)
{
  var {:pointer} SpinLock_4: int;
  var vslice_dummy_var_546: int;

  anon0:
    call {:si_unique_call 2165} vslice_dummy_var_546 := __HAVOC_malloc(4);
    SpinLock_4 := actual_SpinLock_4;
    assume {:nonnull} SpinLock_4 != 0;
    assume SpinLock_4 > 0;
    Mem_T.INT4[SpinLock_4] := 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1214: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1214: int)
{
  var {:pointer} sdv_906: int;
  var {:scalar} NumberOfBytes_3: int;

  anon0:
    NumberOfBytes_3 := actual_NumberOfBytes_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2166} sdv_906 := __HAVOC_malloc(NumberOfBytes_3);
    Tmp_1214 := sdv_906;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1214 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1216: int);
  free ensures {:va_keep} Tmp_1216 == 0 || Tmp_1216 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1216: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1216 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1216 := -1073741823;
    goto L1;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1218: int);
  free ensures {:va_keep} Tmp_1218 == -1073741772 || Tmp_1218 == -1073741824 || Tmp_1218 == -1073741789 || Tmp_1218 == -1073741670 || Tmp_1218 == -1073741808 || Tmp_1218 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1218: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1218 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_1218 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_1218 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_1218 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_1218 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_1218 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_547: int;

  anon0:
    call {:si_unique_call 2167} vslice_dummy_var_547 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_548: int;

  anon0:
    call {:si_unique_call 2168} vslice_dummy_var_548 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_25: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1224: int);
  free ensures {:va_keep} Tmp_1224 == -1073741811 || Tmp_1224 == -1073741808 || Tmp_1224 == -1073741823 || Tmp_1224 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_25: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1224: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1224 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1224 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1224 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1224 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1226: int);
  free ensures {:va_keep} Tmp_1226 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1226: int)
{

  anon0:
    Tmp_1226 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1228: int);
  free ensures {:va_keep} Tmp_1228 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1228: int)
{

  anon0:
    Tmp_1228 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_26: int, actual_Action: int) returns (Tmp_1230: int);
  free ensures {:va_keep} Tmp_1230 == -1073741823 || Tmp_1230 == -1073741811 || Tmp_1230 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_26: int, actual_Action: int) returns (Tmp_1230: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1230 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1230 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_1230 := 0;
    goto L1;
}



procedure {:origName "CyzGrabReadFromIsr"} CyzGrabReadFromIsr(actual_Context_49: int) returns (Tmp_1232: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1232 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGrabReadFromIsr"} CyzGrabReadFromIsr(actual_Context_49: int) returns (Tmp_1232: int)
{
  var {:pointer} s_p_e_c_i_a_l_45: int;
  var {:pointer} Tmp_1233: int;
  var {:pointer} sdv_911: int;
  var {:pointer} sdv_912: int;
  var {:scalar} s_p_e_c_i_a_l_46: int;
  var {:pointer} extension_15: int;
  var {:pointer} Context_49: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;

  anon0:
    Context_49 := actual_Context_49;
    extension_15 := Context_49;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc vslice_dummy_var_423;
    call {:si_unique_call 2169} sdv_911 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_423);
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc Tmp_1233;
    assume {:nonnull} Tmp_1233 != 0;
    assume Tmp_1233 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} sdv_911 != 0;
    assume sdv_911 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    s_p_e_c_i_a_l_46 := 1;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc vslice_dummy_var_424;
    call {:si_unique_call 2170} sdv_912 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_424);
    assume {:nonnull} sdv_912 != 0;
    assume sdv_912 > 0;
    s_p_e_c_i_a_l_45 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_912)));
    assume {:nonnull} s_p_e_c_i_a_l_45 != 0;
    assume s_p_e_c_i_a_l_45 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_45] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_45], BNOT(s_p_e_c_i_a_l_46));
    goto L6;

  L6:
    Tmp_1232 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_549: int;

  anon0:
    call {:si_unique_call 2171} vslice_dummy_var_549 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartRead"} CyzStartRead(actual_Extension_65: int) returns (Tmp_1237: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartRead"} CyzStartRead(actual_Extension_65: int) returns (Tmp_1237: int)
{
  var {:pointer} s_p_e_c_i_a_l_47: int;
  var {:scalar} localStatus_1: int;
  var {:pointer} Tmp_1238: int;
  var {:pointer} Tmp_1239: int;
  var {:pointer} sdv_914: int;
  var {:scalar} totalTime: int;
  var {:scalar} os2ssreturn: int;
  var {:scalar} timeoutsForIrp: int;
  var {:scalar} updateChar: int;
  var {:scalar} setFirstStatus: int;
  var {:pointer} Tmp_1240: int;
  var {:scalar} useTotalTimer: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} multiplierVal: int;
  var {:scalar} crunchDownToOne: int;
  var {:pointer} sdv_919: int;
  var {:pointer} sdv_920: int;
  var {:scalar} s_p_e_c_i_a_l_48: int;
  var {:scalar} oldIrql_11: int;
  var {:pointer} Tmp_1241: int;
  var {:pointer} sdv_921: int;
  var {:scalar} constantVal: int;
  var {:pointer} s_p_e_c_i_a_l_49: int;
  var {:pointer} sdv_925: int;
  var {:scalar} controlIrql: int;
  var {:pointer} Tmp_1242: int;
  var {:pointer} Tmp_1243: int;
  var {:pointer} Tmp_1244: int;
  var {:scalar} returnWithWhatsPresent: int;
  var {:scalar} s_p_e_c_i_a_l_50: int;
  var {:pointer} Tmp_1245: int;
  var {:pointer} Tmp_1246: int;
  var {:scalar} pollIrql_13: int;
  var {:scalar} useIntervalTimer: int;
  var {:scalar} firstStatus: int;
  var {:pointer} sdv_928: int;
  var {:pointer} Tmp_1247: int;
  var {:pointer} Extension_65: int;
  var boogieTmp: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;

  anon0:
    call {:si_unique_call 2172} totalTime := __HAVOC_malloc(20);
    call {:si_unique_call 2173} timeoutsForIrp := __HAVOC_malloc(20);
    call {:si_unique_call 2174} updateChar := __HAVOC_malloc(12);
    call {:si_unique_call 2175} newIrp_1 := __HAVOC_malloc(4);
    Extension_65 := actual_Extension_65;
    call {:si_unique_call 2176} Tmp_1239 := __HAVOC_malloc(72);
    call {:si_unique_call 2177} Tmp_1243 := __HAVOC_malloc(76);
    setFirstStatus := 0;
    Tmp_1243 := strConst__li2bpl229;
    call {:si_unique_call 2178} vslice_dummy_var_553 := CyzDbgPrintEx(2, Tmp_1243);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto L24;

  L24:
    call {:si_unique_call 2179} localStatus_1, Tmp_1238, os2ssreturn, setFirstStatus, Tmp_1240, useTotalTimer, multiplierVal, crunchDownToOne, sdv_919, sdv_920, oldIrql_11, Tmp_1241, sdv_921, constantVal, controlIrql, Tmp_1242, Tmp_1244, returnWithWhatsPresent, Tmp_1245, Tmp_1246, pollIrql_13, useIntervalTimer, firstStatus, sdv_928, boogieTmp, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_555 := CyzStartRead_loop_L24(localStatus_1, Tmp_1238, totalTime, os2ssreturn, timeoutsForIrp, updateChar, setFirstStatus, Tmp_1240, useTotalTimer, newIrp_1, multiplierVal, crunchDownToOne, sdv_919, sdv_920, oldIrql_11, Tmp_1241, sdv_921, constantVal, controlIrql, Tmp_1242, Tmp_1244, returnWithWhatsPresent, Tmp_1245, Tmp_1246, pollIrql_13, useIntervalTimer, firstStatus, sdv_928, Extension_65, boogieTmp, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_555);
    goto L24_last;

  L24_last:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_431;
    call {:si_unique_call 2216} sdv_919 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_431);
    assume {:nonnull} sdv_919 != 0;
    assume sdv_919 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 2180} localStatus_1 := CyzResizeBuffer(Extension_65);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2181} CyzGetNextIrp(CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_65), ReadQueue__CYZ_DEVICE_EXTENSION(Extension_65), newIrp_1, 1, Extension_65);
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    Tmp_1239 := strConst__li2bpl228;
    call {:si_unique_call 2182} vslice_dummy_var_554 := CyzDbgPrintEx(2, Tmp_1239);
    Tmp_1237 := firstStatus;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon81_Then:
    goto anon81_Then_dummy;

  anon81_Then_dummy:
    assume false;
    return;

  anon80_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := localStatus_1;
    setFirstStatus := 1;
    goto L38;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_425;
    call {:si_unique_call 2183} sdv_921 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_425);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} sdv_921 != 0;
    assume sdv_921 > 0;
    useTotalTimer := 0;
    returnWithWhatsPresent := 0;
    os2ssreturn := 0;
    crunchDownToOne := 0;
    useIntervalTimer := 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2184} vslice_dummy_var_555 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2185} vslice_dummy_var_550 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    call {:si_unique_call 2186} Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    Mem_T.INT4[Tmp_1245] := controlIrql;
    call {:si_unique_call 2187} sdv_KeAcquireSpinLock(0, Tmp_1245);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    controlIrql := Mem_T.INT4[Tmp_1245];
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    call {:si_unique_call 2188} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    useIntervalTimer := 1;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto L67;

  L67:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L77;

  L77:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  L84:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} useTotalTimer != 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} totalTime != 0;
    assume totalTime > 0;
    goto L85;

  L85:
    call {:si_unique_call 2189} Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    Mem_T.INT4[Tmp_1245] := controlIrql;
    call {:si_unique_call 2190} sdv_KeAcquireSpinLock(0, Tmp_1245);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    controlIrql := Mem_T.INT4[Tmp_1245];
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    call {:si_unique_call 2191} boogieTmp := CyzGetCharsFromIntBuffer(Extension_65);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} returnWithWhatsPresent != 0;
    goto L95;

  L95:
    call {:si_unique_call 2192} Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    Mem_T.INT4[Tmp_1245] := pollIrql_13;
    call {:si_unique_call 2193} sdv_KeAcquireSpinLock(0, Tmp_1245);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    pollIrql_13 := Mem_T.INT4[Tmp_1245];
    call {:si_unique_call 2194} vslice_dummy_var_551 := CyzUpdateInterruptBuffer(updateChar);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2195} sdv_KeReleaseSpinLock(0, pollIrql_13);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2196} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1246;
    assume {:nonnull} Tmp_1246 != 0;
    assume Tmp_1246 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L38;

  anon108_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    assume {:partition} returnWithWhatsPresent == 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} os2ssreturn != 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1241;
    assume {:nonnull} Tmp_1241 != 0;
    assume Tmp_1241 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L112;

  L112:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_426;
    call {:si_unique_call 2197} sdv_928 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_426);
    assume {:nonnull} sdv_928 != 0;
    assume sdv_928 > 0;
    call {:si_unique_call 2198} Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    Mem_T.INT4[Tmp_1245] := oldIrql_11;
    call {:si_unique_call 2199} IoAcquireCancelSpinLock(Tmp_1245);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    oldIrql_11 := Mem_T.INT4[Tmp_1245];
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1240;
    assume {:nonnull} Tmp_1240 != 0;
    assume Tmp_1240 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    call {:si_unique_call 2200} IoReleaseCancelSpinLock(oldIrql_11);
    call {:si_unique_call 2201} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1244;
    assume {:nonnull} Tmp_1244 != 0;
    assume Tmp_1244 > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1238;
    assume {:nonnull} Tmp_1238 != 0;
    assume Tmp_1238 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := -1073741536;
    setFirstStatus := 1;
    goto L38;

  anon112_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} crunchDownToOne != 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_427;
    call {:si_unique_call 2202} sdv_920 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_427);
    assume {:nonnull} sdv_920 != 0;
    assume sdv_920 > 0;
    goto L133;

  L133:
    call {:si_unique_call 2203} Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    Mem_T.INT4[Tmp_1245] := pollIrql_13;
    call {:si_unique_call 2204} sdv_KeAcquireSpinLock(0, Tmp_1245);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    pollIrql_13 := Mem_T.INT4[Tmp_1245];
    call {:si_unique_call 2205} vslice_dummy_var_552 := CyzUpdateAndSwitchToUser(updateChar);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2206} sdv_KeReleaseSpinLock(0, pollIrql_13);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    call {:si_unique_call 2207} IoReleaseCancelSpinLock(oldIrql_11);
    call {:si_unique_call 2208} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1242;
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L38;

  anon116_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon96_Then:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} useTotalTimer != 0;
    s_p_e_c_i_a_l_48 := 4;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_428;
    call {:si_unique_call 2209} sdv_914 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_428);
    assume {:nonnull} sdv_914 != 0;
    assume sdv_914 > 0;
    s_p_e_c_i_a_l_47 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_914)));
    assume {:nonnull} s_p_e_c_i_a_l_47 != 0;
    assume s_p_e_c_i_a_l_47 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_47] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_47], s_p_e_c_i_a_l_48);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    call {:si_unique_call 2210} vslice_dummy_var_556 := CyzSetTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_65), totalTime, TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    goto L159;

  L159:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} useIntervalTimer != 0;
    s_p_e_c_i_a_l_50 := 8;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc vslice_dummy_var_429;
    call {:si_unique_call 2211} sdv_925 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_429);
    assume {:nonnull} sdv_925 != 0;
    assume sdv_925 > 0;
    s_p_e_c_i_a_l_49 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_925)));
    assume {:nonnull} s_p_e_c_i_a_l_49 != 0;
    assume s_p_e_c_i_a_l_49 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_49] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_49], s_p_e_c_i_a_l_50);
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    havoc Tmp_1247;
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    assume {:nonnull} Tmp_1247 != 0;
    assume Tmp_1247 > 0;
    havoc vslice_dummy_var_430;
    call {:si_unique_call 2212} vslice_dummy_var_557 := CyzSetTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(Extension_65), vslice_dummy_var_430, IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_65), Extension_65);
    goto L171;

  L171:
    call {:si_unique_call 2213} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2214} IoReleaseCancelSpinLock(oldIrql_11);
    call {:si_unique_call 2215} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} setFirstStatus != 0;
    goto L196;

  L196:
    Tmp_1237 := firstStatus;
    goto L1;

  anon99_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 259;
    goto L196;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon98_Then:
    assume {:partition} useIntervalTimer == 0;
    goto L171;

  anon97_Then:
    assume {:partition} useTotalTimer == 0;
    goto L159;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} crunchDownToOne == 0;
    goto L133;

  anon109_Then:
    goto L95;

  anon94_Then:
    assume {:partition} os2ssreturn == 0;
    goto L112;

  anon93_Then:
    goto L95;

  anon91_Then:
    assume {:partition} useTotalTimer == 0;
    goto L85;

  anon90_Then:
    goto L78;

  L78:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    crunchDownToOne := 1;
    multiplierVal := 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  anon100_Then:
    goto L84;

  anon89_Then:
    goto L84;

  anon88_Then:
    goto L78;

  anon86_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    returnWithWhatsPresent := 1;
    goto L84;

  anon87_Then:
    goto L77;

  anon83_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L205;

  L205:
    useTotalTimer := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  anon85_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L205;

  anon101_Then:
    goto L84;

  anon104_Then:
    assume {:nonnull} Extension_65 != 0;
    assume Extension_65 > 0;
    goto L67;

  anon84_Then:
    goto L67;

  anon82_Then:
    goto L67;

  anon103_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzMoveToNewIntBuffer"} CyzMoveToNewIntBuffer(actual_Extension_66: int, actual_NewBuffer: int) returns (Tmp_1248: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzMoveToNewIntBuffer"} CyzMoveToNewIntBuffer(actual_Extension_66: int, actual_NewBuffer: int) returns (Tmp_1248: int)
{
  var {:scalar} firstTryNumberToGet: int;
  var {:scalar} Tmp_1251: int;
  var {:scalar} numberOfCharsMoved: int;
  var {:pointer} Extension_66: int;
  var {:pointer} NewBuffer: int;

  anon0:
    Extension_66 := actual_Extension_66;
    NewBuffer := actual_NewBuffer;
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    havoc numberOfCharsMoved;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} numberOfCharsMoved != 0;
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    havoc firstTryNumberToGet;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} firstTryNumberToGet >= numberOfCharsMoved;
    call {:si_unique_call 2217} sdv_RtlMoveMemory(0, 0, numberOfCharsMoved);
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto L6;

  L6:
    Tmp_1248 := numberOfCharsMoved;
    return;

  anon7_Then:
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto L6;

  anon9_Then:
    assume {:partition} numberOfCharsMoved > firstTryNumberToGet;
    call {:si_unique_call 2218} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet);
    Tmp_1251 := numberOfCharsMoved - firstTryNumberToGet;
    call {:si_unique_call 2219} sdv_RtlMoveMemory(0, 0, Tmp_1251);
    assume {:nonnull} Extension_66 != 0;
    assume Extension_66 > 0;
    goto L6;

  anon8_Then:
    assume {:partition} numberOfCharsMoved == 0;
    goto L6;
}



procedure {:origName "CyzUpdateAndSwitchToUser"} CyzUpdateAndSwitchToUser(actual_Context_50: int) returns (Tmp_1252: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUpdateAndSwitchToUser"} CyzUpdateAndSwitchToUser(actual_Context_50: int) returns (Tmp_1252: int)
{
  var {:pointer} s_p_e_c_i_a_l_51: int;
  var {:pointer} updateChar_1: int;
  var {:pointer} sdv_930: int;
  var {:pointer} Tmp_1253: int;
  var {:scalar} s_p_e_c_i_a_l_52: int;
  var {:pointer} s_p_e_c_i_a_l_53: int;
  var {:pointer} sdv_935: int;
  var {:scalar} s_p_e_c_i_a_l_54: int;
  var {:pointer} Tmp_1255: int;
  var {:pointer} extension_16: int;
  var {:pointer} Context_50: int;
  var boogieTmp: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;

  anon0:
    Context_50 := actual_Context_50;
    updateChar_1 := Context_50;
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    havoc extension_16;
    call {:si_unique_call 2220} vslice_dummy_var_559 := CyzUpdateInterruptBuffer(Context_50);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    call {:si_unique_call 2221} boogieTmp := CyzGetCharsFromIntBuffer(extension_16);
    call {:si_unique_call 2222} vslice_dummy_var_558 := CyzUpdateInterruptBuffer(Context_50);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc Tmp_1253;
    assume {:nonnull} Tmp_1253 != 0;
    assume Tmp_1253 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_432;
    call {:si_unique_call 2223} vslice_dummy_var_560 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_432);
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_433;
    call {:si_unique_call 2224} vslice_dummy_var_561 := sdv_IoSetCancelRoutine(vslice_dummy_var_433, li2bplFunctionConstant456);
    s_p_e_c_i_a_l_52 := 1;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_434;
    call {:si_unique_call 2225} sdv_930 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_434);
    assume {:nonnull} sdv_930 != 0;
    assume sdv_930 > 0;
    s_p_e_c_i_a_l_51 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_930)));
    assume {:nonnull} s_p_e_c_i_a_l_51 != 0;
    assume s_p_e_c_i_a_l_51 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_51] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_51], s_p_e_c_i_a_l_52);
    s_p_e_c_i_a_l_54 := 2;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_435;
    call {:si_unique_call 2226} sdv_935 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_435);
    assume {:nonnull} sdv_935 != 0;
    assume sdv_935 > 0;
    s_p_e_c_i_a_l_53 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_935)));
    assume {:nonnull} s_p_e_c_i_a_l_53 != 0;
    assume s_p_e_c_i_a_l_53 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_53] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_53], s_p_e_c_i_a_l_54);
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    goto L47;

  L47:
    Tmp_1252 := 0;
    goto LM2;

  LM2:
    return;

  anon7_Then:
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    goto L47;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzResizeBuffer"} CyzResizeBuffer(actual_Extension_67: int) returns (Tmp_1256: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_current) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzResizeBuffer"} CyzResizeBuffer(actual_Extension_67: int) returns (Tmp_1256: int)
{
  var {:pointer} Tmp_1257: int;
  var {:pointer} Tmp_1258: int;
  var {:pointer} irpSp_5: int;
  var {:pointer} newBuffer: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} rs_7: int;
  var {:pointer} Tmp_1260: int;
  var {:scalar} controlIrql_1: int;
  var {:scalar} rp: int;
  var {:scalar} pollIrql_14: int;
  var {:pointer} Extension_67: int;
  var boogieTmp: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_436: int;

  anon0:
    call {:si_unique_call 2227} rp := __HAVOC_malloc(20);
    Extension_67 := actual_Extension_67;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc Tmp_1260;
    assume {:nonnull} Tmp_1260 != 0;
    assume Tmp_1260 > 0;
    havoc rs_7;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc vslice_dummy_var_436;
    call {:si_unique_call 2228} irpSp_5 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_436);
    assume {:nonnull} irpSp_5 != 0;
    assume irpSp_5 > 0;
    havoc newBuffer;
    assume {:nonnull} irpSp_5 != 0;
    assume irpSp_5 > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc Tmp_1259;
    assume {:nonnull} Tmp_1259 != 0;
    assume Tmp_1259 > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    havoc Tmp_1257;
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    assume {:nonnull} rs_7 != 0;
    assume rs_7 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} Extension_67 != 0;
    assume Extension_67 > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rs_7 != 0;
    assume rs_7 > 0;
    call {:si_unique_call 2229} Tmp_1258 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    Mem_T.INT4[Tmp_1258] := controlIrql_1;
    call {:si_unique_call 2230} sdv_KeAcquireSpinLock(0, Tmp_1258);
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    controlIrql_1 := Mem_T.INT4[Tmp_1258];
    assume {:nonnull} rp != 0;
    assume rp > 0;
    call {:si_unique_call 2231} boogieTmp := CyzMoveToNewIntBuffer(Extension_67, newBuffer);
    call {:si_unique_call 2232} Tmp_1258 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    Mem_T.INT4[Tmp_1258] := pollIrql_14;
    call {:si_unique_call 2233} sdv_KeAcquireSpinLock(0, Tmp_1258);
    assume {:nonnull} Tmp_1258 != 0;
    assume Tmp_1258 > 0;
    pollIrql_14 := Mem_T.INT4[Tmp_1258];
    call {:si_unique_call 2234} vslice_dummy_var_562 := CyzUpdateAndSwitchToNew(rp);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2235} sdv_KeReleaseSpinLock(0, pollIrql_14);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2236} sdv_KeReleaseSpinLock(0, controlIrql_1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2237} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_1256 := 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    call {:si_unique_call 2238} sdv_ExFreePool(0);
    goto L20;
}



procedure {:origName "CyzRead"} CyzRead(actual_DeviceObject_27: int, actual_Irp_24: int) returns (Tmp_1261: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzRead"} CyzRead(actual_DeviceObject_27: int, actual_Irp_24: int) returns (Tmp_1261: int)
{
  var {:pointer} Tmp_1262: int;
  var {:pointer} Tmp_1263: int;
  var {:pointer} Tmp_1264: int;
  var {:scalar} sdv_941: int;
  var {:pointer} Tmp_1265: int;
  var {:pointer} sdv_943: int;
  var {:pointer} Tmp_1266: int;
  var {:pointer} Tmp_1267: int;
  var {:pointer} Tmp_1268: int;
  var {:pointer} Tmp_1270: int;
  var {:scalar} status_27: int;
  var {:pointer} extension_17: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;

  anon0:
    DeviceObject_27 := actual_DeviceObject_27;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 2239} Tmp_1262 := __HAVOC_malloc(68);
    call {:si_unique_call 2240} Tmp_1263 := __HAVOC_malloc(72);
    call {:si_unique_call 2241} Tmp_1264 := __HAVOC_malloc(96);
    call {:si_unique_call 2242} Tmp_1265 := __HAVOC_malloc(72);
    call {:si_unique_call 2243} Tmp_1266 := __HAVOC_malloc(68);
    call {:si_unique_call 2244} Tmp_1267 := __HAVOC_malloc(72);
    call {:si_unique_call 2245} Tmp_1268 := __HAVOC_malloc(68);
    call {:si_unique_call 2246} Tmp_1270 := __HAVOC_malloc(68);
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc extension_17;
    Tmp_1263 := strConst__li2bpl234;
    call {:si_unique_call 2247} vslice_dummy_var_563 := CyzDbgPrintEx(2, Tmp_1263);
    call {:si_unique_call 2248} status_27 := CyzIRPPrologue(Irp_24, extension_17);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_27 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_27 != 259;
    Tmp_1265 := strConst__li2bpl2;
    call {:si_unique_call 2249} vslice_dummy_var_564 := CyzDbgPrintEx(9, Tmp_1265);
    call {:si_unique_call 2250} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2251} CyzIRPEpilogue(extension_17);
    goto L19;

  L19:
    Tmp_1270 := strConst__li2bpl230;
    call {:si_unique_call 2252} vslice_dummy_var_565 := CyzDbgPrintEx(2, Tmp_1270);
    Tmp_1261 := status_27;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} status_27 == 259;
    goto L19;

  anon13_Then:
    assume {:partition} status_27 == 0;
    Tmp_1264 := strConst__li2bpl0;
    call {:si_unique_call 2253} vslice_dummy_var_566 := CyzDbgPrintEx(9, Tmp_1264);
    call {:si_unique_call 2254} sdv_941 := CyzCompleteIfError(DeviceObject_27, Irp_24);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_941 != 0;
    Tmp_1268 := strConst__li2bpl231;
    call {:si_unique_call 2255} vslice_dummy_var_567 := CyzDbgPrintEx(2, Tmp_1268);
    Tmp_1261 := -1073741536;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_941 == 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    call {:si_unique_call 2256} sdv_943 := sdv_IoGetCurrentIrpStackLocation(Irp_24);
    assume {:nonnull} sdv_943 != 0;
    assume sdv_943 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} extension_17 != 0;
    assume extension_17 > 0;
    call {:si_unique_call 2257} status_27 := CyzStartOrQueue(extension_17, Irp_24, ReadQueue__CYZ_DEVICE_EXTENSION(extension_17), CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_17), li2bplFunctionConstant381);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1262 := strConst__li2bpl232;
    call {:si_unique_call 2258} vslice_dummy_var_568 := CyzDbgPrintEx(2, Tmp_1262);
    Tmp_1261 := status_27;
    goto L1;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Tmp_1267 := strConst__li2bpl2;
    call {:si_unique_call 2259} vslice_dummy_var_569 := CyzDbgPrintEx(9, Tmp_1267);
    call {:si_unique_call 2260} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2261} CyzIRPEpilogue(extension_17);
    Tmp_1266 := strConst__li2bpl233;
    call {:si_unique_call 2262} vslice_dummy_var_570 := CyzDbgPrintEx(2, Tmp_1266);
    Tmp_1261 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzUpdateInterruptBuffer"} CyzUpdateInterruptBuffer(actual_Context_51: int) returns (Tmp_1273: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUpdateInterruptBuffer"} CyzUpdateInterruptBuffer(actual_Context_51: int) returns (Tmp_1273: int)
{
  var {:pointer} update: int;
  var {:pointer} extension_19: int;
  var {:pointer} Context_51: int;

  anon0:
    Context_51 := actual_Context_51;
    update := Context_51;
    assume {:nonnull} update != 0;
    assume update > 0;
    havoc extension_19;
    assume {:nonnull} extension_19 != 0;
    assume extension_19 > 0;
    assume {:nonnull} update != 0;
    assume update > 0;
    call {:si_unique_call 2263} CyzHandleReducedIntBuffer(extension_19);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1273 := 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzUpdateAndSwitchToNew"} CyzUpdateAndSwitchToNew(actual_Context_52: int) returns (Tmp_1283: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzUpdateAndSwitchToNew"} CyzUpdateAndSwitchToNew(actual_Context_52: int) returns (Tmp_1283: int)
{
  var {:pointer} params: int;
  var {:pointer} Tmp_1284: int;
  var {:scalar} tempCharsInInterruptBuffer: int;
  var {:pointer} extension_22: int;
  var {:pointer} Context_52: int;
  var boogieTmp: int;
  var vslice_dummy_var_571: int;

  anon0:
    Context_52 := actual_Context_52;
    params := Context_52;
    assume {:nonnull} params != 0;
    assume params > 0;
    havoc extension_22;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    havoc tempCharsInInterruptBuffer;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} params != 0;
    assume params > 0;
    havoc Tmp_1284;
    call {:si_unique_call 2264} vslice_dummy_var_571 := CyzMoveToNewIntBuffer(extension_22, Tmp_1284);
    goto L11;

  L11:
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    call {:si_unique_call 2265} boogieTmp := corral_nondet();
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    call {:si_unique_call 2266} boogieTmp := corral_nondet();
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    assume {:nonnull} extension_22 != 0;
    assume extension_22 > 0;
    call {:si_unique_call 2267} boogieTmp := corral_nondet();
    call {:si_unique_call 2268} CyzHandleReducedIntBuffer(extension_22);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1283 := 0;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    goto L11;
}



procedure {:origName "CyzGetCharsFromIntBuffer"} CyzGetCharsFromIntBuffer(actual_Extension_68: int) returns (Tmp_1286: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetCharsFromIntBuffer"} CyzGetCharsFromIntBuffer(actual_Extension_68: int) returns (Tmp_1286: int)
{
  var {:scalar} numberOfCharsToGet: int;
  var {:scalar} firstTryNumberToGet_1: int;
  var {:scalar} Tmp_1289: int;
  var {:pointer} Tmp_1290: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} Tmp_1292: int;
  var {:pointer} Tmp_1293: int;
  var {:pointer} Tmp_1295: int;
  var {:pointer} Extension_68: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;

  anon0:
    Extension_68 := actual_Extension_68;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc numberOfCharsToGet;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc numberOfCharsToGet;
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} numberOfCharsToGet != 0;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc firstTryNumberToGet_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} firstTryNumberToGet_1 > numberOfCharsToGet;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc vslice_dummy_var_437;
    call {:si_unique_call 2269} vslice_dummy_var_573 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_437);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1295;
    assume {:nonnull} Tmp_1295 != 0;
    assume Tmp_1295 > 0;
    call {:si_unique_call 2270} sdv_RtlMoveMemory(0, 0, numberOfCharsToGet);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto L9;

  L9:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1292;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    Tmp_1286 := numberOfCharsToGet;
    return;

  anon12_Then:
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto L9;

  anon11_Then:
    assume {:partition} numberOfCharsToGet >= firstTryNumberToGet_1;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc vslice_dummy_var_438;
    call {:si_unique_call 2271} vslice_dummy_var_572 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_438);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1293;
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    call {:si_unique_call 2272} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet_1);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    Tmp_1289 := numberOfCharsToGet - firstTryNumberToGet_1;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc vslice_dummy_var_439;
    call {:si_unique_call 2273} vslice_dummy_var_574 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_439);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    call {:si_unique_call 2274} sdv_RtlMoveMemory(0, 0, Tmp_1289);
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    assume {:nonnull} Extension_68 != 0;
    assume Extension_68 > 0;
    goto L9;

  anon9_Then:
    assume {:partition} numberOfCharsToGet == 0;
    goto L9;

  anon10_Then:
    goto L7;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYZ_GLOBALS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "AlternativeLists"} AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AmountInInQueue__SERIAL_STATUS"} {:fieldname "AmountInInQueue"} AmountInInQueue__SERIAL_STATUS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AmountInOutQueue__SERIAL_STATUS"} {:fieldname "AmountInOutQueue"} AmountInOutQueue__SERIAL_STATUS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_3"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BaudRate__SERIAL_BAUD_RATE"} {:fieldname "BaudRate"} BaudRate__SERIAL_BAUD_RATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Baud__CYZ_IOCTL_BAUD"} {:fieldname "Baud"} Baud__CYZ_IOCTL_BAUD(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BitsPerByte__SERIAL_WMI_COMM_DATA"} {:fieldname "BitsPerByte"} BitsPerByte__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BoardCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardCtrl"} BoardCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CONFIG_DATA"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CONFIG_DATA"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CONFIG_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.BreakChar__SERIAL_CHARS"} {:fieldname "BreakChar"} BreakChar__SERIAL_CHARS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BufCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "BufCtrl"} BufCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.BufferOverrunErrorCount__SERIALPERF_STATS"} {:fieldname "BufferOverrunErrorCount"} BufferOverrunErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BufferSizePt8__CYZ_DEVICE_EXTENSION"} {:fieldname "BufferSizePt8"} BufferSizePt8__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.BufferSize__CYZ_DEVICE_EXTENSION"} {:fieldname "BufferSize"} BufferSize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CONFIG_DATA"} {:fieldname "BusNumber"} BusNumber__CONFIG_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CYZ_DEVICE_EXTENSION"} {:fieldname "BusNumber"} BusNumber__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ChCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "ChCtrl"} ChCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.CharsCopied__SERIAL_UPDATE_CHAR"} {:fieldname "CharsCopied"} CharsCopied__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CharsInInterruptBuffer__CYZ_DEVICE_EXTENSION"} {:fieldname "CharsInInterruptBuffer"} CharsInInterruptBuffer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.CmdFailureLog__CYZ_DEVICE_EXTENSION"} {:fieldname "CmdFailureLog"} CmdFailureLog__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3364
}

function {:inline true} {:fieldmap "Mem_T.CommDataLen__CYZ_DEVICE_EXTENSION"} {:fieldname "CommDataLen"} CommDataLen__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommErrorDpc"} CommErrorDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.CommParity__CYZ_DEVICE_EXTENSION"} {:fieldname "CommParity"} CommParity__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 524
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommWaitDpc"} CommWaitDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 844
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteImmediateDpc"} CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 884
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteReadDpc"} CompleteReadDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 644
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteWriteDpc"} CompleteWriteDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 604
}

function {:inline true} {:fieldmap "Mem_T.Completed__SERIAL_UPDATE_CHAR"} {:fieldname "Completed"} Completed__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ControlHandShake__SERIAL_HANDFLOW"} {:fieldname "ControlHandShake"} ControlHandShake__SERIAL_HANDFLOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CountOfTryingToLowerRTS__CYZ_DEVICE_EXTENSION"} {:fieldname "CountOfTryingToLowerRTS"} CountOfTryingToLowerRTS__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.CountOnLastRead__CYZ_DEVICE_EXTENSION"} {:fieldname "CountOnLastRead"} CountOnLastRead__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.CountSinceXoff__CYZ_DEVICE_EXTENSION"} {:fieldname "CountSinceXoff"} CountSinceXoff__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__IO_RESOURCE_LIST"} {:fieldname "Count"} Count__IO_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Counter__SERIAL_XOFF_COUNTER"} {:fieldname "Counter"} Counter__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Create_unnamed_tag_8"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreatedSerialCommEntry__CYZ_DEVICE_EXTENSION"} {:fieldname "CreatedSerialCommEntry"} CreatedSerialCommEntry__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.CreatedSymbolicLink__CYZ_DEVICE_EXTENSION"} {:fieldname "CreatedSymbolicLink"} CreatedSymbolicLink__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.CurrentBaud__CYZ_DEVICE_EXTENSION"} {:fieldname "CurrentBaud"} CurrentBaud__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.CurrentCharSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "CurrentCharSlot"} CurrentCharSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentImmediateIrp"} CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentMaskIrp"} CurrentMaskIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentPurgeIrp"} CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentReadIrp"} CurrentReadIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.CurrentRxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentRxQueue"} CurrentRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentTxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentTxQueue"} CurrentTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWaitIrp"} CurrentWaitIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWriteIrp"} CurrentWriteIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 296
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentXoffIrp"} CurrentXoffIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.CutOverAmount__CYZ_DEVICE_EXTENSION"} {:fieldname "CutOverAmount"} CutOverAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "CyzStartEvent"} CyzStartEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2416
}

function {:inline true} {:fieldmap "Mem_T.DCDstatus__CYZ_DEVICE_EXTENSION"} {:fieldname "DCDstatus"} DCDstatus__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3368
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data__CYZ_CLOSE_SYNC"} {:fieldname "Data"} Data__CYZ_CLOSE_SYNC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Descriptors__IO_RESOURCE_LIST"} {:fieldname "Descriptors"} Descriptors__IO_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceClassSymbolicName"} DeviceClassSymbolicName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2260
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceIsOpened__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceIsOpened"} DeviceIsOpened__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 532
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceName"} DeviceName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__POWER_COMPLETION_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__POWER_COMPLETION_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DevicePNPAccept"} DevicePNPAccept__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2276
}

function {:inline true} {:fieldmap "Mem_T.DeviceStateMap__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceStateMap"} DeviceStateMap__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2576
}

function {:inline true} {:fieldmap "Mem_T._CYZ_DEVICE_STATE"} {:fieldname "DeviceState"} DeviceState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2540
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceWake"} DeviceWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3024
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DosName"} DosName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DpcCount__CYZ_DEVICE_EXTENSION"} {:fieldname "DpcCount"} DpcCount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3232
}

function {:inline true} {:fieldmap "Mem_T.Dpc__KTIMER"} {:fieldname "Dpc"} Dpc__KTIMER(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__CYZ_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2132
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.EmptiedTransmit__CYZ_DEVICE_EXTENSION"} {:fieldname "EmptiedTransmit"} EmptiedTransmit__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.EofChar__SERIAL_CHARS"} {:fieldname "EofChar"} EofChar__SERIAL_CHARS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EofReceived__SERIAL_STATUS"} {:fieldname "EofReceived"} EofReceived__SERIAL_STATUS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorChar__SERIAL_CHARS"} {:fieldname "ErrorChar"} ErrorChar__SERIAL_CHARS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ErrorWord__CYZ_DEVICE_EXTENSION"} {:fieldname "ErrorWord"} ErrorWord__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.Errors__SERIAL_STATUS"} {:fieldname "Errors"} Errors__SERIAL_STATUS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EscapeChar__CYZ_DEVICE_EXTENSION"} {:fieldname "EscapeChar"} EscapeChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 576
}

function {:inline true} {:fieldmap "Mem_T.EventChar__SERIAL_CHARS"} {:fieldname "EventChar"} EventChar__SERIAL_CHARS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYZ_CLOSE_SYNC"} {:fieldname "Extension"} Extension__CYZ_CLOSE_SYNC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYZ_IOCTL_BAUD"} {:fieldname "Extension"} Extension__CYZ_IOCTL_BAUD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_RESIZE_PARAMS"} {:fieldname "Extension"} Extension__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_UPDATE_CHAR"} {:fieldname "Extension"} Extension__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extensions__CYZ_DISPATCH"} {:fieldname "Extensions"} Extensions__CYZ_DISPATCH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirstReadableChar__CYZ_DEVICE_EXTENSION"} {:fieldname "FirstReadableChar"} FirstReadableChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T.Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Flags"} Flags__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2408
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FlowReplace__SERIAL_HANDFLOW"} {:fieldname "FlowReplace"} FlowReplace__SERIAL_HANDFLOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FrameErrorCount__SERIALPERF_STATS"} {:fieldname "FrameErrorCount"} FrameErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_HANDFLOW"} {:fieldname "HandFlow"} HandFlow__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HistoryMask__CYZ_DEVICE_EXTENSION"} {:fieldname "HistoryMask"} HistoryMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.HoldReasons__SERIAL_STATUS"} {:fieldname "HoldReasons"} HoldReasons__SERIAL_STATUS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HoldingEmpty__CYZ_DEVICE_EXTENSION"} {:fieldname "HoldingEmpty"} HoldingEmpty__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ImmediateChar__CYZ_DEVICE_EXTENSION"} {:fieldname "ImmediateChar"} ImmediateChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ImmediateTotalTimer"} ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1644
}

function {:inline true} {:fieldmap "Mem_T.InSize__SERIAL_QUEUE_SIZE"} {:fieldname "InSize"} InSize__SERIAL_QUEUE_SIZE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CONFIG_DATA"} {:fieldname "InterfaceType"} InterfaceType__CONFIG_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CYZ_DEVICE_EXTENSION"} {:fieldname "InterfaceType"} InterfaceType__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.InterruptReadBuffer__CYZ_DEVICE_EXTENSION"} {:fieldname "InterruptReadBuffer"} InterruptReadBuffer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IntervalReadTimeoutDpc"} IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 724
}

function {:inline true} {:fieldmap "Mem_T.IntervalTimeToUse__CYZ_DEVICE_EXTENSION"} {:fieldname "IntervalTimeToUse"} IntervalTimeToUse__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.IntervalTime__CYZ_DEVICE_EXTENSION"} {:fieldname "IntervalTime"} IntervalTime__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._IO_STATUS_BLOCK"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IoctlwProcessed__CYZ_DEVICE_EXTENSION"} {:fieldname "IoctlwProcessed"} IoctlwProcessed__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3372
}

function {:inline true} {:fieldmap "Mem_T.IrpMaskLocation__CYZ_DEVICE_EXTENSION"} {:fieldname "IrpMaskLocation"} IrpMaskLocation__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.IsBusy__SERIAL_WMI_COMM_DATA"} {:fieldname "IsBusy"} IsBusy__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IsrUnlockPagesDpc"} IsrUnlockPagesDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1124
}

function {:inline true} {:fieldmap "Mem_T.IsrWaitMask__CYZ_DEVICE_EXTENSION"} {:fieldname "IsrWaitMask"} IsrWaitMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.LastCharSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "LastCharSlot"} LastCharSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_42"} {:fieldname "Length"} Length_unnamed_tag_42(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.List__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "List"} List__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LongIntervalAmount"} LongIntervalAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__CYZ_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2124
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "LowerRTSTimer"} LowerRTSTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1964
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MaskQueue"} MaskQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T.MaxBaud__SERIAL_COMMPROP"} {:fieldname "MaxBaud"} MaxBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxRxQueue__SERIAL_COMMPROP"} {:fieldname "MaxRxQueue"} MaxRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.MaxTxQueue__SERIAL_COMMPROP"} {:fieldname "MaxTxQueue"} MaxTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaximumBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumBaudRate"} MaximumBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MaximumInputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumInputBufferSize"} MaximumInputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumOutputBufferSize"} MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_41"} {:fieldname "Memory"} Memory_unnamed_tag_41(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_53"} {:fieldname "Memory"} Memory_unnamed_tag_53(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NChannels__CYZ_DISPATCH"} {:fieldname "NChannels"} NChannels__CYZ_DISPATCH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NewBufferSize__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBufferSize"} NewBufferSize__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NewBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBuffer"} NewBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "NtNameForPort"} NtNameForPort__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.NumberMoved__SERIAL_RESIZE_PARAMS"} {:fieldname "NumberMoved"} NumberMoved__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberNeededForRead__CYZ_DEVICE_EXTENSION"} {:fieldname "NumberNeededForRead"} NumberNeededForRead__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.NumberOfStrings__IO_ERROR_LOG_PACKET"} {:fieldname "NumberOfStrings"} NumberOfStrings__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ObjectDirectory"} ObjectDirectory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.OldBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "OldBuffer"} OldBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "OpenCount"} OpenCount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2412
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalBoardMemory__CYZ_DEVICE_EXTENSION"} {:fieldname "OriginalBoardMemory"} OriginalBoardMemory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.OriginalRuntimeMemory__CYZ_DEVICE_EXTENSION"} {:fieldname "OriginalRuntimeMemory"} OriginalRuntimeMemory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurIsrContext__CYZ_DEVICE_EXTENSION"} {:fieldname "OurIsrContext"} OurIsrContext__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnsPowerPolicy__CYZ_DEVICE_EXTENSION"} {:fieldname "OwnsPowerPolicy"} OwnsPowerPolicy__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3016
}

function {:inline true} {:fieldmap "Mem_T.PNPState__CYZ_DEVICE_EXTENSION"} {:fieldname "PNPState"} PNPState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2404
}

function {:inline true} {:fieldmap "Mem_T.PPPaware__CONFIG_DATA"} {:fieldname "PPPaware"} PPPaware__CONFIG_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.PPPaware__CYZ_DEVICE_EXTENSION"} {:fieldname "PPPaware"} PPPaware__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3380
}

function {:inline true} {:fieldmap "Mem_T.PacketLength__SERIAL_COMMPROP"} {:fieldname "PacketLength"} PacketLength__SERIAL_COMMPROP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PacketVersion__SERIAL_COMMPROP"} {:fieldname "PacketVersion"} PacketVersion__SERIAL_COMMPROP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParityCheckEnable__SERIAL_WMI_COMM_DATA"} {:fieldname "ParityCheckEnable"} ParityCheckEnable__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ParityErrorCount__SERIALPERF_STATS"} {:fieldname "ParityErrorCount"} ParityErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_LINE_CONTROL"} {:fieldname "Parity"} Parity__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_WMI_COMM_DATA"} {:fieldname "Parity"} Parity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PciSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "PciSlot"} PciSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3396
}

function {:inline true} {:fieldmap "Mem_T.Pdo__CYZ_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3028
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3236
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYZ_DISPATCH(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.PendingIRPCnt__CYZ_DEVICE_EXTENSION"} {:fieldname "PendingIRPCnt"} PendingIRPCnt__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2272
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2280
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PendingWakeIrp__CYZ_DEVICE_EXTENSION"} {:fieldname "PendingWakeIrp"} PendingWakeIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3036
}

function {:inline true} {:fieldmap "Mem_T._SERIALPERF_STATS"} {:fieldname "PerfStats"} PerfStats__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 500
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PerhapsLowerRTSDpc"} PerhapsLowerRTSDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1084
}

function {:inline true} {:fieldmap "Mem_T.PhysicalBoardMemory__CONFIG_DATA"} {:fieldname "PhysicalBoardMemory"} PhysicalBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PhysicalRuntime__CONFIG_DATA"} {:fieldname "PhysicalRuntime"} PhysicalRuntime__CONFIG_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PollingCount__CYZ_DISPATCH"} {:fieldname "PollingCount"} PollingCount__CYZ_DISPATCH(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PollingDpc"} PollingDpc__CYZ_DISPATCH(x: int) : int
{
  x + 444
}

function {:inline true} {:fieldmap "Mem_T.PollingDrained__CYZ_DISPATCH"} {:fieldname "PollingDrained"} PollingDrained__CYZ_DISPATCH(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.PollingLock__CYZ_DISPATCH"} {:fieldname "PollingLock"} PollingLock__CYZ_DISPATCH(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.PollingPeriod__CYZ_DISPATCH"} {:fieldname "PollingPeriod"} PollingPeriod__CYZ_DISPATCH(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.PollingStarted__CYZ_DISPATCH"} {:fieldname "PollingStarted"} PollingStarted__CYZ_DISPATCH(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T.PollingTime__CYZ_DISPATCH"} {:fieldname "PollingTime"} PollingTime__CYZ_DISPATCH(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PortIndex"} PortIndex__CONFIG_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.PortIndex__CYZ_DEVICE_EXTENSION"} {:fieldname "PortIndex"} PortIndex__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.PowerState__CYZ_DEVICE_EXTENSION"} {:fieldname "PowerState"} PowerState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2128
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProvCapabilities__SERIAL_COMMPROP"} {:fieldname "ProvCapabilities"} ProvCapabilities__SERIAL_COMMPROP(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ProvSubType__SERIAL_COMMPROP"} {:fieldname "ProvSubType"} ProvSubType__SERIAL_COMMPROP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PtZfIntQueue__CYZ_DEVICE_EXTENSION"} {:fieldname "PtZfIntQueue"} PtZfIntQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PurgeQueue"} PurgeQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RXHolding__CYZ_DEVICE_EXTENSION"} {:fieldname "RXHolding"} RXHolding__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.ReadBufferBase__CYZ_DEVICE_EXTENSION"} {:fieldname "ReadBufferBase"} ReadBufferBase__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.ReadByIsr__CYZ_DEVICE_EXTENSION"} {:fieldname "ReadByIsr"} ReadByIsr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.ReadIntervalTimeout__SERIAL_TIMEOUTS"} {:fieldname "ReadIntervalTimeout"} ReadIntervalTimeout__SERIAL_TIMEOUTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ReadQueue"} ReadQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestIntervalTimer"} ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1324
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestTotalTimer"} ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1164
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutConstant"} ReadTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutMultiplier"} ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ReceivedCount__SERIALPERF_STATS"} {:fieldname "ReceivedCount"} ReceivedCount__SERIALPERF_STATS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reopen__CYZ_DEVICE_STATE"} {:fieldname "Reopen"} Reopen__CYZ_DEVICE_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ReturnStatusAfterFwEmpty__CYZ_DEVICE_EXTENSION"} {:fieldname "ReturnStatusAfterFwEmpty"} ReturnStatusAfterFwEmpty__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3376
}

function {:inline true} {:fieldmap "Mem_T.ReturnWriteStatus__CYZ_DEVICE_EXTENSION"} {:fieldname "ReturnWriteStatus"} ReturnWriteStatus__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3384
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CONFIG_DATA"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CYZ_DEVICE_EXTENSION"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CONFIG_DATA"} {:fieldname "RuntimeLength"} RuntimeLength__CONFIG_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CYZ_DEVICE_EXTENSION"} {:fieldname "RuntimeLength"} RuntimeLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.Runtime__CYZ_DEVICE_EXTENSION"} {:fieldname "Runtime"} Runtime__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.RxBufaddr__CYZ_DEVICE_EXTENSION"} {:fieldname "RxBufaddr"} RxBufaddr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 248
}

function {:inline true} {:fieldmap "Mem_T.RxBufsize__CYZ_DEVICE_EXTENSION"} {:fieldname "RxBufsize"} RxBufsize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.RxFIFO__CONFIG_DATA"} {:fieldname "RxFIFO"} RxFIFO__CONFIG_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RxFifoTrigger__CYZ_DEVICE_EXTENSION"} {:fieldname "RxFifoTrigger"} RxFifoTrigger__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.SIrp__POWER_COMPLETION_CONTEXT"} {:fieldname "SIrp"} SIrp__POWER_COMPLETION_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SendWaitWake__CYZ_DEVICE_EXTENSION"} {:fieldname "SendWaitWake"} SendWaitWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3032
}

function {:inline true} {:fieldmap "Mem_T.SendXoffChar__CYZ_DEVICE_EXTENSION"} {:fieldname "SendXoffChar"} SendXoffChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3392
}

function {:inline true} {:fieldmap "Mem_T.SendXonChar__CYZ_DEVICE_EXTENSION"} {:fieldname "SendXonChar"} SendXonChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3388
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SerialCount"} SerialCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SerialOverrunErrorCount__SERIALPERF_STATS"} {:fieldname "SerialOverrunErrorCount"} SerialOverrunErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ServiceMask__SERIAL_COMMPROP"} {:fieldname "ServiceMask"} ServiceMask__SERIAL_COMMPROP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SettableBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableBaudRate"} SettableBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SettableBaud__SERIAL_COMMPROP"} {:fieldname "SettableBaud"} SettableBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SettableDataBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableDataBits"} SettableDataBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.SettableData__SERIAL_COMMPROP"} {:fieldname "SettableData"} SettableData__SERIAL_COMMPROP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SettableFlowControl__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableFlowControl"} SettableFlowControl__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SettableParams__SERIAL_COMMPROP"} {:fieldname "SettableParams"} SettableParams__SERIAL_COMMPROP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SettableParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParityCheck"} SettableParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.SettableParity__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParity"} SettableParity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SettableStopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableStopBits"} SettableStopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.SettableStopParity__SERIAL_COMMPROP"} {:fieldname "SettableStopParity"} SettableStopParity__SERIAL_COMMPROP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__IO_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "ShortIntervalAmount"} ShortIntervalAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SkipNaming"} SkipNaming__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3360
}

function {:inline true} {:fieldmap "Mem_T.SpecialChars__CYZ_DEVICE_EXTENSION"} {:fieldname "SpecialChars"} SpecialChars__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "StalledIrpQueue"} StalledIrpQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2728
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "StartTimerLowerRTSDpc"} StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1044
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_42"} {:fieldname "Start"} Start_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_LINE_CONTROL"} {:fieldname "StopBits"} StopBits__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "StopBits"} StopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.StringOffset__IO_ERROR_LOG_PACKET"} {:fieldname "StringOffset"} StringOffset__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Support16BitMode__SERIAL_WMI_COMM_DATA"} {:fieldname "Support16BitMode"} Support16BitMode__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SupportDTRDSR__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportDTRDSR"} SupportDTRDSR__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportIntervalTimeouts"} SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SupportParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportParityCheck"} SupportParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SupportRTSCTS__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportRTSCTS"} SupportRTSCTS__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SupportXonXoff__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportXonXoff"} SupportXonXoff__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SupportedBauds__CYZ_DEVICE_EXTENSION"} {:fieldname "SupportedBauds"} SupportedBauds__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__CYZ_DEVICE_EXTENSION"} {:fieldname "SystemWake"} SystemWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3020
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TXHolding__CYZ_DEVICE_EXTENSION"} {:fieldname "TXHolding"} TXHolding__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Timeout__SERIAL_XOFF_COUNTER"} {:fieldname "Timeout"} Timeout__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Timeouts__CYZ_DEVICE_EXTENSION"} {:fieldname "Timeouts"} Timeouts__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.TotalCharsQueued__CYZ_DEVICE_EXTENSION"} {:fieldname "TotalCharsQueued"} TotalCharsQueued__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalImmediateTimeoutDpc"} TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 924
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalReadTimeoutDpc"} TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 684
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalWriteTimeoutDpc"} TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.TranslatedBoardMemory__CONFIG_DATA"} {:fieldname "TranslatedBoardMemory"} TranslatedBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.TranslatedRuntime__CONFIG_DATA"} {:fieldname "TranslatedRuntime"} TranslatedRuntime__CONFIG_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TransmitImmediate__CYZ_DEVICE_EXTENSION"} {:fieldname "TransmitImmediate"} TransmitImmediate__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.TransmittedCount__SERIALPERF_STATS"} {:fieldname "TransmittedCount"} TransmittedCount__SERIALPERF_STATS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.TxBufaddr__CYZ_DEVICE_EXTENSION"} {:fieldname "TxBufaddr"} TxBufaddr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.TxBufsize__CYZ_DEVICE_EXTENSION"} {:fieldname "TxBufsize"} TxBufsize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.TxFIFO__CONFIG_DATA"} {:fieldname "TxFIFO"} TxFIFO__CONFIG_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.TxFifoAmount__CYZ_DEVICE_EXTENSION"} {:fieldname "TxFifoAmount"} TxFifoAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Type"} Type__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ValidDataMask__CYZ_DEVICE_EXTENSION"} {:fieldname "ValidDataMask"} ValidDataMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 572
}

function {:inline true} {:fieldmap "Mem_T.WaitForImmediate__SERIAL_STATUS"} {:fieldname "WaitForImmediate"} WaitForImmediate__SERIAL_STATUS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.WmiCommData__CYZ_DEVICE_EXTENSION"} {:fieldname "WmiCommData"} WmiCommData__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3084
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "WmiIdentifier"} WmiIdentifier__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3072
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__CYZ_DEVICE_EXTENSION"} {:fieldname "WmiLibInfo"} WmiLibInfo__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3040
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_WMI_PERF_DATA"} {:fieldname "WmiPerfData"} WmiPerfData__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3208
}

function {:inline true} {:fieldmap "Mem_T.WordLength__SERIAL_LINE_CONTROL"} {:fieldname "WordLength"} WordLength__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "WriteComplete"} WriteComplete__CONFIG_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.WriteCurrentChar__CYZ_DEVICE_EXTENSION"} {:fieldname "WriteCurrentChar"} WriteCurrentChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.WriteLength__CYZ_DEVICE_EXTENSION"} {:fieldname "WriteLength"} WriteLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "WriteQueue"} WriteQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "WriteRequestTotalTimer"} WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1484
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutConstant"} WriteTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutMultiplier"} WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.XoffChar__SERIAL_CHARS"} {:fieldname "XoffChar"} XoffChar__SERIAL_CHARS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.XoffCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffCharacter"} XoffCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountCompleteDpc"} XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1004
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountTimeoutDpc"} XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 964
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "XoffCountTimer"} XoffCountTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1804
}

function {:inline true} {:fieldmap "Mem_T.XoffLimit__SERIAL_HANDFLOW"} {:fieldname "XoffLimit"} XoffLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.XoffXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffXmitThreshold"} XoffXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.XonChar__SERIAL_CHARS"} {:fieldname "XonChar"} XonChar__SERIAL_CHARS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.XonCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XonCharacter"} XonCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.XonLimit__SERIAL_HANDFLOW"} {:fieldname "XonLimit"} XonLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.XonXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XonXmitThreshold"} XonXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.BOARD_CTRL"} {:fieldname "board_ctrl"} board_ctrl_ZFW_CTRL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.buf_ctrl_ZFW_CTRL"} {:fieldname "buf_ctrl"} buf_ctrl_ZFW_CTRL(x: int) : int
{
  x + 6208
}

function {:inline true} {:fieldmap "Mem_T.ch_ctrl_ZFW_CTRL"} {:fieldname "ch_ctrl"} ch_ctrl_ZFW_CTRL(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.channel_INT_QUEUE"} {:fieldname "channel"} channel_INT_QUEUE(x: int) : int
{
  x + 2560
}

function {:inline true} {:fieldmap "Mem_T.intr_code_INT_QUEUE"} {:fieldname "intr_code"} intr_code_INT_QUEUE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.param_INT_QUEUE"} {:fieldname "param"} param_INT_QUEUE(x: int) : int
{
  x + 5120
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "pci_doorbell"} pci_doorbell_RUNTIME_9060(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__IO_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl6: int;

const {:string " The default interrupt read buffer size is: %d\n------  The XoffLimit is                         : %d\n------  The XonLimit is                          : %d\n------  The pt 8 size is                         : %d\n"} unique strConst__li2bpl47: int;

const {:string "%s%u"} unique strConst__li2bpl146: int;

const {:string "%x irp was already marked as cancelled\n"} unique strConst__li2bpl219: int;

const {:string "%x is a SETMASK irp\n"} unique strConst__li2bpl214: int;

const {:string "%x occurred prior to the wait - starting the\n------- completion code for %x\n"} unique strConst__li2bpl210: int;

const {:string "%x was the first irp processed by this\n------- invocation of startmask\n"} unique strConst__li2bpl215: int;

const {:string "%x will become the current wait irp\n"} unique strConst__li2bpl218: int;

const {:string "------- BusRelations Query\n"} unique strConst__li2bpl128: int;

const {:string "------- EjectionRelations Query\n"} unique strConst__li2bpl129: int;

const {:string "------- PowerRelations Query\n"} unique strConst__li2bpl130: int;

const {:string "------- RemovalRelations Query\n"} unique strConst__li2bpl131: int;

const {:string "------- TargetDeviceRelation Query\n"} unique strConst__li2bpl132: int;

const {:string "------- Unknown Query\n"} unique strConst__li2bpl127: int;

const {:string "<CyzCommError\n"} unique strConst__li2bpl48: int;

const {:string "<CyzCompleteRead(%X)\n"} unique strConst__li2bpl237: int;

const {:string "<CyzCompleteWait\n"} unique strConst__li2bpl225: int;

const {:string "<CyzCompleteWrite\n"} unique strConst__li2bpl194: int;

const {:string "<CyzCompleteXoff\n"} unique strConst__li2bpl196: int;

const {:string "<CyzDisableInterfaces\n"} unique strConst__li2bpl31: int;

const {:string "<CyzFlush (1) %X\n"} unique strConst__li2bpl4: int;

const {:string "<CyzFlush (2) %X\n"} unique strConst__li2bpl5: int;

const {:string "<CyzFlush (3) %X\n"} unique strConst__li2bpl3: int;

const {:string "<CyzGetNextWrite\n"} unique strConst__li2bpl199: int;

const {:string "<CyzGetRegistryKeyValue %X\n"} unique strConst__li2bpl8: int;

const {:string "<CyzInitMultiPort (1) %X\n"} unique strConst__li2bpl51: int;

const {:string "<CyzInitMultiPort (3) %X\n"} unique strConst__li2bpl52: int;

const {:string "<CyzKillPendingIrps\n"} unique strConst__li2bpl32: int;

const {:string "<CyzRead (1) %X\n"} unique strConst__li2bpl230: int;

const {:string "<CyzRead (2) %X\n"} unique strConst__li2bpl231: int;

const {:string "<CyzRead (3) %X\n"} unique strConst__li2bpl232: int;

const {:string "<CyzRead (4) %X\n"} unique strConst__li2bpl233: int;

const {:string "<CyzReadTimeout\n"} unique strConst__li2bpl235: int;

const {:string "<CyzReleaseResources\n"} unique strConst__li2bpl34: int;

const {:string "<CyzRemoveDevObj %X\n"} unique strConst__li2bpl18: int;

const {:string "<CyzStartImmediate\n"} unique strConst__li2bpl72: int;

const {:string "<CyzStartRead %X\n"} unique strConst__li2bpl228: int;

const {:string "<CyzStartWrite %X\n"} unique strConst__li2bpl192: int;

const {:string "<CyzTimeoutXoff\n"} unique strConst__li2bpl190: int;

const {:string "<CyzUnstallIrps\n"} unique strConst__li2bpl189: int;

const {:string "<CyzWrite (1) %X\n"} unique strConst__li2bpl200: int;

const {:string "<CyzWrite (2) %X\n"} unique strConst__li2bpl201: int;

const {:string "<CyzWrite (3) %X\n"} unique strConst__li2bpl202: int;

const {:string "<CyzWrite (4) %X\n"} unique strConst__li2bpl203: int;

const {:string ">CyzCommError(%X)\n"} unique strConst__li2bpl49: int;

const {:string ">CyzCompleteRead(%X)\n"} unique strConst__li2bpl238: int;

const {:string ">CyzCompleteWait(%X)\n"} unique strConst__li2bpl226: int;

const {:string ">CyzCompleteWrite(%X)\n"} unique strConst__li2bpl195: int;

const {:string ">CyzCompleteXoff(%X)\n"} unique strConst__li2bpl197: int;

const {:string ">CyzDisableInterfaces(%X, %s)\n"} unique strConst__li2bpl30: int;

const {:string ">CyzFindInitController(%X, %X)\n"} unique strConst__li2bpl26: int;

const {:string ">CyzFlush(%X, %X)\n"} unique strConst__li2bpl1: int;

const {:string ">CyzGetNextWrite(XXX)\n"} unique strConst__li2bpl198: int;

const {:string ">CyzGetRegistryKeyValue(XXX)\n"} unique strConst__li2bpl7: int;

const {:string ">CyzInitMultiPort(%X, %X, %X)\n"} unique strConst__li2bpl50: int;

const {:string ">CyzKillPendingIrps(%X)\n"} unique strConst__li2bpl33: int;

const {:string ">CyzRead(%X, %X)\n"} unique strConst__li2bpl234: int;

const {:string ">CyzReadTimeout(%X)\n"} unique strConst__li2bpl236: int;

const {:string ">CyzReleaseResources(%X)\n"} unique strConst__li2bpl36: int;

const {:string ">CyzRemoveDevObj(%X)\n"} unique strConst__li2bpl17: int;

const {:string ">CyzStartImmediate(%X)\n"} unique strConst__li2bpl71: int;

const {:string ">CyzStartRead(%X)\n"} unique strConst__li2bpl229: int;

const {:string ">CyzStartWrite(%X)\n"} unique strConst__li2bpl193: int;

const {:string ">CyzTimeoutXoff(%X)\n"} unique strConst__li2bpl191: int;

const {:string ">CyzUnstallIrps(%X)\n"} unique strConst__li2bpl187: int;

const {:string ">CyzWrite(%X, %X)\n"} unique strConst__li2bpl204: int;

const {:string "Aha! It is a first multi\n"} unique strConst__li2bpl22: int;

const {:string "Aha! It is a multiport node\n"} unique strConst__li2bpl23: int;

const {:string "Already in requested power state\n"} unique strConst__li2bpl64: int;

const {:string "Attempting to init %wZ\n------- Runtime Memory is %x\n------- Board Memory is %x\n------- BusNumber is %d\n------- BusType is %d\n------- Runtime AddressSpace is %d\n------- Board AddressSpace is %d\n"} unique strConst__li2bpl27: int;

const {:string "Board Memory address: %x\n"} unique strConst__li2bpl91: int;

const {:string "Bogus Runtime address %x\n"} unique strConst__li2bpl98: int;

const {:string "Bogus board address %x\n"} unique strConst__li2bpl97: int;

const {:string "CLEAN: removing multiport isr ext\n"} unique strConst__li2bpl16: int;

const {:string "Can't filter NULL resources!\n"} unique strConst__li2bpl124: int;

const {:string "Canceling wait for irp %x\n"} unique strConst__li2bpl221: int;

const {:string "Cleaning up failed start\n"} unique strConst__li2bpl101: int;

const {:string "Clearing DTR for Port%d Pci%d\n"} unique strConst__li2bpl174: int;

const {:string "Clearing RTS for Port%d Pci%d\n"} unique strConst__li2bpl173: int;

const {:string "Clearing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl180: int;

const {:string "Close open count bad for: 0x%x\n"} unique strConst__li2bpl75: int;

const {:string "Close prologue failed for: %x\n"} unique strConst__li2bpl74: int;

const {:string "Com Board AddressSpace: %x\n"} unique strConst__li2bpl95: int;

const {:string "Com InterfaceType: %x\n"} unique strConst__li2bpl96: int;

const {:string "Com Port BusNumber: %x\n"} unique strConst__li2bpl93: int;

const {:string "Com Port Index: %x\n"} unique strConst__li2bpl92: int;

const {:string "Com Runtime AddressSpace: %x\n"} unique strConst__li2bpl94: int;

const {:string "Complete Irp: %X\n"} unique strConst__li2bpl2: int;

const {:string "Completing wait for irp %x\n"} unique strConst__li2bpl224: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different Runtime addresses\n"} unique strConst__li2bpl24: int;

const {:string "Could not map Board memory BufCtrl for %wZ\n"} unique strConst__li2bpl42: int;

const {:string "Could not map Board memory ChCtrl for %wZ\n"} unique strConst__li2bpl43: int;

const {:string "Could not map Board memory IntQueue for %wZ\n"} unique strConst__li2bpl39: int;

const {:string "Could not map Board memory RxBuf for %wZ\n"} unique strConst__li2bpl40: int;

const {:string "Could not map Board memory TxBuf for %wZ\n"} unique strConst__li2bpl41: int;

const {:string "Could not map Board memory for device registers for %wZ\n"} unique strConst__li2bpl45: int;

const {:string "Could not map BoardCtrl for %wZ\n"} unique strConst__li2bpl44: int;

const {:string "Could not map Runtime memory for device registers for %wZ\n"} unique strConst__li2bpl46: int;

const {:string "Couldn't allocate memory for Dos name\n"} unique strConst__li2bpl164: int;

const {:string "Couldn't allocate memory for WMI name\n"} unique strConst__li2bpl166: int;

const {:string "Couldn't allocate memory for buffer\n"} unique strConst__li2bpl168: int;

const {:string "Couldn't allocate memory for device name\n"} unique strConst__li2bpl169: int;

const {:string "Couldn't allocate memory for symbolic link name\n"} unique strConst__li2bpl165: int;

const {:string "Couldn't allocate memory for the\n------  user configuration record\n"} unique strConst__li2bpl105: int;

const {:string "Couldn't create the device map entry\n------- for port %wZ\n"} unique strConst__li2bpl162: int;

const {:string "Couldn't create the symbolic link\nfor port %wZ\n"} unique strConst__li2bpl163: int;

const {:string "Couldn't delete value entry %wZ\n"} unique strConst__li2bpl110: int;

const {:string "Couldn't register class association\nfor port %wZ\n"} unique strConst__li2bpl160: int;

const {:string "Couldn't set class association for port %wZ\n"} unique strConst__li2bpl161: int;

const {:string "Count: %x  Addr: 0x%x\n"} unique strConst__li2bpl76: int;

const {:string "Cyclades-Z\\Port"} unique strConst__li2bpl147: int;

const {:string "CyzGetRegistryKeyValue FirmwareVersion failed - %x\n"} unique strConst__li2bpl100: int;

const {:string "CyzGetRegistryKeyValue PortResources failed - %x\n"} unique strConst__li2bpl152: int;

const {:string "CyzGetRegistryKeyValue PortResourcesTr failed - %xn"} unique strConst__li2bpl153: int;

const {:string "CyzRelinquishPowerPolicy"} unique strConst__li2bpl106: int;

const {:string "CyzSkipExternalNaming"} unique strConst__li2bpl154: int;

const {:string "DPC's drained: %x\n"} unique strConst__li2bpl78: int;

const {:string "Deleting Link %wZ\n"} unique strConst__li2bpl108: int;

const {:string "DevicePowerState\n"} unique strConst__li2bpl63: int;

const {:string "Dispatch entry for: %x\n"} unique strConst__li2bpl0: int;

const {:string "DoesPortExist test failed for %wZ\n"} unique strConst__li2bpl38: int;

const {:string "DosDevices"} unique strConst__li2bpl158: int;

const {:string "DosName is %wZ\n"} unique strConst__li2bpl159: int;

const {:string "Draining DPC's: %x\n"} unique strConst__li2bpl79: int;

const {:string "Enter CyzRestoreDeviceState\n"} unique strConst__li2bpl54: int;

const {:string "Entering CyzSaveDeviceState\n"} unique strConst__li2bpl67: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around Board memory\n"} unique strConst__li2bpl21: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around physical memory\n"} unique strConst__li2bpl19: int;

const {:string "Error in config record for %wZ\n------  board memory wraps around physical memory\n"} unique strConst__li2bpl20: int;

const {:string "External Naming Failed - Status %x\n"} unique strConst__li2bpl104: int;

const {:string "FALSE"} unique strConst__li2bpl28: int;

const {:string "FirmwareVersion"} unique strConst__li2bpl85: int;

const {:string "Getting PortName/Identifier failed - %x\n"} unique strConst__li2bpl167: int;

const {:string "Going to power state D0\n"} unique strConst__li2bpl66: int;

const {:string "Going to power state D3\n"} unique strConst__li2bpl65: int;

const {:string "Got IRP_MN_CANCEL_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl111: int;

const {:string "Got IRP_MN_CANCEL_STOP_DEVICE Irp\n"} unique strConst__li2bpl112: int;

const {:string "Got IRP_MN_EJECT Irp\n"} unique strConst__li2bpl118: int;

const {:string "Got IRP_MN_FILTER_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl139: int;

const {:string "Got IRP_MN_POWER_SEQUENCE Irp\n"} unique strConst__li2bpl58: int;

const {:string "Got IRP_MN_QUERY_DEVICE_CAPABILITIES IRP\n"} unique strConst__li2bpl125: int;

const {:string "Got IRP_MN_QUERY_DEVICE_RELATIONS Irp\n"} unique strConst__li2bpl113: int;

const {:string "Got IRP_MN_QUERY_ID Irp\n"} unique strConst__li2bpl145: int;

const {:string "Got IRP_MN_QUERY_INTERFACE Irp\n"} unique strConst__li2bpl114: int;

const {:string "Got IRP_MN_QUERY_POWER Irp\n"} unique strConst__li2bpl60: int;

const {:string "Got IRP_MN_QUERY_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl136: int;

const {:string "Got IRP_MN_QUERY_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl115: int;

const {:string "Got IRP_MN_QUERY_STOP_DEVICE Irp\n"} unique strConst__li2bpl133: int;

const {:string "Got IRP_MN_READ_CONFIG Irp\n"} unique strConst__li2bpl116: int;

const {:string "Got IRP_MN_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl135: int;

const {:string "Got IRP_MN_SET_LOCK Irp\n"} unique strConst__li2bpl119: int;

const {:string "Got IRP_MN_SET_POWER Irp\n"} unique strConst__li2bpl59: int;

const {:string "Got IRP_MN_START_DEVICE Irp\n"} unique strConst__li2bpl137: int;

const {:string "Got IRP_MN_STOP_DEVICE Irp\n"} unique strConst__li2bpl134: int;

const {:string "Got IRP_MN_SURPRISE_REMOVAL Irp\n"} unique strConst__li2bpl120: int;

const {:string "Got IRP_MN_WAIT_WAKE Irp\n"} unique strConst__li2bpl57: int;

const {:string "Got IRP_MN_WRITE_CONFIG Irp\n"} unique strConst__li2bpl117: int;

const {:string "ID is sole ID\n"} unique strConst__li2bpl122: int;

const {:string "Identifier"} unique strConst__li2bpl156: int;

const {:string "In CyzCancelWait\n"} unique strConst__li2bpl222: int;

const {:string "In CyzClose\n"} unique strConst__li2bpl77: int;

const {:string "In CyzCompleteWait\n"} unique strConst__li2bpl223: int;

const {:string "In CyzCreateOpen\n"} unique strConst__li2bpl73: int;

const {:string "In CyzFinishOldWait\n"} unique strConst__li2bpl207: int;

const {:string "In CyzGiveWaitToIsr\n"} unique strConst__li2bpl211: int;

const {:string "In CyzGotoPowerState\n"} unique strConst__li2bpl69: int;

const {:string "In CyzGrabWaitFromIsr\n"} unique strConst__li2bpl206: int;

const {:string "In CyzSetPowerD3\n"} unique strConst__li2bpl53: int;

const {:string "In CyzStartMask\n"} unique strConst__li2bpl220: int;

const {:string "In CyzUndoExternalNaming for extension: %x of port %wZ\n"} unique strConst__li2bpl107: int;

const {:string "In Ioctl processing for set mask\n"} unique strConst__li2bpl12: int;

const {:string "In Ioctl processing for wait mask\n"} unique strConst__li2bpl9: int;

const {:string "Incompatible firmware\n"} unique strConst__li2bpl87: int;

const {:string "Initializing for configuration record of %wZ\n"} unique strConst__li2bpl37: int;

const {:string "Invalid Bus type %x\n"} unique strConst__li2bpl89: int;

const {:string "Invalid size fo the buffer %d\n"} unique strConst__li2bpl13: int;

const {:string "Invalid size for the buffer %d\n"} unique strConst__li2bpl11: int;

const {:string "IoOpenDeviceRegistryKey failed - %x \n"} unique strConst__li2bpl83: int;

const {:string "Leaving CyzGotoPowerState\n"} unique strConst__li2bpl70: int;

const {:string "Leaving CyzSaveDeviceState\n"} unique strConst__li2bpl68: int;

const {:string "List has %x lists (including alternatives)\n"} unique strConst__li2bpl140: int;

const {:string "List has %x resources in it\n"} unique strConst__li2bpl141: int;

const {:string "Mapping power capabilities\n"} unique strConst__li2bpl126: int;

const {:string "Matched to %x\n"} unique strConst__li2bpl25: int;

const {:string "No events occured prior to the wait call\n"} unique strConst__li2bpl209: int;

const {:string "Not doing external naming -- state is %x\n"} unique strConst__li2bpl103: int;

const {:string "PDevExt: %x\n"} unique strConst__li2bpl55: int;

const {:string "Perhaps another mask irp was found in the queue\n------- %x/%x <- values should be the same\n"} unique strConst__li2bpl216: int;

const {:string "Port index too large %x\n"} unique strConst__li2bpl88: int;

const {:string "PortIndex"} unique strConst__li2bpl84: int;

const {:string "PortName"} unique strConst__li2bpl155: int;

const {:string "PortResources"} unique strConst__li2bpl150: int;

const {:string "PortResourcesTr"} unique strConst__li2bpl151: int;

const {:string "Processing DTR flow for Port%d Pci%d\n"} unique strConst__li2bpl175: int;

const {:string "Processing RTS flow\n"} unique strConst__li2bpl177: int;

const {:string "Read name %wZ\n"} unique strConst__li2bpl170: int;

const {:string "Release - freeing multi context\n"} unique strConst__li2bpl35: int;

const {:string "Removing DTR block on reception for Port%d Pci%d\n"} unique strConst__li2bpl176: int;

const {:string "Removing dtr block of reception for Port%d Pci%d\n"} unique strConst__li2bpl183: int;

const {:string "Removing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl178: int;

const {:string "Reopening device\n"} unique strConst__li2bpl56: int;

const {:string "Runtime Memory address: %x\n"} unique strConst__li2bpl99: int;

const {:string "SERIALCOMM"} unique strConst__li2bpl109: int;

const {:string "STARTMASK - CurrentMaskIrp: %x\n"} unique strConst__li2bpl213: int;

const {:string "Set mask location of %x, in irp %x, with system buffer of %x\n"} unique strConst__li2bpl208: int;

const {:string "Setting DTR block on reception for Port%d Pci%d\n"} unique strConst__li2bpl182: int;

const {:string "Setting DTR for Port%d Pci%d\n"} unique strConst__li2bpl185: int;

const {:string "Setting RTS for Port%d Pci%d\n"} unique strConst__li2bpl186: int;

const {:string "Setting rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl179: int;

const {:string "Sharing Board Memory for device %x\n"} unique strConst__li2bpl144: int;

const {:string "Sharing Runtime Memory for device %x\n"} unique strConst__li2bpl143: int;

const {:string "Sharing interrupt for device %x\n"} unique strConst__li2bpl142: int;

const {:string "Starting or queuing set mask irp %x\n"} unique strConst__li2bpl14: int;

const {:string "Starting or queuing wait mask irp%x\n"} unique strConst__li2bpl10: int;

const {:string "SystemPowerState\n"} unique strConst__li2bpl62: int;

const {:string "TOGGLE Clearing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl181: int;

const {:string "TR resource pointer is %x\n"} unique strConst__li2bpl82: int;

const {:string "TRUE"} unique strConst__li2bpl29: int;

const {:string "The isr owns the irp %x, mask location is %x\n------- and system buffer is %x\n"} unique strConst__li2bpl212: int;

const {:string "The isr still owns the irp %x, mask location is %x\n------- and system buffer is %x\n"} unique strConst__li2bpl205: int;

const {:string "There aren't that many of those\nbusses on this system,%x\n"} unique strConst__li2bpl90: int;

const {:string "UNKNOWN PowerState\n"} unique strConst__li2bpl61: int;

const {:string "Unknown mask %x\n"} unique strConst__li2bpl15: int;

const {:string "Unstalling Irp 0x%x with 0x%x\n"} unique strConst__li2bpl188: int;

const {:string "WaitIrp is invalid\n------- IsrWaitMask: %x\n------- CurrentWaitIrp: %x\n"} unique strConst__li2bpl217: int;

const {:string "We should not have Port resource\n"} unique strConst__li2bpl123: int;

const {:string "WriteComplete"} unique strConst__li2bpl86: int;

const {:string "\\"} unique strConst__li2bpl157: int;

const {:string "callee"} unique strConst__li2bpl227: int;

const {:string "entering CyzGetPortInfo\n"} unique strConst__li2bpl80: int;

const {:string "entering CyzStartDevice\n"} unique strConst__li2bpl148: int;

const {:string "error with IoCallDriver %x\n"} unique strConst__li2bpl149: int;

const {:string "failing; device open\n"} unique strConst__li2bpl138: int;

const {:string "for device %x\n"} unique strConst__li2bpl121: int;

const {:string "leaving CyzFinishStartDevice\n"} unique strConst__li2bpl102: int;

const {:string "removing dtr block of reception for Port%d Pci%d\n"} unique strConst__li2bpl184: int;

const {:string "resource pointer is %x\n"} unique strConst__li2bpl81: int;

const {:string "sdv_KeReleaseSpinLock must restore old IRQL value."} unique strConst__li2bpl172: int;

const {:string "sdv_KeReleaseSpinLock should only be called at IRQL = DISPATCH_LEVEL."} unique strConst__li2bpl171: int;

const {:allocated} li2bplFunctionConstant113: int;

axiom li2bplFunctionConstant113 == 113;

const {:allocated} li2bplFunctionConstant131: int;

axiom li2bplFunctionConstant131 == 131;

const {:allocated} li2bplFunctionConstant144: int;

axiom li2bplFunctionConstant144 == 144;

const {:allocated} li2bplFunctionConstant149: int;

axiom li2bplFunctionConstant149 == 149;

const {:allocated} li2bplFunctionConstant151: int;

axiom li2bplFunctionConstant151 == 151;

const {:allocated} li2bplFunctionConstant161: int;

axiom li2bplFunctionConstant161 == 161;

const {:allocated} li2bplFunctionConstant177: int;

axiom li2bplFunctionConstant177 == 177;

const {:allocated} li2bplFunctionConstant178: int;

axiom li2bplFunctionConstant178 == 178;

const {:allocated} li2bplFunctionConstant179: int;

axiom li2bplFunctionConstant179 == 179;

const {:allocated} li2bplFunctionConstant182: int;

axiom li2bplFunctionConstant182 == 182;

const {:allocated} li2bplFunctionConstant194: int;

axiom li2bplFunctionConstant194 == 194;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant219: int;

axiom li2bplFunctionConstant219 == 219;

const {:allocated} li2bplFunctionConstant227: int;

axiom li2bplFunctionConstant227 == 227;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant229: int;

axiom li2bplFunctionConstant229 == 229;

const {:allocated} li2bplFunctionConstant230: int;

axiom li2bplFunctionConstant230 == 230;

const {:allocated} li2bplFunctionConstant232: int;

axiom li2bplFunctionConstant232 == 232;

const {:allocated} li2bplFunctionConstant280: int;

axiom li2bplFunctionConstant280 == 280;

const {:allocated} li2bplFunctionConstant283: int;

axiom li2bplFunctionConstant283 == 283;

const {:allocated} li2bplFunctionConstant284: int;

axiom li2bplFunctionConstant284 == 284;

const {:allocated} li2bplFunctionConstant285: int;

axiom li2bplFunctionConstant285 == 285;

const {:allocated} li2bplFunctionConstant290: int;

axiom li2bplFunctionConstant290 == 290;

const {:allocated} li2bplFunctionConstant312: int;

axiom li2bplFunctionConstant312 == 312;

const {:allocated} li2bplFunctionConstant313: int;

axiom li2bplFunctionConstant313 == 313;

const {:allocated} li2bplFunctionConstant314: int;

axiom li2bplFunctionConstant314 == 314;

const {:allocated} li2bplFunctionConstant315: int;

axiom li2bplFunctionConstant315 == 315;

const {:allocated} li2bplFunctionConstant316: int;

axiom li2bplFunctionConstant316 == 316;

const {:allocated} li2bplFunctionConstant347: int;

axiom li2bplFunctionConstant347 == 347;

const {:allocated} li2bplFunctionConstant348: int;

axiom li2bplFunctionConstant348 == 348;

const {:allocated} li2bplFunctionConstant349: int;

axiom li2bplFunctionConstant349 == 349;

const {:allocated} li2bplFunctionConstant350: int;

axiom li2bplFunctionConstant350 == 350;

const {:allocated} li2bplFunctionConstant351: int;

axiom li2bplFunctionConstant351 == 351;

const {:allocated} li2bplFunctionConstant352: int;

axiom li2bplFunctionConstant352 == 352;

const {:allocated} li2bplFunctionConstant380: int;

axiom li2bplFunctionConstant380 == 380;

const {:allocated} li2bplFunctionConstant381: int;

axiom li2bplFunctionConstant381 == 381;

const {:allocated} li2bplFunctionConstant456: int;

axiom li2bplFunctionConstant456 == 456;

const {:allocated} li2bplFunctionConstant457: int;

axiom li2bplFunctionConstant457 == 457;

const {:allocated} li2bplFunctionConstant514: int;

axiom li2bplFunctionConstant514 == 514;

const {:allocated} li2bplFunctionConstant516: int;

axiom li2bplFunctionConstant516 == 516;

const {:allocated} li2bplFunctionConstant519: int;

axiom li2bplFunctionConstant519 == 519;

implementation {:origName "CyzWakeCompletion"} CyzWakeCompletion#0(actual_PDevObj_8: int, actual_MinorFunction: int, actual_SD2_1: int, actual_Context_14: int, actual_IoStatus: int)
{
  var {:scalar} PowerState_2: int;
  var {:pointer} pDevExt_9: int;
  var {:scalar} powerState_2: int;
  var {:scalar} status_7: int;
  var {:pointer} SD2_1: int;
  var {:pointer} Context_14: int;
  var {:pointer} IoStatus: int;
  var vslice_dummy_var_575: int;

  anon0:
    call {:si_unique_call 2275} PowerState_2 := __HAVOC_malloc(8);
    call {:si_unique_call 2276} vslice_dummy_var_575 := __HAVOC_malloc(4);
    call {:si_unique_call 2277} powerState_2 := __HAVOC_malloc(8);
    SD2_1 := actual_SD2_1;
    Context_14 := actual_Context_14;
    IoStatus := actual_IoStatus;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    pDevExt_9 := Context_14;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    havoc status_7;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_7 >= 0;
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume false;
    return;

  anon3_Then:
    assume {:partition} 0 > status_7;
    goto L9;

  L9:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 2278} CyzIRPEpilogue(pDevExt_9);
    return;
}



procedure {:origName "CyzWakeCompletion"} CyzWakeCompletion#0(actual_PDevObj_8: int, actual_MinorFunction: int, actual_SD2_1: int, actual_Context_14: int, actual_IoStatus: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzWakeCompletion"} CyzWakeCompletion#1(actual_PDevObj_8: int, actual_MinorFunction: int, actual_SD2_1: int, actual_Context_14: int, actual_IoStatus: int)
{
  var {:scalar} PowerState_2: int;
  var {:pointer} pDevExt_9: int;
  var {:scalar} powerState_2: int;
  var {:scalar} status_7: int;
  var {:pointer} SD2_1: int;
  var {:pointer} Context_14: int;
  var {:pointer} IoStatus: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_440: int;

  anon0:
    call {:si_unique_call 2279} PowerState_2 := __HAVOC_malloc(8);
    call {:si_unique_call 2280} vslice_dummy_var_576 := __HAVOC_malloc(4);
    call {:si_unique_call 2281} powerState_2 := __HAVOC_malloc(8);
    SD2_1 := actual_SD2_1;
    Context_14 := actual_Context_14;
    IoStatus := actual_IoStatus;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2_1 != 0;
    assume SD2_1 > 0;
    pDevExt_9 := Context_14;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    havoc status_7;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_7 >= 0;
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_440;
    call {:si_unique_call 2282} vslice_dummy_var_577 := PoRequestPowerIrp#0(vslice_dummy_var_440, 2, powerState_2, 0, 0, 0);
    goto L9;

  L9:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 2283} CyzIRPEpilogue(pDevExt_9);
    return;

  anon3_Then:
    assume {:partition} 0 > status_7;
    goto L9;
}



procedure {:origName "CyzWakeCompletion"} CyzWakeCompletion#1(actual_PDevObj_8: int, actual_MinorFunction: int, actual_SD2_1: int, actual_Context_14: int, actual_IoStatus: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#0(actual_DeviceObject_20: int, actual_MinorFunction_1: int, actual_SD1_3: int, actual_CompletionFunction: int, actual_Context_45: int, actual_Irp_19: int) returns (Tmp_1137: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} DeviceObject_20: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} SD1_3: int;
  var {:scalar} CompletionFunction: int;
  var {:pointer} Context_45: int;
  var vslice_dummy_var_578: int;

  anon0:
    call {:si_unique_call 2284} PowerState_1 := __HAVOC_malloc(8);
    DeviceObject_20 := actual_DeviceObject_20;
    MinorFunction_1 := actual_MinorFunction_1;
    SD1_3 := actual_SD1_3;
    CompletionFunction := actual_CompletionFunction;
    Context_45 := actual_Context_45;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction_1 != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction_1 != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction_1 != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1137 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction_1 == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    call {:si_unique_call 2285} vslice_dummy_var_578 := sdv_RunPowerCompletionRoutines#0(DeviceObject_20, MinorFunction_1, PowerState_1, Context_45, IoStatus__IRP(sdv_power_irp), CompletionFunction);
    Tmp_1137 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1137 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction_1 == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction_1 == 3;
    goto L13;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#0(actual_DeviceObject_20: int, actual_MinorFunction_1: int, actual_SD1_3: int, actual_CompletionFunction: int, actual_Context_45: int, actual_Irp_19: int) returns (Tmp_1137: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1137 == -1073741584 || Tmp_1137 == 259 || Tmp_1137 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#1(actual_DeviceObject_20: int, actual_MinorFunction_1: int, actual_SD1_3: int, actual_CompletionFunction: int, actual_Context_45: int, actual_Irp_19: int) returns (Tmp_1137: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} DeviceObject_20: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} SD1_3: int;
  var {:scalar} CompletionFunction: int;
  var {:pointer} Context_45: int;
  var vslice_dummy_var_579: int;

  anon0:
    call {:si_unique_call 2286} PowerState_1 := __HAVOC_malloc(8);
    DeviceObject_20 := actual_DeviceObject_20;
    MinorFunction_1 := actual_MinorFunction_1;
    SD1_3 := actual_SD1_3;
    CompletionFunction := actual_CompletionFunction;
    Context_45 := actual_Context_45;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction_1 != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction_1 != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction_1 != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1137 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction_1 == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    call {:si_unique_call 2287} vslice_dummy_var_579 := sdv_RunPowerCompletionRoutines#1(DeviceObject_20, MinorFunction_1, PowerState_1, Context_45, IoStatus__IRP(sdv_power_irp), CompletionFunction);
    Tmp_1137 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1137 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction_1 == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction_1 == 3;
    goto L13;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#1(actual_DeviceObject_20: int, actual_MinorFunction_1: int, actual_SD1_3: int, actual_CompletionFunction: int, actual_Context_45: int, actual_Irp_19: int) returns (Tmp_1137: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1137 == -1073741584 || Tmp_1137 == 259 || Tmp_1137 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#0(actual_DeviceObject_21: int, actual_MinorFunction_2: int, actual_structPtr888PowerState: int, actual_Context_46: int, actual_IoStatus_1: int, actual_CompletionFunction_1: int) returns (Tmp_1151: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} CompletionFunction_2: int;
  var {:pointer} DeviceObject_21: int;
  var {:scalar} MinorFunction_2: int;
  var {:pointer} structPtr888PowerState: int;
  var {:pointer} Context_46: int;
  var {:pointer} IoStatus_1: int;
  var {:scalar} CompletionFunction_1: int;

  anon0:
    call {:si_unique_call 2288} PowerState := __HAVOC_malloc(8);
    DeviceObject_21 := actual_DeviceObject_21;
    MinorFunction_2 := actual_MinorFunction_2;
    structPtr888PowerState := actual_structPtr888PowerState;
    Context_46 := actual_Context_46;
    IoStatus_1 := actual_IoStatus_1;
    CompletionFunction_1 := actual_CompletionFunction_1;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    CompletionFunction_2 := 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant290;
    call {:si_unique_call 2289} sdv_stub_power_completion_begin();
    call {:si_unique_call 2290} CyzWakeCompletion#0(DeviceObject_21, MinorFunction_2, PowerState, Context_46, IoStatus_1);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    CompletionFunction_2 := 1;
    goto L6;

  L6:
    Tmp_1151 := CompletionFunction_2;
    return;

  anon3_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant290;
    goto L6;
}



procedure {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#0(actual_DeviceObject_21: int, actual_MinorFunction_2: int, actual_structPtr888PowerState: int, actual_Context_46: int, actual_IoStatus_1: int, actual_CompletionFunction_1: int) returns (Tmp_1151: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1151 == 1 || Tmp_1151 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#1(actual_DeviceObject_21: int, actual_MinorFunction_2: int, actual_structPtr888PowerState: int, actual_Context_46: int, actual_IoStatus_1: int, actual_CompletionFunction_1: int) returns (Tmp_1151: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} CompletionFunction_2: int;
  var {:pointer} DeviceObject_21: int;
  var {:scalar} MinorFunction_2: int;
  var {:pointer} structPtr888PowerState: int;
  var {:pointer} Context_46: int;
  var {:pointer} IoStatus_1: int;
  var {:scalar} CompletionFunction_1: int;

  anon0:
    call {:si_unique_call 2291} PowerState := __HAVOC_malloc(8);
    DeviceObject_21 := actual_DeviceObject_21;
    MinorFunction_2 := actual_MinorFunction_2;
    structPtr888PowerState := actual_structPtr888PowerState;
    Context_46 := actual_Context_46;
    IoStatus_1 := actual_IoStatus_1;
    CompletionFunction_1 := actual_CompletionFunction_1;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    CompletionFunction_2 := 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant290;
    call {:si_unique_call 2292} sdv_stub_power_completion_begin();
    call {:si_unique_call 2293} CyzWakeCompletion#1(DeviceObject_21, MinorFunction_2, PowerState, Context_46, IoStatus_1);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    CompletionFunction_2 := 1;
    goto L6;

  L6:
    Tmp_1151 := CompletionFunction_2;
    return;

  anon3_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant290;
    goto L6;
}



procedure {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#1(actual_DeviceObject_21: int, actual_MinorFunction_2: int, actual_structPtr888PowerState: int, actual_Context_46: int, actual_IoStatus_1: int, actual_CompletionFunction_1: int) returns (Tmp_1151: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1151 == 1 || Tmp_1151 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS#0(actual_Context_32: int) returns (Tmp_712: int)
{
  var {:scalar} sdv_625: int;
  var {:scalar} sdv_626: int;
  var {:pointer} Extension_35: int;
  var {:scalar} sdv_628: int;
  var {:scalar} Tmp_713: int;
  var {:pointer} Context_32: int;
  var vslice_dummy_var_580: int;

  anon0:
    Context_32 := actual_Context_32;
    Extension_35 := Context_32;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    havoc Tmp_713;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Tmp_713 == 192;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 2294} sdv_625 := sdv_IsListEmpty(0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_625 != 0;
    goto L16;

  L16:
    call {:si_unique_call 2295} sdv_626 := CyzAmountInTxBuffer(Extension_35);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_626 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    call {:si_unique_call 2296} sdv_628 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_35), 0, 0, Extension_35);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_628 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto L7;

  L7:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    Tmp_712 := 0;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} sdv_628 == 0;
    goto L7;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} sdv_626 == 0;
    call {:si_unique_call 2297} vslice_dummy_var_580 := CyzClrRTS(Extension_35);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:partition} sdv_625 == 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L16;

  anon25_Then:
    goto L7;

  anon23_Then:
    goto L7;

  anon22_Then:
    goto L7;

  anon21_Then:
    goto L7;

  anon28_Then:
    assume {:partition} Tmp_713 != 192;
    goto L7;
}



procedure {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS#0(actual_Context_32: int) returns (Tmp_712: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS#1(actual_Context_32: int) returns (Tmp_712: int)
{
  var {:scalar} sdv_625: int;
  var {:scalar} sdv_626: int;
  var {:pointer} Extension_35: int;
  var {:scalar} sdv_628: int;
  var {:scalar} Tmp_713: int;
  var {:pointer} Context_32: int;
  var vslice_dummy_var_581: int;

  anon0:
    Context_32 := actual_Context_32;
    Extension_35 := Context_32;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    havoc Tmp_713;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Tmp_713 == 192;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 2298} sdv_625 := sdv_IsListEmpty(0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_625 != 0;
    goto L16;

  L16:
    call {:si_unique_call 2299} sdv_626 := CyzAmountInTxBuffer(Extension_35);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_626 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    call {:si_unique_call 2300} sdv_628 := CyzInsertQueueDpc#1(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_35), 0, 0, Extension_35);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_628 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto L7;

  L7:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    Tmp_712 := 0;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} sdv_628 == 0;
    goto L7;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} sdv_626 == 0;
    call {:si_unique_call 2301} vslice_dummy_var_581 := CyzClrRTS(Extension_35);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:partition} sdv_625 == 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L16;

  anon25_Then:
    goto L7;

  anon23_Then:
    goto L7;

  anon22_Then:
    goto L7;

  anon21_Then:
    goto L7;

  anon28_Then:
    assume {:partition} Tmp_713 != 192;
    goto L7;
}



procedure {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS#1(actual_Context_32: int) returns (Tmp_712: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc#0(actual_PDpc_2: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_14: int) returns (Tmp_781: int)
{
  var {:scalar} sdv_675: int;
  var {:pointer} Tmp_782: int;
  var {:scalar} pendingCnt_2: int;
  var {:scalar} queued: int;
  var {:pointer} PDpc_2: int;
  var {:pointer} Sarg1: int;
  var {:pointer} Sarg2: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;

  anon0:
    PDpc_2 := actual_PDpc_2;
    Sarg1 := actual_Sarg1;
    Sarg2 := actual_Sarg2;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 2302} Tmp_782 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc vslice_dummy_var_441;
    Mem_T.INT4[Tmp_782] := vslice_dummy_var_441;
    call {:si_unique_call 2303} vslice_dummy_var_583 := sdv_InterlockedIncrement(Tmp_782);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    call {:si_unique_call 2304} queued := KeInsertQueueDpc#0(PDpc_2, Sarg1, Sarg2);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} queued == 0;
    call {:si_unique_call 2305} Tmp_782 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc vslice_dummy_var_442;
    Mem_T.INT4[Tmp_782] := vslice_dummy_var_442;
    call {:si_unique_call 2306} sdv_675 := sdv_InterlockedDecrement(Tmp_782);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    pendingCnt_2 := sdv_675;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} pendingCnt_2 == 0;
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    call {:si_unique_call 2307} vslice_dummy_var_582 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_14), 0, 0);
    goto L13;

  L13:
    Tmp_781 := queued;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} pendingCnt_2 != 0;
    goto L13;

  anon7_Then:
    assume {:partition} queued != 0;
    goto L13;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc#0(actual_PDpc_2: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_14: int) returns (Tmp_781: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc#1(actual_PDpc_2: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_14: int) returns (Tmp_781: int)
{
  var {:scalar} sdv_675: int;
  var {:pointer} Tmp_782: int;
  var {:scalar} pendingCnt_2: int;
  var {:scalar} queued: int;
  var {:pointer} PDpc_2: int;
  var {:pointer} Sarg1: int;
  var {:pointer} Sarg2: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;

  anon0:
    PDpc_2 := actual_PDpc_2;
    Sarg1 := actual_Sarg1;
    Sarg2 := actual_Sarg2;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 2308} Tmp_782 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc vslice_dummy_var_443;
    Mem_T.INT4[Tmp_782] := vslice_dummy_var_443;
    call {:si_unique_call 2309} vslice_dummy_var_585 := sdv_InterlockedIncrement(Tmp_782);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    call {:si_unique_call 2310} queued := KeInsertQueueDpc#1(PDpc_2, Sarg1, Sarg2);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} queued == 0;
    call {:si_unique_call 2311} Tmp_782 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    havoc vslice_dummy_var_444;
    Mem_T.INT4[Tmp_782] := vslice_dummy_var_444;
    call {:si_unique_call 2312} sdv_675 := sdv_InterlockedDecrement(Tmp_782);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    pendingCnt_2 := sdv_675;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} pendingCnt_2 == 0;
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    call {:si_unique_call 2313} vslice_dummy_var_584 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_14), 0, 0);
    goto L13;

  L13:
    Tmp_781 := queued;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} pendingCnt_2 != 0;
    goto L13;

  anon7_Then:
    assume {:partition} queued != 0;
    goto L13;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc#1(actual_PDpc_2: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_14: int) returns (Tmp_781: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc#0(actual_Dpc_11: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1212: int)
{
  var {:pointer} Dpc_11: int;
  var vslice_dummy_var_445: int;

  anon0:
    Dpc_11 := actual_Dpc_11;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_1212 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    havoc vslice_dummy_var_445;
    call {:si_unique_call 2314} sdv_RunKeDpcRoutines#0(vslice_dummy_var_445, sdv_pDpcContext, 0, 0);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1212 := 1;
    goto L1;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc#0(actual_Dpc_11: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1212: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc#1(actual_Dpc_11: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1212: int)
{
  var {:pointer} Dpc_11: int;
  var vslice_dummy_var_446: int;

  anon0:
    Dpc_11 := actual_Dpc_11;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_1212 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    havoc vslice_dummy_var_446;
    call {:si_unique_call 2315} sdv_RunKeDpcRoutines#1(vslice_dummy_var_446, sdv_pDpcContext, 0, 0);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1212 := 1;
    goto L1;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc#1(actual_Dpc_11: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1212: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines#0(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int)
{
  var {:pointer} kdpc: int;
  var {:pointer} pDpcContext: int;
  var vslice_dummy_var_586: int;

  anon0:
    call {:si_unique_call 2316} vslice_dummy_var_586 := __HAVOC_malloc(4);
    kdpc := actual_kdpc;
    pDpcContext := actual_pDpcContext;
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2317} CyzCommError#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L4;

  L4:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2318} CyzCompleteRead#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L20;

  L20:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2319} CyzCompleteWait#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L36;

  L36:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2320} CyzCompleteWrite#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L52;

  L52:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2321} CyzCompleteXoff#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L68;

  L68:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2322} CyzPollingDpc#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L84;

  L84:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2323} CyzReadTimeout#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L100;

  L100:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2324} CyzTimeoutXoff#0(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L116;

  L116:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2325} CyzUnlockPages(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon70_Then:
    goto L1;

  anon68_Then:
    goto L1;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L116;

  anon66_Then:
    goto L116;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L100;

  anon64_Then:
    goto L100;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L84;

  anon62_Then:
    goto L84;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L68;

  anon60_Then:
    goto L68;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    goto L52;

  anon58_Then:
    goto L52;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L36;

  anon56_Then:
    goto L36;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L20;

  anon54_Then:
    goto L20;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    goto L4;

  anon53_Then:
    goto L4;
}



procedure {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines#0(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines#1(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int)
{
  var {:pointer} kdpc: int;
  var {:pointer} pDpcContext: int;
  var vslice_dummy_var_587: int;

  anon0:
    call {:si_unique_call 2326} vslice_dummy_var_587 := __HAVOC_malloc(4);
    kdpc := actual_kdpc;
    pDpcContext := actual_pDpcContext;
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2327} CyzCommError#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L4;

  L4:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2328} CyzCompleteRead#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L20;

  L20:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2329} CyzCompleteWait#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L36;

  L36:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2330} CyzCompleteWrite#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L52;

  L52:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2331} CyzCompleteXoff#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L68;

  L68:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2332} CyzPollingDpc#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L84;

  L84:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2333} CyzReadTimeout#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L100;

  L100:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2334} CyzTimeoutXoff#1(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L116;

  L116:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2335} CyzUnlockPages(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon70_Then:
    goto L1;

  anon68_Then:
    goto L1;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L116;

  anon66_Then:
    goto L116;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L100;

  anon64_Then:
    goto L100;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L84;

  anon62_Then:
    goto L84;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L68;

  anon60_Then:
    goto L68;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    goto L52;

  anon58_Then:
    goto L52;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L36;

  anon56_Then:
    goto L36;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L20;

  anon54_Then:
    goto L20;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    goto L4;

  anon53_Then:
    goto L4;
}



procedure {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines#1(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCommError"} CyzCommError#0(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int)
{
  var {:pointer} Tmp_267: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Extension_14: int;
  var {:pointer} Dpc: int;
  var {:pointer} DeferredContext: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_589: int;
  var vslice_dummy_var_590: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;

  anon0:
    call {:si_unique_call 2336} vslice_dummy_var_588 := __HAVOC_malloc(4);
    Dpc := actual_Dpc;
    DeferredContext := actual_DeferredContext;
    call {:si_unique_call 2337} Tmp_267 := __HAVOC_malloc(76);
    call {:si_unique_call 2338} Tmp_269 := __HAVOC_malloc(60);
    Extension_14 := DeferredContext;
    Tmp_267 := strConst__li2bpl49;
    call {:si_unique_call 2339} vslice_dummy_var_589 := CyzDbgPrintEx(2, Tmp_267);
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc vslice_dummy_var_447;
    call {:si_unique_call 2340} CyzKillAllReadsOrWrites#0(vslice_dummy_var_447, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_14), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_14));
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc vslice_dummy_var_448;
    call {:si_unique_call 2341} CyzKillAllReadsOrWrites#0(vslice_dummy_var_448, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_14), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_14));
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2342} CyzDpcEpilogue(Extension_14, Dpc);
    Tmp_269 := strConst__li2bpl48;
    call {:si_unique_call 2343} vslice_dummy_var_590 := CyzDbgPrintEx(2, Tmp_269);
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCommError"} CyzCommError#0(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCommError"} CyzCommError#1(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int)
{
  var {:pointer} Tmp_267: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Extension_14: int;
  var {:pointer} Dpc: int;
  var {:pointer} DeferredContext: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;

  anon0:
    call {:si_unique_call 2344} vslice_dummy_var_591 := __HAVOC_malloc(4);
    Dpc := actual_Dpc;
    DeferredContext := actual_DeferredContext;
    call {:si_unique_call 2345} Tmp_267 := __HAVOC_malloc(76);
    call {:si_unique_call 2346} Tmp_269 := __HAVOC_malloc(60);
    Extension_14 := DeferredContext;
    Tmp_267 := strConst__li2bpl49;
    call {:si_unique_call 2347} vslice_dummy_var_592 := CyzDbgPrintEx(2, Tmp_267);
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc vslice_dummy_var_449;
    call {:si_unique_call 2348} CyzKillAllReadsOrWrites#1(vslice_dummy_var_449, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_14), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_14));
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    havoc vslice_dummy_var_450;
    call {:si_unique_call 2349} CyzKillAllReadsOrWrites#1(vslice_dummy_var_450, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_14), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_14));
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2350} CyzDpcEpilogue(Extension_14, Dpc);
    Tmp_269 := strConst__li2bpl48;
    call {:si_unique_call 2351} vslice_dummy_var_593 := CyzDbgPrintEx(2, Tmp_269);
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCommError"} CyzCommError#1(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites#0(actual_DeviceObject_12: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int)
{
  var {:pointer} currentLastIrp: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} Tmp_773: int;
  var {:scalar} sdv_670: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} sdv_671: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} Tmp_776: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_3: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;

  anon0:
    call {:si_unique_call 2352} vslice_dummy_var_594 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    call {:si_unique_call 2353} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := cancelIrql;
    call {:si_unique_call 2354} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    cancelIrql := Mem_T.INT4[Tmp_776];
    goto L8;

  L8:
    call {:si_unique_call 2355} currentLastIrp, cancelIrql, sdv_670, sdv_671, cancelRoutine_1, Tmp_776, vslice_dummy_var_595 := CyzKillAllReadsOrWrites#0_loop_L8(currentLastIrp, cancelIrql, sdv_670, sdv_671, cancelRoutine_1, Tmp_776, DeviceObject_12, QueueToClean, vslice_dummy_var_595);
    goto L8_last;

  L8_last:
    call {:si_unique_call 2376} sdv_670 := sdv_IsListEmpty(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_670 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_451;
    call {:si_unique_call 2356} sdv_671 := sdv_containing_record(vslice_dummy_var_451, 88);
    currentLastIrp := sdv_671;
    call {:si_unique_call 2357} vslice_dummy_var_595 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp)] := cancelIrql;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 2358} CyzCancelCurrentRead#0(DeviceObject_12, currentLastIrp);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  L42:
    call {:si_unique_call 2359} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := cancelIrql;
    call {:si_unique_call 2360} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    cancelIrql := Mem_T.INT4[Tmp_776];
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon62_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 2361} CyzCancelCurrentWrite#0(DeviceObject_12, currentLastIrp);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 2362} CyzCancelCurrentXoff#0(DeviceObject_12, currentLastIrp);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 2363} CyzCancelImmediate#0(DeviceObject_12, currentLastIrp);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 2364} CyzCancelQueued(DeviceObject_12, currentLastIrp);
    goto L42;

  anon58_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 2365} CyzCancelWait#0(DeviceObject_12, currentLastIrp);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 2366} CyzFilterCancelQueued(DeviceObject_12, currentLastIrp);
    goto L42;

  anon51_Then:
    assume {:partition} sdv_670 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_773;
    assume {:nonnull} Tmp_773 != 0;
    assume Tmp_773 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} cancelRoutine_1 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_778;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_778)] := cancelIrql;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_452;
    call {:si_unique_call 2367} CyzCancelCurrentRead#0(DeviceObject_12, vslice_dummy_var_452);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_453;
    call {:si_unique_call 2368} CyzCancelCurrentWrite#0(DeviceObject_12, vslice_dummy_var_453);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_454;
    call {:si_unique_call 2369} CyzCancelCurrentXoff#0(DeviceObject_12, vslice_dummy_var_454);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_455;
    call {:si_unique_call 2370} CyzCancelImmediate#0(DeviceObject_12, vslice_dummy_var_455);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_456;
    call {:si_unique_call 2371} CyzCancelQueued(DeviceObject_12, vslice_dummy_var_456);
    goto L1;

  anon53_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_457;
    call {:si_unique_call 2372} CyzCancelWait#0(DeviceObject_12, vslice_dummy_var_457);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_458;
    call {:si_unique_call 2373} CyzFilterCancelQueued(DeviceObject_12, vslice_dummy_var_458);
    goto L1;

  anon63_Then:
    assume {:partition} cancelRoutine_1 == 0;
    call {:si_unique_call 2374} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;

  anon52_Then:
    call {:si_unique_call 2375} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;
}



procedure {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites#0(actual_DeviceObject_12: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites#1(actual_DeviceObject_12: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int)
{
  var {:pointer} currentLastIrp: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} Tmp_773: int;
  var {:scalar} sdv_670: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} sdv_671: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} Tmp_776: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_3: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_597: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;

  anon0:
    call {:si_unique_call 2377} vslice_dummy_var_596 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    call {:si_unique_call 2378} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := cancelIrql;
    call {:si_unique_call 2379} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    cancelIrql := Mem_T.INT4[Tmp_776];
    goto L8;

  L8:
    call {:si_unique_call 2380} currentLastIrp, cancelIrql, sdv_670, sdv_671, cancelRoutine_1, Tmp_776, vslice_dummy_var_597 := CyzKillAllReadsOrWrites#1_loop_L8(currentLastIrp, cancelIrql, sdv_670, sdv_671, cancelRoutine_1, Tmp_776, DeviceObject_12, QueueToClean, vslice_dummy_var_597);
    goto L8_last;

  L8_last:
    call {:si_unique_call 2401} sdv_670 := sdv_IsListEmpty(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_670 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_459;
    call {:si_unique_call 2381} sdv_671 := sdv_containing_record(vslice_dummy_var_459, 88);
    currentLastIrp := sdv_671;
    call {:si_unique_call 2382} vslice_dummy_var_597 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp)] := cancelIrql;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 2383} CyzCancelCurrentRead#1(DeviceObject_12, currentLastIrp);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  L42:
    call {:si_unique_call 2384} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := cancelIrql;
    call {:si_unique_call 2385} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    cancelIrql := Mem_T.INT4[Tmp_776];
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon62_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 2386} CyzCancelCurrentWrite#1(DeviceObject_12, currentLastIrp);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 2387} CyzCancelCurrentXoff#1(DeviceObject_12, currentLastIrp);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 2388} CyzCancelImmediate#1(DeviceObject_12, currentLastIrp);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 2389} CyzCancelQueued(DeviceObject_12, currentLastIrp);
    goto L42;

  anon58_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 2390} CyzCancelWait#1(DeviceObject_12, currentLastIrp);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 2391} CyzFilterCancelQueued(DeviceObject_12, currentLastIrp);
    goto L42;

  anon51_Then:
    assume {:partition} sdv_670 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_773;
    assume {:nonnull} Tmp_773 != 0;
    assume Tmp_773 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} cancelRoutine_1 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_778;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_778)] := cancelIrql;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_460;
    call {:si_unique_call 2392} CyzCancelCurrentRead#1(DeviceObject_12, vslice_dummy_var_460);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_461;
    call {:si_unique_call 2393} CyzCancelCurrentWrite#1(DeviceObject_12, vslice_dummy_var_461);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_462;
    call {:si_unique_call 2394} CyzCancelCurrentXoff#1(DeviceObject_12, vslice_dummy_var_462);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_463;
    call {:si_unique_call 2395} CyzCancelImmediate#1(DeviceObject_12, vslice_dummy_var_463);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_464;
    call {:si_unique_call 2396} CyzCancelQueued(DeviceObject_12, vslice_dummy_var_464);
    goto L1;

  anon53_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_465;
    call {:si_unique_call 2397} CyzCancelWait#1(DeviceObject_12, vslice_dummy_var_465);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_466;
    call {:si_unique_call 2398} CyzFilterCancelQueued(DeviceObject_12, vslice_dummy_var_466);
    goto L1;

  anon63_Then:
    assume {:partition} cancelRoutine_1 == 0;
    call {:si_unique_call 2399} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;

  anon52_Then:
    call {:si_unique_call 2400} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;
}



procedure {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites#1(actual_DeviceObject_12: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelWait"} CyzCancelWait#0(actual_DeviceObject_16: int, actual_Irp_16: int)
{
  var {:pointer} Tmp_918: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Extension_57: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_598: int;
  var vslice_dummy_var_599: int;
  var vslice_dummy_var_600: int;

  anon0:
    call {:si_unique_call 2402} vslice_dummy_var_598 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2403} Tmp_918 := __HAVOC_malloc(108);
    call {:si_unique_call 2404} Tmp_919 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc Extension_57;
    Tmp_919 := strConst__li2bpl222;
    call {:si_unique_call 2405} vslice_dummy_var_599 := CyzDbgPrintEx(6, Tmp_919);
    Tmp_918 := strConst__li2bpl221;
    call {:si_unique_call 2406} vslice_dummy_var_600 := CyzDbgPrintEx(7, Tmp_918);
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 2407} CyzTryToCompleteCurrent#0(Extension_57, li2bplFunctionConstant179, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_16)], -1073741536, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, 0, 0, 0, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelWait"} CyzCancelWait#0(actual_DeviceObject_16: int, actual_Irp_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelWait"} CyzCancelWait#1(actual_DeviceObject_16: int, actual_Irp_16: int)
{
  var {:pointer} Tmp_918: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Extension_57: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_601: int;
  var vslice_dummy_var_602: int;
  var vslice_dummy_var_603: int;

  anon0:
    call {:si_unique_call 2408} vslice_dummy_var_601 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2409} Tmp_918 := __HAVOC_malloc(108);
    call {:si_unique_call 2410} Tmp_919 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc Extension_57;
    Tmp_919 := strConst__li2bpl222;
    call {:si_unique_call 2411} vslice_dummy_var_602 := CyzDbgPrintEx(6, Tmp_919);
    Tmp_918 := strConst__li2bpl221;
    call {:si_unique_call 2412} vslice_dummy_var_603 := CyzDbgPrintEx(7, Tmp_918);
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 2413} CyzTryToCompleteCurrent#1(Extension_57, li2bplFunctionConstant179, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_16)], -1073741536, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, 0, 0, 0, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelWait"} CyzCancelWait#1(actual_DeviceObject_16: int, actual_Irp_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#0(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_652: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_759: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} sdv_654: int;
  var {:pointer} oldIrp: int;
  var {:scalar} pollIrql_8: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Extension_38: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_604: int;
  var vslice_dummy_var_605: int;
  var vslice_dummy_var_606: int;
  var vslice_dummy_var_607: int;
  var vslice_dummy_var_608: int;
  var vslice_dummy_var_609: int;
  var vslice_dummy_var_610: int;
  var vslice_dummy_var_611: int;
  var vslice_dummy_var_612: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;

  anon0:
    call {:si_unique_call 2414} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2415} vslice_dummy_var_604 := __HAVOC_malloc(4);
    Extension_38 := actual_Extension_38;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter := actual_Starter;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2416} Tmp_758 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_467;
    call {:si_unique_call 2417} sdv_652 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_467);
    assume {:nonnull} sdv_652 != 0;
    assume sdv_652 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_652)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_13] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_13], BNOT(s_p_e_c_i_a_l_14));
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2418} Tmp_761 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    Mem_T.INT4[Tmp_761] := pollIrql_8;
    call {:si_unique_call 2419} sdv_KeAcquireSpinLock(0, Tmp_761);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    pollIrql_8 := Mem_T.INT4[Tmp_761];
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant316;
    call {:si_unique_call 2420} vslice_dummy_var_612 := CyzGrabImmediateFromIsr(Extension_38);
    goto L22;

  L22:
    call {:si_unique_call 2421} sdv_KeReleaseSpinLock(0, pollIrql_8);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto L12;

  L12:
    call {:si_unique_call 2422} CyzRundownIrpRefs(CurrentOpIrp_1, IntervalTimer, TotalTimer, Extension_38);
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_468;
    call {:si_unique_call 2423} sdv_654 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_468);
    assume {:nonnull} sdv_654 != 0;
    assume sdv_654 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    goto L35;

  L35:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    call {:si_unique_call 2424} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_758 := strConst__li2bpl2;
    call {:si_unique_call 2425} vslice_dummy_var_608 := CyzDbgPrintEx(9, Tmp_758);
    call {:si_unique_call 2426} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2427} CyzIRPEpilogue(Extension_38);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    call {:si_unique_call 2428} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant314;
    call {:si_unique_call 2429} CyzGetNextImmediate#0(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  L44:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant381;
    call {:si_unique_call 2430} vslice_dummy_var_607 := CyzStartRead(Extension_38);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 2431} vslice_dummy_var_606 := CyzStartWrite#0(Extension_38);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    goto L1;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2432} CyzGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon40_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant197;
    call {:si_unique_call 2433} CyzGetNextWrite#0(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L35;

  anon38_Then:
    call {:si_unique_call 2434} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant457;
    call {:si_unique_call 2435} vslice_dummy_var_611 := CyzGrabReadFromIsr(Extension_38);
    goto L22;

  anon44_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant179;
    call {:si_unique_call 2436} vslice_dummy_var_610 := CyzGrabWaitFromIsr(Extension_38);
    goto L22;

  anon43_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant202;
    call {:si_unique_call 2437} vslice_dummy_var_609 := CyzGrabWriteFromIsr(Extension_38);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L22;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant195;
    call {:si_unique_call 2438} vslice_dummy_var_605 := CyzGrabXoffFromIsr(Extension_38);
    goto L22;

  anon47_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#0(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#1(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_652: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_759: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} sdv_654: int;
  var {:pointer} oldIrp: int;
  var {:scalar} pollIrql_8: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Extension_38: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_613: int;
  var vslice_dummy_var_614: int;
  var vslice_dummy_var_615: int;
  var vslice_dummy_var_616: int;
  var vslice_dummy_var_617: int;
  var vslice_dummy_var_618: int;
  var vslice_dummy_var_619: int;
  var vslice_dummy_var_620: int;
  var vslice_dummy_var_621: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;

  anon0:
    call {:si_unique_call 2439} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2440} vslice_dummy_var_613 := __HAVOC_malloc(4);
    Extension_38 := actual_Extension_38;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter := actual_Starter;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2441} Tmp_758 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_469;
    call {:si_unique_call 2442} sdv_652 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_469);
    assume {:nonnull} sdv_652 != 0;
    assume sdv_652 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_652)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_13] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_13], BNOT(s_p_e_c_i_a_l_14));
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2443} Tmp_761 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    Mem_T.INT4[Tmp_761] := pollIrql_8;
    call {:si_unique_call 2444} sdv_KeAcquireSpinLock(0, Tmp_761);
    assume {:nonnull} Tmp_761 != 0;
    assume Tmp_761 > 0;
    pollIrql_8 := Mem_T.INT4[Tmp_761];
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant316;
    call {:si_unique_call 2445} vslice_dummy_var_621 := CyzGrabImmediateFromIsr(Extension_38);
    goto L22;

  L22:
    call {:si_unique_call 2446} sdv_KeReleaseSpinLock(0, pollIrql_8);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto L12;

  L12:
    call {:si_unique_call 2447} CyzRundownIrpRefs(CurrentOpIrp_1, IntervalTimer, TotalTimer, Extension_38);
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_470;
    call {:si_unique_call 2448} sdv_654 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_470);
    assume {:nonnull} sdv_654 != 0;
    assume sdv_654 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_762;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    goto L35;

  L35:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    call {:si_unique_call 2449} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_758 := strConst__li2bpl2;
    call {:si_unique_call 2450} vslice_dummy_var_617 := CyzDbgPrintEx(9, Tmp_758);
    call {:si_unique_call 2451} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2452} CyzIRPEpilogue(Extension_38);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    call {:si_unique_call 2453} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant314;
    call {:si_unique_call 2454} CyzGetNextImmediate#1(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  L44:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant381;
    call {:si_unique_call 2455} vslice_dummy_var_616 := CyzStartRead(Extension_38);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 2456} vslice_dummy_var_615 := CyzStartWrite#1(Extension_38);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    goto L1;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2457} CyzGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon40_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant197;
    call {:si_unique_call 2458} CyzGetNextWrite#1(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L35;

  anon38_Then:
    call {:si_unique_call 2459} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant457;
    call {:si_unique_call 2460} vslice_dummy_var_620 := CyzGrabReadFromIsr(Extension_38);
    goto L22;

  anon44_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant179;
    call {:si_unique_call 2461} vslice_dummy_var_619 := CyzGrabWaitFromIsr(Extension_38);
    goto L22;

  anon43_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant202;
    call {:si_unique_call 2462} vslice_dummy_var_618 := CyzGrabWriteFromIsr(Extension_38);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L22;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant195;
    call {:si_unique_call 2463} vslice_dummy_var_614 := CyzGrabXoffFromIsr(Extension_38);
    goto L22;

  anon47_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#1(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextWrite"} CyzGetNextWrite#0(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_51: int)
{
  var {:pointer} s_p_e_c_i_a_l_35: int;
  var {:pointer} sdv_731: int;
  var {:scalar} OldIrql_11: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Tmp_849: int;
  var {:scalar} pollIrql_10: int;
  var {:scalar} OldIrql_12: int;
  var {:pointer} sdv_734: int;
  var {:pointer} Tmp_850: int;
  var {:scalar} OldIrql_13: int;
  var {:pointer} sdv_736: int;
  var {:pointer} Tmp_852: int;
  var {:scalar} s_p_e_c_i_a_l_36: int;
  var {:pointer} sdv_738: int;
  var {:pointer} sdv_739: int;
  var {:pointer} sdv_740: int;
  var {:pointer} s_p_e_c_i_a_l_37: int;
  var {:scalar} delta: int;
  var {:pointer} Xc_2: int;
  var {:scalar} s_p_e_c_i_a_l_38: int;
  var {:scalar} pollIrql_11: int;
  var {:pointer} Tmp_853: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} Extension_51: int;
  var vslice_dummy_var_622: int;
  var vslice_dummy_var_623: int;
  var vslice_dummy_var_624: int;
  var vslice_dummy_var_625: int;
  var vslice_dummy_var_626: int;
  var vslice_dummy_var_627: int;
  var vslice_dummy_var_628: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;

  anon0:
    call {:si_unique_call 2464} vslice_dummy_var_622 := __HAVOC_malloc(4);
    call {:si_unique_call 2465} delta := __HAVOC_malloc(20);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NewIrp_4 := actual_NewIrp_4;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    Extension_51 := actual_Extension_51;
    call {:si_unique_call 2466} Tmp_849 := __HAVOC_malloc(92);
    call {:si_unique_call 2467} Tmp_850 := __HAVOC_malloc(72);
    Tmp_849 := strConst__li2bpl198;
    call {:si_unique_call 2468} vslice_dummy_var_626 := CyzDbgPrintEx(2, Tmp_849);
    goto L6;

  L6:
    call {:si_unique_call 2469} s_p_e_c_i_a_l_35, sdv_731, Irp_14, pollIrql_10, OldIrql_12, sdv_734, OldIrql_13, sdv_736, Tmp_852, s_p_e_c_i_a_l_36, sdv_738, sdv_739, sdv_740, s_p_e_c_i_a_l_37, Xc_2, s_p_e_c_i_a_l_38, Tmp_853, CompleteCurrent_3, vslice_dummy_var_624, vslice_dummy_var_625, vslice_dummy_var_628 := CyzGetNextWrite#0_loop_L6(s_p_e_c_i_a_l_35, sdv_731, Irp_14, pollIrql_10, OldIrql_12, sdv_734, OldIrql_13, sdv_736, Tmp_852, s_p_e_c_i_a_l_36, sdv_738, sdv_739, sdv_740, s_p_e_c_i_a_l_37, delta, Xc_2, s_p_e_c_i_a_l_38, Tmp_853, CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_51, vslice_dummy_var_624, vslice_dummy_var_625, vslice_dummy_var_628);
    goto L6_last;

  L6_last:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_474;
    call {:si_unique_call 2496} sdv_736 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_474);
    assume {:nonnull} sdv_736 != 0;
    assume sdv_736 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 2470} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_13;
    call {:si_unique_call 2471} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_13 := Mem_T.INT4[Tmp_853];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_471;
    call {:si_unique_call 2472} sdv_740 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_471);
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} sdv_740 != 0;
    assume sdv_740 > 0;
    call {:si_unique_call 2473} IoReleaseCancelSpinLock(OldIrql_13);
    goto L24;

  L24:
    call {:si_unique_call 2474} CyzGetNextIrp(CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_51);
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2475} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_11;
    call {:si_unique_call 2476} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_11 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 2477} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := pollIrql_11;
    call {:si_unique_call 2478} sdv_KeAcquireSpinLock(0, Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    pollIrql_11 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 2479} vslice_dummy_var_623 := CyzProcessEmptyTransmit#0(Extension_51);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2480} sdv_KeReleaseSpinLock(0, pollIrql_11);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2481} IoReleaseCancelSpinLock(OldIrql_11);
    goto L36;

  L36:
    Tmp_850 := strConst__li2bpl199;
    call {:si_unique_call 2482} vslice_dummy_var_627 := CyzDbgPrintEx(2, Tmp_850);
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc vslice_dummy_var_472;
    call {:si_unique_call 2483} sdv_739 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_472);
    assume {:nonnull} sdv_739 != 0;
    assume sdv_739 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L36;

  anon23_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc Tmp_852;
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_473;
    call {:si_unique_call 2484} sdv_738 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_473);
    assume {:nonnull} sdv_738 != 0;
    assume sdv_738 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 2485} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_12;
    call {:si_unique_call 2486} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_12 := Mem_T.INT4[Tmp_853];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Irp_14;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    havoc Xc_2;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L69;

  L69:
    call {:si_unique_call 2487} IoReleaseCancelSpinLock(OldIrql_12);
    goto L24;

  anon29_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto L69;

  anon25_Then:
    call {:si_unique_call 2488} vslice_dummy_var_624 := sdv_IoSetCancelRoutine(Irp_14, li2bplFunctionConstant198);
    s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 2489} sdv_734 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_734 != 0;
    assume sdv_734 > 0;
    s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_734)));
    assume {:nonnull} s_p_e_c_i_a_l_35 != 0;
    assume s_p_e_c_i_a_l_35 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_35] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_35], s_p_e_c_i_a_l_36);
    CompleteCurrent_3 := 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 2490} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := pollIrql_10;
    call {:si_unique_call 2491} sdv_KeAcquireSpinLock(0, Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    pollIrql_10 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 2492} vslice_dummy_var_625 := CyzGiveXoffToIsr(Extension_51);
    call {:si_unique_call 2493} sdv_KeReleaseSpinLock(0, pollIrql_10);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 2494} vslice_dummy_var_628 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_51), delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_51), Extension_51);
    s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 2495} sdv_731 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_731 != 0;
    assume sdv_731 > 0;
    s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_731)));
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_37] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_37], s_p_e_c_i_a_l_38);
    goto L69;

  anon26_Then:
    goto L69;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    goto L24;
}



procedure {:origName "CyzGetNextWrite"} CyzGetNextWrite#0(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_51: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextWrite"} CyzGetNextWrite#1(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_51: int)
{
  var {:pointer} s_p_e_c_i_a_l_35: int;
  var {:pointer} sdv_731: int;
  var {:scalar} OldIrql_11: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Tmp_849: int;
  var {:scalar} pollIrql_10: int;
  var {:scalar} OldIrql_12: int;
  var {:pointer} sdv_734: int;
  var {:pointer} Tmp_850: int;
  var {:scalar} OldIrql_13: int;
  var {:pointer} sdv_736: int;
  var {:pointer} Tmp_852: int;
  var {:scalar} s_p_e_c_i_a_l_36: int;
  var {:pointer} sdv_738: int;
  var {:pointer} sdv_739: int;
  var {:pointer} sdv_740: int;
  var {:pointer} s_p_e_c_i_a_l_37: int;
  var {:scalar} delta: int;
  var {:pointer} Xc_2: int;
  var {:scalar} s_p_e_c_i_a_l_38: int;
  var {:scalar} pollIrql_11: int;
  var {:pointer} Tmp_853: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} Extension_51: int;
  var vslice_dummy_var_629: int;
  var vslice_dummy_var_630: int;
  var vslice_dummy_var_631: int;
  var vslice_dummy_var_632: int;
  var vslice_dummy_var_633: int;
  var vslice_dummy_var_634: int;
  var vslice_dummy_var_635: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;

  anon0:
    call {:si_unique_call 2497} vslice_dummy_var_629 := __HAVOC_malloc(4);
    call {:si_unique_call 2498} delta := __HAVOC_malloc(20);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NewIrp_4 := actual_NewIrp_4;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    Extension_51 := actual_Extension_51;
    call {:si_unique_call 2499} Tmp_849 := __HAVOC_malloc(92);
    call {:si_unique_call 2500} Tmp_850 := __HAVOC_malloc(72);
    Tmp_849 := strConst__li2bpl198;
    call {:si_unique_call 2501} vslice_dummy_var_633 := CyzDbgPrintEx(2, Tmp_849);
    goto L6;

  L6:
    call {:si_unique_call 2502} s_p_e_c_i_a_l_35, sdv_731, Irp_14, pollIrql_10, OldIrql_12, sdv_734, OldIrql_13, sdv_736, Tmp_852, s_p_e_c_i_a_l_36, sdv_738, sdv_739, sdv_740, s_p_e_c_i_a_l_37, Xc_2, s_p_e_c_i_a_l_38, Tmp_853, CompleteCurrent_3, vslice_dummy_var_631, vslice_dummy_var_632, vslice_dummy_var_635 := CyzGetNextWrite#1_loop_L6(s_p_e_c_i_a_l_35, sdv_731, Irp_14, pollIrql_10, OldIrql_12, sdv_734, OldIrql_13, sdv_736, Tmp_852, s_p_e_c_i_a_l_36, sdv_738, sdv_739, sdv_740, s_p_e_c_i_a_l_37, delta, Xc_2, s_p_e_c_i_a_l_38, Tmp_853, CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_51, vslice_dummy_var_631, vslice_dummy_var_632, vslice_dummy_var_635);
    goto L6_last;

  L6_last:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_478;
    call {:si_unique_call 2529} sdv_736 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_478);
    assume {:nonnull} sdv_736 != 0;
    assume sdv_736 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 2503} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_13;
    call {:si_unique_call 2504} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_13 := Mem_T.INT4[Tmp_853];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_475;
    call {:si_unique_call 2505} sdv_740 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_475);
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} sdv_740 != 0;
    assume sdv_740 > 0;
    call {:si_unique_call 2506} IoReleaseCancelSpinLock(OldIrql_13);
    goto L24;

  L24:
    call {:si_unique_call 2507} CyzGetNextIrp(CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_51);
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2508} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_11;
    call {:si_unique_call 2509} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_11 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 2510} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := pollIrql_11;
    call {:si_unique_call 2511} sdv_KeAcquireSpinLock(0, Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    pollIrql_11 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 2512} vslice_dummy_var_630 := CyzProcessEmptyTransmit#1(Extension_51);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2513} sdv_KeReleaseSpinLock(0, pollIrql_11);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2514} IoReleaseCancelSpinLock(OldIrql_11);
    goto L36;

  L36:
    Tmp_850 := strConst__li2bpl199;
    call {:si_unique_call 2515} vslice_dummy_var_634 := CyzDbgPrintEx(2, Tmp_850);
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc vslice_dummy_var_476;
    call {:si_unique_call 2516} sdv_739 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_476);
    assume {:nonnull} sdv_739 != 0;
    assume sdv_739 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L36;

  anon23_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc Tmp_852;
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_477;
    call {:si_unique_call 2517} sdv_738 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_477);
    assume {:nonnull} sdv_738 != 0;
    assume sdv_738 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 2518} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := OldIrql_12;
    call {:si_unique_call 2519} IoAcquireCancelSpinLock(Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    OldIrql_12 := Mem_T.INT4[Tmp_853];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Irp_14;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    havoc Xc_2;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L69;

  L69:
    call {:si_unique_call 2520} IoReleaseCancelSpinLock(OldIrql_12);
    goto L24;

  anon29_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto L69;

  anon25_Then:
    call {:si_unique_call 2521} vslice_dummy_var_631 := sdv_IoSetCancelRoutine(Irp_14, li2bplFunctionConstant198);
    s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 2522} sdv_734 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_734 != 0;
    assume sdv_734 > 0;
    s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_734)));
    assume {:nonnull} s_p_e_c_i_a_l_35 != 0;
    assume s_p_e_c_i_a_l_35 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_35] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_35], s_p_e_c_i_a_l_36);
    CompleteCurrent_3 := 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 2523} Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    Mem_T.INT4[Tmp_853] := pollIrql_10;
    call {:si_unique_call 2524} sdv_KeAcquireSpinLock(0, Tmp_853);
    assume {:nonnull} Tmp_853 != 0;
    assume Tmp_853 > 0;
    pollIrql_10 := Mem_T.INT4[Tmp_853];
    call {:si_unique_call 2525} vslice_dummy_var_632 := CyzGiveXoffToIsr(Extension_51);
    call {:si_unique_call 2526} sdv_KeReleaseSpinLock(0, pollIrql_10);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 2527} vslice_dummy_var_635 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_51), delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_51), Extension_51);
    s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 2528} sdv_731 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} sdv_731 != 0;
    assume sdv_731 > 0;
    s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_731)));
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_37] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_37], s_p_e_c_i_a_l_38);
    goto L69;

  anon26_Then:
    goto L69;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    goto L24;
}



procedure {:origName "CyzGetNextWrite"} CyzGetNextWrite#1(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_51: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit#0(actual_Context_35: int) returns (Tmp_830: int)
{
  var {:pointer} Tmp_831: int;
  var {:scalar} sdv_720: int;
  var {:pointer} Tmp_833: int;
  var {:pointer} Extension_45: int;
  var {:pointer} Context_35: int;
  var vslice_dummy_var_479: int;

  anon0:
    Context_35 := actual_Context_35;
    Extension_45 := Context_35;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2530} sdv_720 := sdv_IsListEmpty(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_720 != 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    havoc Tmp_833;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Tmp_833 != 0;
    assume Tmp_833 > 0;
    havoc vslice_dummy_var_479;
    Mem_T.INT4[Tmp_833] := vslice_dummy_var_479;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    havoc Tmp_831;
    assume {:nonnull} Tmp_831 != 0;
    assume Tmp_831 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume false;
    return;

  anon25_Then:
    goto L17;

  L17:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume false;
    return;

  anon23_Then:
    assume {:partition} sdv_720 == 0;
    goto L6;

  L6:
    Tmp_830 := 0;
    goto LM2;

  LM2:
    return;

  anon22_Then:
    goto L6;

  anon21_Then:
    goto L6;

  anon20_Then:
    goto L6;

  anon19_Then:
    goto L6;

  anon24_Then:
    goto L6;
}



procedure {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit#0(actual_Context_35: int) returns (Tmp_830: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_830 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit#1(actual_Context_35: int) returns (Tmp_830: int)
{
  var {:pointer} Tmp_831: int;
  var {:scalar} sdv_720: int;
  var {:pointer} Tmp_833: int;
  var {:pointer} Extension_45: int;
  var {:pointer} Context_35: int;
  var vslice_dummy_var_636: int;
  var vslice_dummy_var_637: int;
  var vslice_dummy_var_480: int;

  anon0:
    Context_35 := actual_Context_35;
    Extension_45 := Context_35;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2531} sdv_720 := sdv_IsListEmpty(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_720 != 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    havoc Tmp_833;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Tmp_833 != 0;
    assume Tmp_833 > 0;
    havoc vslice_dummy_var_480;
    Mem_T.INT4[Tmp_833] := vslice_dummy_var_480;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    havoc Tmp_831;
    assume {:nonnull} Tmp_831 != 0;
    assume Tmp_831 > 0;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    call {:si_unique_call 2532} vslice_dummy_var_636 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_45), 0, 0, Extension_45);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    call {:si_unique_call 2533} vslice_dummy_var_637 := CyzPerhapsLowerRTS#0(Extension_45);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L6;

  L6:
    Tmp_830 := 0;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon25_Then:
    goto L17;

  anon23_Then:
    assume {:partition} sdv_720 == 0;
    goto L6;

  anon22_Then:
    goto L6;

  anon21_Then:
    goto L6;

  anon20_Then:
    goto L6;

  anon19_Then:
    goto L6;

  anon24_Then:
    goto L6;
}



procedure {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit#1(actual_Context_35: int) returns (Tmp_830: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartWrite"} CyzStartWrite#0(actual_Extension_41: int) returns (Tmp_809: int)
{
  var {:pointer} Tmp_810: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_811: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} sdv_707: int;
  var {:pointer} sdv_708: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_710: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} sdv_711: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:pointer} Tmp_814: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:pointer} Tmp_815: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} pollIrql_9: int;
  var {:scalar} Tmp_816: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} sdv_714: int;
  var {:pointer} Extension_41: int;
  var vslice_dummy_var_638: int;
  var vslice_dummy_var_639: int;
  var vslice_dummy_var_640: int;
  var vslice_dummy_var_641: int;
  var vslice_dummy_var_642: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;

  anon0:
    call {:si_unique_call 2534} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2535} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2536} Timeouts_1 := __HAVOC_malloc(20);
    Extension_41 := actual_Extension_41;
    call {:si_unique_call 2537} Tmp_811 := __HAVOC_malloc(76);
    call {:si_unique_call 2538} Tmp_813 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_813 := strConst__li2bpl193;
    call {:si_unique_call 2539} vslice_dummy_var_641 := CyzDbgPrintEx(2, Tmp_813);
    goto L15;

  L15:
    call {:si_unique_call 2540} Tmp_810, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_708, OldIrql_8, sdv_711, Tmp_814, Tmp_816 := CyzStartWrite#0_loop_L15(Tmp_810, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_708, OldIrql_8, NewIrp_3, sdv_711, Tmp_814, Timeouts_1, Tmp_816, Extension_41);
    goto L15_last;

  L15_last:
    call {:si_unique_call 2565} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2566} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_481;
    call {:si_unique_call 2541} sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_481);
    assume {:nonnull} sdv_708 != 0;
    assume sdv_708 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_482;
    call {:si_unique_call 2542} sdv_710 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_482);
    assume {:nonnull} sdv_710 != 0;
    assume sdv_710 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_710)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_21] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_21], s_p_e_c_i_a_l_23);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_815;
    assume {:nonnull} Tmp_815 != 0;
    assume Tmp_815 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume false;
    return;

  anon32_Then:
    call {:si_unique_call 2543} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;

  L41:
    UseATimer_1 := 0;
    call {:si_unique_call 2544} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2545} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2546} sdv_KeReleaseSpinLock(0, OldIrql_8);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L52;

  L52:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_483;
    call {:si_unique_call 2547} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_483);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_484;
    call {:si_unique_call 2548} sdv_711 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_484);
    assume {:nonnull} sdv_711 != 0;
    assume sdv_711 > 0;
    call {:si_unique_call 2549} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2550} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 2551} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2552} CyzGetNextWrite#0(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_41), NewIrp_3, 1, Extension_41);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L80;

  L80:
    Tmp_811 := strConst__li2bpl192;
    call {:si_unique_call 2553} vslice_dummy_var_642 := CyzDbgPrintEx(2, Tmp_811);
    Tmp_809 := FirstStatus;
    goto LM2;

  LM2:
    return;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L76;

  anon40_Then:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L88;

  L88:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_485;
    call {:si_unique_call 2554} vslice_dummy_var_638 := sdv_IoSetCancelRoutine(vslice_dummy_var_485, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_486;
    call {:si_unique_call 2555} sdv_707 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_486);
    assume {:nonnull} sdv_707 != 0;
    assume sdv_707 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_707)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_24] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_24], s_p_e_c_i_a_l_25);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2556} vslice_dummy_var_639 := CyzSetTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_41), TotalTime_1, TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_41), Extension_41);
    s_p_e_c_i_a_l_26 := 4;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_487;
    call {:si_unique_call 2557} sdv_714 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_487);
    assume {:nonnull} sdv_714 != 0;
    assume sdv_714 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_714)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_22] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_22], s_p_e_c_i_a_l_26);
    goto L100;

  L100:
    call {:si_unique_call 2558} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := pollIrql_9;
    call {:si_unique_call 2559} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    pollIrql_9 := Mem_T.INT4[Tmp_810];
    call {:si_unique_call 2560} vslice_dummy_var_640 := CyzGiveWriteToIsr#0(Extension_41);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2561} sdv_KeReleaseSpinLock(0, pollIrql_9);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2562} IoReleaseCancelSpinLock(OldIrql_8);
    goto L80;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L100;

  anon35_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2563} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L88;

  anon39_Then:
    Tmp_816 := 1;
    goto L60;

  anon33_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L61;

  anon34_Then:
    goto L52;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    call {:si_unique_call 2564} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;
}



procedure {:origName "CyzStartWrite"} CyzStartWrite#0(actual_Extension_41: int) returns (Tmp_809: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzStartWrite"} CyzStartWrite#1(actual_Extension_41: int) returns (Tmp_809: int)
{
  var {:pointer} Tmp_810: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_811: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} sdv_707: int;
  var {:pointer} sdv_708: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_710: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} sdv_711: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:pointer} Tmp_814: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:pointer} Tmp_815: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} pollIrql_9: int;
  var {:scalar} Tmp_816: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} sdv_714: int;
  var {:pointer} Extension_41: int;
  var vslice_dummy_var_643: int;
  var vslice_dummy_var_644: int;
  var vslice_dummy_var_645: int;
  var vslice_dummy_var_646: int;
  var vslice_dummy_var_647: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;

  anon0:
    call {:si_unique_call 2567} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2568} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2569} Timeouts_1 := __HAVOC_malloc(20);
    Extension_41 := actual_Extension_41;
    call {:si_unique_call 2570} Tmp_811 := __HAVOC_malloc(76);
    call {:si_unique_call 2571} Tmp_813 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_813 := strConst__li2bpl193;
    call {:si_unique_call 2572} vslice_dummy_var_646 := CyzDbgPrintEx(2, Tmp_813);
    goto L15;

  L15:
    call {:si_unique_call 2573} Tmp_810, s_p_e_c_i_a_l_21, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_708, OldIrql_8, s_p_e_c_i_a_l_23, sdv_710, sdv_711, Tmp_814, Tmp_815, Tmp_816 := CyzStartWrite#1_loop_L15(Tmp_810, s_p_e_c_i_a_l_21, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_812, sdv_708, OldIrql_8, NewIrp_3, s_p_e_c_i_a_l_23, sdv_710, sdv_711, Tmp_814, Tmp_815, Timeouts_1, Tmp_816, Extension_41);
    goto L15_last;

  L15_last:
    call {:si_unique_call 2599} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2600} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_488;
    call {:si_unique_call 2574} sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_488);
    assume {:nonnull} sdv_708 != 0;
    assume sdv_708 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_489;
    call {:si_unique_call 2575} sdv_710 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_489);
    assume {:nonnull} sdv_710 != 0;
    assume sdv_710 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_710)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_21] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_21], s_p_e_c_i_a_l_23);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_815;
    assume {:nonnull} Tmp_815 != 0;
    assume Tmp_815 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2576} CyzTryToCompleteCurrent#0(Extension_41, li2bplFunctionConstant195, OldIrql_8, -1073741816, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_41), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_41), 0, 0, 16);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto L41;

  L41:
    UseATimer_1 := 0;
    call {:si_unique_call 2577} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2578} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2579} sdv_KeReleaseSpinLock(0, OldIrql_8);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L52;

  L52:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_490;
    call {:si_unique_call 2580} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_490);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_491;
    call {:si_unique_call 2581} sdv_711 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_491);
    assume {:nonnull} sdv_711 != 0;
    assume sdv_711 > 0;
    call {:si_unique_call 2582} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := OldIrql_8;
    call {:si_unique_call 2583} IoAcquireCancelSpinLock(Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_810];
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 2584} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2585} CyzGetNextWrite#1(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_41), NewIrp_3, 1, Extension_41);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L80;

  L80:
    Tmp_811 := strConst__li2bpl192;
    call {:si_unique_call 2586} vslice_dummy_var_647 := CyzDbgPrintEx(2, Tmp_811);
    Tmp_809 := FirstStatus;
    goto LM2;

  LM2:
    return;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L76;

  anon40_Then:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L88;

  L88:
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_492;
    call {:si_unique_call 2587} vslice_dummy_var_643 := sdv_IoSetCancelRoutine(vslice_dummy_var_492, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_493;
    call {:si_unique_call 2588} sdv_707 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_493);
    assume {:nonnull} sdv_707 != 0;
    assume sdv_707 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_707)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_24] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_24], s_p_e_c_i_a_l_25);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    call {:si_unique_call 2589} vslice_dummy_var_644 := CyzSetTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_41), TotalTime_1, TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_41), Extension_41);
    s_p_e_c_i_a_l_26 := 4;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_494;
    call {:si_unique_call 2590} sdv_714 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_494);
    assume {:nonnull} sdv_714 != 0;
    assume sdv_714 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_714)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_22] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_22], s_p_e_c_i_a_l_26);
    goto L100;

  L100:
    call {:si_unique_call 2591} Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    Mem_T.INT4[Tmp_810] := pollIrql_9;
    call {:si_unique_call 2592} sdv_KeAcquireSpinLock(0, Tmp_810);
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    pollIrql_9 := Mem_T.INT4[Tmp_810];
    call {:si_unique_call 2593} vslice_dummy_var_645 := CyzGiveWriteToIsr#1(Extension_41);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2594} sdv_KeReleaseSpinLock(0, pollIrql_9);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2595} IoReleaseCancelSpinLock(OldIrql_8);
    goto L80;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L100;

  anon35_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2596} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L88;

  anon39_Then:
    Tmp_816 := 1;
    goto L60;

  anon33_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L61;

  anon34_Then:
    goto L52;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    call {:si_unique_call 2597} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;

  anon31_Then:
    call {:si_unique_call 2598} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;
}



procedure {:origName "CyzStartWrite"} CyzStartWrite#1(actual_Extension_41: int) returns (Tmp_809: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr#0(actual_Context_36: int) returns (Tmp_834: int)
{
  var {:scalar} Tmp_835: int;
  var {:pointer} s_p_e_c_i_a_l_29: int;
  var {:pointer} Tmp_836: int;
  var {:pointer} IrpSp_2: int;
  var {:pointer} sdv_724: int;
  var {:scalar} s_p_e_c_i_a_l_30: int;
  var {:pointer} Extension_46: int;
  var {:pointer} Tmp_837: int;
  var {:pointer} Context_36: int;
  var vslice_dummy_var_648: int;
  var vslice_dummy_var_649: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;

  anon0:
    Context_36 := actual_Context_36;
    Extension_46 := Context_36;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc vslice_dummy_var_495;
    call {:si_unique_call 2601} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_495);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_837;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Tmp_837 != 0;
    assume Tmp_837 > 0;
    goto L15;

  L15:
    s_p_e_c_i_a_l_30 := 1;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc vslice_dummy_var_496;
    call {:si_unique_call 2602} sdv_724 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_496);
    assume {:nonnull} sdv_724 != 0;
    assume sdv_724 > 0;
    s_p_e_c_i_a_l_29 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_724)));
    assume {:nonnull} s_p_e_c_i_a_l_29 != 0;
    assume s_p_e_c_i_a_l_29 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_29] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_29], s_p_e_c_i_a_l_30);
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L26;

  L26:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_835;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_835 == 192;
    call {:si_unique_call 2603} vslice_dummy_var_649 := CyzSetRTS(Extension_46);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L28;

  L28:
    Tmp_834 := 0;
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} Tmp_835 != 192;
    goto L28;

  anon12_Then:
    call {:si_unique_call 2604} vslice_dummy_var_648 := CyzTxStart#0(Extension_46);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L26;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_836;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Tmp_836 != 0;
    assume Tmp_836 > 0;
    goto L15;
}



procedure {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr#0(actual_Context_36: int) returns (Tmp_834: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr#1(actual_Context_36: int) returns (Tmp_834: int)
{
  var {:scalar} Tmp_835: int;
  var {:pointer} s_p_e_c_i_a_l_29: int;
  var {:pointer} Tmp_836: int;
  var {:pointer} IrpSp_2: int;
  var {:pointer} sdv_724: int;
  var {:scalar} s_p_e_c_i_a_l_30: int;
  var {:pointer} Extension_46: int;
  var {:pointer} Tmp_837: int;
  var {:pointer} Context_36: int;
  var vslice_dummy_var_650: int;
  var vslice_dummy_var_651: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;

  anon0:
    Context_36 := actual_Context_36;
    Extension_46 := Context_36;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc vslice_dummy_var_497;
    call {:si_unique_call 2605} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_497);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_837;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Tmp_837 != 0;
    assume Tmp_837 > 0;
    goto L15;

  L15:
    s_p_e_c_i_a_l_30 := 1;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc vslice_dummy_var_498;
    call {:si_unique_call 2606} sdv_724 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_498);
    assume {:nonnull} sdv_724 != 0;
    assume sdv_724 > 0;
    s_p_e_c_i_a_l_29 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_724)));
    assume {:nonnull} s_p_e_c_i_a_l_29 != 0;
    assume s_p_e_c_i_a_l_29 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_29] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_29], s_p_e_c_i_a_l_30);
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L26;

  L26:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_835;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_835 == 192;
    call {:si_unique_call 2607} vslice_dummy_var_651 := CyzSetRTS(Extension_46);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto L28;

  L28:
    Tmp_834 := 0;
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} Tmp_835 != 192;
    goto L28;

  anon12_Then:
    call {:si_unique_call 2608} vslice_dummy_var_650 := CyzTxStart#1(Extension_46);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L26;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    havoc Tmp_836;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Tmp_836 != 0;
    assume Tmp_836 > 0;
    goto L15;
}



procedure {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr#1(actual_Context_36: int) returns (Tmp_834: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTxStart"} CyzTxStart#0(actual_Context_42: int) returns (Tmp_930: int)
{
  var {:scalar} Tmp_931: int;
  var {:scalar} Tmp_932: int;
  var {:scalar} Tmp_933: int;
  var {:scalar} Tmp_934: int;
  var {:pointer} Tmp_935: int;
  var {:scalar} amountToWrite1: int;
  var {:scalar} numOfLongs: int;
  var {:scalar} Tmp_937: int;
  var {:pointer} Tmp_939: int;
  var {:scalar} sdv_795: int;
  var {:pointer} Tmp_943: int;
  var {:scalar} Tmp_944: int;
  var {:pointer} Tmp_945: int;
  var {:scalar} Tmp_947: int;
  var {:pointer} Tmp_948: int;
  var {:scalar} Tmp_949: int;
  var {:scalar} Tmp_950: int;
  var {:pointer} Tmp_951: int;
  var {:scalar} Tmp_952: int;
  var {:scalar} Tmp_953: int;
  var {:scalar} Tmp_954: int;
  var {:scalar} Tmp_955: int;
  var {:scalar} Tmp_958: int;
  var {:scalar} Tmp_961: int;
  var {:scalar} Tmp_963: int;
  var {:pointer} Tmp_964: int;
  var {:scalar} Tmp_965: int;
  var {:pointer} Tmp_966: int;
  var {:scalar} tx_5: int;
  var {:scalar} sdv_799: int;
  var {:pointer} Tmp_967: int;
  var {:scalar} Tmp_969: int;
  var {:scalar} Tmp_970: int;
  var {:pointer} Tmp_972: int;
  var {:pointer} Tmp_973: int;
  var {:scalar} numOfBytes: int;
  var {:scalar} Tmp_974: int;
  var {:pointer} Extension_59: int;
  var {:scalar} Tmp_978: int;
  var {:scalar} amountToWrite2: int;
  var {:scalar} sdv_803: int;
  var {:scalar} Tmp_980: int;
  var {:scalar} tx_6: int;
  var {:scalar} Tmp_981: int;
  var {:pointer} Tmp_983: int;
  var {:pointer} Tmp_984: int;
  var {:scalar} sdv_805: int;
  var {:scalar} tx_7: int;
  var {:scalar} Tmp_986: int;
  var {:pointer} Tmp_989: int;
  var {:pointer} Tmp_991: int;
  var {:scalar} sdv_806: int;
  var {:scalar} amount1: int;
  var {:pointer} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:pointer} Context_42: int;
  var vslice_dummy_var_652: int;
  var vslice_dummy_var_653: int;
  var vslice_dummy_var_654: int;
  var vslice_dummy_var_655: int;
  var vslice_dummy_var_656: int;

  anon0:
    Context_42 := actual_Context_42;
    Extension_59 := Context_42;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    Tmp_930 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon195_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    goto L15;

  L15:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2609} tx_6 := corral_nondet();
    call {:si_unique_call 2610} tx_7 := corral_nondet();
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc tx_5;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} tx_6 >= tx_5;
    goto L27;

  L27:
    Tmp_930 := 0;
    goto L1;

  anon196_Then:
    assume {:partition} tx_5 > tx_6;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} tx_7 < tx_5;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} tx_6 + 1 == tx_7;
    goto L30;

  L30:
    Tmp_930 := 0;
    goto L1;

  anon158_Then:
    assume {:partition} tx_6 + 1 != tx_7;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} tx_6 == tx_5 - 1;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} tx_7 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    call {:si_unique_call 2611} vslice_dummy_var_652 := CyzHandleModemUpdate#0(Extension_59, 1, 0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  L34:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_965;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Tmp_965 == 192;
    call {:si_unique_call 2612} vslice_dummy_var_653 := CyzSetRTS(Extension_59);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2613} CyzIssueCmd(Extension_59, 17, 0, 0);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume false;
    return;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    assume {:partition} Tmp_965 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2614} CyzIssueCmd(Extension_59, 17, 0, 0);
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} yogi_error != 1;
    goto L55;

  L55:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  L60:
    Tmp_930 := 0;
    goto L1;

  anon231_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon163_Then:
    goto L38;

  L38:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_996;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} Tmp_996 == 192;
    call {:si_unique_call 2615} vslice_dummy_var_654 := CyzSetRTS(Extension_59);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2616} CyzIssueCmd(Extension_59, 16, 0, 0);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume false;
    return;

  anon222_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon220_Then:
    assume {:partition} Tmp_996 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2617} CyzIssueCmd(Extension_59, 16, 0, 0);
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    goto L82;

  L82:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    goto L85;

  L85:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon168_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_947;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} Tmp_947 == 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume false;
    return;

  anon224_Then:
    assume {:partition} Tmp_947 != 192;
    goto L85;

  anon226_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon166_Then:
    goto L65;

  L65:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L100;

  L100:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_949;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} Tmp_949 == 192;
    call {:si_unique_call 2618} vslice_dummy_var_655 := CyzSetRTS(Extension_59);
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_955 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_989;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L119;

  L119:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume false;
    return;

  anon173_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L119;

  anon200_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon199_Then:
    assume {:partition} Tmp_949 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_952 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_935;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L123;

  L123:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume false;
    return;

  anon175_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L123;

  anon172_Then:
    goto L98;

  L98:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} tx_6 >= tx_7;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} tx_7 != 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} tx_7 == 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  L160:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_932;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} Tmp_932 == 192;
    call {:si_unique_call 2619} vslice_dummy_var_656 := CyzSetRTS(Extension_59);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} yogi_error != 1;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L171;

  L171:
    call {:si_unique_call 2620} Tmp_958, Tmp_966, tx_6, amount1 := CyzTxStart#0_loop_L171(Tmp_958, Tmp_966, Extension_59, tx_6, amount1);
    goto L171_last;

  L171_last:
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} amount1 != 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_958 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_966;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon183_Else_dummy;

  anon183_Else_dummy:
    assume false;
    return;

  anon183_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L172;

  L172:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L182;

  L182:
    call {:si_unique_call 2621} numOfLongs, Tmp_939, Tmp_950, Tmp_961, tx_6, Tmp_983 := CyzTxStart#0_loop_L182(numOfLongs, Tmp_939, Tmp_950, Tmp_961, Extension_59, tx_6, Tmp_983);
    goto L182_last;

  L182_last:
    Tmp_950 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Tmp_950 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_983;
    assume {:nonnull} Tmp_983 != 0;
    assume Tmp_983 > 0;
    Tmp_961 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_939;
    tx_6 := tx_6 + 4;
    goto anon206_Else_dummy;

  anon206_Else_dummy:
    assume false;
    return;

  anon206_Then:
    assume {:partition} Tmp_950 == 0;
    goto L183;

  L183:
    call {:si_unique_call 2622} Tmp_934, Tmp_954, numOfBytes, tx_6, Tmp_984 := CyzTxStart#0_loop_L183(Tmp_934, Tmp_954, numOfBytes, Extension_59, tx_6, Tmp_984);
    goto L183_last;

  L183_last:
    Tmp_954 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Tmp_954 != 0;
    Tmp_934 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_984;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon207_Else_dummy;

  anon207_Else_dummy:
    assume false;
    return;

  anon207_Then:
    assume {:partition} Tmp_954 == 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L198;

  L198:
    goto L167;

  L167:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L209;

  L209:
    call {:si_unique_call 2623} numOfLongs, Tmp_945, Tmp_969, Tmp_980, tx_6, Tmp_991 := CyzTxStart#0_loop_L209(numOfLongs, Tmp_945, Tmp_969, Extension_59, Tmp_980, tx_6, Tmp_991);
    goto L209_last;

  L209_last:
    Tmp_969 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Tmp_969 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_945;
    assume {:nonnull} Tmp_945 != 0;
    assume Tmp_945 > 0;
    Tmp_980 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_991;
    tx_6 := tx_6 + 4;
    goto anon208_Else_dummy;

  anon208_Else_dummy:
    assume false;
    return;

  anon208_Then:
    assume {:partition} Tmp_969 == 0;
    goto L210;

  L210:
    call {:si_unique_call 2624} Tmp_931, Tmp_951, Tmp_970, numOfBytes, tx_6 := CyzTxStart#0_loop_L210(Tmp_931, Tmp_951, Tmp_970, numOfBytes, Extension_59, tx_6);
    goto L210_last;

  L210_last:
    Tmp_931 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} Tmp_931 != 0;
    Tmp_970 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_951;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon209_Else_dummy;

  anon209_Else_dummy:
    assume false;
    return;

  anon209_Then:
    assume {:partition} Tmp_931 == 0;
    goto L202;

  L202:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume false;
    return;

  anon181_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L202;

  anon184_Then:
    assume {:partition} tx_6 != tx_5;
    goto L198;

  anon182_Then:
    assume {:partition} amount1 == 0;
    goto L172;

  anon180_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L167;

  anon205_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon204_Then:
    assume {:partition} Tmp_932 != 192;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L242;

  L242:
    call {:si_unique_call 2625} Tmp_943, Tmp_978, tx_6, amount1 := CyzTxStart#0_loop_L242(Tmp_943, Extension_59, Tmp_978, tx_6, amount1);
    goto L242_last;

  L242_last:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} amount1 != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_978 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_943;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon189_Else_dummy;

  anon189_Else_dummy:
    assume false;
    return;

  anon189_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L243;

  L243:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L253;

  L253:
    call {:si_unique_call 2626} Tmp_933, numOfLongs, Tmp_937, Tmp_948, tx_6, Tmp_995 := CyzTxStart#0_loop_L253(Tmp_933, numOfLongs, Tmp_937, Tmp_948, Extension_59, tx_6, Tmp_995);
    goto L253_last;

  L253_last:
    Tmp_937 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} Tmp_937 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_948;
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    Tmp_933 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_995;
    tx_6 := tx_6 + 4;
    goto anon213_Else_dummy;

  anon213_Else_dummy:
    assume false;
    return;

  anon213_Then:
    assume {:partition} Tmp_937 == 0;
    goto L254;

  L254:
    call {:si_unique_call 2627} Tmp_953, Tmp_973, numOfBytes, Tmp_974, tx_6 := CyzTxStart#0_loop_L254(Tmp_953, Tmp_973, numOfBytes, Tmp_974, Extension_59, tx_6);
    goto L254_last;

  L254_last:
    Tmp_974 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Tmp_974 != 0;
    Tmp_953 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_973;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon214_Else_dummy;

  anon214_Else_dummy:
    assume false;
    return;

  anon214_Then:
    assume {:partition} Tmp_974 == 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L269;

  L269:
    goto L238;

  L238:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L277;

  L277:
    call {:si_unique_call 2628} numOfLongs, Tmp_944, Tmp_967, Tmp_972, tx_6, Tmp_981 := CyzTxStart#0_loop_L277(numOfLongs, Tmp_944, Tmp_967, Tmp_972, Extension_59, tx_6, Tmp_981);
    goto L277_last;

  L277_last:
    Tmp_981 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Tmp_981 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_967;
    assume {:nonnull} Tmp_967 != 0;
    assume Tmp_967 > 0;
    Tmp_944 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_972;
    tx_6 := tx_6 + 4;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    assume false;
    return;

  anon215_Then:
    assume {:partition} Tmp_981 == 0;
    goto L278;

  L278:
    call {:si_unique_call 2629} Tmp_963, Tmp_964, numOfBytes, tx_6, Tmp_986 := CyzTxStart#0_loop_L278(Tmp_963, Tmp_964, numOfBytes, Extension_59, tx_6, Tmp_986);
    goto L278_last;

  L278_last:
    Tmp_963 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} Tmp_963 != 0;
    Tmp_986 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_964;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon216_Else_dummy;

  anon216_Else_dummy:
    assume false;
    return;

  anon216_Then:
    assume {:partition} Tmp_963 == 0;
    goto L228;

  L228:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon186_Then:
    call {:si_unique_call 2630} CyzQueueCompleteWrite#0(Extension_59);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    goto L60;

  anon212_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon211_Then:
    goto L60;

  anon187_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L228;

  anon190_Then:
    assume {:partition} tx_6 != tx_5;
    goto L269;

  anon188_Then:
    assume {:partition} amount1 == 0;
    goto L243;

  anon179_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L238;

  anon203_Then:
    goto L160;

  anon178_Then:
    assume {:partition} tx_7 != 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := tx_7 - 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    amountToWrite2 := 0;
    goto L160;

  anon217_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    amountToWrite2 := 0;
    goto L160;

  anon191_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite2;
    goto L160;

  anon192_Then:
    goto L160;

  anon177_Then:
    assume {:partition} tx_7 == 0;
    amountToWrite1 := tx_5 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L308;

  L308:
    goto L160;

  anon218_Then:
    goto L308;

  anon176_Then:
    assume {:partition} tx_7 > tx_6;
    amountToWrite1 := tx_7 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  anon219_Then:
    goto L160;

  anon170_Then:
    goto L60;

  anon171_Then:
    goto L100;

  anon165_Then:
    goto L98;

  anon162_Then:
    goto L65;

  anon161_Then:
    goto L38;

  anon198_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    goto L34;

  anon160_Then:
    assume {:partition} tx_7 == 0;
    goto L30;

  anon159_Then:
    assume {:partition} tx_6 != tx_5 - 1;
    goto L31;

  anon157_Then:
    assume {:partition} tx_5 <= tx_7;
    goto L27;

  anon155_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto L60;

  anon194_Then:
    goto L15;

  anon193_Then:
    goto L15;

  anon156_Then:
    goto L15;
}



procedure {:origName "CyzTxStart"} CyzTxStart#0(actual_Context_42: int) returns (Tmp_930: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTxStart"} CyzTxStart#1(actual_Context_42: int) returns (Tmp_930: int)
{
  var {:scalar} Tmp_931: int;
  var {:scalar} Tmp_932: int;
  var {:scalar} Tmp_933: int;
  var {:scalar} Tmp_934: int;
  var {:pointer} Tmp_935: int;
  var {:scalar} amountToWrite1: int;
  var {:scalar} numOfLongs: int;
  var {:scalar} Tmp_937: int;
  var {:pointer} Tmp_939: int;
  var {:scalar} sdv_795: int;
  var {:pointer} Tmp_943: int;
  var {:scalar} Tmp_944: int;
  var {:pointer} Tmp_945: int;
  var {:scalar} Tmp_947: int;
  var {:pointer} Tmp_948: int;
  var {:scalar} Tmp_949: int;
  var {:scalar} Tmp_950: int;
  var {:pointer} Tmp_951: int;
  var {:scalar} Tmp_952: int;
  var {:scalar} Tmp_953: int;
  var {:scalar} Tmp_954: int;
  var {:scalar} Tmp_955: int;
  var {:scalar} Tmp_958: int;
  var {:scalar} Tmp_961: int;
  var {:scalar} Tmp_963: int;
  var {:pointer} Tmp_964: int;
  var {:scalar} Tmp_965: int;
  var {:pointer} Tmp_966: int;
  var {:scalar} tx_5: int;
  var {:scalar} sdv_799: int;
  var {:pointer} Tmp_967: int;
  var {:scalar} Tmp_969: int;
  var {:scalar} Tmp_970: int;
  var {:pointer} Tmp_972: int;
  var {:pointer} Tmp_973: int;
  var {:scalar} numOfBytes: int;
  var {:scalar} Tmp_974: int;
  var {:pointer} Extension_59: int;
  var {:scalar} Tmp_978: int;
  var {:scalar} amountToWrite2: int;
  var {:scalar} sdv_803: int;
  var {:scalar} Tmp_980: int;
  var {:scalar} tx_6: int;
  var {:scalar} Tmp_981: int;
  var {:pointer} Tmp_983: int;
  var {:pointer} Tmp_984: int;
  var {:scalar} sdv_805: int;
  var {:scalar} tx_7: int;
  var {:scalar} Tmp_986: int;
  var {:pointer} Tmp_989: int;
  var {:pointer} Tmp_991: int;
  var {:scalar} sdv_806: int;
  var {:scalar} amount1: int;
  var {:pointer} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:pointer} Context_42: int;
  var vslice_dummy_var_657: int;
  var vslice_dummy_var_658: int;
  var vslice_dummy_var_659: int;
  var vslice_dummy_var_660: int;
  var vslice_dummy_var_661: int;
  var vslice_dummy_var_662: int;

  anon0:
    Context_42 := actual_Context_42;
    Extension_59 := Context_42;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    Tmp_930 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon195_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    goto L15;

  L15:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2631} tx_6 := corral_nondet();
    call {:si_unique_call 2632} tx_7 := corral_nondet();
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc tx_5;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} tx_6 >= tx_5;
    goto L27;

  L27:
    Tmp_930 := 0;
    goto L1;

  anon196_Then:
    assume {:partition} tx_5 > tx_6;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} tx_7 < tx_5;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} tx_6 + 1 == tx_7;
    goto L30;

  L30:
    Tmp_930 := 0;
    goto L1;

  anon158_Then:
    assume {:partition} tx_6 + 1 != tx_7;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} tx_6 == tx_5 - 1;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} tx_7 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    call {:si_unique_call 2633} vslice_dummy_var_657 := CyzHandleModemUpdate#1(Extension_59, 1, 0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  L34:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_965;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Tmp_965 == 192;
    call {:si_unique_call 2634} vslice_dummy_var_658 := CyzSetRTS(Extension_59);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2635} CyzIssueCmd(Extension_59, 17, 0, 0);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2636} sdv_803 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} yogi_error != 1;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} sdv_803 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  L60:
    Tmp_930 := 0;
    goto L1;

  anon164_Then:
    assume {:partition} sdv_803 == 0;
    goto L55;

  anon230_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    assume {:partition} Tmp_965 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2637} CyzIssueCmd(Extension_59, 17, 0, 0);
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} yogi_error != 1;
    goto L55;

  anon231_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon163_Then:
    goto L38;

  L38:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_996;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} Tmp_996 == 192;
    call {:si_unique_call 2638} vslice_dummy_var_659 := CyzSetRTS(Extension_59);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2639} CyzIssueCmd(Extension_59, 16, 0, 0);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2640} sdv_805 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} sdv_805 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    goto L85;

  L85:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon168_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_947;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} Tmp_947 == 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2641} sdv_799 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} sdv_799 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L85;

  anon169_Then:
    assume {:partition} sdv_799 == 0;
    goto L85;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon224_Then:
    assume {:partition} Tmp_947 != 192;
    goto L85;

  anon167_Then:
    assume {:partition} sdv_805 == 0;
    goto L82;

  anon223_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon222_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon220_Then:
    assume {:partition} Tmp_996 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2642} CyzIssueCmd(Extension_59, 16, 0, 0);
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    goto L82;

  anon226_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon166_Then:
    goto L65;

  L65:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L100;

  L100:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_949;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} Tmp_949 == 192;
    call {:si_unique_call 2643} vslice_dummy_var_660 := CyzSetRTS(Extension_59);
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_955 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_989;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L119;

  L119:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2644} sdv_806 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} yogi_error != 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} sdv_806 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L123;

  L123:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2645} vslice_dummy_var_662 := CyzInsertQueueDpc#0(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} yogi_error != 1;
    goto L60;

  anon202_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon174_Then:
    assume {:partition} sdv_806 == 0;
    goto L123;

  anon201_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon173_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L119;

  anon200_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon199_Then:
    assume {:partition} Tmp_949 != 192;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    Tmp_952 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_935;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L123;

  anon175_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L123;

  anon172_Then:
    goto L98;

  L98:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} tx_6 >= tx_7;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} tx_7 != 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} tx_7 == 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  L160:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_932;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} Tmp_932 == 192;
    call {:si_unique_call 2646} vslice_dummy_var_661 := CyzSetRTS(Extension_59);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} yogi_error != 1;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L171;

  L171:
    call {:si_unique_call 2647} Tmp_958, Tmp_966, tx_6, amount1 := CyzTxStart#1_loop_L171(Tmp_958, Tmp_966, Extension_59, tx_6, amount1);
    goto L171_last;

  L171_last:
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} amount1 != 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_958 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_966;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon183_Else_dummy;

  anon183_Else_dummy:
    assume false;
    return;

  anon183_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L172;

  L172:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L182;

  L182:
    call {:si_unique_call 2648} numOfLongs, Tmp_939, Tmp_950, Tmp_961, tx_6, Tmp_983 := CyzTxStart#1_loop_L182(numOfLongs, Tmp_939, Tmp_950, Tmp_961, Extension_59, tx_6, Tmp_983);
    goto L182_last;

  L182_last:
    Tmp_950 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Tmp_950 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_983;
    assume {:nonnull} Tmp_983 != 0;
    assume Tmp_983 > 0;
    Tmp_961 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_939;
    tx_6 := tx_6 + 4;
    goto anon206_Else_dummy;

  anon206_Else_dummy:
    assume false;
    return;

  anon206_Then:
    assume {:partition} Tmp_950 == 0;
    goto L183;

  L183:
    call {:si_unique_call 2649} Tmp_934, Tmp_954, numOfBytes, tx_6, Tmp_984 := CyzTxStart#1_loop_L183(Tmp_934, Tmp_954, numOfBytes, Extension_59, tx_6, Tmp_984);
    goto L183_last;

  L183_last:
    Tmp_954 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Tmp_954 != 0;
    Tmp_934 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_984;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon207_Else_dummy;

  anon207_Else_dummy:
    assume false;
    return;

  anon207_Then:
    assume {:partition} Tmp_954 == 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L198;

  L198:
    goto L167;

  L167:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L209;

  L209:
    call {:si_unique_call 2650} numOfLongs, Tmp_945, Tmp_969, Tmp_980, tx_6, Tmp_991 := CyzTxStart#1_loop_L209(numOfLongs, Tmp_945, Tmp_969, Extension_59, Tmp_980, tx_6, Tmp_991);
    goto L209_last;

  L209_last:
    Tmp_969 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Tmp_969 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_945;
    assume {:nonnull} Tmp_945 != 0;
    assume Tmp_945 > 0;
    Tmp_980 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_991;
    tx_6 := tx_6 + 4;
    goto anon208_Else_dummy;

  anon208_Else_dummy:
    assume false;
    return;

  anon208_Then:
    assume {:partition} Tmp_969 == 0;
    goto L210;

  L210:
    call {:si_unique_call 2651} Tmp_931, Tmp_951, Tmp_970, numOfBytes, tx_6 := CyzTxStart#1_loop_L210(Tmp_931, Tmp_951, Tmp_970, numOfBytes, Extension_59, tx_6);
    goto L210_last;

  L210_last:
    Tmp_931 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} Tmp_931 != 0;
    Tmp_970 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_951;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon209_Else_dummy;

  anon209_Else_dummy:
    assume false;
    return;

  anon209_Then:
    assume {:partition} Tmp_931 == 0;
    goto L202;

  L202:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    call {:si_unique_call 2652} sdv_795 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_59), 0, 0, Extension_59);
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} sdv_795 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L228;

  L228:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L60;

  anon186_Then:
    call {:si_unique_call 2653} CyzQueueCompleteWrite#1(Extension_59);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    goto L60;

  anon212_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon211_Then:
    goto L60;

  anon185_Then:
    assume {:partition} sdv_795 == 0;
    goto L228;

  anon210_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon181_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L202;

  anon184_Then:
    assume {:partition} tx_6 != tx_5;
    goto L198;

  anon182_Then:
    assume {:partition} amount1 == 0;
    goto L172;

  anon180_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L167;

  anon205_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon204_Then:
    assume {:partition} Tmp_932 != 192;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amountToWrite1;
    goto L242;

  L242:
    call {:si_unique_call 2654} Tmp_943, Tmp_978, tx_6, amount1 := CyzTxStart#1_loop_L242(Tmp_943, Extension_59, Tmp_978, tx_6, amount1);
    goto L242_last;

  L242_last:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} amount1 != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_978 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_943;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    amount1 := amount1 - 1;
    goto anon189_Else_dummy;

  anon189_Else_dummy:
    assume false;
    return;

  anon189_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L243;

  L243:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L253;

  L253:
    call {:si_unique_call 2655} Tmp_933, numOfLongs, Tmp_937, Tmp_948, tx_6, Tmp_995 := CyzTxStart#1_loop_L253(Tmp_933, numOfLongs, Tmp_937, Tmp_948, Extension_59, tx_6, Tmp_995);
    goto L253_last;

  L253_last:
    Tmp_937 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} Tmp_937 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_948;
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    Tmp_933 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_995;
    tx_6 := tx_6 + 4;
    goto anon213_Else_dummy;

  anon213_Else_dummy:
    assume false;
    return;

  anon213_Then:
    assume {:partition} Tmp_937 == 0;
    goto L254;

  L254:
    call {:si_unique_call 2656} Tmp_953, Tmp_973, numOfBytes, Tmp_974, tx_6 := CyzTxStart#1_loop_L254(Tmp_953, Tmp_973, numOfBytes, Tmp_974, Extension_59, tx_6);
    goto L254_last;

  L254_last:
    Tmp_974 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Tmp_974 != 0;
    Tmp_953 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_973;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon214_Else_dummy;

  anon214_Else_dummy:
    assume false;
    return;

  anon214_Then:
    assume {:partition} Tmp_974 == 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L269;

  L269:
    goto L238;

  L238:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L277;

  L277:
    call {:si_unique_call 2657} numOfLongs, Tmp_944, Tmp_967, Tmp_972, tx_6, Tmp_981 := CyzTxStart#1_loop_L277(numOfLongs, Tmp_944, Tmp_967, Tmp_972, Extension_59, tx_6, Tmp_981);
    goto L277_last;

  L277_last:
    Tmp_981 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Tmp_981 != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_967;
    assume {:nonnull} Tmp_967 != 0;
    assume Tmp_967 > 0;
    Tmp_944 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_972;
    tx_6 := tx_6 + 4;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    assume false;
    return;

  anon215_Then:
    assume {:partition} Tmp_981 == 0;
    goto L278;

  L278:
    call {:si_unique_call 2658} Tmp_963, Tmp_964, numOfBytes, tx_6, Tmp_986 := CyzTxStart#1_loop_L278(Tmp_963, Tmp_964, numOfBytes, Extension_59, tx_6, Tmp_986);
    goto L278_last;

  L278_last:
    Tmp_963 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} Tmp_963 != 0;
    Tmp_986 := tx_6;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc Tmp_964;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon216_Else_dummy;

  anon216_Else_dummy:
    assume false;
    return;

  anon216_Then:
    assume {:partition} Tmp_963 == 0;
    goto L228;

  anon187_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L228;

  anon190_Then:
    assume {:partition} tx_6 != tx_5;
    goto L269;

  anon188_Then:
    assume {:partition} amount1 == 0;
    goto L243;

  anon179_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L238;

  anon203_Then:
    goto L160;

  anon178_Then:
    assume {:partition} tx_7 != 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := tx_7 - 1;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    amountToWrite2 := 0;
    goto L160;

  anon217_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    amountToWrite2 := 0;
    goto L160;

  anon191_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite2;
    goto L160;

  anon192_Then:
    goto L160;

  anon177_Then:
    assume {:partition} tx_7 == 0;
    amountToWrite1 := tx_5 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L308;

  L308:
    goto L160;

  anon218_Then:
    goto L308;

  anon176_Then:
    assume {:partition} tx_7 > tx_6;
    amountToWrite1 := tx_7 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc amountToWrite1;
    goto L160;

  anon219_Then:
    goto L160;

  anon170_Then:
    goto L60;

  anon171_Then:
    goto L100;

  anon165_Then:
    goto L98;

  anon162_Then:
    goto L65;

  anon161_Then:
    goto L38;

  anon198_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    goto L34;

  anon160_Then:
    assume {:partition} tx_7 == 0;
    goto L30;

  anon159_Then:
    assume {:partition} tx_6 != tx_5 - 1;
    goto L31;

  anon157_Then:
    assume {:partition} tx_5 <= tx_7;
    goto L27;

  anon155_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto L60;

  anon194_Then:
    goto L15;

  anon193_Then:
    goto L15;

  anon156_Then:
    goto L15;
}



procedure {:origName "CyzTxStart"} CyzTxStart#1(actual_Context_42: int) returns (Tmp_930: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#0(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int)
{
  var {:scalar} ModemStatus: int;
  var {:pointer} Tmp_705: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} OldTXHolding: int;
  var {:scalar} sdv_621: int;
  var {:pointer} Tmp_707: int;
  var {:scalar} msvr: int;
  var {:pointer} Extension_32: int;
  var {:scalar} DoingTX: int;
  var {:scalar} Reason: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;

  anon0:
    Extension_32 := actual_Extension_32;
    DoingTX := actual_DoingTX;
    Reason := actual_Reason;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc OldTXHolding;
    ModemStatus := 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2659} msvr := corral_nondet();
    msvr := BAND(msvr, BNOT(256));
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc msvr;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} BAND(msvr, 2048) != 0;
    ModemStatus := BOR(ModemStatus, 16);
    goto L17;

  L17:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(msvr, 512) != 0;
    ModemStatus := BOR(ModemStatus, 32);
    goto L19;

  L19:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(msvr, 1024) != 0;
    ModemStatus := BOR(ModemStatus, 64);
    goto L21;

  L21:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} BAND(msvr, 256) != 0;
    ModemStatus := BOR(ModemStatus, 128);
    goto L23;

  L23:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Reason == 115;
    ModemStatus := BOR(ModemStatus, 1);
    goto L25;

  L25:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Reason == 113;
    ModemStatus := BOR(ModemStatus, 2);
    goto L27;

  L27:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Reason == 114;
    ModemStatus := BOR(ModemStatus, 4);
    goto L29;

  L29:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Reason == 112;
    ModemStatus := BOR(ModemStatus, 8);
    goto L31;

  L31:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BAND(ModemStatus, 15) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc vslice_dummy_var_499;
    call {:si_unique_call 2660} CyzPutChar#0(Extension_32, vslice_dummy_var_499);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2661} CyzPutChar#0(Extension_32, 3);
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2662} CyzPutChar#0(Extension_32, ModemStatus);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  L33:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  L48:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(ModemStatus, 1) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L51;

  L51:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} BAND(ModemStatus, 2) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L54;

  L54:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} BAND(ModemStatus, 4) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L57;

  L57:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} BAND(ModemStatus, 8) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_705;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    havoc vslice_dummy_var_500;
    Mem_T.INT4[Tmp_705] := vslice_dummy_var_500;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume false;
    return;

  anon119_Then:
    goto L49;

  L49:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} BAND(ModemStatus, 16) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  L77:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} BAND(ModemStatus, 128) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  L87:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} OldTXHolding != 0;
    goto L89;

  L89:
    Tmp_703 := ModemStatus;
    goto LM2;

  LM2:
    return;

  anon127_Then:
    assume {:partition} OldTXHolding == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_706;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Tmp_706 == 192;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume false;
    return;

  anon141_Then:
    assume {:partition} Tmp_706 != 192;
    goto L89;

  anon128_Then:
    goto L89;

  anon126_Then:
    assume {:partition} BAND(ModemStatus, 128) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon125_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon124_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon123_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon122_Then:
    assume {:partition} BAND(ModemStatus, 16) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon121_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon109_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} DoingTX == 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} OldTXHolding != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    goto L104;

  L104:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume false;
    return;

  anon135_Then:
    goto L89;

  anon133_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L104;

  anon134_Then:
    goto L89;

  anon132_Then:
    goto L89;

  anon131_Then:
    goto L89;

  anon130_Then:
    assume {:partition} OldTXHolding == 0;
    goto L89;

  anon143_Then:
    assume {:partition} DoingTX != 0;
    goto L89;

  anon120_Then:
    goto L89;

  anon117_Then:
    goto L49;

  anon118_Then:
    assume {:partition} BAND(ModemStatus, 8) == 0;
    goto L60;

  anon115_Then:
    goto L60;

  anon116_Then:
    assume {:partition} BAND(ModemStatus, 4) == 0;
    goto L57;

  anon113_Then:
    goto L57;

  anon114_Then:
    assume {:partition} BAND(ModemStatus, 2) == 0;
    goto L54;

  anon111_Then:
    goto L54;

  anon112_Then:
    assume {:partition} BAND(ModemStatus, 1) == 0;
    goto L51;

  anon110_Then:
    goto L51;

  anon108_Then:
    goto L49;

  anon107_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon105_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon139_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon138_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} BAND(ModemStatus, 15) == 0;
    goto L33;

  anon104_Then:
    goto L33;

  anon103_Then:
    assume {:partition} Reason != 112;
    goto L31;

  anon102_Then:
    assume {:partition} Reason != 114;
    goto L29;

  anon101_Then:
    assume {:partition} Reason != 113;
    goto L27;

  anon100_Then:
    assume {:partition} Reason != 115;
    goto L25;

  anon99_Then:
    assume {:partition} BAND(msvr, 256) == 0;
    goto L23;

  anon98_Then:
    assume {:partition} BAND(msvr, 1024) == 0;
    goto L21;

  anon97_Then:
    assume {:partition} BAND(msvr, 512) == 0;
    goto L19;

  anon136_Then:
    assume {:partition} BAND(msvr, 2048) == 0;
    goto L17;
}



procedure {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#0(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#1(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int)
{
  var {:scalar} ModemStatus: int;
  var {:pointer} Tmp_705: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} OldTXHolding: int;
  var {:scalar} sdv_621: int;
  var {:pointer} Tmp_707: int;
  var {:scalar} msvr: int;
  var {:pointer} Extension_32: int;
  var {:scalar} DoingTX: int;
  var {:scalar} Reason: int;
  var vslice_dummy_var_663: int;
  var vslice_dummy_var_664: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;

  anon0:
    Extension_32 := actual_Extension_32;
    DoingTX := actual_DoingTX;
    Reason := actual_Reason;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc OldTXHolding;
    ModemStatus := 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2663} msvr := corral_nondet();
    msvr := BAND(msvr, BNOT(256));
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc msvr;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} BAND(msvr, 2048) != 0;
    ModemStatus := BOR(ModemStatus, 16);
    goto L17;

  L17:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(msvr, 512) != 0;
    ModemStatus := BOR(ModemStatus, 32);
    goto L19;

  L19:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(msvr, 1024) != 0;
    ModemStatus := BOR(ModemStatus, 64);
    goto L21;

  L21:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} BAND(msvr, 256) != 0;
    ModemStatus := BOR(ModemStatus, 128);
    goto L23;

  L23:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Reason == 115;
    ModemStatus := BOR(ModemStatus, 1);
    goto L25;

  L25:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Reason == 113;
    ModemStatus := BOR(ModemStatus, 2);
    goto L27;

  L27:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Reason == 114;
    ModemStatus := BOR(ModemStatus, 4);
    goto L29;

  L29:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Reason == 112;
    ModemStatus := BOR(ModemStatus, 8);
    goto L31;

  L31:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BAND(ModemStatus, 15) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc vslice_dummy_var_501;
    call {:si_unique_call 2664} CyzPutChar#1(Extension_32, vslice_dummy_var_501);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2665} CyzPutChar#1(Extension_32, 3);
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2666} CyzPutChar#1(Extension_32, ModemStatus);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  L33:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  L48:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(ModemStatus, 1) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L51;

  L51:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} BAND(ModemStatus, 2) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L54;

  L54:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} BAND(ModemStatus, 4) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L57;

  L57:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} BAND(ModemStatus, 8) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_705;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    havoc vslice_dummy_var_502;
    Mem_T.INT4[Tmp_705] := vslice_dummy_var_502;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2667} vslice_dummy_var_664 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} yogi_error != 1;
    goto L49;

  L49:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} BAND(ModemStatus, 16) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  L77:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} BAND(ModemStatus, 128) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  L87:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} OldTXHolding != 0;
    goto L89;

  L89:
    Tmp_703 := ModemStatus;
    goto LM2;

  LM2:
    return;

  anon127_Then:
    assume {:partition} OldTXHolding == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_706;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Tmp_706 == 192;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2668} sdv_621 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} yogi_error != 1;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} sdv_621 != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L89;

  anon129_Then:
    assume {:partition} sdv_621 == 0;
    goto L89;

  anon142_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon141_Then:
    assume {:partition} Tmp_706 != 192;
    goto L89;

  anon128_Then:
    goto L89;

  anon126_Then:
    assume {:partition} BAND(ModemStatus, 128) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon125_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon124_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon123_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon122_Then:
    assume {:partition} BAND(ModemStatus, 16) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon121_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon109_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} DoingTX == 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} OldTXHolding != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    goto L104;

  L104:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    call {:si_unique_call 2669} vslice_dummy_var_663 := CyzTxStart#0(Extension_32);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} yogi_error != 1;
    goto L89;

  anon144_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon135_Then:
    goto L89;

  anon133_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L104;

  anon134_Then:
    goto L89;

  anon132_Then:
    goto L89;

  anon131_Then:
    goto L89;

  anon130_Then:
    assume {:partition} OldTXHolding == 0;
    goto L89;

  anon143_Then:
    assume {:partition} DoingTX != 0;
    goto L89;

  anon120_Then:
    goto L89;

  anon140_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon119_Then:
    goto L49;

  anon117_Then:
    goto L49;

  anon118_Then:
    assume {:partition} BAND(ModemStatus, 8) == 0;
    goto L60;

  anon115_Then:
    goto L60;

  anon116_Then:
    assume {:partition} BAND(ModemStatus, 4) == 0;
    goto L57;

  anon113_Then:
    goto L57;

  anon114_Then:
    assume {:partition} BAND(ModemStatus, 2) == 0;
    goto L54;

  anon111_Then:
    goto L54;

  anon112_Then:
    assume {:partition} BAND(ModemStatus, 1) == 0;
    goto L51;

  anon110_Then:
    goto L51;

  anon108_Then:
    goto L49;

  anon107_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon105_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon139_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon138_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} BAND(ModemStatus, 15) == 0;
    goto L33;

  anon104_Then:
    goto L33;

  anon103_Then:
    assume {:partition} Reason != 112;
    goto L31;

  anon102_Then:
    assume {:partition} Reason != 114;
    goto L29;

  anon101_Then:
    assume {:partition} Reason != 113;
    goto L27;

  anon100_Then:
    assume {:partition} Reason != 115;
    goto L25;

  anon99_Then:
    assume {:partition} BAND(msvr, 256) == 0;
    goto L23;

  anon98_Then:
    assume {:partition} BAND(msvr, 1024) == 0;
    goto L21;

  anon97_Then:
    assume {:partition} BAND(msvr, 512) == 0;
    goto L19;

  anon136_Then:
    assume {:partition} BAND(msvr, 2048) == 0;
    goto L17;
}



procedure {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#1(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_703: int);
  modifies Mem_T.INT4, alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPutChar"} CyzPutChar#0(actual_Extension_64: int, actual_CharToPut: int)
{
  var {:pointer} Tmp_1042: int;
  var {:pointer} sdv_837: int;
  var {:pointer} Tmp_1044: int;
  var {:pointer} Tmp_1046: int;
  var {:scalar} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} Tmp_1049: int;
  var {:pointer} Tmp_1050: int;
  var {:pointer} Tmp_1051: int;
  var {:pointer} Tmp_1052: int;
  var {:scalar} Tmp_1053: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} Extension_64: int;
  var {:scalar} CharToPut: int;
  var vslice_dummy_var_665: int;
  var vslice_dummy_var_666: int;
  var vslice_dummy_var_667: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;

  anon0:
    call {:si_unique_call 2670} vslice_dummy_var_665 := __HAVOC_malloc(4);
    Extension_64 := actual_Extension_64;
    CharToPut := actual_CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume false;
    return;

  anon61_Then:
    goto L4;

  L4:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1048;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume false;
    return;

  anon78_Then:
    goto L10;

  L10:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1054;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    Mem_T.INT4[Tmp_1054] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc vslice_dummy_var_503;
    call {:si_unique_call 2671} sdv_837 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_503);
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    assume {:nonnull} sdv_837 != 0;
    assume sdv_837 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume false;
    return;

  anon79_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon64_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1047;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Tmp_1047 == 2;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2672} vslice_dummy_var_667 := CyzClrDTR(Extension_64);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L36;

  L36:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1053;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Tmp_1053 == 128;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2673} vslice_dummy_var_666 := CyzClrRTS(Extension_64);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  L44:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2674} CyzProdXonXoff(Extension_64, 0);
    goto L51;

  L51:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1042;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    Mem_T.INT4[Tmp_1042] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1046;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1046 != 0;
    assume Tmp_1046 > 0;
    havoc vslice_dummy_var_504;
    Mem_T.INT4[Tmp_1046] := vslice_dummy_var_504;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1044;
    assume {:nonnull} Tmp_1044 != 0;
    assume Tmp_1044 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume false;
    return;

  anon84_Then:
    goto L62;

  L62:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon73_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon74_Then:
    goto L62;

  anon83_Then:
    goto L62;

  anon70_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1049;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1049 != 0;
    assume Tmp_1049 > 0;
    havoc vslice_dummy_var_505;
    Mem_T.INT4[Tmp_1049] := vslice_dummy_var_505;
    goto L78;

  L78:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume false;
    return;

  anon75_Then:
    goto L1;

  anon76_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1051;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1051 != 0;
    assume Tmp_1051 > 0;
    havoc vslice_dummy_var_506;
    Mem_T.INT4[Tmp_1051] := vslice_dummy_var_506;
    goto L78;

  anon86_Then:
    goto L78;

  anon72_Then:
    goto L51;

  anon71_Then:
    goto L51;

  anon67_Then:
    goto L51;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L44;

  anon68_Then:
    goto L44;

  anon82_Then:
    assume {:partition} Tmp_1053 != 128;
    goto L44;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    goto L36;

  anon65_Then:
    goto L36;

  anon81_Then:
    assume {:partition} Tmp_1047 != 2;
    goto L36;

  anon62_Then:
    goto L10;
}



procedure {:origName "CyzPutChar"} CyzPutChar#0(actual_Extension_64: int, actual_CharToPut: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPutChar"} CyzPutChar#1(actual_Extension_64: int, actual_CharToPut: int)
{
  var {:pointer} Tmp_1042: int;
  var {:pointer} sdv_837: int;
  var {:pointer} Tmp_1044: int;
  var {:pointer} Tmp_1046: int;
  var {:scalar} Tmp_1047: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} Tmp_1049: int;
  var {:pointer} Tmp_1050: int;
  var {:pointer} Tmp_1051: int;
  var {:pointer} Tmp_1052: int;
  var {:scalar} Tmp_1053: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} Extension_64: int;
  var {:scalar} CharToPut: int;
  var vslice_dummy_var_668: int;
  var vslice_dummy_var_669: int;
  var vslice_dummy_var_670: int;
  var vslice_dummy_var_671: int;
  var vslice_dummy_var_672: int;
  var vslice_dummy_var_673: int;
  var vslice_dummy_var_674: int;
  var vslice_dummy_var_675: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;

  anon0:
    call {:si_unique_call 2675} vslice_dummy_var_668 := __HAVOC_malloc(4);
    Extension_64 := actual_Extension_64;
    CharToPut := actual_CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 2676} vslice_dummy_var_669 := CyzHandleModemUpdate#0(Extension_64, 0, 0);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L4;

  L4:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1048;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2677} vslice_dummy_var_675 := CyzInsertQueueDpc#0(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L10;

  L10:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1054;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    Mem_T.INT4[Tmp_1054] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc vslice_dummy_var_507;
    call {:si_unique_call 2678} sdv_837 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_507);
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    assume {:nonnull} sdv_837 != 0;
    assume sdv_837 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2679} vslice_dummy_var_671 := CyzInsertQueueDpc#0(CompleteReadDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon64_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1047;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Tmp_1047 == 2;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2680} vslice_dummy_var_674 := CyzClrDTR(Extension_64);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L36;

  L36:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1053;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Tmp_1053 == 128;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2681} vslice_dummy_var_673 := CyzClrRTS(Extension_64);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  L44:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2682} CyzProdXonXoff(Extension_64, 0);
    goto L51;

  L51:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1042;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    Mem_T.INT4[Tmp_1042] := CharToPut;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1046;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1046 != 0;
    assume Tmp_1046 > 0;
    havoc vslice_dummy_var_508;
    Mem_T.INT4[Tmp_1046] := vslice_dummy_var_508;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1044;
    assume {:nonnull} Tmp_1044 != 0;
    assume Tmp_1044 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2683} vslice_dummy_var_672 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon73_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto L1;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    goto L62;

  anon74_Then:
    goto L62;

  anon83_Then:
    goto L62;

  anon70_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1049;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1049 != 0;
    assume Tmp_1049 > 0;
    havoc vslice_dummy_var_509;
    Mem_T.INT4[Tmp_1049] := vslice_dummy_var_509;
    goto L78;

  L78:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    call {:si_unique_call 2684} vslice_dummy_var_670 := CyzInsertQueueDpc#0(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_64), 0, 0, Extension_64);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    goto L1;

  anon76_Then:
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    havoc Tmp_1051;
    assume {:nonnull} Extension_64 != 0;
    assume Extension_64 > 0;
    assume {:nonnull} Tmp_1051 != 0;
    assume Tmp_1051 > 0;
    havoc vslice_dummy_var_510;
    Mem_T.INT4[Tmp_1051] := vslice_dummy_var_510;
    goto L78;

  anon86_Then:
    goto L78;

  anon72_Then:
    goto L51;

  anon71_Then:
    goto L51;

  anon67_Then:
    goto L51;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L44;

  anon68_Then:
    goto L44;

  anon82_Then:
    assume {:partition} Tmp_1053 != 128;
    goto L44;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    goto L36;

  anon65_Then:
    goto L36;

  anon81_Then:
    assume {:partition} Tmp_1047 != 2;
    goto L36;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    goto L10;

  anon62_Then:
    goto L10;

  anon63_Then:
    goto L1;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    goto L4;
}



procedure {:origName "CyzPutChar"} CyzPutChar#1(actual_Extension_64: int, actual_CharToPut: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite#0(actual_Extension_61: int)
{
  var {:pointer} IrpSp_4: int;
  var {:pointer} Tmp_1003: int;
  var {:scalar} Tmp_1004: int;
  var {:pointer} Extension_61: int;
  var vslice_dummy_var_676: int;
  var vslice_dummy_var_511: int;

  anon0:
    call {:si_unique_call 2685} vslice_dummy_var_676 := __HAVOC_malloc(4);
    Extension_61 := actual_Extension_61;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc vslice_dummy_var_511;
    call {:si_unique_call 2686} IrpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_511);
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    havoc Tmp_1004;
    goto L11;

  L11:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1003;
    assume {:nonnull} Tmp_1003 != 0;
    assume Tmp_1003 > 0;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    assume false;
    return;

  anon5_Then:
    Tmp_1004 := 1;
    goto L11;
}



procedure {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite#0(actual_Extension_61: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite#1(actual_Extension_61: int)
{
  var {:pointer} IrpSp_4: int;
  var {:pointer} Tmp_1003: int;
  var {:scalar} Tmp_1004: int;
  var {:pointer} Extension_61: int;
  var vslice_dummy_var_677: int;
  var vslice_dummy_var_678: int;
  var vslice_dummy_var_512: int;

  anon0:
    call {:si_unique_call 2687} vslice_dummy_var_677 := __HAVOC_malloc(4);
    Extension_61 := actual_Extension_61;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc vslice_dummy_var_512;
    call {:si_unique_call 2688} IrpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_512);
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    havoc Tmp_1004;
    goto L11;

  L11:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1003;
    assume {:nonnull} Tmp_1003 != 0;
    assume Tmp_1003 > 0;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    call {:si_unique_call 2689} vslice_dummy_var_678 := CyzInsertQueueDpc#0(CompleteWriteDpc__CYZ_DEVICE_EXTENSION(Extension_61), 0, 0, Extension_61);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    Tmp_1004 := 1;
    goto L11;
}



procedure {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite#1(actual_Extension_61: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextImmediate"} CyzGetNextImmediate#0(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int)
{
  var {:pointer} Tmp_333: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} OldIrp: int;
  var {:pointer} Tmp_334: int;
  var {:scalar} pollIrql_2: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Extension_18: int;
  var vslice_dummy_var_679: int;
  var vslice_dummy_var_680: int;
  var vslice_dummy_var_681: int;

  anon0:
    call {:si_unique_call 2690} vslice_dummy_var_679 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp_1 := actual_NewIrp_1;
    Extension_18 := actual_Extension_18;
    call {:si_unique_call 2691} Tmp_333 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp;
    call {:si_unique_call 2692} Tmp_334 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Mem_T.INT4[Tmp_334] := OldIrql_3;
    call {:si_unique_call 2693} IoAcquireCancelSpinLock(Tmp_334);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_334];
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    call {:si_unique_call 2694} Tmp_334 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Mem_T.INT4[Tmp_334] := pollIrql_2;
    call {:si_unique_call 2695} sdv_KeAcquireSpinLock(0, Tmp_334);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    pollIrql_2 := Mem_T.INT4[Tmp_334];
    call {:si_unique_call 2696} vslice_dummy_var_680 := CyzProcessEmptyTransmit#0(Extension_18);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2697} sdv_KeReleaseSpinLock(0, pollIrql_2);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2698} IoReleaseCancelSpinLock(OldIrql_3);
    Tmp_333 := strConst__li2bpl2;
    call {:si_unique_call 2699} vslice_dummy_var_681 := CyzDbgPrintEx(9, Tmp_333);
    call {:si_unique_call 2700} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2701} CyzIRPEpilogue(Extension_18);
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzGetNextImmediate"} CyzGetNextImmediate#0(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzGetNextImmediate"} CyzGetNextImmediate#1(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int)
{
  var {:pointer} Tmp_333: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} OldIrp: int;
  var {:pointer} Tmp_334: int;
  var {:scalar} pollIrql_2: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Extension_18: int;
  var vslice_dummy_var_682: int;
  var vslice_dummy_var_683: int;
  var vslice_dummy_var_684: int;

  anon0:
    call {:si_unique_call 2702} vslice_dummy_var_682 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp_1 := actual_NewIrp_1;
    Extension_18 := actual_Extension_18;
    call {:si_unique_call 2703} Tmp_333 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp;
    call {:si_unique_call 2704} Tmp_334 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Mem_T.INT4[Tmp_334] := OldIrql_3;
    call {:si_unique_call 2705} IoAcquireCancelSpinLock(Tmp_334);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_334];
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    call {:si_unique_call 2706} Tmp_334 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    Mem_T.INT4[Tmp_334] := pollIrql_2;
    call {:si_unique_call 2707} sdv_KeAcquireSpinLock(0, Tmp_334);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    pollIrql_2 := Mem_T.INT4[Tmp_334];
    call {:si_unique_call 2708} vslice_dummy_var_683 := CyzProcessEmptyTransmit#1(Extension_18);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2709} sdv_KeReleaseSpinLock(0, pollIrql_2);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2710} IoReleaseCancelSpinLock(OldIrql_3);
    Tmp_333 := strConst__li2bpl2;
    call {:si_unique_call 2711} vslice_dummy_var_684 := CyzDbgPrintEx(9, Tmp_333);
    call {:si_unique_call 2712} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2713} CyzIRPEpilogue(Extension_18);
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzGetNextImmediate"} CyzGetNextImmediate#1(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelImmediate"} CyzCancelImmediate#0(actual_DeviceObject_4: int, actual_Irp_4: int)
{
  var {:pointer} Extension_16: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_685: int;

  anon0:
    call {:si_unique_call 2714} vslice_dummy_var_685 := __HAVOC_malloc(4);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc Extension_16;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 2715} CyzTryToCompleteCurrent#0(Extension_16, li2bplFunctionConstant316, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_4)], -1073741536, CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(Extension_16), 0, 0, ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_16), 0, li2bplFunctionConstant314, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelImmediate"} CyzCancelImmediate#0(actual_DeviceObject_4: int, actual_Irp_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelImmediate"} CyzCancelImmediate#1(actual_DeviceObject_4: int, actual_Irp_4: int)
{
  var {:pointer} Extension_16: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_686: int;

  anon0:
    call {:si_unique_call 2716} vslice_dummy_var_686 := __HAVOC_malloc(4);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc Extension_16;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 2717} CyzTryToCompleteCurrent#1(Extension_16, li2bplFunctionConstant316, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_4)], -1073741536, CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(Extension_16), 0, 0, ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_16), 0, li2bplFunctionConstant314, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelImmediate"} CyzCancelImmediate#1(actual_DeviceObject_4: int, actual_Irp_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff#0(actual_DeviceObject_13: int, actual_Irp_12: int)
{
  var {:pointer} Extension_48: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_687: int;

  anon0:
    call {:si_unique_call 2718} vslice_dummy_var_687 := __HAVOC_malloc(4);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_12 := actual_Irp_12;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc Extension_48;
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    call {:si_unique_call 2719} CyzTryToCompleteCurrent#0(Extension_48, li2bplFunctionConstant195, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_12)], -1073741536, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_48), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_48), 0, 0, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff#0(actual_DeviceObject_13: int, actual_Irp_12: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff#1(actual_DeviceObject_13: int, actual_Irp_12: int)
{
  var {:pointer} Extension_48: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_688: int;

  anon0:
    call {:si_unique_call 2720} vslice_dummy_var_688 := __HAVOC_malloc(4);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_12 := actual_Irp_12;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc Extension_48;
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    call {:si_unique_call 2721} CyzTryToCompleteCurrent#1(Extension_48, li2bplFunctionConstant195, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_12)], -1073741536, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_48), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_48), 0, 0, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff#1(actual_DeviceObject_13: int, actual_Irp_12: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite#0(actual_DeviceObject_14: int, actual_Irp_13: int)
{
  var {:pointer} Extension_49: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_689: int;

  anon0:
    call {:si_unique_call 2722} vslice_dummy_var_689 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_13 := actual_Irp_13;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc Extension_49;
    assume {:nonnull} Extension_49 != 0;
    assume Extension_49 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 2723} CyzTryToCompleteCurrent#0(Extension_49, li2bplFunctionConstant202, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_13)], -1073741536, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_49), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_49), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_49), li2bplFunctionConstant194, li2bplFunctionConstant197, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite#0(actual_DeviceObject_14: int, actual_Irp_13: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite#1(actual_DeviceObject_14: int, actual_Irp_13: int)
{
  var {:pointer} Extension_49: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_690: int;

  anon0:
    call {:si_unique_call 2724} vslice_dummy_var_690 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_13 := actual_Irp_13;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc Extension_49;
    assume {:nonnull} Extension_49 != 0;
    assume Extension_49 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 2725} CyzTryToCompleteCurrent#1(Extension_49, li2bplFunctionConstant202, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_13)], -1073741536, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_49), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_49), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_49), li2bplFunctionConstant194, li2bplFunctionConstant197, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite#1(actual_DeviceObject_14: int, actual_Irp_13: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead#0(actual_DeviceObject_28: int, actual_Irp_25: int)
{
  var {:pointer} extension_18: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_691: int;

  anon0:
    call {:si_unique_call 2726} vslice_dummy_var_691 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    Irp_25 := actual_Irp_25;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc extension_18;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    call {:si_unique_call 2727} CyzTryToCompleteCurrent#0(extension_18, li2bplFunctionConstant457, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_25)], -1073741536, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_18), ReadQueue__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_18), li2bplFunctionConstant381, li2bplFunctionConstant144, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead#0(actual_DeviceObject_28: int, actual_Irp_25: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead#1(actual_DeviceObject_28: int, actual_Irp_25: int)
{
  var {:pointer} extension_18: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_692: int;

  anon0:
    call {:si_unique_call 2728} vslice_dummy_var_692 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    Irp_25 := actual_Irp_25;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc extension_18;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    call {:si_unique_call 2729} CyzTryToCompleteCurrent#1(extension_18, li2bplFunctionConstant457, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_25)], -1073741536, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_18), ReadQueue__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_18), li2bplFunctionConstant381, li2bplFunctionConstant144, 2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead#1(actual_DeviceObject_28: int, actual_Irp_25: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteRead"} CyzCompleteRead#0(actual_Dpc_13: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int)
{
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:scalar} oldIrql_13: int;
  var {:pointer} extension_21: int;
  var {:pointer} Dpc_13: int;
  var {:pointer} DeferredContext_8: int;
  var vslice_dummy_var_693: int;
  var vslice_dummy_var_694: int;
  var vslice_dummy_var_695: int;

  anon0:
    call {:si_unique_call 2730} vslice_dummy_var_693 := __HAVOC_malloc(4);
    Dpc_13 := actual_Dpc_13;
    DeferredContext_8 := actual_DeferredContext_8;
    call {:si_unique_call 2731} Tmp_1279 := __HAVOC_malloc(88);
    call {:si_unique_call 2732} Tmp_1280 := __HAVOC_malloc(88);
    extension_21 := DeferredContext_8;
    Tmp_1279 := strConst__li2bpl238;
    call {:si_unique_call 2733} vslice_dummy_var_694 := CyzDbgPrintEx(2, Tmp_1279);
    call {:si_unique_call 2734} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := oldIrql_13;
    call {:si_unique_call 2735} IoAcquireCancelSpinLock(Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    oldIrql_13 := Mem_T.INT4[Tmp_1281];
    assume {:nonnull} extension_21 != 0;
    assume extension_21 > 0;
    assume {:nonnull} extension_21 != 0;
    assume extension_21 > 0;
    call {:si_unique_call 2736} CyzTryToCompleteCurrent#0(extension_21, 0, oldIrql_13, 0, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_21), ReadQueue__CYZ_DEVICE_EXTENSION(extension_21), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_21), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_21), li2bplFunctionConstant381, li2bplFunctionConstant144, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2737} CyzDpcEpilogue(extension_21, Dpc_13);
    Tmp_1280 := strConst__li2bpl237;
    call {:si_unique_call 2738} vslice_dummy_var_695 := CyzDbgPrintEx(2, Tmp_1280);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteRead"} CyzCompleteRead#0(actual_Dpc_13: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteRead"} CyzCompleteRead#1(actual_Dpc_13: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int)
{
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:scalar} oldIrql_13: int;
  var {:pointer} extension_21: int;
  var {:pointer} Dpc_13: int;
  var {:pointer} DeferredContext_8: int;
  var vslice_dummy_var_696: int;
  var vslice_dummy_var_697: int;
  var vslice_dummy_var_698: int;

  anon0:
    call {:si_unique_call 2739} vslice_dummy_var_696 := __HAVOC_malloc(4);
    Dpc_13 := actual_Dpc_13;
    DeferredContext_8 := actual_DeferredContext_8;
    call {:si_unique_call 2740} Tmp_1279 := __HAVOC_malloc(88);
    call {:si_unique_call 2741} Tmp_1280 := __HAVOC_malloc(88);
    extension_21 := DeferredContext_8;
    Tmp_1279 := strConst__li2bpl238;
    call {:si_unique_call 2742} vslice_dummy_var_697 := CyzDbgPrintEx(2, Tmp_1279);
    call {:si_unique_call 2743} Tmp_1281 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    Mem_T.INT4[Tmp_1281] := oldIrql_13;
    call {:si_unique_call 2744} IoAcquireCancelSpinLock(Tmp_1281);
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    oldIrql_13 := Mem_T.INT4[Tmp_1281];
    assume {:nonnull} extension_21 != 0;
    assume extension_21 > 0;
    assume {:nonnull} extension_21 != 0;
    assume extension_21 > 0;
    call {:si_unique_call 2745} CyzTryToCompleteCurrent#1(extension_21, 0, oldIrql_13, 0, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_21), ReadQueue__CYZ_DEVICE_EXTENSION(extension_21), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_21), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_21), li2bplFunctionConstant381, li2bplFunctionConstant144, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2746} CyzDpcEpilogue(extension_21, Dpc_13);
    Tmp_1280 := strConst__li2bpl237;
    call {:si_unique_call 2747} vslice_dummy_var_698 := CyzDbgPrintEx(2, Tmp_1280);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteRead"} CyzCompleteRead#1(actual_Dpc_13: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteWait"} CyzCompleteWait#0(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int)
{
  var {:pointer} Tmp_923: int;
  var {:pointer} Tmp_924: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} Tmp_925: int;
  var {:pointer} Extension_58: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} Tmp_927: int;
  var {:pointer} Dpc_5: int;
  var {:pointer} DeferredContext_4: int;
  var vslice_dummy_var_699: int;
  var vslice_dummy_var_700: int;
  var vslice_dummy_var_701: int;
  var vslice_dummy_var_702: int;
  var vslice_dummy_var_703: int;

  anon0:
    call {:si_unique_call 2748} vslice_dummy_var_699 := __HAVOC_malloc(4);
    Dpc_5 := actual_Dpc_5;
    DeferredContext_4 := actual_DeferredContext_4;
    call {:si_unique_call 2749} Tmp_923 := __HAVOC_malloc(88);
    call {:si_unique_call 2750} Tmp_924 := __HAVOC_malloc(80);
    call {:si_unique_call 2751} Tmp_925 := __HAVOC_malloc(112);
    call {:si_unique_call 2752} Tmp_926 := __HAVOC_malloc(72);
    Extension_58 := DeferredContext_4;
    Tmp_923 := strConst__li2bpl226;
    call {:si_unique_call 2753} vslice_dummy_var_700 := CyzDbgPrintEx(2, Tmp_923);
    Tmp_924 := strConst__li2bpl223;
    call {:si_unique_call 2754} vslice_dummy_var_701 := CyzDbgPrintEx(6, Tmp_924);
    call {:si_unique_call 2755} Tmp_927 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    Mem_T.INT4[Tmp_927] := OldIrql_15;
    call {:si_unique_call 2756} IoAcquireCancelSpinLock(Tmp_927);
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    OldIrql_15 := Mem_T.INT4[Tmp_927];
    Tmp_925 := strConst__li2bpl224;
    call {:si_unique_call 2757} vslice_dummy_var_702 := CyzDbgPrintEx(7, Tmp_925);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2758} CyzTryToCompleteCurrent#0(Extension_58, 0, OldIrql_15, 0, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_58), 0, 0, 0, 0, 0, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2759} CyzDpcEpilogue(Extension_58, Dpc_5);
    Tmp_926 := strConst__li2bpl225;
    call {:si_unique_call 2760} vslice_dummy_var_703 := CyzDbgPrintEx(2, Tmp_926);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteWait"} CyzCompleteWait#0(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteWait"} CyzCompleteWait#1(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int)
{
  var {:pointer} Tmp_923: int;
  var {:pointer} Tmp_924: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} Tmp_925: int;
  var {:pointer} Extension_58: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} Tmp_927: int;
  var {:pointer} Dpc_5: int;
  var {:pointer} DeferredContext_4: int;
  var vslice_dummy_var_704: int;
  var vslice_dummy_var_705: int;
  var vslice_dummy_var_706: int;
  var vslice_dummy_var_707: int;
  var vslice_dummy_var_708: int;

  anon0:
    call {:si_unique_call 2761} vslice_dummy_var_704 := __HAVOC_malloc(4);
    Dpc_5 := actual_Dpc_5;
    DeferredContext_4 := actual_DeferredContext_4;
    call {:si_unique_call 2762} Tmp_923 := __HAVOC_malloc(88);
    call {:si_unique_call 2763} Tmp_924 := __HAVOC_malloc(80);
    call {:si_unique_call 2764} Tmp_925 := __HAVOC_malloc(112);
    call {:si_unique_call 2765} Tmp_926 := __HAVOC_malloc(72);
    Extension_58 := DeferredContext_4;
    Tmp_923 := strConst__li2bpl226;
    call {:si_unique_call 2766} vslice_dummy_var_705 := CyzDbgPrintEx(2, Tmp_923);
    Tmp_924 := strConst__li2bpl223;
    call {:si_unique_call 2767} vslice_dummy_var_706 := CyzDbgPrintEx(6, Tmp_924);
    call {:si_unique_call 2768} Tmp_927 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    Mem_T.INT4[Tmp_927] := OldIrql_15;
    call {:si_unique_call 2769} IoAcquireCancelSpinLock(Tmp_927);
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    OldIrql_15 := Mem_T.INT4[Tmp_927];
    Tmp_925 := strConst__li2bpl224;
    call {:si_unique_call 2770} vslice_dummy_var_707 := CyzDbgPrintEx(7, Tmp_925);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2771} CyzTryToCompleteCurrent#1(Extension_58, 0, OldIrql_15, 0, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_58), 0, 0, 0, 0, 0, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2772} CyzDpcEpilogue(Extension_58, Dpc_5);
    Tmp_926 := strConst__li2bpl225;
    call {:si_unique_call 2773} vslice_dummy_var_708 := CyzDbgPrintEx(2, Tmp_926);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteWait"} CyzCompleteWait#1(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteWrite"} CyzCompleteWrite#0(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int)
{
  var {:pointer} Tmp_823: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} Extension_43: int;
  var {:pointer} Tmp_824: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} Dpc_3: int;
  var {:pointer} DeferredContext_2: int;
  var vslice_dummy_var_709: int;
  var vslice_dummy_var_710: int;
  var vslice_dummy_var_711: int;

  anon0:
    call {:si_unique_call 2774} vslice_dummy_var_709 := __HAVOC_malloc(4);
    Dpc_3 := actual_Dpc_3;
    DeferredContext_2 := actual_DeferredContext_2;
    call {:si_unique_call 2775} Tmp_823 := __HAVOC_malloc(76);
    call {:si_unique_call 2776} Tmp_825 := __HAVOC_malloc(92);
    Extension_43 := DeferredContext_2;
    Tmp_825 := strConst__li2bpl195;
    call {:si_unique_call 2777} vslice_dummy_var_710 := CyzDbgPrintEx(2, Tmp_825);
    call {:si_unique_call 2778} Tmp_824 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    Mem_T.INT4[Tmp_824] := OldIrql_9;
    call {:si_unique_call 2779} IoAcquireCancelSpinLock(Tmp_824);
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_824];
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    call {:si_unique_call 2780} CyzTryToCompleteCurrent#0(Extension_43, 0, OldIrql_9, 0, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_43), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_43), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_43), li2bplFunctionConstant194, li2bplFunctionConstant197, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2781} CyzDpcEpilogue(Extension_43, Dpc_3);
    Tmp_823 := strConst__li2bpl194;
    call {:si_unique_call 2782} vslice_dummy_var_711 := CyzDbgPrintEx(2, Tmp_823);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteWrite"} CyzCompleteWrite#0(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteWrite"} CyzCompleteWrite#1(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int)
{
  var {:pointer} Tmp_823: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} Extension_43: int;
  var {:pointer} Tmp_824: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} Dpc_3: int;
  var {:pointer} DeferredContext_2: int;
  var vslice_dummy_var_712: int;
  var vslice_dummy_var_713: int;
  var vslice_dummy_var_714: int;

  anon0:
    call {:si_unique_call 2783} vslice_dummy_var_712 := __HAVOC_malloc(4);
    Dpc_3 := actual_Dpc_3;
    DeferredContext_2 := actual_DeferredContext_2;
    call {:si_unique_call 2784} Tmp_823 := __HAVOC_malloc(76);
    call {:si_unique_call 2785} Tmp_825 := __HAVOC_malloc(92);
    Extension_43 := DeferredContext_2;
    Tmp_825 := strConst__li2bpl195;
    call {:si_unique_call 2786} vslice_dummy_var_713 := CyzDbgPrintEx(2, Tmp_825);
    call {:si_unique_call 2787} Tmp_824 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    Mem_T.INT4[Tmp_824] := OldIrql_9;
    call {:si_unique_call 2788} IoAcquireCancelSpinLock(Tmp_824);
    assume {:nonnull} Tmp_824 != 0;
    assume Tmp_824 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_824];
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    call {:si_unique_call 2789} CyzTryToCompleteCurrent#1(Extension_43, 0, OldIrql_9, 0, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_43), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_43), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_43), li2bplFunctionConstant194, li2bplFunctionConstant197, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2790} CyzDpcEpilogue(Extension_43, Dpc_3);
    Tmp_823 := strConst__li2bpl194;
    call {:si_unique_call 2791} vslice_dummy_var_714 := CyzDbgPrintEx(2, Tmp_823);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteWrite"} CyzCompleteWrite#1(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteXoff"} CyzCompleteXoff#0(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int)
{
  var {:pointer} Tmp_826: int;
  var {:pointer} Tmp_828: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} Tmp_829: int;
  var {:pointer} Extension_44: int;
  var {:pointer} Dpc_4: int;
  var {:pointer} DeferredContext_3: int;
  var vslice_dummy_var_715: int;
  var vslice_dummy_var_716: int;
  var vslice_dummy_var_717: int;

  anon0:
    call {:si_unique_call 2792} vslice_dummy_var_715 := __HAVOC_malloc(4);
    Dpc_4 := actual_Dpc_4;
    DeferredContext_3 := actual_DeferredContext_3;
    call {:si_unique_call 2793} Tmp_826 := __HAVOC_malloc(72);
    call {:si_unique_call 2794} Tmp_828 := __HAVOC_malloc(88);
    Extension_44 := DeferredContext_3;
    Tmp_828 := strConst__li2bpl197;
    call {:si_unique_call 2795} vslice_dummy_var_716 := CyzDbgPrintEx(2, Tmp_828);
    call {:si_unique_call 2796} Tmp_829 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    Mem_T.INT4[Tmp_829] := OldIrql_10;
    call {:si_unique_call 2797} IoAcquireCancelSpinLock(Tmp_829);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    OldIrql_10 := Mem_T.INT4[Tmp_829];
    assume {:nonnull} Extension_44 != 0;
    assume Extension_44 > 0;
    call {:si_unique_call 2798} CyzTryToCompleteCurrent#0(Extension_44, 0, OldIrql_10, 0, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_44), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_44), 0, 0, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2799} CyzDpcEpilogue(Extension_44, Dpc_4);
    Tmp_826 := strConst__li2bpl196;
    call {:si_unique_call 2800} vslice_dummy_var_717 := CyzDbgPrintEx(2, Tmp_826);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteXoff"} CyzCompleteXoff#0(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzCompleteXoff"} CyzCompleteXoff#1(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int)
{
  var {:pointer} Tmp_826: int;
  var {:pointer} Tmp_828: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} Tmp_829: int;
  var {:pointer} Extension_44: int;
  var {:pointer} Dpc_4: int;
  var {:pointer} DeferredContext_3: int;
  var vslice_dummy_var_718: int;
  var vslice_dummy_var_719: int;
  var vslice_dummy_var_720: int;

  anon0:
    call {:si_unique_call 2801} vslice_dummy_var_718 := __HAVOC_malloc(4);
    Dpc_4 := actual_Dpc_4;
    DeferredContext_3 := actual_DeferredContext_3;
    call {:si_unique_call 2802} Tmp_826 := __HAVOC_malloc(72);
    call {:si_unique_call 2803} Tmp_828 := __HAVOC_malloc(88);
    Extension_44 := DeferredContext_3;
    Tmp_828 := strConst__li2bpl197;
    call {:si_unique_call 2804} vslice_dummy_var_719 := CyzDbgPrintEx(2, Tmp_828);
    call {:si_unique_call 2805} Tmp_829 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    Mem_T.INT4[Tmp_829] := OldIrql_10;
    call {:si_unique_call 2806} IoAcquireCancelSpinLock(Tmp_829);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    OldIrql_10 := Mem_T.INT4[Tmp_829];
    assume {:nonnull} Extension_44 != 0;
    assume Extension_44 > 0;
    call {:si_unique_call 2807} CyzTryToCompleteCurrent#1(Extension_44, 0, OldIrql_10, 0, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_44), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_44), 0, 0, 1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2808} CyzDpcEpilogue(Extension_44, Dpc_4);
    Tmp_826 := strConst__li2bpl196;
    call {:si_unique_call 2809} vslice_dummy_var_720 := CyzDbgPrintEx(2, Tmp_826);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzCompleteXoff"} CyzCompleteXoff#1(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPollingDpc"} CyzPollingDpc#0(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int)
{
  var {:scalar} Tmp_1009: int;
  var {:scalar} Tmp_1010: int;
  var {:pointer} Dispatch: int;
  var {:scalar} rx_4: int;
  var {:pointer} Tmp_1011: int;
  var {:scalar} Tmp_1012: int;
  var {:scalar} Tmp_1013: int;
  var {:scalar} Tmp_1014: int;
  var {:scalar} channel_1: int;
  var {:scalar} rx_5: int;
  var {:pointer} Tmp_1015: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} rxchar_1: int;
  var {:scalar} Tmp_1018: int;
  var {:pointer} Tmp_1019: int;
  var {:scalar} Tmp_1020: int;
  var {:scalar} pppflag: int;
  var {:scalar} Tmp_1022: int;
  var {:pointer} Tmp_1023: int;
  var {:pointer} Tmp_1024: int;
  var {:scalar} sdv_822: int;
  var {:scalar} rx_6: int;
  var {:pointer} Extension_62: int;
  var {:pointer} Tmp_1028: int;
  var {:scalar} Tmp_1030: int;
  var {:scalar} sdv_827: int;
  var {:scalar} Tmp_1031: int;
  var {:scalar} Tmp_1032: int;
  var {:pointer} pt_1: int;
  var {:scalar} qu: int;
  var {:scalar} fwcmd: int;
  var {:scalar} dbChannel: int;
  var {:scalar} Tmp_1033: int;
  var {:scalar} qu_1: int;
  var {:scalar} loc: int;
  var {:pointer} dbExtension: int;
  var {:pointer} Tmp_1034: int;
  var {:pointer} DeferredContext_5: int;
  var vslice_dummy_var_721: int;
  var vslice_dummy_var_722: int;
  var vslice_dummy_var_723: int;
  var vslice_dummy_var_724: int;
  var vslice_dummy_var_725: int;
  var vslice_dummy_var_726: int;
  var vslice_dummy_var_727: int;
  var vslice_dummy_var_728: int;
  var vslice_dummy_var_729: int;
  var vslice_dummy_var_730: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;

  anon0:
    call {:si_unique_call 2810} Tmp_1009 := __HAVOC_malloc(20);
    call {:si_unique_call 2811} Tmp_1013 := __HAVOC_malloc(20);
    call {:si_unique_call 2812} vslice_dummy_var_721 := __HAVOC_malloc(4);
    DeferredContext_5 := actual_DeferredContext_5;
    call {:si_unique_call 2813} Tmp_1011 := __HAVOC_malloc(2560);
    call {:si_unique_call 2814} Tmp_1016 := __HAVOC_malloc(2560);
    call {:si_unique_call 2815} Tmp_1023 := __HAVOC_malloc(256);
    call {:si_unique_call 2816} Tmp_1024 := __HAVOC_malloc(2560);
    call {:si_unique_call 2817} Tmp_1028 := __HAVOC_malloc(256);
    Dispatch := DeferredContext_5;
    call {:si_unique_call 2818} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    channel_1 := 0;
    goto L25;

  L25:
    call {:si_unique_call 2819} Tmp_1010, rx_4, Tmp_1011, Tmp_1012, Tmp_1014, channel_1, rx_5, Tmp_1016, rxchar_1, Tmp_1018, Tmp_1020, pppflag, Tmp_1022, Tmp_1023, Tmp_1024, sdv_822, rx_6, Extension_62, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, Tmp_1034, vslice_dummy_var_722, vslice_dummy_var_723, vslice_dummy_var_724, vslice_dummy_var_725, vslice_dummy_var_726, vslice_dummy_var_727, vslice_dummy_var_728, vslice_dummy_var_729 := CyzPollingDpc#0_loop_L25(Tmp_1009, Tmp_1010, Dispatch, rx_4, Tmp_1011, Tmp_1012, Tmp_1013, Tmp_1014, channel_1, rx_5, Tmp_1016, rxchar_1, Tmp_1018, Tmp_1020, pppflag, Tmp_1022, Tmp_1023, Tmp_1024, sdv_822, rx_6, Extension_62, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, Tmp_1034, vslice_dummy_var_722, vslice_dummy_var_723, vslice_dummy_var_724, vslice_dummy_var_725, vslice_dummy_var_726, vslice_dummy_var_727, vslice_dummy_var_728, vslice_dummy_var_729);
    goto L25_last;

  L25_last:
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    Tmp_1020 := channel_1;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    havoc Tmp_1023;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    havoc Extension_62;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Extension_62 == 0;
    goto L157;

  L157:
    channel_1 := channel_1 + 1;
    goto L157_dummy;

  L157_dummy:
    assume false;
    return;

  anon227_Then:
    assume {:partition} Extension_62 != 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc pt_1;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} pt_1 == 0;
    goto L157;

  anon228_Then:
    assume {:partition} pt_1 != 0;
    call {:si_unique_call 2820} qu := corral_nondet();
    call {:si_unique_call 2821} qu_1 := corral_nondet();
    goto L43;

  L43:
    call {:si_unique_call 2822} Tmp_1011, Tmp_1012, Tmp_1014, Tmp_1016, Tmp_1022, Tmp_1024, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, qu, fwcmd, dbChannel, Tmp_1033, loc, dbExtension, vslice_dummy_var_722, vslice_dummy_var_723, vslice_dummy_var_724, vslice_dummy_var_725, vslice_dummy_var_726, vslice_dummy_var_729 := CyzPollingDpc#0_loop_L43(Tmp_1009, Dispatch, Tmp_1011, Tmp_1012, Tmp_1013, Tmp_1014, Tmp_1016, Tmp_1022, Tmp_1024, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, vslice_dummy_var_722, vslice_dummy_var_723, vslice_dummy_var_724, vslice_dummy_var_725, vslice_dummy_var_726, vslice_dummy_var_729);
    goto L43_last;

  L43_last:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} qu != qu_1;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} qu >= 640;
    qu := 0;
    goto L44;

  L44:
    call {:si_unique_call 2823} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2824} rx_5 := corral_nondet();
    call {:si_unique_call 2825} rx_4 := corral_nondet();
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc rx_6;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} rx_5 >= rx_6;
    goto L150;

  L150:
    call {:si_unique_call 2826} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon229_Then:
    assume {:partition} rx_6 > rx_5;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} rx_4 < rx_6;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} rx_5 != rx_4;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    pppflag := 0;
    goto L164;

  L164:
    call {:si_unique_call 2827} Tmp_1010, rx_4, rxchar_1, Tmp_1018, pppflag, Tmp_1034 := CyzPollingDpc#0_loop_L164(Tmp_1010, rx_4, rx_5, rxchar_1, Tmp_1018, pppflag, rx_6, Extension_62, Tmp_1034);
    goto L164_last;

  L164_last:
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} rx_4 != rx_5;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    Tmp_1010 := rx_4;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1034;
    call {:si_unique_call 2828} rxchar_1 := corral_nondet();
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc rxchar_1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L183;

  L183:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1018;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} rx_4 == rx_6 - 1;
    rx_4 := 0;
    goto L197;

  L197:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} pppflag == 2;
    goto L165;

  L165:
    goto L159;

  L159:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 2829} sdv_822 := CyzAmountInTxBuffer(Extension_62);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_822 == 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2830} CyzQueueCompleteWrite#0(Extension_62);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  L228:
    call {:si_unique_call 2831} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon207_Then:
    assume {:partition} sdv_822 != 0;
    goto L228;

  anon206_Then:
    goto L236;

  L236:
    call {:si_unique_call 2832} vslice_dummy_var_728 := CyzTxStart#0(Extension_62);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon234_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon205_Then:
    goto L236;

  anon204_Then:
    call {:si_unique_call 2833} vslice_dummy_var_727 := CyzTxStart#0(Extension_62);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon181_Then:
    goto L228;

  anon194_Then:
    assume {:partition} pppflag != 2;
    goto anon194_Then_dummy;

  anon194_Then_dummy:
    assume false;
    return;

  anon193_Then:
    assume {:partition} rx_4 != rx_6 - 1;
    rx_4 := rx_4 + 1;
    goto L197;

  anon231_Then:
    assume {:partition} Tmp_1018 == 192;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume false;
    return;

  anon190_Then:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L194;

  anon191_Then:
    goto L194;

  anon188_Then:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L183;

  anon189_Then:
    goto L180;

  L180:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} rxchar_1 == 126;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} pppflag != 0;
    pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1015;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Tmp_1015 != 0;
    assume Tmp_1015 > 0;
    havoc vslice_dummy_var_513;
    Mem_T.INT4[Tmp_1015] := vslice_dummy_var_513;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1019;
    assume {:nonnull} Tmp_1019 != 0;
    assume Tmp_1019 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume false;
    return;

  anon201_Then:
    goto L200;

  L200:
    call {:si_unique_call 2834} CyzPutChar#0(Extension_62, rxchar_1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    call {:si_unique_call 2835} CyzPutChar#0(Extension_62, 0);
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L194;

  anon239_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon203_Then:
    goto L194;

  anon202_Then:
    goto L194;

  anon238_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    goto L200;

  anon200_Then:
    assume {:partition} pppflag == 0;
    pppflag := 1;
    goto L206;

  anon199_Then:
    goto L206;

  anon236_Then:
    assume {:partition} rxchar_1 != 126;
    goto L206;

  anon198_Then:
    goto L206;

  anon196_Then:
    goto L206;

  anon195_Then:
    goto L204;

  anon187_Then:
    goto L200;

  anon186_Then:
    goto L180;

  anon230_Then:
    assume {:partition} rxchar_1 == 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L194;

  anon185_Then:
    goto L179;

  anon184_Then:
    goto L165;

  anon183_Then:
    assume {:partition} rx_4 == rx_5;
    goto L165;

  anon182_Then:
    rx_4 := rx_5;
    goto L165;

  anon180_Then:
    assume {:partition} rx_5 == rx_4;
    goto L159;

  anon179_Then:
    assume {:partition} rx_6 <= rx_4;
    goto L150;

  anon168_Then:
    assume {:partition} 640 > qu;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} qu_1 < 640;
    Tmp_1033 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1024;
    call {:si_unique_call 2836} loc := corral_nondet();
    Tmp_1031 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1016;
    call {:si_unique_call 2837} dbChannel := corral_nondet();
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    Tmp_1030 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1011;
    call {:si_unique_call 2838} fwcmd := corral_nondet();
    Tmp_1022 := dbChannel;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    havoc Tmp_1028;
    assume {:nonnull} Tmp_1028 != 0;
    assume Tmp_1028 > 0;
    havoc dbExtension;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} dbExtension == 0;
    goto L132;

  L132:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} qu == 639;
    qu := 0;
    goto anon178_Else_dummy;

  anon178_Else_dummy:
    assume false;
    return;

  anon178_Then:
    assume {:partition} qu != 639;
    qu := qu + 1;
    goto anon178_Then_dummy;

  anon178_Then_dummy:
    assume false;
    return;

  anon240_Then:
    assume {:partition} dbExtension != 0;
    call {:si_unique_call 2839} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} loc != 3;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} loc != 66;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} loc != 69;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} loc != 70;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} loc != 96;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} loc != 97;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} loc != 98;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} loc != 99;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} loc != 100;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} loc != 112;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} loc != 113;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} loc != 114;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} loc != 115;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} loc != 132;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} loc != 133;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} loc != 134;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} loc != 135;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} loc != 136;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} loc != 144;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} loc == 145;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc Tmp_1014;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc vslice_dummy_var_514;
    havoc vslice_dummy_var_515;
    havoc vslice_dummy_var_516;
    call {:si_unique_call 2840} CyzLogError(vslice_dummy_var_514, vslice_dummy_var_515, vslice_dummy_var_516, Tmp_1009, 0, 0, 0, Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 2841} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon208_Then:
    assume {:partition} loc != 145;
    goto L76;

  anon209_Then:
    assume {:partition} loc == 144;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc Tmp_1012;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc vslice_dummy_var_517;
    havoc vslice_dummy_var_518;
    havoc vslice_dummy_var_519;
    call {:si_unique_call 2842} CyzLogError(vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_519, Tmp_1013, 0, 0, 0, Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon210_Then:
    assume {:partition} loc == 136;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 2843} vslice_dummy_var_722 := CyzProcessLSR#0(dbExtension, 2);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon177_Then:
    goto L76;

  anon211_Then:
    assume {:partition} loc == 135;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2844} vslice_dummy_var_723 := CyzProcessLSR#0(dbExtension, 2);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon176_Then:
    goto L76;

  anon212_Then:
    assume {:partition} loc == 134;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 2845} vslice_dummy_var_724 := CyzProcessLSR#0(dbExtension, 8);
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon244_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L76;

  anon213_Then:
    assume {:partition} loc == 133;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 2846} vslice_dummy_var_725 := CyzProcessLSR#0(dbExtension, 4);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon174_Then:
    goto L76;

  anon214_Then:
    assume {:partition} loc == 132;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 2847} vslice_dummy_var_726 := CyzProcessLSR#0(dbExtension, 16);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon242_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon173_Then:
    goto L76;

  anon215_Then:
    assume {:partition} loc == 115;
    goto L87;

  L87:
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    Tmp_1032 := loc;
    call {:si_unique_call 2848} vslice_dummy_var_729 := CyzHandleModemUpdate#0(dbExtension, 0, Tmp_1032);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon172_Then:
    goto L76;

  anon216_Then:
    assume {:partition} loc == 114;
    goto L87;

  anon217_Then:
    assume {:partition} loc == 113;
    goto L87;

  anon218_Then:
    assume {:partition} loc == 112;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L87;

  anon219_Then:
    assume {:partition} loc == 100;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L76;

  anon220_Then:
    assume {:partition} loc == 99;
    goto L76;

  anon221_Then:
    assume {:partition} loc == 98;
    goto L76;

  anon222_Then:
    assume {:partition} loc == 97;
    goto L76;

  anon223_Then:
    assume {:partition} loc == 96;
    goto L76;

  anon224_Then:
    assume {:partition} loc == 70;
    goto L76;

  anon225_Then:
    assume {:partition} loc == 69;
    goto L76;

  anon226_Then:
    assume {:partition} loc == 66;
    goto L76;

  anon171_Then:
    assume {:partition} loc == 3;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L76;

  anon170_Then:
    goto L44;

  anon169_Then:
    assume {:partition} 640 <= qu_1;
    goto L44;

  anon167_Then:
    assume {:partition} qu == qu_1;
    goto L44;

  anon166_Then:
    goto L26;

  L26:
    call {:si_unique_call 2849} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto LM2;

  anon165_Then:
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    call {:si_unique_call 2850} vslice_dummy_var_730 := KeSetEvent(PendingDpcEvent__CYZ_DISPATCH(Dispatch), 0, 0);
    goto L26;
}



procedure {:origName "CyzPollingDpc"} CyzPollingDpc#0(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzPollingDpc"} CyzPollingDpc#1(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int)
{
  var {:scalar} Tmp_1009: int;
  var {:scalar} Tmp_1010: int;
  var {:pointer} Dispatch: int;
  var {:scalar} rx_4: int;
  var {:pointer} Tmp_1011: int;
  var {:scalar} Tmp_1012: int;
  var {:scalar} Tmp_1013: int;
  var {:scalar} Tmp_1014: int;
  var {:scalar} channel_1: int;
  var {:scalar} rx_5: int;
  var {:pointer} Tmp_1015: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} rxchar_1: int;
  var {:scalar} Tmp_1018: int;
  var {:pointer} Tmp_1019: int;
  var {:scalar} Tmp_1020: int;
  var {:scalar} pppflag: int;
  var {:scalar} Tmp_1022: int;
  var {:pointer} Tmp_1023: int;
  var {:pointer} Tmp_1024: int;
  var {:scalar} sdv_822: int;
  var {:scalar} rx_6: int;
  var {:pointer} Extension_62: int;
  var {:pointer} Tmp_1028: int;
  var {:scalar} Tmp_1030: int;
  var {:scalar} sdv_827: int;
  var {:scalar} Tmp_1031: int;
  var {:scalar} Tmp_1032: int;
  var {:pointer} pt_1: int;
  var {:scalar} qu: int;
  var {:scalar} fwcmd: int;
  var {:scalar} dbChannel: int;
  var {:scalar} Tmp_1033: int;
  var {:scalar} qu_1: int;
  var {:scalar} loc: int;
  var {:pointer} dbExtension: int;
  var {:pointer} Tmp_1034: int;
  var {:pointer} DeferredContext_5: int;
  var vslice_dummy_var_731: int;
  var vslice_dummy_var_732: int;
  var vslice_dummy_var_733: int;
  var vslice_dummy_var_734: int;
  var vslice_dummy_var_735: int;
  var vslice_dummy_var_736: int;
  var vslice_dummy_var_737: int;
  var vslice_dummy_var_738: int;
  var vslice_dummy_var_739: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;

  anon0:
    call {:si_unique_call 2851} Tmp_1009 := __HAVOC_malloc(20);
    call {:si_unique_call 2852} Tmp_1013 := __HAVOC_malloc(20);
    call {:si_unique_call 2853} vslice_dummy_var_731 := __HAVOC_malloc(4);
    DeferredContext_5 := actual_DeferredContext_5;
    call {:si_unique_call 2854} Tmp_1011 := __HAVOC_malloc(2560);
    call {:si_unique_call 2855} Tmp_1016 := __HAVOC_malloc(2560);
    call {:si_unique_call 2856} Tmp_1023 := __HAVOC_malloc(256);
    call {:si_unique_call 2857} Tmp_1024 := __HAVOC_malloc(2560);
    call {:si_unique_call 2858} Tmp_1028 := __HAVOC_malloc(256);
    Dispatch := DeferredContext_5;
    call {:si_unique_call 2859} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    channel_1 := 0;
    goto L25;

  L25:
    call {:si_unique_call 2860} Tmp_1010, rx_4, Tmp_1011, Tmp_1012, Tmp_1014, channel_1, rx_5, Tmp_1015, Tmp_1016, rxchar_1, Tmp_1018, Tmp_1019, Tmp_1020, pppflag, Tmp_1022, Tmp_1023, Tmp_1024, sdv_822, rx_6, Extension_62, Tmp_1028, Tmp_1030, sdv_827, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, Tmp_1034, vslice_dummy_var_732, vslice_dummy_var_733, vslice_dummy_var_734, vslice_dummy_var_735, vslice_dummy_var_736, vslice_dummy_var_737, vslice_dummy_var_738, vslice_dummy_var_739, vslice_dummy_var_740 := CyzPollingDpc#1_loop_L25(Tmp_1009, Tmp_1010, Dispatch, rx_4, Tmp_1011, Tmp_1012, Tmp_1013, Tmp_1014, channel_1, rx_5, Tmp_1015, Tmp_1016, rxchar_1, Tmp_1018, Tmp_1019, Tmp_1020, pppflag, Tmp_1022, Tmp_1023, Tmp_1024, sdv_822, rx_6, Extension_62, Tmp_1028, Tmp_1030, sdv_827, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, Tmp_1034, vslice_dummy_var_732, vslice_dummy_var_733, vslice_dummy_var_734, vslice_dummy_var_735, vslice_dummy_var_736, vslice_dummy_var_737, vslice_dummy_var_738, vslice_dummy_var_739, vslice_dummy_var_740);
    goto L25_last;

  L25_last:
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    Tmp_1020 := channel_1;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    havoc Tmp_1023;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    havoc Extension_62;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Extension_62 == 0;
    goto L157;

  L157:
    channel_1 := channel_1 + 1;
    goto L157_dummy;

  L157_dummy:
    assume false;
    return;

  anon227_Then:
    assume {:partition} Extension_62 != 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc pt_1;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} pt_1 == 0;
    goto L157;

  anon228_Then:
    assume {:partition} pt_1 != 0;
    call {:si_unique_call 2861} qu := corral_nondet();
    call {:si_unique_call 2862} qu_1 := corral_nondet();
    goto L43;

  L43:
    call {:si_unique_call 2863} Tmp_1011, Tmp_1012, Tmp_1014, Tmp_1016, Tmp_1022, Tmp_1024, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, qu, fwcmd, dbChannel, Tmp_1033, loc, dbExtension, vslice_dummy_var_732, vslice_dummy_var_733, vslice_dummy_var_734, vslice_dummy_var_735, vslice_dummy_var_736, vslice_dummy_var_740 := CyzPollingDpc#1_loop_L43(Tmp_1009, Dispatch, Tmp_1011, Tmp_1012, Tmp_1013, Tmp_1014, Tmp_1016, Tmp_1022, Tmp_1024, Tmp_1028, Tmp_1030, Tmp_1031, Tmp_1032, pt_1, qu, fwcmd, dbChannel, Tmp_1033, qu_1, loc, dbExtension, vslice_dummy_var_732, vslice_dummy_var_733, vslice_dummy_var_734, vslice_dummy_var_735, vslice_dummy_var_736, vslice_dummy_var_740);
    goto L43_last;

  L43_last:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} qu != qu_1;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} qu >= 640;
    qu := 0;
    goto L44;

  L44:
    call {:si_unique_call 2864} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2865} rx_5 := corral_nondet();
    call {:si_unique_call 2866} rx_4 := corral_nondet();
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc rx_6;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} rx_5 >= rx_6;
    goto L150;

  L150:
    call {:si_unique_call 2867} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon229_Then:
    assume {:partition} rx_6 > rx_5;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} rx_4 < rx_6;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} rx_5 != rx_4;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    pppflag := 0;
    goto L164;

  L164:
    call {:si_unique_call 2868} Tmp_1010, rx_4, Tmp_1015, rxchar_1, Tmp_1018, Tmp_1019, pppflag, sdv_827, Tmp_1034, vslice_dummy_var_739 := CyzPollingDpc#1_loop_L164(Tmp_1010, rx_4, rx_5, Tmp_1015, rxchar_1, Tmp_1018, Tmp_1019, pppflag, rx_6, Extension_62, sdv_827, Tmp_1034, vslice_dummy_var_739);
    goto L164_last;

  L164_last:
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} rx_4 != rx_5;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    Tmp_1010 := rx_4;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1034;
    call {:si_unique_call 2869} rxchar_1 := corral_nondet();
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc rxchar_1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L183;

  L183:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1018;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} rx_4 == rx_6 - 1;
    rx_4 := 0;
    goto L197;

  L197:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} pppflag == 2;
    goto L165;

  L165:
    goto L159;

  L159:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 2870} sdv_822 := CyzAmountInTxBuffer(Extension_62);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_822 == 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2871} CyzQueueCompleteWrite#1(Extension_62);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  L228:
    call {:si_unique_call 2872} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon207_Then:
    assume {:partition} sdv_822 != 0;
    goto L228;

  anon206_Then:
    goto L236;

  L236:
    call {:si_unique_call 2873} vslice_dummy_var_738 := CyzTxStart#1(Extension_62);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon234_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon205_Then:
    goto L236;

  anon204_Then:
    call {:si_unique_call 2874} vslice_dummy_var_737 := CyzTxStart#1(Extension_62);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon181_Then:
    goto L228;

  anon194_Then:
    assume {:partition} pppflag != 2;
    goto anon194_Then_dummy;

  anon194_Then_dummy:
    assume false;
    return;

  anon193_Then:
    assume {:partition} rx_4 != rx_6 - 1;
    rx_4 := rx_4 + 1;
    goto L197;

  anon231_Then:
    assume {:partition} Tmp_1018 == 192;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2875} sdv_827 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_62), 0, 0, Extension_62);
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} sdv_827 == 0;
    goto L194;

  anon192_Then:
    assume {:partition} sdv_827 != 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L194;

  anon232_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon190_Then:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L194;

  anon191_Then:
    goto L194;

  anon188_Then:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L183;

  anon189_Then:
    goto L180;

  L180:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} rxchar_1 == 126;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} pppflag != 0;
    pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1015;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Tmp_1015 != 0;
    assume Tmp_1015 > 0;
    havoc vslice_dummy_var_520;
    Mem_T.INT4[Tmp_1015] := vslice_dummy_var_520;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    havoc Tmp_1019;
    assume {:nonnull} Tmp_1019 != 0;
    assume Tmp_1019 > 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    call {:si_unique_call 2876} vslice_dummy_var_739 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_62), 0, 0, Extension_62);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto L200;

  L200:
    call {:si_unique_call 2877} CyzPutChar#1(Extension_62, rxchar_1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    call {:si_unique_call 2878} CyzPutChar#1(Extension_62, 0);
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L194;

  anon239_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon203_Then:
    goto L194;

  anon202_Then:
    goto L194;

  anon238_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon237_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    goto L200;

  anon197_Then:
    goto L200;

  anon200_Then:
    assume {:partition} pppflag == 0;
    pppflag := 1;
    goto L206;

  anon199_Then:
    goto L206;

  anon236_Then:
    assume {:partition} rxchar_1 != 126;
    goto L206;

  anon198_Then:
    goto L206;

  anon196_Then:
    goto L206;

  anon195_Then:
    goto L204;

  anon187_Then:
    goto L200;

  anon186_Then:
    goto L180;

  anon230_Then:
    assume {:partition} rxchar_1 == 0;
    assume {:nonnull} Extension_62 != 0;
    assume Extension_62 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L194;

  anon185_Then:
    goto L179;

  anon184_Then:
    goto L165;

  anon183_Then:
    assume {:partition} rx_4 == rx_5;
    goto L165;

  anon182_Then:
    rx_4 := rx_5;
    goto L165;

  anon180_Then:
    assume {:partition} rx_5 == rx_4;
    goto L159;

  anon179_Then:
    assume {:partition} rx_6 <= rx_4;
    goto L150;

  anon168_Then:
    assume {:partition} 640 > qu;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} qu_1 < 640;
    Tmp_1033 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1024;
    call {:si_unique_call 2879} loc := corral_nondet();
    Tmp_1031 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1016;
    call {:si_unique_call 2880} dbChannel := corral_nondet();
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    Tmp_1030 := qu;
    assume {:nonnull} pt_1 != 0;
    assume pt_1 > 0;
    havoc Tmp_1011;
    call {:si_unique_call 2881} fwcmd := corral_nondet();
    Tmp_1022 := dbChannel;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    havoc Tmp_1028;
    assume {:nonnull} Tmp_1028 != 0;
    assume Tmp_1028 > 0;
    havoc dbExtension;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} dbExtension == 0;
    goto L132;

  L132:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} qu == 639;
    qu := 0;
    goto anon178_Else_dummy;

  anon178_Else_dummy:
    assume false;
    return;

  anon178_Then:
    assume {:partition} qu != 639;
    qu := qu + 1;
    goto anon178_Then_dummy;

  anon178_Then_dummy:
    assume false;
    return;

  anon240_Then:
    assume {:partition} dbExtension != 0;
    call {:si_unique_call 2882} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} loc != 3;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} loc != 66;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} loc != 69;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} loc != 70;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} loc != 96;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} loc != 97;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} loc != 98;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} loc != 99;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} loc != 100;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} loc != 112;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} loc != 113;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} loc != 114;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} loc != 115;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} loc != 132;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} loc != 133;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} loc != 134;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} loc != 135;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} loc != 136;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} loc != 144;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} loc == 145;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc Tmp_1014;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} Tmp_1009 != 0;
    assume Tmp_1009 > 0;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc vslice_dummy_var_521;
    havoc vslice_dummy_var_522;
    havoc vslice_dummy_var_523;
    call {:si_unique_call 2883} CyzLogError(vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_523, Tmp_1009, 0, 0, 0, Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 2884} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon208_Then:
    assume {:partition} loc != 145;
    goto L76;

  anon209_Then:
    assume {:partition} loc == 144;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc Tmp_1012;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    havoc vslice_dummy_var_524;
    havoc vslice_dummy_var_525;
    havoc vslice_dummy_var_526;
    call {:si_unique_call 2885} CyzLogError(vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526, Tmp_1013, 0, 0, 0, Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon210_Then:
    assume {:partition} loc == 136;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 2886} vslice_dummy_var_732 := CyzProcessLSR#1(dbExtension, 2);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon177_Then:
    goto L76;

  anon211_Then:
    assume {:partition} loc == 135;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2887} vslice_dummy_var_733 := CyzProcessLSR#1(dbExtension, 2);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon176_Then:
    goto L76;

  anon212_Then:
    assume {:partition} loc == 134;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 2888} vslice_dummy_var_734 := CyzProcessLSR#1(dbExtension, 8);
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon244_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L76;

  anon213_Then:
    assume {:partition} loc == 133;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 2889} vslice_dummy_var_735 := CyzProcessLSR#1(dbExtension, 4);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon174_Then:
    goto L76;

  anon214_Then:
    assume {:partition} loc == 132;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 2890} vslice_dummy_var_736 := CyzProcessLSR#1(dbExtension, 16);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon242_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon173_Then:
    goto L76;

  anon215_Then:
    assume {:partition} loc == 115;
    goto L87;

  L87:
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    Tmp_1032 := loc;
    call {:si_unique_call 2891} vslice_dummy_var_740 := CyzHandleModemUpdate#1(dbExtension, 0, Tmp_1032);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon172_Then:
    goto L76;

  anon216_Then:
    assume {:partition} loc == 114;
    goto L87;

  anon217_Then:
    assume {:partition} loc == 113;
    goto L87;

  anon218_Then:
    assume {:partition} loc == 112;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L87;

  anon219_Then:
    assume {:partition} loc == 100;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L76;

  anon220_Then:
    assume {:partition} loc == 99;
    goto L76;

  anon221_Then:
    assume {:partition} loc == 98;
    goto L76;

  anon222_Then:
    assume {:partition} loc == 97;
    goto L76;

  anon223_Then:
    assume {:partition} loc == 96;
    goto L76;

  anon224_Then:
    assume {:partition} loc == 70;
    goto L76;

  anon225_Then:
    assume {:partition} loc == 69;
    goto L76;

  anon226_Then:
    assume {:partition} loc == 66;
    goto L76;

  anon171_Then:
    assume {:partition} loc == 3;
    assume {:nonnull} dbExtension != 0;
    assume dbExtension > 0;
    goto L76;

  anon170_Then:
    goto L44;

  anon169_Then:
    assume {:partition} 640 <= qu_1;
    goto L44;

  anon167_Then:
    assume {:partition} qu == qu_1;
    goto L44;

  anon166_Then:
    goto L26;

  L26:
    call {:si_unique_call 2892} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto LM2;

  anon165_Then:
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    assume {:nonnull} Dispatch != 0;
    assume Dispatch > 0;
    call {:si_unique_call 2893} vslice_dummy_var_741 := KeSetEvent(PendingDpcEvent__CYZ_DISPATCH(Dispatch), 0, 0);
    goto L26;
}



procedure {:origName "CyzPollingDpc"} CyzPollingDpc#1(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProcessLSR"} CyzProcessLSR#0(actual_Extension_60: int, actual_LineStatus: int) returns (Tmp_997: int)
{
  var {:pointer} Tmp_998: int;
  var {:pointer} Tmp_1000: int;
  var {:pointer} Extension_60: int;
  var {:scalar} LineStatus: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;

  anon0:
    Extension_60 := actual_Extension_60;
    LineStatus := actual_LineStatus;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_527;
    call {:si_unique_call 2894} CyzPutChar#0(Extension_60, vslice_dummy_var_527);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2895} CyzPutChar#0(Extension_60, 2);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2896} CyzPutChar#0(Extension_60, LineStatus);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L4;

  L4:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(LineStatus, 2) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_528;
    call {:si_unique_call 2897} CyzPutChar#0(Extension_60, vslice_dummy_var_528);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  L14:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(LineStatus, 16) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_529;
    call {:si_unique_call 2898} CyzPutChar#0(Extension_60, vslice_dummy_var_529);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  L25:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume false;
    return;

  anon57_Then:
    goto L29;

  L29:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(LineStatus, 14) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto L35;

  L35:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(LineStatus, 16) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_1000;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    havoc vslice_dummy_var_530;
    Mem_T.INT4[Tmp_1000] := vslice_dummy_var_530;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_998;
    assume {:nonnull} Tmp_998 != 0;
    assume Tmp_998 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume false;
    return;

  anon64_Then:
    goto L33;

  L33:
    Tmp_997 := LineStatus;
    goto LM2;

  LM2:
    return;

  anon62_Then:
    goto L33;

  anon63_Then:
    assume {:partition} BAND(LineStatus, 16) == 0;
    goto L38;

  anon60_Then:
    goto L38;

  anon61_Then:
    assume {:partition} BAND(LineStatus, 14) == 0;
    goto L35;

  anon59_Then:
    goto L35;

  anon58_Then:
    goto L33;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    goto L25;

  anon55_Then:
    assume {:partition} BAND(LineStatus, 16) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(LineStatus, 4) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_531;
    call {:si_unique_call 2899} CyzPutChar#0(Extension_60, vslice_dummy_var_531);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L49;

  L49:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(LineStatus, 8) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_532;
    call {:si_unique_call 2900} CyzPutChar#0(Extension_60, vslice_dummy_var_532);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    goto L25;

  anon65_Then:
    assume {:partition} BAND(LineStatus, 8) == 0;
    goto L25;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    goto L49;

  anon56_Then:
    assume {:partition} BAND(LineStatus, 4) == 0;
    goto L49;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L14;

  anon54_Then:
    assume {:partition} BAND(LineStatus, 2) == 0;
    goto L14;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L4;
}



procedure {:origName "CyzProcessLSR"} CyzProcessLSR#0(actual_Extension_60: int, actual_LineStatus: int) returns (Tmp_997: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzProcessLSR"} CyzProcessLSR#1(actual_Extension_60: int, actual_LineStatus: int) returns (Tmp_997: int)
{
  var {:pointer} Tmp_998: int;
  var {:pointer} Tmp_1000: int;
  var {:pointer} Extension_60: int;
  var {:scalar} LineStatus: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;

  anon0:
    Extension_60 := actual_Extension_60;
    LineStatus := actual_LineStatus;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_533;
    call {:si_unique_call 2901} CyzPutChar#1(Extension_60, vslice_dummy_var_533);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2902} CyzPutChar#1(Extension_60, 2);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2903} CyzPutChar#1(Extension_60, LineStatus);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L4;

  L4:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(LineStatus, 2) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_534;
    call {:si_unique_call 2904} CyzPutChar#1(Extension_60, vslice_dummy_var_534);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  L14:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(LineStatus, 16) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_535;
    call {:si_unique_call 2905} CyzPutChar#1(Extension_60, vslice_dummy_var_535);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  L25:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    call {:si_unique_call 2906} vslice_dummy_var_742 := CyzInsertQueueDpc#0(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_60), 0, 0, Extension_60);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  L29:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(LineStatus, 14) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto L35;

  L35:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(LineStatus, 16) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_1000;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    havoc vslice_dummy_var_536;
    Mem_T.INT4[Tmp_1000] := vslice_dummy_var_536;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_998;
    assume {:nonnull} Tmp_998 != 0;
    assume Tmp_998 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    call {:si_unique_call 2907} vslice_dummy_var_743 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_60), 0, 0, Extension_60);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L33;

  L33:
    Tmp_997 := LineStatus;
    goto LM2;

  LM2:
    return;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L33;

  anon62_Then:
    goto L33;

  anon63_Then:
    assume {:partition} BAND(LineStatus, 16) == 0;
    goto L38;

  anon60_Then:
    goto L38;

  anon61_Then:
    assume {:partition} BAND(LineStatus, 14) == 0;
    goto L35;

  anon59_Then:
    goto L35;

  anon58_Then:
    goto L33;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    goto L25;

  anon55_Then:
    assume {:partition} BAND(LineStatus, 16) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(LineStatus, 4) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_537;
    call {:si_unique_call 2908} CyzPutChar#1(Extension_60, vslice_dummy_var_537);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L49;

  L49:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(LineStatus, 8) != 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_538;
    call {:si_unique_call 2909} CyzPutChar#1(Extension_60, vslice_dummy_var_538);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L25;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    goto L25;

  anon65_Then:
    assume {:partition} BAND(LineStatus, 8) == 0;
    goto L25;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon75_Then:
    goto L49;

  anon56_Then:
    assume {:partition} BAND(LineStatus, 4) == 0;
    goto L49;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L14;

  anon54_Then:
    assume {:partition} BAND(LineStatus, 2) == 0;
    goto L14;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L4;
}



procedure {:origName "CyzProcessLSR"} CyzProcessLSR#1(actual_Extension_60: int, actual_LineStatus: int) returns (Tmp_997: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReadTimeout"} CyzReadTimeout#0(actual_Dpc_12: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int)
{
  var {:scalar} oldIrql_12: int;
  var {:pointer} Tmp_1275: int;
  var {:pointer} Tmp_1276: int;
  var {:pointer} extension_20: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Dpc_12: int;
  var {:pointer} DeferredContext_7: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;

  anon0:
    call {:si_unique_call 2910} vslice_dummy_var_744 := __HAVOC_malloc(4);
    Dpc_12 := actual_Dpc_12;
    DeferredContext_7 := actual_DeferredContext_7;
    call {:si_unique_call 2911} Tmp_1276 := __HAVOC_malloc(84);
    call {:si_unique_call 2912} Tmp_1277 := __HAVOC_malloc(68);
    extension_20 := DeferredContext_7;
    Tmp_1276 := strConst__li2bpl236;
    call {:si_unique_call 2913} vslice_dummy_var_745 := CyzDbgPrintEx(2, Tmp_1276);
    call {:si_unique_call 2914} Tmp_1275 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    Mem_T.INT4[Tmp_1275] := oldIrql_12;
    call {:si_unique_call 2915} IoAcquireCancelSpinLock(Tmp_1275);
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    oldIrql_12 := Mem_T.INT4[Tmp_1275];
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    call {:si_unique_call 2916} CyzTryToCompleteCurrent#0(extension_20, li2bplFunctionConstant457, oldIrql_12, 258, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_20), ReadQueue__CYZ_DEVICE_EXTENSION(extension_20), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_20), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_20), li2bplFunctionConstant381, li2bplFunctionConstant144, 4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2917} CyzDpcEpilogue(extension_20, Dpc_12);
    Tmp_1277 := strConst__li2bpl235;
    call {:si_unique_call 2918} vslice_dummy_var_746 := CyzDbgPrintEx(2, Tmp_1277);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzReadTimeout"} CyzReadTimeout#0(actual_Dpc_12: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzReadTimeout"} CyzReadTimeout#1(actual_Dpc_12: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int)
{
  var {:scalar} oldIrql_12: int;
  var {:pointer} Tmp_1275: int;
  var {:pointer} Tmp_1276: int;
  var {:pointer} extension_20: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Dpc_12: int;
  var {:pointer} DeferredContext_7: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;

  anon0:
    call {:si_unique_call 2919} vslice_dummy_var_747 := __HAVOC_malloc(4);
    Dpc_12 := actual_Dpc_12;
    DeferredContext_7 := actual_DeferredContext_7;
    call {:si_unique_call 2920} Tmp_1276 := __HAVOC_malloc(84);
    call {:si_unique_call 2921} Tmp_1277 := __HAVOC_malloc(68);
    extension_20 := DeferredContext_7;
    Tmp_1276 := strConst__li2bpl236;
    call {:si_unique_call 2922} vslice_dummy_var_748 := CyzDbgPrintEx(2, Tmp_1276);
    call {:si_unique_call 2923} Tmp_1275 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    Mem_T.INT4[Tmp_1275] := oldIrql_12;
    call {:si_unique_call 2924} IoAcquireCancelSpinLock(Tmp_1275);
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    oldIrql_12 := Mem_T.INT4[Tmp_1275];
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    call {:si_unique_call 2925} CyzTryToCompleteCurrent#1(extension_20, li2bplFunctionConstant457, oldIrql_12, 258, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_20), ReadQueue__CYZ_DEVICE_EXTENSION(extension_20), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_20), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_20), li2bplFunctionConstant381, li2bplFunctionConstant144, 4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2926} CyzDpcEpilogue(extension_20, Dpc_12);
    Tmp_1277 := strConst__li2bpl235;
    call {:si_unique_call 2927} vslice_dummy_var_749 := CyzDbgPrintEx(2, Tmp_1277);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzReadTimeout"} CyzReadTimeout#1(actual_Dpc_12: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTimeoutXoff"} CyzTimeoutXoff#0(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int)
{
  var {:pointer} Tmp_805: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} Extension_40: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Dpc_2: int;
  var {:pointer} DeferredContext_1: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_752: int;

  anon0:
    call {:si_unique_call 2928} vslice_dummy_var_750 := __HAVOC_malloc(4);
    Dpc_2 := actual_Dpc_2;
    DeferredContext_1 := actual_DeferredContext_1;
    call {:si_unique_call 2929} Tmp_805 := __HAVOC_malloc(84);
    call {:si_unique_call 2930} Tmp_808 := __HAVOC_malloc(68);
    Extension_40 := DeferredContext_1;
    Tmp_805 := strConst__li2bpl191;
    call {:si_unique_call 2931} vslice_dummy_var_751 := CyzDbgPrintEx(2, Tmp_805);
    call {:si_unique_call 2932} Tmp_806 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    Mem_T.INT4[Tmp_806] := OldIrql_7;
    call {:si_unique_call 2933} IoAcquireCancelSpinLock(Tmp_806);
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    OldIrql_7 := Mem_T.INT4[Tmp_806];
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2934} CyzTryToCompleteCurrent#0(Extension_40, li2bplFunctionConstant195, OldIrql_7, -1073741812, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_40), 0, 0, 0, 0, 0, 4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2935} CyzDpcEpilogue(Extension_40, Dpc_2);
    Tmp_808 := strConst__li2bpl190;
    call {:si_unique_call 2936} vslice_dummy_var_752 := CyzDbgPrintEx(2, Tmp_808);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzTimeoutXoff"} CyzTimeoutXoff#0(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyzTimeoutXoff"} CyzTimeoutXoff#1(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int)
{
  var {:pointer} Tmp_805: int;
  var {:pointer} Tmp_806: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} Extension_40: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Dpc_2: int;
  var {:pointer} DeferredContext_1: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;

  anon0:
    call {:si_unique_call 2937} vslice_dummy_var_753 := __HAVOC_malloc(4);
    Dpc_2 := actual_Dpc_2;
    DeferredContext_1 := actual_DeferredContext_1;
    call {:si_unique_call 2938} Tmp_805 := __HAVOC_malloc(84);
    call {:si_unique_call 2939} Tmp_808 := __HAVOC_malloc(68);
    Extension_40 := DeferredContext_1;
    Tmp_805 := strConst__li2bpl191;
    call {:si_unique_call 2940} vslice_dummy_var_754 := CyzDbgPrintEx(2, Tmp_805);
    call {:si_unique_call 2941} Tmp_806 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    Mem_T.INT4[Tmp_806] := OldIrql_7;
    call {:si_unique_call 2942} IoAcquireCancelSpinLock(Tmp_806);
    assume {:nonnull} Tmp_806 != 0;
    assume Tmp_806 > 0;
    OldIrql_7 := Mem_T.INT4[Tmp_806];
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2943} CyzTryToCompleteCurrent#1(Extension_40, li2bplFunctionConstant195, OldIrql_7, -1073741812, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_40), 0, 0, 0, 0, 0, 4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2944} CyzDpcEpilogue(Extension_40, Dpc_2);
    Tmp_808 := strConst__li2bpl190;
    call {:si_unique_call 2945} vslice_dummy_var_755 := CyzDbgPrintEx(2, Tmp_808);
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyzTimeoutXoff"} CyzTimeoutXoff#1(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2: int, in_nextQuery: int)
{

  entry:
    goto L35, exit;

  exit:
    return;

  L35:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    goto anon37_Then;

  anon37_Then:
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 2946} {:si_old_unique_call 1} CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4: int, in_nextQuery: int)
{

  entry:
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    goto anon40_Then;

  anon40_Then:
    goto anon40_Then_dummy;

  anon40_Then_dummy:
    call {:si_unique_call 2947} {:si_old_unique_call 1} CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L81(in_interval100ms: int, in_Tmp_113: int, in_sdv_103: int, in_sdv_104: int, in_difference: int, in_s_p_e_c_i_a_l_4: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_113: int, out_sdv_103: int, out_sdv_104: int, out_s_p_e_c_i_a_l_4: int)
{

  entry:
    out_Tmp_113, out_sdv_103, out_sdv_104, out_s_p_e_c_i_a_l_4 := in_Tmp_113, in_sdv_103, in_sdv_104, in_s_p_e_c_i_a_l_4;
    goto L81, exit;

  exit:
    return;

  L81:
    call {:si_unique_call 2948} out_sdv_103 := corral_nondet();
    goto anon33_Else;

  anon33_Else:
    assume {:partition} BAND(out_sdv_103, 255) != 0;
    out_Tmp_113 := KeTickCount;
    assume {:nonnull} out_Tmp_113 != 0;
    assume out_Tmp_113 > 0;
    havoc out_s_p_e_c_i_a_l_4;
    goto L88;

  L88:
    call {:si_unique_call 2950} CyzIssueCmd_loop_L88(out_s_p_e_c_i_a_l_4, in_nextQuery);
    goto L88_last;

  L88_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2949} out_sdv_104 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_interval100ms != 0;
    assume in_interval100ms > 0;
    goto anon34_Then;

  anon34_Then:
    goto anon34_Then_dummy;

  anon34_Then_dummy:
    call {:si_unique_call 2951} {:si_old_unique_call 1} out_Tmp_113, out_sdv_103, out_sdv_104, out_s_p_e_c_i_a_l_4 := CyzIssueCmd_loop_L81(in_interval100ms, out_Tmp_113, out_sdv_103, out_sdv_104, in_difference, out_s_p_e_c_i_a_l_4, in_startOfSpin, in_nextQuery);
    return;

  anon40_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L81(in_interval100ms: int, in_Tmp_113: int, in_sdv_103: int, in_sdv_104: int, in_difference: int, in_s_p_e_c_i_a_l_4: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_113: int, out_sdv_103: int, out_sdv_104: int, out_s_p_e_c_i_a_l_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3: int, in_startOfSpin: int)
{

  entry:
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon39_Then;

  anon39_Then:
    goto anon39_Then_dummy;

  anon39_Then_dummy:
    call {:si_unique_call 2952} {:si_old_unique_call 1} CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L27(in_interval100ms: int, in_sdv_101: int, in_Tmp_117: int, in_sdv_102: int, in_s_p_e_c_i_a_l_2: int, in_difference: int, in_startOfSpin: int, in_nextQuery: int) returns (out_sdv_101: int, out_Tmp_117: int, out_sdv_102: int, out_s_p_e_c_i_a_l_2: int)
{

  entry:
    out_sdv_101, out_Tmp_117, out_sdv_102, out_s_p_e_c_i_a_l_2 := in_sdv_101, in_Tmp_117, in_sdv_102, in_s_p_e_c_i_a_l_2;
    goto L27, exit;

  exit:
    return;

  L27:
    call {:si_unique_call 2953} out_sdv_101 := corral_nondet();
    goto anon29_Else;

  anon29_Else:
    assume {:partition} BAND(out_sdv_101, 255) != 0;
    out_Tmp_117 := KeTickCount;
    assume {:nonnull} out_Tmp_117 != 0;
    assume out_Tmp_117 > 0;
    havoc out_s_p_e_c_i_a_l_2;
    goto L35;

  L35:
    call {:si_unique_call 2955} CyzIssueCmd_loop_L35(out_s_p_e_c_i_a_l_2, in_nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2954} out_sdv_102 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_interval100ms != 0;
    assume in_interval100ms > 0;
    goto anon30_Then;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2956} {:si_old_unique_call 1} out_sdv_101, out_Tmp_117, out_sdv_102, out_s_p_e_c_i_a_l_2 := CyzIssueCmd_loop_L27(in_interval100ms, out_sdv_101, out_Tmp_117, out_sdv_102, out_s_p_e_c_i_a_l_2, in_difference, in_startOfSpin, in_nextQuery);
    return;

  anon37_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L27(in_interval100ms: int, in_sdv_101: int, in_Tmp_117: int, in_sdv_102: int, in_s_p_e_c_i_a_l_2: int, in_difference: int, in_startOfSpin: int, in_nextQuery: int) returns (out_sdv_101: int, out_Tmp_117: int, out_sdv_102: int, out_s_p_e_c_i_a_l_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1: int, in_startOfSpin: int)
{

  entry:
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon36_Then;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    call {:si_unique_call 2957} {:si_old_unique_call 1} CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzCleanLists_loop_L15(in_i: int, in_Tmp_150: int, in_pDevExt: int, in_Tmp_153: int, in_Tmp_154: int, in_pDispatch_1: int) returns (out_i: int, out_Tmp_150: int, out_Tmp_153: int, out_Tmp_154: int)
{

  entry:
    out_i, out_Tmp_150, out_Tmp_153, out_Tmp_154 := in_i, in_Tmp_150, in_Tmp_153, in_Tmp_154;
    goto L15, exit;

  exit:
    return;

  L15:
    assume {:nonnull} in_pDispatch_1 != 0;
    assume in_pDispatch_1 > 0;
    goto anon14_Else;

  anon14_Else:
    assume {:nonnull} in_pDevExt != 0;
    assume in_pDevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    out_Tmp_150 := out_i;
    assume {:nonnull} in_pDevExt != 0;
    assume in_pDevExt > 0;
    havoc out_Tmp_153;
    assume {:nonnull} out_Tmp_153 != 0;
    assume out_Tmp_153 > 0;
    havoc out_Tmp_154;
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    goto anon18_Else;

  anon18_Else:
    goto L18;

  L18:
    out_i := out_i + 1;
    goto L18_dummy;

  L18_dummy:
    havoc out_i;
    return;

  anon16_Then:
    goto L18;
}



procedure {:LoopProcedure} CyzCleanLists_loop_L15(in_i: int, in_Tmp_150: int, in_pDevExt: int, in_Tmp_153: int, in_Tmp_154: int, in_pDispatch_1: int) returns (out_i: int, out_Tmp_150: int, out_Tmp_153: int, out_Tmp_154: int);
  free ensures {:va_keep} out_Tmp_150 == in_i || out_Tmp_150 == in_Tmp_150;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzFindInitController_loop_L82(in_sdv_116: int, in_pCurDevObj: int, in_sdv_120: int, in_Tmp_182: int, in_pExtension: int, in_oldIrql: int, in_PConfig: int) returns (out_sdv_116: int, out_pCurDevObj: int, out_sdv_120: int, out_Tmp_182: int, out_pExtension: int, out_oldIrql: int)
{
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;

  entry:
    out_sdv_116, out_pCurDevObj, out_sdv_120, out_Tmp_182, out_pExtension, out_oldIrql := in_sdv_116, in_pCurDevObj, in_sdv_120, in_Tmp_182, in_pExtension, in_oldIrql;
    goto L82, exit;

  exit:
    return;

  L82:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_539;
    havoc vslice_dummy_var_540;
    havoc vslice_dummy_var_541;
    havoc vslice_dummy_var_542;
    call {:si_unique_call 2962} out_sdv_116 := CyzMemCompare(vslice_dummy_var_539, vslice_dummy_var_540, vslice_dummy_var_541, vslice_dummy_var_542);
    goto anon44_Then;

  anon44_Then:
    assume {:partition} out_sdv_116 != 0;
    goto L83;

  L83:
    call {:si_unique_call 2960} out_Tmp_182 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_182 != 0;
    assume out_Tmp_182 > 0;
    Mem_T.INT4[out_Tmp_182] := out_oldIrql;
    call {:si_unique_call 2961} sdv_KeAcquireSpinLock(0, out_Tmp_182);
    assume {:nonnull} out_Tmp_182 != 0;
    assume out_Tmp_182 > 0;
    out_oldIrql := Mem_T.INT4[out_Tmp_182];
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 2959} out_sdv_120 := sdv_containing_record(out_pCurDevObj, 4);
    out_pExtension := out_sdv_120;
    goto L119;

  L119:
    call {:si_unique_call 2958} sdv_KeReleaseSpinLock(0, out_oldIrql);
    goto anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto anon46_Else;

  anon46_Else:
    goto anon47_Else;

  anon47_Else:
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    call {:si_unique_call 2963} {:si_old_unique_call 1} out_sdv_116, out_pCurDevObj, out_sdv_120, out_Tmp_182, out_pExtension, out_oldIrql := CyzFindInitController_loop_L82(out_sdv_116, out_pCurDevObj, out_sdv_120, out_Tmp_182, out_pExtension, out_oldIrql, in_PConfig);
    return;

  anon50_Then:
    goto L119;

  anon43_Then:
    goto L83;

  anon42_Then:
    goto L83;

  anon41_Then:
    goto L83;
}



procedure {:LoopProcedure} CyzFindInitController_loop_L82(in_sdv_116: int, in_pCurDevObj: int, in_sdv_120: int, in_Tmp_182: int, in_pExtension: int, in_oldIrql: int, in_PConfig: int) returns (out_sdv_116: int, out_pCurDevObj: int, out_sdv_120: int, out_Tmp_182: int, out_pExtension: int, out_oldIrql: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_116 == 0 || out_sdv_116 == 2 || out_sdv_116 == 1 || out_sdv_116 == in_sdv_116;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTryToDisableTimer_loop_L14(in_channel: int, in_Tmp_359: int, in_Tmp_360: int, in_pDispatch_6: int) returns (out_channel: int, out_Tmp_359: int, out_Tmp_360: int)
{

  entry:
    out_channel, out_Tmp_359, out_Tmp_360 := in_channel, in_Tmp_359, in_Tmp_360;
    goto L14, exit;

  exit:
    return;

  L14:
    assume {:nonnull} in_pDispatch_6 != 0;
    assume in_pDispatch_6 > 0;
    goto anon11_Else;

  anon11_Else:
    out_Tmp_359 := out_channel;
    assume {:nonnull} in_pDispatch_6 != 0;
    assume in_pDispatch_6 > 0;
    havoc out_Tmp_360;
    assume {:nonnull} out_Tmp_360 != 0;
    assume out_Tmp_360 > 0;
    goto anon14_Else;

  anon14_Else:
    out_channel := out_channel + 1;
    goto anon14_Else_dummy;

  anon14_Else_dummy:
    havoc out_channel;
    return;
}



procedure {:LoopProcedure} CyzTryToDisableTimer_loop_L14(in_channel: int, in_Tmp_359: int, in_Tmp_360: int, in_pDispatch_6: int) returns (out_channel: int, out_Tmp_359: int, out_Tmp_360: int);
  free ensures {:va_keep} out_Tmp_359 == in_channel || out_Tmp_359 == in_Tmp_359;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzClose_loop_L167(in_extension_5: int, in_vslice_dummy_var_189: int) returns (out_vslice_dummy_var_189: int)
{

  entry:
    out_vslice_dummy_var_189 := in_vslice_dummy_var_189;
    goto L167, exit;

  exit:
    return;

  L167:
    call {:si_unique_call 2964} out_vslice_dummy_var_189 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    goto anon63_Then;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    call {:si_unique_call 2965} {:si_old_unique_call 1} out_vslice_dummy_var_189 := CyzClose_loop_L167(in_extension_5, out_vslice_dummy_var_189);
    return;
}



procedure {:LoopProcedure} CyzClose_loop_L167(in_extension_5: int, in_vslice_dummy_var_189: int) returns (out_vslice_dummy_var_189: int);
  free ensures {:va_keep} out_vslice_dummy_var_189 == 0 || out_vslice_dummy_var_189 == -1073741823 || out_vslice_dummy_var_189 == in_vslice_dummy_var_189;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzClose_loop_L127(in_flushCount: int, in_S_9: int, in_txempty: int, in_pollIrql_5: int, in_Tmp_371: int, in_vslice_dummy_var_185: int, in_vslice_dummy_var_186: int) returns (out_flushCount: int, out_pollIrql_5: int, out_Tmp_371: int, out_vslice_dummy_var_185: int, out_vslice_dummy_var_186: int)
{

  entry:
    out_flushCount, out_pollIrql_5, out_Tmp_371, out_vslice_dummy_var_185, out_vslice_dummy_var_186 := in_flushCount, in_pollIrql_5, in_Tmp_371, in_vslice_dummy_var_185, in_vslice_dummy_var_186;
    goto L127, exit;

  exit:
    return;

  L127:
    goto anon59_Else;

  anon59_Else:
    assume {:partition} out_flushCount != 0;
    call {:si_unique_call 2967} out_Tmp_371 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_371 != 0;
    assume out_Tmp_371 > 0;
    Mem_T.INT4[out_Tmp_371] := out_pollIrql_5;
    call {:si_unique_call 2968} sdv_KeAcquireSpinLock(0, out_Tmp_371);
    assume {:nonnull} out_Tmp_371 != 0;
    assume out_Tmp_371 > 0;
    out_pollIrql_5 := Mem_T.INT4[out_Tmp_371];
    call {:si_unique_call 2969} out_vslice_dummy_var_185 := CyzCheckIfTxEmpty(in_S_9);
    call {:si_unique_call 2970} sdv_KeReleaseSpinLock(0, out_pollIrql_5);
    goto anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_txempty != 0;
    assume in_txempty > 0;
    goto anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.INT4[in_txempty] == 0;
    call {:si_unique_call 2966} out_vslice_dummy_var_186 := KeDelayExecutionThread(0, 0, 0);
    out_flushCount := out_flushCount - 1;
    goto anon60_Else_dummy;

  anon60_Else_dummy:
    havoc out_flushCount;
    return;
}



procedure {:LoopProcedure} CyzClose_loop_L127(in_flushCount: int, in_S_9: int, in_txempty: int, in_pollIrql_5: int, in_Tmp_371: int, in_vslice_dummy_var_185: int, in_vslice_dummy_var_186: int) returns (out_flushCount: int, out_pollIrql_5: int, out_Tmp_371: int, out_vslice_dummy_var_185: int, out_vslice_dummy_var_186: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} out_vslice_dummy_var_185 == 0 || out_vslice_dummy_var_185 == in_vslice_dummy_var_185;
  free ensures {:va_keep} out_vslice_dummy_var_186 == 0 || out_vslice_dummy_var_186 == -1073741823 || out_vslice_dummy_var_186 == in_vslice_dummy_var_186;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetPortInfo_loop_L53(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon46_Else;

  anon46_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L62;

  L62:
    out_i_1 := out_i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    call {:si_unique_call 2971} {:si_old_unique_call 1} out_i_1 := CyzGetPortInfo_loop_L53(out_i_1, in_count, in_pPartialResourceDesc, in_PConfig_1);
    return;

  anon47_Then:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon48_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;
}



procedure {:LoopProcedure} CyzGetPortInfo_loop_L53(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetPortInfo_loop_L73(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L73, exit;

  exit:
    return;

  L73:
    goto anon49_Else;

  anon49_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L81;

  L81:
    out_i_1 := out_i_1 + 1;
    goto L81_dummy;

  L81_dummy:
    call {:si_unique_call 2972} {:si_old_unique_call 1} out_i_1 := CyzGetPortInfo_loop_L73(out_i_1, in_count, in_pPartialTrResourceDesc, in_PConfig_1);
    return;

  anon50_Then:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L81;

  anon51_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L81;
}



procedure {:LoopProcedure} CyzGetPortInfo_loop_L73(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPnpDispatch_loop_L179(in_allocLen: int, in_sdv_465: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int)
{

  entry:
    out_allocLen, out_curStrLen := in_allocLen, in_curStrLen;
    goto L179, exit;

  exit:
    return;

  L179:
    out_curStrLen := in_sdv_465;
    goto anon267_Else;

  anon267_Else:
    assume {:partition} out_curStrLen != 0;
    out_allocLen := out_allocLen + out_curStrLen * 2 + 2;
    goto anon267_Else_dummy;

  anon267_Else_dummy:
    havoc out_allocLen;
    return;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L179(in_allocLen: int, in_sdv_465: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int);
  free ensures {:va_keep} out_curStrLen == in_sdv_465 || out_curStrLen == in_curStrLen;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_309: int, in_vslice_dummy_var_310: int, in_vslice_dummy_var_311: int, in_vslice_dummy_var_312: int) returns (out_gotMemory: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_309: int, out_vslice_dummy_var_310: int, out_vslice_dummy_var_311: int, out_vslice_dummy_var_312: int)
{

  entry:
    out_gotMemory, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312 := in_gotMemory, in_Tmp_481, in_Tmp_486, in_Tmp_488, in_pResDesc, in_Tmp_512, in_Tmp_515, in_j, in_Tmp_527, in_gotRuntime, in_vslice_dummy_var_309, in_vslice_dummy_var_310, in_vslice_dummy_var_311, in_vslice_dummy_var_312;
    goto L353, exit;

  exit:
    return;

  L353:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon197_Else;

  anon197_Else:
    out_Tmp_486 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_527;
    out_pResDesc := out_Tmp_527 + out_Tmp_486 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto L370;

  L370:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon200_Else;

  anon200_Else:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 2977} {:si_old_unique_call 1} out_gotMemory, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312 := CyzPnpDispatch_loop_L353(out_gotMemory, in_pResList, out_Tmp_481, out_Tmp_486, out_Tmp_488, in_pLowerDevObj_2, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312);
    return;

  anon199_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon232_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_512 := strConst__li2bpl143;
    call {:si_unique_call 2973} out_vslice_dummy_var_311 := CyzDbgPrintEx(12, out_Tmp_512);
    goto L370;

  anon198_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_515 := strConst__li2bpl144;
    call {:si_unique_call 2974} out_vslice_dummy_var_312 := CyzDbgPrintEx(12, out_Tmp_515);
    goto L370;

  anon233_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_481 := strConst__li2bpl142;
    call {:si_unique_call 2975} out_vslice_dummy_var_310 := CyzDbgPrintEx(12, out_Tmp_481);
    goto L370;

  anon263_Then:
    out_Tmp_488 := strConst__li2bpl123;
    call {:si_unique_call 2976} out_vslice_dummy_var_309 := CyzDbgPrintEx(12, out_Tmp_488);
    goto L370;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_309: int, in_vslice_dummy_var_310: int, in_vslice_dummy_var_311: int, in_vslice_dummy_var_312: int) returns (out_gotMemory: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_309: int, out_vslice_dummy_var_310: int, out_vslice_dummy_var_311: int, out_vslice_dummy_var_312: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_309 == 0 || out_vslice_dummy_var_309 == in_vslice_dummy_var_309;
  free ensures {:va_keep} out_vslice_dummy_var_310 == 0 || out_vslice_dummy_var_310 == in_vslice_dummy_var_310;
  free ensures {:va_keep} out_vslice_dummy_var_311 == 0 || out_vslice_dummy_var_311 == in_vslice_dummy_var_311;
  free ensures {:va_keep} out_vslice_dummy_var_312 == 0 || out_vslice_dummy_var_312 == in_vslice_dummy_var_312;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_Tmp_479: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_308: int, in_vslice_dummy_var_309: int, in_vslice_dummy_var_310: int, in_vslice_dummy_var_311: int, in_vslice_dummy_var_312: int) returns (out_gotMemory: int, out_Tmp_479: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_listNum: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_308: int, out_vslice_dummy_var_309: int, out_vslice_dummy_var_310: int, out_vslice_dummy_var_311: int, out_vslice_dummy_var_312: int)
{

  entry:
    out_gotMemory, out_Tmp_479, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_listNum, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_308, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312 := in_gotMemory, in_Tmp_479, in_Tmp_481, in_Tmp_486, in_Tmp_488, in_pResDesc, in_listNum, in_Tmp_512, in_Tmp_515, in_j, in_Tmp_527, in_gotRuntime, in_vslice_dummy_var_308, in_vslice_dummy_var_309, in_vslice_dummy_var_310, in_vslice_dummy_var_311, in_vslice_dummy_var_312;
    goto L344, exit;

  exit:
    return;

  L344:
    assume {:nonnull} in_pReqList != 0;
    assume in_pReqList > 0;
    goto anon196_Else;

  anon196_Else:
    out_gotRuntime := 0;
    out_gotMemory := 0;
    out_Tmp_479 := strConst__li2bpl141;
    call {:si_unique_call 2979} out_vslice_dummy_var_308 := CyzDbgPrintEx(12, out_Tmp_479);
    out_j := 0;
    goto L353;

  L353:
    call {:si_unique_call 2978} out_gotMemory, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312 := CyzPnpDispatch_loop_L353(out_gotMemory, in_pResList, out_Tmp_481, out_Tmp_486, out_Tmp_488, in_pLowerDevObj_2, out_pResDesc, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312);
    goto L353_last;

  L353_last:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    out_Tmp_486 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_527;
    out_pResDesc := out_Tmp_527 + out_Tmp_486 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto L370;

  L370:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    assume false;
    return;

  anon200_Then:
    assume {:partition} out_gotMemory != 0;
    goto L354;

  L354:
    out_listNum := out_listNum + 1;
    goto L354_dummy;

  L354_dummy:
    call {:si_unique_call 2984} {:si_old_unique_call 1} out_gotMemory, out_Tmp_479, out_Tmp_481, out_Tmp_486, out_Tmp_488, out_pResDesc, out_listNum, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_308, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312 := CyzPnpDispatch_loop_L344(out_gotMemory, in_pResList, out_Tmp_479, out_Tmp_481, out_Tmp_486, out_Tmp_488, in_pLowerDevObj_2, out_pResDesc, out_listNum, in_pReqList, out_Tmp_512, out_Tmp_515, out_j, out_Tmp_527, out_gotRuntime, out_vslice_dummy_var_308, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312);
    return;

  anon199_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon232_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_512 := strConst__li2bpl143;
    call {:si_unique_call 2980} out_vslice_dummy_var_311 := CyzDbgPrintEx(12, out_Tmp_512);
    goto L370;

  anon198_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_515 := strConst__li2bpl144;
    call {:si_unique_call 2981} out_vslice_dummy_var_312 := CyzDbgPrintEx(12, out_Tmp_515);
    goto L370;

  anon233_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_481 := strConst__li2bpl142;
    call {:si_unique_call 2982} out_vslice_dummy_var_310 := CyzDbgPrintEx(12, out_Tmp_481);
    goto L370;

  anon263_Then:
    out_Tmp_488 := strConst__li2bpl123;
    call {:si_unique_call 2983} out_vslice_dummy_var_309 := CyzDbgPrintEx(12, out_Tmp_488);
    goto L370;

  anon197_Then:
    goto L354;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_Tmp_479: int, in_Tmp_481: int, in_Tmp_486: int, in_Tmp_488: int, in_pLowerDevObj_2: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_512: int, in_Tmp_515: int, in_j: int, in_Tmp_527: int, in_gotRuntime: int, in_vslice_dummy_var_308: int, in_vslice_dummy_var_309: int, in_vslice_dummy_var_310: int, in_vslice_dummy_var_311: int, in_vslice_dummy_var_312: int) returns (out_gotMemory: int, out_Tmp_479: int, out_Tmp_481: int, out_Tmp_486: int, out_Tmp_488: int, out_pResDesc: int, out_listNum: int, out_Tmp_512: int, out_Tmp_515: int, out_j: int, out_Tmp_527: int, out_gotRuntime: int, out_vslice_dummy_var_308: int, out_vslice_dummy_var_309: int, out_vslice_dummy_var_310: int, out_vslice_dummy_var_311: int, out_vslice_dummy_var_312: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == 0 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == 0 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_308 == 0 || out_vslice_dummy_var_308 == in_vslice_dummy_var_308;
  free ensures {:va_keep} out_vslice_dummy_var_309 == 0 || out_vslice_dummy_var_309 == in_vslice_dummy_var_309;
  free ensures {:va_keep} out_vslice_dummy_var_310 == 0 || out_vslice_dummy_var_310 == in_vslice_dummy_var_310;
  free ensures {:va_keep} out_vslice_dummy_var_311 == 0 || out_vslice_dummy_var_311 == in_vslice_dummy_var_311;
  free ensures {:va_keep} out_vslice_dummy_var_312 == 0 || out_vslice_dummy_var_312 == in_vslice_dummy_var_312;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 5} CyzPnpDispatch_loop_L462(in_Tmp_468: int, in_pDevExt_12: int, in_cap: int, in_Tmp_504: int, in_Tmp_505: int, in_pDevCaps: int, in_Tmp_543: int) returns (out_Tmp_468: int, out_cap: int, out_Tmp_504: int, out_Tmp_505: int, out_Tmp_543: int)
{

  entry:
    out_Tmp_468, out_cap, out_Tmp_504, out_Tmp_505, out_Tmp_543 := in_Tmp_468, in_cap, in_Tmp_504, in_Tmp_505, in_Tmp_543;
    goto L462, exit;

  exit:
    return;

  L462:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon202_Else;

  anon202_Else:
    assume {:partition} 7 > out_cap;
    out_Tmp_543 := out_cap;
    assume {:nonnull} in_pDevExt_12 != 0;
    assume in_pDevExt_12 > 0;
    havoc out_Tmp_505;
    out_Tmp_468 := out_cap;
    assume {:nonnull} in_pDevCaps != 0;
    assume in_pDevCaps > 0;
    havoc out_Tmp_504;
    assume {:nonnull} out_Tmp_504 != 0;
    assume out_Tmp_504 > 0;
    assume {:nonnull} out_Tmp_505 != 0;
    assume out_Tmp_505 > 0;
    Mem_T.INT4[out_Tmp_505 + out_Tmp_543 * 4] := Mem_T.INT4[out_Tmp_504 + out_Tmp_468 * 4];
    out_cap := out_cap + 1;
    goto anon202_Else_dummy;

  anon202_Else_dummy:
    call {:si_unique_call 2985} {:si_old_unique_call 1} out_Tmp_468, out_cap, out_Tmp_504, out_Tmp_505, out_Tmp_543 := CyzPnpDispatch_loop_L462(out_Tmp_468, in_pDevExt_12, out_cap, out_Tmp_504, out_Tmp_505, in_pDevCaps, out_Tmp_543);
    return;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L462(in_Tmp_468: int, in_pDevExt_12: int, in_cap: int, in_Tmp_504: int, in_Tmp_505: int, in_pDevCaps: int, in_Tmp_543: int) returns (out_Tmp_468: int, out_cap: int, out_Tmp_504: int, out_Tmp_505: int, out_Tmp_543: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartPurge_loop_L5(in_Tmp_718: int, in_Tmp_719: int, in_Mask_2: int, in_Tmp_720: int, in_OldIrql_5: int, in_NewIrp_2: int, in_Tmp_721: int, in_pollIrql_7: int, in_Tmp_722: int, in_Extension_36: int, in_vslice_dummy_var_421: int) returns (out_Tmp_718: int, out_Tmp_719: int, out_Mask_2: int, out_Tmp_720: int, out_OldIrql_5: int, out_Tmp_721: int, out_pollIrql_7: int, out_Tmp_722: int, out_vslice_dummy_var_421: int)
{
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;

  entry:
    out_Tmp_718, out_Tmp_719, out_Mask_2, out_Tmp_720, out_OldIrql_5, out_Tmp_721, out_pollIrql_7, out_Tmp_722, out_vslice_dummy_var_421 := in_Tmp_718, in_Tmp_719, in_Mask_2, in_Tmp_720, in_OldIrql_5, in_Tmp_721, in_pollIrql_7, in_Tmp_722, in_vslice_dummy_var_421;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_722;
    assume {:nonnull} out_Tmp_722 != 0;
    assume out_Tmp_722 > 0;
    havoc out_Tmp_721;
    assume {:nonnull} out_Tmp_721 != 0;
    assume out_Tmp_721 > 0;
    out_Mask_2 := Mem_T.INT4[out_Tmp_721];
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(out_Mask_2, 1) != 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_544;
    call {:si_unique_call 2988} CyzKillAllReadsOrWrites#1(vslice_dummy_var_544, WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_543;
    call {:si_unique_call 2987} CyzKillAllReadsOrWrites#1(vslice_dummy_var_543, WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentXoffIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  L7:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(out_Mask_2, 2) != 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_545;
    call {:si_unique_call 2989} CyzKillAllReadsOrWrites#1(vslice_dummy_var_545, ReadQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentReadIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  L14:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(out_Mask_2, 8) != 0;
    call {:si_unique_call 2992} out_Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    Mem_T.INT4[out_Tmp_720] := out_OldIrql_5;
    call {:si_unique_call 2993} sdv_KeAcquireSpinLock(0, out_Tmp_720);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    out_OldIrql_5 := Mem_T.INT4[out_Tmp_720];
    call {:si_unique_call 2994} out_Tmp_720 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    Mem_T.INT4[out_Tmp_720] := out_pollIrql_7;
    call {:si_unique_call 2995} sdv_KeAcquireSpinLock(0, out_Tmp_720);
    assume {:nonnull} out_Tmp_720 != 0;
    assume out_Tmp_720 > 0;
    out_pollIrql_7 := Mem_T.INT4[out_Tmp_720];
    call {:si_unique_call 2996} out_vslice_dummy_var_421 := CyzPurgeInterruptBuff(in_Extension_36);
    goto anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2991} sdv_KeReleaseSpinLock(0, out_pollIrql_7);
    goto anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2990} sdv_KeReleaseSpinLock(0, out_OldIrql_5);
    goto anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L18;

  L18:
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_719;
    assume {:nonnull} out_Tmp_719 != 0;
    assume out_Tmp_719 > 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_718;
    assume {:nonnull} out_Tmp_718 != 0;
    assume out_Tmp_718 > 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    call {:si_unique_call 2986} CyzGetNextIrp(CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(in_Extension_36), PurgeQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), in_NewIrp_2, 1, in_Extension_36);
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    goto anon23_Then;

  anon23_Then:
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    call {:si_unique_call 2997} {:si_old_unique_call 1} out_Tmp_718, out_Tmp_719, out_Mask_2, out_Tmp_720, out_OldIrql_5, out_Tmp_721, out_pollIrql_7, out_Tmp_722, out_vslice_dummy_var_421 := CyzStartPurge_loop_L5(out_Tmp_718, out_Tmp_719, out_Mask_2, out_Tmp_720, out_OldIrql_5, in_NewIrp_2, out_Tmp_721, out_pollIrql_7, out_Tmp_722, in_Extension_36, out_vslice_dummy_var_421);
    return;

  anon22_Then:
    assume {:partition} BAND(out_Mask_2, 8) == 0;
    goto L18;

  anon21_Then:
    assume {:partition} BAND(out_Mask_2, 2) == 0;
    goto L14;

  anon24_Then:
    assume {:partition} BAND(out_Mask_2, 1) == 0;
    goto L7;
}



procedure {:LoopProcedure} CyzStartPurge_loop_L5(in_Tmp_718: int, in_Tmp_719: int, in_Mask_2: int, in_Tmp_720: int, in_OldIrql_5: int, in_NewIrp_2: int, in_Tmp_721: int, in_pollIrql_7: int, in_Tmp_722: int, in_Extension_36: int, in_vslice_dummy_var_421: int) returns (out_Tmp_718: int, out_Tmp_719: int, out_Mask_2: int, out_Tmp_720: int, out_OldIrql_5: int, out_Tmp_721: int, out_pollIrql_7: int, out_Tmp_722: int, out_vslice_dummy_var_421: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPurgeInterruptBuff_loop_L20(in_rx_2: int, in_Tmp_726: int, in_rx_3: int, in_rxchar: int, in_Extension_37: int, in_Tmp_729: int) returns (out_rx_2: int, out_Tmp_726: int, out_rxchar: int, out_Tmp_729: int)
{

  entry:
    out_rx_2, out_Tmp_726, out_rxchar, out_Tmp_729 := in_rx_2, in_Tmp_726, in_rxchar, in_Tmp_729;
    goto L20, exit;

  exit:
    return;

  L20:
    goto anon16_Else;

  anon16_Else:
    assume {:partition} out_rx_2 != in_rx_3;
    out_Tmp_729 := out_rx_2;
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    havoc out_Tmp_726;
    call {:si_unique_call 2998} out_rxchar := corral_nondet();
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    out_rx_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon19_Else_dummy;

  anon19_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 2999} {:si_old_unique_call 1} out_rx_2, out_Tmp_726, out_rxchar, out_Tmp_729 := CyzPurgeInterruptBuff_loop_L20(out_rx_2, out_Tmp_726, in_rx_3, out_rxchar, in_Extension_37, out_Tmp_729);
    return;

  anon19_Then:
    goto anon19_Then_dummy;

  anon19_Then_dummy:
    goto L_BAF_0;

  anon18_Then:
    goto anon18_Then_dummy;

  anon18_Then_dummy:
    goto L_BAF_0;

  anon17_Then:
    out_rx_2 := out_rx_2 + 1;
    goto L32;
}



procedure {:LoopProcedure} CyzPurgeInterruptBuff_loop_L20(in_rx_2: int, in_Tmp_726: int, in_rx_3: int, in_rxchar: int, in_Extension_37: int, in_Tmp_729: int) returns (out_rx_2: int, out_Tmp_726: int, out_rxchar: int, out_Tmp_729: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzUnstallIrps_loop_L16(in_Tmp_745: int, in_Tmp_746: int, in_sdv_641: int, in_Tmp_747: int, in_oldIrql_6: int, in_pIrpStack_4: int, in_Tmp_749: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_427: int, in_vslice_dummy_var_428: int, in_vslice_dummy_var_429: int) returns (out_Tmp_745: int, out_Tmp_746: int, out_sdv_641: int, out_Tmp_747: int, out_oldIrql_6: int, out_pIrpStack_4: int, out_Tmp_749: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_427: int, out_vslice_dummy_var_428: int, out_vslice_dummy_var_429: int)
{

  entry:
    out_Tmp_745, out_Tmp_746, out_sdv_641, out_Tmp_747, out_oldIrql_6, out_pIrpStack_4, out_Tmp_749, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_427, out_vslice_dummy_var_428, out_vslice_dummy_var_429 := in_Tmp_745, in_Tmp_746, in_sdv_641, in_Tmp_747, in_oldIrql_6, in_pIrpStack_4, in_Tmp_749, in_pIrp_1, in_pDevObj_2, in_pDrvObj_1, in_pIrpLink, in_vslice_dummy_var_427, in_vslice_dummy_var_428, in_vslice_dummy_var_429;
    goto L16, exit;

  exit:
    return;

  L16:
    goto anon59_Else;

  anon59_Else:
    call {:si_unique_call 3002} out_sdv_641 := sdv_containing_record(out_pIrpLink, 88);
    out_pIrp_1 := out_sdv_641;
    call {:si_unique_call 3003} out_vslice_dummy_var_427 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3004} out_pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(out_pIrp_1);
    assume {:nonnull} out_pIrpStack_4 != 0;
    assume out_pIrpStack_4 > 0;
    havoc out_pDevObj_2;
    assume {:nonnull} out_pDevObj_2 != 0;
    assume out_pDevObj_2 > 0;
    havoc out_pDrvObj_1;
    call {:si_unique_call 3005} out_vslice_dummy_var_428 := sdv_IoSetCancelRoutine(out_pIrp_1, 0);
    call {:si_unique_call 3006} IoReleaseCancelSpinLock(out_oldIrql_6);
    out_Tmp_745 := strConst__li2bpl188;
    call {:si_unique_call 3007} out_vslice_dummy_var_429 := CyzDbgPrintEx(12, out_Tmp_745);
    assume {:nonnull} out_pIrpStack_4 != 0;
    assume out_pIrpStack_4 > 0;
    havoc out_Tmp_749;
    assume {:nonnull} out_pDrvObj_1 != 0;
    assume out_pDrvObj_1 > 0;
    havoc out_Tmp_747;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume out_Tmp_749 != 27;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume out_Tmp_749 != 26;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume out_Tmp_749 != 25;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume out_Tmp_749 != 24;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume out_Tmp_749 != 23;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume out_Tmp_749 != 22;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume out_Tmp_749 != 21;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume out_Tmp_749 != 20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume out_Tmp_749 != 19;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume out_Tmp_749 != 18;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume out_Tmp_749 != 17;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume out_Tmp_749 != 16;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume out_Tmp_749 != 15;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume out_Tmp_749 != 14;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume out_Tmp_749 != 13;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume out_Tmp_749 != 12;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume out_Tmp_749 != 11;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume out_Tmp_749 != 10;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume out_Tmp_749 != 9;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume out_Tmp_749 != 8;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume out_Tmp_749 != 7;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume out_Tmp_749 != 6;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume out_Tmp_749 != 5;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume out_Tmp_749 != 4;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume out_Tmp_749 != 3;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume out_Tmp_749 != 2;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume out_Tmp_749 != 1;
    goto anon87_Then;

  anon87_Then:
    assume out_Tmp_749 == 0;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747] == 0;
    goto L45;

  L45:
    call {:si_unique_call 3000} out_Tmp_746 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_746 != 0;
    assume out_Tmp_746 > 0;
    Mem_T.INT4[out_Tmp_746] := out_oldIrql_6;
    call {:si_unique_call 3001} IoAcquireCancelSpinLock(out_Tmp_746);
    assume {:nonnull} out_Tmp_746 != 0;
    assume out_Tmp_746 > 0;
    out_oldIrql_6 := Mem_T.INT4[out_Tmp_746];
    assume {:nonnull} in_PDevExt_8 != 0;
    assume in_PDevExt_8 > 0;
    havoc out_pIrpLink;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 3008} {:si_old_unique_call 1} out_Tmp_745, out_Tmp_746, out_sdv_641, out_Tmp_747, out_oldIrql_6, out_pIrpStack_4, out_Tmp_749, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_427, out_vslice_dummy_var_428, out_vslice_dummy_var_429 := CyzUnstallIrps_loop_L16(out_Tmp_745, out_Tmp_746, out_sdv_641, out_Tmp_747, out_oldIrql_6, out_pIrpStack_4, out_Tmp_749, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, in_PDevExt_8, out_vslice_dummy_var_427, out_vslice_dummy_var_428, out_vslice_dummy_var_429);
    return;

  anon86_Then:
    assume out_Tmp_749 == 1;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 1 * 4] == 0;
    goto L45;

  anon85_Then:
    assume out_Tmp_749 == 2;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 2 * 4] == 0;
    goto L45;

  anon84_Then:
    assume out_Tmp_749 == 3;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 3 * 4] == 0;
    goto L45;

  anon83_Then:
    assume out_Tmp_749 == 4;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 4 * 4] == 0;
    goto L45;

  anon82_Then:
    assume out_Tmp_749 == 5;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 5 * 4] == 0;
    goto L45;

  anon81_Then:
    assume out_Tmp_749 == 6;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 6 * 4] == 0;
    goto L45;

  anon80_Then:
    assume out_Tmp_749 == 7;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 7 * 4] == 0;
    goto L45;

  anon79_Then:
    assume out_Tmp_749 == 8;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 8 * 4] == 0;
    goto L45;

  anon78_Then:
    assume out_Tmp_749 == 9;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 9 * 4] == 0;
    goto L45;

  anon77_Then:
    assume out_Tmp_749 == 10;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 10 * 4] == 0;
    goto L45;

  anon76_Then:
    assume out_Tmp_749 == 11;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 11 * 4] == 0;
    goto L45;

  anon75_Then:
    assume out_Tmp_749 == 12;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 12 * 4] == 0;
    goto L45;

  anon74_Then:
    assume out_Tmp_749 == 13;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 13 * 4] == 0;
    goto L45;

  anon73_Then:
    assume out_Tmp_749 == 14;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 14 * 4] == 0;
    goto L45;

  anon72_Then:
    assume out_Tmp_749 == 15;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 15 * 4] == 0;
    goto L45;

  anon71_Then:
    assume out_Tmp_749 == 16;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 16 * 4] == 0;
    goto L45;

  anon70_Then:
    assume out_Tmp_749 == 17;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 17 * 4] == 0;
    goto L45;

  anon69_Then:
    assume out_Tmp_749 == 18;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 18 * 4] == 0;
    goto L45;

  anon68_Then:
    assume out_Tmp_749 == 19;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 19 * 4] == 0;
    goto L45;

  anon67_Then:
    assume out_Tmp_749 == 20;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 20 * 4] == 0;
    goto L45;

  anon66_Then:
    assume out_Tmp_749 == 21;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 21 * 4] == 0;
    goto L45;

  anon65_Then:
    assume out_Tmp_749 == 22;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 22 * 4] == 0;
    goto L45;

  anon64_Then:
    assume out_Tmp_749 == 23;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 23 * 4] == 0;
    goto L45;

  anon63_Then:
    assume out_Tmp_749 == 24;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 24 * 4] == 0;
    goto L45;

  anon62_Then:
    assume out_Tmp_749 == 25;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 25 * 4] == 0;
    goto L45;

  anon61_Then:
    assume out_Tmp_749 == 26;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 26 * 4] == 0;
    goto L45;

  anon60_Then:
    assume out_Tmp_749 == 27;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    assume Mem_T.INT4[out_Tmp_747 + 27 * 4] == 0;
    goto L45;
}



procedure {:LoopProcedure} CyzUnstallIrps_loop_L16(in_Tmp_745: int, in_Tmp_746: int, in_sdv_641: int, in_Tmp_747: int, in_oldIrql_6: int, in_pIrpStack_4: int, in_Tmp_749: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_427: int, in_vslice_dummy_var_428: int, in_vslice_dummy_var_429: int) returns (out_Tmp_745: int, out_Tmp_746: int, out_sdv_641: int, out_Tmp_747: int, out_oldIrql_6: int, out_pIrpStack_4: int, out_Tmp_749: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_427: int, out_vslice_dummy_var_428: int, out_vslice_dummy_var_429: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_vslice_dummy_var_427 == 1 || out_vslice_dummy_var_427 == 0 || out_vslice_dummy_var_427 == in_vslice_dummy_var_427;
  free ensures {:va_keep} out_vslice_dummy_var_429 == 0 || out_vslice_dummy_var_429 == in_vslice_dummy_var_429;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzKillAllStalled_loop_L10(in_currentLastIrp_1: int, in_Tmp_796: int, in_cancelIrql_1: int, in_pDevExt_15: int, in_sdv_691: int, in_sdv_692: int, in_cancelRoutine_2: int, in_PDevObj_15: int, in_vslice_dummy_var_454: int) returns (out_currentLastIrp_1: int, out_Tmp_796: int, out_cancelIrql_1: int, out_sdv_691: int, out_sdv_692: int, out_cancelRoutine_2: int, out_vslice_dummy_var_454: int)
{
  var vslice_dummy_var_546: int;

  entry:
    out_currentLastIrp_1, out_Tmp_796, out_cancelIrql_1, out_sdv_691, out_sdv_692, out_cancelRoutine_2, out_vslice_dummy_var_454 := in_currentLastIrp_1, in_Tmp_796, in_cancelIrql_1, in_sdv_691, in_sdv_692, in_cancelRoutine_2, in_vslice_dummy_var_454;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 3009} out_sdv_691 := sdv_IsListEmpty(0);
    goto anon25_Else;

  anon25_Else:
    assume {:partition} out_sdv_691 == 0;
    assume {:nonnull} in_pDevExt_15 != 0;
    assume in_pDevExt_15 > 0;
    havoc vslice_dummy_var_546;
    call {:si_unique_call 3014} out_sdv_692 := sdv_containing_record(vslice_dummy_var_546, 88);
    out_currentLastIrp_1 := out_sdv_692;
    call {:si_unique_call 3015} out_vslice_dummy_var_454 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    havoc out_cancelRoutine_2;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp_1)] := out_cancelIrql_1;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant456;
    call {:si_unique_call 3020} CyzCancelCurrentRead#1(in_PDevObj_15, out_currentLastIrp_1);
    goto anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  L32:
    call {:si_unique_call 3010} out_Tmp_796 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_796 != 0;
    assume out_Tmp_796 > 0;
    Mem_T.INT4[out_Tmp_796] := out_cancelIrql_1;
    call {:si_unique_call 3011} IoAcquireCancelSpinLock(out_Tmp_796);
    assume {:nonnull} out_Tmp_796 != 0;
    assume out_Tmp_796 > 0;
    out_cancelIrql_1 := Mem_T.INT4[out_Tmp_796];
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 3021} {:si_old_unique_call 1} out_currentLastIrp_1, out_Tmp_796, out_cancelIrql_1, out_sdv_691, out_sdv_692, out_cancelRoutine_2, out_vslice_dummy_var_454 := CyzKillAllStalled_loop_L10(out_currentLastIrp_1, out_Tmp_796, out_cancelIrql_1, in_pDevExt_15, out_sdv_691, out_sdv_692, out_cancelRoutine_2, in_PDevObj_15, out_vslice_dummy_var_454);
    return;

  anon30_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 3019} CyzCancelCurrentWrite#1(in_PDevObj_15, out_currentLastIrp_1);
    goto anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon29_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant198;
    call {:si_unique_call 3018} CyzCancelCurrentXoff#1(in_PDevObj_15, out_currentLastIrp_1);
    goto anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon28_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant312;
    call {:si_unique_call 3017} CyzCancelImmediate#1(in_PDevObj_15, out_currentLastIrp_1);
    goto anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon27_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 3012} CyzCancelQueued(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon26_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant178;
    call {:si_unique_call 3016} CyzCancelWait#1(in_PDevObj_15, out_currentLastIrp_1);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon31_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 3013} CyzFilterCancelQueued(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;
}



procedure {:LoopProcedure} CyzKillAllStalled_loop_L10(in_currentLastIrp_1: int, in_Tmp_796: int, in_cancelIrql_1: int, in_pDevExt_15: int, in_sdv_691: int, in_sdv_692: int, in_cancelRoutine_2: int, in_PDevObj_15: int, in_vslice_dummy_var_454: int) returns (out_currentLastIrp_1: int, out_Tmp_796: int, out_cancelIrql_1: int, out_sdv_691: int, out_sdv_692: int, out_cancelRoutine_2: int, out_vslice_dummy_var_454: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} out_sdv_691 == 1 || out_sdv_691 == 0 || out_sdv_691 == in_sdv_691;
  free ensures {:va_keep} out_vslice_dummy_var_454 == 1 || out_vslice_dummy_var_454 == 0 || out_vslice_dummy_var_454 == in_vslice_dummy_var_454;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartMask_loop_L12(in_s_p_e_c_i_a_l_43: int, in_FirstStatus_1: int, in_Tmp_898: int, in_SetFirstStatus_1: int, in_Tmp_899: int, in_Tmp_900: int, in_Tmp_901: int, in_Tmp_902: int, in_Tmp_903: int, in_Tmp_904: int, in_Tmp_905: int, in_IrpSp_3: int, in_OldIrql_14: int, in_Tmp_906: int, in_NewIrp_5: int, in_s_p_e_c_i_a_l_44: int, in_Tmp_907: int, in_sdv_783: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_910: int, in_Tmp_911: int, in_Tmp_912: int, in_Tmp_913: int, in_sdv_786: int, in_Tmp_914: int, in_pollIrql_12: int, in_Tmp_915: int, in_Extension_56: int, in_vslice_dummy_var_481: int, in_vslice_dummy_var_482: int, in_vslice_dummy_var_484: int, in_vslice_dummy_var_485: int, in_vslice_dummy_var_486: int, in_vslice_dummy_var_487: int, in_vslice_dummy_var_488: int, in_vslice_dummy_var_489: int, in_vslice_dummy_var_490: int, in_vslice_dummy_var_491: int, in_vslice_dummy_var_492: int, in_vslice_dummy_var_493: int, in_vslice_dummy_var_494: int, in_vslice_dummy_var_495: int, in_vslice_dummy_var_496: int, in_vslice_dummy_var_497: int) returns (out_s_p_e_c_i_a_l_43: int, out_FirstStatus_1: int, out_Tmp_898: int, out_SetFirstStatus_1: int, out_Tmp_899: int, out_Tmp_900: int, out_Tmp_901: int, out_Tmp_902: int, out_Tmp_903: int, out_Tmp_904: int, out_Tmp_905: int, out_IrpSp_3: int, out_OldIrql_14: int, out_Tmp_906: int, out_s_p_e_c_i_a_l_44: int, out_Tmp_907: int, out_sdv_783: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_910: int, out_Tmp_911: int, out_Tmp_912: int, out_Tmp_913: int, out_sdv_786: int, out_Tmp_914: int, out_pollIrql_12: int, out_Tmp_915: int, out_vslice_dummy_var_481: int, out_vslice_dummy_var_482: int, out_vslice_dummy_var_484: int, out_vslice_dummy_var_485: int, out_vslice_dummy_var_486: int, out_vslice_dummy_var_487: int, out_vslice_dummy_var_488: int, out_vslice_dummy_var_489: int, out_vslice_dummy_var_490: int, out_vslice_dummy_var_491: int, out_vslice_dummy_var_492: int, out_vslice_dummy_var_493: int, out_vslice_dummy_var_494: int, out_vslice_dummy_var_495: int, out_vslice_dummy_var_496: int, out_vslice_dummy_var_497: int)
{
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;

  entry:
    out_s_p_e_c_i_a_l_43, out_FirstStatus_1, out_Tmp_898, out_SetFirstStatus_1, out_Tmp_899, out_Tmp_900, out_Tmp_901, out_Tmp_902, out_Tmp_903, out_Tmp_904, out_Tmp_905, out_IrpSp_3, out_OldIrql_14, out_Tmp_906, out_s_p_e_c_i_a_l_44, out_Tmp_907, out_sdv_783, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_912, out_Tmp_913, out_sdv_786, out_Tmp_914, out_pollIrql_12, out_Tmp_915, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486, out_vslice_dummy_var_487, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_491, out_vslice_dummy_var_492, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_495, out_vslice_dummy_var_496, out_vslice_dummy_var_497 := in_s_p_e_c_i_a_l_43, in_FirstStatus_1, in_Tmp_898, in_SetFirstStatus_1, in_Tmp_899, in_Tmp_900, in_Tmp_901, in_Tmp_902, in_Tmp_903, in_Tmp_904, in_Tmp_905, in_IrpSp_3, in_OldIrql_14, in_Tmp_906, in_s_p_e_c_i_a_l_44, in_Tmp_907, in_sdv_783, in_Tmp_908, in_Tmp_909, in_Tmp_910, in_Tmp_911, in_Tmp_912, in_Tmp_913, in_sdv_786, in_Tmp_914, in_pollIrql_12, in_Tmp_915, in_vslice_dummy_var_481, in_vslice_dummy_var_482, in_vslice_dummy_var_484, in_vslice_dummy_var_485, in_vslice_dummy_var_486, in_vslice_dummy_var_487, in_vslice_dummy_var_488, in_vslice_dummy_var_489, in_vslice_dummy_var_490, in_vslice_dummy_var_491, in_vslice_dummy_var_492, in_vslice_dummy_var_493, in_vslice_dummy_var_494, in_vslice_dummy_var_495, in_vslice_dummy_var_496, in_vslice_dummy_var_497;
    goto L12, exit;

  exit:
    return;

  L12:
    out_Tmp_911 := strConst__li2bpl213;
    call {:si_unique_call 3022} out_vslice_dummy_var_484 := CyzDbgPrintEx(7, out_Tmp_911);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_547;
    call {:si_unique_call 3023} out_IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_547);
    assume {:nonnull} out_IrpSp_3 != 0;
    assume out_IrpSp_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    out_Tmp_900 := strConst__li2bpl214;
    call {:si_unique_call 3051} out_vslice_dummy_var_485 := CyzDbgPrintEx(7, out_Tmp_900);
    call {:si_unique_call 3052} out_Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    Mem_T.INT4[out_Tmp_906] := out_pollIrql_12;
    call {:si_unique_call 3053} sdv_KeAcquireSpinLock(0, out_Tmp_906);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    out_pollIrql_12 := Mem_T.INT4[out_Tmp_906];
    call {:si_unique_call 3054} out_vslice_dummy_var_481 := CyzFinishOldWait(in_Extension_56);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3050} sdv_KeReleaseSpinLock(0, out_pollIrql_12);
    goto anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_907;
    assume {:nonnull} out_Tmp_907 != 0;
    assume out_Tmp_907 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L38;

  L38:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 3024} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 1, in_Extension_56);
    out_Tmp_912 := strConst__li2bpl216;
    call {:si_unique_call 3025} out_vslice_dummy_var_486 := CyzDbgPrintEx(7, out_Tmp_912);
    goto L44;

  L44:
    assume {:nonnull} in_NewIrp_5 != 0;
    assume in_NewIrp_5 > 0;
    goto anon29_Then;

  anon29_Then:
    goto anon29_Then_dummy;

  anon29_Then_dummy:
    call {:si_unique_call 3055} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_43, out_FirstStatus_1, out_Tmp_898, out_SetFirstStatus_1, out_Tmp_899, out_Tmp_900, out_Tmp_901, out_Tmp_902, out_Tmp_903, out_Tmp_904, out_Tmp_905, out_IrpSp_3, out_OldIrql_14, out_Tmp_906, out_s_p_e_c_i_a_l_44, out_Tmp_907, out_sdv_783, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_912, out_Tmp_913, out_sdv_786, out_Tmp_914, out_pollIrql_12, out_Tmp_915, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486, out_vslice_dummy_var_487, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_491, out_vslice_dummy_var_492, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_495, out_vslice_dummy_var_496, out_vslice_dummy_var_497 := CyzStartMask_loop_L12(out_s_p_e_c_i_a_l_43, out_FirstStatus_1, out_Tmp_898, out_SetFirstStatus_1, out_Tmp_899, out_Tmp_900, out_Tmp_901, out_Tmp_902, out_Tmp_903, out_Tmp_904, out_Tmp_905, out_IrpSp_3, out_OldIrql_14, out_Tmp_906, in_NewIrp_5, out_s_p_e_c_i_a_l_44, out_Tmp_907, out_sdv_783, out_Tmp_908, out_Tmp_909, out_Tmp_910, out_Tmp_911, out_Tmp_912, out_Tmp_913, out_sdv_786, out_Tmp_914, out_pollIrql_12, out_Tmp_915, in_Extension_56, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486, out_vslice_dummy_var_487, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_491, out_vslice_dummy_var_492, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_495, out_vslice_dummy_var_496, out_vslice_dummy_var_497);
    return;

  anon34_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_898 := strConst__li2bpl215;
    call {:si_unique_call 3049} out_vslice_dummy_var_487 := CyzDbgPrintEx(7, out_Tmp_898);
    out_FirstStatus_1 := 0;
    out_SetFirstStatus_1 := 1;
    goto L38;

  anon27_Then:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 3044} out_Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    Mem_T.INT4[out_Tmp_906] := out_OldIrql_14;
    call {:si_unique_call 3045} IoAcquireCancelSpinLock(out_Tmp_906);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_906];
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_905;
    assume {:nonnull} out_Tmp_905 != 0;
    assume out_Tmp_905 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    out_Tmp_904 := strConst__li2bpl219;
    call {:si_unique_call 3047} out_vslice_dummy_var_491 := CyzDbgPrintEx(7, out_Tmp_904);
    call {:si_unique_call 3048} IoReleaseCancelSpinLock(out_OldIrql_14);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_914;
    assume {:nonnull} out_Tmp_914 != 0;
    assume out_Tmp_914 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L71;

  L71:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 3026} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 1, in_Extension_56);
    out_Tmp_913 := strConst__li2bpl216;
    call {:si_unique_call 3027} out_vslice_dummy_var_492 := CyzDbgPrintEx(7, out_Tmp_913);
    goto L44;

  anon37_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_902 := strConst__li2bpl215;
    call {:si_unique_call 3046} out_vslice_dummy_var_493 := CyzDbgPrintEx(7, out_Tmp_902);
    out_FirstStatus_1 := -1073741536;
    out_SetFirstStatus_1 := 1;
    goto L71;

  anon36_Then:
    out_Tmp_910 := strConst__li2bpl218;
    call {:si_unique_call 3043} out_vslice_dummy_var_494 := CyzDbgPrintEx(7, out_Tmp_910);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L83;

  L83:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_548;
    call {:si_unique_call 3035} out_sdv_783 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_548);
    assume {:nonnull} out_sdv_783 != 0;
    assume out_sdv_783 > 0;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_549;
    call {:si_unique_call 3036} out_vslice_dummy_var_495 := sdv_IoSetCancelRoutine(vslice_dummy_var_549, li2bplFunctionConstant178);
    out_s_p_e_c_i_a_l_44 := 2;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc vslice_dummy_var_550;
    call {:si_unique_call 3037} out_sdv_786 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_550);
    assume {:nonnull} out_sdv_786 != 0;
    assume out_sdv_786 > 0;
    out_s_p_e_c_i_a_l_43 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_786)));
    assume {:nonnull} out_s_p_e_c_i_a_l_43 != 0;
    assume out_s_p_e_c_i_a_l_43 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_43] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_43], out_s_p_e_c_i_a_l_44);
    call {:si_unique_call 3038} out_Tmp_906 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    Mem_T.INT4[out_Tmp_906] := out_pollIrql_12;
    call {:si_unique_call 3039} sdv_KeAcquireSpinLock(0, out_Tmp_906);
    assume {:nonnull} out_Tmp_906 != 0;
    assume out_Tmp_906 > 0;
    out_pollIrql_12 := Mem_T.INT4[out_Tmp_906];
    call {:si_unique_call 3040} out_vslice_dummy_var_482 := CyzGiveWaitToIsr(in_Extension_56);
    goto anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3034} sdv_KeReleaseSpinLock(0, out_pollIrql_12);
    goto anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 3028} CyzGetNextIrpLocked(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 0, in_Extension_56, out_OldIrql_14);
    out_Tmp_903 := strConst__li2bpl216;
    call {:si_unique_call 3029} out_vslice_dummy_var_496 := CyzDbgPrintEx(7, out_Tmp_903);
    goto L44;

  anon31_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_908 := strConst__li2bpl215;
    call {:si_unique_call 3041} out_vslice_dummy_var_497 := CyzDbgPrintEx(7, out_Tmp_908);
    out_FirstStatus_1 := 259;
    out_SetFirstStatus_1 := 1;
    call {:si_unique_call 3042} sdv_IoMarkIrpPending(0);
    goto L83;

  anon30_Then:
    goto L48;

  L48:
    out_Tmp_909 := strConst__li2bpl217;
    call {:si_unique_call 3033} out_vslice_dummy_var_488 := CyzDbgPrintEx(7, out_Tmp_909);
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    havoc out_Tmp_899;
    assume {:nonnull} out_Tmp_899 != 0;
    assume out_Tmp_899 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L125;

  L125:
    assume {:nonnull} in_Extension_56 != 0;
    assume in_Extension_56 > 0;
    call {:si_unique_call 3030} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_56), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_56), in_NewIrp_5, 1, in_Extension_56);
    out_Tmp_915 := strConst__li2bpl216;
    call {:si_unique_call 3031} out_vslice_dummy_var_489 := CyzDbgPrintEx(7, out_Tmp_915);
    goto L44;

  anon35_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_901 := strConst__li2bpl215;
    call {:si_unique_call 3032} out_vslice_dummy_var_490 := CyzDbgPrintEx(7, out_Tmp_901);
    out_FirstStatus_1 := -1073741811;
    out_SetFirstStatus_1 := 1;
    goto L125;

  anon28_Then:
    goto L48;
}



procedure {:LoopProcedure} CyzStartMask_loop_L12(in_s_p_e_c_i_a_l_43: int, in_FirstStatus_1: int, in_Tmp_898: int, in_SetFirstStatus_1: int, in_Tmp_899: int, in_Tmp_900: int, in_Tmp_901: int, in_Tmp_902: int, in_Tmp_903: int, in_Tmp_904: int, in_Tmp_905: int, in_IrpSp_3: int, in_OldIrql_14: int, in_Tmp_906: int, in_NewIrp_5: int, in_s_p_e_c_i_a_l_44: int, in_Tmp_907: int, in_sdv_783: int, in_Tmp_908: int, in_Tmp_909: int, in_Tmp_910: int, in_Tmp_911: int, in_Tmp_912: int, in_Tmp_913: int, in_sdv_786: int, in_Tmp_914: int, in_pollIrql_12: int, in_Tmp_915: int, in_Extension_56: int, in_vslice_dummy_var_481: int, in_vslice_dummy_var_482: int, in_vslice_dummy_var_484: int, in_vslice_dummy_var_485: int, in_vslice_dummy_var_486: int, in_vslice_dummy_var_487: int, in_vslice_dummy_var_488: int, in_vslice_dummy_var_489: int, in_vslice_dummy_var_490: int, in_vslice_dummy_var_491: int, in_vslice_dummy_var_492: int, in_vslice_dummy_var_493: int, in_vslice_dummy_var_494: int, in_vslice_dummy_var_495: int, in_vslice_dummy_var_496: int, in_vslice_dummy_var_497: int) returns (out_s_p_e_c_i_a_l_43: int, out_FirstStatus_1: int, out_Tmp_898: int, out_SetFirstStatus_1: int, out_Tmp_899: int, out_Tmp_900: int, out_Tmp_901: int, out_Tmp_902: int, out_Tmp_903: int, out_Tmp_904: int, out_Tmp_905: int, out_IrpSp_3: int, out_OldIrql_14: int, out_Tmp_906: int, out_s_p_e_c_i_a_l_44: int, out_Tmp_907: int, out_sdv_783: int, out_Tmp_908: int, out_Tmp_909: int, out_Tmp_910: int, out_Tmp_911: int, out_Tmp_912: int, out_Tmp_913: int, out_sdv_786: int, out_Tmp_914: int, out_pollIrql_12: int, out_Tmp_915: int, out_vslice_dummy_var_481: int, out_vslice_dummy_var_482: int, out_vslice_dummy_var_484: int, out_vslice_dummy_var_485: int, out_vslice_dummy_var_486: int, out_vslice_dummy_var_487: int, out_vslice_dummy_var_488: int, out_vslice_dummy_var_489: int, out_vslice_dummy_var_490: int, out_vslice_dummy_var_491: int, out_vslice_dummy_var_492: int, out_vslice_dummy_var_493: int, out_vslice_dummy_var_494: int, out_vslice_dummy_var_495: int, out_vslice_dummy_var_496: int, out_vslice_dummy_var_497: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_FirstStatus_1 == 0 || out_FirstStatus_1 == -1073741536 || out_FirstStatus_1 == 259 || out_FirstStatus_1 == -1073741811 || out_FirstStatus_1 == in_FirstStatus_1;
  free ensures {:va_keep} out_SetFirstStatus_1 == 1 || out_SetFirstStatus_1 == in_SetFirstStatus_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_44 == 2 || out_s_p_e_c_i_a_l_44 == in_s_p_e_c_i_a_l_44;
  free ensures {:va_keep} out_vslice_dummy_var_484 == 0 || out_vslice_dummy_var_484 == in_vslice_dummy_var_484;
  free ensures {:va_keep} out_vslice_dummy_var_485 == 0 || out_vslice_dummy_var_485 == in_vslice_dummy_var_485;
  free ensures {:va_keep} out_vslice_dummy_var_486 == 0 || out_vslice_dummy_var_486 == in_vslice_dummy_var_486;
  free ensures {:va_keep} out_vslice_dummy_var_487 == 0 || out_vslice_dummy_var_487 == in_vslice_dummy_var_487;
  free ensures {:va_keep} out_vslice_dummy_var_488 == 0 || out_vslice_dummy_var_488 == in_vslice_dummy_var_488;
  free ensures {:va_keep} out_vslice_dummy_var_489 == 0 || out_vslice_dummy_var_489 == in_vslice_dummy_var_489;
  free ensures {:va_keep} out_vslice_dummy_var_490 == 0 || out_vslice_dummy_var_490 == in_vslice_dummy_var_490;
  free ensures {:va_keep} out_vslice_dummy_var_491 == 0 || out_vslice_dummy_var_491 == in_vslice_dummy_var_491;
  free ensures {:va_keep} out_vslice_dummy_var_492 == 0 || out_vslice_dummy_var_492 == in_vslice_dummy_var_492;
  free ensures {:va_keep} out_vslice_dummy_var_493 == 0 || out_vslice_dummy_var_493 == in_vslice_dummy_var_493;
  free ensures {:va_keep} out_vslice_dummy_var_494 == 0 || out_vslice_dummy_var_494 == in_vslice_dummy_var_494;
  free ensures {:va_keep} out_vslice_dummy_var_496 == 0 || out_vslice_dummy_var_496 == in_vslice_dummy_var_496;
  free ensures {:va_keep} out_vslice_dummy_var_497 == 0 || out_vslice_dummy_var_497 == in_vslice_dummy_var_497;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartRead_loop_L24(in_localStatus_1: int, in_Tmp_1238: int, in_totalTime: int, in_os2ssreturn: int, in_timeoutsForIrp: int, in_updateChar: int, in_setFirstStatus: int, in_Tmp_1240: int, in_useTotalTimer: int, in_newIrp_1: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_919: int, in_sdv_920: int, in_oldIrql_11: int, in_Tmp_1241: int, in_sdv_921: int, in_constantVal: int, in_controlIrql: int, in_Tmp_1242: int, in_Tmp_1244: int, in_returnWithWhatsPresent: int, in_Tmp_1245: int, in_Tmp_1246: int, in_pollIrql_13: int, in_useIntervalTimer: int, in_firstStatus: int, in_sdv_928: int, in_Extension_65: int, in_boogieTmp: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_555: int) returns (out_localStatus_1: int, out_Tmp_1238: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1240: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_919: int, out_sdv_920: int, out_oldIrql_11: int, out_Tmp_1241: int, out_sdv_921: int, out_constantVal: int, out_controlIrql: int, out_Tmp_1242: int, out_Tmp_1244: int, out_returnWithWhatsPresent: int, out_Tmp_1245: int, out_Tmp_1246: int, out_pollIrql_13: int, out_useIntervalTimer: int, out_firstStatus: int, out_sdv_928: int, out_boogieTmp: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_555: int)
{
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;

  entry:
    out_localStatus_1, out_Tmp_1238, out_os2ssreturn, out_setFirstStatus, out_Tmp_1240, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_919, out_sdv_920, out_oldIrql_11, out_Tmp_1241, out_sdv_921, out_constantVal, out_controlIrql, out_Tmp_1242, out_Tmp_1244, out_returnWithWhatsPresent, out_Tmp_1245, out_Tmp_1246, out_pollIrql_13, out_useIntervalTimer, out_firstStatus, out_sdv_928, out_boogieTmp, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_555 := in_localStatus_1, in_Tmp_1238, in_os2ssreturn, in_setFirstStatus, in_Tmp_1240, in_useTotalTimer, in_multiplierVal, in_crunchDownToOne, in_sdv_919, in_sdv_920, in_oldIrql_11, in_Tmp_1241, in_sdv_921, in_constantVal, in_controlIrql, in_Tmp_1242, in_Tmp_1244, in_returnWithWhatsPresent, in_Tmp_1245, in_Tmp_1246, in_pollIrql_13, in_useIntervalTimer, in_firstStatus, in_sdv_928, in_boogieTmp, in_vslice_dummy_var_550, in_vslice_dummy_var_551, in_vslice_dummy_var_552, in_vslice_dummy_var_555;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_551;
    call {:si_unique_call 3056} out_sdv_919 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_551);
    assume {:nonnull} out_sdv_919 != 0;
    assume out_sdv_919 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 3084} out_localStatus_1 := CyzResizeBuffer(in_Extension_65);
    goto anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  L38:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    call {:si_unique_call 3057} CyzGetNextIrp(CurrentReadIrp__CYZ_DEVICE_EXTENSION(in_Extension_65), ReadQueue__CYZ_DEVICE_EXTENSION(in_Extension_65), in_newIrp_1, 1, in_Extension_65);
    assume {:nonnull} in_newIrp_1 != 0;
    assume in_newIrp_1 > 0;
    goto anon81_Then;

  anon81_Then:
    goto anon81_Then_dummy;

  anon81_Then_dummy:
    call {:si_unique_call 3085} {:si_old_unique_call 1} out_localStatus_1, out_Tmp_1238, out_os2ssreturn, out_setFirstStatus, out_Tmp_1240, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_919, out_sdv_920, out_oldIrql_11, out_Tmp_1241, out_sdv_921, out_constantVal, out_controlIrql, out_Tmp_1242, out_Tmp_1244, out_returnWithWhatsPresent, out_Tmp_1245, out_Tmp_1246, out_pollIrql_13, out_useIntervalTimer, out_firstStatus, out_sdv_928, out_boogieTmp, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_555 := CyzStartRead_loop_L24(out_localStatus_1, out_Tmp_1238, in_totalTime, out_os2ssreturn, in_timeoutsForIrp, in_updateChar, out_setFirstStatus, out_Tmp_1240, out_useTotalTimer, in_newIrp_1, out_multiplierVal, out_crunchDownToOne, out_sdv_919, out_sdv_920, out_oldIrql_11, out_Tmp_1241, out_sdv_921, out_constantVal, out_controlIrql, out_Tmp_1242, out_Tmp_1244, out_returnWithWhatsPresent, out_Tmp_1245, out_Tmp_1246, out_pollIrql_13, out_useIntervalTimer, out_firstStatus, out_sdv_928, in_Extension_65, out_boogieTmp, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_555);
    return;

  anon80_Then:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := out_localStatus_1;
    out_setFirstStatus := 1;
    goto L38;

  anon79_Then:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_554;
    call {:si_unique_call 3071} out_sdv_921 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_554);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} out_sdv_921 != 0;
    assume out_sdv_921 > 0;
    out_useTotalTimer := 0;
    out_returnWithWhatsPresent := 0;
    out_os2ssreturn := 0;
    out_crunchDownToOne := 0;
    out_useIntervalTimer := 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    call {:si_unique_call 3072} out_vslice_dummy_var_555 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(in_Extension_65), in_Extension_65);
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    call {:si_unique_call 3073} out_vslice_dummy_var_550 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(in_Extension_65), in_Extension_65);
    call {:si_unique_call 3074} out_Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    Mem_T.INT4[out_Tmp_1245] := out_controlIrql;
    call {:si_unique_call 3075} sdv_KeAcquireSpinLock(0, out_Tmp_1245);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    out_controlIrql := Mem_T.INT4[out_Tmp_1245];
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    call {:si_unique_call 3076} sdv_KeReleaseSpinLock(0, out_controlIrql);
    goto anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    out_useIntervalTimer := 1;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto L67;

  L67:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L77;

  L77:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  L84:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} out_useTotalTimer != 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_totalTime != 0;
    assume in_totalTime > 0;
    goto L85;

  L85:
    call {:si_unique_call 3068} out_Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    Mem_T.INT4[out_Tmp_1245] := out_controlIrql;
    call {:si_unique_call 3069} sdv_KeAcquireSpinLock(0, out_Tmp_1245);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    out_controlIrql := Mem_T.INT4[out_Tmp_1245];
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    call {:si_unique_call 3070} out_boogieTmp := CyzGetCharsFromIntBuffer(in_Extension_65);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} out_returnWithWhatsPresent != 0;
    goto L95;

  L95:
    call {:si_unique_call 3081} out_Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    Mem_T.INT4[out_Tmp_1245] := out_pollIrql_13;
    call {:si_unique_call 3082} sdv_KeAcquireSpinLock(0, out_Tmp_1245);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    out_pollIrql_13 := Mem_T.INT4[out_Tmp_1245];
    call {:si_unique_call 3083} out_vslice_dummy_var_551 := CyzUpdateInterruptBuffer(in_updateChar);
    goto anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3080} sdv_KeReleaseSpinLock(0, out_pollIrql_13);
    goto anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3079} sdv_KeReleaseSpinLock(0, out_controlIrql);
    goto anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1246;
    assume {:nonnull} out_Tmp_1246 != 0;
    assume out_Tmp_1246 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L38;

  anon108_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon92_Then:
    assume {:partition} out_returnWithWhatsPresent == 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} out_os2ssreturn != 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1241;
    assume {:nonnull} out_Tmp_1241 != 0;
    assume out_Tmp_1241 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L112;

  L112:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_553;
    call {:si_unique_call 3065} out_sdv_928 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_553);
    assume {:nonnull} out_sdv_928 != 0;
    assume out_sdv_928 > 0;
    call {:si_unique_call 3066} out_Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    Mem_T.INT4[out_Tmp_1245] := out_oldIrql_11;
    call {:si_unique_call 3067} IoAcquireCancelSpinLock(out_Tmp_1245);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    out_oldIrql_11 := Mem_T.INT4[out_Tmp_1245];
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1240;
    assume {:nonnull} out_Tmp_1240 != 0;
    assume out_Tmp_1240 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    call {:si_unique_call 3077} IoReleaseCancelSpinLock(out_oldIrql_11);
    call {:si_unique_call 3078} sdv_KeReleaseSpinLock(0, out_controlIrql);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1244;
    assume {:nonnull} out_Tmp_1244 != 0;
    assume out_Tmp_1244 > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1238;
    assume {:nonnull} out_Tmp_1238 != 0;
    assume out_Tmp_1238 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := -1073741536;
    out_setFirstStatus := 1;
    goto L38;

  anon112_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon110_Then:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} out_crunchDownToOne != 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc vslice_dummy_var_552;
    call {:si_unique_call 3064} out_sdv_920 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_552);
    assume {:nonnull} out_sdv_920 != 0;
    assume out_sdv_920 > 0;
    goto L133;

  L133:
    call {:si_unique_call 3061} out_Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    Mem_T.INT4[out_Tmp_1245] := out_pollIrql_13;
    call {:si_unique_call 3062} sdv_KeAcquireSpinLock(0, out_Tmp_1245);
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    out_pollIrql_13 := Mem_T.INT4[out_Tmp_1245];
    call {:si_unique_call 3063} out_vslice_dummy_var_552 := CyzUpdateAndSwitchToUser(in_updateChar);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3060} sdv_KeReleaseSpinLock(0, out_pollIrql_13);
    goto anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    goto anon96_Else;

  anon96_Else:
    call {:si_unique_call 3058} IoReleaseCancelSpinLock(out_oldIrql_11);
    call {:si_unique_call 3059} sdv_KeReleaseSpinLock(0, out_controlIrql);
    goto anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    havoc out_Tmp_1242;
    assume {:nonnull} out_Tmp_1242 != 0;
    assume out_Tmp_1242 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L38;

  anon116_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon95_Then:
    assume {:partition} out_crunchDownToOne == 0;
    goto L133;

  anon109_Then:
    goto L95;

  anon94_Then:
    assume {:partition} out_os2ssreturn == 0;
    goto L112;

  anon93_Then:
    goto L95;

  anon91_Then:
    assume {:partition} out_useTotalTimer == 0;
    goto L85;

  anon90_Then:
    goto L78;

  L78:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    out_crunchDownToOne := 1;
    out_multiplierVal := 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  anon100_Then:
    goto L84;

  anon89_Then:
    goto L84;

  anon88_Then:
    goto L78;

  anon86_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    out_returnWithWhatsPresent := 1;
    goto L84;

  anon87_Then:
    goto L77;

  anon83_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L205;

  L205:
    out_useTotalTimer := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  anon85_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L205;

  anon101_Then:
    goto L84;

  anon104_Then:
    assume {:nonnull} in_Extension_65 != 0;
    assume in_Extension_65 > 0;
    goto L67;

  anon84_Then:
    goto L67;

  anon82_Then:
    goto L67;
}



procedure {:LoopProcedure} CyzStartRead_loop_L24(in_localStatus_1: int, in_Tmp_1238: int, in_totalTime: int, in_os2ssreturn: int, in_timeoutsForIrp: int, in_updateChar: int, in_setFirstStatus: int, in_Tmp_1240: int, in_useTotalTimer: int, in_newIrp_1: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_919: int, in_sdv_920: int, in_oldIrql_11: int, in_Tmp_1241: int, in_sdv_921: int, in_constantVal: int, in_controlIrql: int, in_Tmp_1242: int, in_Tmp_1244: int, in_returnWithWhatsPresent: int, in_Tmp_1245: int, in_Tmp_1246: int, in_pollIrql_13: int, in_useIntervalTimer: int, in_firstStatus: int, in_sdv_928: int, in_Extension_65: int, in_boogieTmp: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_555: int) returns (out_localStatus_1: int, out_Tmp_1238: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1240: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_919: int, out_sdv_920: int, out_oldIrql_11: int, out_Tmp_1241: int, out_sdv_921: int, out_constantVal: int, out_controlIrql: int, out_Tmp_1242: int, out_Tmp_1244: int, out_returnWithWhatsPresent: int, out_Tmp_1245: int, out_Tmp_1246: int, out_pollIrql_13: int, out_useIntervalTimer: int, out_firstStatus: int, out_sdv_928: int, out_boogieTmp: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_555: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_os2ssreturn == 0 || out_os2ssreturn == 1 || out_os2ssreturn == in_os2ssreturn;
  free ensures {:va_keep} out_setFirstStatus == 1 || out_setFirstStatus == in_setFirstStatus;
  free ensures {:va_keep} out_useTotalTimer == 0 || out_useTotalTimer == 1 || out_useTotalTimer == in_useTotalTimer;
  free ensures {:va_keep} out_crunchDownToOne == 0 || out_crunchDownToOne == 1 || out_crunchDownToOne == in_crunchDownToOne;
  free ensures {:va_keep} out_returnWithWhatsPresent == 1 || out_returnWithWhatsPresent == 0 || out_returnWithWhatsPresent == in_returnWithWhatsPresent;
  free ensures {:va_keep} out_useIntervalTimer == 1 || out_useIntervalTimer == 0 || out_useIntervalTimer == in_useIntervalTimer;
  free ensures {:va_keep} out_vslice_dummy_var_550 == 1 || out_vslice_dummy_var_550 == 0 || out_vslice_dummy_var_550 == in_vslice_dummy_var_550;
  free ensures {:va_keep} out_vslice_dummy_var_555 == 1 || out_vslice_dummy_var_555 == 0 || out_vslice_dummy_var_555 == in_vslice_dummy_var_555;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzKillAllReadsOrWrites#0_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_670: int, in_sdv_671: int, in_cancelRoutine_1: int, in_Tmp_776: int, in_DeviceObject_12: int, in_QueueToClean: int, in_vslice_dummy_var_595: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_670: int, out_sdv_671: int, out_cancelRoutine_1: int, out_Tmp_776: int, out_vslice_dummy_var_595: int)
{
  var vslice_dummy_var_555: int;

  entry:
    out_currentLastIrp, out_cancelIrql, out_sdv_670, out_sdv_671, out_cancelRoutine_1, out_Tmp_776, out_vslice_dummy_var_595 := in_currentLastIrp, in_cancelIrql, in_sdv_670, in_sdv_671, in_cancelRoutine_1, in_Tmp_776, in_vslice_dummy_var_595;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 3086} out_sdv_670 := sdv_IsListEmpty(0);
    goto anon51_Else;

  anon51_Else:
    assume {:partition} out_sdv_670 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_555;
    call {:si_unique_call 3091} out_sdv_671 := sdv_containing_record(vslice_dummy_var_555, 88);
    out_currentLastIrp := out_sdv_671;
    call {:si_unique_call 3092} out_vslice_dummy_var_595 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    havoc out_cancelRoutine_1;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp)] := out_cancelIrql;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 3097} CyzCancelCurrentRead#0(in_DeviceObject_12, out_currentLastIrp);
    goto anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  L42:
    call {:si_unique_call 3087} out_Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    Mem_T.INT4[out_Tmp_776] := out_cancelIrql;
    call {:si_unique_call 3088} IoAcquireCancelSpinLock(out_Tmp_776);
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    out_cancelIrql := Mem_T.INT4[out_Tmp_776];
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 3098} {:si_old_unique_call 1} out_currentLastIrp, out_cancelIrql, out_sdv_670, out_sdv_671, out_cancelRoutine_1, out_Tmp_776, out_vslice_dummy_var_595 := CyzKillAllReadsOrWrites#0_loop_L8(out_currentLastIrp, out_cancelIrql, out_sdv_670, out_sdv_671, out_cancelRoutine_1, out_Tmp_776, in_DeviceObject_12, in_QueueToClean, out_vslice_dummy_var_595);
    return;

  anon62_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 3096} CyzCancelCurrentWrite#0(in_DeviceObject_12, out_currentLastIrp);
    goto anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon61_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 3095} CyzCancelCurrentXoff#0(in_DeviceObject_12, out_currentLastIrp);
    goto anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon60_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 3094} CyzCancelImmediate#0(in_DeviceObject_12, out_currentLastIrp);
    goto anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon59_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 3089} CyzCancelQueued(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon58_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 3093} CyzCancelWait#0(in_DeviceObject_12, out_currentLastIrp);
    goto anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon70_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 3090} CyzFilterCancelQueued(in_DeviceObject_12, out_currentLastIrp);
    goto L42;
}



procedure {:LoopProcedure} CyzKillAllReadsOrWrites#0_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_670: int, in_sdv_671: int, in_cancelRoutine_1: int, in_Tmp_776: int, in_DeviceObject_12: int, in_QueueToClean: int, in_vslice_dummy_var_595: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_670: int, out_sdv_671: int, out_cancelRoutine_1: int, out_Tmp_776: int, out_vslice_dummy_var_595: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} out_sdv_670 == 1 || out_sdv_670 == 0 || out_sdv_670 == in_sdv_670;
  free ensures {:va_keep} out_vslice_dummy_var_595 == 1 || out_vslice_dummy_var_595 == 0 || out_vslice_dummy_var_595 == in_vslice_dummy_var_595;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzKillAllReadsOrWrites#1_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_670: int, in_sdv_671: int, in_cancelRoutine_1: int, in_Tmp_776: int, in_DeviceObject_12: int, in_QueueToClean: int, in_vslice_dummy_var_597: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_670: int, out_sdv_671: int, out_cancelRoutine_1: int, out_Tmp_776: int, out_vslice_dummy_var_597: int)
{
  var vslice_dummy_var_556: int;

  entry:
    out_currentLastIrp, out_cancelIrql, out_sdv_670, out_sdv_671, out_cancelRoutine_1, out_Tmp_776, out_vslice_dummy_var_597 := in_currentLastIrp, in_cancelIrql, in_sdv_670, in_sdv_671, in_cancelRoutine_1, in_Tmp_776, in_vslice_dummy_var_597;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 3099} out_sdv_670 := sdv_IsListEmpty(0);
    goto anon51_Else;

  anon51_Else:
    assume {:partition} out_sdv_670 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_556;
    call {:si_unique_call 3104} out_sdv_671 := sdv_containing_record(vslice_dummy_var_556, 88);
    out_currentLastIrp := out_sdv_671;
    call {:si_unique_call 3105} out_vslice_dummy_var_597 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    havoc out_cancelRoutine_1;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp)] := out_cancelIrql;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 3110} CyzCancelCurrentRead#1(in_DeviceObject_12, out_currentLastIrp);
    goto anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  L42:
    call {:si_unique_call 3100} out_Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    Mem_T.INT4[out_Tmp_776] := out_cancelIrql;
    call {:si_unique_call 3101} IoAcquireCancelSpinLock(out_Tmp_776);
    assume {:nonnull} out_Tmp_776 != 0;
    assume out_Tmp_776 > 0;
    out_cancelIrql := Mem_T.INT4[out_Tmp_776];
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 3111} {:si_old_unique_call 1} out_currentLastIrp, out_cancelIrql, out_sdv_670, out_sdv_671, out_cancelRoutine_1, out_Tmp_776, out_vslice_dummy_var_597 := CyzKillAllReadsOrWrites#1_loop_L8(out_currentLastIrp, out_cancelIrql, out_sdv_670, out_sdv_671, out_cancelRoutine_1, out_Tmp_776, in_DeviceObject_12, in_QueueToClean, out_vslice_dummy_var_597);
    return;

  anon62_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 3109} CyzCancelCurrentWrite#1(in_DeviceObject_12, out_currentLastIrp);
    goto anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon61_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 3108} CyzCancelCurrentXoff#1(in_DeviceObject_12, out_currentLastIrp);
    goto anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon60_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 3107} CyzCancelImmediate#1(in_DeviceObject_12, out_currentLastIrp);
    goto anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon59_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 3102} CyzCancelQueued(in_DeviceObject_12, out_currentLastIrp);
    goto L42;

  anon58_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 3106} CyzCancelWait#1(in_DeviceObject_12, out_currentLastIrp);
    goto anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon70_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 3103} CyzFilterCancelQueued(in_DeviceObject_12, out_currentLastIrp);
    goto L42;
}



procedure {:LoopProcedure} CyzKillAllReadsOrWrites#1_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_670: int, in_sdv_671: int, in_cancelRoutine_1: int, in_Tmp_776: int, in_DeviceObject_12: int, in_QueueToClean: int, in_vslice_dummy_var_597: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_670: int, out_sdv_671: int, out_cancelRoutine_1: int, out_Tmp_776: int, out_vslice_dummy_var_597: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} out_sdv_670 == 1 || out_sdv_670 == 0 || out_sdv_670 == in_sdv_670;
  free ensures {:va_keep} out_vslice_dummy_var_597 == 1 || out_vslice_dummy_var_597 == 0 || out_vslice_dummy_var_597 == in_vslice_dummy_var_597;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetNextWrite#0_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_731: int, in_Irp_14: int, in_pollIrql_10: int, in_OldIrql_12: int, in_sdv_734: int, in_OldIrql_13: int, in_sdv_736: int, in_Tmp_852: int, in_s_p_e_c_i_a_l_36: int, in_sdv_738: int, in_sdv_739: int, in_sdv_740: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_853: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_51: int, in_vslice_dummy_var_624: int, in_vslice_dummy_var_625: int, in_vslice_dummy_var_628: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_731: int, out_Irp_14: int, out_pollIrql_10: int, out_OldIrql_12: int, out_sdv_734: int, out_OldIrql_13: int, out_sdv_736: int, out_Tmp_852: int, out_s_p_e_c_i_a_l_36: int, out_sdv_738: int, out_sdv_739: int, out_sdv_740: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_853: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_624: int, out_vslice_dummy_var_625: int, out_vslice_dummy_var_628: int)
{
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;

  entry:
    out_s_p_e_c_i_a_l_35, out_sdv_731, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_734, out_OldIrql_13, out_sdv_736, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_738, out_sdv_739, out_sdv_740, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, out_CompleteCurrent_3, out_vslice_dummy_var_624, out_vslice_dummy_var_625, out_vslice_dummy_var_628 := in_s_p_e_c_i_a_l_35, in_sdv_731, in_Irp_14, in_pollIrql_10, in_OldIrql_12, in_sdv_734, in_OldIrql_13, in_sdv_736, in_Tmp_852, in_s_p_e_c_i_a_l_36, in_sdv_738, in_sdv_739, in_sdv_740, in_s_p_e_c_i_a_l_37, in_Xc_2, in_s_p_e_c_i_a_l_38, in_Tmp_853, in_CompleteCurrent_3, in_vslice_dummy_var_624, in_vslice_dummy_var_625, in_vslice_dummy_var_628;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_557;
    call {:si_unique_call 3112} out_sdv_736 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_557);
    assume {:nonnull} out_sdv_736 != 0;
    assume out_sdv_736 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3115} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_OldIrql_13;
    call {:si_unique_call 3116} IoAcquireCancelSpinLock(out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_OldIrql_13 := Mem_T.INT4[out_Tmp_853];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_559;
    call {:si_unique_call 3117} out_sdv_740 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_559);
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    assume {:nonnull} out_sdv_740 != 0;
    assume out_sdv_740 > 0;
    call {:si_unique_call 3118} IoReleaseCancelSpinLock(out_OldIrql_13);
    goto L24;

  L24:
    call {:si_unique_call 3114} CyzGetNextIrp(in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_51);
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon22_Then;

  anon22_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc vslice_dummy_var_558;
    call {:si_unique_call 3113} out_sdv_739 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_558);
    assume {:nonnull} out_sdv_739 != 0;
    assume out_sdv_739 > 0;
    goto anon23_Then;

  anon23_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc out_Tmp_852;
    assume {:nonnull} out_Tmp_852 != 0;
    assume out_Tmp_852 > 0;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    call {:si_unique_call 3131} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_35, out_sdv_731, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_734, out_OldIrql_13, out_sdv_736, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_738, out_sdv_739, out_sdv_740, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, out_CompleteCurrent_3, out_vslice_dummy_var_624, out_vslice_dummy_var_625, out_vslice_dummy_var_628 := CyzGetNextWrite#0_loop_L6(out_s_p_e_c_i_a_l_35, out_sdv_731, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_734, out_OldIrql_13, out_sdv_736, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_738, out_sdv_739, out_sdv_740, out_s_p_e_c_i_a_l_37, in_delta, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_51, out_vslice_dummy_var_624, out_vslice_dummy_var_625, out_vslice_dummy_var_628);
    return;

  anon21_Then:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_560;
    call {:si_unique_call 3120} out_sdv_738 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_560);
    assume {:nonnull} out_sdv_738 != 0;
    assume out_sdv_738 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 3129} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_OldIrql_12;
    call {:si_unique_call 3130} IoAcquireCancelSpinLock(out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_OldIrql_12 := Mem_T.INT4[out_Tmp_853];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc out_Irp_14;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    havoc out_Xc_2;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L69;

  L69:
    call {:si_unique_call 3119} IoReleaseCancelSpinLock(out_OldIrql_12);
    goto L24;

  anon29_Then:
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto L69;

  anon25_Then:
    call {:si_unique_call 3123} out_vslice_dummy_var_624 := sdv_IoSetCancelRoutine(out_Irp_14, li2bplFunctionConstant198);
    out_s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 3124} out_sdv_734 := sdv_IoGetCurrentIrpStackLocation(out_Irp_14);
    assume {:nonnull} out_sdv_734 != 0;
    assume out_sdv_734 > 0;
    out_s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_734)));
    assume {:nonnull} out_s_p_e_c_i_a_l_35 != 0;
    assume out_s_p_e_c_i_a_l_35 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_35] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_35], out_s_p_e_c_i_a_l_36);
    out_CompleteCurrent_3 := 0;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    call {:si_unique_call 3125} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_pollIrql_10;
    call {:si_unique_call 3126} sdv_KeAcquireSpinLock(0, out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_pollIrql_10 := Mem_T.INT4[out_Tmp_853];
    call {:si_unique_call 3127} out_vslice_dummy_var_625 := CyzGiveXoffToIsr(in_Extension_51);
    call {:si_unique_call 3128} sdv_KeReleaseSpinLock(0, out_pollIrql_10);
    goto anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    call {:si_unique_call 3121} out_vslice_dummy_var_628 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_51), in_delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(in_Extension_51), in_Extension_51);
    out_s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 3122} out_sdv_731 := sdv_IoGetCurrentIrpStackLocation(out_Irp_14);
    assume {:nonnull} out_sdv_731 != 0;
    assume out_sdv_731 > 0;
    out_s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_731)));
    assume {:nonnull} out_s_p_e_c_i_a_l_37 != 0;
    assume out_s_p_e_c_i_a_l_37 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_37] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_37], out_s_p_e_c_i_a_l_38);
    goto L69;

  anon26_Then:
    goto L69;

  anon24_Then:
    goto L24;
}



procedure {:LoopProcedure} CyzGetNextWrite#0_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_731: int, in_Irp_14: int, in_pollIrql_10: int, in_OldIrql_12: int, in_sdv_734: int, in_OldIrql_13: int, in_sdv_736: int, in_Tmp_852: int, in_s_p_e_c_i_a_l_36: int, in_sdv_738: int, in_sdv_739: int, in_sdv_740: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_853: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_51: int, in_vslice_dummy_var_624: int, in_vslice_dummy_var_625: int, in_vslice_dummy_var_628: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_731: int, out_Irp_14: int, out_pollIrql_10: int, out_OldIrql_12: int, out_sdv_734: int, out_OldIrql_13: int, out_sdv_736: int, out_Tmp_852: int, out_s_p_e_c_i_a_l_36: int, out_sdv_738: int, out_sdv_739: int, out_sdv_740: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_853: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_624: int, out_vslice_dummy_var_625: int, out_vslice_dummy_var_628: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_s_p_e_c_i_a_l_36 == 2 || out_s_p_e_c_i_a_l_36 == in_s_p_e_c_i_a_l_36;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_38 == 4 || out_s_p_e_c_i_a_l_38 == in_s_p_e_c_i_a_l_38;
  free ensures {:va_keep} out_CompleteCurrent_3 == 0 || out_CompleteCurrent_3 == in_CompleteCurrent_3;
  free ensures {:va_keep} out_vslice_dummy_var_625 == 0 || out_vslice_dummy_var_625 == in_vslice_dummy_var_625;
  free ensures {:va_keep} out_vslice_dummy_var_628 == 1 || out_vslice_dummy_var_628 == 0 || out_vslice_dummy_var_628 == in_vslice_dummy_var_628;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzGetNextWrite#1_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_731: int, in_Irp_14: int, in_pollIrql_10: int, in_OldIrql_12: int, in_sdv_734: int, in_OldIrql_13: int, in_sdv_736: int, in_Tmp_852: int, in_s_p_e_c_i_a_l_36: int, in_sdv_738: int, in_sdv_739: int, in_sdv_740: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_853: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_51: int, in_vslice_dummy_var_631: int, in_vslice_dummy_var_632: int, in_vslice_dummy_var_635: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_731: int, out_Irp_14: int, out_pollIrql_10: int, out_OldIrql_12: int, out_sdv_734: int, out_OldIrql_13: int, out_sdv_736: int, out_Tmp_852: int, out_s_p_e_c_i_a_l_36: int, out_sdv_738: int, out_sdv_739: int, out_sdv_740: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_853: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_631: int, out_vslice_dummy_var_632: int, out_vslice_dummy_var_635: int)
{
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;

  entry:
    out_s_p_e_c_i_a_l_35, out_sdv_731, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_734, out_OldIrql_13, out_sdv_736, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_738, out_sdv_739, out_sdv_740, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, out_CompleteCurrent_3, out_vslice_dummy_var_631, out_vslice_dummy_var_632, out_vslice_dummy_var_635 := in_s_p_e_c_i_a_l_35, in_sdv_731, in_Irp_14, in_pollIrql_10, in_OldIrql_12, in_sdv_734, in_OldIrql_13, in_sdv_736, in_Tmp_852, in_s_p_e_c_i_a_l_36, in_sdv_738, in_sdv_739, in_sdv_740, in_s_p_e_c_i_a_l_37, in_Xc_2, in_s_p_e_c_i_a_l_38, in_Tmp_853, in_CompleteCurrent_3, in_vslice_dummy_var_631, in_vslice_dummy_var_632, in_vslice_dummy_var_635;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_561;
    call {:si_unique_call 3132} out_sdv_736 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_561);
    assume {:nonnull} out_sdv_736 != 0;
    assume out_sdv_736 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3135} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_OldIrql_13;
    call {:si_unique_call 3136} IoAcquireCancelSpinLock(out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_OldIrql_13 := Mem_T.INT4[out_Tmp_853];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_563;
    call {:si_unique_call 3137} out_sdv_740 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_563);
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    assume {:nonnull} out_sdv_740 != 0;
    assume out_sdv_740 > 0;
    call {:si_unique_call 3138} IoReleaseCancelSpinLock(out_OldIrql_13);
    goto L24;

  L24:
    call {:si_unique_call 3134} CyzGetNextIrp(in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_51);
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon22_Then;

  anon22_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc vslice_dummy_var_562;
    call {:si_unique_call 3133} out_sdv_739 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_562);
    assume {:nonnull} out_sdv_739 != 0;
    assume out_sdv_739 > 0;
    goto anon23_Then;

  anon23_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc out_Tmp_852;
    assume {:nonnull} out_Tmp_852 != 0;
    assume out_Tmp_852 > 0;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    call {:si_unique_call 3151} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_35, out_sdv_731, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_734, out_OldIrql_13, out_sdv_736, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_738, out_sdv_739, out_sdv_740, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, out_CompleteCurrent_3, out_vslice_dummy_var_631, out_vslice_dummy_var_632, out_vslice_dummy_var_635 := CyzGetNextWrite#1_loop_L6(out_s_p_e_c_i_a_l_35, out_sdv_731, out_Irp_14, out_pollIrql_10, out_OldIrql_12, out_sdv_734, out_OldIrql_13, out_sdv_736, out_Tmp_852, out_s_p_e_c_i_a_l_36, out_sdv_738, out_sdv_739, out_sdv_740, out_s_p_e_c_i_a_l_37, in_delta, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_853, in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_51, out_vslice_dummy_var_631, out_vslice_dummy_var_632, out_vslice_dummy_var_635);
    return;

  anon21_Then:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_564;
    call {:si_unique_call 3140} out_sdv_738 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_564);
    assume {:nonnull} out_sdv_738 != 0;
    assume out_sdv_738 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 3149} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_OldIrql_12;
    call {:si_unique_call 3150} IoAcquireCancelSpinLock(out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_OldIrql_12 := Mem_T.INT4[out_Tmp_853];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc out_Irp_14;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    havoc out_Xc_2;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L69;

  L69:
    call {:si_unique_call 3139} IoReleaseCancelSpinLock(out_OldIrql_12);
    goto L24;

  anon29_Then:
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    goto L69;

  anon25_Then:
    call {:si_unique_call 3143} out_vslice_dummy_var_631 := sdv_IoSetCancelRoutine(out_Irp_14, li2bplFunctionConstant198);
    out_s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 3144} out_sdv_734 := sdv_IoGetCurrentIrpStackLocation(out_Irp_14);
    assume {:nonnull} out_sdv_734 != 0;
    assume out_sdv_734 > 0;
    out_s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_734)));
    assume {:nonnull} out_s_p_e_c_i_a_l_35 != 0;
    assume out_s_p_e_c_i_a_l_35 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_35] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_35], out_s_p_e_c_i_a_l_36);
    out_CompleteCurrent_3 := 0;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    call {:si_unique_call 3145} out_Tmp_853 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    Mem_T.INT4[out_Tmp_853] := out_pollIrql_10;
    call {:si_unique_call 3146} sdv_KeAcquireSpinLock(0, out_Tmp_853);
    assume {:nonnull} out_Tmp_853 != 0;
    assume out_Tmp_853 > 0;
    out_pollIrql_10 := Mem_T.INT4[out_Tmp_853];
    call {:si_unique_call 3147} out_vslice_dummy_var_632 := CyzGiveXoffToIsr(in_Extension_51);
    call {:si_unique_call 3148} sdv_KeReleaseSpinLock(0, out_pollIrql_10);
    goto anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_51 != 0;
    assume in_Extension_51 > 0;
    call {:si_unique_call 3141} out_vslice_dummy_var_635 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_51), in_delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(in_Extension_51), in_Extension_51);
    out_s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 3142} out_sdv_731 := sdv_IoGetCurrentIrpStackLocation(out_Irp_14);
    assume {:nonnull} out_sdv_731 != 0;
    assume out_sdv_731 > 0;
    out_s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_731)));
    assume {:nonnull} out_s_p_e_c_i_a_l_37 != 0;
    assume out_s_p_e_c_i_a_l_37 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_37] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_37], out_s_p_e_c_i_a_l_38);
    goto L69;

  anon26_Then:
    goto L69;

  anon24_Then:
    goto L24;
}



procedure {:LoopProcedure} CyzGetNextWrite#1_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_731: int, in_Irp_14: int, in_pollIrql_10: int, in_OldIrql_12: int, in_sdv_734: int, in_OldIrql_13: int, in_sdv_736: int, in_Tmp_852: int, in_s_p_e_c_i_a_l_36: int, in_sdv_738: int, in_sdv_739: int, in_sdv_740: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_853: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_51: int, in_vslice_dummy_var_631: int, in_vslice_dummy_var_632: int, in_vslice_dummy_var_635: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_731: int, out_Irp_14: int, out_pollIrql_10: int, out_OldIrql_12: int, out_sdv_734: int, out_OldIrql_13: int, out_sdv_736: int, out_Tmp_852: int, out_s_p_e_c_i_a_l_36: int, out_sdv_738: int, out_sdv_739: int, out_sdv_740: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_853: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_631: int, out_vslice_dummy_var_632: int, out_vslice_dummy_var_635: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_s_p_e_c_i_a_l_36 == 2 || out_s_p_e_c_i_a_l_36 == in_s_p_e_c_i_a_l_36;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_38 == 4 || out_s_p_e_c_i_a_l_38 == in_s_p_e_c_i_a_l_38;
  free ensures {:va_keep} out_CompleteCurrent_3 == 0 || out_CompleteCurrent_3 == in_CompleteCurrent_3;
  free ensures {:va_keep} out_vslice_dummy_var_632 == 0 || out_vslice_dummy_var_632 == in_vslice_dummy_var_632;
  free ensures {:va_keep} out_vslice_dummy_var_635 == 1 || out_vslice_dummy_var_635 == 0 || out_vslice_dummy_var_635 == in_vslice_dummy_var_635;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartWrite#0_loop_L15(in_Tmp_810: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_708: int, in_OldIrql_8: int, in_NewIrp_3: int, in_sdv_711: int, in_Tmp_814: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_708: int, out_OldIrql_8: int, out_sdv_711: int, out_Tmp_814: int, out_Tmp_816: int)
{
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;

  entry:
    out_Tmp_810, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_708, out_OldIrql_8, out_sdv_711, out_Tmp_814, out_Tmp_816 := in_Tmp_810, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_812, in_sdv_708, in_OldIrql_8, in_sdv_711, in_Tmp_814, in_Tmp_816;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 3152} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3153} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_566;
    call {:si_unique_call 3164} out_sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_566);
    assume {:nonnull} out_sdv_708 != 0;
    assume out_sdv_708 > 0;
    goto anon32_Then;

  anon32_Then:
    call {:si_unique_call 3162} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;

  L41:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3159} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3160} sdv_KeAcquireSpinLock(0, out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3161} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    goto anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L52;

  L52:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_567;
    call {:si_unique_call 3165} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_567);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_565;
    call {:si_unique_call 3156} out_sdv_711 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_565);
    assume {:nonnull} out_sdv_711 != 0;
    assume out_sdv_711 > 0;
    call {:si_unique_call 3157} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3158} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_812;
    assume {:nonnull} out_Tmp_812 != 0;
    assume out_Tmp_812 > 0;
    goto anon40_Else;

  anon40_Else:
    call {:si_unique_call 3155} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_814;
    assume {:nonnull} out_Tmp_814 != 0;
    assume out_Tmp_814 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    call {:si_unique_call 3154} CyzGetNextWrite#0(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_41), in_NewIrp_3, 1, in_Extension_41);
    goto anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon36_Then;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    call {:si_unique_call 3166} {:si_old_unique_call 1} out_Tmp_810, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_708, out_OldIrql_8, out_sdv_711, out_Tmp_814, out_Tmp_816 := CyzStartWrite#0_loop_L15(out_Tmp_810, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_708, out_OldIrql_8, in_NewIrp_3, out_sdv_711, out_Tmp_814, in_Timeouts_1, out_Tmp_816, in_Extension_41);
    return;

  anon41_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L76;

  anon39_Then:
    out_Tmp_816 := 1;
    goto L60;

  anon33_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L61;

  anon34_Then:
    goto L52;

  anon31_Then:
    call {:si_unique_call 3163} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;
}



procedure {:LoopProcedure} CyzStartWrite#0_loop_L15(in_Tmp_810: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_708: int, in_OldIrql_8: int, in_NewIrp_3: int, in_sdv_711: int, in_Tmp_814: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_708: int, out_OldIrql_8: int, out_sdv_711: int, out_Tmp_814: int, out_Tmp_816: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzStartWrite#1_loop_L15(in_Tmp_810: int, in_s_p_e_c_i_a_l_21: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_708: int, in_OldIrql_8: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_23: int, in_sdv_710: int, in_sdv_711: int, in_Tmp_814: int, in_Tmp_815: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_s_p_e_c_i_a_l_21: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_708: int, out_OldIrql_8: int, out_s_p_e_c_i_a_l_23: int, out_sdv_710: int, out_sdv_711: int, out_Tmp_814: int, out_Tmp_815: int, out_Tmp_816: int)
{
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;

  entry:
    out_Tmp_810, out_s_p_e_c_i_a_l_21, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_708, out_OldIrql_8, out_s_p_e_c_i_a_l_23, out_sdv_710, out_sdv_711, out_Tmp_814, out_Tmp_815, out_Tmp_816 := in_Tmp_810, in_s_p_e_c_i_a_l_21, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_812, in_sdv_708, in_OldIrql_8, in_s_p_e_c_i_a_l_23, in_sdv_710, in_sdv_711, in_Tmp_814, in_Tmp_815, in_Tmp_816;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 3167} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3168} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_569;
    call {:si_unique_call 3179} out_sdv_708 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_569);
    assume {:nonnull} out_sdv_708 != 0;
    assume out_sdv_708 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    out_s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_570;
    call {:si_unique_call 3180} out_sdv_710 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_570);
    assume {:nonnull} out_sdv_710 != 0;
    assume out_sdv_710 > 0;
    out_s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_710)));
    assume {:nonnull} out_s_p_e_c_i_a_l_21 != 0;
    assume out_s_p_e_c_i_a_l_21 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_21] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_21], out_s_p_e_c_i_a_l_23);
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_815;
    assume {:nonnull} out_Tmp_815 != 0;
    assume out_Tmp_815 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    call {:si_unique_call 3181} CyzTryToCompleteCurrent#0(in_Extension_41, li2bplFunctionConstant195, out_OldIrql_8, -1073741816, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(in_Extension_41), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_41), 0, 0, 16);
    goto anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto L41;

  L41:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3174} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3175} sdv_KeAcquireSpinLock(0, out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3176} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    goto anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L52;

  L52:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_571;
    call {:si_unique_call 3182} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_571);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_816;
    goto L60;

  L60:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc vslice_dummy_var_568;
    call {:si_unique_call 3171} out_sdv_711 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_568);
    assume {:nonnull} out_sdv_711 != 0;
    assume out_sdv_711 > 0;
    call {:si_unique_call 3172} out_Tmp_810 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    Mem_T.INT4[out_Tmp_810] := out_OldIrql_8;
    call {:si_unique_call 3173} IoAcquireCancelSpinLock(out_Tmp_810);
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    out_OldIrql_8 := Mem_T.INT4[out_Tmp_810];
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_812;
    assume {:nonnull} out_Tmp_812 != 0;
    assume out_Tmp_812 > 0;
    goto anon40_Else;

  anon40_Else:
    call {:si_unique_call 3170} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    havoc out_Tmp_814;
    assume {:nonnull} out_Tmp_814 != 0;
    assume out_Tmp_814 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_41 != 0;
    assume in_Extension_41 > 0;
    call {:si_unique_call 3169} CyzGetNextWrite#1(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_41), WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_41), in_NewIrp_3, 1, in_Extension_41);
    goto anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon36_Then;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    call {:si_unique_call 3183} {:si_old_unique_call 1} out_Tmp_810, out_s_p_e_c_i_a_l_21, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_708, out_OldIrql_8, out_s_p_e_c_i_a_l_23, out_sdv_710, out_sdv_711, out_Tmp_814, out_Tmp_815, out_Tmp_816 := CyzStartWrite#1_loop_L15(out_Tmp_810, out_s_p_e_c_i_a_l_21, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_812, out_sdv_708, out_OldIrql_8, in_NewIrp_3, out_s_p_e_c_i_a_l_23, out_sdv_710, out_sdv_711, out_Tmp_814, out_Tmp_815, in_Timeouts_1, out_Tmp_816, in_Extension_41);
    return;

  anon41_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L76;

  anon39_Then:
    out_Tmp_816 := 1;
    goto L60;

  anon33_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L61;

  anon34_Then:
    goto L52;

  anon32_Then:
    call {:si_unique_call 3177} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;

  anon31_Then:
    call {:si_unique_call 3178} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;
}



procedure {:LoopProcedure} CyzStartWrite#1_loop_L15(in_Tmp_810: int, in_s_p_e_c_i_a_l_21: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_812: int, in_sdv_708: int, in_OldIrql_8: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_23: int, in_sdv_710: int, in_sdv_711: int, in_Tmp_814: int, in_Tmp_815: int, in_Timeouts_1: int, in_Tmp_816: int, in_Extension_41: int) returns (out_Tmp_810: int, out_s_p_e_c_i_a_l_21: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_812: int, out_sdv_708: int, out_OldIrql_8: int, out_s_p_e_c_i_a_l_23: int, out_sdv_710: int, out_sdv_711: int, out_Tmp_814: int, out_Tmp_815: int, out_Tmp_816: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_23 == 16 || out_s_p_e_c_i_a_l_23 == in_s_p_e_c_i_a_l_23;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int)
{

  entry:
    out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := in_Tmp_934, in_Tmp_954, in_numOfBytes, in_tx_6, in_Tmp_984;
    goto L183, exit;

  exit:
    return;

  L183:
    out_Tmp_954 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon207_Else;

  anon207_Else:
    assume {:partition} out_Tmp_954 != 0;
    out_Tmp_934 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_984;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon207_Else_dummy;

  anon207_Else_dummy:
    call {:si_unique_call 3184} {:si_old_unique_call 1} out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := CyzTxStart#0_loop_L183(out_Tmp_934, out_Tmp_954, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_984);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int)
{

  entry:
    out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := in_numOfLongs, in_Tmp_939, in_Tmp_950, in_Tmp_961, in_tx_6, in_Tmp_983;
    goto L182, exit;

  exit:
    return;

  L182:
    out_Tmp_950 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon206_Else;

  anon206_Else:
    assume {:partition} out_Tmp_950 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_983;
    assume {:nonnull} out_Tmp_983 != 0;
    assume out_Tmp_983 > 0;
    out_Tmp_961 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_939;
    out_tx_6 := out_tx_6 + 4;
    goto anon206_Else_dummy;

  anon206_Else_dummy:
    call {:si_unique_call 3185} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := CyzTxStart#0_loop_L182(out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, in_Extension_59, out_tx_6, out_Tmp_983);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := in_Tmp_958, in_Tmp_966, in_tx_6, in_amount1;
    goto L171, exit;

  exit:
    return;

  L171:
    goto anon182_Else;

  anon182_Else:
    assume {:partition} out_amount1 != 0;
    goto anon183_Else;

  anon183_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_958 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_966;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon183_Else_dummy;

  anon183_Else_dummy:
    call {:si_unique_call 3186} {:si_old_unique_call 1} out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := CyzTxStart#0_loop_L171(out_Tmp_958, out_Tmp_966, in_Extension_59, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int)
{

  entry:
    out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := in_Tmp_931, in_Tmp_951, in_Tmp_970, in_numOfBytes, in_tx_6;
    goto L210, exit;

  exit:
    return;

  L210:
    out_Tmp_931 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon209_Else;

  anon209_Else:
    assume {:partition} out_Tmp_931 != 0;
    out_Tmp_970 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_951;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon209_Else_dummy;

  anon209_Else_dummy:
    call {:si_unique_call 3187} {:si_old_unique_call 1} out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := CyzTxStart#0_loop_L210(out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int)
{

  entry:
    out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := in_numOfLongs, in_Tmp_945, in_Tmp_969, in_Tmp_980, in_tx_6, in_Tmp_991;
    goto L209, exit;

  exit:
    return;

  L209:
    out_Tmp_969 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon208_Else;

  anon208_Else:
    assume {:partition} out_Tmp_969 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_945;
    assume {:nonnull} out_Tmp_945 != 0;
    assume out_Tmp_945 > 0;
    out_Tmp_980 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_991;
    out_tx_6 := out_tx_6 + 4;
    goto anon208_Else_dummy;

  anon208_Else_dummy:
    call {:si_unique_call 3188} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := CyzTxStart#0_loop_L209(out_numOfLongs, out_Tmp_945, out_Tmp_969, in_Extension_59, out_Tmp_980, out_tx_6, out_Tmp_991);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int)
{

  entry:
    out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := in_Tmp_953, in_Tmp_973, in_numOfBytes, in_Tmp_974, in_tx_6;
    goto L254, exit;

  exit:
    return;

  L254:
    out_Tmp_974 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon214_Else;

  anon214_Else:
    assume {:partition} out_Tmp_974 != 0;
    out_Tmp_953 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_973;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon214_Else_dummy;

  anon214_Else_dummy:
    call {:si_unique_call 3189} {:si_old_unique_call 1} out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := CyzTxStart#0_loop_L254(out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int)
{

  entry:
    out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := in_Tmp_933, in_numOfLongs, in_Tmp_937, in_Tmp_948, in_tx_6, in_Tmp_995;
    goto L253, exit;

  exit:
    return;

  L253:
    out_Tmp_937 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon213_Else;

  anon213_Else:
    assume {:partition} out_Tmp_937 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_948;
    assume {:nonnull} out_Tmp_948 != 0;
    assume out_Tmp_948 > 0;
    out_Tmp_933 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_995;
    out_tx_6 := out_tx_6 + 4;
    goto anon213_Else_dummy;

  anon213_Else_dummy:
    call {:si_unique_call 3190} {:si_old_unique_call 1} out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := CyzTxStart#0_loop_L253(out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, in_Extension_59, out_tx_6, out_Tmp_995);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := in_Tmp_943, in_Tmp_978, in_tx_6, in_amount1;
    goto L242, exit;

  exit:
    return;

  L242:
    goto anon188_Else;

  anon188_Else:
    assume {:partition} out_amount1 != 0;
    goto anon189_Else;

  anon189_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_978 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_943;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon189_Else_dummy;

  anon189_Else_dummy:
    call {:si_unique_call 3191} {:si_old_unique_call 1} out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := CyzTxStart#0_loop_L242(out_Tmp_943, in_Extension_59, out_Tmp_978, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int)
{

  entry:
    out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := in_Tmp_963, in_Tmp_964, in_numOfBytes, in_tx_6, in_Tmp_986;
    goto L278, exit;

  exit:
    return;

  L278:
    out_Tmp_963 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon216_Else;

  anon216_Else:
    assume {:partition} out_Tmp_963 != 0;
    out_Tmp_986 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_964;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon216_Else_dummy;

  anon216_Else_dummy:
    call {:si_unique_call 3192} {:si_old_unique_call 1} out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := CyzTxStart#0_loop_L278(out_Tmp_963, out_Tmp_964, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_986);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#0_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int)
{

  entry:
    out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := in_numOfLongs, in_Tmp_944, in_Tmp_967, in_Tmp_972, in_tx_6, in_Tmp_981;
    goto L277, exit;

  exit:
    return;

  L277:
    out_Tmp_981 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon215_Else;

  anon215_Else:
    assume {:partition} out_Tmp_981 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_967;
    assume {:nonnull} out_Tmp_967 != 0;
    assume out_Tmp_967 > 0;
    out_Tmp_944 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_972;
    out_tx_6 := out_tx_6 + 4;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    call {:si_unique_call 3193} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := CyzTxStart#0_loop_L277(out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, in_Extension_59, out_tx_6, out_Tmp_981);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int)
{

  entry:
    out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := in_Tmp_934, in_Tmp_954, in_numOfBytes, in_tx_6, in_Tmp_984;
    goto L183, exit;

  exit:
    return;

  L183:
    out_Tmp_954 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon207_Else;

  anon207_Else:
    assume {:partition} out_Tmp_954 != 0;
    out_Tmp_934 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_984;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon207_Else_dummy;

  anon207_Else_dummy:
    call {:si_unique_call 3194} {:si_old_unique_call 1} out_Tmp_934, out_Tmp_954, out_numOfBytes, out_tx_6, out_Tmp_984 := CyzTxStart#1_loop_L183(out_Tmp_934, out_Tmp_954, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_984);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L183(in_Tmp_934: int, in_Tmp_954: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_984: int) returns (out_Tmp_934: int, out_Tmp_954: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_984: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int)
{

  entry:
    out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := in_numOfLongs, in_Tmp_939, in_Tmp_950, in_Tmp_961, in_tx_6, in_Tmp_983;
    goto L182, exit;

  exit:
    return;

  L182:
    out_Tmp_950 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon206_Else;

  anon206_Else:
    assume {:partition} out_Tmp_950 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_983;
    assume {:nonnull} out_Tmp_983 != 0;
    assume out_Tmp_983 > 0;
    out_Tmp_961 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_939;
    out_tx_6 := out_tx_6 + 4;
    goto anon206_Else_dummy;

  anon206_Else_dummy:
    call {:si_unique_call 3195} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, out_tx_6, out_Tmp_983 := CyzTxStart#1_loop_L182(out_numOfLongs, out_Tmp_939, out_Tmp_950, out_Tmp_961, in_Extension_59, out_tx_6, out_Tmp_983);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L182(in_numOfLongs: int, in_Tmp_939: int, in_Tmp_950: int, in_Tmp_961: int, in_Extension_59: int, in_tx_6: int, in_Tmp_983: int) returns (out_numOfLongs: int, out_Tmp_939: int, out_Tmp_950: int, out_Tmp_961: int, out_tx_6: int, out_Tmp_983: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := in_Tmp_958, in_Tmp_966, in_tx_6, in_amount1;
    goto L171, exit;

  exit:
    return;

  L171:
    goto anon182_Else;

  anon182_Else:
    assume {:partition} out_amount1 != 0;
    goto anon183_Else;

  anon183_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_958 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_966;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon183_Else_dummy;

  anon183_Else_dummy:
    call {:si_unique_call 3196} {:si_old_unique_call 1} out_Tmp_958, out_Tmp_966, out_tx_6, out_amount1 := CyzTxStart#1_loop_L171(out_Tmp_958, out_Tmp_966, in_Extension_59, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L171(in_Tmp_958: int, in_Tmp_966: int, in_Extension_59: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_958: int, out_Tmp_966: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int)
{

  entry:
    out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := in_Tmp_931, in_Tmp_951, in_Tmp_970, in_numOfBytes, in_tx_6;
    goto L210, exit;

  exit:
    return;

  L210:
    out_Tmp_931 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon209_Else;

  anon209_Else:
    assume {:partition} out_Tmp_931 != 0;
    out_Tmp_970 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_951;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon209_Else_dummy;

  anon209_Else_dummy:
    call {:si_unique_call 3197} {:si_old_unique_call 1} out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, out_tx_6 := CyzTxStart#1_loop_L210(out_Tmp_931, out_Tmp_951, out_Tmp_970, out_numOfBytes, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L210(in_Tmp_931: int, in_Tmp_951: int, in_Tmp_970: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_931: int, out_Tmp_951: int, out_Tmp_970: int, out_numOfBytes: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int)
{

  entry:
    out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := in_numOfLongs, in_Tmp_945, in_Tmp_969, in_Tmp_980, in_tx_6, in_Tmp_991;
    goto L209, exit;

  exit:
    return;

  L209:
    out_Tmp_969 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon208_Else;

  anon208_Else:
    assume {:partition} out_Tmp_969 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_945;
    assume {:nonnull} out_Tmp_945 != 0;
    assume out_Tmp_945 > 0;
    out_Tmp_980 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_991;
    out_tx_6 := out_tx_6 + 4;
    goto anon208_Else_dummy;

  anon208_Else_dummy:
    call {:si_unique_call 3198} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_945, out_Tmp_969, out_Tmp_980, out_tx_6, out_Tmp_991 := CyzTxStart#1_loop_L209(out_numOfLongs, out_Tmp_945, out_Tmp_969, in_Extension_59, out_Tmp_980, out_tx_6, out_Tmp_991);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L209(in_numOfLongs: int, in_Tmp_945: int, in_Tmp_969: int, in_Extension_59: int, in_Tmp_980: int, in_tx_6: int, in_Tmp_991: int) returns (out_numOfLongs: int, out_Tmp_945: int, out_Tmp_969: int, out_Tmp_980: int, out_tx_6: int, out_Tmp_991: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int)
{

  entry:
    out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := in_Tmp_953, in_Tmp_973, in_numOfBytes, in_Tmp_974, in_tx_6;
    goto L254, exit;

  exit:
    return;

  L254:
    out_Tmp_974 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon214_Else;

  anon214_Else:
    assume {:partition} out_Tmp_974 != 0;
    out_Tmp_953 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_973;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon214_Else_dummy;

  anon214_Else_dummy:
    call {:si_unique_call 3199} {:si_old_unique_call 1} out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, out_tx_6 := CyzTxStart#1_loop_L254(out_Tmp_953, out_Tmp_973, out_numOfBytes, out_Tmp_974, in_Extension_59, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L254(in_Tmp_953: int, in_Tmp_973: int, in_numOfBytes: int, in_Tmp_974: int, in_Extension_59: int, in_tx_6: int) returns (out_Tmp_953: int, out_Tmp_973: int, out_numOfBytes: int, out_Tmp_974: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int)
{

  entry:
    out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := in_Tmp_933, in_numOfLongs, in_Tmp_937, in_Tmp_948, in_tx_6, in_Tmp_995;
    goto L253, exit;

  exit:
    return;

  L253:
    out_Tmp_937 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon213_Else;

  anon213_Else:
    assume {:partition} out_Tmp_937 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_948;
    assume {:nonnull} out_Tmp_948 != 0;
    assume out_Tmp_948 > 0;
    out_Tmp_933 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_995;
    out_tx_6 := out_tx_6 + 4;
    goto anon213_Else_dummy;

  anon213_Else_dummy:
    call {:si_unique_call 3200} {:si_old_unique_call 1} out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, out_tx_6, out_Tmp_995 := CyzTxStart#1_loop_L253(out_Tmp_933, out_numOfLongs, out_Tmp_937, out_Tmp_948, in_Extension_59, out_tx_6, out_Tmp_995);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L253(in_Tmp_933: int, in_numOfLongs: int, in_Tmp_937: int, in_Tmp_948: int, in_Extension_59: int, in_tx_6: int, in_Tmp_995: int) returns (out_Tmp_933: int, out_numOfLongs: int, out_Tmp_937: int, out_Tmp_948: int, out_tx_6: int, out_Tmp_995: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := in_Tmp_943, in_Tmp_978, in_tx_6, in_amount1;
    goto L242, exit;

  exit:
    return;

  L242:
    goto anon188_Else;

  anon188_Else:
    assume {:partition} out_amount1 != 0;
    goto anon189_Else;

  anon189_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_978 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_943;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon189_Else_dummy;

  anon189_Else_dummy:
    call {:si_unique_call 3201} {:si_old_unique_call 1} out_Tmp_943, out_Tmp_978, out_tx_6, out_amount1 := CyzTxStart#1_loop_L242(out_Tmp_943, in_Extension_59, out_Tmp_978, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L242(in_Tmp_943: int, in_Extension_59: int, in_Tmp_978: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_943: int, out_Tmp_978: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int)
{

  entry:
    out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := in_Tmp_963, in_Tmp_964, in_numOfBytes, in_tx_6, in_Tmp_986;
    goto L278, exit;

  exit:
    return;

  L278:
    out_Tmp_963 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon216_Else;

  anon216_Else:
    assume {:partition} out_Tmp_963 != 0;
    out_Tmp_986 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_964;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    goto anon216_Else_dummy;

  anon216_Else_dummy:
    call {:si_unique_call 3202} {:si_old_unique_call 1} out_Tmp_963, out_Tmp_964, out_numOfBytes, out_tx_6, out_Tmp_986 := CyzTxStart#1_loop_L278(out_Tmp_963, out_Tmp_964, out_numOfBytes, in_Extension_59, out_tx_6, out_Tmp_986);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L278(in_Tmp_963: int, in_Tmp_964: int, in_numOfBytes: int, in_Extension_59: int, in_tx_6: int, in_Tmp_986: int) returns (out_Tmp_963: int, out_Tmp_964: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_986: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzTxStart#1_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int)
{

  entry:
    out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := in_numOfLongs, in_Tmp_944, in_Tmp_967, in_Tmp_972, in_tx_6, in_Tmp_981;
    goto L277, exit;

  exit:
    return;

  L277:
    out_Tmp_981 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon215_Else;

  anon215_Else:
    assume {:partition} out_Tmp_981 != 0;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_967;
    assume {:nonnull} out_Tmp_967 != 0;
    assume out_Tmp_967 > 0;
    out_Tmp_944 := out_tx_6;
    assume {:nonnull} in_Extension_59 != 0;
    assume in_Extension_59 > 0;
    havoc out_Tmp_972;
    out_tx_6 := out_tx_6 + 4;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    call {:si_unique_call 3203} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, out_tx_6, out_Tmp_981 := CyzTxStart#1_loop_L277(out_numOfLongs, out_Tmp_944, out_Tmp_967, out_Tmp_972, in_Extension_59, out_tx_6, out_Tmp_981);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L277(in_numOfLongs: int, in_Tmp_944: int, in_Tmp_967: int, in_Tmp_972: int, in_Extension_59: int, in_tx_6: int, in_Tmp_981: int) returns (out_numOfLongs: int, out_Tmp_944: int, out_Tmp_967: int, out_Tmp_972: int, out_tx_6: int, out_Tmp_981: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc#0_loop_L164(in_Tmp_1010: int, in_rx_4: int, in_rx_5: int, in_rxchar_1: int, in_Tmp_1018: int, in_pppflag: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1034: int) returns (out_Tmp_1010: int, out_rx_4: int, out_rxchar_1: int, out_Tmp_1018: int, out_pppflag: int, out_Tmp_1034: int)
{

  entry:
    out_Tmp_1010, out_rx_4, out_rxchar_1, out_Tmp_1018, out_pppflag, out_Tmp_1034 := in_Tmp_1010, in_rx_4, in_rxchar_1, in_Tmp_1018, in_pppflag, in_Tmp_1034;
    goto L164, exit;

  exit:
    return;

  L164:
    goto anon183_Else;

  anon183_Else:
    assume {:partition} out_rx_4 != in_rx_5;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon184_Else;

  anon184_Else:
    out_Tmp_1010 := out_rx_4;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1034;
    call {:si_unique_call 3204} out_rxchar_1 := corral_nondet();
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_rxchar_1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} out_rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L183;

  L183:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1018;
    goto anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_rx_4 == in_rx_6 - 1;
    out_rx_4 := 0;
    goto L197;

  L197:
    goto anon194_Then;

  anon194_Then:
    assume {:partition} out_pppflag != 2;
    goto anon194_Then_dummy;

  anon194_Then_dummy:
    call {:si_unique_call 3207} {:si_old_unique_call 1} out_Tmp_1010, out_rx_4, out_rxchar_1, out_Tmp_1018, out_pppflag, out_Tmp_1034 := CyzPollingDpc#0_loop_L164(out_Tmp_1010, out_rx_4, in_rx_5, out_rxchar_1, out_Tmp_1018, out_pppflag, in_rx_6, in_Extension_62, out_Tmp_1034);
    return;

  anon193_Then:
    assume {:partition} out_rx_4 != in_rx_6 - 1;
    out_rx_4 := out_rx_4 + 1;
    goto L197;

  anon190_Then:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L194;

  anon191_Then:
    goto L194;

  anon188_Then:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L183;

  anon189_Then:
    goto L180;

  L180:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_rxchar_1 == 126;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_pppflag != 0;
    out_pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon201_Then;

  anon201_Then:
    goto L200;

  L200:
    call {:si_unique_call 3205} CyzPutChar#0(in_Extension_62, out_rxchar_1);
    goto anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    call {:si_unique_call 3206} CyzPutChar#0(in_Extension_62, 0);
    goto anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L194;

  anon203_Then:
    goto L194;

  anon202_Then:
    goto L194;

  anon197_Then:
    goto L200;

  anon200_Then:
    assume {:partition} out_pppflag == 0;
    out_pppflag := 1;
    goto L206;

  anon199_Then:
    goto L206;

  anon236_Then:
    assume {:partition} out_rxchar_1 != 126;
    goto L206;

  anon198_Then:
    goto L206;

  anon196_Then:
    goto L206;

  anon195_Then:
    goto L204;

  anon187_Then:
    goto L200;

  anon186_Then:
    goto L180;

  anon230_Then:
    assume {:partition} out_rxchar_1 == 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L194;

  anon185_Then:
    goto L179;
}



procedure {:LoopProcedure} CyzPollingDpc#0_loop_L164(in_Tmp_1010: int, in_rx_4: int, in_rx_5: int, in_rxchar_1: int, in_Tmp_1018: int, in_pppflag: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1034: int) returns (out_Tmp_1010: int, out_rx_4: int, out_rxchar_1: int, out_Tmp_1018: int, out_pppflag: int, out_Tmp_1034: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_pppflag == 2 || out_pppflag == 1 || out_pppflag == in_pppflag;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc#0_loop_L43(in_Tmp_1009: int, in_Dispatch: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_Tmp_1016: int, in_Tmp_1022: int, in_Tmp_1024: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_vslice_dummy_var_722: int, in_vslice_dummy_var_723: int, in_vslice_dummy_var_724: int, in_vslice_dummy_var_725: int, in_vslice_dummy_var_726: int, in_vslice_dummy_var_729: int) returns (out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_Tmp_1016: int, out_Tmp_1022: int, out_Tmp_1024: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_loc: int, out_dbExtension: int, out_vslice_dummy_var_722: int, out_vslice_dummy_var_723: int, out_vslice_dummy_var_724: int, out_vslice_dummy_var_725: int, out_vslice_dummy_var_726: int, out_vslice_dummy_var_729: int)
{
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;

  entry:
    out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_729 := in_Tmp_1011, in_Tmp_1012, in_Tmp_1014, in_Tmp_1016, in_Tmp_1022, in_Tmp_1024, in_Tmp_1028, in_Tmp_1030, in_Tmp_1031, in_Tmp_1032, in_qu, in_fwcmd, in_dbChannel, in_Tmp_1033, in_loc, in_dbExtension, in_vslice_dummy_var_722, in_vslice_dummy_var_723, in_vslice_dummy_var_724, in_vslice_dummy_var_725, in_vslice_dummy_var_726, in_vslice_dummy_var_729;
    goto L43, exit;

  exit:
    return;

  L43:
    goto anon167_Else;

  anon167_Else:
    assume {:partition} out_qu != in_qu_1;
    goto anon168_Then;

  anon168_Then:
    assume {:partition} 640 > out_qu;
    goto anon169_Else;

  anon169_Else:
    assume {:partition} in_qu_1 < 640;
    out_Tmp_1033 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1024;
    call {:si_unique_call 3213} out_loc := corral_nondet();
    out_Tmp_1031 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1016;
    call {:si_unique_call 3214} out_dbChannel := corral_nondet();
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon170_Else;

  anon170_Else:
    out_Tmp_1030 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1011;
    call {:si_unique_call 3212} out_fwcmd := corral_nondet();
    out_Tmp_1022 := out_dbChannel;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    havoc out_dbExtension;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} out_dbExtension == 0;
    goto L132;

  L132:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} out_qu == 639;
    out_qu := 0;
    goto anon178_Else_dummy;

  anon178_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 3221} {:si_old_unique_call 1} out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_729 := CyzPollingDpc#0_loop_L43(in_Tmp_1009, in_Dispatch, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, in_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, in_qu_1, out_loc, out_dbExtension, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_729);
    return;

  anon178_Then:
    assume {:partition} out_qu != 639;
    out_qu := out_qu + 1;
    goto anon178_Then_dummy;

  anon178_Then_dummy:
    goto L_BAF_1;

  anon240_Then:
    assume {:partition} out_dbExtension != 0;
    call {:si_unique_call 3211} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} out_loc != 3;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_loc != 66;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} out_loc != 69;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} out_loc != 70;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} out_loc != 96;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} out_loc != 97;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} out_loc != 98;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} out_loc != 99;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} out_loc != 100;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} out_loc != 112;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} out_loc != 113;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} out_loc != 114;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} out_loc != 115;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} out_loc != 132;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} out_loc != 133;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} out_loc != 134;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} out_loc != 135;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} out_loc != 136;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} out_loc != 144;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} out_loc == 145;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1014;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_572;
    havoc vslice_dummy_var_573;
    havoc vslice_dummy_var_574;
    call {:si_unique_call 3209} CyzLogError(vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, in_Tmp_1009, 0, 0, 0, out_Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 3208} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon208_Then:
    assume {:partition} out_loc != 145;
    goto L76;

  anon209_Then:
    assume {:partition} out_loc == 144;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1012;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_575;
    havoc vslice_dummy_var_576;
    havoc vslice_dummy_var_577;
    call {:si_unique_call 3210} CyzLogError(vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577, in_Tmp_1013, 0, 0, 0, out_Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon210_Then:
    assume {:partition} out_loc == 136;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 3220} out_vslice_dummy_var_722 := CyzProcessLSR#0(out_dbExtension, 2);
    goto anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon177_Then:
    goto L76;

  anon211_Then:
    assume {:partition} out_loc == 135;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 3219} out_vslice_dummy_var_723 := CyzProcessLSR#0(out_dbExtension, 2);
    goto anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon176_Then:
    goto L76;

  anon212_Then:
    assume {:partition} out_loc == 134;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 3218} out_vslice_dummy_var_724 := CyzProcessLSR#0(out_dbExtension, 8);
    goto anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon175_Then:
    goto L76;

  anon213_Then:
    assume {:partition} out_loc == 133;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 3217} out_vslice_dummy_var_725 := CyzProcessLSR#0(out_dbExtension, 4);
    goto anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon174_Then:
    goto L76;

  anon214_Then:
    assume {:partition} out_loc == 132;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 3216} out_vslice_dummy_var_726 := CyzProcessLSR#0(out_dbExtension, 16);
    goto anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon173_Then:
    goto L76;

  anon215_Then:
    assume {:partition} out_loc == 115;
    goto L87;

  L87:
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    out_Tmp_1032 := out_loc;
    call {:si_unique_call 3215} out_vslice_dummy_var_729 := CyzHandleModemUpdate#0(out_dbExtension, 0, out_Tmp_1032);
    goto anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon172_Then:
    goto L76;

  anon216_Then:
    assume {:partition} out_loc == 114;
    goto L87;

  anon217_Then:
    assume {:partition} out_loc == 113;
    goto L87;

  anon218_Then:
    assume {:partition} out_loc == 112;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L87;

  anon219_Then:
    assume {:partition} out_loc == 100;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon220_Then:
    assume {:partition} out_loc == 99;
    goto L76;

  anon221_Then:
    assume {:partition} out_loc == 98;
    goto L76;

  anon222_Then:
    assume {:partition} out_loc == 97;
    goto L76;

  anon223_Then:
    assume {:partition} out_loc == 96;
    goto L76;

  anon224_Then:
    assume {:partition} out_loc == 70;
    goto L76;

  anon225_Then:
    assume {:partition} out_loc == 69;
    goto L76;

  anon226_Then:
    assume {:partition} out_loc == 66;
    goto L76;

  anon171_Then:
    assume {:partition} out_loc == 3;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;
}



procedure {:LoopProcedure} CyzPollingDpc#0_loop_L43(in_Tmp_1009: int, in_Dispatch: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_Tmp_1016: int, in_Tmp_1022: int, in_Tmp_1024: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_vslice_dummy_var_722: int, in_vslice_dummy_var_723: int, in_vslice_dummy_var_724: int, in_vslice_dummy_var_725: int, in_vslice_dummy_var_726: int, in_vslice_dummy_var_729: int) returns (out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_Tmp_1016: int, out_Tmp_1022: int, out_Tmp_1024: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_loc: int, out_dbExtension: int, out_vslice_dummy_var_722: int, out_vslice_dummy_var_723: int, out_vslice_dummy_var_724: int, out_vslice_dummy_var_725: int, out_vslice_dummy_var_726: int, out_vslice_dummy_var_729: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc#0_loop_L25(in_Tmp_1009: int, in_Tmp_1010: int, in_Dispatch: int, in_rx_4: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_channel_1: int, in_rx_5: int, in_Tmp_1016: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1020: int, in_pppflag: int, in_Tmp_1022: int, in_Tmp_1023: int, in_Tmp_1024: int, in_sdv_822: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_Tmp_1034: int, in_vslice_dummy_var_722: int, in_vslice_dummy_var_723: int, in_vslice_dummy_var_724: int, in_vslice_dummy_var_725: int, in_vslice_dummy_var_726: int, in_vslice_dummy_var_727: int, in_vslice_dummy_var_728: int, in_vslice_dummy_var_729: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_channel_1: int, out_rx_5: int, out_Tmp_1016: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1020: int, out_pppflag: int, out_Tmp_1022: int, out_Tmp_1023: int, out_Tmp_1024: int, out_sdv_822: int, out_rx_6: int, out_Extension_62: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_pt_1: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_qu_1: int, out_loc: int, out_dbExtension: int, out_Tmp_1034: int, out_vslice_dummy_var_722: int, out_vslice_dummy_var_723: int, out_vslice_dummy_var_724: int, out_vslice_dummy_var_725: int, out_vslice_dummy_var_726: int, out_vslice_dummy_var_727: int, out_vslice_dummy_var_728: int, out_vslice_dummy_var_729: int)
{
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;

  entry:
    out_Tmp_1010, out_rx_4, out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_822, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_727, out_vslice_dummy_var_728, out_vslice_dummy_var_729 := in_Tmp_1010, in_rx_4, in_Tmp_1011, in_Tmp_1012, in_Tmp_1014, in_channel_1, in_rx_5, in_Tmp_1016, in_rxchar_1, in_Tmp_1018, in_Tmp_1020, in_pppflag, in_Tmp_1022, in_Tmp_1023, in_Tmp_1024, in_sdv_822, in_rx_6, in_Extension_62, in_Tmp_1028, in_Tmp_1030, in_Tmp_1031, in_Tmp_1032, in_pt_1, in_qu, in_fwcmd, in_dbChannel, in_Tmp_1033, in_qu_1, in_loc, in_dbExtension, in_Tmp_1034, in_vslice_dummy_var_722, in_vslice_dummy_var_723, in_vslice_dummy_var_724, in_vslice_dummy_var_725, in_vslice_dummy_var_726, in_vslice_dummy_var_727, in_vslice_dummy_var_728, in_vslice_dummy_var_729;
    goto L25, exit;

  exit:
    return;

  L25:
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon166_Else;

  anon166_Else:
    out_Tmp_1020 := out_channel_1;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1023;
    assume {:nonnull} out_Tmp_1023 != 0;
    assume out_Tmp_1023 > 0;
    havoc out_Extension_62;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} out_Extension_62 == 0;
    goto L157;

  L157:
    out_channel_1 := out_channel_1 + 1;
    goto L157_dummy;

  L157_dummy:
    call {:si_unique_call 3251} {:si_old_unique_call 1} out_Tmp_1010, out_rx_4, out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_822, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_727, out_vslice_dummy_var_728, out_vslice_dummy_var_729 := CyzPollingDpc#0_loop_L25(in_Tmp_1009, out_Tmp_1010, in_Dispatch, out_rx_4, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_822, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_727, out_vslice_dummy_var_728, out_vslice_dummy_var_729);
    return;

  anon227_Then:
    assume {:partition} out_Extension_62 != 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_pt_1;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} out_pt_1 == 0;
    goto L157;

  anon228_Then:
    assume {:partition} out_pt_1 != 0;
    call {:si_unique_call 3228} out_qu := corral_nondet();
    call {:si_unique_call 3229} out_qu_1 := corral_nondet();
    goto L43;

  L43:
    call {:si_unique_call 3227} out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_729 := CyzPollingDpc#0_loop_L43(in_Tmp_1009, in_Dispatch, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_vslice_dummy_var_722, out_vslice_dummy_var_723, out_vslice_dummy_var_724, out_vslice_dummy_var_725, out_vslice_dummy_var_726, out_vslice_dummy_var_729);
    goto L43_last;

  L43_last:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} out_qu != out_qu_1;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} out_qu >= 640;
    out_qu := 0;
    goto L44;

  L44:
    call {:si_unique_call 3224} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 3225} out_rx_5 := corral_nondet();
    call {:si_unique_call 3226} out_rx_4 := corral_nondet();
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_rx_6;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} out_rx_5 >= out_rx_6;
    goto L150;

  L150:
    call {:si_unique_call 3222} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon229_Then:
    assume {:partition} out_rx_6 > out_rx_5;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} out_rx_4 < out_rx_6;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} out_rx_5 != out_rx_4;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    out_pppflag := 0;
    goto L164;

  L164:
    call {:si_unique_call 3243} out_Tmp_1010, out_rx_4, out_rxchar_1, out_Tmp_1018, out_pppflag, out_Tmp_1034 := CyzPollingDpc#0_loop_L164(out_Tmp_1010, out_rx_4, out_rx_5, out_rxchar_1, out_Tmp_1018, out_pppflag, out_rx_6, out_Extension_62, out_Tmp_1034);
    goto L164_last;

  L164_last:
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_rx_4 != out_rx_5;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    out_Tmp_1010 := out_rx_4;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1034;
    call {:si_unique_call 3244} out_rxchar_1 := corral_nondet();
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_rxchar_1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} out_rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L183;

  L183:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1018;
    goto anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_rx_4 == out_rx_6 - 1;
    out_rx_4 := 0;
    goto L197;

  L197:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_pppflag == 2;
    goto L165;

  L165:
    goto L159;

  L159:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 3249} out_sdv_822 := CyzAmountInTxBuffer(out_Extension_62);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} out_sdv_822 == 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 3250} CyzQueueCompleteWrite#0(out_Extension_62);
    goto anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  L228:
    call {:si_unique_call 3223} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon207_Then:
    assume {:partition} out_sdv_822 != 0;
    goto L228;

  anon206_Then:
    goto L236;

  L236:
    call {:si_unique_call 3248} out_vslice_dummy_var_728 := CyzTxStart#0(out_Extension_62);
    goto anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon205_Then:
    goto L236;

  anon204_Then:
    call {:si_unique_call 3247} out_vslice_dummy_var_727 := CyzTxStart#0(out_Extension_62);
    goto anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon181_Then:
    goto L228;

  anon194_Then:
    assume {:partition} out_pppflag != 2;
    assume false;
    return;

  anon193_Then:
    assume {:partition} out_rx_4 != out_rx_6 - 1;
    out_rx_4 := out_rx_4 + 1;
    goto L197;

  anon190_Then:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L194;

  anon191_Then:
    goto L194;

  anon188_Then:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L183;

  anon189_Then:
    goto L180;

  L180:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_rxchar_1 == 126;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_pppflag != 0;
    out_pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon201_Then;

  anon201_Then:
    goto L200;

  L200:
    call {:si_unique_call 3245} CyzPutChar#0(out_Extension_62, out_rxchar_1);
    goto anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    call {:si_unique_call 3246} CyzPutChar#0(out_Extension_62, 0);
    goto anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L194;

  anon203_Then:
    goto L194;

  anon202_Then:
    goto L194;

  anon197_Then:
    goto L200;

  anon200_Then:
    assume {:partition} out_pppflag == 0;
    out_pppflag := 1;
    goto L206;

  anon199_Then:
    goto L206;

  anon236_Then:
    assume {:partition} out_rxchar_1 != 126;
    goto L206;

  anon198_Then:
    goto L206;

  anon196_Then:
    goto L206;

  anon195_Then:
    goto L204;

  anon187_Then:
    goto L200;

  anon186_Then:
    goto L180;

  anon230_Then:
    assume {:partition} out_rxchar_1 == 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L194;

  anon185_Then:
    goto L179;

  anon184_Then:
    goto L165;

  anon183_Then:
    assume {:partition} out_rx_4 == out_rx_5;
    goto L165;

  anon182_Then:
    out_rx_4 := out_rx_5;
    goto L165;

  anon180_Then:
    assume {:partition} out_rx_5 == out_rx_4;
    goto L159;

  anon179_Then:
    assume {:partition} out_rx_6 <= out_rx_4;
    goto L150;

  anon168_Then:
    assume {:partition} 640 > out_qu;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} out_qu_1 < 640;
    out_Tmp_1033 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1024;
    call {:si_unique_call 3235} out_loc := corral_nondet();
    out_Tmp_1031 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1016;
    call {:si_unique_call 3236} out_dbChannel := corral_nondet();
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    out_Tmp_1030 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1011;
    call {:si_unique_call 3234} out_fwcmd := corral_nondet();
    out_Tmp_1022 := out_dbChannel;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    havoc out_dbExtension;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} out_dbExtension == 0;
    goto L132;

  L132:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} out_qu == 639;
    out_qu := 0;
    assume false;
    return;

  anon178_Then:
    assume {:partition} out_qu != 639;
    out_qu := out_qu + 1;
    assume false;
    return;

  anon240_Then:
    assume {:partition} out_dbExtension != 0;
    call {:si_unique_call 3233} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} out_loc != 3;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_loc != 66;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} out_loc != 69;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} out_loc != 70;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} out_loc != 96;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} out_loc != 97;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} out_loc != 98;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} out_loc != 99;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} out_loc != 100;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} out_loc != 112;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} out_loc != 113;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} out_loc != 114;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} out_loc != 115;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} out_loc != 132;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} out_loc != 133;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} out_loc != 134;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} out_loc != 135;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} out_loc != 136;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} out_loc != 144;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} out_loc == 145;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1014;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_578;
    havoc vslice_dummy_var_579;
    havoc vslice_dummy_var_580;
    call {:si_unique_call 3231} CyzLogError(vslice_dummy_var_578, vslice_dummy_var_579, vslice_dummy_var_580, in_Tmp_1009, 0, 0, 0, out_Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 3230} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon208_Then:
    assume {:partition} out_loc != 145;
    goto L76;

  anon209_Then:
    assume {:partition} out_loc == 144;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1012;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_581;
    havoc vslice_dummy_var_582;
    havoc vslice_dummy_var_583;
    call {:si_unique_call 3232} CyzLogError(vslice_dummy_var_581, vslice_dummy_var_582, vslice_dummy_var_583, in_Tmp_1013, 0, 0, 0, out_Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon210_Then:
    assume {:partition} out_loc == 136;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 3242} out_vslice_dummy_var_722 := CyzProcessLSR#0(out_dbExtension, 2);
    goto anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon177_Then:
    goto L76;

  anon211_Then:
    assume {:partition} out_loc == 135;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 3241} out_vslice_dummy_var_723 := CyzProcessLSR#0(out_dbExtension, 2);
    goto anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon176_Then:
    goto L76;

  anon212_Then:
    assume {:partition} out_loc == 134;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 3240} out_vslice_dummy_var_724 := CyzProcessLSR#0(out_dbExtension, 8);
    goto anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon175_Then:
    goto L76;

  anon213_Then:
    assume {:partition} out_loc == 133;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 3239} out_vslice_dummy_var_725 := CyzProcessLSR#0(out_dbExtension, 4);
    goto anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon174_Then:
    goto L76;

  anon214_Then:
    assume {:partition} out_loc == 132;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 3238} out_vslice_dummy_var_726 := CyzProcessLSR#0(out_dbExtension, 16);
    goto anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon173_Then:
    goto L76;

  anon215_Then:
    assume {:partition} out_loc == 115;
    goto L87;

  L87:
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    out_Tmp_1032 := out_loc;
    call {:si_unique_call 3237} out_vslice_dummy_var_729 := CyzHandleModemUpdate#0(out_dbExtension, 0, out_Tmp_1032);
    goto anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon172_Then:
    goto L76;

  anon216_Then:
    assume {:partition} out_loc == 114;
    goto L87;

  anon217_Then:
    assume {:partition} out_loc == 113;
    goto L87;

  anon218_Then:
    assume {:partition} out_loc == 112;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L87;

  anon219_Then:
    assume {:partition} out_loc == 100;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon220_Then:
    assume {:partition} out_loc == 99;
    goto L76;

  anon221_Then:
    assume {:partition} out_loc == 98;
    goto L76;

  anon222_Then:
    assume {:partition} out_loc == 97;
    goto L76;

  anon223_Then:
    assume {:partition} out_loc == 96;
    goto L76;

  anon224_Then:
    assume {:partition} out_loc == 70;
    goto L76;

  anon225_Then:
    assume {:partition} out_loc == 69;
    goto L76;

  anon226_Then:
    assume {:partition} out_loc == 66;
    goto L76;

  anon171_Then:
    assume {:partition} out_loc == 3;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon170_Then:
    goto L44;

  anon169_Then:
    assume {:partition} 640 <= out_qu_1;
    goto L44;

  anon167_Then:
    assume {:partition} out_qu == out_qu_1;
    goto L44;
}



procedure {:LoopProcedure} CyzPollingDpc#0_loop_L25(in_Tmp_1009: int, in_Tmp_1010: int, in_Dispatch: int, in_rx_4: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_channel_1: int, in_rx_5: int, in_Tmp_1016: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1020: int, in_pppflag: int, in_Tmp_1022: int, in_Tmp_1023: int, in_Tmp_1024: int, in_sdv_822: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_Tmp_1034: int, in_vslice_dummy_var_722: int, in_vslice_dummy_var_723: int, in_vslice_dummy_var_724: int, in_vslice_dummy_var_725: int, in_vslice_dummy_var_726: int, in_vslice_dummy_var_727: int, in_vslice_dummy_var_728: int, in_vslice_dummy_var_729: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_channel_1: int, out_rx_5: int, out_Tmp_1016: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1020: int, out_pppflag: int, out_Tmp_1022: int, out_Tmp_1023: int, out_Tmp_1024: int, out_sdv_822: int, out_rx_6: int, out_Extension_62: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_pt_1: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_qu_1: int, out_loc: int, out_dbExtension: int, out_Tmp_1034: int, out_vslice_dummy_var_722: int, out_vslice_dummy_var_723: int, out_vslice_dummy_var_724: int, out_vslice_dummy_var_725: int, out_vslice_dummy_var_726: int, out_vslice_dummy_var_727: int, out_vslice_dummy_var_728: int, out_vslice_dummy_var_729: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_pppflag == 2 || out_pppflag == 1 || out_pppflag == 0 || out_pppflag == in_pppflag;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc#1_loop_L164(in_Tmp_1010: int, in_rx_4: int, in_rx_5: int, in_Tmp_1015: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_pppflag: int, in_rx_6: int, in_Extension_62: int, in_sdv_827: int, in_Tmp_1034: int, in_vslice_dummy_var_739: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1015: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_pppflag: int, out_sdv_827: int, out_Tmp_1034: int, out_vslice_dummy_var_739: int)
{
  var vslice_dummy_var_584: int;

  entry:
    out_Tmp_1010, out_rx_4, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_sdv_827, out_Tmp_1034, out_vslice_dummy_var_739 := in_Tmp_1010, in_rx_4, in_Tmp_1015, in_rxchar_1, in_Tmp_1018, in_Tmp_1019, in_pppflag, in_sdv_827, in_Tmp_1034, in_vslice_dummy_var_739;
    goto L164, exit;

  exit:
    return;

  L164:
    goto anon183_Else;

  anon183_Else:
    assume {:partition} out_rx_4 != in_rx_5;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon184_Else;

  anon184_Else:
    out_Tmp_1010 := out_rx_4;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1034;
    call {:si_unique_call 3252} out_rxchar_1 := corral_nondet();
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_rxchar_1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} out_rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L183;

  L183:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1018;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_rx_4 == in_rx_6 - 1;
    out_rx_4 := 0;
    goto L197;

  L197:
    goto anon194_Then;

  anon194_Then:
    assume {:partition} out_pppflag != 2;
    goto anon194_Then_dummy;

  anon194_Then_dummy:
    call {:si_unique_call 3257} {:si_old_unique_call 1} out_Tmp_1010, out_rx_4, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_sdv_827, out_Tmp_1034, out_vslice_dummy_var_739 := CyzPollingDpc#1_loop_L164(out_Tmp_1010, out_rx_4, in_rx_5, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, in_rx_6, in_Extension_62, out_sdv_827, out_Tmp_1034, out_vslice_dummy_var_739);
    return;

  anon193_Then:
    assume {:partition} out_rx_4 != in_rx_6 - 1;
    out_rx_4 := out_rx_4 + 1;
    goto L197;

  anon231_Then:
    assume {:partition} out_Tmp_1018 == 192;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    call {:si_unique_call 3256} out_sdv_827 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(in_Extension_62), 0, 0, in_Extension_62);
    goto anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} out_sdv_827 == 0;
    goto L194;

  anon192_Then:
    assume {:partition} out_sdv_827 != 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L194;

  anon190_Then:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L194;

  anon191_Then:
    goto L194;

  anon188_Then:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L183;

  anon189_Then:
    goto L180;

  L180:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_rxchar_1 == 126;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_pppflag != 0;
    out_pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1015;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} out_Tmp_1015 != 0;
    assume out_Tmp_1015 > 0;
    havoc vslice_dummy_var_584;
    Mem_T.INT4[out_Tmp_1015] := vslice_dummy_var_584;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    havoc out_Tmp_1019;
    assume {:nonnull} out_Tmp_1019 != 0;
    assume out_Tmp_1019 > 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    call {:si_unique_call 3254} out_vslice_dummy_var_739 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(in_Extension_62), 0, 0, in_Extension_62);
    goto anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto L200;

  L200:
    call {:si_unique_call 3253} CyzPutChar#1(in_Extension_62, out_rxchar_1);
    goto anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    call {:si_unique_call 3255} CyzPutChar#1(in_Extension_62, 0);
    goto anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L194;

  anon203_Then:
    goto L194;

  anon202_Then:
    goto L194;

  anon201_Then:
    goto L200;

  anon197_Then:
    goto L200;

  anon200_Then:
    assume {:partition} out_pppflag == 0;
    out_pppflag := 1;
    goto L206;

  anon199_Then:
    goto L206;

  anon236_Then:
    assume {:partition} out_rxchar_1 != 126;
    goto L206;

  anon198_Then:
    goto L206;

  anon196_Then:
    goto L206;

  anon195_Then:
    goto L204;

  anon187_Then:
    goto L200;

  anon186_Then:
    goto L180;

  anon230_Then:
    assume {:partition} out_rxchar_1 == 0;
    assume {:nonnull} in_Extension_62 != 0;
    assume in_Extension_62 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L194;

  anon185_Then:
    goto L179;
}



procedure {:LoopProcedure} CyzPollingDpc#1_loop_L164(in_Tmp_1010: int, in_rx_4: int, in_rx_5: int, in_Tmp_1015: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_pppflag: int, in_rx_6: int, in_Extension_62: int, in_sdv_827: int, in_Tmp_1034: int, in_vslice_dummy_var_739: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1015: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_pppflag: int, out_sdv_827: int, out_Tmp_1034: int, out_vslice_dummy_var_739: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_pppflag == 2 || out_pppflag == 1 || out_pppflag == in_pppflag;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc#1_loop_L43(in_Tmp_1009: int, in_Dispatch: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_Tmp_1016: int, in_Tmp_1022: int, in_Tmp_1024: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_vslice_dummy_var_732: int, in_vslice_dummy_var_733: int, in_vslice_dummy_var_734: int, in_vslice_dummy_var_735: int, in_vslice_dummy_var_736: int, in_vslice_dummy_var_740: int) returns (out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_Tmp_1016: int, out_Tmp_1022: int, out_Tmp_1024: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_loc: int, out_dbExtension: int, out_vslice_dummy_var_732: int, out_vslice_dummy_var_733: int, out_vslice_dummy_var_734: int, out_vslice_dummy_var_735: int, out_vslice_dummy_var_736: int, out_vslice_dummy_var_740: int)
{
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_589: int;
  var vslice_dummy_var_590: int;

  entry:
    out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_740 := in_Tmp_1011, in_Tmp_1012, in_Tmp_1014, in_Tmp_1016, in_Tmp_1022, in_Tmp_1024, in_Tmp_1028, in_Tmp_1030, in_Tmp_1031, in_Tmp_1032, in_qu, in_fwcmd, in_dbChannel, in_Tmp_1033, in_loc, in_dbExtension, in_vslice_dummy_var_732, in_vslice_dummy_var_733, in_vslice_dummy_var_734, in_vslice_dummy_var_735, in_vslice_dummy_var_736, in_vslice_dummy_var_740;
    goto L43, exit;

  exit:
    return;

  L43:
    goto anon167_Else;

  anon167_Else:
    assume {:partition} out_qu != in_qu_1;
    goto anon168_Then;

  anon168_Then:
    assume {:partition} 640 > out_qu;
    goto anon169_Else;

  anon169_Else:
    assume {:partition} in_qu_1 < 640;
    out_Tmp_1033 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1024;
    call {:si_unique_call 3263} out_loc := corral_nondet();
    out_Tmp_1031 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1016;
    call {:si_unique_call 3264} out_dbChannel := corral_nondet();
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon170_Else;

  anon170_Else:
    out_Tmp_1030 := out_qu;
    assume {:nonnull} in_pt_1 != 0;
    assume in_pt_1 > 0;
    havoc out_Tmp_1011;
    call {:si_unique_call 3262} out_fwcmd := corral_nondet();
    out_Tmp_1022 := out_dbChannel;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    havoc out_dbExtension;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} out_dbExtension == 0;
    goto L132;

  L132:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} out_qu == 639;
    out_qu := 0;
    goto anon178_Else_dummy;

  anon178_Else_dummy:
    goto L_BAF_2;

  L_BAF_2:
    call {:si_unique_call 3271} {:si_old_unique_call 1} out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_740 := CyzPollingDpc#1_loop_L43(in_Tmp_1009, in_Dispatch, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, in_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, in_qu_1, out_loc, out_dbExtension, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_740);
    return;

  anon178_Then:
    assume {:partition} out_qu != 639;
    out_qu := out_qu + 1;
    goto anon178_Then_dummy;

  anon178_Then_dummy:
    goto L_BAF_2;

  anon240_Then:
    assume {:partition} out_dbExtension != 0;
    call {:si_unique_call 3261} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} out_loc != 3;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_loc != 66;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} out_loc != 69;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} out_loc != 70;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} out_loc != 96;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} out_loc != 97;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} out_loc != 98;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} out_loc != 99;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} out_loc != 100;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} out_loc != 112;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} out_loc != 113;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} out_loc != 114;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} out_loc != 115;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} out_loc != 132;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} out_loc != 133;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} out_loc != 134;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} out_loc != 135;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} out_loc != 136;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} out_loc != 144;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} out_loc == 145;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1014;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_585;
    havoc vslice_dummy_var_586;
    havoc vslice_dummy_var_587;
    call {:si_unique_call 3259} CyzLogError(vslice_dummy_var_585, vslice_dummy_var_586, vslice_dummy_var_587, in_Tmp_1009, 0, 0, 0, out_Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 3258} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon208_Then:
    assume {:partition} out_loc != 145;
    goto L76;

  anon209_Then:
    assume {:partition} out_loc == 144;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1012;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_588;
    havoc vslice_dummy_var_589;
    havoc vslice_dummy_var_590;
    call {:si_unique_call 3260} CyzLogError(vslice_dummy_var_588, vslice_dummy_var_589, vslice_dummy_var_590, in_Tmp_1013, 0, 0, 0, out_Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon210_Then:
    assume {:partition} out_loc == 136;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 3270} out_vslice_dummy_var_732 := CyzProcessLSR#1(out_dbExtension, 2);
    goto anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon177_Then:
    goto L76;

  anon211_Then:
    assume {:partition} out_loc == 135;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 3269} out_vslice_dummy_var_733 := CyzProcessLSR#1(out_dbExtension, 2);
    goto anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon176_Then:
    goto L76;

  anon212_Then:
    assume {:partition} out_loc == 134;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 3268} out_vslice_dummy_var_734 := CyzProcessLSR#1(out_dbExtension, 8);
    goto anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon175_Then:
    goto L76;

  anon213_Then:
    assume {:partition} out_loc == 133;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 3267} out_vslice_dummy_var_735 := CyzProcessLSR#1(out_dbExtension, 4);
    goto anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon174_Then:
    goto L76;

  anon214_Then:
    assume {:partition} out_loc == 132;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 3266} out_vslice_dummy_var_736 := CyzProcessLSR#1(out_dbExtension, 16);
    goto anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon173_Then:
    goto L76;

  anon215_Then:
    assume {:partition} out_loc == 115;
    goto L87;

  L87:
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    out_Tmp_1032 := out_loc;
    call {:si_unique_call 3265} out_vslice_dummy_var_740 := CyzHandleModemUpdate#1(out_dbExtension, 0, out_Tmp_1032);
    goto anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon172_Then:
    goto L76;

  anon216_Then:
    assume {:partition} out_loc == 114;
    goto L87;

  anon217_Then:
    assume {:partition} out_loc == 113;
    goto L87;

  anon218_Then:
    assume {:partition} out_loc == 112;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L87;

  anon219_Then:
    assume {:partition} out_loc == 100;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon220_Then:
    assume {:partition} out_loc == 99;
    goto L76;

  anon221_Then:
    assume {:partition} out_loc == 98;
    goto L76;

  anon222_Then:
    assume {:partition} out_loc == 97;
    goto L76;

  anon223_Then:
    assume {:partition} out_loc == 96;
    goto L76;

  anon224_Then:
    assume {:partition} out_loc == 70;
    goto L76;

  anon225_Then:
    assume {:partition} out_loc == 69;
    goto L76;

  anon226_Then:
    assume {:partition} out_loc == 66;
    goto L76;

  anon171_Then:
    assume {:partition} out_loc == 3;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;
}



procedure {:LoopProcedure} CyzPollingDpc#1_loop_L43(in_Tmp_1009: int, in_Dispatch: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_Tmp_1016: int, in_Tmp_1022: int, in_Tmp_1024: int, in_Tmp_1028: int, in_Tmp_1030: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_vslice_dummy_var_732: int, in_vslice_dummy_var_733: int, in_vslice_dummy_var_734: int, in_vslice_dummy_var_735: int, in_vslice_dummy_var_736: int, in_vslice_dummy_var_740: int) returns (out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_Tmp_1016: int, out_Tmp_1022: int, out_Tmp_1024: int, out_Tmp_1028: int, out_Tmp_1030: int, out_Tmp_1031: int, out_Tmp_1032: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_loc: int, out_dbExtension: int, out_vslice_dummy_var_732: int, out_vslice_dummy_var_733: int, out_vslice_dummy_var_734: int, out_vslice_dummy_var_735: int, out_vslice_dummy_var_736: int, out_vslice_dummy_var_740: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyzPollingDpc#1_loop_L25(in_Tmp_1009: int, in_Tmp_1010: int, in_Dispatch: int, in_rx_4: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_channel_1: int, in_rx_5: int, in_Tmp_1015: int, in_Tmp_1016: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_Tmp_1020: int, in_pppflag: int, in_Tmp_1022: int, in_Tmp_1023: int, in_Tmp_1024: int, in_sdv_822: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1028: int, in_Tmp_1030: int, in_sdv_827: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_Tmp_1034: int, in_vslice_dummy_var_732: int, in_vslice_dummy_var_733: int, in_vslice_dummy_var_734: int, in_vslice_dummy_var_735: int, in_vslice_dummy_var_736: int, in_vslice_dummy_var_737: int, in_vslice_dummy_var_738: int, in_vslice_dummy_var_739: int, in_vslice_dummy_var_740: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_channel_1: int, out_rx_5: int, out_Tmp_1015: int, out_Tmp_1016: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_Tmp_1020: int, out_pppflag: int, out_Tmp_1022: int, out_Tmp_1023: int, out_Tmp_1024: int, out_sdv_822: int, out_rx_6: int, out_Extension_62: int, out_Tmp_1028: int, out_Tmp_1030: int, out_sdv_827: int, out_Tmp_1031: int, out_Tmp_1032: int, out_pt_1: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_qu_1: int, out_loc: int, out_dbExtension: int, out_Tmp_1034: int, out_vslice_dummy_var_732: int, out_vslice_dummy_var_733: int, out_vslice_dummy_var_734: int, out_vslice_dummy_var_735: int, out_vslice_dummy_var_736: int, out_vslice_dummy_var_737: int, out_vslice_dummy_var_738: int, out_vslice_dummy_var_739: int, out_vslice_dummy_var_740: int)
{
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_597: int;

  entry:
    out_Tmp_1010, out_rx_4, out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1015, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_822, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_sdv_827, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_737, out_vslice_dummy_var_738, out_vslice_dummy_var_739, out_vslice_dummy_var_740 := in_Tmp_1010, in_rx_4, in_Tmp_1011, in_Tmp_1012, in_Tmp_1014, in_channel_1, in_rx_5, in_Tmp_1015, in_Tmp_1016, in_rxchar_1, in_Tmp_1018, in_Tmp_1019, in_Tmp_1020, in_pppflag, in_Tmp_1022, in_Tmp_1023, in_Tmp_1024, in_sdv_822, in_rx_6, in_Extension_62, in_Tmp_1028, in_Tmp_1030, in_sdv_827, in_Tmp_1031, in_Tmp_1032, in_pt_1, in_qu, in_fwcmd, in_dbChannel, in_Tmp_1033, in_qu_1, in_loc, in_dbExtension, in_Tmp_1034, in_vslice_dummy_var_732, in_vslice_dummy_var_733, in_vslice_dummy_var_734, in_vslice_dummy_var_735, in_vslice_dummy_var_736, in_vslice_dummy_var_737, in_vslice_dummy_var_738, in_vslice_dummy_var_739, in_vslice_dummy_var_740;
    goto L25, exit;

  exit:
    return;

  L25:
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon166_Else;

  anon166_Else:
    out_Tmp_1020 := out_channel_1;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1023;
    assume {:nonnull} out_Tmp_1023 != 0;
    assume out_Tmp_1023 > 0;
    havoc out_Extension_62;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} out_Extension_62 == 0;
    goto L157;

  L157:
    out_channel_1 := out_channel_1 + 1;
    goto L157_dummy;

  L157_dummy:
    call {:si_unique_call 3303} {:si_old_unique_call 1} out_Tmp_1010, out_rx_4, out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1015, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_822, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_sdv_827, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_737, out_vslice_dummy_var_738, out_vslice_dummy_var_739, out_vslice_dummy_var_740 := CyzPollingDpc#1_loop_L25(in_Tmp_1009, out_Tmp_1010, in_Dispatch, out_rx_4, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_channel_1, out_rx_5, out_Tmp_1015, out_Tmp_1016, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_Tmp_1020, out_pppflag, out_Tmp_1022, out_Tmp_1023, out_Tmp_1024, out_sdv_822, out_rx_6, out_Extension_62, out_Tmp_1028, out_Tmp_1030, out_sdv_827, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_Tmp_1034, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_737, out_vslice_dummy_var_738, out_vslice_dummy_var_739, out_vslice_dummy_var_740);
    return;

  anon227_Then:
    assume {:partition} out_Extension_62 != 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_pt_1;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} out_pt_1 == 0;
    goto L157;

  anon228_Then:
    assume {:partition} out_pt_1 != 0;
    call {:si_unique_call 3278} out_qu := corral_nondet();
    call {:si_unique_call 3279} out_qu_1 := corral_nondet();
    goto L43;

  L43:
    call {:si_unique_call 3277} out_Tmp_1011, out_Tmp_1012, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_loc, out_dbExtension, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_740 := CyzPollingDpc#1_loop_L43(in_Tmp_1009, in_Dispatch, out_Tmp_1011, out_Tmp_1012, in_Tmp_1013, out_Tmp_1014, out_Tmp_1016, out_Tmp_1022, out_Tmp_1024, out_Tmp_1028, out_Tmp_1030, out_Tmp_1031, out_Tmp_1032, out_pt_1, out_qu, out_fwcmd, out_dbChannel, out_Tmp_1033, out_qu_1, out_loc, out_dbExtension, out_vslice_dummy_var_732, out_vslice_dummy_var_733, out_vslice_dummy_var_734, out_vslice_dummy_var_735, out_vslice_dummy_var_736, out_vslice_dummy_var_740);
    goto L43_last;

  L43_last:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} out_qu != out_qu_1;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} out_qu >= 640;
    out_qu := 0;
    goto L44;

  L44:
    call {:si_unique_call 3274} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 3275} out_rx_5 := corral_nondet();
    call {:si_unique_call 3276} out_rx_4 := corral_nondet();
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_rx_6;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} out_rx_5 >= out_rx_6;
    goto L150;

  L150:
    call {:si_unique_call 3272} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon229_Then:
    assume {:partition} out_rx_6 > out_rx_5;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} out_rx_4 < out_rx_6;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} out_rx_5 != out_rx_4;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    out_pppflag := 0;
    goto L164;

  L164:
    call {:si_unique_call 3293} out_Tmp_1010, out_rx_4, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_sdv_827, out_Tmp_1034, out_vslice_dummy_var_739 := CyzPollingDpc#1_loop_L164(out_Tmp_1010, out_rx_4, out_rx_5, out_Tmp_1015, out_rxchar_1, out_Tmp_1018, out_Tmp_1019, out_pppflag, out_rx_6, out_Extension_62, out_sdv_827, out_Tmp_1034, out_vslice_dummy_var_739);
    goto L164_last;

  L164_last:
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_rx_4 != out_rx_5;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    out_Tmp_1010 := out_rx_4;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1034;
    call {:si_unique_call 3294} out_rxchar_1 := corral_nondet();
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_rxchar_1;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} out_rxchar_1 != 0;
    goto L179;

  L179:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L183;

  L183:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1018;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} out_Tmp_1018 != 192;
    goto L194;

  L194:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_rx_4 == out_rx_6 - 1;
    out_rx_4 := 0;
    goto L197;

  L197:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_pppflag == 2;
    goto L165;

  L165:
    goto L159;

  L159:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 3301} out_sdv_822 := CyzAmountInTxBuffer(out_Extension_62);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} out_sdv_822 == 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 3302} CyzQueueCompleteWrite#1(out_Extension_62);
    goto anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  L228:
    call {:si_unique_call 3273} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L157;

  anon207_Then:
    assume {:partition} out_sdv_822 != 0;
    goto L228;

  anon206_Then:
    goto L236;

  L236:
    call {:si_unique_call 3300} out_vslice_dummy_var_738 := CyzTxStart#1(out_Extension_62);
    goto anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon205_Then:
    goto L236;

  anon204_Then:
    call {:si_unique_call 3299} out_vslice_dummy_var_737 := CyzTxStart#1(out_Extension_62);
    goto anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto L228;

  anon181_Then:
    goto L228;

  anon194_Then:
    assume {:partition} out_pppflag != 2;
    assume false;
    return;

  anon193_Then:
    assume {:partition} out_rx_4 != out_rx_6 - 1;
    out_rx_4 := out_rx_4 + 1;
    goto L197;

  anon231_Then:
    assume {:partition} out_Tmp_1018 == 192;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 3298} out_sdv_827 := CyzInsertQueueDpc#0(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(out_Extension_62), 0, 0, out_Extension_62);
    goto anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} out_sdv_827 == 0;
    goto L194;

  anon192_Then:
    assume {:partition} out_sdv_827 != 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L194;

  anon190_Then:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L194;

  anon191_Then:
    goto L194;

  anon188_Then:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto L183;

  anon189_Then:
    goto L180;

  L180:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto L204;

  L204:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} out_rxchar_1 == 126;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} out_pppflag != 0;
    out_pppflag := 2;
    goto L206;

  L206:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1015;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Tmp_1015 != 0;
    assume out_Tmp_1015 > 0;
    havoc vslice_dummy_var_597;
    Mem_T.INT4[out_Tmp_1015] := vslice_dummy_var_597;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    havoc out_Tmp_1019;
    assume {:nonnull} out_Tmp_1019 != 0;
    assume out_Tmp_1019 > 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    call {:si_unique_call 3296} out_vslice_dummy_var_739 := CyzInsertQueueDpc#0(CommWaitDpc__CYZ_DEVICE_EXTENSION(out_Extension_62), 0, 0, out_Extension_62);
    goto anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto L200;

  L200:
    call {:si_unique_call 3295} CyzPutChar#1(out_Extension_62, out_rxchar_1);
    goto anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    call {:si_unique_call 3297} CyzPutChar#1(out_Extension_62, 0);
    goto anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L194;

  anon203_Then:
    goto L194;

  anon202_Then:
    goto L194;

  anon201_Then:
    goto L200;

  anon197_Then:
    goto L200;

  anon200_Then:
    assume {:partition} out_pppflag == 0;
    out_pppflag := 1;
    goto L206;

  anon199_Then:
    goto L206;

  anon236_Then:
    assume {:partition} out_rxchar_1 != 126;
    goto L206;

  anon198_Then:
    goto L206;

  anon196_Then:
    goto L206;

  anon195_Then:
    goto L204;

  anon187_Then:
    goto L200;

  anon186_Then:
    goto L180;

  anon230_Then:
    assume {:partition} out_rxchar_1 == 0;
    assume {:nonnull} out_Extension_62 != 0;
    assume out_Extension_62 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto L194;

  anon185_Then:
    goto L179;

  anon184_Then:
    goto L165;

  anon183_Then:
    assume {:partition} out_rx_4 == out_rx_5;
    goto L165;

  anon182_Then:
    out_rx_4 := out_rx_5;
    goto L165;

  anon180_Then:
    assume {:partition} out_rx_5 == out_rx_4;
    goto L159;

  anon179_Then:
    assume {:partition} out_rx_6 <= out_rx_4;
    goto L150;

  anon168_Then:
    assume {:partition} 640 > out_qu;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} out_qu_1 < 640;
    out_Tmp_1033 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1024;
    call {:si_unique_call 3285} out_loc := corral_nondet();
    out_Tmp_1031 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1016;
    call {:si_unique_call 3286} out_dbChannel := corral_nondet();
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    out_Tmp_1030 := out_qu;
    assume {:nonnull} out_pt_1 != 0;
    assume out_pt_1 > 0;
    havoc out_Tmp_1011;
    call {:si_unique_call 3284} out_fwcmd := corral_nondet();
    out_Tmp_1022 := out_dbChannel;
    assume {:nonnull} in_Dispatch != 0;
    assume in_Dispatch > 0;
    havoc out_Tmp_1028;
    assume {:nonnull} out_Tmp_1028 != 0;
    assume out_Tmp_1028 > 0;
    havoc out_dbExtension;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} out_dbExtension == 0;
    goto L132;

  L132:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} out_qu == 639;
    out_qu := 0;
    assume false;
    return;

  anon178_Then:
    assume {:partition} out_qu != 639;
    out_qu := out_qu + 1;
    assume false;
    return;

  anon240_Then:
    assume {:partition} out_dbExtension != 0;
    call {:si_unique_call 3283} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} out_loc != 3;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_loc != 66;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} out_loc != 69;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} out_loc != 70;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} out_loc != 96;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} out_loc != 97;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} out_loc != 98;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} out_loc != 99;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} out_loc != 100;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} out_loc != 112;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} out_loc != 113;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} out_loc != 114;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} out_loc != 115;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} out_loc != 132;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} out_loc != 133;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} out_loc != 134;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} out_loc != 135;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} out_loc != 136;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} out_loc != 144;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} out_loc == 145;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1014;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} in_Tmp_1009 != 0;
    assume in_Tmp_1009 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_591;
    havoc vslice_dummy_var_592;
    havoc vslice_dummy_var_593;
    call {:si_unique_call 3281} CyzLogError(vslice_dummy_var_591, vslice_dummy_var_592, vslice_dummy_var_593, in_Tmp_1009, 0, 0, 0, out_Tmp_1014, 0, -1073475535, 0, 0, 0, 0);
    goto L76;

  L76:
    call {:si_unique_call 3280} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L132;

  anon208_Then:
    assume {:partition} out_loc != 145;
    goto L76;

  anon209_Then:
    assume {:partition} out_loc == 144;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc out_Tmp_1012;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} in_Tmp_1013 != 0;
    assume in_Tmp_1013 > 0;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    havoc vslice_dummy_var_594;
    havoc vslice_dummy_var_595;
    havoc vslice_dummy_var_596;
    call {:si_unique_call 3282} CyzLogError(vslice_dummy_var_594, vslice_dummy_var_595, vslice_dummy_var_596, in_Tmp_1013, 0, 0, 0, out_Tmp_1012, 0, -1073475536, 0, 0, 0, 0);
    goto L76;

  anon210_Then:
    assume {:partition} out_loc == 136;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 3292} out_vslice_dummy_var_732 := CyzProcessLSR#1(out_dbExtension, 2);
    goto anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon177_Then:
    goto L76;

  anon211_Then:
    assume {:partition} out_loc == 135;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 3291} out_vslice_dummy_var_733 := CyzProcessLSR#1(out_dbExtension, 2);
    goto anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon176_Then:
    goto L76;

  anon212_Then:
    assume {:partition} out_loc == 134;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 3290} out_vslice_dummy_var_734 := CyzProcessLSR#1(out_dbExtension, 8);
    goto anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon175_Then:
    goto L76;

  anon213_Then:
    assume {:partition} out_loc == 133;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 3289} out_vslice_dummy_var_735 := CyzProcessLSR#1(out_dbExtension, 4);
    goto anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon174_Then:
    goto L76;

  anon214_Then:
    assume {:partition} out_loc == 132;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 3288} out_vslice_dummy_var_736 := CyzProcessLSR#1(out_dbExtension, 16);
    goto anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon173_Then:
    goto L76;

  anon215_Then:
    assume {:partition} out_loc == 115;
    goto L87;

  L87:
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    out_Tmp_1032 := out_loc;
    call {:si_unique_call 3287} out_vslice_dummy_var_740 := CyzHandleModemUpdate#1(out_dbExtension, 0, out_Tmp_1032);
    goto anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L76;

  anon172_Then:
    goto L76;

  anon216_Then:
    assume {:partition} out_loc == 114;
    goto L87;

  anon217_Then:
    assume {:partition} out_loc == 113;
    goto L87;

  anon218_Then:
    assume {:partition} out_loc == 112;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L87;

  anon219_Then:
    assume {:partition} out_loc == 100;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon220_Then:
    assume {:partition} out_loc == 99;
    goto L76;

  anon221_Then:
    assume {:partition} out_loc == 98;
    goto L76;

  anon222_Then:
    assume {:partition} out_loc == 97;
    goto L76;

  anon223_Then:
    assume {:partition} out_loc == 96;
    goto L76;

  anon224_Then:
    assume {:partition} out_loc == 70;
    goto L76;

  anon225_Then:
    assume {:partition} out_loc == 69;
    goto L76;

  anon226_Then:
    assume {:partition} out_loc == 66;
    goto L76;

  anon171_Then:
    assume {:partition} out_loc == 3;
    assume {:nonnull} out_dbExtension != 0;
    assume out_dbExtension > 0;
    goto L76;

  anon170_Then:
    goto L44;

  anon169_Then:
    assume {:partition} 640 <= out_qu_1;
    goto L44;

  anon167_Then:
    assume {:partition} out_qu == out_qu_1;
    goto L44;
}



procedure {:LoopProcedure} CyzPollingDpc#1_loop_L25(in_Tmp_1009: int, in_Tmp_1010: int, in_Dispatch: int, in_rx_4: int, in_Tmp_1011: int, in_Tmp_1012: int, in_Tmp_1013: int, in_Tmp_1014: int, in_channel_1: int, in_rx_5: int, in_Tmp_1015: int, in_Tmp_1016: int, in_rxchar_1: int, in_Tmp_1018: int, in_Tmp_1019: int, in_Tmp_1020: int, in_pppflag: int, in_Tmp_1022: int, in_Tmp_1023: int, in_Tmp_1024: int, in_sdv_822: int, in_rx_6: int, in_Extension_62: int, in_Tmp_1028: int, in_Tmp_1030: int, in_sdv_827: int, in_Tmp_1031: int, in_Tmp_1032: int, in_pt_1: int, in_qu: int, in_fwcmd: int, in_dbChannel: int, in_Tmp_1033: int, in_qu_1: int, in_loc: int, in_dbExtension: int, in_Tmp_1034: int, in_vslice_dummy_var_732: int, in_vslice_dummy_var_733: int, in_vslice_dummy_var_734: int, in_vslice_dummy_var_735: int, in_vslice_dummy_var_736: int, in_vslice_dummy_var_737: int, in_vslice_dummy_var_738: int, in_vslice_dummy_var_739: int, in_vslice_dummy_var_740: int) returns (out_Tmp_1010: int, out_rx_4: int, out_Tmp_1011: int, out_Tmp_1012: int, out_Tmp_1014: int, out_channel_1: int, out_rx_5: int, out_Tmp_1015: int, out_Tmp_1016: int, out_rxchar_1: int, out_Tmp_1018: int, out_Tmp_1019: int, out_Tmp_1020: int, out_pppflag: int, out_Tmp_1022: int, out_Tmp_1023: int, out_Tmp_1024: int, out_sdv_822: int, out_rx_6: int, out_Extension_62: int, out_Tmp_1028: int, out_Tmp_1030: int, out_sdv_827: int, out_Tmp_1031: int, out_Tmp_1032: int, out_pt_1: int, out_qu: int, out_fwcmd: int, out_dbChannel: int, out_Tmp_1033: int, out_qu_1: int, out_loc: int, out_dbExtension: int, out_Tmp_1034: int, out_vslice_dummy_var_732: int, out_vslice_dummy_var_733: int, out_vslice_dummy_var_734: int, out_vslice_dummy_var_735: int, out_vslice_dummy_var_736: int, out_vslice_dummy_var_737: int, out_vslice_dummy_var_738: int, out_vslice_dummy_var_739: int, out_vslice_dummy_var_740: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_pppflag == 2 || out_pppflag == 1 || out_pppflag == 0 || out_pppflag == in_pppflag;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_1139: int, dup_assertVar: bool);
  modifies alloc, yogi_error, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_1139: int, dup_assertVar: bool)
{

  start:
    call Tmp_1139, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


