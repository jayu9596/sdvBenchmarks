var {:scalar} alloc: int;

var {:scalar} sdv_irql_previous_5: int;

var {:scalar} sdv_irql_previous_2: int;

var {:scalar} sdv_irql_current: int;

var {:scalar} sdv_irql_previous: int;

var {:scalar} sdv_irql_previous_4: int;

var {:scalar} sdv_irql_previous_3: int;

var {:scalar} yogi_error: int;

var {:scalar} Mem_T.INT4: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WPP_GLOBAL_Control: int;

const EventTraceConfigGuid: int;

const BUS1394_CLASS_GUID: int;

const WmiScsiAddressGuid: int;

const GUID_DEVINTERFACE_STORAGEPORT: int;

const GUID_DEVINTERFACE_FLOPPY: int;

const GUID_DEVICEDUMP_STORAGE_DEVICE: int;

const GUID_DEVINTERFACE_WRITEONCEDISK: int;

const WPP_TRACE_CONTROL_NULL_GUID: int;

const GUID_DEVINTERFACE_TAPE: int;

const GUID_DEVINTERFACE_VOLUME: int;

const GUID_DEVINTERFACE_CDCHANGER: int;

const GUID_DEVINTERFACE_MEDIUMCHANGER: int;

const ScsiRawInterfaceGuid: int;

const GUID_DEVINTERFACE_VMLUN: int;

const DefaultTraceSecurityGuid: int;

const GUID_DEVICEDUMP_DRIVER_STORAGE_PORT: int;

const GUID_DEVINTERFACE_PARTITION: int;

const GUID_DEVINTERFACE_CDROM: int;

const GUID_DEVINTERFACE_HIDDEN_VOLUME: int;

const GUID_DEVINTERFACE_DISK: int;

const SystemTraceControlGuid: int;

const EventTraceGuid: int;

const GUID_DEVINTERFACE_SES: int;

const WPP_ThisDir_CTLGUID_wppCtlGuid: int;

const DATAID_SBP_LUN_INFORMATION: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv1: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const p_sdv_fx_dev_object: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_kdpc: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_pIoDpcContext: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_fx_dev_object: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const sdv_cancelFptr: int;

const KeTickCount: int;

const Sbp2LogLevel: int;

procedure {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int)
{
  var {:pointer} TraceGuid: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    TraceGuid := actual_TraceGuid;
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var {:scalar} Tmp_4: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 1} Tmp_4 := __HAVOC_malloc(4);
    call {:si_unique_call 2} vslice_dummy_var_1 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    havoc vslice_dummy_var_0;
    Mem_T.INT4[Tmp_4] := vslice_dummy_var_0;
    return;
}



procedure {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int)
{
  var {:pointer} TraceGuid_1: int;
  var vslice_dummy_var_2: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_2 := __HAVOC_malloc(4);
    TraceGuid_1 := actual_TraceGuid_1;
    return;
}



procedure {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int)
{
  var {:pointer} TraceGuid_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 4} vslice_dummy_var_3 := __HAVOC_malloc(4);
    TraceGuid_2 := actual_TraceGuid_2;
    return;
}



procedure {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_13 == -1073741670 || Tmp_13 == 0 || Tmp_13 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int)
{
  var {:scalar} i: int;
  var {:pointer} Tmp_14: int;
  var {:pointer} Tmp_15: int;
  var {:pointer} Tmp_16: int;
  var {:scalar} Tmp_17: int;
  var {:pointer} Tmp_18: int;
  var {:scalar} u: int;
  var {:scalar} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:scalar} sdv_4: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} pData: int;
  var {:pointer} Tmp_22: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} Tmp_23: int;
  var {:scalar} Tmp_24: int;
  var {:scalar} sdv_6: int;
  var {:scalar} Tmp_26: int;
  var {:pointer} sdv_7: int;
  var {:scalar} Tmp_27: int;
  var {:scalar} dataLength: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} sdv_9: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} Tmp_31: int;
  var {:pointer} Tmp_33: int;
  var {:scalar} Tmp_36: int;
  var {:scalar} Tmp_37: int;
  var {:pointer} Tmp_38: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_39: int;
  var {:scalar} uChar: int;
  var {:scalar} Tmp_40: int;
  var {:scalar} Tmp_41: int;
  var {:pointer} TextLeaf: int;
  var {:pointer} uniString: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;

  anon0:
    call {:si_unique_call 5} u := __HAVOC_malloc(20);
    call {:si_unique_call 6} vslice_dummy_var_4 := __HAVOC_malloc(12);
    TextLeaf := actual_TextLeaf;
    uniString := actual_uniString;
    call {:si_unique_call 7} Tmp_20 := __HAVOC_malloc(4);
    call {:si_unique_call 8} Tmp_22 := __HAVOC_malloc(4);
    call {:si_unique_call 9} Tmp_28 := __HAVOC_malloc(4);
    call {:si_unique_call 10} Tmp_29 := __HAVOC_malloc(4);
    call {:si_unique_call 11} Tmp_38 := __HAVOC_malloc(4);
    status := 0;
    pData := 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L20;

  L20:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_29], 2) != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_33;
    havoc Tmp_17;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_1;
    call {:si_unique_call 12} WPP_SF_S(Tmp_17, 122, Tmp_33, vslice_dummy_var_1);
    goto L21;

  L21:
    Tmp_13 := status;
    goto L1;

  L1:
    return;

  anon59_Then:
    goto L21;

  anon76_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_29], 2) == 0;
    goto L21;

  anon58_Then:
    goto L21;

  anon75_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    dataLength := 0;
    goto L37;

  L37:
    ulUnicode := sdv_6;
    Tmp_37 := dataLength * 4 + 2;
    call {:si_unique_call 13} sdv_7 := ExAllocatePoolWithTag(512, Tmp_37, 846226003);
    pData := sdv_7;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} pData == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_28], 2) != 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_39;
    havoc Tmp_36;
    call {:si_unique_call 14} WPP_SF_(Tmp_36, 123, Tmp_39);
    goto L138;

  L138:
    status := -1073741670;
    goto L108;

  L108:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 15} sdv_ExFreePool(0);
    goto L116;

  L116:
    Tmp_13 := status;
    goto L1;

  anon69_Then:
    assume {:partition} pData == 0;
    goto L116;

  anon74_Then:
    goto L138;

  anon84_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_28], 2) == 0;
    goto L138;

  anon73_Then:
    goto L138;

  anon78_Then:
    assume {:partition} pData != 0;
    Tmp_31 := dataLength * 4 + 2;
    call {:si_unique_call 16} sdv_RtlZeroMemory(0, Tmp_31);
    Tmp_40 := dataLength * 4;
    call {:si_unique_call 17} sdv_RtlCopyMemory(0, 0, Tmp_40);
    i := 0;
    goto L60;

  L60:
    call {:si_unique_call 18} i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, Tmp_26, Tmp_27, uChar := Sbp2_ProcessTextualDescriptor_loop_L60(i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, pData, ulUnicode, Tmp_26, Tmp_27, dataLength, uChar);
    goto L60_last;

  L60_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} dataLength * 4 > i;
    Tmp_16 := pData;
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    uChar := Mem_T.INT4[Tmp_16];
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_20], 2) != 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    Tmp_27 := uChar;
    havoc Tmp_21;
    havoc Tmp_26;
    call {:si_unique_call 19} WPP_SF_D(Tmp_26, 124, Tmp_21, Tmp_27);
    goto L71;

  L71:
    Tmp_14 := pData;
    assume {:nonnull} Tmp_14 != 0;
    assume Tmp_14 > 0;
    Mem_T.INT4[Tmp_14] := 32;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    i := i + 1;
    goto L81;

  L81:
    i := i + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_20], 2) == 0;
    goto L71;

  anon63_Then:
    goto L71;

  anon61_Then:
    assume {:partition} uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < uChar;
    goto L70;

  anon62_Then:
    assume {:partition} uChar < 32;
    goto L70;

  anon79_Then:
    assume {:partition} uChar == 0;
    goto L61;

  L61:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_24;
    call {:si_unique_call 20} sdv_9 := ExAllocatePoolWithTag(512, Tmp_24, 846226003);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_38], 2) != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_15;
    havoc Tmp_19;
    call {:si_unique_call 21} WPP_SF_(Tmp_19, 125, Tmp_15);
    goto L128;

  L128:
    status := -1073741670;
    goto L108;

  anon72_Then:
    goto L128;

  anon83_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_38], 2) == 0;
    goto L128;

  anon71_Then:
    goto L128;

  anon81_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_23;
    call {:si_unique_call 22} sdv_RtlZeroMemory(0, Tmp_23);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 23} vslice_dummy_var_5 := corral_nondet();
    goto L107;

  L107:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_22], 2) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_18;
    havoc Tmp_41;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_2;
    call {:si_unique_call 24} WPP_SF_S(Tmp_41, 126, Tmp_18, vslice_dummy_var_2);
    goto L108;

  anon70_Then:
    goto L108;

  anon82_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_22], 2) == 0;
    goto L108;

  anon68_Then:
    goto L108;

  anon67_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 25} RtlInitAnsiString(0, 0);
    call {:si_unique_call 26} status := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L107;

  anon60_Then:
    assume {:partition} i >= dataLength * 4;
    goto L61;

  anon77_Then:
    assume {:nonnull} u != 0;
    assume u > 0;
    havoc dataLength;
    goto L37;

  anon57_Then:
    goto L20;
}



procedure {:origName "WPP_SF_qDddD"} WPP_SF_qDddD(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDddD"} WPP_SF_qDddD(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int)
{
  var {:pointer} TraceGuid_3: int;
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 27} vslice_dummy_var_6 := __HAVOC_malloc(4);
    TraceGuid_3 := actual_TraceGuid_3;
    return;
}



procedure {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_61: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_61: int)
{
  var {:pointer} Tmp_62: int;
  var {:pointer} Tmp_63: int;
  var {:pointer} unitDependentDirectory: int;
  var {:pointer} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:scalar} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} Tmp_69: int;
  var {:pointer} pdoExtension_1: int;
  var {:pointer} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_80: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} Tmp_82: int;
  var {:pointer} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:pointer} Tmp_87: int;
  var {:pointer} Tmp_88: int;
  var {:pointer} Tmp_89: int;
  var {:scalar} Tmp_90: int;
  var {:scalar} Tmp_91: int;
  var {:pointer} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:scalar} Tmp_97: int;
  var {:pointer} Tmp_98: int;
  var {:pointer} Tmp_99: int;
  var {:pointer} Tmp_100: int;
  var {:scalar} Tmp_101: int;
  var {:pointer} vendorLeaf: int;
  var {:scalar} Tmp_102: int;
  var {:pointer} Tmp_103: int;
  var {:pointer} unitDirectory: int;
  var {:scalar} Tmp_104: int;
  var {:pointer} Tmp_105: int;
  var {:scalar} Tmp_106: int;
  var {:scalar} status_2: int;
  var {:pointer} Tmp_107: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:pointer} Tmp_112: int;
  var {:pointer} modelLeaf: int;
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} Packet: int;
  var {:pointer} Generation: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    FdoExtension := actual_FdoExtension;
    Packet := actual_Packet;
    Generation := actual_Generation;
    call {:si_unique_call 28} Tmp_62 := __HAVOC_malloc(4);
    call {:si_unique_call 29} Tmp_66 := __HAVOC_malloc(4);
    call {:si_unique_call 30} Tmp_77 := __HAVOC_malloc(4);
    call {:si_unique_call 31} Tmp_79 := __HAVOC_malloc(4);
    call {:si_unique_call 32} Tmp_103 := __HAVOC_malloc(4);
    call {:si_unique_call 33} Tmp_107 := __HAVOC_malloc(4);
    call {:si_unique_call 34} Tmp_108 := __HAVOC_malloc(4);
    call {:si_unique_call 35} Tmp_112 := __HAVOC_malloc(4);
    pdoExtension_1 := FdoExtension;
    unitDirectory := 0;
    unitDependentDirectory := 0;
    vendorLeaf := 0;
    modelLeaf := 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_94;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_98;
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_82;
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_110;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_100;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    call {:si_unique_call 36} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_2 < 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_77], 1) != 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_88;
    havoc Tmp_106;
    call {:si_unique_call 37} WPP_SF_D(Tmp_106, 50, Tmp_88, status_2);
    goto L66;

  L66:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} unitDirectory != 0;
    call {:si_unique_call 38} sdv_ExFreePool(0);
    goto L67;

  L67:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} unitDependentDirectory != 0;
    call {:si_unique_call 39} sdv_ExFreePool(0);
    goto L71;

  L71:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} vendorLeaf != 0;
    call {:si_unique_call 40} sdv_ExFreePool(0);
    goto L75;

  L75:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} modelLeaf != 0;
    call {:si_unique_call 41} sdv_ExFreePool(0);
    goto L79;

  L79:
    Tmp_61 := status_2;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon93_Then:
    assume {:partition} modelLeaf == 0;
    goto L79;

  anon92_Then:
    assume {:partition} vendorLeaf == 0;
    goto L75;

  anon91_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L71;

  anon90_Then:
    assume {:partition} unitDirectory == 0;
    goto L67;

  anon111_Then:
    goto L66;

  anon126_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_77], 1) == 0;
    goto L66;

  anon110_Then:
    goto L66;

  anon85_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_73;
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_66;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_66], 1) != 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    havoc Tmp_76;
    havoc Tmp_91;
    call {:si_unique_call 42} WPP_SF_q(Tmp_91, 52, Tmp_76, FdoExtension);
    goto L182;

  L182:
    status_2 := -1073741621;
    goto L66;

  anon109_Then:
    goto L182;

  anon125_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_66], 1) == 0;
    goto L182;

  anon108_Then:
    goto L182;

  anon113_Then:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    havoc vslice_dummy_var_3;
    call {:si_unique_call 43} unitDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_3, -464166317);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} unitDirectory == 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    havoc Tmp_112;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_112], 1) != 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    havoc Tmp_81;
    havoc Tmp_67;
    call {:si_unique_call 44} WPP_SF_(Tmp_67, 51, Tmp_81);
    goto L172;

  L172:
    status_2 := -1073741670;
    goto L66;

  anon107_Then:
    goto L172;

  anon124_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_112], 1) == 0;
    goto L172;

  anon106_Then:
    goto L172;

  anon86_Then:
    assume {:partition} unitDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_69;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    havoc vslice_dummy_var_4;
    call {:si_unique_call 45} sdv_RtlZeroMemory(0, vslice_dummy_var_4);
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_99;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    havoc vslice_dummy_var_5;
    call {:si_unique_call 46} unitDependentDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_5, -464166317);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} unitDependentDirectory == 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc Tmp_108;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_108], 1) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_74;
    havoc Tmp_90;
    call {:si_unique_call 47} WPP_SF_(Tmp_90, 53, Tmp_74);
    goto L57;

  L57:
    status_2 := -1073741670;
    goto L66;

  anon89_Then:
    goto L57;

  anon123_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_108], 1) == 0;
    goto L57;

  anon88_Then:
    goto L57;

  anon87_Then:
    assume {:partition} unitDependentDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_78;
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    havoc vslice_dummy_var_6;
    call {:si_unique_call 48} sdv_RtlZeroMemory(0, vslice_dummy_var_6);
    goto L44;

  L44:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_64;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_86;
    assume {:nonnull} Tmp_86 != 0;
    assume Tmp_86 > 0;
    havoc vslice_dummy_var_7;
    call {:si_unique_call 49} vendorLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_7, -329948589);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} vendorLeaf == 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_103;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_103], 1) != 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_72;
    havoc Tmp_102;
    call {:si_unique_call 50} WPP_SF_(Tmp_102, 54, Tmp_72);
    goto L96;

  L96:
    status_2 := -1073741670;
    goto L66;

  anon96_Then:
    goto L96;

  anon122_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_103], 1) == 0;
    goto L96;

  anon95_Then:
    goto L96;

  anon94_Then:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_89;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    havoc vslice_dummy_var_8;
    call {:si_unique_call 51} sdv_RtlZeroMemory(0, vslice_dummy_var_8);
    goto L83;

  L83:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_87;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 52} modelLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_9, -329948589);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} modelLeaf == 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    havoc Tmp_107;
    assume {:nonnull} Tmp_107 != 0;
    assume Tmp_107 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_107], 1) != 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_113;
    havoc Tmp_104;
    call {:si_unique_call 53} WPP_SF_(Tmp_104, 55, Tmp_113);
    goto L118;

  L118:
    status_2 := -1073741670;
    goto L66;

  anon99_Then:
    goto L118;

  anon121_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_107], 1) == 0;
    goto L118;

  anon98_Then:
    goto L118;

  anon97_Then:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_95;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    havoc vslice_dummy_var_10;
    call {:si_unique_call 54} sdv_RtlZeroMemory(0, vslice_dummy_var_10);
    goto L105;

  L105:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_84;
    assume {:nonnull} Tmp_84 != 0;
    assume Tmp_84 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_80;
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    call {:si_unique_call 55} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} status_2 < 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_79], 1) != 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    havoc Tmp_85;
    havoc Tmp_101;
    call {:si_unique_call 56} WPP_SF_qD(Tmp_101, 56, Tmp_85, FdoExtension, status_2);
    goto L66;

  anon105_Then:
    goto L66;

  anon120_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_79], 1) == 0;
    goto L66;

  anon104_Then:
    goto L66;

  anon100_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_109;
    assume {:nonnull} Generation != 0;
    assume Generation > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    havoc vslice_dummy_var_11;
    Mem_T.INT4[Generation] := vslice_dummy_var_11;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_65;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_63;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_93;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_71;
    assume {:nonnull} Tmp_71 != 0;
    assume Tmp_71 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_70;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_105;
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    call {:si_unique_call 57} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} yogi_error != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} status_2 < 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_62;
    assume {:nonnull} Tmp_62 != 0;
    assume Tmp_62 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_62], 1) != 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_92;
    havoc Tmp_97;
    call {:si_unique_call 58} WPP_SF_qD(Tmp_97, 57, Tmp_92, FdoExtension, status_2);
    goto L66;

  anon103_Then:
    goto L66;

  anon119_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_62], 1) == 0;
    goto L66;

  anon102_Then:
    goto L66;

  anon101_Then:
    assume {:partition} 0 <= status_2;
    Tmp_61 := status_2;
    goto L1;

  anon118_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L105;

  anon115_Then:
    goto L83;

  anon114_Then:
    goto L44;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification(actual_FdoExtension_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification(actual_FdoExtension_1: int)
{
  var {:pointer} Tmp_216: int;
  var {:pointer} busResetItem: int;
  var {:scalar} Tmp_219: int;
  var {:scalar} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} Tmp_222: int;
  var {:pointer} sdv_44: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:pointer} Tmp_227: int;
  var {:pointer} Tmp_228: int;
  var {:scalar} Tmp_229: int;
  var {:pointer} FdoExtension_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 59} vslice_dummy_var_7 := __HAVOC_malloc(4);
    FdoExtension_1 := actual_FdoExtension_1;
    call {:si_unique_call 60} Tmp_224 := __HAVOC_malloc(4);
    call {:si_unique_call 61} Tmp_225 := __HAVOC_malloc(4);
    call {:si_unique_call 62} Tmp_226 := __HAVOC_malloc(4);
    call {:si_unique_call 63} Tmp_227 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_226;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_226], 1) != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_223;
    havoc Tmp_229;
    call {:si_unique_call 64} WPP_SF_q(Tmp_229, 16, Tmp_223, FdoExtension_1);
    goto L1;

  L1:
    return;

  anon35_Then:
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_226], 1) == 0;
    goto L1;

  anon34_Then:
    goto L1;

  anon33_Then:
    call {:si_unique_call 65} status_5 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_5 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_227;
    assume {:nonnull} Tmp_227 != 0;
    assume Tmp_227 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_227], 1) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_216;
    havoc Tmp_220;
    call {:si_unique_call 66} WPP_SF_q(Tmp_220, 19, Tmp_216, FdoExtension_1);
    goto L1;

  anon43_Then:
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_227], 1) == 0;
    goto L1;

  anon42_Then:
    goto L1;

  anon36_Then:
    assume {:partition} 0 <= status_5;
    call {:si_unique_call 67} sdv_44 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem := sdv_44;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} busResetItem == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_224], 1) != 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_228;
    havoc Tmp_219;
    call {:si_unique_call 68} WPP_SF_q(Tmp_219, 17, Tmp_228, FdoExtension_1);
    goto L59;

  L59:
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    call {:si_unique_call 69} vslice_dummy_var_8 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_1), 0);
    goto L1;

  anon41_Then:
    goto L59;

  anon47_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_224], 1) == 0;
    goto L59;

  anon40_Then:
    goto L59;

  anon45_Then:
    assume {:partition} busResetItem != 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 70} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 71} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L1;

  anon37_Then:
    call {:si_unique_call 72} ExFreePoolWithTag(0, -344497581);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L59;

  anon38_Then:
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_225], 1) == 0;
    goto L59;

  anon46_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_225], 1) != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L59;

  anon39_Then:
    havoc Tmp_221;
    havoc Tmp_222;
    call {:si_unique_call 73} WPP_SF_q(Tmp_222, 18, Tmp_221, FdoExtension_1);
    goto L59;
}



procedure {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int)
{
  var {:pointer} TraceGuid_4: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 74} vslice_dummy_var_9 := __HAVOC_malloc(4);
    TraceGuid_4 := actual_TraceGuid_4;
    return;
}



procedure {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int)
{
  var {:pointer} TraceGuid_5: int;
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 75} vslice_dummy_var_10 := __HAVOC_malloc(4);
    TraceGuid_5 := actual_TraceGuid_5;
    return;
}



procedure {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_236: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_236: int)
{
  var {:pointer} Tmp_237: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:scalar} Tmp_240: int;
  var {:scalar} Tmp_241: int;
  var {:pointer} Tmp_242: int;
  var {:scalar} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:scalar} Tmp_245: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:scalar} sdv_49: int;
  var {:pointer} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:pointer} Tmp_252: int;
  var {:scalar} dependentLength: int;
  var {:pointer} sdv_51: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:scalar} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:pointer} Tmp_260: int;
  var {:scalar} sdv_53: int;
  var {:pointer} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} Tmp_265: int;
  var {:pointer} Tmp_266: int;
  var {:scalar} Tmp_267: int;
  var {:scalar} sdv_55: int;
  var {:pointer} Tmp_268: int;
  var {:scalar} Tmp_269: int;
  var {:scalar} Tmp_270: int;
  var {:scalar} Tmp_271: int;
  var {:scalar} tmp: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:scalar} sdv_56: int;
  var {:scalar} i_1: int;
  var {:pointer} Tmp_275: int;
  var {:pointer} genPacket: int;
  var {:pointer} Tmp_276: int;
  var {:scalar} Tmp_278: int;
  var {:pointer} getConfigInfo: int;
  var {:scalar} Tmp_279: int;
  var {:scalar} Tmp_280: int;
  var {:pointer} Tmp_281: int;
  var {:pointer} Tmp_282: int;
  var {:scalar} j: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} sdv_57: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} Tmp_287: int;
  var {:scalar} sdv_58: int;
  var {:scalar} unitDirEntries: int;
  var {:pointer} Tmp_289: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} Tmp_292: int;
  var {:dopa} {:scalar} currentGeneration: int;
  var {:scalar} Tmp_293: int;
  var {:pointer} sdv_59: int;
  var {:pointer} Tmp_294: int;
  var {:pointer} Tmp_295: int;
  var {:pointer} vendorLeaf_1: int;
  var {:pointer} Tmp_296: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} sdv_60: int;
  var {:scalar} status_6: int;
  var {:scalar} sdv_61: int;
  var {:pointer} Tmp_301: int;
  var {:scalar} offset: int;
  var {:pointer} modelLeaf_1: int;
  var {:pointer} Tmp_302: int;
  var {:scalar} Tmp_303: int;
  var {:pointer} unitDependentDirectory_1: int;
  var {:scalar} sdv_64: int;
  var {:scalar} sdv_65: int;
  var {:pointer} Tmp_304: int;
  var {:scalar} Tmp_305: int;
  var {:scalar} sdv_67: int;
  var {:pointer} Tmp_306: int;
  var {:scalar} sdv_68: int;
  var {:scalar} Tmp_307: int;
  var {:scalar} cromOffset: int;
  var {:pointer} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:scalar} Tmp_310: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} Tmp_313: int;
  var {:scalar} directoryLength: int;
  var {:pointer} sdv_69: int;
  var {:pointer} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} modelIdCount: int;
  var {:scalar} Tmp_317: int;
  var {:scalar} dirInfoQuad: int;
  var {:pointer} Tmp_318: int;
  var {:scalar} oldIrql: int;
  var {:scalar} devListSize: int;
  var {:scalar} firstOne: int;
  var {:pointer} Tmp_319: int;
  var {:scalar} sdv_71: int;
  var {:pointer} Tmp_320: int;
  var {:pointer} Tmp_321: int;
  var {:pointer} Tmp_322: int;
  var {:scalar} sdv_72: int;
  var {:pointer} Tmp_323: int;
  var {:scalar} directoryLocation: int;
  var {:pointer} Tmp_324: int;
  var {:scalar} sbp2Device: int;
  var {:pointer} Tmp_325: int;
  var {:pointer} firstDevInfo: int;
  var {:scalar} Tmp_326: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} Tmp_329: int;
  var {:scalar} sdv_76: int;
  var {:pointer} ModelLeaf: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} ModelLeaf_1: int;
  var {:scalar} sdv_77: int;
  var {:scalar} Tmp_332: int;
  var {:pointer} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:scalar} Tmp_336: int;
  var {:scalar} Tmp_337: int;
  var {:scalar} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:pointer} Tmp_341: int;
  var {:scalar} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} devInfo: int;
  var {:pointer} Tmp_344: int;
  var {:scalar} sdv_80: int;
  var {:scalar} sdv_81: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} buffer: int;
  var {:scalar} Tmp_346: int;
  var {:scalar} retries: int;
  var {:scalar} dependentLocation: int;
  var {:scalar} Tmp_347: int;
  var {:scalar} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:pointer} unitDirectory_1: int;
  var {:pointer} ModelLeaf_2: int;
  var {:pointer} packet_1: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} info: int;
  var {:scalar} Tmp_352: int;
  var {:pointer} Tmp_353: int;
  var {:scalar} Tmp_354: int;
  var {:pointer} FdoExtension_2: int;
  var {:pointer} Sbp2Req: int;
  var boogieTmp: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 76} genPacket := __HAVOC_malloc(4);
    call {:si_unique_call 77} currentGeneration := __HAVOC_malloc(4);
    call {:si_unique_call 78} cromOffset := __HAVOC_malloc(16);
    call {:si_unique_call 79} directoryLocation := __HAVOC_malloc(16);
    call {:si_unique_call 80} ModelLeaf := __HAVOC_malloc(4);
    call {:si_unique_call 81} ModelLeaf_1 := __HAVOC_malloc(4);
    call {:si_unique_call 82} dependentLocation := __HAVOC_malloc(16);
    call {:si_unique_call 83} ModelLeaf_2 := __HAVOC_malloc(4);
    call {:si_unique_call 84} packet_1 := __HAVOC_malloc(4);
    FdoExtension_2 := actual_FdoExtension_2;
    Sbp2Req := actual_Sbp2Req;
    call {:si_unique_call 85} Tmp_242 := __HAVOC_malloc(4);
    call {:si_unique_call 86} Tmp_246 := __HAVOC_malloc(4);
    call {:si_unique_call 87} Tmp_249 := __HAVOC_malloc(4);
    call {:si_unique_call 88} Tmp_252 := __HAVOC_malloc(4);
    call {:si_unique_call 89} Tmp_259 := __HAVOC_malloc(2680);
    call {:si_unique_call 90} Tmp_266 := __HAVOC_malloc(4);
    call {:si_unique_call 91} Tmp_276 := __HAVOC_malloc(4);
    call {:si_unique_call 92} Tmp_290 := __HAVOC_malloc(4);
    call {:si_unique_call 93} Tmp_296 := __HAVOC_malloc(4);
    call {:si_unique_call 94} Tmp_298 := __HAVOC_malloc(2680);
    call {:si_unique_call 95} Tmp_304 := __HAVOC_malloc(4);
    call {:si_unique_call 96} Tmp_309 := __HAVOC_malloc(4);
    call {:si_unique_call 97} Tmp_312 := __HAVOC_malloc(4);
    call {:si_unique_call 98} Tmp_313 := __HAVOC_malloc(4);
    call {:si_unique_call 99} Tmp_315 := __HAVOC_malloc(4);
    call {:si_unique_call 100} Tmp_316 := __HAVOC_malloc(2680);
    call {:si_unique_call 101} Tmp_321 := __HAVOC_malloc(4);
    call {:si_unique_call 102} Tmp_333 := __HAVOC_malloc(4);
    call {:si_unique_call 103} Tmp_334 := __HAVOC_malloc(4);
    call {:si_unique_call 104} Tmp_335 := __HAVOC_malloc(4);
    call {:si_unique_call 105} Tmp_340 := __HAVOC_malloc(2680);
    call {:si_unique_call 106} Tmp_341 := __HAVOC_malloc(4);
    call {:si_unique_call 107} Tmp_349 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc devListSize;
    modelIdCount := 0;
    unitDirEntries := 0;
    sbp2Device := 0;
    firstOne := 0;
    unitDirectory_1 := 0;
    unitDependentDirectory_1 := 0;
    modelLeaf_1 := 0;
    vendorLeaf_1 := 0;
    buffer := 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 108} AllocateIrpAndIrb(FdoExtension_2, packet_1);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_12;
    call {:si_unique_call 109} status_6 := Sbp2GetConfigPacket(FdoExtension_2, vslice_dummy_var_12, currentGeneration);
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} yogi_error != 1;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:partition} status_6 < 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    havoc Tmp_335;
    assume {:nonnull} Tmp_335 != 0;
    assume Tmp_335 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_335], 1) != 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    havoc Tmp_351;
    havoc Tmp_338;
    call {:si_unique_call 110} WPP_SF_Dq(Tmp_338, 31, Tmp_351, status_6, FdoExtension_2);
    goto L136;

  L136:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_13;
    call {:si_unique_call 111} DeAllocateIrpAndIrb(FdoExtension_2, vslice_dummy_var_13);
    goto L137;

  L137:
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} unitDirectory_1 != 0;
    call {:si_unique_call 112} sdv_ExFreePool(0);
    goto L141;

  L141:
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    call {:si_unique_call 113} sdv_ExFreePool(0);
    goto L145;

  L145:
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} vendorLeaf_1 != 0;
    call {:si_unique_call 114} sdv_ExFreePool(0);
    goto L149;

  L149:
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:partition} modelLeaf_1 != 0;
    call {:si_unique_call 115} sdv_ExFreePool(0);
    goto L153;

  L153:
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:partition} Sbp2Req != 0;
    goto L158;

  L158:
    Tmp_236 := status_6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon317_Then:
    assume {:partition} Sbp2Req == 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto L158;

  anon316_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L153;

  anon315_Then:
    assume {:partition} vendorLeaf_1 == 0;
    goto L149;

  anon314_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L145;

  anon313_Then:
    assume {:partition} unitDirectory_1 == 0;
    goto L141;

  anon312_Then:
    goto L137;

  anon377_Then:
    goto L136;

  anon444_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_335], 1) == 0;
    goto L136;

  anon376_Then:
    goto L136;

  anon298_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    getConfigInfo := GetConfigurationInformation_unnamed_tag_72(u__IRB(Tmp_248));
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc vendorLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc modelLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDirectory_1;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 116} directoryLength := corral_nondet();
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDependentDirectory_1;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 117} dependentLength := corral_nondet();
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:partition} Sbp2Req != 0;
    goto L67;

  L67:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_340;
    firstDevInfo := Tmp_340;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    i_1 := 1;
    goto L71;

  L71:
    call {:si_unique_call 118} Tmp_241, i_1, Tmp_347 := Sbp2Get1394ConfigInfo_loop_L71(Tmp_241, i_1, directoryLength, Tmp_347, unitDirectory_1, Sbp2Req);
    goto L71_last;

  L71_last:
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:partition} Sbp2Req != 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:partition} directoryLength > i_1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    Tmp_347 := BAND(Mem_T.INT4[unitDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} Tmp_347 == 129;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    Tmp_241 := BAND(Mem_T.INT4[unitDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    goto anon302_Then, anon302_Else;

  anon302_Else:
    goto L95;

  L95:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    havoc Tmp_333;
    assume {:nonnull} Tmp_333 != 0;
    assume Tmp_333 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_333], 1) != 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    Tmp_336 := Mem_T.INT4[unitDirectory_1];
    havoc Tmp_325;
    havoc Tmp_348;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc vslice_dummy_var_14;
    call {:si_unique_call 119} WPP_SF_qqDD(Tmp_348, 33, Tmp_325, FdoExtension_2, unitDirectory_1, vslice_dummy_var_14, Tmp_336);
    goto L101;

  L101:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 120} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, Buffer_unnamed_tag_74(RetrieveTextLeaf_unnamed_tag_73(u__SBP2_REQUEST(Sbp2Req))));
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    goto anon306_Then, anon306_Else;

  anon306_Else:
    havoc Tmp_341;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_341], 1) != 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    havoc Tmp_292;
    havoc Tmp_303;
    call {:si_unique_call 121} WPP_SF_q(Tmp_303, 34, Tmp_292, FdoExtension_2);
    goto L124;

  L124:
    status_6 := -1073741823;
    goto L72;

  L72:
    i_1 := 1;
    goto L132;

  L132:
    call {:si_unique_call 122} Tmp_237, Tmp_238, Tmp_239, Tmp_243, Tmp_244, Tmp_246, Tmp_247, Tmp_250, Tmp_251, Tmp_252, dependentLength, sdv_51, Tmp_253, Tmp_256, Tmp_258, Tmp_259, Tmp_260, Tmp_262, Tmp_263, Tmp_267, Tmp_268, Tmp_269, Tmp_271, tmp, Tmp_273, Tmp_274, i_1, Tmp_275, Tmp_276, Tmp_278, Tmp_279, Tmp_280, Tmp_281, j, Tmp_284, Tmp_285, Tmp_286, Tmp_287, unitDirEntries, Tmp_289, Tmp_290, Tmp_293, sdv_59, Tmp_294, Tmp_295, Tmp_296, status_6, Tmp_301, offset, Tmp_302, unitDependentDirectory_1, Tmp_304, Tmp_305, Tmp_306, Tmp_307, Tmp_308, Tmp_309, Tmp_313, sdv_69, Tmp_314, Tmp_315, Tmp_316, modelIdCount, Tmp_317, dirInfoQuad, Tmp_318, devListSize, firstOne, Tmp_319, Tmp_320, Tmp_321, Tmp_322, Tmp_323, sbp2Device, Tmp_326, Tmp_327, Tmp_329, Tmp_330, Tmp_332, Tmp_337, Tmp_339, Tmp_342, Tmp_343, devInfo, Tmp_345, Tmp_346, retries, Tmp_349, Tmp_350, info, Tmp_352, Tmp_353, Tmp_354 := Sbp2Get1394ConfigInfo_loop_L132(Tmp_237, Tmp_238, Tmp_239, Tmp_243, Tmp_244, Tmp_246, Tmp_247, sdv_49, Tmp_250, Tmp_251, Tmp_252, dependentLength, sdv_51, Tmp_253, Tmp_256, Tmp_258, Tmp_259, Tmp_260, sdv_53, Tmp_262, Tmp_263, Tmp_267, sdv_55, Tmp_268, Tmp_269, Tmp_271, tmp, Tmp_273, Tmp_274, sdv_56, i_1, Tmp_275, genPacket, Tmp_276, Tmp_278, Tmp_279, Tmp_280, Tmp_281, j, Tmp_284, sdv_57, Tmp_285, Tmp_286, Tmp_287, unitDirEntries, Tmp_289, Tmp_290, currentGeneration, Tmp_293, sdv_59, Tmp_294, Tmp_295, vendorLeaf_1, Tmp_296, sdv_60, status_6, sdv_61, Tmp_301, offset, modelLeaf_1, Tmp_302, unitDependentDirectory_1, sdv_64, sdv_65, Tmp_304, Tmp_305, sdv_67, Tmp_306, sdv_68, Tmp_307, cromOffset, Tmp_308, Tmp_309, Tmp_313, directoryLength, sdv_69, Tmp_314, Tmp_315, Tmp_316, modelIdCount, Tmp_317, dirInfoQuad, Tmp_318, devListSize, firstOne, Tmp_319, sdv_71, Tmp_320, Tmp_321, Tmp_322, sdv_72, Tmp_323, directoryLocation, sbp2Device, firstDevInfo, Tmp_326, Tmp_327, Tmp_329, sdv_76, ModelLeaf, Tmp_330, ModelLeaf_1, sdv_77, Tmp_332, Tmp_337, Tmp_339, Tmp_342, Tmp_343, devInfo, sdv_80, sdv_81, Tmp_345, Tmp_346, retries, dependentLocation, Tmp_349, unitDirectory_1, ModelLeaf_2, packet_1, Tmp_350, info, Tmp_352, Tmp_353, Tmp_354, FdoExtension_2, Sbp2Req);
    goto L132_last;

  L132_last:
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} Sbp2Req != 0;
    goto L134;

  L134:
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Sbp2Req != 0;
    goto L136;

  anon310_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:partition} sbp2Device == 0;
    goto L163;

  L163:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    havoc Tmp_242;
    assume {:nonnull} Tmp_242 != 0;
    assume Tmp_242 > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_242], 1) != 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc Tmp_344;
    havoc Tmp_310;
    call {:si_unique_call 123} WPP_SF_q(Tmp_310, 49, Tmp_344, FdoExtension_2);
    goto L164;

  L164:
    status_6 := -1073741621;
    goto L136;

  anon320_Then:
    goto L164;

  anon398_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_242], 1) == 0;
    goto L164;

  anon319_Then:
    goto L164;

  anon311_Then:
    assume {:partition} sbp2Device != 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} 2 > unitDirEntries;
    goto L163;

  anon318_Then:
    assume {:partition} unitDirEntries >= 2;
    goto L136;

  anon308_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} directoryLength > i_1;
    Tmp_346 := devListSize;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_259;
    devInfo := Tmp_259 + Tmp_346 * 268;
    Tmp_319 := unitDirectory_1;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} BAND(Mem_T.INT4[unitDirectory_1], 255) != 20;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 56;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 57;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 58;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 60;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 61;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 84;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 129;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) != 212;
    goto L371;

  L371:
    i_1 := i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon378_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 212;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} firstOne != 0;
    retries := 3;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    call {:si_unique_call 124} sdv_59 := IoAllocateMdl(0, dependentLength, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_286;
    assume {:nonnull} Tmp_286 != 0;
    assume Tmp_286 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_353;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    goto anon346_Then, anon346_Else;

  anon346_Else:
    havoc Tmp_334;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_334], 1) != 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    havoc Tmp_282;
    havoc Tmp_264;
    call {:si_unique_call 125} WPP_SF_q(Tmp_264, 42, Tmp_282, FdoExtension_2);
    goto L136;

  anon347_Then:
    goto L136;

  anon433_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_334], 1) == 0;
    goto L136;

  anon346_Then:
    goto L136;

  anon412_Then:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_250;
    assume {:nonnull} Tmp_250 != 0;
    assume Tmp_250 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_318;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_238;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_322;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    goto L214;

  L214:
    call {:si_unique_call 126} Tmp_246, Tmp_252, Tmp_258, Tmp_268, Tmp_274, Tmp_289, status_6, Tmp_306, Tmp_323, Tmp_326, Tmp_342, retries := Sbp2Get1394ConfigInfo_loop_L214(Tmp_246, Tmp_252, Tmp_258, Tmp_268, Tmp_274, genPacket, Tmp_289, currentGeneration, status_6, Tmp_306, Tmp_323, Tmp_326, Tmp_342, retries, packet_1, FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_274;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_25;
    call {:si_unique_call 177} status_6 := Sbp2SendRequest#1(FdoExtension_2, vslice_dummy_var_25, 2);
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc vslice_dummy_var_15;
    call {:si_unique_call 127} DeAllocateIrpAndIrb(FdoExtension_2, vslice_dummy_var_15);
    goto L223;

  L223:
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} status_6 >= 0;
    call {:si_unique_call 128} dirInfoQuad := corral_nondet();
    dependentLength := dirInfoQuad * 4;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 129} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} dependentLength > 256;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    havoc Tmp_266;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_266], 1) != 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    havoc Tmp_272;
    havoc Tmp_245;
    call {:si_unique_call 130} WPP_SF_qD(Tmp_245, 45, Tmp_272, FdoExtension_2, dependentLength);
    goto L136;

  anon327_Then:
    goto L136;

  anon415_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_266], 1) == 0;
    goto L136;

  anon326_Then:
    goto L136;

  anon414_Then:
    assume {:partition} 256 >= dependentLength;
    call {:si_unique_call 131} sdv_ExFreePool(0);
    Tmp_337 := dependentLength + 4;
    call {:si_unique_call 132} sdv_51 := ExAllocatePoolWithTag(512, Tmp_337, -464166317);
    unitDependentDirectory_1 := sdv_51;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    Tmp_256 := dependentLength + 4;
    call {:si_unique_call 133} sdv_69 := IoAllocateMdl(0, Tmp_256, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_275;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_251;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    j := 1;
    goto L273;

  L273:
    call {:si_unique_call 134} Tmp_253, Tmp_262, Tmp_263, Tmp_280, Tmp_281, j, Tmp_284, Tmp_285, unitDirEntries, Tmp_295, status_6, Tmp_308, Tmp_309, Tmp_313, Tmp_314, modelIdCount, Tmp_317, devListSize, Tmp_329 := Sbp2Get1394ConfigInfo_loop_L273(dependentLength, Tmp_253, Tmp_262, Tmp_263, sdv_55, Tmp_280, Tmp_281, j, Tmp_284, Tmp_285, unitDirEntries, Tmp_295, vendorLeaf_1, status_6, sdv_61, offset, unitDependentDirectory_1, sdv_67, cromOffset, Tmp_308, Tmp_309, Tmp_313, Tmp_314, modelIdCount, Tmp_317, devListSize, firstDevInfo, Tmp_329, devInfo, sdv_80, ModelLeaf_2, packet_1, FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_262;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_281;
    assume {:nonnull} Tmp_281 != 0;
    assume Tmp_281 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_329;
    assume {:nonnull} Tmp_329 != 0;
    assume Tmp_329 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_314;
    assume {:nonnull} Tmp_314 != 0;
    assume Tmp_314 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_24;
    call {:si_unique_call 176} status_6 := Sbp2SendRequest#1(FdoExtension_2, vslice_dummy_var_24, 2);
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} status_6 < 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    havoc Tmp_249;
    assume {:nonnull} Tmp_249 != 0;
    assume Tmp_249 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_249], 1) != 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    havoc Tmp_257;
    havoc Tmp_240;
    call {:si_unique_call 135} WPP_SF_qD(Tmp_240, 46, Tmp_257, FdoExtension_2, status_6);
    goto L385;

  L385:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 136} IoFreeMdl(0);
    goto L136;

  anon338_Then:
    goto L385;

  anon428_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_249], 1) == 0;
    goto L385;

  anon337_Then:
    goto L385;

  anon328_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    Tmp_253 := BAND(Mem_T.INT4[unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} Tmp_253 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc Tmp_313;
    assume {:nonnull} Tmp_313 != 0;
    assume Tmp_313 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_313], 2) != 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc Tmp_295;
    havoc Tmp_284;
    call {:si_unique_call 137} WPP_SF_q(Tmp_284, 47, Tmp_295, FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 138} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L311;

  L311:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L286;

  L286:
    Tmp_308 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} BAND(Mem_T.INT4[unitDependentDirectory_1], 255) != 56;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_308], 255) != 57;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_308], 255) != 129;
    goto L364;

  L364:
    j := j + 1;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} INTDIV(dependentLength, 4) < j;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 139} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    goto L371;

  anon424_Then:
    assume {:partition} j <= INTDIV(dependentLength, 4);
    goto anon424_Then_dummy;

  anon424_Then_dummy:
    assume false;
    return;

  anon386_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_308], 255) == 129;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    Tmp_280 := BAND(Mem_T.INT4[unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} Tmp_280 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} Tmp_280 == 23;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 140} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_2);
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_309], 2) != 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc Tmp_285;
    havoc Tmp_317;
    call {:si_unique_call 141} WPP_SF_q(Tmp_317, 48, Tmp_285, FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_16;
    call {:si_unique_call 142} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_16, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 143} sdv_ExFreePool(0);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto L344;

  L344:
    modelIdCount := modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_309], 2) == 0;
    goto L349;

  anon335_Then:
    goto L349;

  anon334_Then:
    goto L344;

  anon426_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon387_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_308], 255) == 57;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:partition} BAND(Mem_T.INT4[unitDependentDirectory_1], 255) == 56;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_313], 2) == 0;
    goto L300;

  anon329_Then:
    goto L300;

  anon420_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} Tmp_253 != 20;
    goto L286;

  anon418_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon417_Then:
    goto L136;

  anon416_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L136;

  anon325_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 144} IoFreeMdl(0);
    goto L136;

  anon324_Then:
    goto L223;

  anon322_Then:
    assume {:partition} 0 > status_6;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    havoc Tmp_252;
    assume {:nonnull} Tmp_252 != 0;
    assume Tmp_252 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_252], 1) != 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc Tmp_289;
    havoc Tmp_326;
    call {:si_unique_call 145} WPP_SF_qD(Tmp_326, 43, Tmp_289, FdoExtension_2, status_6);
    goto L401;

  L401:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    goto L412;

  L412:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_323;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_268;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc vslice_dummy_var_17;
    call {:si_unique_call 146} status_6 := Sbp2SendRequest#1(FdoExtension_2, vslice_dummy_var_17, 2);
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_246], 1) != 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc Tmp_258;
    havoc Tmp_342;
    call {:si_unique_call 147} WPP_SF_qD(Tmp_342, 44, Tmp_258, FdoExtension_2, status_6);
    goto L424;

  L424:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_306;
    assume {:nonnull} Tmp_306 != 0;
    assume Tmp_306 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    havoc vslice_dummy_var_18;
    Mem_T.INT4[currentGeneration] := vslice_dummy_var_18;
    goto L413;

  L413:
    retries := retries - 1;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} retries == 0;
    goto L222;

  anon431_Then:
    assume {:partition} retries != 0;
    goto anon431_Then_dummy;

  anon431_Then_dummy:
    assume false;
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_246], 1) == 0;
    goto L424;

  anon344_Then:
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= status_6;
    goto L424;

  anon430_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon342_Then:
    goto L413;

  anon340_Then:
    call {:si_unique_call 148} AllocateIrpAndIrb(FdoExtension_2, genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_252], 1) == 0;
    goto L401;

  anon339_Then:
    goto L401;

  anon323_Then:
    assume {:partition} 1 >= retries;
    goto L222;

  anon413_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon321_Then:
    assume {:partition} firstOne == 0;
    firstOne := 1;
    j := 0;
    goto L445;

  L445:
    call {:si_unique_call 149} Tmp_239, Tmp_271, Tmp_278, Tmp_279, j, unitDirEntries, Tmp_290, Tmp_294, status_6, Tmp_302, Tmp_304, Tmp_305, modelIdCount, devListSize, Tmp_321, Tmp_330, Tmp_332 := Sbp2Get1394ConfigInfo_loop_L445(Tmp_239, sdv_49, dependentLength, Tmp_271, sdv_56, Tmp_278, Tmp_279, j, unitDirEntries, Tmp_290, Tmp_294, vendorLeaf_1, status_6, modelLeaf_1, Tmp_302, unitDependentDirectory_1, Tmp_304, Tmp_305, sdv_68, cromOffset, modelIdCount, devListSize, Tmp_321, firstDevInfo, Tmp_330, ModelLeaf_1, sdv_77, Tmp_332, devInfo, dependentLocation, FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} dependentLength > j;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    Tmp_278 := BAND(Mem_T.INT4[unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} Tmp_278 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} devListSize > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc Tmp_321;
    assume {:nonnull} Tmp_321 != 0;
    assume Tmp_321 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_321], 2) != 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc Tmp_302;
    havoc Tmp_279;
    call {:si_unique_call 150} WPP_SF_q(Tmp_279, 40, Tmp_302, FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 151} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L476;

  L476:
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    unitDirEntries := unitDirEntries + 1;
    goto L448;

  L448:
    Tmp_294 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} BAND(Mem_T.INT4[unitDependentDirectory_1], 255) != 56;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_294], 255) != 57;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_294], 255) != 129;
    goto L542;

  L542:
    j := j + 1;
    goto L542_dummy;

  L542_dummy:
    assume false;
    return;

  anon388_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_294], 255) == 129;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    Tmp_271 := BAND(Mem_T.INT4[unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} Tmp_271 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} Tmp_271 == 23;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 152} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_1);
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_19;
    call {:si_unique_call 153} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_19, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 154} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    havoc Tmp_290;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_290], 2) != 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc Tmp_330;
    havoc Tmp_305;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_20;
    call {:si_unique_call 155} WPP_SF_S(Tmp_305, 41, Tmp_330, vslice_dummy_var_20);
    goto L512;

  L512:
    modelIdCount := modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_290], 2) == 0;
    goto L512;

  anon360_Then:
    goto L512;

  anon359_Then:
    goto L512;

  anon440_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_294], 255) == 57;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:partition} BAND(Mem_T.INT4[unitDependentDirectory_1], 255) == 56;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_321], 2) == 0;
    goto L465;

  anon351_Then:
    goto L465;

  anon350_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    havoc Tmp_304;
    assume {:nonnull} Tmp_304 != 0;
    assume Tmp_304 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_304], 2) != 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc Tmp_239;
    havoc Tmp_332;
    call {:si_unique_call 156} WPP_SF_q(Tmp_332, 39, Tmp_239, FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 157} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_304], 2) == 0;
    goto L493;

  anon356_Then:
    goto L493;

  anon349_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} Tmp_278 != 20;
    goto L448;

  anon348_Then:
    assume {:partition} j >= dependentLength;
    goto L371;

  anon379_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 129;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    Tmp_293 := BAND(Mem_T.INT4[unitDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} Tmp_293 == 23;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} devListSize >= modelIdCount;
    Tmp_267 := modelIdCount;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_316;
    info := Tmp_316 + Tmp_267 * 268;
    assume {:nonnull} info != 0;
    assume info > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 158} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, ModelLeaf);
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_21;
    call {:si_unique_call 159} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_21, uniModelId__DEVICE_INFORMATION(info));
    call {:si_unique_call 160} sdv_ExFreePool(0);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    havoc Tmp_296;
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_296], 2) != 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc Tmp_260;
    havoc Tmp_269;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_22;
    call {:si_unique_call 161} WPP_SF_S(Tmp_269, 38, Tmp_260, vslice_dummy_var_22);
    goto L562;

  L562:
    modelIdCount := modelIdCount + 1;
    goto L371;

  anon365_Then:
    goto L562;

  anon411_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_296], 2) == 0;
    goto L562;

  anon364_Then:
    goto L562;

  anon363_Then:
    goto L562;

  anon410_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon409_Then:
    goto L562;

  anon362_Then:
    assume {:partition} modelIdCount > devListSize;
    goto L371;

  anon408_Then:
    assume {:partition} Tmp_293 != 23;
    goto L371;

  anon380_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 84;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    sbp2Device := 1;
    goto L371;

  anon381_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 61;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} sdv_64 != 0;
    Tmp_345 := 1;
    goto L605;

  L605:
    tmp := Tmp_345;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} tmp != 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L371;

  anon407_Then:
    assume {:partition} tmp == 0;
    goto L371;

  anon366_Then:
    assume {:partition} sdv_64 == 0;
    Tmp_345 := 0;
    goto L605;

  anon382_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 60;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    havoc Tmp_315;
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_315], 1) != 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc Tmp_343;
    havoc Tmp_243;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc vslice_dummy_var_23;
    call {:si_unique_call 162} WPP_SF_qD(Tmp_243, 35, Tmp_343, FdoExtension_2, vslice_dummy_var_23);
    goto L371;

  anon367_Then:
    goto L371;

  anon406_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_315], 1) == 0;
    goto L371;

  anon405_Then:
    goto L371;

  anon383_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 58;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_354;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} 8 > Tmp_354;
    Tmp_287 := 8;
    goto L633;

  L633:
    tmp := Tmp_287;
    tmp := tmp * 4;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} 16 > tmp - 20;
    Tmp_352 := tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    call {:si_unique_call 163} tmp := corral_nondet();
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon404_Then:
    assume {:partition} tmp - 20 >= 16;
    Tmp_352 := 16;
    goto L638;

  anon403_Then:
    assume {:partition} Tmp_354 >= 8;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_287;
    goto L633;

  anon384_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 57;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon385_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_319], 255) == 56;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon399_Then:
    assume {:partition} BAND(Mem_T.INT4[unitDirectory_1], 255) == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} devListSize != 0;
    goto L661;

  L661:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_349], 2) != 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc Tmp_327;
    havoc Tmp_307;
    call {:si_unique_call 164} WPP_SF_q(Tmp_307, 37, Tmp_327, FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 165} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L678;

  L678:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon371_Then:
    goto L667;

  anon401_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_349], 2) == 0;
    goto L667;

  anon370_Then:
    goto L667;

  anon369_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L678;

  anon400_Then:
    assume {:partition} devListSize == 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    havoc Tmp_276;
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_276], 2) != 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc Tmp_350;
    havoc Tmp_339;
    call {:si_unique_call 166} WPP_SF_q(Tmp_339, 36, Tmp_350, FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 167} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L661;

  anon373_Then:
    goto L693;

  anon402_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_276], 2) == 0;
    goto L693;

  anon372_Then:
    goto L693;

  anon368_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L661;

  anon309_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L134;

  anon307_Then:
    goto L124;

  anon443_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_341], 1) == 0;
    goto L124;

  anon306_Then:
    goto L124;

  anon305_Then:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 168} boogieTmp := corral_nondet();
    status_6 := 0;
    goto L72;

  anon397_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon304_Then:
    goto L101;

  anon396_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_333], 1) == 0;
    goto L101;

  anon395_Then:
    goto L101;

  anon302_Then:
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_312], 1) == 0;
    goto L95;

  anon394_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_312], 1) != 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    goto L95;

  anon303_Then:
    havoc Tmp_261;
    havoc Tmp_265;
    call {:si_unique_call 169} WPP_SF_qq(Tmp_265, 32, Tmp_261, FdoExtension_2, Sbp2Req);
    goto L95;

  anon393_Then:
    goto L75;

  L75:
    i_1 := i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    assume false;
    return;

  anon392_Then:
    assume {:partition} Tmp_347 != 129;
    goto L75;

  anon301_Then:
    goto L75;

  anon300_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L72;

  anon299_Then:
    assume {:partition} Sbp2Req == 0;
    goto L72;

  anon391_Then:
    assume {:partition} Sbp2Req == 0;
    call {:si_unique_call 170} Tmp_254 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    Mem_T.INT4[Tmp_254] := oldIrql;
    call {:si_unique_call 171} sdv_KeAcquireSpinLock(0, Tmp_254);
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    oldIrql := Mem_T.INT4[Tmp_254];
    i_1 := 0;
    goto L705;

  L705:
    call {:si_unique_call 172} Tmp_270, i_1, Tmp_298, Tmp_324, devInfo, buffer := Sbp2Get1394ConfigInfo_loop_L705(Tmp_270, i_1, Tmp_298, Tmp_324, devInfo, buffer, FdoExtension_2);
    goto L705_last;

  L705_last:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    Tmp_270 := i_1;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_298;
    devInfo := Tmp_298 + Tmp_270 * 268;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    Tmp_324 := uniModelId__DEVICE_INFORMATION(devInfo);
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    call {:si_unique_call 173} buffer := _InlineInterlockedExchangePointer(Buffer__STRING(Tmp_324), 0);
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} buffer != 0;
    call {:si_unique_call 174} sdv_ExFreePool(0);
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L715;

  L715:
    i_1 := i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    assume false;
    return;

  anon375_Then:
    assume {:partition} buffer == 0;
    goto L715;

  anon374_Then:
    call {:si_unique_call 175} sdv_KeReleaseSpinLock(0, oldIrql);
    devListSize := 0;
    goto L67;

  anon390_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon297_Then:
    Tmp_236 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx(actual_BusResetData: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx(actual_BusResetData: int)
{
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} Tmp_358: int;
  var {:pointer} busResetItem_1: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} sdv_85: int;
  var {:scalar} Tmp_364: int;
  var {:pointer} fdoExtension: int;
  var {:pointer} Tmp_365: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:pointer} BusResetData: int;
  var boogieTmp: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 178} vslice_dummy_var_11 := __HAVOC_malloc(4);
    BusResetData := actual_BusResetData;
    call {:si_unique_call 179} Tmp_357 := __HAVOC_malloc(4);
    call {:si_unique_call 180} Tmp_359 := __HAVOC_malloc(4);
    call {:si_unique_call 181} Tmp_363 := __HAVOC_malloc(4);
    call {:si_unique_call 182} Tmp_365 := __HAVOC_malloc(4);
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    havoc fdoExtension;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_365;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_365], 1) != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_367;
    havoc Tmp_364;
    call {:si_unique_call 183} WPP_SF_q(Tmp_364, 12, Tmp_367, fdoExtension);
    goto L1;

  L1:
    return;

  anon34_Then:
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_365], 1) == 0;
    goto L1;

  anon33_Then:
    goto L1;

  anon43_Then:
    call {:si_unique_call 184} status_7 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_7 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_359;
    assume {:nonnull} Tmp_359 != 0;
    assume Tmp_359 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_359], 1) != 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_360;
    havoc Tmp_368;
    call {:si_unique_call 185} WPP_SF_q(Tmp_368, 15, Tmp_360, fdoExtension);
    goto L1;

  anon42_Then:
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_359], 1) == 0;
    goto L1;

  anon41_Then:
    goto L1;

  anon35_Then:
    assume {:partition} 0 <= status_7;
    call {:si_unique_call 186} sdv_85 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem_1 := sdv_85;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} busResetItem_1 == 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_363;
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_363], 1) != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_361;
    havoc Tmp_362;
    call {:si_unique_call 187} WPP_SF_q(Tmp_362, 13, Tmp_361, fdoExtension);
    goto L61;

  L61:
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    call {:si_unique_call 188} vslice_dummy_var_12 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension), 0);
    goto L1;

  anon40_Then:
    goto L61;

  anon47_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_363], 1) == 0;
    goto L61;

  anon39_Then:
    goto L61;

  anon45_Then:
    assume {:partition} busResetItem_1 != 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 189} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 190} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L1;

  anon36_Then:
    call {:si_unique_call 191} ExFreePoolWithTag(0, -344497581);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L61;

  anon37_Then:
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_357], 1) == 0;
    goto L61;

  anon46_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_357], 1) != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L61;

  anon38_Then:
    havoc Tmp_355;
    havoc Tmp_358;
    call {:si_unique_call 192} WPP_SF_q(Tmp_358, 14, Tmp_355, fdoExtension);
    goto L61;
}



procedure {:origName "WPP_SF_qDDd"} WPP_SF_qDDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDDd"} WPP_SF_qDDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int)
{
  var {:pointer} TraceGuid_6: int;
  var vslice_dummy_var_13: int;

  anon0:
    call {:si_unique_call 193} vslice_dummy_var_13 := __HAVOC_malloc(4);
    TraceGuid_6 := actual_TraceGuid_6;
    return;
}



procedure {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_30: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_30: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int)
{
  var {:pointer} TraceGuid_7: int;
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 194} vslice_dummy_var_14 := __HAVOC_malloc(4);
    TraceGuid_7 := actual_TraceGuid_7;
    return;
}



procedure {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:pointer} Tmp_512: int;
  var {:pointer} Tmp_514: int;
  var {:scalar} waitValue_1: int;
  var {:pointer} pdoExtension_4: int;
  var {:pointer} Tmp_515: int;
  var {:scalar} Tmp_517: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} leaf: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:pointer} tModelLeaf: int;
  var {:pointer} Tmp_523: int;
  var {:pointer} Tmp_524: int;
  var {:pointer} Tmp_525: int;
  var {:scalar} Tmp_528: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} sdv_148: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:scalar} currentGeneration_1: int;
  var {:scalar} Tmp_533: int;
  var {:scalar} retries_1: int;
  var {:pointer} Tmp_534: int;
  var {:scalar} temp_1: int;
  var {:pointer} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} tModelLeafMdl: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:scalar} leafLength: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} Tmp_541: int;
  var {:pointer} Tmp_542: int;
  var {:pointer} Tmp_543: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} Tmp_545: int;
  var {:scalar} status_11: int;
  var {:pointer} packet_2: int;
  var {:pointer} Tmp_546: int;
  var {:scalar} Tmp_547: int;
  var {:scalar} event: int;
  var {:pointer} Tmp_550: int;
  var {:pointer} FdoExtension_3: int;
  var {:pointer} ModelLeafLocation: int;
  var {:pointer} ModelLeaf_3: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 195} waitValue_1 := __HAVOC_malloc(20);
    call {:si_unique_call 196} vslice_dummy_var_15 := __HAVOC_malloc(4);
    call {:si_unique_call 197} packet_2 := __HAVOC_malloc(4);
    call {:si_unique_call 198} event := __HAVOC_malloc(156);
    FdoExtension_3 := actual_FdoExtension_3;
    ModelLeafLocation := actual_ModelLeafLocation;
    ModelLeaf_3 := actual_ModelLeaf_3;
    call {:si_unique_call 199} Tmp_535 := __HAVOC_malloc(4);
    call {:si_unique_call 200} Tmp_538 := __HAVOC_malloc(4);
    call {:si_unique_call 201} Tmp_544 := __HAVOC_malloc(4);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    leaf := 0;
    tModelLeaf := 0;
    tModelLeafMdl := 0;
    pdoExtension_4 := FdoExtension_3;
    call {:si_unique_call 202} AllocateIrpAndIrb(pdoExtension_4, packet_2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 203} tModelLeaf := ExAllocatePoolWithTag(512, 32, 846226003);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} tModelLeaf != 0;
    call {:si_unique_call 204} tModelLeafMdl := IoAllocateMdl(0, 32, 0, 0, 0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} tModelLeafMdl != 0;
    retries_1 := 3;
    goto L44;

  L44:
    call {:si_unique_call 205} Tmp_510, Tmp_515, Tmp_519, Tmp_524, Tmp_525, Tmp_528, Tmp_531, Tmp_532, currentGeneration_1, retries_1, Tmp_534, Tmp_536, Tmp_537, Tmp_538, Tmp_539, Tmp_545, status_11, Tmp_546, Tmp_550, vslice_dummy_var_16 := Sbp2ParseTextLeaf_loop_L44(Tmp_510, waitValue_1, pdoExtension_4, Tmp_515, Tmp_519, Tmp_524, Tmp_525, Tmp_528, Tmp_531, Tmp_532, currentGeneration_1, retries_1, Tmp_534, Tmp_536, tModelLeafMdl, Tmp_537, Tmp_538, Tmp_539, Tmp_545, status_11, packet_2, Tmp_546, event, Tmp_550, ModelLeafLocation, vslice_dummy_var_16);
    goto L44_last;

  L44_last:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} retries_1 != 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_536;
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_26;
    call {:si_unique_call 206} status_11 := Sbp2SendRequest#1(pdoExtension_4, vslice_dummy_var_26, 2);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_11 < 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_538;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_538], 1) != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_519;
    havoc Tmp_528;
    call {:si_unique_call 207} WPP_SF_qD(Tmp_528, 58, Tmp_519, pdoExtension_4, status_11);
    goto L56;

  L56:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_534;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    havoc currentGeneration_1;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_515;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_539;
    assume {:nonnull} Tmp_539 != 0;
    assume Tmp_539 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_531;
    assume {:nonnull} Tmp_531 != 0;
    assume Tmp_531 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_550;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_545;
    assume {:nonnull} Tmp_545 != 0;
    assume Tmp_545 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_525;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_524;
    assume {:nonnull} Tmp_524 != 0;
    assume Tmp_524 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_546;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_27;
    call {:si_unique_call 208} status_11 := Sbp2SendRequest#1(pdoExtension_4, vslice_dummy_var_27, 2);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_11 < 0;
    call {:si_unique_call 209} KeInitializeEvent(event, 0, 0);
    assume {:nonnull} waitValue_1 != 0;
    assume waitValue_1 > 0;
    call {:si_unique_call 210} vslice_dummy_var_16 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    retries_1 := retries_1 - 1;
    goto anon74_Else_dummy;

  anon74_Else_dummy:
    assume false;
    return;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon57_Then:
    assume {:partition} 0 <= status_11;
    goto L45;

  L45:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_11 < 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc Tmp_535;
    assume {:nonnull} Tmp_535 != 0;
    assume Tmp_535 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_535], 1) != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_523;
    havoc Tmp_533;
    call {:si_unique_call 211} WPP_SF_qD(Tmp_533, 59, Tmp_523, pdoExtension_4, status_11);
    goto L177;

  L177:
    call {:si_unique_call 212} IoFreeMdl(0);
    call {:si_unique_call 213} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_28;
    call {:si_unique_call 214} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_28);
    goto L1;

  L1:
    goto LM2;

  anon65_Then:
    goto L177;

  anon73_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_535], 1) == 0;
    goto L177;

  anon64_Then:
    goto L177;

  anon55_Then:
    assume {:partition} 0 <= status_11;
    call {:si_unique_call 215} leafLength := corral_nondet();
    Tmp_512 := tModelLeaf;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    temp_1 := Mem_T.INT4[Tmp_512];
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} leafLength + 4 > 32;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 216} IoFreeMdl(0);
    call {:si_unique_call 217} sdv_ExFreePool(0);
    Tmp_541 := leafLength + 4;
    call {:si_unique_call 218} tModelLeaf := ExAllocatePoolWithTag(512, Tmp_541, 846226003);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} tModelLeaf != 0;
    Tmp_517 := leafLength + 4;
    call {:si_unique_call 219} sdv_148 := IoAllocateMdl(0, Tmp_517, 0, 0, 0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_530;
    assume {:nonnull} Tmp_530 != 0;
    assume Tmp_530 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_521;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto L102;

  L102:
    i_2 := 1;
    Tmp_543 := tModelLeaf;
    assume {:nonnull} Tmp_543 != 0;
    assume Tmp_543 > 0;
    Mem_T.INT4[Tmp_543] := temp_1;
    goto L136;

  L136:
    call {:si_unique_call 220} i_2, Tmp_509, Tmp_511, Tmp_514, Tmp_540, Tmp_542, status_11 := Sbp2ParseTextLeaf_loop_L136(i_2, Tmp_509, Tmp_511, Tmp_514, pdoExtension_4, leafLength, Tmp_540, Tmp_542, status_11, packet_2, ModelLeafLocation);
    goto L136_last;

  L136_last:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_511;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_509;
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_514;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_542;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_35;
    call {:si_unique_call 233} status_11 := Sbp2SendRequest#1(pdoExtension_4, vslice_dummy_var_35, 2);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_11 < 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_544;
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_544], 1) != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_522;
    havoc Tmp_547;
    call {:si_unique_call 221} WPP_SF_qD(Tmp_547, 60, Tmp_522, pdoExtension_4, status_11);
    goto L159;

  L159:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 222} IoFreeMdl(0);
    call {:si_unique_call 223} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_29;
    call {:si_unique_call 224} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_29);
    goto L1;

  anon63_Then:
    goto L159;

  anon72_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_544], 1) == 0;
    goto L159;

  anon62_Then:
    goto L159;

  anon61_Then:
    assume {:partition} 0 <= status_11;
    i_2 := i_2 + 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} INTDIV(leafLength, 4) < i_2;
    leaf := tModelLeaf;
    assume {:nonnull} leaf != 0;
    assume leaf > 0;
    assume {:nonnull} ModelLeaf_3 != 0;
    assume ModelLeaf_3 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 225} IoFreeMdl(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_30;
    call {:si_unique_call 226} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_30);
    goto L1;

  anon71_Then:
    assume {:partition} i_2 <= INTDIV(leafLength, 4);
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    call {:si_unique_call 227} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_31;
    call {:si_unique_call 228} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_31);
    goto L1;

  anon60_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_32;
    call {:si_unique_call 229} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_32);
    goto L1;

  anon68_Then:
    assume {:partition} 32 >= leafLength + 4;
    goto L102;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L56;

  anon75_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_538], 1) == 0;
    goto L56;

  anon58_Then:
    goto L56;

  anon56_Then:
    assume {:partition} 0 <= status_11;
    goto L56;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} retries_1 == 0;
    goto L45;

  anon53_Then:
    assume {:partition} tModelLeafMdl == 0;
    call {:si_unique_call 230} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_33;
    call {:si_unique_call 231} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_33);
    goto L1;

  anon52_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_34;
    call {:si_unique_call 232} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_34);
    goto L1;

  anon51_Then:
    goto L1;
}



procedure {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int)
{
  var {:pointer} Tmp_571: int;
  var {:scalar} Tmp_572: int;
  var {:scalar} Tmp_573: int;
  var {:pointer} Tmp_574: int;
  var {:scalar} sdv_160: int;
  var {:scalar} orbLock_1: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} Tmp_576: int;
  var {:pointer} Tmp_577: int;
  var {:pointer} sdv_162: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_580: int;
  var {:pointer} Tmp_581: int;
  var {:scalar} Tmp_582: int;
  var {:pointer} sdv_163: int;
  var {:scalar} Tmp_583: int;
  var {:pointer} sdv_164: int;
  var {:pointer} sdv_165: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} Tmp_585: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} tail: int;
  var {:pointer} Tmp_588: int;
  var {:pointer} Tmp_589: int;
  var {:pointer} Tmp_590: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 234} orbLock_1 := __HAVOC_malloc(12);
    call {:si_unique_call 235} vslice_dummy_var_17 := __HAVOC_malloc(4);
    PdoExtension_6 := actual_PdoExtension_6;
    Irp := actual_Irp;
    call {:si_unique_call 236} Tmp_575 := __HAVOC_malloc(4);
    call {:si_unique_call 237} Tmp_577 := __HAVOC_malloc(4);
    call {:si_unique_call 238} Tmp_585 := __HAVOC_malloc(64);
    call {:si_unique_call 239} Tmp_589 := __HAVOC_malloc(4);
    call {:si_unique_call 240} Tmp_590 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 241} AcquireOrbListLock(PdoExtension_6, orbLock_1, 0);
    call {:si_unique_call 242} sdv_160 := sdv_IsListEmpty(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_160 == 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc vslice_dummy_var_36;
    call {:si_unique_call 243} sdv_163 := sdv_containing_record(vslice_dummy_var_36, 0);
    tail := sdv_163;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_581;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_580;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc vslice_dummy_var_37;
    call {:si_unique_call 244} sdv_164 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), vslice_dummy_var_37);
    oldIrp := sdv_164;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_575;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_575], 512) != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_574;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    havoc Tmp_585;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    Tmp_572 := Mem_T.INT4[Tmp_585];
    havoc Tmp_588;
    havoc Tmp_573;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_584;
    assume {:nonnull} Tmp_584 != 0;
    assume Tmp_584 > 0;
    havoc vslice_dummy_var_38;
    call {:si_unique_call 245} WPP_SF_qqqD(Tmp_573, 27, Tmp_588, PdoExtension_6, vslice_dummy_var_38, oldIrp, Tmp_572);
    goto L52;

  L52:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    call {:si_unique_call 246} vslice_dummy_var_19 := KeCancelTimer(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_577;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_577], 1) != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_571;
    havoc Tmp_576;
    call {:si_unique_call 247} WPP_SF_qq(Tmp_576, 28, Tmp_571, PdoExtension_6, tail);
    goto L69;

  L69:
    call {:si_unique_call 248} vslice_dummy_var_18 := FreeAsyncRequestContext(PdoExtension_6, tail);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 249} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_6));
    goto L18;

  L18:
    call {:si_unique_call 250} ReleaseOrbListLock(PdoExtension_6, orbLock_1, 0);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L69;

  anon46_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_577], 1) == 0;
    goto L69;

  anon37_Then:
    goto L69;

  anon36_Then:
    goto L52;

  anon45_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_575], 512) == 0;
    goto L52;

  anon44_Then:
    goto L52;

  anon43_Then:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 251} sdv_165 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), 0);
    oldIrp := sdv_165;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_589;
    assume {:nonnull} Tmp_589 != 0;
    assume Tmp_589 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_589], 1) != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_587;
    havoc Tmp_582;
    call {:si_unique_call 252} WPP_SF_qq(Tmp_582, 29, Tmp_587, PdoExtension_6, oldIrp);
    goto L18;

  anon39_Then:
    goto L18;

  anon48_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_589], 1) == 0;
    goto L18;

  anon47_Then:
    goto L18;

  anon33_Then:
    assume {:partition} sdv_160 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp != 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 253} sdv_162 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), Irp);
    oldIrp := sdv_162;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_590;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_590], 1) != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_578;
    havoc Tmp_583;
    call {:si_unique_call 254} WPP_SF_qqq(Tmp_583, 30, Tmp_578, PdoExtension_6, Irp, oldIrp);
    goto L18;

  anon35_Then:
    goto L18;

  anon42_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_590], 1) == 0;
    goto L18;

  anon41_Then:
    goto L18;

  anon34_Then:
    assume {:partition} Irp == 0;
    goto L18;

  anon40_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited(actual_PdoExtension_8: int, actual_StatusFifo: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited(actual_PdoExtension_8: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_616: int;
  var {:pointer} Tmp_617: int;
  var {:scalar} sdv_186: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} senseBuffer_1: int;
  var {:pointer} Tmp_619: int;
  var {:scalar} Tmp_620: int;
  var {:scalar} Tmp_621: int;
  var {:pointer} Tmp_622: int;
  var {:scalar} status_15: int;
  var {:scalar} state: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 255} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 256} vslice_dummy_var_20 := __HAVOC_malloc(4);
    call {:si_unique_call 257} state := __HAVOC_malloc(8);
    PdoExtension_8 := actual_PdoExtension_8;
    StatusFifo := actual_StatusFifo;
    call {:si_unique_call 258} Tmp_616 := __HAVOC_malloc(4);
    call {:si_unique_call 259} Tmp_617 := __HAVOC_malloc(4);
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 260} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 261} sdv_186 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_186 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_616;
    assume {:nonnull} Tmp_616 != 0;
    assume Tmp_616 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_616], 1) != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_622;
    havoc Tmp_620;
    assume {:nonnull} state != 0;
    assume state > 0;
    havoc vslice_dummy_var_39;
    call {:si_unique_call 262} WPP_SF_D(Tmp_620, 117, Tmp_622, vslice_dummy_var_39);
    goto L22;

  L22:
    call {:si_unique_call 263} status_15 := PoRequestPowerIrp(0, 2, state, 0, 0, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_15 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_617;
    assume {:nonnull} Tmp_617 != 0;
    assume Tmp_617 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_617], 1) != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_619;
    havoc Tmp_621;
    call {:si_unique_call 264} WPP_SF_D(Tmp_621, 118, Tmp_619, status_15);
    goto L1;

  anon35_Then:
    goto L1;

  anon39_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_617], 1) == 0;
    goto L1;

  anon34_Then:
    goto L1;

  anon33_Then:
    assume {:partition} 0 <= status_15;
    goto L1;

  anon32_Then:
    goto L22;

  anon38_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_616], 1) == 0;
    goto L22;

  anon37_Then:
    goto L22;

  anon30_Then:
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    assume {:partition} sdv_186 == 0;
    goto L1;

  anon36_Then:
    goto L1;

  anon27_Then:
    goto L1;
}



procedure {:origName "Sbp2ManagementTransactionWorker"} Sbp2ManagementTransactionWorker(actual_DeviceObject: int, actual_WorkItemIn: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementTransactionWorker"} Sbp2ManagementTransactionWorker(actual_DeviceObject: int, actual_WorkItemIn: int)
{
  var {:pointer} Tmp_624: int;
  var {:pointer} pdoExtension_5: int;
  var {:pointer} Tmp_625: int;
  var {:scalar} sdv_188: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_627: int;
  var {:scalar} sdv_193: int;
  var {:pointer} WorkItem: int;
  var {:pointer} sdv_195: int;
  var {:scalar} status_16: int;
  var {:scalar} Tmp_628: int;
  var {:pointer} entry_1: int;
  var {:scalar} irql_2: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} WorkItemIn: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 265} vslice_dummy_var_21 := __HAVOC_malloc(4);
    DeviceObject := actual_DeviceObject;
    WorkItemIn := actual_WorkItemIn;
    call {:si_unique_call 266} Tmp_625 := __HAVOC_malloc(4);
    WorkItem := WorkItemIn;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc pdoExtension_5;
    status_16 := -1073741810;
    call {:si_unique_call 267} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    Mem_T.INT4[Tmp_627] := irql_2;
    call {:si_unique_call 268} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    irql_2 := Mem_T.INT4[Tmp_627];
    call {:si_unique_call 269} Sbp2AddLog(pdoExtension_5, 1, -848865463, WorkItem, 0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L20;

  L20:
    call {:si_unique_call 270} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 271} sdv_188 := IsDeviceGone#1(pdoExtension_5, status_16);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_188 != 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 272} vslice_dummy_var_25 := KeSetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_5), 0, 0);
    goto L31;

  L31:
    call {:si_unique_call 273} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    Mem_T.INT4[Tmp_627] := irql_2;
    call {:si_unique_call 274} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    irql_2 := Mem_T.INT4[Tmp_627];
    goto L38;

  L38:
    call {:si_unique_call 275} sdv_193, sdv_195, entry_1 := Sbp2ManagementTransactionWorker_loop_L38(pdoExtension_5, sdv_193, sdv_195, entry_1);
    goto L38_last;

  L38_last:
    call {:si_unique_call 301} sdv_193 := sdv_IsListEmpty(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_193 != 0;
    call {:si_unique_call 276} sdv_KeReleaseSpinLock(0, irql_2);
    goto L27;

  L27:
    call {:si_unique_call 277} IoFreeWorkItem(0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 278} vslice_dummy_var_22 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_5), 0);
    goto LM2;

  LM2:
    return;

  anon37_Then:
    assume {:partition} sdv_193 == 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 279} sdv_195 := RemoveHeadList(BusResetEntry__DEVICE_EXTENSION(pdoExtension_5));
    entry_1 := sdv_195;
    call {:si_unique_call 280} sdv_ExFreePool(0);
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon36_Then:
    goto L31;

  anon35_Then:
    assume {:partition} sdv_188 == 0;
    goto L27;

  anon43_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    goto L18;

  L18:
    call {:si_unique_call 281} Tmp_627, irql_2, vslice_dummy_var_23 := Sbp2ManagementTransactionWorker_loop_L18(pdoExtension_5, Tmp_627, irql_2, vslice_dummy_var_23);
    goto L18_last;

  L18_last:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 282} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 283} vslice_dummy_var_23 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 284} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    Mem_T.INT4[Tmp_627] := irql_2;
    call {:si_unique_call 285} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    irql_2 := Mem_T.INT4[Tmp_627];
    goto anon44_Else_dummy;

  anon44_Else_dummy:
    assume false;
    return;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L55;

  L55:
    call {:si_unique_call 286} Tmp_624, Tmp_625, sdv_190, Tmp_627, status_16, Tmp_628, entry_1, irql_2, vslice_dummy_var_24 := Sbp2ManagementTransactionWorker_loop_L55(Tmp_624, pdoExtension_5, Tmp_625, sdv_190, Tmp_627, status_16, Tmp_628, entry_1, irql_2, vslice_dummy_var_24);
    goto L55_last;

  L55_last:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    havoc entry_1;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_625;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_625], 2048) != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_624;
    havoc Tmp_628;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    havoc vslice_dummy_var_40;
    havoc vslice_dummy_var_41;
    havoc vslice_dummy_var_42;
    call {:si_unique_call 287} WPP_SF_qDddD(Tmp_628, 85, Tmp_624, pdoExtension_5, vslice_dummy_var_40, vslice_dummy_var_41, vslice_dummy_var_42, status_16);
    goto L98;

  L98:
    call {:si_unique_call 288} vslice_dummy_var_24 := sdv_RemoveEntryList(0);
    call {:si_unique_call 289} sdv_ExFreePool(0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_16 != -1073741810;
    call {:si_unique_call 290} sdv_190 := sdv_IsListEmpty(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_190 == 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    assume false;
    return;

  anon41_Then:
    assume {:partition} sdv_190 != 0;
    goto L20;

  anon40_Then:
    assume {:partition} status_16 == -1073741810;
    goto L20;

  anon39_Then:
    goto L98;

  anon47_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_625], 2048) == 0;
    goto L98;

  anon38_Then:
    goto L98;

  anon42_Then:
    call {:si_unique_call 291} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 292} status_16 := Sbp2Issue1394BusReset#1(pdoExtension_5);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 293} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    Mem_T.INT4[Tmp_627] := irql_2;
    call {:si_unique_call 294} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    irql_2 := Mem_T.INT4[Tmp_627];
    call {:si_unique_call 295} Sbp2AddLog(pdoExtension_5, 1, -848865486, status_16, 0);
    goto L97;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    call {:si_unique_call 296} sdv_KeReleaseSpinLock(0, irql_2);
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc vslice_dummy_var_43;
    call {:si_unique_call 297} status_16 := Sbp2ManagementTransaction#1(pdoExtension_5, 0, vslice_dummy_var_43);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 298} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    Mem_T.INT4[Tmp_627] := irql_2;
    call {:si_unique_call 299} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    irql_2 := Mem_T.INT4[Tmp_627];
    call {:si_unique_call 300} Sbp2AddLog(pdoExtension_5, 1, -848865487, status_16, 0);
    goto L97;

  anon46_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int, actual_s_p_e_c_i_a_l_39: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int, actual_s_p_e_c_i_a_l_39: int)
{
  var {:scalar} sdv_197: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:pointer} TraceGuid_8: int;
  var {:pointer} s_p_e_c_i_a_l_37: int;
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 302} vslice_dummy_var_26 := __HAVOC_malloc(4);
    TraceGuid_8 := actual_TraceGuid_8;
    s_p_e_c_i_a_l_37 := actual_s_p_e_c_i_a_l_37;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_37 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_37] != 0;
    Tmp_634 := (sdv_197 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_37 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_37] != 0;
    Tmp_633 := s_p_e_c_i_a_l_37;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_37] == 0;
    Tmp_633 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_37 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_37] == 0;
    Tmp_634 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_37 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int)
{
  var {:pointer} TraceGuid_9: int;
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 303} vslice_dummy_var_27 := __HAVOC_malloc(4);
    TraceGuid_9 := actual_TraceGuid_9;
    return;
}



procedure {:origName "Sbp2BusResetNotificationWorker"} Sbp2BusResetNotificationWorker(actual_DeviceObject_1: int, actual_BusResetItemIn: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusResetNotificationWorker"} Sbp2BusResetNotificationWorker(actual_DeviceObject_1: int, actual_BusResetItemIn: int)
{
  var {:scalar} i_3: int;
  var {:scalar} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} BusResetItem: int;
  var {:scalar} Tmp_723: int;
  var {:pointer} pdoExtension_6: int;
  var {:pointer} Tmp_724: int;
  var {:pointer} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:pointer} Tmp_727: int;
  var {:pointer} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:scalar} mgmtAction: int;
  var {:pointer} Tmp_730: int;
  var {:scalar} Tmp_731: int;
  var {:scalar} Tmp_732: int;
  var {:scalar} Tmp_733: int;
  var {:scalar} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} Tmp_736: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} Tmp_738: int;
  var {:scalar} Tmp_740: int;
  var {:pointer} Tmp_741: int;
  var {:pointer} fdoExtension_1: int;
  var {:pointer} Tmp_742: int;
  var {:scalar} sdv_228: int;
  var {:pointer} Tmp_743: int;
  var {:pointer} Tmp_744: int;
  var {:pointer} Tmp_745: int;
  var {:scalar} Tmp_746: int;
  var {:scalar} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} sdv_230: int;
  var {:scalar} status_20: int;
  var {:scalar} Tmp_750: int;
  var {:scalar} irql_3: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} BusResetItemIn: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 304} vslice_dummy_var_28 := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    BusResetItemIn := actual_BusResetItemIn;
    call {:si_unique_call 305} Tmp_728 := __HAVOC_malloc(4);
    call {:si_unique_call 306} Tmp_729 := __HAVOC_malloc(2680);
    call {:si_unique_call 307} Tmp_730 := __HAVOC_malloc(2680);
    call {:si_unique_call 308} Tmp_738 := __HAVOC_malloc(4);
    call {:si_unique_call 309} Tmp_742 := __HAVOC_malloc(4);
    call {:si_unique_call 310} Tmp_745 := __HAVOC_malloc(4);
    call {:si_unique_call 311} Tmp_749 := __HAVOC_malloc(4);
    call {:si_unique_call 312} Tmp_751 := __HAVOC_malloc(4);
    call {:si_unique_call 313} Tmp_752 := __HAVOC_malloc(4);
    BusResetItem := BusResetItemIn;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc fdoExtension_1;
    i_3 := 0;
    mgmtAction := 0;
    call {:si_unique_call 314} ExAcquireFastMutex(0);
    call {:si_unique_call 315} Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    Mem_T.INT4[Tmp_748] := irql_3;
    call {:si_unique_call 316} sdv_KeAcquireSpinLock(0, Tmp_748);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    irql_3 := Mem_T.INT4[Tmp_748];
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    i_3 := 0;
    goto L22;

  L22:
    call {:si_unique_call 317} i_3, Tmp_721, Tmp_722, Tmp_723, pdoExtension_6, Tmp_724, Tmp_725, Tmp_726, Tmp_727, Tmp_728, Tmp_729, mgmtAction, Tmp_730, Tmp_731, Tmp_732, Tmp_733, Tmp_734, Tmp_735, Tmp_736, Tmp_737, Tmp_738, Tmp_740, Tmp_741, Tmp_742, sdv_228, Tmp_743, Tmp_744, Tmp_745, Tmp_746, Tmp_747, Tmp_748, Tmp_749, sdv_230, status_20, Tmp_750, irql_3, Tmp_751, Tmp_752, Tmp_753, Tmp_754, vslice_dummy_var_29, vslice_dummy_var_30, vslice_dummy_var_32, vslice_dummy_var_33, vslice_dummy_var_34 := Sbp2BusResetNotificationWorker_loop_L22(i_3, Tmp_721, Tmp_722, BusResetItem, Tmp_723, pdoExtension_6, Tmp_724, Tmp_725, Tmp_726, Tmp_727, Tmp_728, Tmp_729, mgmtAction, Tmp_730, Tmp_731, Tmp_732, Tmp_733, Tmp_734, Tmp_735, Tmp_736, Tmp_737, Tmp_738, Tmp_740, Tmp_741, fdoExtension_1, Tmp_742, sdv_228, Tmp_743, Tmp_744, Tmp_745, Tmp_746, Tmp_747, Tmp_748, Tmp_749, sdv_230, status_20, Tmp_750, irql_3, Tmp_751, Tmp_752, Tmp_753, Tmp_754, vslice_dummy_var_29, vslice_dummy_var_30, vslice_dummy_var_32, vslice_dummy_var_33, vslice_dummy_var_34);
    goto L22_last;

  L22_last:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    Tmp_746 := i_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto L82;

  L82:
    i_3 := i_3 + 1;
    goto L82_dummy;

  L82_dummy:
    assume false;
    return;

  anon135_Then:
    Tmp_733 := i_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    havoc Tmp_741;
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    havoc pdoExtension_6;
    call {:si_unique_call 318} status_20 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} status_20 < 0;
    goto L82;

  anon102_Then:
    assume {:partition} 0 <= status_20;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_728;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_728], 2048) != 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    havoc Tmp_726;
    havoc Tmp_721;
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_44;
    havoc vslice_dummy_var_45;
    call {:si_unique_call 319} WPP_SF_qDd(Tmp_721, 20, Tmp_726, pdoExtension_6, vslice_dummy_var_44, vslice_dummy_var_45);
    goto L37;

  L37:
    call {:si_unique_call 320} Sbp2AddLog(pdoExtension_6, 1, -764185538, fdoExtension_1, i_3);
    call {:si_unique_call 321} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 322} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L54;

  L54:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    call {:si_unique_call 323} vslice_dummy_var_29 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L56;

  L56:
    call {:si_unique_call 324} Sbp2AddLog(pdoExtension_6, 1, -764185551, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 325} vslice_dummy_var_32 := KeSetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_6), 0, 0);
    goto L72;

  L72:
    call {:si_unique_call 326} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 327} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 328} vslice_dummy_var_30 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_6), 0);
    mgmtAction := 0;
    goto L82;

  anon109_Then:
    mgmtAction := 2;
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    goto L86;

  L86:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_738], 2048) != 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_735;
    havoc Tmp_723;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_46;
    call {:si_unique_call 329} WPP_SF_qD(Tmp_723, 22, Tmp_735, pdoExtension_6, vslice_dummy_var_46);
    goto L92;

  L92:
    call {:si_unique_call 330} Sbp2AddLog(pdoExtension_6, 1, -764185550, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    mgmtAction := 1;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_727;
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_727)], 16) != 0;
    mgmtAction := 2;
    goto L106;

  L106:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} mgmtAction == 1;
    call {:si_unique_call 331} Sbp2AddLog(pdoExtension_6, 1, -764185549, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 332} sdv_KeReleaseSpinLock(0, irql_3);
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    havoc vslice_dummy_var_47;
    call {:si_unique_call 333} status_20 := Sbp2ManagementTransaction#1(pdoExtension_6, 3, vslice_dummy_var_47);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 334} Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    Mem_T.INT4[Tmp_748] := irql_3;
    call {:si_unique_call 335} sdv_KeAcquireSpinLock(0, Tmp_748);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    irql_3 := Mem_T.INT4[Tmp_748];
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} status_20 < 0;
    call {:si_unique_call 336} sdv_228 := IsDeviceGone#1(pdoExtension_6, status_20);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} yogi_error != 1;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} sdv_228 != 0;
    goto L134;

  L134:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_745;
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_745], 2048) != 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_724;
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    havoc Tmp_734;
    havoc Tmp_743;
    havoc Tmp_750;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_48;
    call {:si_unique_call 337} WPP_SF_qDDd(Tmp_750, 24, Tmp_743, pdoExtension_6, status_20, vslice_dummy_var_48, Tmp_734);
    goto L135;

  L135:
    call {:si_unique_call 338} Sbp2AddLog(pdoExtension_6, 1, -764185548, status_20, 0);
    goto L110;

  L110:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} mgmtAction == 2;
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    havoc vslice_dummy_var_49;
    call {:si_unique_call 339} status_20 := Sbp2QueueManagementWorkItem(pdoExtension_6, 2, vslice_dummy_var_49);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} status_20 < 0;
    call {:si_unique_call 340} sdv_230 := IsDeviceGone#1(pdoExtension_6, status_20);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} yogi_error != 1;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} sdv_230 == 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    havoc Tmp_742;
    assume {:nonnull} Tmp_742 != 0;
    assume Tmp_742 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_742], 2048) != 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    havoc Tmp_753;
    havoc Tmp_731;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_50;
    call {:si_unique_call 341} WPP_SF_qDD(Tmp_731, 25, Tmp_753, pdoExtension_6, status_20, vslice_dummy_var_50);
    goto L160;

  L160:
    mgmtAction := 3;
    goto L146;

  L146:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} mgmtAction == 3;
    call {:si_unique_call 342} Sbp2AddLog(pdoExtension_6, 1, -764185547, mgmtAction, 0);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc Tmp_749;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_749], 2048) != 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_740;
    havoc Tmp_737;
    havoc Tmp_736;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_51;
    call {:si_unique_call 343} WPP_SF_qDDd(Tmp_736, 26, Tmp_737, pdoExtension_6, status_20, vslice_dummy_var_51, Tmp_740);
    goto L175;

  L175:
    call {:si_unique_call 344} Sbp2SetDeferLoginTimer(pdoExtension_6);
    goto L72;

  anon124_Then:
    goto L175;

  anon143_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_749], 2048) == 0;
    goto L175;

  anon123_Then:
    goto L175;

  anon118_Then:
    assume {:partition} mgmtAction != 3;
    goto L72;

  anon122_Then:
    goto L160;

  anon145_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_742], 2048) == 0;
    goto L160;

  anon121_Then:
    goto L160;

  anon120_Then:
    assume {:partition} sdv_230 != 0;
    goto L146;

  anon144_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon119_Then:
    assume {:partition} 0 <= status_20;
    goto L146;

  anon113_Then:
    assume {:partition} mgmtAction != 2;
    goto L146;

  anon117_Then:
    goto L135;

  anon147_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_745], 2048) == 0;
    goto L135;

  anon116_Then:
    goto L135;

  anon115_Then:
    assume {:partition} sdv_228 == 0;
    mgmtAction := 2;
    goto L134;

  anon146_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon114_Then:
    assume {:partition} 0 <= status_20;
    goto L110;

  anon142_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon141_Then:
    assume {:partition} mgmtAction != 1;
    goto L110;

  anon140_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_727)], 16) == 0;
    goto L106;

  anon111_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_752], 2048) != 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc Tmp_725;
    havoc Tmp_732;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_52;
    call {:si_unique_call 345} WPP_SF_qD(Tmp_732, 23, Tmp_725, pdoExtension_6, vslice_dummy_var_52);
    goto L191;

  L191:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 346} vslice_dummy_var_33 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 347} vslice_dummy_var_34 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_6), 0, 0);
    mgmtAction := 2;
    goto L108;

  anon127_Then:
    goto L191;

  anon148_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_752], 2048) == 0;
    goto L191;

  anon126_Then:
    goto L191;

  anon112_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    mgmtAction := 2;
    goto L108;

  anon125_Then:
    mgmtAction := 2;
    goto L108;

  anon110_Then:
    goto L92;

  anon139_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_738], 2048) == 0;
    goto L92;

  anon138_Then:
    goto L92;

  anon137_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_754;
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_754)], 32) != 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    goto L92;

  anon130_Then:
    goto L86;

  anon129_Then:
    goto L92;

  anon128_Then:
    goto L92;

  anon149_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_754)], 32) == 0;
    goto L92;

  anon107_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L216;

  L216:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_751], 2048) != 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_744;
    havoc Tmp_747;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 348} WPP_SF_qD(Tmp_747, 21, Tmp_744, pdoExtension_6, vslice_dummy_var_53);
    goto L72;

  anon133_Then:
    goto L72;

  anon150_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_751], 2048) == 0;
    goto L72;

  anon132_Then:
    goto L72;

  anon108_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L216;

  anon134_Then:
    goto L83;

  anon131_Then:
    goto L216;

  anon106_Then:
    goto L56;

  anon105_Then:
    goto L54;

  anon104_Then:
    goto L37;

  anon136_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_728], 2048) == 0;
    goto L37;

  anon103_Then:
    goto L37;

  anon101_Then:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 349} sdv_KeReleaseSpinLock(0, irql_3);
    call {:si_unique_call 350} ExReleaseFastMutex(0);
    call {:si_unique_call 351} IoFreeWorkItem(0);
    call {:si_unique_call 352} ExFreePoolWithTag(0, -344497581);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 353} vslice_dummy_var_31 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    goto LM2;
}



procedure {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int, actual_s_p_e_c_i_a_l_47: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int, actual_s_p_e_c_i_a_l_47: int)
{
  var {:pointer} TraceGuid_10: int;
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 354} vslice_dummy_var_35 := __HAVOC_malloc(4);
    TraceGuid_10 := actual_TraceGuid_10;
    return;
}



procedure {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_758: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_758 == -1073741670 || Tmp_758 == -1073741823 || Tmp_758 == 259 || Tmp_758 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_758: int)
{
  var {:pointer} blockDescriptor: int;
  var {:pointer} Tmp_760: int;
  var {:scalar} Tmp_762: int;
  var {:pointer} Tmp_763: int;
  var {:pointer} systemAddress: int;
  var {:pointer} Tmp_764: int;
  var {:pointer} Tmp_765: int;
  var {:scalar} pageCode: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} Tmp_769: int;
  var {:scalar} Tmp_771: int;
  var {:scalar} availLength: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} Tmp_775: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} Tmp_779: int;
  var {:pointer} Tmp_780: int;
  var {:pointer} Tmp_781: int;
  var {:pointer} Tmp_782: int;
  var {:pointer} sdv_232: int;
  var {:pointer} Tmp_783: int;
  var {:pointer} Tmp_785: int;
  var {:pointer} cdbRbc: int;
  var {:pointer} Tmp_788: int;
  var {:scalar} Tmp_789: int;
  var {:pointer} Tmp_790: int;
  var {:pointer} Tmp_792: int;
  var {:pointer} Tmp_793: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} rbcParam: int;
  var {:pointer} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:pointer} sdv_233: int;
  var {:pointer} Tmp_797: int;
  var {:pointer} Tmp_798: int;
  var {:pointer} Tmp_799: int;
  var {:scalar} modeHeaderLength: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} Tmp_803: int;
  var {:pointer} Tmp_804: int;
  var {:pointer} Tmp_805: int;
  var {:pointer} Tmp_806: int;
  var {:pointer} sdv_236: int;
  var {:pointer} Tmp_807: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Tmp_809: int;
  var {:pointer} Tmp_810: int;
  var {:pointer} Tmp_811: int;
  var {:pointer} modeHeader: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} Tmp_814: int;
  var {:pointer} Tmp_816: int;
  var {:pointer} Tmp_817: int;
  var {:pointer} Tmp_818: int;
  var {:pointer} Tmp_819: int;
  var {:pointer} cachePage: int;
  var {:scalar} status_21: int;
  var {:pointer} Tmp_821: int;
  var {:scalar} wcd: int;
  var {:pointer} Tmp_822: int;
  var {:pointer} Tmp_823: int;
  var {:scalar} Tmp_824: int;
  var {:pointer} Srb: int;
  var {:pointer} OriginalSrb: int;
  var {:pointer} RbcHeaderAndPage: int;
  var {:scalar} OutgoingRequest: int;
  var {:scalar} RemovableMedia: int;
  var {:scalar} SetCacheHack: int;
  var boogieTmp: int;

  anon0:
    Srb := actual_Srb;
    OriginalSrb := actual_OriginalSrb;
    RbcHeaderAndPage := actual_RbcHeaderAndPage;
    OutgoingRequest := actual_OutgoingRequest;
    RemovableMedia := actual_RemovableMedia;
    SetCacheHack := actual_SetCacheHack;
    call {:si_unique_call 355} Tmp_763 := __HAVOC_malloc(8);
    call {:si_unique_call 356} Tmp_764 := __HAVOC_malloc(64);
    call {:si_unique_call 357} Tmp_765 := __HAVOC_malloc(12);
    call {:si_unique_call 358} Tmp_777 := __HAVOC_malloc(20);
    call {:si_unique_call 359} Tmp_780 := __HAVOC_malloc(12);
    call {:si_unique_call 360} Tmp_781 := __HAVOC_malloc(12);
    call {:si_unique_call 361} Tmp_796 := __HAVOC_malloc(12);
    call {:si_unique_call 362} Tmp_799 := __HAVOC_malloc(64);
    call {:si_unique_call 363} Tmp_803 := __HAVOC_malloc(8);
    call {:si_unique_call 364} Tmp_805 := __HAVOC_malloc(8);
    call {:si_unique_call 365} Tmp_806 := __HAVOC_malloc(12);
    call {:si_unique_call 366} Tmp_810 := __HAVOC_malloc(12);
    call {:si_unique_call 367} Tmp_811 := __HAVOC_malloc(12);
    call {:si_unique_call 368} Tmp_813 := __HAVOC_malloc(64);
    call {:si_unique_call 369} Tmp_814 := __HAVOC_malloc(8);
    call {:si_unique_call 370} Tmp_818 := __HAVOC_malloc(64);
    call {:si_unique_call 371} Tmp_821 := __HAVOC_malloc(20);
    call {:si_unique_call 372} Tmp_823 := __HAVOC_malloc(12);
    modeHeader := 0;
    blockDescriptor := 0;
    status_21 := 259;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} OutgoingRequest != 0;
    modeHeaderLength := 12;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdbRbc := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  L28:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L22;

  L22:
    Tmp_758 := status_21;
    goto L1;

  L1:
    return;

  anon86_Then:
    goto L22;

  anon85_Then:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  anon104_Then:
    goto L22;

  anon105_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} RemovableMedia != 0;
    goto L34;

  L34:
    call {:si_unique_call 373} sdv_232 := ExAllocatePoolWithTag(512, 64, 846226035);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_785;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} Tmp_785 != 0;
    assume Tmp_785 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 374} sdv_233 := IoAllocateMdl(0, 17, 0, 0, 0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_816;
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_783;
    assume {:nonnull} Tmp_783 != 0;
    assume Tmp_783 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_812;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L42;

  L42:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_824;
    goto L62;

  L62:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_798;
    assume {:nonnull} Tmp_798 != 0;
    assume Tmp_798 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_767;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    havoc Tmp_789;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    call {:si_unique_call 375} sdv_RtlCopyMemory(0, 0, Tmp_789);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L22;

  anon89_Then:
    Tmp_824 := 16;
    goto L62;

  anon115_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_801;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_775;
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    call {:si_unique_call 376} sdv_ExFreePool(0);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    Tmp_758 := -1073741670;
    goto L1;

  anon114_Then:
    goto L42;

  anon113_Then:
    Tmp_758 := -1073741670;
    goto L1;

  anon87_Then:
    assume {:partition} RemovableMedia == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 377} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 378} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_823;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    assume {:nonnull} Tmp_823 != 0;
    assume Tmp_823 > 0;
    Mem_T.INT4[Tmp_823 + 2 * 4] := Mem_T.INT4[Tmp_763 + 1 * 4];
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_765;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_805;
    assume {:nonnull} Tmp_765 != 0;
    assume Tmp_765 > 0;
    assume {:nonnull} Tmp_805 != 0;
    assume Tmp_805 > 0;
    Mem_T.INT4[Tmp_765 + 1 * 4] := Mem_T.INT4[Tmp_805];
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_780;
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    Mem_T.INT4[Tmp_780] := 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_777;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_796;
    call {:si_unique_call 379} sdv_RtlCopyMemory(0, 0, 3);
    status_21 := 0;
    goto L22;

  anon88_Then:
    goto L34;

  anon84_Then:
    goto L22;

  anon108_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc cachePage;
    cachePage := cachePage + modeHeaderLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    havoc pageCode;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} pageCode == 8;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    wcd := 0;
    goto L262;

  L262:
    goto L96;

  L96:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    call {:si_unique_call 380} sdv_RtlCopyMemory(0, 0, 17);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} SetCacheHack != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    havoc Tmp_771;
    goto L108;

  L108:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  L109:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} pageCode == 8;
    Tmp_817 := modeHeader;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    goto L22;

  anon112_Then:
    assume {:partition} pageCode != 8;
    goto L22;

  anon91_Then:
    Tmp_771 := 17;
    goto L108;

  anon111_Then:
    assume {:partition} SetCacheHack == 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  anon90_Then:
    wcd := 1;
    goto L262;

  anon110_Then:
    assume {:partition} pageCode != 8;
    goto L96;

  anon109_Then:
    goto L22;

  anon107_Then:
    assume {:partition} OutgoingRequest == 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_778;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    havoc Tmp_764;
    cdb := Tmp_764;
    goto L116;

  L116:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_768;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_804;
    assume {:nonnull} Tmp_768 != 0;
    assume Tmp_768 > 0;
    assume {:nonnull} Tmp_804 != 0;
    assume Tmp_804 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_809;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    call {:si_unique_call 381} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_760;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_760 != 0;
    assume Tmp_760 > 0;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_797;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L121;

  L121:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_793;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_790;
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    havoc Tmp_762;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_788;
    assume {:nonnull} Tmp_788 != 0;
    assume Tmp_788 > 0;
    havoc Tmp_818;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_813;
    call {:si_unique_call 382} sdv_RtlCopyMemory(0, 0, Tmp_762);
    goto L119;

  L119:
    Tmp_758 := -1073741823;
    goto L1;

  anon116_Then:
    goto L121;

  anon94_Then:
    goto L121;

  anon93_Then:
    goto L119;

  anon92_Then:
    modeHeaderLength := 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    systemAddress := 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_782;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_779;
    assume {:nonnull} Tmp_779 != 0;
    assume Tmp_779 > 0;
    call {:si_unique_call 383} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_807;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_819;
    assume {:nonnull} Tmp_807 != 0;
    assume Tmp_807 > 0;
    assume {:nonnull} Tmp_819 != 0;
    assume Tmp_819 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_792;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_792 != 0;
    assume Tmp_792 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_795;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    call {:si_unique_call 384} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto L157;

  L157:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    havoc availLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L161;

  L161:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} availLength >= 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L164;

  L164:
    availLength := availLength - 12;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} modeHeader != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    cachePage := blockDescriptor;
    cachePage := cachePage + 8;
    goto L170;

  L170:
    call {:si_unique_call 385} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  L380:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L22;

  anon123_Then:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  anon122_Then:
    assume {:partition} modeHeader == 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} systemAddress != 0;
    cachePage := systemAddress;
    goto L170;

  anon101_Then:
    assume {:partition} systemAddress == 0;
    Tmp_758 := -1073741670;
    goto L1;

  anon99_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L164;

  anon100_Then:
    goto L22;

  anon98_Then:
    assume {:partition} 12 > availLength;
    goto L22;

  anon121_Then:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} availLength >= modeHeaderLength;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} systemAddress != 0;
    modeHeader := systemAddress;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 386} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 387} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_810;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    Mem_T.INT4[Tmp_810 + 2 * 4] := Mem_T.INT4[Tmp_814 + 1 * 4];
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_781;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_803;
    assume {:nonnull} Tmp_781 != 0;
    assume Tmp_781 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    Mem_T.INT4[Tmp_781 + 1 * 4] := Mem_T.INT4[Tmp_803];
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_811;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    Mem_T.INT4[Tmp_811] := 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_821;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_806;
    call {:si_unique_call 388} sdv_RtlCopyMemory(0, 0, 3);
    availLength := availLength - modeHeaderLength;
    goto L161;

  anon102_Then:
    assume {:partition} systemAddress == 0;
    Tmp_758 := -1073741670;
    goto L1;

  anon97_Then:
    assume {:partition} modeHeaderLength > availLength;
    goto L161;

  anon120_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_808;
    assume {:nonnull} Tmp_808 != 0;
    assume Tmp_808 > 0;
    call {:si_unique_call 389} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} systemAddress != 0;
    call {:si_unique_call 390} sdv_RtlCopyMemory(0, 0, 17);
    goto L157;

  anon103_Then:
    assume {:partition} systemAddress == 0;
    goto L157;

  anon119_Then:
    Tmp_758 := -1073741823;
    goto L1;

  anon96_Then:
    goto L22;

  anon106_Then:
    goto L22;

  anon117_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_822;
    assume {:nonnull} Tmp_822 != 0;
    assume Tmp_822 > 0;
    call {:si_unique_call 391} sdv_236 := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    rbcParam := sdv_236;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} rbcParam != 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    assume {:nonnull} rbcParam != 0;
    assume rbcParam > 0;
    goto L22;

  anon118_Then:
    assume {:partition} rbcParam == 0;
    goto L22;

  anon95_Then:
    goto L22;

  anon83_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_799;
    cdb := Tmp_799;
    goto L116;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 392} vslice_dummy_var_36 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 393} vslice_dummy_var_37 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume DATAID_SBP_LUN_INFORMATION == 6855;
    return;
}



procedure {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int)
{
  var {:pointer} sqmStreamEntry: int;
  var {:pointer} DeviceInfo: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 394} vslice_dummy_var_38 := __HAVOC_malloc(4);
    DeviceInfo := actual_DeviceInfo;
    call {:si_unique_call 395} sqmStreamEntry := __HAVOC_malloc(108);
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    call {:si_unique_call 396} vslice_dummy_var_39 := corral_nondet();
    return;
}



procedure {:origName "IoFreeWorkItem"} {:osmodel} IoFreeWorkItem(actual_IoWorkItem: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeWorkItem"} {:osmodel} IoFreeWorkItem(actual_IoWorkItem: int)
{
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 397} vslice_dummy_var_40 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 398} vslice_dummy_var_41 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 399} vslice_dummy_var_42 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_854: int);
  free ensures {:va_keep} Tmp_854 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_854: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_854 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 400} vslice_dummy_var_43 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 401} vslice_dummy_var_44 := __HAVOC_malloc(4);
    p := actual_p;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p != 0;
    assume p > 0;
    Mem_T.INT4[p] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_860: int);
  free ensures {:va_keep} Tmp_860 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_860: int)
{

  anon0:
    Tmp_860 := 1;
    return;
}



procedure {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end()
{
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 402} vslice_dummy_var_45 := __HAVOC_malloc(4);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_864: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_864 == 1 || Tmp_864 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_864: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 403} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_864 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_864 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_866: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_866: int)
{
  var {:scalar} x: int;
  var {:pointer} sdv_238: int;

  anon0:
    call {:si_unique_call 404} sdv_238 := __HAVOC_malloc(1);
    x := sdv_238;
    Tmp_866 := x;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 405} vslice_dummy_var_46 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_870: int);
  free ensures {:va_keep} Tmp_870 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_870: int)
{

  anon0:
    Tmp_870 := 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_872: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_872: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_872 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_872 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_872 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_874: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_874: int)
{
  var {:pointer} sdv_240: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_874 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 406} sdv_240 := __HAVOC_malloc(1);
    Tmp_874 := sdv_240;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 407} vslice_dummy_var_47 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int)
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 408} vslice_dummy_var_48 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_2: int) returns (Tmp_880: int);
  free ensures {:va_keep} Tmp_880 == -1073741824 || Tmp_880 == -1073741771 || Tmp_880 == -1073741670 || Tmp_880 == -1073741823 || Tmp_880 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_2: int) returns (Tmp_880: int)
{
  var {:pointer} DeviceObject_2: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_880 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_880 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_880 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Tmp_880 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_inside_init_entrypoint != 0;
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    goto L21;

  L21:
    Tmp_880 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_inside_init_entrypoint == 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 409} vslice_dummy_var_49 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 410} vslice_dummy_var_50 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 411} vslice_dummy_var_51 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int)
{
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 412} vslice_dummy_var_52 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_890: int);
  free ensures {:va_keep} Tmp_890 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_890: int)
{

  anon0:
    Tmp_890 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int)
{
  var {:pointer} r: int;
  var {:pointer} pirp_2: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 413} vslice_dummy_var_53 := __HAVOC_malloc(4);
    pirp_2 := actual_pirp_2;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 414} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_896: int);
  free ensures {:va_keep} Tmp_896 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_896: int)
{

  anon0:
    Tmp_896 := 0;
    return;
}



procedure {:origName "sdv_RunISRRoutines"} {:osmodel} sdv_RunISRRoutines(actual_ki: int, actual_pv1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunISRRoutines"} {:osmodel} sdv_RunISRRoutines(actual_ki: int, actual_pv1: int)
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 415} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_900: int);
  free ensures {:va_keep} Tmp_900 == 0 || Tmp_900 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_900: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_900 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_900 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 416} vslice_dummy_var_56 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 417} vslice_dummy_var_57 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_906: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_906: int)
{
  var {:pointer} sdv_247: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_906 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 418} sdv_247 := __HAVOC_malloc(1);
    Tmp_906 := sdv_247;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} sdv_249: int;
  var {:pointer} Tmp_908: int;
  var {:pointer} Tmp_909: int;
  var {:pointer} Tmp_910: int;
  var {:pointer} Tmp_912: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} Tmp_914: int;
  var {:pointer} Tmp_915: int;
  var {:scalar} sdv_267: int;
  var {:pointer} Context_1: int;
  var {:pointer} Tmp_917: int;
  var {:pointer} Tmp_918: int;
  var {:pointer} sdv_275: int;
  var {:pointer} sdv_277: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} Tmp_920: int;
  var {:pointer} sdv_279: int;
  var {:pointer} Tmp_921: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 419} vslice_dummy_var_58 := __HAVOC_malloc(4);
    call {:si_unique_call 420} sdv_267 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 421} sdv_249 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 422} vslice_dummy_var_59 := sdv_CheckDpcRoutines();
    call {:si_unique_call 423} vslice_dummy_var_60 := sdv_CheckIsrRoutines();
    call {:si_unique_call 424} vslice_dummy_var_61 := sdv_CheckCancelRoutines();
    call {:si_unique_call 425} vslice_dummy_var_62 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 426} vslice_dummy_var_63 := sdv_IoCompletionRoutines();
    call {:si_unique_call 427} vslice_dummy_var_64 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 428} vslice_dummy_var_65 := sdv_CheckAddDevice();
    call {:si_unique_call 429} vslice_dummy_var_66 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 430} vslice_dummy_var_67 := sdv_CheckIrpMjPower();
    call {:si_unique_call 431} vslice_dummy_var_68 := sdv_CheckDriverUnload();
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    goto anon204_Then, anon204_Else;

  anon204_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon188_Then:
    goto L1;

  anon189_Then:
    goto L1;

  anon190_Then:
    goto L1;

  anon191_Then:
    goto L1;

  anon192_Then:
    goto L1;

  anon193_Then:
    goto L1;

  anon194_Then:
    goto L1;

  anon195_Then:
    goto L1;

  anon196_Then:
    goto L1;

  anon197_Then:
    goto L1;

  anon198_Then:
    goto L1;

  anon199_Then:
    goto L1;

  anon200_Then:
    goto L1;

  anon201_Then:
    goto L1;

  anon202_Then:
    goto L1;

  anon203_Then:
    goto L1;

  anon204_Then:
    goto L1;

  anon205_Then:
    goto L1;

  anon206_Then:
    goto L1;

  anon207_Then:
    goto L1;

  anon208_Then:
    goto L1;

  anon209_Then:
    goto L1;

  anon210_Then:
    goto L1;

  anon211_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    call {:si_unique_call 432} Sbp2ManagementTransactionWorker(sdv_p_devobj_fdo, Context_1);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon212_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    call {:si_unique_call 433} Sbp2BusResetNotificationWorker(sdv_p_devobj_fdo, Context_1);
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon275_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon213_Then:
    goto L1;

  anon214_Then:
    goto L1;

  anon215_Then:
    goto L1;

  anon216_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon218_Then:
    goto L1;

  anon219_Then:
    goto L1;

  anon220_Then:
    call {:si_unique_call 434} sdv_stub_power_completion_begin();
    call {:si_unique_call 435} sdv_275 := sdv_SetPowerRequestIrpMinorFunction(sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_913 := Overlay_unnamed_tag_5(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_913 != 0;
    assume Tmp_913 > 0;
    havoc Tmp_920;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_918 := Overlay_unnamed_tag_5(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_918 != 0;
    assume Tmp_918 > 0;
    havoc Tmp_919;
    assume {:nonnull} Tmp_919 != 0;
    assume Tmp_919 > 0;
    assume {:nonnull} Tmp_920 != 0;
    assume Tmp_920 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    havoc vslice_dummy_var_54;
    havoc vslice_dummy_var_55;
    call {:si_unique_call 436} Sbp2PdoSystemPowerCompletion(sdv_p_devobj_fdo, vslice_dummy_var_54, vslice_dummy_var_55, sdv_pv2, IoStatus__IRP(sdv_irp));
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon221_Then:
    call {:si_unique_call 437} sdv_stub_power_completion_begin();
    call {:si_unique_call 438} sdv_277 := sdv_SetPowerRequestIrpMinorFunction(sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_912 := Overlay_unnamed_tag_5(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_912 != 0;
    assume Tmp_912 > 0;
    havoc Tmp_917;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_915 := Overlay_unnamed_tag_5(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_915 != 0;
    assume Tmp_915 > 0;
    havoc Tmp_921;
    assume {:nonnull} Tmp_917 != 0;
    assume Tmp_917 > 0;
    assume {:nonnull} Tmp_921 != 0;
    assume Tmp_921 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    havoc vslice_dummy_var_56;
    havoc vslice_dummy_var_57;
    call {:si_unique_call 439} Sbp2FdoSystemPowerUpCompletion(sdv_p_devobj_fdo, vslice_dummy_var_56, vslice_dummy_var_57, sdv_pv2, IoStatus__IRP(sdv_irp));
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon222_Then:
    call {:si_unique_call 440} sdv_stub_power_completion_begin();
    call {:si_unique_call 441} sdv_279 := sdv_SetPowerRequestIrpMinorFunction(sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_908 := Overlay_unnamed_tag_5(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_908 != 0;
    assume Tmp_908 > 0;
    havoc Tmp_914;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_909 := Overlay_unnamed_tag_5(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    havoc Tmp_910;
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    assume {:nonnull} Tmp_914 != 0;
    assume Tmp_914 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    havoc vslice_dummy_var_75;
    havoc vslice_dummy_var_76;
    call {:si_unique_call 442} Sbp2FdoSystemPowerDownCompletion(sdv_p_devobj_fdo, vslice_dummy_var_75, vslice_dummy_var_76, sdv_pv2, IoStatus__IRP(sdv_irp));
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon223_Then:
    goto L1;

  anon224_Then:
    goto L1;

  anon225_Then:
    goto L1;

  anon226_Then:
    goto L1;

  anon227_Then:
    goto L1;

  anon228_Then:
    goto L1;

  anon229_Then:
    goto L1;

  anon230_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 443} vslice_dummy_var_74 := Sbp2RequestCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon274_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon231_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 444} vslice_dummy_var_73 := Sbp2PortForwardIrpSynchronousCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon232_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 445} vslice_dummy_var_72 := Sbp2FdoSystemPowerCompletion(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon233_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 446} vslice_dummy_var_71 := Sbp2FdoRequestCompletionRoutine(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon234_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 447} vslice_dummy_var_70 := Sbp2FdoDevicePowerCompletion(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon235_Then:
    goto L1;

  anon236_Then:
    goto L1;

  anon237_Then:
    goto L1;

  anon238_Then:
    goto L1;

  anon239_Then:
    goto L1;

  anon240_Then:
    goto L1;

  anon241_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon243_Then:
    goto L1;

  anon244_Then:
    goto L1;

  anon245_Then:
    goto L1;

  anon246_Then:
    goto L1;

  anon247_Then:
    goto L1;

  anon248_Then:
    goto L1;

  anon249_Then:
    goto L1;

  anon250_Then:
    goto L1;

  anon251_Then:
    goto L1;

  anon252_Then:
    goto L1;

  anon253_Then:
    goto L1;

  anon254_Then:
    goto L1;

  anon255_Then:
    goto L1;

  anon256_Then:
    goto L1;

  anon257_Then:
    goto L1;

  anon258_Then:
    goto L1;

  anon259_Then:
    goto L1;

  anon260_Then:
    goto L1;

  anon261_Then:
    goto L1;

  anon262_Then:
    goto L1;

  anon263_Then:
    goto L1;

  anon264_Then:
    goto L1;

  anon265_Then:
    goto L1;

  anon266_Then:
    goto L1;

  anon267_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 448} Sbp2RequestTimeoutDpc(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon273_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon268_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 449} Sbp2DeviceManagementTimeoutDpc(sdv_kdpc, sdv_pDpcContext, sdv_pv2, sdv_pv3);
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon272_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon269_Then:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} sdv_249 != 0;
    call {:si_unique_call 450} sdv_stub_driver_init();
    call {:si_unique_call 451} sdv_RunStartIo(sdv_p_devobj_fdo, sdv_irp);
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon271_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    assume {:partition} sdv_249 == 0;
    goto L1;

  anon185_Then:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} sdv_267 != 0;
    call {:si_unique_call 452} sdv_stub_driver_init();
    call {:si_unique_call 453} vslice_dummy_var_69 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon270_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon186_Then:
    assume {:partition} sdv_267 == 0;
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_922: int);
  free ensures {:va_keep} Tmp_922 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_922: int)
{

  anon0:
    Tmp_922 := 1;
    return;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_924: int);
  free ensures {:va_keep} Tmp_924 == 0 || Tmp_924 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_924: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_924 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_924 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_926: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_926: int)
{
  var {:pointer} sdv_284: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 454} sdv_284 := __HAVOC_malloc(1);
    Tmp_926 := sdv_284;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_926 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_928: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_928: int)
{
  var {:pointer} sdv_286: int;
  var {:pointer} p_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 455} sdv_286 := __HAVOC_malloc(1);
    p_1 := sdv_286;
    Tmp_928 := p_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_928 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_930: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_930: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_287: int;

  anon0:
    call {:si_unique_call 456} sdv_287 := __HAVOC_malloc(1);
    x_2 := sdv_287;
    Tmp_930 := x_2;
    return;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_932: int);
  free ensures {:va_keep} Tmp_932 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_932: int)
{

  anon0:
    Tmp_932 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_934: int);
  free ensures {:va_keep} Tmp_934 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_934: int)
{

  anon0:
    Tmp_934 := 1;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_936: int);
  free ensures {:va_keep} Tmp_936 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_936: int)
{
  var {:scalar} status_22: int;
  var {:pointer} Irp_1: int;

  anon0:
    Irp_1 := actual_Irp_1;
    status_22 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  L25:
    Tmp_936 := status_22;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L36;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_4: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_4: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_1: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 457} State := __HAVOC_malloc(8);
    call {:si_unique_call 458} r_1 := __HAVOC_malloc(8);
    call {:si_unique_call 459} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == actual_new;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int)
{
  var {:scalar} new: int;
  var {:pointer} p_2: int;
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 460} vslice_dummy_var_75 := __HAVOC_malloc(4);
    new := actual_new;
    p_2 := actual_p_2;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := new;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    Mem_T.INT4[p_2] := sdv_irql_previous;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_941: int);
  free ensures {:va_keep} Tmp_941 == 1 || Tmp_941 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_941: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_941 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_941 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 461} vslice_dummy_var_76 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_2: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 462} vslice_dummy_var_77 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context_2 := actual_Context_2;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 463} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "_sdv_init9"} {:osmodel} _sdv_init9();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 0;
  free ensures {:va_keep} sdv_irql_previous_2 == 0;
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == 0;
  free ensures {:va_keep} sdv_irql_previous_4 == 0;
  free ensures {:va_keep} sdv_irql_previous_3 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} {:osmodel} _sdv_init9()
{
  var vslice_dummy_var_78: int;

  anon0:
    call {:si_unique_call 464} vslice_dummy_var_78 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    sdv_irql_current := 0;
    sdv_irql_previous := 0;
    sdv_irql_previous_2 := 0;
    sdv_irql_previous_3 := 0;
    sdv_irql_previous_4 := 0;
    sdv_irql_previous_5 := 0;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume p_sdv_fx_dev_object == sdv_fx_dev_object;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_isr_routine == li2bplFunctionConstant799;
    assume sdv_ke_dpc == li2bplFunctionConstant801;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant804;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_79: int;

  anon0:
    call {:si_unique_call 465} vslice_dummy_var_79 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 1;
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_951: int);
  free ensures {:va_keep} Tmp_951 == 1 || Tmp_951 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_951: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_951 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_951 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int)
{
  var vslice_dummy_var_80: int;

  anon0:
    call {:si_unique_call 466} vslice_dummy_var_80 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_955: int);
  modifies yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_955: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    call {:si_unique_call 467} SLIC_KeWaitForSingleObject_entry(strConst__li2bpl2, Timeout);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Timeout != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_955 := 258;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    Tmp_955 := 0;
    goto L1;

  anon7_Then:
    assume {:partition} Timeout == 0;
    Tmp_955 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_5: int)
{
  var vslice_dummy_var_81: int;

  anon0:
    call {:si_unique_call 468} vslice_dummy_var_81 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_959: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_959: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_959 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_963: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_963: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    havoc Tmp_963;
    return;
}



procedure {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunKeDpcRoutines"} {:osmodel} sdv_RunKeDpcRoutines(actual_kdpc: int, actual_pDpcContext: int, actual_pv2: int, actual_pv3: int)
{
  var {:pointer} kdpc: int;
  var {:pointer} pDpcContext: int;
  var vslice_dummy_var_82: int;

  anon0:
    call {:si_unique_call 469} vslice_dummy_var_82 := __HAVOC_malloc(4);
    kdpc := actual_kdpc;
    pDpcContext := actual_pDpcContext;
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_dpc_ke_registered != 0;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 470} Sbp2DeviceManagementTimeoutDpc(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L4;

  L4:
    assume {:nonnull} kdpc != 0;
    assume kdpc > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_dpc_ke_registered != 0;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 471} Sbp2RequestTimeoutDpc(kdpc, pDpcContext, sdv_pv2, sdv_pv3);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    assume {:partition} sdv_dpc_ke_registered == 0;
    goto L1;

  anon14_Then:
    goto L1;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} sdv_dpc_ke_registered == 0;
    goto L4;

  anon13_Then:
    goto L4;
}



procedure {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0 || sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin()
{
  var vslice_dummy_var_83: int;

  anon0:
    call {:si_unique_call 472} vslice_dummy_var_83 := __HAVOC_malloc(4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    goto L1;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_969: int);
  free ensures {:va_keep} Tmp_969 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_969: int)
{

  anon0:
    Tmp_969 := sdv_irql_current;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_6: int, actual_MinorFunction: int, actual_SD3: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_971: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_971 == -1073741584 || Tmp_971 == 259 || Tmp_971 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_6: int, actual_MinorFunction: int, actual_SD3: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_971: int)
{
  var {:scalar} PowerState_3: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} SD3: int;

  anon0:
    call {:si_unique_call 473} PowerState_3 := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    SD3 := actual_SD3;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_971 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_971 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_971 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_973: int, dup_assertVar: bool);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_973: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_974: int;
  var {:scalar} Tmp_975: int;
  var boogieTmp: int;
  var WPP_GLOBAL_Control__Loc: int;
  var EventTraceConfigGuid__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var GUID_DEVINTERFACE_STORAGEPORT__Loc: int;
  var GUID_DEVINTERFACE_FLOPPY__Loc: int;
  var GUID_DEVICEDUMP_STORAGE_DEVICE__Loc: int;
  var GUID_DEVINTERFACE_WRITEONCEDISK__Loc: int;
  var WPP_TRACE_CONTROL_NULL_GUID__Loc: int;
  var GUID_DEVINTERFACE_TAPE__Loc: int;
  var GUID_DEVINTERFACE_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_CDCHANGER__Loc: int;
  var GUID_DEVINTERFACE_MEDIUMCHANGER__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var GUID_DEVINTERFACE_VMLUN__Loc: int;
  var DefaultTraceSecurityGuid__Loc: int;
  var GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc: int;
  var GUID_DEVINTERFACE_PARTITION__Loc: int;
  var GUID_DEVINTERFACE_CDROM__Loc: int;
  var GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_DISK__Loc: int;
  var SystemTraceControlGuid__Loc: int;
  var EventTraceGuid__Loc: int;
  var GUID_DEVINTERFACE_SES__Loc: int;
  var WPP_ThisDir_CTLGUID_wppCtlGuid__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_fx_dev_object__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var KeTickCount__Loc: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 474} WPP_GLOBAL_Control__Loc := __HAVOC_malloc_or_null(4);
    assume WPP_GLOBAL_Control__Loc == WPP_GLOBAL_Control;
    assume WPP_GLOBAL_Control != 0;
    call {:si_unique_call 475} EventTraceConfigGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceConfigGuid__Loc == EventTraceConfigGuid;
    assume EventTraceConfigGuid != 0;
    call {:si_unique_call 476} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 477} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 478} GUID_DEVINTERFACE_STORAGEPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_STORAGEPORT__Loc == GUID_DEVINTERFACE_STORAGEPORT;
    assume GUID_DEVINTERFACE_STORAGEPORT != 0;
    call {:si_unique_call 479} GUID_DEVINTERFACE_FLOPPY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_FLOPPY__Loc == GUID_DEVINTERFACE_FLOPPY;
    assume GUID_DEVINTERFACE_FLOPPY != 0;
    call {:si_unique_call 480} GUID_DEVICEDUMP_STORAGE_DEVICE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_STORAGE_DEVICE__Loc == GUID_DEVICEDUMP_STORAGE_DEVICE;
    assume GUID_DEVICEDUMP_STORAGE_DEVICE != 0;
    call {:si_unique_call 481} GUID_DEVINTERFACE_WRITEONCEDISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_WRITEONCEDISK__Loc == GUID_DEVINTERFACE_WRITEONCEDISK;
    assume GUID_DEVINTERFACE_WRITEONCEDISK != 0;
    call {:si_unique_call 482} WPP_TRACE_CONTROL_NULL_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_TRACE_CONTROL_NULL_GUID__Loc == WPP_TRACE_CONTROL_NULL_GUID;
    assume WPP_TRACE_CONTROL_NULL_GUID != 0;
    call {:si_unique_call 483} GUID_DEVINTERFACE_TAPE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_TAPE__Loc == GUID_DEVINTERFACE_TAPE;
    assume GUID_DEVINTERFACE_TAPE != 0;
    call {:si_unique_call 484} GUID_DEVINTERFACE_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VOLUME__Loc == GUID_DEVINTERFACE_VOLUME;
    assume GUID_DEVINTERFACE_VOLUME != 0;
    call {:si_unique_call 485} GUID_DEVINTERFACE_CDCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDCHANGER__Loc == GUID_DEVINTERFACE_CDCHANGER;
    assume GUID_DEVINTERFACE_CDCHANGER != 0;
    call {:si_unique_call 486} GUID_DEVINTERFACE_MEDIUMCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_MEDIUMCHANGER__Loc == GUID_DEVINTERFACE_MEDIUMCHANGER;
    assume GUID_DEVINTERFACE_MEDIUMCHANGER != 0;
    call {:si_unique_call 487} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 488} GUID_DEVINTERFACE_VMLUN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VMLUN__Loc == GUID_DEVINTERFACE_VMLUN;
    assume GUID_DEVINTERFACE_VMLUN != 0;
    call {:si_unique_call 489} DefaultTraceSecurityGuid__Loc := __HAVOC_malloc_or_null(16);
    assume DefaultTraceSecurityGuid__Loc == DefaultTraceSecurityGuid;
    assume DefaultTraceSecurityGuid != 0;
    call {:si_unique_call 490} GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc == GUID_DEVICEDUMP_DRIVER_STORAGE_PORT;
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT != 0;
    call {:si_unique_call 491} GUID_DEVINTERFACE_PARTITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_PARTITION__Loc == GUID_DEVINTERFACE_PARTITION;
    assume GUID_DEVINTERFACE_PARTITION != 0;
    call {:si_unique_call 492} GUID_DEVINTERFACE_CDROM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDROM__Loc == GUID_DEVINTERFACE_CDROM;
    assume GUID_DEVINTERFACE_CDROM != 0;
    call {:si_unique_call 493} GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc == GUID_DEVINTERFACE_HIDDEN_VOLUME;
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME != 0;
    call {:si_unique_call 494} GUID_DEVINTERFACE_DISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_DISK__Loc == GUID_DEVINTERFACE_DISK;
    assume GUID_DEVINTERFACE_DISK != 0;
    call {:si_unique_call 495} SystemTraceControlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SystemTraceControlGuid__Loc == SystemTraceControlGuid;
    assume SystemTraceControlGuid != 0;
    call {:si_unique_call 496} EventTraceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceGuid__Loc == EventTraceGuid;
    assume EventTraceGuid != 0;
    call {:si_unique_call 497} GUID_DEVINTERFACE_SES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_SES__Loc == GUID_DEVINTERFACE_SES;
    assume GUID_DEVINTERFACE_SES != 0;
    call {:si_unique_call 498} WPP_ThisDir_CTLGUID_wppCtlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_ThisDir_CTLGUID_wppCtlGuid__Loc == WPP_ThisDir_CTLGUID_wppCtlGuid;
    assume WPP_ThisDir_CTLGUID_wppCtlGuid != 0;
    call {:si_unique_call 499} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 500} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 501} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 502} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 503} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 504} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 505} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 506} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 507} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 508} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 509} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 510} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 511} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 512} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 513} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 514} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 515} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 516} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 517} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 518} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 519} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 520} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 521} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 522} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 523} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 524} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 525} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 526} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 527} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 528} sdv_fx_dev_object__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_fx_dev_object__Loc == sdv_fx_dev_object;
    assume sdv_fx_dev_object != 0;
    call {:si_unique_call 529} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 530} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 531} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 532} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 533} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 534} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 535} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 536} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 537} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 538} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 539} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 540} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 541} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv1 == boogieTmp;
    call {:si_unique_call 542} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 543} boogieTmp := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc == boogieTmp;
    call {:si_unique_call 544} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 545} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pIoDpcContext == boogieTmp;
    call {:si_unique_call 546} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 547} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 548} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 549} boogieTmp := __HAVOC_malloc_or_null(240);
    assume sicrni == boogieTmp;
    call {:si_unique_call 550} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 551} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 552} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 553} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 554} boogieTmp := __HAVOC_malloc_or_null(48);
    call {:si_unique_call 555} vslice_dummy_var_77 := __HAVOC_malloc(44);
    call {:si_unique_call 556} vslice_dummy_var_78 := __HAVOC_malloc(44);
    call {:si_unique_call 557} vslice_dummy_var_79 := __HAVOC_malloc(44);
    call {:si_unique_call 558} vslice_dummy_var_80 := __HAVOC_malloc(44);
    call {:si_unique_call 559} vslice_dummy_var_81 := __HAVOC_malloc(44);
    call {:si_unique_call 560} vslice_dummy_var_580 := __HAVOC_malloc(236);
    assume {:mainInitDone} true;
    call {:si_unique_call 561} corralExtraInit();
    call {:si_unique_call 562} corralExplainErrorInit();
    call {:si_unique_call 563} _sdv_init11();
    call {:si_unique_call 564} _sdv_init1();
    call {:si_unique_call 565} _sdv_init4();
    call {:si_unique_call 566} _sdv_init5();
    call {:si_unique_call 567} _sdv_init3();
    call {:si_unique_call 568} _sdv_init6();
    call {:si_unique_call 569} _sdv_init9();
    call {:si_unique_call 570} _sdv_init7();
    call {:si_unique_call 571} _sdv_init8();
    call {:si_unique_call 572} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_975 := 0;
    goto L34;

  L34:
    assume Tmp_975 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_974 := 0;
    goto L38;

  L38:
    assume Tmp_974 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 573} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L32;

  L32:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_974 := 1;
    goto L38;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_975 := 1;
    goto L34;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int)
{
  var {:pointer} pirp_7: int;
  var vslice_dummy_var_84: int;

  anon0:
    call {:si_unique_call 574} vslice_dummy_var_84 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_7 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_7 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_7 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_7 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_979: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_979: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Mem_T.INT4[Addend] := Mem_T.INT4[Addend] - 1;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Tmp_979 := Mem_T.INT4[Addend];
    return;
}



procedure {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_981: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_981: int)
{
  var {:pointer} sdv_295: int;

  anon0:
    call {:si_unique_call 575} sdv_295 := __HAVOC_malloc(4);
    Tmp_981 := sdv_295;
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_983: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_983: int)
{
  var {:pointer} sdv_297: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 576} sdv_297 := __HAVOC_malloc(1);
    Tmp_983 := sdv_297;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_983 := 0;
    goto L1;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var {:pointer} DestinationString_1: int;
  var {:pointer} SourceString_1: int;
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 577} vslice_dummy_var_85 := __HAVOC_malloc(4);
    DestinationString_1 := actual_DestinationString_1;
    SourceString_1 := actual_SourceString_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_1 != 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_1 == 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_1 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_1 == 0;
    goto L4;
}



procedure {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_987: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_987: int)
{
  var {:scalar} r_2: int;
  var {:scalar} sdv_298: int;

  anon0:
    r_2 := sdv_298;
    Tmp_987 := r_2;
    return;
}



procedure {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int)
{
  var vslice_dummy_var_86: int;

  anon0:
    call {:si_unique_call 578} vslice_dummy_var_86 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int)
{
  var vslice_dummy_var_87: int;

  anon0:
    call {:si_unique_call 579} vslice_dummy_var_87 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_8: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_8: int)
{
  var {:pointer} po: int;
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 580} vslice_dummy_var_88 := __HAVOC_malloc(4);
    po := actual_po;
    pirp_8 := actual_pirp_8;
    call {:si_unique_call 581} sdv_stub_startio_begin();
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    call {:si_unique_call 582} Sbp2StartIo#1(po, pirp_8);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 583} sdv_stub_startio_end();
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 584} vslice_dummy_var_89 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_997: int);
  free ensures {:va_keep} Tmp_997 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_997: int)
{

  anon0:
    Tmp_997 := 1;
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int)
{
  var vslice_dummy_var_90: int;

  anon0:
    call {:si_unique_call 585} vslice_dummy_var_90 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int)
{
  var vslice_dummy_var_91: int;

  anon0:
    call {:si_unique_call 586} vslice_dummy_var_91 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin()
{
  var vslice_dummy_var_92: int;

  anon0:
    call {:si_unique_call 587} vslice_dummy_var_92 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_1005: int);
  free ensures {:va_keep} Tmp_1005 == 0 || Tmp_1005 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_1005: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1005 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1005 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_93: int;

  anon0:
    call {:si_unique_call 588} vslice_dummy_var_93 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int)
{
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 589} vslice_dummy_var_94 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_NewIrql;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 590} vslice_dummy_var_95 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    sdv_irql_current := NewIrql;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int)
{
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 591} vslice_dummy_var_96 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_10: int) returns (Tmp_1015: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_10: int) returns (Tmp_1015: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_1016: int;
  var {:scalar} sdv_308: int;
  var {:scalar} status_24: int;
  var {:scalar} Tmp_1018: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_10: int;

  anon0:
    po_1 := actual_po_1;
    pirp_10 := actual_pirp_10;
    status_24 := 0;
    minor := sdv_308;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 592} sdv_SetStatus(pirp_10);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 593} sdv_stub_dispatch_begin();
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_1016 := 0;
    goto L232;

  L232:
    assume Tmp_1016 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L66;

  L66:
    call {:si_unique_call 594} status_24 := Sbp2PnpDeviceControl(po_1, pirp_10);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 595} sdv_RunISRRoutines(0, 0);
    call {:si_unique_call 596} sdv_RunKeDpcRoutines(sdv_kdpc3, sdv_pDpcContext, 0, 0);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 597} sdv_RunIoDpcRoutines(0, 0, 0, 0);
    goto L81;

  L81:
    call {:si_unique_call 598} sdv_stub_dispatch_end(status_24, 0);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    Tmp_1015 := status_24;
    goto LM2;

  LM2:
    return;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon62_Then:
    goto L66;

  anon63_Then:
    Tmp_1016 := 1;
    goto L232;

  anon61_Then:
    goto L61;

  anon85_Then:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_1018 := 0;
    goto L239;

  L239:
    assume Tmp_1018 != 0;
    goto L60;

  anon60_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_1018 := 1;
    goto L239;

  anon64_Then:
    call {:si_unique_call 599} status_24 := sdv_DoNothing();
    goto L81;

  anon65_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 600} status_24 := Sbp2SystemControl(po_1, pirp_10);
    goto L81;

  anon66_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 601} sdv_SetPowerIrpMinorFunction(pirp_10);
    call {:si_unique_call 602} status_24 := Sbp2PowerControl(po_1, pirp_10);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 603} sdv_RunISRRoutines(0, 0);
    call {:si_unique_call 604} sdv_RunKeDpcRoutines(sdv_kdpc3, sdv_pDpcContext, 0, 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 605} sdv_RunIoDpcRoutines(0, 0, 0, 0);
    goto L81;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 606} status_24 := sdv_DoNothing();
    goto L81;

  anon68_Then:
    call {:si_unique_call 607} status_24 := sdv_DoNothing();
    goto L81;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 608} status_24 := sdv_DoNothing();
    goto L81;

  anon70_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 609} status_24 := Sbp2ScsiRequests(po_1, pirp_10);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 610} status_24 := Sbp2DeviceControl(po_1, pirp_10);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    call {:si_unique_call 611} status_24 := sdv_DoNothing();
    goto L81;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 612} status_24 := sdv_DoNothing();
    goto L81;

  anon74_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 613} status_24 := sdv_DoNothing();
    goto L81;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 614} status_24 := sdv_DoNothing();
    goto L81;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 615} status_24 := sdv_DoNothing();
    goto L81;

  anon77_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 616} status_24 := sdv_DoNothing();
    goto L81;

  anon78_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 617} status_24 := Sbp2CreateClose(po_1, pirp_10);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 618} status_24 := Sbp2CreateClose(po_1, pirp_10);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L81;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_1019: int);
  free ensures {:va_keep} Tmp_1019 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_1019: int)
{

  anon0:
    Tmp_1019 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1021: int);
  free ensures {:va_keep} Tmp_1021 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1021: int)
{

  anon0:
    Tmp_1021 := 0;
    return;
}



procedure {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_1023: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_1023: int)
{
  var {:scalar} OldState_1: int;
  var {:pointer} Event_1: int;

  anon0:
    Event_1 := actual_Event_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    havoc OldState_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    Tmp_1023 := OldState_1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new_1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 619} vslice_dummy_var_97 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    sdv_irql_current := new_1;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 620} vslice_dummy_var_98 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_1029: int);
  free ensures {:va_keep} Tmp_1029 == 0 || Tmp_1029 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_1029: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1029 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1029 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int)
{
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 621} vslice_dummy_var_99 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int)
{
  var vslice_dummy_var_100: int;

  anon0:
    call {:si_unique_call 622} vslice_dummy_var_100 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_RunIoDpcRoutines"} {:osmodel} sdv_RunIoDpcRoutines(actual_Dpc_2: int, actual_DeviceObject_7: int, actual_Irp_5: int, actual_Context_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunIoDpcRoutines"} {:osmodel} sdv_RunIoDpcRoutines(actual_Dpc_2: int, actual_DeviceObject_7: int, actual_Irp_5: int, actual_Context_4: int)
{
  var vslice_dummy_var_101: int;

  anon0:
    call {:si_unique_call 623} vslice_dummy_var_101 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_1037: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1037 == -1073741811 || Tmp_1037 == -1073741823 || Tmp_1037 == 0 || Tmp_1037 == 5 || Tmp_1037 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_1037: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_320: int;
  var {:scalar} Length_5: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_5 := actual_Length_5;
    ResultLength := actual_ResultLength;
    L := sdv_320;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_1037 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_1037 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_5;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_5 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1037 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_5 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_5;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1037 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_5 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_1037 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_5;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_102: int;

  anon0:
    call {:si_unique_call 624} vslice_dummy_var_102 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1041: int);
  free ensures {:va_keep} Tmp_1041 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1041: int)
{

  anon0:
    Tmp_1041 := 0;
    return;
}



procedure {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int)
{
  var vslice_dummy_var_103: int;

  anon0:
    call {:si_unique_call 625} vslice_dummy_var_103 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_8: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_1045: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_8: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_1045: int)
{
  var {:pointer} r_3: int;
  var {:pointer} sdv_321: int;

  anon0:
    call {:si_unique_call 626} sdv_321 := __HAVOC_malloc(1);
    r_3 := sdv_321;
    Tmp_1045 := r_3;
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_1049: int);
  free ensures {:va_keep} Tmp_1049 == -1073741823 || Tmp_1049 == -1073741738 || Tmp_1049 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_1049: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_1049 := -1073741823;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1049 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_1049 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1051: int);
  free ensures {:va_keep} Tmp_1051 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1051: int)
{

  anon0:
    Tmp_1051 := 1;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1053: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1053: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Mem_T.INT4[Addend_1] := Mem_T.INT4[Addend_1] + 1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Tmp_1053 := Mem_T.INT4[Addend_1];
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_104: int;

  anon0:
    call {:si_unique_call 627} vslice_dummy_var_104 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_105: int;

  anon0:
    call {:si_unique_call 628} vslice_dummy_var_105 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1059: int);
  free ensures {:va_keep} Tmp_1059 == 1 || Tmp_1059 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1059: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1059 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1059 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1061: int);
  free ensures {:va_keep} Tmp_1061 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1061: int)
{

  anon0:
    Tmp_1061 := 1;
    return;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_1063: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_1063: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 629} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Tmp_1063 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1063 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_9: int, actual_Irp_6: int) returns (Tmp_1065: int);
  free ensures {:va_keep} Tmp_1065 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_9: int, actual_Irp_6: int) returns (Tmp_1065: int)
{
  var {:scalar} status_25: int;
  var {:pointer} Irp_6: int;

  anon0:
    Irp_6 := actual_Irp_6;
    status_25 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  L25:
    Tmp_1065 := status_25;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_6;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_6;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_6;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_6;
    goto L36;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_1067: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_1067: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_1067 := p_4;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int)
{
  var {:pointer} Event_2: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_2: int;
  var vslice_dummy_var_106: int;

  anon0:
    call {:si_unique_call 630} vslice_dummy_var_106 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    Type_2 := actual_Type_2;
    State_2 := actual_State_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_107: int;

  anon0:
    call {:si_unique_call 631} vslice_dummy_var_107 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_10: int, actual_Irp_7: int) returns (Tmp_1073: int);
  free ensures {:va_keep} Tmp_1073 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_10: int, actual_Irp_7: int) returns (Tmp_1073: int)
{
  var {:pointer} Irp_7: int;

  anon0:
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 632} Tmp_1073 := IofCallDriver(0, Irp_7);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int)
{
  var vslice_dummy_var_108: int;

  anon0:
    call {:si_unique_call 633} vslice_dummy_var_108 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int)
{
  var {:pointer} SpinLock_5: int;
  var vslice_dummy_var_109: int;

  anon0:
    call {:si_unique_call 634} vslice_dummy_var_109 := __HAVOC_malloc(4);
    SpinLock_5 := actual_SpinLock_5;
    assume {:nonnull} SpinLock_5 != 0;
    assume SpinLock_5 > 0;
    Mem_T.INT4[SpinLock_5] := 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1079: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1079: int)
{
  var {:pointer} sdv_330: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 635} sdv_330 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1079 := sdv_330;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1079 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_11: int) returns (Tmp_1081: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_11: int) returns (Tmp_1081: int)
{
  var {:pointer} ioWorkItem: int;
  var {:pointer} sdv_332: int;
  var {:scalar} Tmp_1083: int;

  anon0:
    call {:si_unique_call 636} sdv_332 := __HAVOC_malloc(1);
    ioWorkItem := sdv_332;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_1083 := 0;
    goto L27;

  L27:
    assume Tmp_1083 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_1081 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_1083 := 1;
    goto L27;

  anon6_Then:
    Tmp_1081 := 0;
    goto L1;
}



procedure {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int)
{
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 637} vslice_dummy_var_110 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_111: int;

  anon0:
    call {:si_unique_call 638} vslice_dummy_var_111 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerRequestIrpMinorFunction"} {:osmodel} sdv_SetPowerRequestIrpMinorFunction(actual_pirp_13: int) returns (Tmp_1088: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerRequestIrpMinorFunction"} {:osmodel} sdv_SetPowerRequestIrpMinorFunction(actual_pirp_13: int) returns (Tmp_1088: int)
{
  var {:pointer} r_4: int;
  var {:pointer} pirp_13: int;

  anon0:
    pirp_13 := actual_pirp_13;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    havoc r_4;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  L37:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  L40:
    Tmp_1088 := r_4;
    return;

  anon45_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon46_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon47_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon48_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon49_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon38_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon39_Then:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  L69:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  anon50_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon51_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon36_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon35_Then:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  L55:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  anon40_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon41_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon42_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon43_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon44_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon37_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_112: int;

  anon0:
    call {:si_unique_call 639} vslice_dummy_var_112 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_12: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1092: int);
  free ensures {:va_keep} Tmp_1092 == -1073741811 || Tmp_1092 == -1073741808 || Tmp_1092 == -1073741823 || Tmp_1092 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_12: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1092: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1092 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1092 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1092 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1092 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1094: int);
  free ensures {:va_keep} Tmp_1094 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1094: int)
{

  anon0:
    Tmp_1094 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1096: int);
  free ensures {:va_keep} Tmp_1096 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1096: int)
{

  anon0:
    Tmp_1096 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1098: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1098: int)
{
  var {:pointer} sdv_339: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 640} sdv_339 := __HAVOC_malloc(1);
    Tmp_1098 := sdv_339;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1098 := 0;
    goto L1;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init11"} _sdv_init11()
{

  anon0:
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_KeWaitForSingleObject_entry"} {:osmodel} SLIC_KeWaitForSingleObject_entry(actual_caller_2: int, actual_KeWaitForSingleObject_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_KeWaitForSingleObject_entry"} {:osmodel} SLIC_KeWaitForSingleObject_entry(actual_caller_2: int, actual_KeWaitForSingleObject_1: int)
{
  var {:pointer} caller_2: int;
  var {:pointer} KeWaitForSingleObject_1: int;

  anon0:
    caller_2 := actual_caller_2;
    KeWaitForSingleObject_1 := actual_KeWaitForSingleObject_1;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_irql_current != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_irql_current != 1;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_irql_current == 2;
    goto L10;

  L10:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} sdv_irql_current == 2;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} KeWaitForSingleObject_1 != 0;
    assume {:nonnull} KeWaitForSingleObject_1 != 0;
    assume KeWaitForSingleObject_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L8;

  L8:
    call {:si_unique_call 641} SLIC_ABORT_1_1(caller_2, KeWaitForSingleObject_1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon21_Then:
    goto L2;

  anon17_Then:
    assume {:partition} KeWaitForSingleObject_1 == 0;
    goto L8;

  anon18_Then:
    assume {:partition} sdv_irql_current != 2;
    goto L2;

  anon20_Then:
    assume {:partition} sdv_irql_current != 2;
    call {:si_unique_call 642} SLIC_ABORT_1_0(caller_2, KeWaitForSingleObject_1);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} sdv_irql_current == 1;
    goto L10;

  anon19_Then:
    assume {:partition} sdv_irql_current == 0;
    goto L10;
}



procedure {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_3: int, actual_KeWaitForSingleObject_2: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_3: int, actual_KeWaitForSingleObject_2: int)
{
  var {:pointer} caller_3: int;
  var {:pointer} KeWaitForSingleObject_2: int;

  anon0:
    caller_3 := actual_caller_3;
    KeWaitForSingleObject_2 := actual_KeWaitForSingleObject_2;
    call {:si_unique_call 643} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_ABORT_1_1"} SLIC_ABORT_1_1(actual_caller_4: int, actual_KeWaitForSingleObject_3: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_1_1"} SLIC_ABORT_1_1(actual_caller_4: int, actual_KeWaitForSingleObject_3: int)
{
  var {:pointer} caller_4: int;
  var {:pointer} KeWaitForSingleObject_3: int;

  anon0:
    caller_4 := actual_caller_4;
    KeWaitForSingleObject_3 := actual_KeWaitForSingleObject_3;
    call {:si_unique_call 644} SLIC_ERROR_ROUTINE(strConst__li2bpl5);
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_349: int, actual_sdv_350: int) returns (Tmp_1104: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_349: int, actual_sdv_350: int) returns (Tmp_1104: int)
{
  var {:scalar} sdv_351: int;

  anon0:
    call {:si_unique_call 645} Tmp_1104 := __HAVOC_malloc(4);
    call {:si_unique_call 646} sdv_351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1104 != 0;
    assume Tmp_1104 > 0;
    assume {:nonnull} sdv_351 != 0;
    assume sdv_351 > 0;
    Mem_T.INT4[Tmp_1104] := Mem_T.INT4[sdv_351];
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_385: int, actual_sdv_386: int) returns (Tmp_1120: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_385: int, actual_sdv_386: int) returns (Tmp_1120: int)
{
  var {:scalar} sdv_387: int;

  anon0:
    call {:si_unique_call 647} Tmp_1120 := __HAVOC_malloc(4);
    call {:si_unique_call 648} sdv_387 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1120 != 0;
    assume Tmp_1120 > 0;
    assume {:nonnull} sdv_387 != 0;
    assume sdv_387 > 0;
    Mem_T.INT4[Tmp_1120] := Mem_T.INT4[sdv_387];
    return;
}



procedure {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_13: int, actual_Irp_8: int) returns (Tmp_1128: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_13: int, actual_Irp_8: int) returns (Tmp_1128: int)
{
  var {:scalar} Tmp_1129: int;
  var {:pointer} irpStack: int;
  var {:pointer} pdoExtension_7: int;
  var {:pointer} Tmp_1130: int;
  var {:pointer} Tmp_1131: int;
  var {:scalar} Tmp_1132: int;
  var {:scalar} Tmp_1133: int;
  var {:pointer} Tmp_1134: int;
  var {:scalar} status_26: int;
  var {:pointer} Tmp_1136: int;
  var {:scalar} Tmp_1137: int;
  var {:pointer} Tmp_1138: int;
  var {:scalar} minorFunction: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_82: int;

  anon0:
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 649} Tmp_1136 := __HAVOC_malloc(4);
    call {:si_unique_call 650} Tmp_1138 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc pdoExtension_7;
    call {:si_unique_call 651} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc minorFunction;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1136;
    assume {:nonnull} Tmp_1136 != 0;
    assume Tmp_1136 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1136], 1) != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_1137 := minorFunction;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    Tmp_1131 := strConst__li2bpl8;
    goto L25;

  L25:
    havoc Tmp_1130;
    havoc Tmp_1129;
    call {:si_unique_call 652} WPP_SF_qsqD(Tmp_1129, 34, Tmp_1130, pdoExtension_7, Tmp_1131, Irp_8, Tmp_1137);
    goto L18;

  L18:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_1132 := minorFunction;
    call {:si_unique_call 653} Sbp2AddLog(pdoExtension_7, 2, -800893890, Tmp_1132, Irp_8);
    call {:si_unique_call 654} status_26 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_26 < 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_1138;
    assume {:nonnull} Tmp_1138 != 0;
    assume Tmp_1138 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1138], 1) != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1134;
    havoc Tmp_1133;
    call {:si_unique_call 655} WPP_SF_q(Tmp_1133, 35, Tmp_1134, pdoExtension_7);
    goto L69;

  L69:
    call {:si_unique_call 656} Sbp2AddLog(pdoExtension_7, 2, -800893903, status_26, 0);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 657} PoStartNextPowerIrp(0);
    call {:si_unique_call 658} sdv_IoCompleteRequest(0, 0);
    Tmp_1128 := status_26;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon38_Then:
    goto L69;

  anon48_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1138], 1) == 0;
    goto L69;

  anon37_Then:
    goto L69;

  anon35_Then:
    assume {:partition} 0 <= status_26;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} minorFunction != 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} minorFunction != 1;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} minorFunction != 2;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} minorFunction == 3;
    goto L46;

  L46:
    status_26 := 0;
    goto L56;

  L56:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 659} PoStartNextPowerIrp(0);
    call {:si_unique_call 660} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    call {:si_unique_call 661} vslice_dummy_var_113 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_7), Irp_8);
    Tmp_1128 := status_26;
    goto L1;

  anon40_Then:
    assume {:partition} minorFunction != 3;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_26;
    goto L56;

  anon41_Then:
    assume {:partition} minorFunction == 2;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_82;
    call {:si_unique_call 662} Sbp2AddLog(pdoExtension_7, 2, -800893902, vslice_dummy_var_82, Irp_8);
    call {:si_unique_call 663} status_26 := Sbp2PdoSetPower(DeviceObject_13, Irp_8);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1128 := status_26;
    goto L1;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    assume {:partition} minorFunction == 1;
    goto L46;

  anon36_Then:
    assume {:partition} minorFunction == 0;
    goto L46;

  anon39_Then:
    status_26 := -1073741810;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 664} PoStartNextPowerIrp(0);
    call {:si_unique_call 665} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    Tmp_1128 := status_26;
    goto L1;

  anon33_Then:
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} minorFunction == 2;
    call {:si_unique_call 666} status_26 := Sbp2FdoSetPower(DeviceObject_13, Irp_8);
    goto L96;

  anon46_Then:
    assume {:partition} minorFunction != 2;
    call {:si_unique_call 667} PoStartNextPowerIrp(0);
    call {:si_unique_call 668} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    call {:si_unique_call 669} status_26 := PoCallDriver(0, Irp_8);
    goto L96;

  anon45_Then:
    Tmp_1131 := strConst__li2bpl7;
    goto L25;

  anon34_Then:
    goto L18;

  anon44_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1136], 1) == 0;
    goto L18;

  anon43_Then:
    goto L18;
}



procedure {:origName "Sbp2FdoSystemPowerDownCompletion"} Sbp2FdoSystemPowerDownCompletion(actual_DeviceObject_14: int, actual_MinorFunction_1: int, actual_SD2: int, actual_Context_5: int, actual_IoStatus: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoSystemPowerDownCompletion"} Sbp2FdoSystemPowerDownCompletion(actual_DeviceObject_14: int, actual_MinorFunction_1: int, actual_SD2: int, actual_Context_5: int, actual_IoStatus: int)
{
  var {:scalar} PowerState_2: int;
  var {:scalar} Tmp_1140: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1141: int;
  var {:pointer} irp: int;
  var {:pointer} Tmp_1142: int;
  var {:scalar} Tmp_1143: int;
  var {:pointer} Tmp_1144: int;
  var {:pointer} Tmp_1146: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} SD2: int;
  var {:pointer} Context_5: int;
  var {:pointer} IoStatus: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;

  anon0:
    call {:si_unique_call 670} PowerState_2 := __HAVOC_malloc(8);
    call {:si_unique_call 671} vslice_dummy_var_114 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    SD2 := actual_SD2;
    Context_5 := actual_Context_5;
    IoStatus := actual_IoStatus;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    call {:si_unique_call 672} Tmp_1141 := __HAVOC_malloc(4);
    call {:si_unique_call 673} Tmp_1144 := __HAVOC_malloc(4);
    irp := Context_5;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc fdoExtension_3;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1144;
    assume {:nonnull} Tmp_1144 != 0;
    assume Tmp_1144 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1144], 4) != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    havoc Tmp_1146;
    havoc Tmp_1140;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    havoc vslice_dummy_var_83;
    call {:si_unique_call 674} WPP_SF_qqD(Tmp_1140, 21, Tmp_1146, fdoExtension_3, irp, vslice_dummy_var_83);
    goto L11;

  L11:
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc Tmp_1141;
    assume {:nonnull} Tmp_1141 != 0;
    assume Tmp_1141 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1141], 4) != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1142;
    havoc Tmp_1143;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    havoc vslice_dummy_var_84;
    call {:si_unique_call 675} WPP_SF_qD(Tmp_1143, 22, Tmp_1142, fdoExtension_3, vslice_dummy_var_84);
    goto L36;

  L36:
    assume {:nonnull} irp != 0;
    assume irp > 0;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    assume {:nonnull} irp != 0;
    assume irp > 0;
    call {:si_unique_call 676} PoStartNextPowerIrp(0);
    call {:si_unique_call 677} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L36;

  anon21_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1141], 4) == 0;
    goto L36;

  anon17_Then:
    goto L36;

  anon15_Then:
    call {:si_unique_call 678} PoStartNextPowerIrp(0);
    call {:si_unique_call 679} sdv_IoCopyCurrentIrpStackLocationToNext(irp);
    call {:si_unique_call 680} sdv_IoSetCompletionRoutine(irp, li2bplFunctionConstant698, Context_5, 1, 1, 1);
    call {:si_unique_call 681} vslice_dummy_var_115 := PoCallDriver(0, irp);
    goto L1;

  anon16_Then:
    goto L11;

  anon20_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1144], 4) == 0;
    goto L11;

  anon19_Then:
    goto L11;
}



procedure {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_15: int, actual_Irp_9: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_15: int, actual_Irp_9: int)
{
  var {:pointer} Tmp_1147: int;
  var {:pointer} irpStack_1: int;
  var {:pointer} Tmp_1148: int;
  var {:pointer} pdoExtension_8: int;
  var {:scalar} newPowerState: int;
  var {:scalar} Tmp_1149: int;
  var {:scalar} newSystemState: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 682} newPowerState := __HAVOC_malloc(8);
    call {:si_unique_call 683} vslice_dummy_var_116 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 684} Tmp_1147 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc pdoExtension_8;
    call {:si_unique_call 685} irpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    havoc newSystemState;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    havoc Tmp_1147;
    assume {:nonnull} Tmp_1147 != 0;
    assume Tmp_1147 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1147], 4) != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1148;
    havoc Tmp_1149;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    havoc vslice_dummy_var_85;
    call {:si_unique_call 686} WPP_SF_qqD(Tmp_1149, 11, Tmp_1148, pdoExtension_8, Irp_9, vslice_dummy_var_85);
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    assume {:nonnull} newPowerState != 0;
    assume newPowerState > 0;
    call {:si_unique_call 687} Sbp2SetPowerState(DeviceObject_15, 0, newPowerState);
    goto L25;

  L25:
    call {:si_unique_call 688} PoStartNextPowerIrp(0);
    call {:si_unique_call 689} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    call {:si_unique_call 690} vslice_dummy_var_117 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_8), Irp_9);
    return;

  anon9_Then:
    goto L25;

  anon10_Then:
    goto L17;

  anon12_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1147], 4) == 0;
    goto L17;

  anon11_Then:
    goto L17;
}



procedure {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_16: int, actual_Irp_10: int) returns (Tmp_1152: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_16: int, actual_Irp_10: int) returns (Tmp_1152: int)
{
  var {:pointer} irpStack_2: int;
  var {:pointer} Tmp_1153: int;
  var {:scalar} Tmp_1154: int;
  var {:pointer} Tmp_1155: int;
  var {:pointer} Tmp_1156: int;
  var {:pointer} Tmp_1157: int;
  var {:pointer} pdoExtension_9: int;
  var {:pointer} Tmp_1158: int;
  var {:scalar} Tmp_1159: int;
  var {:scalar} newPowerState_1: int;
  var {:pointer} Tmp_1160: int;
  var {:scalar} Tmp_1161: int;
  var {:pointer} Tmp_1162: int;
  var {:scalar} orbLock_3: int;
  var {:pointer} Tmp_1163: int;
  var {:pointer} Tmp_1164: int;
  var {:scalar} Tmp_1165: int;
  var {:scalar} powerState: int;
  var {:scalar} Tmp_1166: int;
  var {:scalar} Tmp_1167: int;
  var {:pointer} Tmp_1168: int;
  var {:scalar} sdv_404: int;
  var {:pointer} Tmp_1169: int;
  var {:pointer} Tmp_1170: int;
  var {:scalar} newDeviceState: int;
  var {:scalar} Tmp_1171: int;
  var {:scalar} Tmp_1172: int;
  var {:pointer} Tmp_1173: int;
  var {:scalar} Tmp_1174: int;
  var {:pointer} fdoExtension_4: int;
  var {:scalar} Tmp_1175: int;
  var {:scalar} newPowerState_2: int;
  var {:scalar} Tmp_1176: int;
  var {:pointer} Tmp_1177: int;
  var {:pointer} Tmp_1178: int;
  var {:pointer} Tmp_1179: int;
  var {:pointer} Tmp_1180: int;
  var {:scalar} cIrql_2: int;
  var {:scalar} Tmp_1181: int;
  var {:scalar} status_27: int;
  var {:pointer} Tmp_1182: int;
  var {:pointer} Tmp_1183: int;
  var {:scalar} bAsyncPowerUp: int;
  var {:scalar} newSystemState_1: int;
  var {:pointer} Tmp_1184: int;
  var {:scalar} powerType: int;
  var {:pointer} Tmp_1185: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 691} newPowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 692} orbLock_3 := __HAVOC_malloc(12);
    call {:si_unique_call 693} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 694} newPowerState_2 := __HAVOC_malloc(8);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_10 := actual_Irp_10;
    call {:si_unique_call 695} Tmp_1156 := __HAVOC_malloc(4);
    call {:si_unique_call 696} Tmp_1158 := __HAVOC_malloc(4);
    call {:si_unique_call 697} Tmp_1169 := __HAVOC_malloc(4);
    call {:si_unique_call 698} Tmp_1170 := __HAVOC_malloc(4);
    call {:si_unique_call 699} Tmp_1177 := __HAVOC_malloc(4);
    call {:si_unique_call 700} Tmp_1180 := __HAVOC_malloc(4);
    call {:si_unique_call 701} Tmp_1182 := __HAVOC_malloc(4);
    call {:si_unique_call 702} Tmp_1184 := __HAVOC_malloc(4);
    call {:si_unique_call 703} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc pdoExtension_9;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc powerType;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_1177;
    assume {:nonnull} Tmp_1177 != 0;
    assume Tmp_1177 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1177], 4) != 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} powerType != 0;
    Tmp_1185 := strConst__li2bpl10;
    goto L26;

  L26:
    havoc Tmp_1183;
    havoc Tmp_1161;
    call {:si_unique_call 704} WPP_SF_qsq(Tmp_1161, 13, Tmp_1183, pdoExtension_9, Tmp_1185, Irp_10);
    goto L18;

  L18:
    call {:si_unique_call 705} sdv_IoMarkIrpPending(0);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} powerType == 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newSystemState_1;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc Tmp_1169;
    assume {:nonnull} Tmp_1169 != 0;
    assume Tmp_1169 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1169], 4) != 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    Tmp_1166 := newSystemState_1 - 1;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1181;
    havoc Tmp_1178;
    havoc Tmp_1176;
    call {:si_unique_call 706} WPP_SF_qDDq(Tmp_1176, 14, Tmp_1178, pdoExtension_9, Tmp_1181, Tmp_1166, Irp_10);
    goto L158;

  L158:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc vslice_dummy_var_86;
    call {:si_unique_call 707} Sbp2AddLog(pdoExtension_9, 2, -800893837, vslice_dummy_var_86, newSystemState_1);
    status_27 := 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} newSystemState_1 != 1;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    assume {:nonnull} newPowerState_2 != 0;
    assume newPowerState_2 > 0;
    call {:si_unique_call 708} Sbp2SetPowerState(DeviceObject_16, 0, newPowerState_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 709} status_27 := PoRequestPowerIrp(0, 2, powerState, li2bplFunctionConstant694, 0, 0);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} status_27 < 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_1182;
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1182], 4) != 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    havoc Tmp_1157;
    havoc Tmp_1172;
    call {:si_unique_call 710} WPP_SF_qD(Tmp_1172, 17, Tmp_1157, pdoExtension_9, status_27);
    goto L111;

  L111:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} status_27 == 259;
    goto L119;

  L119:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_1158;
    assume {:nonnull} Tmp_1158 != 0;
    assume Tmp_1158 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1158], 4) != 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_1164;
    havoc Tmp_1154;
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc vslice_dummy_var_87;
    call {:si_unique_call 711} WPP_SF_qqD(Tmp_1154, 20, Tmp_1164, vslice_dummy_var_87, Irp_10, status_27);
    goto L120;

  L120:
    Tmp_1152 := 259;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon103_Then:
    goto L120;

  anon122_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1158], 4) == 0;
    goto L120;

  anon102_Then:
    goto L120;

  anon101_Then:
    assume {:partition} status_27 != 259;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 712} Sbp2PdoCompletePowerIrp(DeviceObject_16, Irp_10);
    goto L119;

  anon115_Then:
    goto L111;

  anon135_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1182], 4) == 0;
    goto L111;

  anon114_Then:
    goto L111;

  anon113_Then:
    assume {:partition} 0 <= status_27;
    status_27 := 259;
    goto L111;

  anon107_Then:
    assume {:partition} newSystemState_1 == 1;
    bAsyncPowerUp := 0;
    call {:si_unique_call 713} Tmp_1173 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    Mem_T.INT4[Tmp_1173] := cIrql_2;
    call {:si_unique_call 714} sdv_KeAcquireSpinLock(0, Tmp_1173);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    cIrql_2 := Mem_T.INT4[Tmp_1173];
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1168;
    assume {:nonnull} Tmp_1168 != 0;
    assume Tmp_1168 > 0;
    havoc fdoExtension_4;
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_1156;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1156], 4) != 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_1153;
    havoc Tmp_1174;
    call {:si_unique_call 715} WPP_SF_q(Tmp_1174, 15, Tmp_1153, pdoExtension_9);
    goto L188;

  L188:
    status_27 := -1073741810;
    call {:si_unique_call 716} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon108_Then:
    goto L188;

  anon132_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1156], 4) == 0;
    goto L188;

  anon131_Then:
    goto L188;

  anon130_Then:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1162;
    assume {:nonnull} Tmp_1162 != 0;
    assume Tmp_1162 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1162)], 64) != 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    bAsyncPowerUp := 1;
    goto L199;

  L199:
    call {:si_unique_call 717} sdv_KeReleaseSpinLock(0, cIrql_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 718} vslice_dummy_var_120 := PoRequestPowerIrp(0, 2, powerState, 0, 0, 0);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} status_27 < 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_1184;
    assume {:nonnull} Tmp_1184 != 0;
    assume Tmp_1184 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1184], 4) != 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    havoc Tmp_1155;
    havoc Tmp_1171;
    call {:si_unique_call 719} WPP_SF_qD(Tmp_1171, 16, Tmp_1155, pdoExtension_9, status_27);
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto L111;

  anon112_Then:
    goto L216;

  anon134_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1184], 4) == 0;
    goto L216;

  anon111_Then:
    goto L216;

  anon109_Then:
    assume {:partition} 0 <= status_27;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} bAsyncPowerUp != 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto L213;

  L213:
    status_27 := 0;
    goto L111;

  anon110_Then:
    assume {:partition} bAsyncPowerUp == 0;
    goto L213;

  anon133_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1162)], 64) == 0;
    goto L199;

  anon129_Then:
    goto L111;

  anon106_Then:
    goto L158;

  anon128_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1169], 4) == 0;
    goto L158;

  anon127_Then:
    goto L158;

  anon93_Then:
    assume {:partition} powerType != 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} powerType == 1;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newDeviceState;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    havoc Tmp_1180;
    assume {:nonnull} Tmp_1180 != 0;
    assume Tmp_1180 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1180], 4) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    Tmp_1175 := newDeviceState - 1;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1167;
    havoc Tmp_1163;
    havoc Tmp_1159;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc vslice_dummy_var_88;
    call {:si_unique_call 720} WPP_SF_qDDqD(Tmp_1159, 18, Tmp_1163, pdoExtension_9, Tmp_1167, Tmp_1175, Irp_10, vslice_dummy_var_88);
    goto L41;

  L41:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc vslice_dummy_var_89;
    call {:si_unique_call 721} Sbp2AddLog(pdoExtension_9, 2, -800893852, vslice_dummy_var_89, newDeviceState);
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    assume {:nonnull} newPowerState_1 != 0;
    assume newPowerState_1 > 0;
    call {:si_unique_call 722} Sbp2SetPowerState(DeviceObject_16, 1, newPowerState_1);
    call {:si_unique_call 723} AcquireOrbListLock(pdoExtension_9, orbLock_3, 0);
    call {:si_unique_call 724} sdv_404 := sdv_IsListEmpty(0);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} sdv_404 != 0;
    call {:si_unique_call 725} ReleaseOrbListLock(pdoExtension_9, orbLock_3, 0);
    call {:si_unique_call 726} Tmp_1173 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    Mem_T.INT4[Tmp_1173] := cIrql_2;
    call {:si_unique_call 727} sdv_KeAcquireSpinLock(0, Tmp_1173);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    cIrql_2 := Mem_T.INT4[Tmp_1173];
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1179;
    assume {:nonnull} Tmp_1179 != 0;
    assume Tmp_1179 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1179)], 16) == 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    call {:si_unique_call 728} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 729} status_27 := Sbp2ManagementTransaction#1(pdoExtension_9, 7, -1);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} yogi_error != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_1170;
    assume {:nonnull} Tmp_1170 != 0;
    assume Tmp_1170 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1170], 4) != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    havoc Tmp_1160;
    havoc Tmp_1165;
    call {:si_unique_call 730} WPP_SF_qD(Tmp_1165, 19, Tmp_1160, pdoExtension_9, status_27);
    goto L103;

  L103:
    status_27 := 0;
    goto L111;

  anon100_Then:
    goto L103;

  anon124_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1170], 4) == 0;
    goto L103;

  anon99_Then:
    goto L103;

  anon123_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon121_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1179)], 16) != 0;
    goto L87;

  L87:
    call {:si_unique_call 731} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L103;

  anon120_Then:
    goto L87;

  anon98_Then:
    assume {:partition} sdv_404 == 0;
    call {:si_unique_call 732} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    call {:si_unique_call 733} vslice_dummy_var_118 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_9), Irp_10);
    call {:si_unique_call 734} ReleaseOrbListLock(pdoExtension_9, orbLock_3, 0);
    Tmp_1152 := 259;
    goto L1;

  anon97_Then:
    call {:si_unique_call 735} Tmp_1173 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    Mem_T.INT4[Tmp_1173] := cIrql_2;
    call {:si_unique_call 736} sdv_KeAcquireSpinLock(0, Tmp_1173);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    cIrql_2 := Mem_T.INT4[Tmp_1173];
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    status_27 := 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    goto L139;

  L139:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto L143;

  L143:
    call {:si_unique_call 737} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 738} Sbp2StartQueue#1(pdoExtension_9);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto L111;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    call {:si_unique_call 739} vslice_dummy_var_119 := Sbp2QueueManagementWorkItem(pdoExtension_9, 4, -1);
    call {:si_unique_call 740} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon125_Then:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto L143;

  anon104_Then:
    goto L139;

  anon96_Then:
    status_27 := 0;
    goto L111;

  anon95_Then:
    goto L41;

  anon119_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1180], 4) == 0;
    goto L41;

  anon118_Then:
    goto L41;

  anon94_Then:
    assume {:partition} powerType != 1;
    status_27 := -1073741822;
    goto L111;

  anon92_Then:
    assume {:partition} powerType == 0;
    Tmp_1185 := strConst__li2bpl9;
    goto L26;

  anon91_Then:
    goto L18;

  anon117_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1177], 4) == 0;
    goto L18;

  anon116_Then:
    goto L18;
}



procedure {:origName "Sbp2FdoDevicePowerCompletion"} Sbp2FdoDevicePowerCompletion(actual_DeviceObject_17: int, actual_Irp_11: int, actual_Context_6: int) returns (Tmp_1186: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoDevicePowerCompletion"} Sbp2FdoDevicePowerCompletion(actual_DeviceObject_17: int, actual_Irp_11: int, actual_Context_6: int) returns (Tmp_1186: int)
{
  var {:pointer} irpStack_3: int;
  var {:scalar} Tmp_1187: int;
  var {:scalar} newPowerState_3: int;
  var {:scalar} newDeviceState_1: int;
  var {:pointer} fdoExtension_5: int;
  var {:pointer} Tmp_1189: int;
  var {:scalar} status_28: int;
  var {:pointer} Tmp_1190: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_90: int;

  anon0:
    call {:si_unique_call 741} newPowerState_3 := __HAVOC_malloc(8);
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 742} Tmp_1189 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc fdoExtension_5;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1189;
    assume {:nonnull} Tmp_1189 != 0;
    assume Tmp_1189 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1189], 4) != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    havoc Tmp_1190;
    havoc Tmp_1187;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    havoc vslice_dummy_var_90;
    call {:si_unique_call 743} WPP_SF_qqD(Tmp_1187, 27, Tmp_1190, fdoExtension_5, Irp_11, vslice_dummy_var_90);
    goto L10;

  L10:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 744} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc newDeviceState_1;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} newPowerState_3 != 0;
    assume newPowerState_3 > 0;
    call {:si_unique_call 745} Sbp2SetPowerState(DeviceObject_17, 1, newPowerState_3);
    goto L29;

  L29:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    call {:si_unique_call 746} PoStartNextPowerIrp(0);
    call {:si_unique_call 747} sdv_IoCompleteRequest(0, 0);
    status_28 := -1073741802;
    goto L42;

  L42:
    Tmp_1186 := status_28;
    return;

  anon15_Then:
    goto L29;

  anon11_Then:
    call {:si_unique_call 748} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    havoc status_28;
    goto L42;

  anon12_Then:
    goto L10;

  anon14_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1189], 4) == 0;
    goto L10;

  anon13_Then:
    goto L10;
}



procedure {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_18: int, actual_Irp_13: int) returns (Tmp_1201: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1201 == 259 || Tmp_1201 == -1073741822;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_18: int, actual_Irp_13: int) returns (Tmp_1201: int)
{
  var {:pointer} Tmp_1202: int;
  var {:pointer} Tmp_1203: int;
  var {:pointer} irpStack_5: int;
  var {:pointer} Tmp_1204: int;
  var {:scalar} Tmp_1205: int;
  var {:scalar} Tmp_1206: int;
  var {:scalar} Tmp_1207: int;
  var {:scalar} Tmp_1208: int;
  var {:pointer} Tmp_1209: int;
  var {:scalar} Tmp_1210: int;
  var {:scalar} Tmp_1211: int;
  var {:pointer} Tmp_1212: int;
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_1213: int;
  var {:scalar} newDeviceState_2: int;
  var {:pointer} fdoExtension_6: int;
  var {:pointer} Tmp_1215: int;
  var {:pointer} Tmp_1216: int;
  var {:scalar} Tmp_1217: int;
  var {:pointer} Tmp_1218: int;
  var {:pointer} Tmp_1219: int;
  var {:scalar} Tmp_1220: int;
  var {:pointer} Tmp_1221: int;
  var {:pointer} Tmp_1222: int;
  var {:scalar} status_30: int;
  var {:scalar} Tmp_1223: int;
  var {:scalar} newSystemState_2: int;
  var {:pointer} Tmp_1224: int;
  var {:pointer} Tmp_1225: int;
  var {:scalar} Tmp_1226: int;
  var {:scalar} powerType_1: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_91: int;

  anon0:
    call {:si_unique_call 749} powerState_1 := __HAVOC_malloc(8);
    DeviceObject_18 := actual_DeviceObject_18;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 750} Tmp_1209 := __HAVOC_malloc(4);
    call {:si_unique_call 751} Tmp_1212 := __HAVOC_malloc(4);
    call {:si_unique_call 752} Tmp_1213 := __HAVOC_malloc(4);
    call {:si_unique_call 753} Tmp_1216 := __HAVOC_malloc(4);
    call {:si_unique_call 754} Tmp_1221 := __HAVOC_malloc(4);
    call {:si_unique_call 755} Tmp_1225 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc fdoExtension_6;
    call {:si_unique_call 756} irpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc powerType_1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_1225;
    assume {:nonnull} Tmp_1225 != 0;
    assume Tmp_1225 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1225], 4) != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1222 := strConst__li2bpl10;
    goto L23;

  L23:
    havoc Tmp_1203;
    havoc Tmp_1208;
    call {:si_unique_call 757} WPP_SF_qsq(Tmp_1208, 28, Tmp_1203, fdoExtension_6, Tmp_1222, Irp_13);
    goto L17;

  L17:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} powerType_1 == 0;
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc newSystemState_2;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_1216;
    assume {:nonnull} Tmp_1216 != 0;
    assume Tmp_1216 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1216], 4) != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_1211 := newSystemState_2 - 1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1226;
    havoc Tmp_1224;
    havoc Tmp_1210;
    call {:si_unique_call 758} WPP_SF_qDDq(Tmp_1210, 29, Tmp_1224, fdoExtension_6, Tmp_1226, Tmp_1211, Irp_13);
    goto L94;

  L94:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 759} sdv_IoMarkIrpPending(0);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    havoc Tmp_1213;
    assume {:nonnull} Tmp_1213 != 0;
    assume Tmp_1213 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1213], 4) != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1215;
    havoc Tmp_1207;
    call {:si_unique_call 760} WPP_SF_qq(Tmp_1207, 30, Tmp_1215, fdoExtension_6, Irp_13);
    goto L120;

  L120:
    call {:si_unique_call 761} status_30 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant697, 0, 0);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} status_30 < 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc Tmp_1221;
    assume {:nonnull} Tmp_1221 != 0;
    assume Tmp_1221 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1221], 4) != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1219;
    havoc Tmp_1220;
    call {:si_unique_call 762} WPP_SF_qD(Tmp_1220, 31, Tmp_1219, fdoExtension_6, status_30);
    goto L137;

  L137:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 763} PoStartNextPowerIrp(0);
    call {:si_unique_call 764} sdv_IoCompleteRequest(0, 0);
    goto L135;

  L135:
    status_30 := 259;
    goto L66;

  L66:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_1212;
    assume {:nonnull} Tmp_1212 != 0;
    assume Tmp_1212 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1212], 4) != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1218 := strConst__li2bpl10;
    goto L73;

  L73:
    havoc Tmp_1202;
    havoc Tmp_1217;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc vslice_dummy_var_91;
    call {:si_unique_call 765} WPP_SF_qsqD(Tmp_1217, 33, Tmp_1202, vslice_dummy_var_91, Tmp_1218, Irp_13, status_30);
    goto L67;

  L67:
    Tmp_1201 := status_30;
    return;

  anon61_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1218 := strConst__li2bpl9;
    goto L73;

  anon60_Then:
    goto L67;

  anon73_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1212], 4) == 0;
    goto L67;

  anon59_Then:
    goto L67;

  anon68_Then:
    goto L137;

  anon78_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1221], 4) == 0;
    goto L137;

  anon67_Then:
    goto L137;

  anon66_Then:
    assume {:partition} 0 <= status_30;
    goto L135;

  anon65_Then:
    goto L120;

  anon77_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1213], 4) == 0;
    goto L120;

  anon76_Then:
    goto L120;

  anon64_Then:
    call {:si_unique_call 766} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_13);
    call {:si_unique_call 767} sdv_IoSetCompletionRoutine(Irp_13, li2bplFunctionConstant698, 0, 1, 1, 1);
    call {:si_unique_call 768} vslice_dummy_var_122 := PoCallDriver(0, Irp_13);
    status_30 := 259;
    goto L66;

  anon62_Then:
    call {:si_unique_call 769} PoStartNextPowerIrp(0);
    call {:si_unique_call 770} sdv_IoSkipCurrentIrpStackLocation(Irp_13);
    call {:si_unique_call 771} status_30 := PoCallDriver(0, Irp_13);
    goto L66;

  anon63_Then:
    goto L94;

  anon75_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1216], 4) == 0;
    goto L94;

  anon74_Then:
    goto L94;

  anon53_Then:
    assume {:partition} powerType_1 != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} powerType_1 == 1;
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc newDeviceState_2;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    havoc Tmp_1209;
    assume {:nonnull} Tmp_1209 != 0;
    assume Tmp_1209 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1209], 4) != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    Tmp_1206 := newDeviceState_2 - 1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1223;
    havoc Tmp_1204;
    havoc Tmp_1205;
    call {:si_unique_call 772} WPP_SF_qDDq(Tmp_1205, 32, Tmp_1204, fdoExtension_6, Tmp_1223, Tmp_1206, Irp_13);
    goto L37;

  L37:
    call {:si_unique_call 773} sdv_IoMarkIrpPending(0);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    call {:si_unique_call 774} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_13);
    call {:si_unique_call 775} sdv_IoSetCompletionRoutine(Irp_13, li2bplFunctionConstant700, 0, 1, 1, 1);
    goto L59;

  L59:
    call {:si_unique_call 776} vslice_dummy_var_121 := PoCallDriver(0, Irp_13);
    status_30 := 259;
    goto L66;

  anon58_Then:
    call {:si_unique_call 777} PoStartNextPowerIrp(0);
    call {:si_unique_call 778} sdv_IoSkipCurrentIrpStackLocation(Irp_13);
    goto L59;

  anon57_Then:
    goto L37;

  anon72_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1209], 4) == 0;
    goto L37;

  anon71_Then:
    goto L37;

  anon56_Then:
    assume {:partition} powerType_1 != 1;
    status_30 := -1073741822;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 779} PoStartNextPowerIrp(0);
    call {:si_unique_call 780} sdv_IoCompleteRequest(0, 0);
    goto L66;

  anon55_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1222 := strConst__li2bpl9;
    goto L23;

  anon54_Then:
    goto L17;

  anon70_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1225], 4) == 0;
    goto L17;

  anon69_Then:
    goto L17;
}



procedure {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_19: int, actual_Irp_14: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_19: int, actual_Irp_14: int)
{
  var {:pointer} irpStack_6: int;
  var {:scalar} powerType_2: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_123: int;

  anon0:
    call {:si_unique_call 781} vslice_dummy_var_123 := __HAVOC_malloc(4);
    DeviceObject_19 := actual_DeviceObject_19;
    Irp_14 := actual_Irp_14;
    call {:si_unique_call 782} irpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    havoc powerType_2;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} powerType_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} powerType_2 == 1;
    call {:si_unique_call 783} Sbp2PdoCompleteDevicePowerIrp(DeviceObject_19, Irp_14);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} powerType_2 != 1;
    call {:si_unique_call 784} PoStartNextPowerIrp(0);
    call {:si_unique_call 785} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon6_Then:
    assume {:partition} powerType_2 == 0;
    call {:si_unique_call 786} Sbp2PdoCompleteSystemPowerIrp(DeviceObject_19, Irp_14);
    goto L1;
}



procedure {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int)
{
  var {:scalar} sdv_420: int;
  var {:pointer} TraceGuid_11: int;
  var {:pointer} s_p_e_c_i_a_l_49: int;
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 787} vslice_dummy_var_124 := __HAVOC_malloc(4);
    TraceGuid_11 := actual_TraceGuid_11;
    s_p_e_c_i_a_l_49 := actual_s_p_e_c_i_a_l_49;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_49 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_49 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_49 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_49 == 0;
    goto L9;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var {:scalar} Tmp_1234: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_92: int;

  anon0:
    call {:si_unique_call 788} Tmp_1234 := __HAVOC_malloc(4);
    call {:si_unique_call 789} vslice_dummy_var_125 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume {:nonnull} Tmp_1234 != 0;
    assume Tmp_1234 > 0;
    havoc vslice_dummy_var_92;
    Mem_T.INT4[Tmp_1234] := vslice_dummy_var_92;
    return;
}



procedure {:origName "Sbp2FdoSystemPowerUpCompletion"} Sbp2FdoSystemPowerUpCompletion(actual_DeviceObject_20: int, actual_MinorFunction_2: int, actual_SD1: int, actual_Context_7: int, actual_IoStatus_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoSystemPowerUpCompletion"} Sbp2FdoSystemPowerUpCompletion(actual_DeviceObject_20: int, actual_MinorFunction_2: int, actual_SD1: int, actual_Context_7: int, actual_IoStatus_1: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} irpStack_7: int;
  var {:scalar} newPowerState_4: int;
  var {:pointer} Tmp_1237: int;
  var {:pointer} fdoExtension_7: int;
  var {:pointer} irp_1: int;
  var {:scalar} Tmp_1240: int;
  var {:pointer} Tmp_1241: int;
  var {:scalar} newSystemState_3: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} SD1: int;
  var {:pointer} Context_7: int;
  var {:pointer} IoStatus_1: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_93: int;

  anon0:
    call {:si_unique_call 790} PowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 791} newPowerState_4 := __HAVOC_malloc(8);
    call {:si_unique_call 792} vslice_dummy_var_126 := __HAVOC_malloc(4);
    DeviceObject_20 := actual_DeviceObject_20;
    SD1 := actual_SD1;
    Context_7 := actual_Context_7;
    IoStatus_1 := actual_IoStatus_1;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    call {:si_unique_call 793} Tmp_1237 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_20 != 0;
    assume DeviceObject_20 > 0;
    havoc fdoExtension_7;
    irp_1 := Context_7;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    havoc Tmp_1237;
    assume {:nonnull} Tmp_1237 != 0;
    assume Tmp_1237 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1237], 4) != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1241;
    havoc Tmp_1240;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    havoc vslice_dummy_var_93;
    call {:si_unique_call 794} WPP_SF_qqD(Tmp_1240, 26, Tmp_1241, fdoExtension_7, irp_1, vslice_dummy_var_93);
    goto L14;

  L14:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} irp_1 != 0;
    call {:si_unique_call 795} irpStack_7 := sdv_IoGetCurrentIrpStackLocation(irp_1);
    assume {:nonnull} irpStack_7 != 0;
    assume irpStack_7 > 0;
    havoc newSystemState_3;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} newPowerState_4 != 0;
    assume newPowerState_4 > 0;
    call {:si_unique_call 796} Sbp2SetPowerState(DeviceObject_20, 0, newPowerState_4);
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    call {:si_unique_call 797} PoStartNextPowerIrp(0);
    call {:si_unique_call 798} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} irp_1 == 0;
    goto L1;

  anon10_Then:
    goto L14;

  anon12_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1237], 4) == 0;
    goto L14;

  anon11_Then:
    goto L14;
}



procedure {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int, actual_s_p_e_c_i_a_l_55: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int, actual_s_p_e_c_i_a_l_55: int)
{
  var {:pointer} TraceGuid_12: int;
  var vslice_dummy_var_127: int;

  anon0:
    call {:si_unique_call 799} vslice_dummy_var_127 := __HAVOC_malloc(4);
    TraceGuid_12 := actual_TraceGuid_12;
    return;
}



procedure {:origName "Sbp2PdoSystemPowerCompletion"} Sbp2PdoSystemPowerCompletion(actual_DeviceObject_21: int, actual_MinorFunction_3: int, actual_structPtr888PowerState: int, actual_Context_8: int, actual_IoStatus_2: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PdoSystemPowerCompletion"} Sbp2PdoSystemPowerCompletion(actual_DeviceObject_21: int, actual_MinorFunction_3: int, actual_structPtr888PowerState: int, actual_Context_8: int, actual_IoStatus_2: int)
{
  var {:scalar} PowerState: int;
  var {:pointer} irp_2: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} structPtr888PowerState: int;
  var {:pointer} Context_8: int;
  var {:pointer} IoStatus_2: int;
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 800} PowerState := __HAVOC_malloc(8);
    call {:si_unique_call 801} vslice_dummy_var_128 := __HAVOC_malloc(4);
    DeviceObject_21 := actual_DeviceObject_21;
    structPtr888PowerState := actual_structPtr888PowerState;
    Context_8 := actual_Context_8;
    IoStatus_2 := actual_IoStatus_2;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    irp_2 := Context_8;
    assume {:nonnull} IoStatus_2 != 0;
    assume IoStatus_2 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 802} Sbp2PdoCompleteSystemPowerIrp(DeviceObject_21, irp_2);
    return;
}



procedure {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int, actual_s_p_e_c_i_a_l_59: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int, actual_s_p_e_c_i_a_l_59: int)
{
  var {:scalar} sdv_424: int;
  var {:pointer} TraceGuid_13: int;
  var {:pointer} s_p_e_c_i_a_l_57: int;
  var vslice_dummy_var_129: int;

  anon0:
    call {:si_unique_call 803} vslice_dummy_var_129 := __HAVOC_malloc(4);
    TraceGuid_13 := actual_TraceGuid_13;
    s_p_e_c_i_a_l_57 := actual_s_p_e_c_i_a_l_57;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_57 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_57 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_57 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_57 == 0;
    goto L9;
}



procedure {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int, actual_s_p_e_c_i_a_l_63: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int, actual_s_p_e_c_i_a_l_63: int)
{
  var {:scalar} sdv_426: int;
  var {:scalar} sdv_427: int;
  var {:pointer} TraceGuid_14: int;
  var {:pointer} s_p_e_c_i_a_l_61: int;
  var {:pointer} s_p_e_c_i_a_l_62: int;
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 804} vslice_dummy_var_130 := __HAVOC_malloc(4);
    TraceGuid_14 := actual_TraceGuid_14;
    s_p_e_c_i_a_l_61 := actual_s_p_e_c_i_a_l_61;
    s_p_e_c_i_a_l_62 := actual_s_p_e_c_i_a_l_62;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_62 != 0;
    goto L9;

  L9:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} s_p_e_c_i_a_l_62 != 0;
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_61 != 0;
    goto L18;

  L18:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} s_p_e_c_i_a_l_61 != 0;
    goto L21;

  L21:
    return;

  anon12_Then:
    assume {:partition} s_p_e_c_i_a_l_61 == 0;
    goto L21;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_61 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} s_p_e_c_i_a_l_62 == 0;
    goto L12;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_62 == 0;
    goto L9;
}



procedure {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_22: int, actual_Type_3: int, actual_structPtr888NewState: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_22: int, actual_Type_3: int, actual_structPtr888NewState: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} NewState: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} Tmp_1260: int;
  var {:pointer} devExt: int;
  var {:scalar} sdv: int;
  var {:scalar} Tmp_1261: int;
  var {:pointer} Tmp_1263: int;
  var {:scalar} Tmp_1264: int;
  var {:pointer} Tmp_1266: int;
  var {:pointer} DeviceObject_22: int;
  var {:scalar} Type_3: int;
  var {:pointer} structPtr888NewState: int;
  var vslice_dummy_var_131: int;

  anon0:
    call {:si_unique_call 805} NewState := __HAVOC_malloc(8);
    call {:si_unique_call 806} sdv := __HAVOC_malloc(8);
    call {:si_unique_call 807} vslice_dummy_var_131 := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    Type_3 := actual_Type_3;
    structPtr888NewState := actual_structPtr888NewState;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    call {:si_unique_call 808} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    havoc devExt;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1263;
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1263], 4) != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    havoc Tmp_1264;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Type_3 != 0;
    Tmp_1260 := strConst__li2bpl10;
    goto L18;

  L18:
    assume {:nonnull} devExt != 0;
    assume devExt > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1266 := strConst__li2bpl12;
    goto L21;

  L21:
    havoc Tmp_1259;
    havoc Tmp_1261;
    call {:si_unique_call 809} WPP_SF_qssd(Tmp_1261, 10, Tmp_1259, devExt, Tmp_1266, Tmp_1260, Tmp_1264);
    goto L9;

  L9:
    call {:si_unique_call 810} structPtr888sdv := PoSetPowerState(0, Type_3, NewState);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    return;

  anon12_Then:
    Tmp_1266 := strConst__li2bpl11;
    goto L21;

  anon15_Then:
    assume {:partition} Type_3 == 0;
    Tmp_1260 := strConst__li2bpl9;
    goto L18;

  anon11_Then:
    goto L9;

  anon14_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1263], 4) == 0;
    goto L9;

  anon13_Then:
    goto L9;
}



procedure {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_23: int, actual_Irp_15: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_23: int, actual_Irp_15: int)
{
  var {:pointer} irpStack_8: int;
  var {:scalar} Tmp_1267: int;
  var {:pointer} Tmp_1268: int;
  var {:pointer} pdoExtension_10: int;
  var {:pointer} Tmp_1269: int;
  var {:pointer} Tmp_1270: int;
  var {:scalar} newPowerState_5: int;
  var {:scalar} newDeviceState_3: int;
  var {:pointer} Tmp_1272: int;
  var {:scalar} cIrql_4: int;
  var {:scalar} status_31: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 811} newPowerState_5 := __HAVOC_malloc(8);
    call {:si_unique_call 812} vslice_dummy_var_132 := __HAVOC_malloc(4);
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 813} Tmp_1272 := __HAVOC_malloc(4);
    call {:si_unique_call 814} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    havoc pdoExtension_10;
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    havoc newDeviceState_3;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    havoc status_31;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1272;
    assume {:nonnull} Tmp_1272 != 0;
    assume Tmp_1272 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1272], 4) != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1269;
    havoc Tmp_1267;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc vslice_dummy_var_94;
    call {:si_unique_call 815} WPP_SF_qqDD(Tmp_1267, 12, Tmp_1269, pdoExtension_10, Irp_15, status_31, vslice_dummy_var_94);
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_31 != -1073741810;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} newPowerState_5 != 0;
    assume newPowerState_5 > 0;
    call {:si_unique_call 816} Sbp2SetPowerState(DeviceObject_23, 1, newPowerState_5);
    goto L28;

  L28:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} newDeviceState_3 == 1;
    call {:si_unique_call 817} Tmp_1268 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1268 != 0;
    assume Tmp_1268 > 0;
    Mem_T.INT4[Tmp_1268] := cIrql_4;
    call {:si_unique_call 818} sdv_KeAcquireSpinLock(0, Tmp_1268);
    assume {:nonnull} Tmp_1268 != 0;
    assume Tmp_1268 > 0;
    cIrql_4 := Mem_T.INT4[Tmp_1268];
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc Tmp_1270;
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1270)], 64) != 0;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto L44;

  L44:
    call {:si_unique_call 819} sdv_KeReleaseSpinLock(0, cIrql_4);
    goto L37;

  L37:
    call {:si_unique_call 820} PoStartNextPowerIrp(0);
    call {:si_unique_call 821} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    call {:si_unique_call 822} vslice_dummy_var_133 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_10), Irp_15);
    return;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1270)], 64) == 0;
    goto L44;

  anon23_Then:
    assume {:partition} newDeviceState_3 != 1;
    goto L37;

  anon20_Then:
    goto L28;

  anon19_Then:
    assume {:partition} status_31 == -1073741810;
    goto L28;

  anon17_Then:
    goto L28;

  anon18_Then:
    goto L20;

  anon22_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1272], 4) == 0;
    goto L20;

  anon21_Then:
    goto L20;
}



procedure {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_64: int, actual_s_p_e_c_i_a_l_65: int, actual_s_p_e_c_i_a_l_66: int, actual_s_p_e_c_i_a_l_67: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_64: int, actual_s_p_e_c_i_a_l_65: int, actual_s_p_e_c_i_a_l_66: int, actual_s_p_e_c_i_a_l_67: int)
{
  var {:pointer} TraceGuid_15: int;
  var vslice_dummy_var_134: int;

  anon0:
    call {:si_unique_call 823} vslice_dummy_var_134 := __HAVOC_malloc(4);
    TraceGuid_15 := actual_TraceGuid_15;
    return;
}



procedure {:origName "Sbp2FdoSystemPowerCompletion"} Sbp2FdoSystemPowerCompletion(actual_DeviceObject_24: int, actual_Irp_16: int, actual_Context_9: int) returns (Tmp_1276: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoSystemPowerCompletion"} Sbp2FdoSystemPowerCompletion(actual_DeviceObject_24: int, actual_Irp_16: int, actual_Context_9: int) returns (Tmp_1276: int)
{
  var {:pointer} irpStack_9: int;
  var {:scalar} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:scalar} newPowerState_6: int;
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:scalar} powerState_2: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} fdoExtension_8: int;
  var {:scalar} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:scalar} status_32: int;
  var {:scalar} newSystemState_4: int;
  var {:scalar} Tmp_1286: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 824} newPowerState_6 := __HAVOC_malloc(8);
    call {:si_unique_call 825} powerState_2 := __HAVOC_malloc(8);
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 826} Tmp_1278 := __HAVOC_malloc(4);
    call {:si_unique_call 827} Tmp_1279 := __HAVOC_malloc(4);
    call {:si_unique_call 828} Tmp_1285 := __HAVOC_malloc(4);
    status_32 := 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    havoc fdoExtension_8;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1279;
    assume {:nonnull} Tmp_1279 != 0;
    assume Tmp_1279 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1279], 4) != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1282;
    havoc Tmp_1286;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc vslice_dummy_var_95;
    call {:si_unique_call 829} WPP_SF_qqD(Tmp_1286, 23, Tmp_1282, fdoExtension_8, Irp_16, vslice_dummy_var_95);
    goto L13;

  L13:
    call {:si_unique_call 830} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    havoc newSystemState_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} newPowerState_6 != 0;
    assume newPowerState_6 > 0;
    call {:si_unique_call 831} Sbp2SetPowerState(DeviceObject_24, 0, newPowerState_6);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} newSystemState_4 == 1;
    call {:si_unique_call 832} sdv_IoMarkIrpPending(0);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1285], 4) != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1284;
    havoc Tmp_1283;
    call {:si_unique_call 833} WPP_SF_qq(Tmp_1283, 24, Tmp_1284, fdoExtension_8, Irp_16);
    goto L45;

  L45:
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    call {:si_unique_call 834} status_32 := PoRequestPowerIrp(0, 2, powerState_2, li2bplFunctionConstant699, 0, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_32 < 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1278;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1278], 4) != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_1280;
    havoc Tmp_1277;
    call {:si_unique_call 835} WPP_SF_qD(Tmp_1277, 25, Tmp_1280, fdoExtension_8, status_32);
    goto L69;

  L69:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 836} PoStartNextPowerIrp(0);
    Tmp_1276 := status_32;
    goto L1;

  L1:
    return;

  anon39_Then:
    goto L69;

  anon45_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1278], 4) == 0;
    goto L69;

  anon38_Then:
    goto L69;

  anon36_Then:
    assume {:partition} 0 <= status_32;
    status_32 := -1073741802;
    goto L62;

  L62:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_32 != -1073741802;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc status_32;
    call {:si_unique_call 837} PoStartNextPowerIrp(0);
    goto L63;

  L63:
    Tmp_1276 := status_32;
    goto L1;

  anon37_Then:
    assume {:partition} status_32 == -1073741802;
    goto L63;

  anon35_Then:
    goto L45;

  anon44_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1285], 4) == 0;
    goto L45;

  anon34_Then:
    goto L45;

  anon33_Then:
    assume {:partition} newSystemState_4 != 1;
    call {:si_unique_call 838} PoStartNextPowerIrp(0);
    call {:si_unique_call 839} sdv_IoCompleteRequest(0, 0);
    status_32 := -1073741802;
    goto L62;

  anon43_Then:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} newSystemState_4 == 1;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    status_32 := 0;
    goto L62;

  anon40_Then:
    assume {:partition} newSystemState_4 != 1;
    goto L62;

  anon32_Then:
    goto L62;

  anon31_Then:
    goto L13;

  anon42_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1279], 4) == 0;
    goto L13;

  anon41_Then:
    goto L13;
}



procedure {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int)
{
  var {:scalar} Tmp_1289: int;
  var {:scalar} dueTime_1: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} Tmp_1292: int;
  var {:pointer} PdoExtension_14: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 840} vslice_dummy_var_135 := __HAVOC_malloc(4);
    PdoExtension_14 := actual_PdoExtension_14;
    call {:si_unique_call 841} Tmp_1292 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    dueTime_1 := 1;
    goto L9;

  L9:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    havoc Tmp_1292;
    assume {:nonnull} Tmp_1292 != 0;
    assume Tmp_1292 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1292], 2048) != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1291;
    havoc Tmp_1289;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc vslice_dummy_var_96;
    call {:si_unique_call 842} WPP_SF_qD(Tmp_1289, 27, Tmp_1291, PdoExtension_14, vslice_dummy_var_96);
    goto L14;

  L14:
    call {:si_unique_call 843} Sbp2AddLog(PdoExtension_14, 64, -999919028, 0, 0);
    call {:si_unique_call 844} Sbp2SetManagementTimer(PdoExtension_14, dueTime_1);
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L14;

  anon15_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1292], 2048) == 0;
    goto L14;

  anon14_Then:
    goto L14;

  anon12_Then:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    call {:si_unique_call 845} dueTime_1 := corral_nondet();
    goto L9;

  anon11_Then:
    goto L1;
}



procedure {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1295: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1295 == -1073741275 || Tmp_1295 == -1073741649 || Tmp_1295 == -1073741823 || Tmp_1295 == -1073741503 || Tmp_1295 == -1073741811 || Tmp_1295 == 17 || Tmp_1295 == -1073741434 || Tmp_1295 == -1073741248 || Tmp_1295 == -1073741292 || Tmp_1295 == -1073741670 || Tmp_1295 == -1073741790 || Tmp_1295 == -1073741637 || Tmp_1295 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1295: int)
{
  var {:scalar} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:scalar} resp: int;
  var {:scalar} Tmp_1298: int;
  var {:scalar} Tmp_1299: int;
  var {:scalar} status_33: int;
  var {:scalar} Tmp_1302: int;
  var {:pointer} Tmp_1303: int;
  var {:scalar} statusFlags: int;
  var {:pointer} StatusBlock: int;

  anon0:
    StatusBlock := actual_StatusBlock;
    call {:si_unique_call 846} Tmp_1303 := __HAVOC_malloc(4);
    assume {:nonnull} StatusBlock != 0;
    assume StatusBlock > 0;
    havoc statusFlags;
    Tmp_1299 := BAND(statusFlags, BOR(16384, 32768));
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 32768 == Tmp_1299;
    Tmp_1295 := -1073741275;
    goto L1;

  L1:
    return;

  anon78_Then:
    assume {:partition} 32768 != Tmp_1299;
    call {:si_unique_call 847} resp := corral_nondet();
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} resp != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} resp != 1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} resp == 2;
    status_33 := -1073741649;
    goto L18;

  L18:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_33 != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_1303;
    assume {:nonnull} Tmp_1303 != 0;
    assume Tmp_1303 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1303], 1) != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_1302 := statusFlags;
    Tmp_1298 := resp;
    havoc Tmp_1297;
    havoc Tmp_1296;
    call {:si_unique_call 848} WPP_SF_DD(Tmp_1296, 23, Tmp_1297, Tmp_1298, Tmp_1302);
    goto L19;

  L19:
    Tmp_1295 := status_33;
    goto L1;

  anon58_Then:
    goto L19;

  anon80_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1303], 1) == 0;
    goto L19;

  anon57_Then:
    goto L19;

  anon56_Then:
    assume {:partition} status_33 == 0;
    goto L19;

  anon59_Then:
    assume {:partition} resp != 2;
    status_33 := -1073741823;
    goto L18;

  anon60_Then:
    assume {:partition} resp == 1;
    resp := BAND(statusFlags, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} resp != 2;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} resp != 4;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} resp != 5;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} resp != 6;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} resp != 12;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} resp != 13;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} resp != 14;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} resp == 15;
    status_33 := -1073741503;
    goto L18;

  anon71_Then:
    assume {:partition} resp != 15;
    status_33 := -1073741823;
    goto L18;

  anon72_Then:
    assume {:partition} resp == 14;
    status_33 := -1073741811;
    goto L18;

  anon73_Then:
    assume {:partition} resp == 13;
    goto L35;

  L35:
    status_33 := -1073741434;
    goto L18;

  anon74_Then:
    assume {:partition} resp == 12;
    goto L35;

  anon75_Then:
    assume {:partition} resp == 6;
    goto L36;

  L36:
    status_33 := 17;
    goto L18;

  anon76_Then:
    assume {:partition} resp == 5;
    goto L36;

  anon77_Then:
    assume {:partition} resp == 4;
    goto L36;

  anon81_Then:
    assume {:partition} resp == 2;
    goto L35;

  anon79_Then:
    assume {:partition} resp == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(statusFlags, 255) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(statusFlags, 255) != 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(statusFlags, 255) != 2;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(statusFlags, 255) != 3;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(statusFlags, 255) != 4;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(statusFlags, 255) != 5;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(statusFlags, 255) != 8;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(statusFlags, 255) != 9;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(statusFlags, 255) != 10;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(statusFlags, 255) != 11;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(statusFlags, 255) == 12;
    status_33 := -1073741248;
    goto L18;

  anon61_Then:
    assume {:partition} BAND(statusFlags, 255) != 12;
    status_33 := -1073741823;
    goto L18;

  anon62_Then:
    assume {:partition} BAND(statusFlags, 255) == 11;
    goto L46;

  L46:
    status_33 := 0;
    goto L18;

  anon63_Then:
    assume {:partition} BAND(statusFlags, 255) == 10;
    status_33 := -1073741292;
    goto L18;

  anon64_Then:
    assume {:partition} BAND(statusFlags, 255) == 9;
    status_33 := -1073741649;
    goto L18;

  anon65_Then:
    assume {:partition} BAND(statusFlags, 255) == 8;
    status_33 := -1073741670;
    goto L18;

  anon66_Then:
    assume {:partition} BAND(statusFlags, 255) == 5;
    goto L48;

  L48:
    status_33 := -1073741790;
    goto L18;

  anon67_Then:
    assume {:partition} BAND(statusFlags, 255) == 4;
    goto L48;

  anon68_Then:
    assume {:partition} BAND(statusFlags, 255) == 3;
    goto L47;

  L47:
    status_33 := -1073741637;
    goto L18;

  anon69_Then:
    assume {:partition} BAND(statusFlags, 255) == 2;
    goto L47;

  anon70_Then:
    assume {:partition} BAND(statusFlags, 255) == 1;
    goto L47;

  anon55_Then:
    assume {:partition} BAND(statusFlags, 255) == 0;
    goto L46;
}



procedure {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_10: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_10: int)
{
  var {:pointer} Tmp_1304: int;
  var {:pointer} Tmp_1305: int;
  var {:pointer} Tmp_1306: int;
  var {:pointer} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:pointer} Tmp_1309: int;
  var {:scalar} Tmp_1310: int;
  var {:scalar} routine: int;
  var {:scalar} cIrql_5: int;
  var {:pointer} Tmp_1311: int;
  var {:pointer} packet_8: int;
  var {:scalar} status_34: int;
  var {:pointer} Tmp_1312: int;
  var {:pointer} Tmp_1314: int;
  var {:pointer} DeviceExtension: int;
  var {:pointer} Context_10: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 849} packet_8 := __HAVOC_malloc(4);
    call {:si_unique_call 850} vslice_dummy_var_136 := __HAVOC_malloc(4);
    DeviceExtension := actual_DeviceExtension;
    Context_10 := actual_Context_10;
    call {:si_unique_call 851} Tmp_1312 := __HAVOC_malloc(4);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 852} AllocateIrpAndIrb(DeviceExtension, packet_8);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1314;
    assume {:nonnull} Tmp_1314 != 0;
    assume Tmp_1314 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1308;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1311;
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1306;
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1307;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} Tmp_1307 != 0;
    assume Tmp_1307 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1309;
    assume {:nonnull} Tmp_1309 != 0;
    assume Tmp_1309 > 0;
    call {:si_unique_call 853} Tmp_1305 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1305 != 0;
    assume Tmp_1305 > 0;
    Mem_T.INT4[Tmp_1305] := cIrql_5;
    call {:si_unique_call 854} sdv_KeRaiseIrql(2, Tmp_1305);
    assume {:nonnull} Tmp_1305 != 0;
    assume Tmp_1305 > 0;
    cIrql_5 := Mem_T.INT4[Tmp_1305];
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc routine;
    assume routine == 0;
    call {:si_unique_call 855} sdv_KeLowerIrql(cIrql_5);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_34 < 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1312;
    assume {:nonnull} Tmp_1312 != 0;
    assume Tmp_1312 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1312], 1) != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1304;
    havoc Tmp_1310;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc vslice_dummy_var_97;
    call {:si_unique_call 856} WPP_SF_qD(Tmp_1310, 15, Tmp_1304, vslice_dummy_var_97, status_34);
    goto L35;

  L35:
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 857} IoFreeMdl(0);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    goto L36;

  L36:
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_98;
    call {:si_unique_call 858} DeAllocateIrpAndIrb(DeviceExtension, vslice_dummy_var_98);
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L36;

  anon20_Then:
    goto L35;

  anon21_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1312], 1) == 0;
    goto L35;

  anon19_Then:
    goto L35;

  anon17_Then:
    assume {:partition} 0 <= status_34;
    goto L35;

  anon16_Then:
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1315: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1315: int)
{
  var {:pointer} nextEntry: int;
  var {:pointer} queueEntry: int;
  var {:scalar} sdv_438: int;
  var {:pointer} sdv_439: int;
  var {:pointer} sdv_441: int;
  var {:pointer} DeviceQueue: int;
  var {:scalar} SortKey: int;
  var vslice_dummy_var_137: int;

  anon0:
    DeviceQueue := actual_DeviceQueue;
    SortKey := actual_SortKey;
    queueEntry := 0;
    call {:si_unique_call 859} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 860} sdv_438 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_438 != 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    queueEntry := 0;
    goto L18;

  L18:
    call {:si_unique_call 861} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1315 := queueEntry;
    return;

  anon12_Then:
    assume {:partition} sdv_438 == 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    havoc nextEntry;
    goto L22;

  L22:
    call {:si_unique_call 862} nextEntry, queueEntry, sdv_439 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(nextEntry, queueEntry, sdv_439, SortKey);
    goto L22_last;

  L22_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 863} sdv_439 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_439;
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} nextEntry != 0;
    assume nextEntry > 0;
    havoc nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    goto L23;

  L23:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 864} vslice_dummy_var_137 := sdv_RemoveEntryList(0);
    goto L37;

  L37:
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto L18;

  anon14_Then:
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    call {:si_unique_call 865} nextEntry := RemoveHeadList(DeviceListHead__KDEVICE_QUEUE(DeviceQueue));
    call {:si_unique_call 866} sdv_441 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_441;
    goto L37;

  anon13_Then:
    goto L23;

  anon11_Then:
    queueEntry := 0;
    goto L18;
}



procedure {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine(actual_DeviceObject_26: int, actual_Irp_17: int, actual_ContextIn: int) returns (Tmp_1317: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine(actual_DeviceObject_26: int, actual_Irp_17: int, actual_ContextIn: int) returns (Tmp_1317: int)
{
  var {:pointer} Tmp_1318: int;
  var {:pointer} Tmp_1319: int;
  var {:pointer} Tmp_1320: int;
  var {:scalar} cIrql_6: int;
  var {:pointer} pdoExtension_11: int;
  var {:pointer} Tmp_1321: int;
  var {:pointer} Tmp_1322: int;
  var {:pointer} Tmp_1323: int;
  var {:scalar} sdv_444: int;
  var {:pointer} Context_11: int;
  var {:pointer} Tmp_1324: int;
  var {:pointer} Tmp_1325: int;
  var {:scalar} cIrql_7: int;
  var {:pointer} Tmp_1327: int;
  var {:scalar} completed: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} ContextIn: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;

  anon0:
    ContextIn := actual_ContextIn;
    Context_11 := ContextIn;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    call {:si_unique_call 867} vslice_dummy_var_138 := KeSetEvent(Event__REQUEST_CONTEXT(Context_11), 0, 0);
    goto L10;

  L10:
    Tmp_1317 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon26_Then:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    completed := sdv_444;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} completed != 0;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc deviceExtension_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 868} Tmp_1320 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    Mem_T.INT4[Tmp_1320] := cIrql_6;
    call {:si_unique_call 869} sdv_KeAcquireSpinLock(0, Tmp_1320);
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    cIrql_6 := Mem_T.INT4[Tmp_1320];
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 870} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(deviceExtension_1), Context_11);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 871} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L10;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    call {:si_unique_call 872} sdv_ExFreePool(0);
    goto L10;

  anon31_Then:
    assume {:partition} completed == 0;
    goto L10;

  anon23_Then:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc Tmp_1323;
    assume {:nonnull} Tmp_1323 != 0;
    assume Tmp_1323 > 0;
    havoc Tmp_1324;
    assume {:nonnull} Tmp_1324 != 0;
    assume Tmp_1324 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Tmp_1324 != 0;
    assume Tmp_1324 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L18;

  L18:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc Tmp_1327;
    assume {:nonnull} Tmp_1327 != 0;
    assume Tmp_1327 > 0;
    havoc Tmp_1319;
    assume {:nonnull} Tmp_1319 != 0;
    assume Tmp_1319 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc Tmp_1318;
    assume {:nonnull} Tmp_1318 != 0;
    assume Tmp_1318 > 0;
    call {:si_unique_call 873} IoFreeMdl(0);
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc Tmp_1322;
    assume {:nonnull} Tmp_1322 != 0;
    assume Tmp_1322 > 0;
    havoc Tmp_1321;
    assume {:nonnull} Tmp_1321 != 0;
    assume Tmp_1321 > 0;
    goto L15;

  L15:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc vslice_dummy_var_99;
    havoc vslice_dummy_var_100;
    call {:si_unique_call 874} DeAllocateIrpAndIrb(vslice_dummy_var_99, vslice_dummy_var_100);
    goto L13;

  L13:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc Tmp_1325;
    assume {:nonnull} Tmp_1325 != 0;
    assume Tmp_1325 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    havoc pdoExtension_11;
    call {:si_unique_call 875} Tmp_1320 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    Mem_T.INT4[Tmp_1320] := cIrql_7;
    call {:si_unique_call 876} sdv_KeAcquireSpinLock(0, Tmp_1320);
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    cIrql_7 := Mem_T.INT4[Tmp_1320];
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    call {:si_unique_call 877} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(pdoExtension_11), Context_11);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 878} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L10;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    call {:si_unique_call 879} sdv_ExFreePool(0);
    goto L10;

  anon28_Then:
    goto L15;

  anon25_Then:
    goto L15;

  anon27_Then:
    goto L18;

  anon24_Then:
    goto L13;
}



procedure {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int)
{
  var {:pointer} currThread: int;
  var {:pointer} DeviceExtension_1: int;
  var {:scalar} fFromDpcLevel: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;

  anon0:
    call {:si_unique_call 880} vslice_dummy_var_139 := __HAVOC_malloc(4);
    DeviceExtension_1 := actual_DeviceExtension_1;
    fFromDpcLevel := actual_fFromDpcLevel;
    call {:si_unique_call 881} currThread := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_101;
    call {:si_unique_call 882} Sbp2AddLog(DeviceExtension_1, 256, -982751918, currThread, vslice_dummy_var_101);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_102;
    call {:si_unique_call 883} Sbp2AddLog(DeviceExtension_1, 256, 543974738, currThread, vslice_dummy_var_102);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fFromDpcLevel != 0;
    call {:si_unique_call 884} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_103;
    call {:si_unique_call 885} Sbp2AddLog(DeviceExtension_1, 256, -663984814, currThread, vslice_dummy_var_103);
    return;

  anon9_Then:
    assume {:partition} fFromDpcLevel == 0;
    call {:si_unique_call 886} KeReleaseInStackQueuedSpinLock(0);
    goto L12;

  anon8_Then:
    goto L12;

  anon7_Then:
    goto L12;
}



procedure {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int)
{
  var {:scalar} Tmp_1330: int;
  var {:pointer} Tmp_1331: int;
  var {:pointer} Tmp_1333: int;
  var {:pointer} Tmp_1334: int;
  var {:scalar} Tmp_1336: int;
  var {:scalar} dueTime_2: int;
  var {:pointer} Tmp_1337: int;
  var {:pointer} PdoExtension_15: int;
  var {:scalar} DueTime_1: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_104: int;

  anon0:
    call {:si_unique_call 887} vslice_dummy_var_140 := __HAVOC_malloc(4);
    call {:si_unique_call 888} dueTime_2 := __HAVOC_malloc(20);
    PdoExtension_15 := actual_PdoExtension_15;
    DueTime_1 := actual_DueTime_1;
    call {:si_unique_call 889} Tmp_1337 := __HAVOC_malloc(4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DueTime_1 != 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  L10:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    havoc Tmp_1337;
    assume {:nonnull} Tmp_1337 != 0;
    assume Tmp_1337 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1337], 2048) != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    havoc Tmp_1336;
    havoc Tmp_1333;
    havoc Tmp_1330;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_104;
    call {:si_unique_call 890} WPP_SF_qDd(Tmp_1330, 26, Tmp_1333, PdoExtension_15, vslice_dummy_var_104, Tmp_1336);
    goto L11;

  L11:
    call {:si_unique_call 891} Sbp2AddLog(PdoExtension_15, 64, -848007822, DueTime_1, 0);
    call {:si_unique_call 892} vslice_dummy_var_141 := KeSetTimer(0, dueTime_2, 0);
    return;

  anon13_Then:
    goto L11;

  anon14_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1337], 2048) == 0;
    goto L11;

  anon12_Then:
    goto L11;

  anon11_Then:
    assume {:partition} DueTime_1 == 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1334;
    assume {:nonnull} Tmp_1334 != 0;
    assume Tmp_1334 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1331;
    assume {:nonnull} Tmp_1331 != 0;
    assume Tmp_1331 > 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  anon15_Then:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;
}



procedure {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_12: int) returns (Tmp_1338: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_12: int) returns (Tmp_1338: int)
{
  var {:pointer} Tmp_1339: int;
  var {:scalar} sdv_448: int;
  var {:pointer} Tmp_1340: int;
  var {:pointer} Tmp_1341: int;
  var {:scalar} Tmp_1342: int;
  var {:pointer} Tmp_1343: int;
  var {:scalar} Tmp_1344: int;
  var {:pointer} Tmp_1345: int;
  var {:pointer} DeviceExtension_2: int;
  var {:pointer} Context_12: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_105: int;

  anon0:
    DeviceExtension_2 := actual_DeviceExtension_2;
    Context_12 := actual_Context_12;
    call {:si_unique_call 893} Tmp_1340 := __HAVOC_malloc(4);
    call {:si_unique_call 894} Tmp_1341 := __HAVOC_malloc(4);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Context_12 == 0;
    goto L37;

  L37:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    havoc Tmp_1340;
    assume {:nonnull} Tmp_1340 != 0;
    assume Tmp_1340 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1340], 1) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1345;
    havoc Tmp_1342;
    call {:si_unique_call 895} WPP_SF_q(Tmp_1342, 16, Tmp_1345, Context_12);
    goto L38;

  L38:
    Tmp_1338 := 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L38;

  anon28_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1340], 1) == 0;
    goto L38;

  anon26_Then:
    goto L38;

  anon21_Then:
    assume {:partition} Context_12 != 0;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L37;

  anon22_Then:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 896} Free1394DataMapping(DeviceExtension_2, Context_12);
    goto L9;

  L9:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L22;

  L22:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_1341;
    assume {:nonnull} Tmp_1341 != 0;
    assume Tmp_1341 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1341], 1) != 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1339;
    havoc Tmp_1344;
    call {:si_unique_call 897} WPP_SF_q(Tmp_1344, 17, Tmp_1339, Context_12);
    goto L23;

  L23:
    call {:si_unique_call 898} vslice_dummy_var_142 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    call {:si_unique_call 899} Tmp_1343 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1343 != 0;
    assume Tmp_1343 > 0;
    havoc vslice_dummy_var_105;
    Mem_T.INT4[Tmp_1343] := vslice_dummy_var_105;
    call {:si_unique_call 900} sdv_448 := sdv_InterlockedDecrement(Tmp_1343);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1343 != 0;
    assume Tmp_1343 > 0;
    Tmp_1338 := sdv_448;
    goto L1;

  anon25_Then:
    goto L23;

  anon30_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1341], 1) == 0;
    goto L23;

  anon24_Then:
    goto L23;

  anon29_Then:
    call {:si_unique_call 901} sdv_ExFreePool(0);
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto L22;

  anon23_Then:
    goto L9;
}



procedure {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1346: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1346 == -1073741811 || Tmp_1346 == -1073741823 || Tmp_1346 == 0 || Tmp_1346 == 5 || Tmp_1346 == -1073741789 || Tmp_1346 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1346: int)
{
  var {:pointer} Tmp_1347: int;
  var {:scalar} Tmp_1348: int;
  var {:pointer} RootHandle: int;
  var {:pointer} Tmp_1349: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_1350: int;
  var {:scalar} Tmp_1351: int;
  var {:scalar} Tmp_1352: int;
  var {:pointer} Tmp_1353: int;
  var {:pointer} Tmp_1354: int;
  var {:pointer} Tmp_1355: int;
  var {:pointer} sdv_451: int;
  var {:pointer} sdv_452: int;
  var {:scalar} Tmp_1356: int;
  var {:scalar} KeyLength: int;
  var {:scalar} status_35: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var {:pointer} DwData: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;

  anon0:
    call {:si_unique_call 902} uniTempName := __HAVOC_malloc(12);
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    DwData := actual_DwData;
    call {:si_unique_call 903} Tmp_1349 := __HAVOC_malloc(4);
    call {:si_unique_call 904} Tmp_1355 := __HAVOC_malloc(4);
    status_35 := 0;
    RootHandle := 0;
    call {:si_unique_call 905} sdv_do_paged_code_check();
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 906} status_35 := IoOpenDeviceRegistryKey(0, 1, 131097, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_35 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1352;
    call {:si_unique_call 907} sdv_451 := ExAllocatePoolWithTag(512, Tmp_1352, 846226003);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    KeyLength := 20;
    call {:si_unique_call 908} sdv_452 := ExAllocatePoolWithTag(512, KeyLength, 846226003);
    KeyInfo := sdv_452;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1351;
    call {:si_unique_call 909} sdv_RtlZeroMemory(0, Tmp_1351);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 910} vslice_dummy_var_144 := corral_nondet();
    call {:si_unique_call 911} Tmp_1353 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    Mem_T.INT4[Tmp_1353] := ResultLength_1;
    call {:si_unique_call 912} status_35 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_1353);
    assume {:nonnull} Tmp_1353 != 0;
    assume Tmp_1353 > 0;
    ResultLength_1 := Mem_T.INT4[Tmp_1353];
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_35 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    havoc Tmp_1355;
    assume {:nonnull} Tmp_1355 != 0;
    assume Tmp_1355 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1355], 1) != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1350;
    havoc Tmp_1348;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc vslice_dummy_var_106;
    call {:si_unique_call 913} WPP_SF_qD(Tmp_1348, 25, Tmp_1350, vslice_dummy_var_106, status_35);
    goto L58;

  L58:
    call {:si_unique_call 914} sdv_ExFreePool(0);
    goto L68;

  L68:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} RootHandle != 0;
    call {:si_unique_call 915} vslice_dummy_var_143 := ZwClose(0);
    goto L69;

  L69:
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 916} sdv_ExFreePool(0);
    goto L73;

  L73:
    Tmp_1346 := status_35;
    return;

  anon29_Then:
    goto L73;

  anon28_Then:
    assume {:partition} RootHandle == 0;
    goto L69;

  anon31_Then:
    goto L58;

  anon36_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1355], 1) == 0;
    goto L58;

  anon30_Then:
    goto L58;

  anon26_Then:
    assume {:partition} 0 <= status_35;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_1354 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} Tmp_1354 != 0;
    assume Tmp_1354 > 0;
    Mem_T.INT4[DwData] := Mem_T.INT4[Tmp_1354];
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1349;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1349], 1) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1347;
    havoc Tmp_1356;
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc vslice_dummy_var_107;
    call {:si_unique_call 917} WPP_SF_qD(Tmp_1356, 24, Tmp_1347, vslice_dummy_var_107, Mem_T.INT4[DwData]);
    goto L58;

  anon27_Then:
    goto L58;

  anon35_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1349], 1) == 0;
    goto L58;

  anon34_Then:
    goto L58;

  anon33_Then:
    assume {:partition} KeyInfo == 0;
    status_35 := -1073741670;
    goto L68;

  anon32_Then:
    status_35 := -1073741670;
    goto L68;

  anon25_Then:
    assume {:partition} 0 > status_35;
    status_35 := -1073741670;
    goto L68;
}



procedure {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int)
{
  var {:pointer} currThread_1: int;
  var {:pointer} prevOwner: int;
  var {:pointer} sdv_456: int;
  var {:pointer} sdv_457: int;
  var {:pointer} DeviceExtension_3: int;
  var {:scalar} fFromDpcLevel_1: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 918} vslice_dummy_var_145 := __HAVOC_malloc(4);
    DeviceExtension_3 := actual_DeviceExtension_3;
    fFromDpcLevel_1 := actual_fFromDpcLevel_1;
    call {:si_unique_call 919} currThread_1 := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_108;
    call {:si_unique_call 920} Sbp2AddLog(DeviceExtension_3, 256, -982424767, currThread_1, vslice_dummy_var_108);
    goto L12;

  L12:
    call {:si_unique_call 921} prevOwner, sdv_456, sdv_457 := AcquireOrbListLock_loop_L12(currThread_1, prevOwner, sdv_456, sdv_457, DeviceExtension_3, fFromDpcLevel_1);
    goto L12_last;

  L12_last:
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 929} sdv_456 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_456;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_109;
    call {:si_unique_call 922} Sbp2AddLog(DeviceExtension_3, 256, 544301889, currThread_1, vslice_dummy_var_109);
    goto L22;

  L22:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_110;
    call {:si_unique_call 923} Sbp2AddLog(DeviceExtension_3, 256, -663657663, currThread_1, vslice_dummy_var_110);
    return;

  anon14_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 924} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} prevOwner != 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 925} sdv_457 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_457;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 926} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 927} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 928} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int)
{
  var {:pointer} TraceGuid_16: int;
  var vslice_dummy_var_146: int;

  anon0:
    call {:si_unique_call 930} vslice_dummy_var_146 := __HAVOC_malloc(4);
    TraceGuid_16 := actual_TraceGuid_16;
    return;
}



procedure {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int)
{
  var {:scalar} sdv_473: int;
  var {:pointer} logEntry: int;
  var {:scalar} sigRev: int;
  var {:scalar} index: int;
  var {:scalar} sig: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} log: int;
  var {:pointer} PdoExt: int;
  var {:scalar} Mask: int;
  var {:scalar} Sig: int;
  var {:scalar} Data1: int;
  var {:scalar} Data2: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_111: int;

  anon0:
    call {:si_unique_call 931} sigRev := __HAVOC_malloc(20);
    call {:si_unique_call 932} sig := __HAVOC_malloc(20);
    call {:si_unique_call 933} vslice_dummy_var_147 := __HAVOC_malloc(4);
    PdoExt := actual_PdoExt;
    Mask := actual_Mask;
    Sig := actual_Sig;
    Data1 := actual_Data1;
    Data2 := actual_Data2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(Sbp2LogLevel, Mask) != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} PdoExt != 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    log := DbgLog__DEVICE_EXTENSION(PdoExt);
    call {:si_unique_call 934} Tmp_1380 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc vslice_dummy_var_111;
    Mem_T.INT4[Tmp_1380] := vslice_dummy_var_111;
    call {:si_unique_call 935} sdv_473 := sdv_InterlockedDecrement(Tmp_1380);
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    index := sdv_473;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc index;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc logEntry;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L1;

  anon8_Then:
    assume {:partition} PdoExt == 0;
    goto L1;

  anon7_Then:
    assume {:partition} BAND(Sbp2LogLevel, Mask) == 0;
    goto L1;
}



procedure {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_72: int, actual_s_p_e_c_i_a_l_73: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_72: int, actual_s_p_e_c_i_a_l_73: int)
{
  var {:pointer} TraceGuid_17: int;
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 936} vslice_dummy_var_148 := __HAVOC_malloc(4);
    TraceGuid_17 := actual_TraceGuid_17;
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var {:scalar} Tmp_1430: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_112: int;

  anon0:
    call {:si_unique_call 937} vslice_dummy_var_149 := __HAVOC_malloc(4);
    call {:si_unique_call 938} Tmp_1430 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume {:nonnull} Tmp_1430 != 0;
    assume Tmp_1430 > 0;
    havoc vslice_dummy_var_112;
    Mem_T.INT4[Tmp_1430] := vslice_dummy_var_112;
    return;
}



procedure {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int)
{
  var {:pointer} pkt: int;
  var {:pointer} Tmp_1431: int;
  var {:scalar} Tmp_1432: int;
  var {:pointer} Tmp_1433: int;
  var {:pointer} sdv_486: int;
  var {:pointer} sdv_487: int;
  var {:pointer} sdv_488: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} Packet_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 939} vslice_dummy_var_150 := __HAVOC_malloc(4);
    DeviceExtension_6 := actual_DeviceExtension_6;
    Packet_1 := actual_Packet_1;
    call {:si_unique_call 940} Tmp_1433 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 941} sdv_486 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto L10;

  L10:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 942} sdv_487 := ExAllocatePoolWithTag(512, 24, -347053485);
    pkt := sdv_487;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} pkt != 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    call {:si_unique_call 943} sdv_488 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc Tmp_1437;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_113;
    call {:si_unique_call 944} boogieTmp := IoAllocateIrp(vslice_dummy_var_113, 0);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1433;
    assume {:nonnull} Tmp_1433 != 0;
    assume Tmp_1433 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1433], 1) != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_1431 := strConst__li2bpl14;
    goto L46;

  L46:
    havoc Tmp_1436;
    havoc Tmp_1432;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_114;
    havoc vslice_dummy_var_115;
    call {:si_unique_call 945} WPP_SF_sqq(Tmp_1432, 10, Tmp_1436, Tmp_1431, vslice_dummy_var_114, vslice_dummy_var_115);
    goto L40;

  L40:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto L1;

  L1:
    return;

  anon24_Then:
    Tmp_1431 := strConst__li2bpl13;
    goto L46;

  anon23_Then:
    goto L40;

  anon27_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1433], 1) == 0;
    goto L40;

  anon22_Then:
    goto L40;

  anon21_Then:
    call {:si_unique_call 946} sdv_ExFreePool(0);
    call {:si_unique_call 947} sdv_ExFreePool(0);
    goto L1;

  anon26_Then:
    call {:si_unique_call 948} sdv_ExFreePool(0);
    goto L1;

  anon25_Then:
    assume {:partition} pkt == 0;
    goto L1;

  anon20_Then:
    goto L1;

  anon19_Then:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto L10;
}



procedure {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1438: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1438 == -1073741823 || Tmp_1438 == -1073741738 || Tmp_1438 == 0 || Tmp_1438 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1438: int)
{
  var {:pointer} Tmp_1439: int;
  var {:pointer} workItem: int;
  var {:scalar} Tmp_1441: int;
  var {:scalar} Tmp_1442: int;
  var {:pointer} sdv_491: int;
  var {:scalar} sdv_492: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} Tmp_1444: int;
  var {:scalar} status_39: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1445: int;
  var {:pointer} PdoExtension_18: int;
  var {:scalar} Action: int;
  var {:scalar} Generation_5: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    Action := actual_Action;
    Generation_5 := actual_Generation_5;
    call {:si_unique_call 949} Tmp_1439 := __HAVOC_malloc(4);
    call {:si_unique_call 950} Tmp_1444 := __HAVOC_malloc(4);
    call {:si_unique_call 951} status_39 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_39 >= 0;
    call {:si_unique_call 952} sdv_491 := ExAllocatePoolWithTag(512, 16, -344497581);
    entry_2 := sdv_491;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} entry_2 != 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 953} InitializeListHead(Link__BUS_RESET_ENTRY(entry_2));
    call {:si_unique_call 954} sdv_492 := sdv_IsListEmpty(0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_492 == 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    havoc Tmp_1444;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1444], 2048) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1443;
    havoc Tmp_1442;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc vslice_dummy_var_116;
    call {:si_unique_call 955} WPP_SF_qD(Tmp_1442, 29, Tmp_1443, PdoExtension_18, vslice_dummy_var_116);
    goto L60;

  L60:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 956} vslice_dummy_var_151 := sdv_InsertTailList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_2));
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 957} vslice_dummy_var_152 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto L54;

  L54:
    Tmp_1438 := status_39;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L60;

  anon30_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1444], 2048) == 0;
    goto L60;

  anon26_Then:
    goto L60;

  anon22_Then:
    assume {:partition} sdv_492 != 0;
    call {:si_unique_call 958} workItem := IoAllocateWorkItem(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} workItem != 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 959} InsertHeadList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_2));
    call {:si_unique_call 960} IoQueueWorkItem(0, li2bplFunctionConstant461, 1, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1439], 2048) != 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1445;
    havoc Tmp_1441;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc vslice_dummy_var_117;
    call {:si_unique_call 961} WPP_SF_qDd(Tmp_1441, 28, Tmp_1445, PdoExtension_18, vslice_dummy_var_117, Generation_5);
    goto L46;

  L46:
    status_39 := 0;
    goto L54;

  anon25_Then:
    goto L46;

  anon29_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1439], 2048) == 0;
    goto L46;

  anon24_Then:
    goto L46;

  anon23_Then:
    assume {:partition} workItem == 0;
    status_39 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 962} vslice_dummy_var_153 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    Tmp_1438 := status_39;
    goto L1;

  anon28_Then:
    assume {:partition} entry_2 == 0;
    status_39 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 963} vslice_dummy_var_154 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    Tmp_1438 := status_39;
    goto L1;

  anon21_Then:
    assume {:partition} 0 > status_39;
    Tmp_1438 := status_39;
    goto L1;
}



procedure {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1446: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1446 == 1 || Tmp_1446 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1446: int)
{
  var {:pointer} irpStack_10: int;
  var {:pointer} nextEntry_1: int;
  var {:scalar} inserted: int;
  var {:pointer} queueEntry_1: int;
  var {:pointer} sdv_494: int;
  var {:pointer} queueEntry2: int;
  var {:pointer} sdv_496: int;
  var {:pointer} irp_4: int;
  var {:pointer} queue: int;
  var {:pointer} DeviceQueue_1: int;
  var {:pointer} DeviceQueueEntry: int;
  var {:scalar} SortKey_1: int;

  anon0:
    DeviceQueue_1 := actual_DeviceQueue_1;
    DeviceQueueEntry := actual_DeviceQueueEntry;
    SortKey_1 := actual_SortKey_1;
    queue := DeviceQueue_1;
    queueEntry_1 := DeviceQueueEntry;
    call {:si_unique_call 964} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 965} sdv_494 := sdv_containing_record(DeviceQueueEntry, 64);
    irp_4 := sdv_494;
    call {:si_unique_call 966} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(irp_4);
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    inserted := 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    havoc nextEntry_1;
    goto L31;

  L31:
    call {:si_unique_call 967} nextEntry_1, queueEntry2, sdv_496 := Sbp2InsertByKeyDeviceQueue_loop_L31(nextEntry_1, queueEntry2, sdv_496, SortKey_1);
    goto L31_last;

  L31_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 968} sdv_496 := sdv_containing_record(nextEntry_1, 0);
    queueEntry2 := sdv_496;
    assume {:nonnull} queueEntry2 != 0;
    assume queueEntry2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 969} InsertHeadList(nextEntry_1, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_1));
    goto L43;

  L43:
    call {:si_unique_call 970} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1446 := inserted;
    return;

  anon7_Then:
    goto L32;

  anon8_Then:
    assume {:nonnull} queue != 0;
    assume queue > 0;
    inserted := 0;
    goto L43;
}



procedure {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int, actual_s_p_e_c_i_a_l_78: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int, actual_s_p_e_c_i_a_l_78: int)
{
  var {:scalar} sdv_497: int;
  var {:pointer} TraceGuid_18: int;
  var {:pointer} s_p_e_c_i_a_l_76: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 971} vslice_dummy_var_155 := __HAVOC_malloc(4);
    TraceGuid_18 := actual_TraceGuid_18;
    s_p_e_c_i_a_l_76 := actual_s_p_e_c_i_a_l_76;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_76 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_76 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_76 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_76 == 0;
    goto L9;
}



procedure {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int)
{
  var {:scalar} logSize: int;
  var {:pointer} Tmp_1472: int;
  var {:pointer} PdoExtension_19: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 972} vslice_dummy_var_156 := __HAVOC_malloc(4);
    PdoExtension_19 := actual_PdoExtension_19;
    call {:si_unique_call 973} Tmp_1472 := __HAVOC_malloc(4);
    logSize := 4096;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1472;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    return;
}



procedure {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int)
{
  var {:pointer} DeviceExtension_8: int;
  var {:pointer} Packet_2: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;

  anon0:
    call {:si_unique_call 974} vslice_dummy_var_157 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    Packet_2 := actual_Packet_2;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 975} vslice_dummy_var_158 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 976} IoFreeIrp(0);
    call {:si_unique_call 977} sdv_ExFreePool(0);
    call {:si_unique_call 978} sdv_ExFreePool(0);
    goto L1;
}



procedure {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int)
{
  var {:pointer} TraceGuid_19: int;
  var vslice_dummy_var_159: int;

  anon0:
    call {:si_unique_call 979} vslice_dummy_var_159 := __HAVOC_malloc(4);
    TraceGuid_19 := actual_TraceGuid_19;
    return;
}



procedure {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_29: int, actual_DeviceInfo_1: int) returns (Tmp_1506: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1506 == -1073741811 || Tmp_1506 == -1073741823 || Tmp_1506 == 0 || Tmp_1506 == 5 || Tmp_1506 == -1073741789 || Tmp_1506 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_29: int, actual_DeviceInfo_1: int) returns (Tmp_1506: int)
{
  var {:pointer} Tmp_1507: int;
  var {:pointer} Tmp_1508: int;
  var {:scalar} sdv_508: int;
  var {:pointer} Tmp_1509: int;
  var {:pointer} Tmp_1510: int;
  var {:pointer} Tmp_1511: int;
  var {:scalar} sdv_509: int;
  var {:pointer} Tmp_1512: int;
  var {:scalar} devType: int;
  var {:pointer} Tmp_1513: int;
  var {:scalar} fw: int;
  var {:scalar} sdv_511: int;
  var {:pointer} Tmp_1514: int;
  var {:scalar} sdv_512: int;
  var {:scalar} sdv_513: int;
  var {:scalar} sdv_514: int;
  var {:scalar} sdv_515: int;
  var {:scalar} sdv_516: int;
  var {:pointer} Tmp_1515: int;
  var {:scalar} sdv_517: int;
  var {:scalar} sdv_518: int;
  var {:pointer} Tmp_1517: int;
  var {:scalar} uniTemp: int;
  var {:scalar} sdv_519: int;
  var {:scalar} status_42: int;
  var {:pointer} Tmp_1518: int;
  var {:pointer} Tmp_1519: int;
  var {:pointer} Tmp_1520: int;
  var {:scalar} sdv_520: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} DeviceInfo_1: int;

  anon0:
    call {:si_unique_call 980} uniTemp := __HAVOC_malloc(12);
    DeviceObject_29 := actual_DeviceObject_29;
    DeviceInfo_1 := actual_DeviceInfo_1;
    call {:si_unique_call 981} Tmp_1507 := __HAVOC_malloc(144);
    call {:si_unique_call 982} Tmp_1508 := __HAVOC_malloc(20);
    call {:si_unique_call 983} Tmp_1509 := __HAVOC_malloc(76);
    call {:si_unique_call 984} Tmp_1510 := __HAVOC_malloc(40);
    call {:si_unique_call 985} Tmp_1511 := __HAVOC_malloc(68);
    call {:si_unique_call 986} Tmp_1512 := __HAVOC_malloc(32);
    call {:si_unique_call 987} Tmp_1513 := __HAVOC_malloc(36);
    call {:si_unique_call 988} Tmp_1514 := __HAVOC_malloc(68);
    call {:si_unique_call 989} Tmp_1515 := __HAVOC_malloc(32);
    call {:si_unique_call 990} Tmp_1517 := __HAVOC_malloc(48);
    call {:si_unique_call 991} Tmp_1518 := __HAVOC_malloc(64);
    call {:si_unique_call 992} Tmp_1519 := __HAVOC_malloc(40);
    call {:si_unique_call 993} Tmp_1520 := __HAVOC_malloc(40);
    status_42 := 0;
    call {:si_unique_call 994} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := 0;
    Tmp_1517 := strConst__li2bpl24;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    call {:si_unique_call 995} status_42 := Sbp2GetRegistryValue(DeviceObject_29, Tmp_1517, LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1));
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    havoc devType;
    call {:si_unique_call 996} fw := corral_nondet();
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} devType == 5;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 64);
    Tmp_1520 := strConst__li2bpl25;
    call {:si_unique_call 997} RtlInitUnicodeString(uniTemp, Tmp_1520);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L45;

  L45:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 8) != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L46;

  L46:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 4) != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L48;

  L48:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 2) != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L50;

  L50:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1) != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L52;

  L52:
    Tmp_1506 := status_42;
    return;

  anon80_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1) == 0;
    goto L52;

  anon79_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 2) == 0;
    goto L50;

  anon78_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 4) == 0;
    goto L48;

  anon77_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 8) == 0;
    goto L46;

  anon73_Then:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} sdv_514 != 0;
    goto L45;

  anon74_Then:
    assume {:partition} sdv_514 == 0;
    Tmp_1507 := strConst__li2bpl16;
    call {:si_unique_call 998} RtlInitUnicodeString(uniTemp, Tmp_1507);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L45;

  anon75_Then:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} sdv_516 != 0;
    goto L45;

  anon76_Then:
    assume {:partition} sdv_516 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1024);
    goto L45;

  anon108_Then:
    assume {:partition} devType != 5;
    Tmp_1513 := strConst__li2bpl15;
    call {:si_unique_call 999} RtlInitUnicodeString(uniTemp, Tmp_1513);
    call {:si_unique_call 1000} sdv_517 := corral_nondet();
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} sdv_517 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], BOR(32, 256));
    goto L58;

  L58:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} devType != 14;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} devType == 0;
    goto L60;

  L60:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 64);
    Tmp_1511 := strConst__li2bpl26;
    call {:si_unique_call 1001} RtlInitUnicodeString(uniTemp, Tmp_1511);
    call {:si_unique_call 1002} sdv_518 := corral_nondet();
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} sdv_518 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 16);
    goto L70;

  L70:
    Tmp_1518 := strConst__li2bpl17;
    call {:si_unique_call 1003} RtlInitUnicodeString(uniTemp, Tmp_1518);
    call {:si_unique_call 1004} sdv_511 := corral_nondet();
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_511 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 32);
    goto L78;

  L78:
    Tmp_1510 := strConst__li2bpl18;
    call {:si_unique_call 1005} RtlInitUnicodeString(uniTemp, Tmp_1510);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} sdv_519 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 512);
    goto L83;

  L83:
    Tmp_1515 := strConst__li2bpl19;
    call {:si_unique_call 1006} RtlInitUnicodeString(uniTemp, Tmp_1515);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} sdv_513 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 512);
    goto L93;

  L93:
    Tmp_1512 := strConst__li2bpl20;
    call {:si_unique_call 1007} RtlInitUnicodeString(uniTemp, Tmp_1512);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} sdv_512 == 0;
    Tmp_1509 := strConst__li2bpl21;
    call {:si_unique_call 1008} RtlInitUnicodeString(uniTemp, Tmp_1509);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} sdv_520 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 512);
    goto L103;

  L103:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} fw != 0;
    goto L120;

  L120:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_42 >= 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 15) == 0;
    goto L121;

  L121:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} fw != 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} fw != 40;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} fw != 41;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} fw != 4097;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} fw != 41144;
    goto L128;

  L128:
    Tmp_1508 := strConst__li2bpl22;
    call {:si_unique_call 1009} RtlInitUnicodeString(uniTemp, Tmp_1508);
    call {:si_unique_call 1010} sdv_515 := corral_nondet();
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_515 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1);
    goto L45;

  anon100_Then:
    assume {:partition} sdv_515 == 0;
    Tmp_1514 := strConst__li2bpl23;
    call {:si_unique_call 1011} RtlInitUnicodeString(uniTemp, Tmp_1514);
    call {:si_unique_call 1012} sdv_508 := corral_nondet();
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_508 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1);
    goto L45;

  anon101_Then:
    assume {:partition} sdv_508 == 0;
    Tmp_1519 := strConst__li2bpl18;
    call {:si_unique_call 1013} RtlInitUnicodeString(uniTemp, Tmp_1519);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_509 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1);
    goto L45;

  anon103_Then:
    assume {:partition} sdv_509 != 0;
    goto L45;

  anon102_Then:
    goto L45;

  anon104_Then:
    assume {:partition} fw == 41144;
    goto L126;

  L126:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 1);
    goto L128;

  anon105_Then:
    assume {:partition} fw == 4097;
    goto L126;

  anon106_Then:
    assume {:partition} fw == 41;
    goto L126;

  anon107_Then:
    assume {:partition} fw == 40;
    goto L126;

  anon97_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L128;

  anon99_Then:
    goto L126;

  anon98_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 15) != 0;
    goto L45;

  anon96_Then:
    assume {:partition} 0 > status_42;
    goto L121;

  anon91_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)] := BOR(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1)], 128);
    goto L120;

  anon95_Then:
    goto L120;

  anon94_Then:
    assume {:partition} sdv_520 != 0;
    goto L103;

  anon93_Then:
    goto L103;

  anon92_Then:
    assume {:partition} sdv_512 != 0;
    goto L103;

  anon90_Then:
    goto L103;

  anon89_Then:
    assume {:partition} sdv_513 != 0;
    goto L93;

  anon88_Then:
    goto L93;

  anon87_Then:
    assume {:partition} sdv_519 != 0;
    goto L83;

  anon86_Then:
    goto L83;

  anon85_Then:
    assume {:partition} sdv_511 == 0;
    goto L78;

  anon84_Then:
    assume {:partition} sdv_518 == 0;
    goto L70;

  anon83_Then:
    assume {:partition} devType != 0;
    goto L45;

  anon82_Then:
    assume {:partition} devType == 14;
    goto L60;

  anon81_Then:
    assume {:partition} sdv_517 == 0;
    goto L58;
}



procedure {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_31: int, actual_Context_16: int, actual_ErrorId: int, actual_Status: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_31: int, actual_Context_16: int, actual_ErrorId: int, actual_Status: int)
{
  var {:scalar} Tmp_1523: int;
  var {:pointer} sdv_523: int;
  var {:pointer} errorLogEntry: int;
  var {:scalar} Tmp_1526: int;
  var {:pointer} Tmp_1527: int;
  var {:pointer} Tmp_1528: int;
  var {:pointer} Tmp_1530: int;
  var {:pointer} Tmp_1531: int;
  var {:pointer} Tmp_1532: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Context_16: int;
  var {:scalar} ErrorId: int;
  var {:scalar} Status: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;

  anon0:
    call {:si_unique_call 1014} vslice_dummy_var_160 := __HAVOC_malloc(4);
    DeviceObject_31 := actual_DeviceObject_31;
    Context_16 := actual_Context_16;
    ErrorId := actual_ErrorId;
    Status := actual_Status;
    call {:si_unique_call 1015} Tmp_1528 := __HAVOC_malloc(4);
    call {:si_unique_call 1016} Tmp_1530 := __HAVOC_malloc(4);
    call {:si_unique_call 1017} Tmp_1531 := __HAVOC_malloc(4);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Status != -1073741810;
    call {:si_unique_call 1018} sdv_523 := IoAllocateErrorLogEntry(0, 88);
    errorLogEntry := sdv_523;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} errorLogEntry == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_1528;
    assume {:nonnull} Tmp_1528 != 0;
    assume Tmp_1528 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1528], 1) != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1527;
    havoc Tmp_1523;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc vslice_dummy_var_118;
    call {:si_unique_call 1019} WPP_SF_q(Tmp_1523, 22, Tmp_1527, vslice_dummy_var_118);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1528], 1) == 0;
    goto L1;

  anon37_Then:
    goto L1;

  anon45_Then:
    assume {:partition} errorLogEntry != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Status != -1073741811;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status != -1073741808;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status != -1073741670;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status != -1073741666;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status != -1073741434;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status != -1073741248;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Status == 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  L23:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Context_16 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1530;
    call {:si_unique_call 1020} sdv_RtlCopyMemory(0, 0, 40);
    goto L35;

  L35:
    call {:si_unique_call 1021} IoWriteErrorLogEntry(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1531;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1531], 1) != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1532;
    havoc Tmp_1526;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc vslice_dummy_var_119;
    call {:si_unique_call 1022} WPP_SF_qqDq(Tmp_1526, 21, Tmp_1532, vslice_dummy_var_119, DeviceObject_31, Status, Context_16);
    goto L1;

  anon36_Then:
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1531], 1) == 0;
    goto L1;

  anon35_Then:
    goto L1;

  anon46_Then:
    assume {:partition} Context_16 == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L35;

  anon39_Then:
    assume {:partition} Status != 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon40_Then:
    assume {:partition} Status == -1073741248;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon41_Then:
    assume {:partition} Status == -1073741434;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon42_Then:
    assume {:partition} Status == -1073741666;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon43_Then:
    assume {:partition} Status == -1073741670;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon44_Then:
    assume {:partition} Status == -1073741808;
    goto L16;

  L16:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon34_Then:
    assume {:partition} Status == -1073741811;
    goto L16;

  anon33_Then:
    assume {:partition} Status == -1073741810;
    goto L1;
}



procedure {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_82: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_82: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int)
{
  var {:pointer} TraceGuid_20: int;
  var vslice_dummy_var_161: int;

  anon0:
    call {:si_unique_call 1023} vslice_dummy_var_161 := __HAVOC_malloc(4);
    TraceGuid_20 := actual_TraceGuid_20;
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var {:scalar} Tmp_1570: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_120: int;

  anon0:
    call {:si_unique_call 1024} Tmp_1570 := __HAVOC_malloc(4);
    call {:si_unique_call 1025} vslice_dummy_var_162 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    havoc vslice_dummy_var_120;
    Mem_T.INT4[Tmp_1570] := vslice_dummy_var_120;
    return;
}



procedure {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_87: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_87: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int)
{
  var {:pointer} TraceGuid_21: int;
  var vslice_dummy_var_163: int;

  anon0:
    call {:si_unique_call 1026} vslice_dummy_var_163 := __HAVOC_malloc(4);
    TraceGuid_21 := actual_TraceGuid_21;
    return;
}



procedure {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_32: int, actual_Irp_19: int, actual_Direct: int) returns (Tmp_1576: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1576 == -1073741808 || Tmp_1576 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_32: int, actual_Irp_19: int, actual_Direct: int) returns (Tmp_1576: int)
{
  var {:pointer} irpStack_12: int;
  var {:pointer} Tmp_1578: int;
  var {:pointer} pdoExtension_13: int;
  var {:pointer} Tmp_1579: int;
  var {:scalar} Tmp_1580: int;
  var {:pointer} Tmp_1581: int;
  var {:scalar} maxPhysicalPages: int;
  var {:scalar} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} Tmp_1584: int;
  var {:scalar} maxTransferLength: int;
  var {:scalar} status_44: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_164: int;

  anon0:
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 1027} Tmp_1578 := __HAVOC_malloc(4);
    call {:si_unique_call 1028} Tmp_1579 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc pdoExtension_13;
    call {:si_unique_call 1029} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1579;
    assume {:nonnull} Tmp_1579 != 0;
    assume Tmp_1579 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1579], 1) != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1583;
    havoc Tmp_1582;
    call {:si_unique_call 1030} WPP_SF_qq(Tmp_1582, 61, Tmp_1583, pdoExtension_13, DeviceObject_32);
    goto L14;

  L14:
    call {:si_unique_call 1031} irpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L29;

  L29:
    assume {:nonnull} pdoExtension_13 != 0;
    assume pdoExtension_13 > 0;
    havoc Tmp_1584;
    assume {:nonnull} Tmp_1584 != 0;
    assume Tmp_1584 > 0;
    havoc maxTransferLength;
    maxPhysicalPages := INTDIV(maxTransferLength, 4096);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 511 > maxPhysicalPages;
    maxPhysicalPages := maxPhysicalPages + 1;
    goto L32;

  L32:
    call {:si_unique_call 1032} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1033} vslice_dummy_var_164 := corral_nondet();
    status_44 := 259;
    goto L40;

  L40:
    Tmp_1576 := status_44;
    return;

  anon26_Then:
    assume {:partition} maxPhysicalPages >= 511;
    goto L32;

  anon21_Then:
    assume {:nonnull} pdoExtension_13 != 0;
    assume pdoExtension_13 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_1578;
    assume {:nonnull} Tmp_1578 != 0;
    assume Tmp_1578 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1578], 1) != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_1581;
    havoc Tmp_1580;
    call {:si_unique_call 1034} WPP_SF_(Tmp_1580, 62, Tmp_1581);
    goto L45;

  L45:
    status_44 := -1073741808;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    call {:si_unique_call 1035} sdv_IoCompleteRequest(0, 0);
    goto L40;

  anon24_Then:
    goto L45;

  anon27_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1578], 1) == 0;
    goto L45;

  anon23_Then:
    goto L45;

  anon22_Then:
    goto L29;

  anon20_Then:
    goto L14;

  anon25_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1579], 1) == 0;
    goto L14;

  anon19_Then:
    goto L14;
}



procedure {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_92: int, actual_s_p_e_c_i_a_l_93: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_92: int, actual_s_p_e_c_i_a_l_93: int)
{
  var {:pointer} TraceGuid_22: int;
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 1036} vslice_dummy_var_165 := __HAVOC_malloc(4);
    TraceGuid_22 := actual_TraceGuid_22;
    return;
}



procedure {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_17: int) returns (Tmp_1588: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1588 == -1073741670 || Tmp_1588 == -1073741823 || Tmp_1588 == 259 || Tmp_1588 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_17: int) returns (Tmp_1588: int)
{
  var {:pointer} Tmp_1589: int;
  var {:pointer} Tmp_1590: int;
  var {:pointer} Tmp_1591: int;
  var {:pointer} Tmp_1592: int;
  var {:pointer} cdb_1: int;
  var {:scalar} Tmp_1593: int;
  var {:scalar} Tmp_1594: int;
  var {:pointer} Tmp_1595: int;
  var {:pointer} pdoExtension_14: int;
  var {:pointer} Tmp_1596: int;
  var {:pointer} Tmp_1597: int;
  var {:pointer} Tmp_1598: int;
  var {:pointer} Tmp_1599: int;
  var {:pointer} Tmp_1600: int;
  var {:pointer} Tmp_1601: int;
  var {:pointer} Tmp_1602: int;
  var {:pointer} Tmp_1604: int;
  var {:pointer} Tmp_1605: int;
  var {:pointer} Tmp_1606: int;
  var {:pointer} Tmp_1607: int;
  var {:pointer} Tmp_1608: int;
  var {:pointer} Tmp_1609: int;
  var {:scalar} Tmp_1610: int;
  var {:pointer} Tmp_1611: int;
  var {:scalar} Tmp_1612: int;
  var {:scalar} Tmp_1613: int;
  var {:pointer} Tmp_1614: int;
  var {:pointer} Tmp_1615: int;
  var {:pointer} Tmp_1616: int;
  var {:pointer} Tmp_1617: int;
  var {:scalar} Tmp_1618: int;
  var {:scalar} Tmp_1619: int;
  var {:pointer} Tmp_1620: int;
  var {:scalar} Tmp_1621: int;
  var {:pointer} Tmp_1622: int;
  var {:pointer} Tmp_1623: int;
  var {:pointer} Tmp_1624: int;
  var {:scalar} bSetCacheHack: int;
  var {:pointer} Tmp_1625: int;
  var {:scalar} Tmp_1626: int;
  var {:pointer} Tmp_1627: int;
  var {:pointer} Tmp_1628: int;
  var {:pointer} Tmp_1629: int;
  var {:pointer} Tmp_1630: int;
  var {:pointer} Tmp_1631: int;
  var {:pointer} Tmp_1632: int;
  var {:pointer} Tmp_1633: int;
  var {:pointer} Tmp_1634: int;
  var {:pointer} Tmp_1635: int;
  var {:pointer} Tmp_1636: int;
  var {:pointer} Context_17: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 1037} Tmp_1589 := __HAVOC_malloc(4);
    call {:si_unique_call 1038} Tmp_1598 := __HAVOC_malloc(4);
    Context_17 := actual_Context_17;
    call {:si_unique_call 1039} Tmp_1590 := __HAVOC_malloc(64);
    call {:si_unique_call 1040} Tmp_1595 := __HAVOC_malloc(4);
    call {:si_unique_call 1041} Tmp_1602 := __HAVOC_malloc(64);
    call {:si_unique_call 1042} Tmp_1607 := __HAVOC_malloc(64);
    call {:si_unique_call 1043} Tmp_1615 := __HAVOC_malloc(64);
    call {:si_unique_call 1044} Tmp_1622 := __HAVOC_malloc(64);
    call {:si_unique_call 1045} Tmp_1623 := __HAVOC_malloc(64);
    call {:si_unique_call 1046} Tmp_1624 := __HAVOC_malloc(64);
    call {:si_unique_call 1047} Tmp_1627 := __HAVOC_malloc(64);
    call {:si_unique_call 1048} Tmp_1632 := __HAVOC_malloc(64);
    call {:si_unique_call 1049} Tmp_1636 := __HAVOC_malloc(64);
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1611;
    assume {:nonnull} Tmp_1611 != 0;
    assume Tmp_1611 > 0;
    havoc pdoExtension_14;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1606;
    assume {:nonnull} Tmp_1606 != 0;
    assume Tmp_1606 > 0;
    havoc Tmp_1624;
    Tmp_1613 := Tmp_1624;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1625;
    assume {:nonnull} Tmp_1625 != 0;
    assume Tmp_1625 > 0;
    havoc Tmp_1618;
    call {:si_unique_call 1050} Sbp2AddLog(pdoExtension_14, 128, -1016831415, Tmp_1618, Tmp_1613);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    assume {:nonnull} Tmp_1598 != 0;
    assume Tmp_1598 > 0;
    Tmp_1608 := Tmp_1598;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc vslice_dummy_var_121;
    havoc vslice_dummy_var_122;
    call {:si_unique_call 1051} Tmp_1588 := Rbc_Scsi_Conversion(vslice_dummy_var_121, Tmp_1608, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_14), 0, vslice_dummy_var_122, 0);
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L14;

  L14:
    Tmp_1588 := 259;
    goto L1;

  anon48_Then:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1591;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1635;
    assume {:nonnull} Tmp_1591 != 0;
    assume Tmp_1591 > 0;
    assume {:nonnull} Tmp_1635 != 0;
    assume Tmp_1635 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1595;
    assume {:nonnull} Tmp_1595 != 0;
    assume Tmp_1595 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1595], 1) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1631;
    assume {:nonnull} Tmp_1631 != 0;
    assume Tmp_1631 > 0;
    havoc Tmp_1622;
    assume {:nonnull} Tmp_1622 != 0;
    assume Tmp_1622 > 0;
    Tmp_1619 := Mem_T.INT4[Tmp_1622];
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1601;
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc Tmp_1610;
    havoc Tmp_1604;
    havoc Tmp_1593;
    call {:si_unique_call 1052} WPP_SF_DD(Tmp_1593, 41, Tmp_1604, Tmp_1610, Tmp_1619);
    goto L25;

  L25:
    Tmp_1588 := -1073741823;
    goto L1;

  anon43_Then:
    goto L25;

  anon50_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1595], 1) == 0;
    goto L25;

  anon42_Then:
    goto L25;

  anon49_Then:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1617;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    havoc Tmp_1627;
    Tmp_1594 := Tmp_1627;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1609;
    assume {:nonnull} Tmp_1609 != 0;
    assume Tmp_1609 > 0;
    havoc Tmp_1626;
    call {:si_unique_call 1053} Sbp2AddLog(pdoExtension_14, 128, -1016831409, Tmp_1626, Tmp_1594);
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1630;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    havoc Tmp_1636;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.INT4[Tmp_1636] != 21;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.INT4[Tmp_1636] != 27;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.INT4[Tmp_1636] == 173;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1616;
    assume {:nonnull} Tmp_1616 != 0;
    assume Tmp_1616 > 0;
    havoc Tmp_1607;
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.INT4[Tmp_1607 + 2 * 4] == 87;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1633;
    assume {:nonnull} Tmp_1633 != 0;
    assume Tmp_1633 > 0;
    havoc Tmp_1623;
    assume {:nonnull} Tmp_1623 != 0;
    assume Tmp_1623 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.INT4[Tmp_1623 + 3 * 4] == 68;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1614;
    assume {:nonnull} Tmp_1614 != 0;
    assume Tmp_1614 > 0;
    havoc Tmp_1602;
    assume {:nonnull} Tmp_1602 != 0;
    assume Tmp_1602 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.INT4[Tmp_1602 + 4 * 4] == 67;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1620;
    assume {:nonnull} Tmp_1620 != 0;
    assume Tmp_1620 > 0;
    havoc Tmp_1632;
    assume {:nonnull} Tmp_1632 != 0;
    assume Tmp_1632 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.INT4[Tmp_1632 + 5 * 4] == 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1592;
    assume {:nonnull} Tmp_1592 != 0;
    assume Tmp_1592 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1592)], 1024) != 0;
    Tmp_1588 := -1073741823;
    goto L1;

  anon60_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1592)], 1024) == 0;
    goto L40;

  L40:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1599;
    assume {:nonnull} Tmp_1599 != 0;
    assume Tmp_1599 > 0;
    Tmp_1621 := BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1599)], 128);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Tmp_1621 == 0;
    bSetCacheHack := 0;
    goto L121;

  L121:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    assume {:nonnull} Tmp_1589 != 0;
    assume Tmp_1589 > 0;
    Tmp_1605 := Tmp_1589;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc vslice_dummy_var_123;
    havoc vslice_dummy_var_124;
    call {:si_unique_call 1054} Tmp_1588 := Rbc_Scsi_Conversion(vslice_dummy_var_123, Tmp_1605, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_14), 1, vslice_dummy_var_124, bSetCacheHack);
    goto L1;

  anon53_Then:
    assume {:partition} Tmp_1621 != 0;
    bSetCacheHack := 1;
    goto L121;

  anon44_Then:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1634;
    assume {:nonnull} Tmp_1634 != 0;
    assume Tmp_1634 > 0;
    havoc Tmp_1590;
    assume {:nonnull} Tmp_1590 != 0;
    assume Tmp_1590 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.INT4[Tmp_1590] == 90;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1629;
    assume {:nonnull} Tmp_1629 != 0;
    assume Tmp_1629 > 0;
    havoc Tmp_1615;
    cdb_1 := Tmp_1615;
    assume {:nonnull} cdb_1 != 0;
    assume cdb_1 > 0;
    goto L14;

  anon54_Then:
    assume {:partition} Mem_T.INT4[Tmp_1590] != 90;
    goto L14;

  anon45_Then:
    goto L14;

  anon59_Then:
    assume {:partition} Mem_T.INT4[Tmp_1632 + 5 * 4] != 0;
    goto L40;

  anon58_Then:
    assume {:partition} Mem_T.INT4[Tmp_1602 + 4 * 4] != 67;
    goto L40;

  anon57_Then:
    assume {:partition} Mem_T.INT4[Tmp_1623 + 3 * 4] != 68;
    goto L40;

  anon56_Then:
    assume {:partition} Mem_T.INT4[Tmp_1607 + 2 * 4] != 87;
    goto L40;

  anon46_Then:
    assume {:partition} Mem_T.INT4[Tmp_1636] != 173;
    goto L40;

  anon47_Then:
    assume {:partition} Mem_T.INT4[Tmp_1636] == 27;
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1628;
    assume {:nonnull} Tmp_1628 != 0;
    assume Tmp_1628 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_1612 := 3;
    goto L52;

  L52:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1596;
    assume {:nonnull} Tmp_1596 != 0;
    assume Tmp_1596 > 0;
    goto L40;

  anon55_Then:
    assume {:nonnull} Context_17 != 0;
    assume Context_17 > 0;
    havoc Tmp_1597;
    assume {:nonnull} Tmp_1597 != 0;
    assume Tmp_1597 > 0;
    havoc Tmp_1612;
    goto L52;

  anon51_Then:
    assume {:partition} Mem_T.INT4[Tmp_1636] == 21;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1600;
    assume {:nonnull} Tmp_1600 != 0;
    assume Tmp_1600 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1600)], 512) != 0;
    Tmp_1588 := -1073741823;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1600)], 512) == 0;
    goto L40;
}



procedure {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_34: int, actual_Irp_21: int) returns (Tmp_1707: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_34: int, actual_Irp_21: int) returns (Tmp_1707: int)
{
  var {:pointer} Tmp_1708: int;
  var {:pointer} irpStack_14: int;
  var {:pointer} Tmp_1709: int;
  var {:pointer} Tmp_1710: int;
  var {:pointer} Tmp_1711: int;
  var {:scalar} Tmp_1712: int;
  var {:pointer} pdoExtension_15: int;
  var {:pointer} Tmp_1713: int;
  var {:pointer} Tmp_1714: int;
  var {:pointer} Tmp_1715: int;
  var {:scalar} Tmp_1716: int;
  var {:scalar} Tmp_1717: int;
  var {:pointer} Tmp_1718: int;
  var {:pointer} Tmp_1719: int;
  var {:scalar} Tmp_1720: int;
  var {:scalar} orbLock_8: int;
  var {:scalar} Tmp_1721: int;
  var {:pointer} Tmp_1722: int;
  var {:pointer} Tmp_1723: int;
  var {:pointer} Tmp_1724: int;
  var {:pointer} Tmp_1725: int;
  var {:pointer} Tmp_1726: int;
  var {:scalar} Tmp_1727: int;
  var {:pointer} Tmp_1728: int;
  var {:scalar} Tmp_1729: int;
  var {:scalar} Tmp_1730: int;
  var {:pointer} sdv_561: int;
  var {:pointer} Tmp_1731: int;
  var {:pointer} Tmp_1732: int;
  var {:pointer} Tmp_1733: int;
  var {:pointer} Tmp_1734: int;
  var {:scalar} cIrql_9: int;
  var {:scalar} Tmp_1735: int;
  var {:scalar} Tmp_1736: int;
  var {:pointer} srb_5: int;
  var {:scalar} status_47: int;
  var {:pointer} tIrp: int;
  var {:pointer} Tmp_1737: int;
  var {:scalar} Tmp_1738: int;
  var {:pointer} Tmp_1739: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 1055} orbLock_8 := __HAVOC_malloc(12);
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_21 := actual_Irp_21;
    call {:si_unique_call 1056} Tmp_1708 := __HAVOC_malloc(64);
    call {:si_unique_call 1057} Tmp_1709 := __HAVOC_malloc(4);
    call {:si_unique_call 1058} Tmp_1710 := __HAVOC_malloc(4);
    call {:si_unique_call 1059} Tmp_1711 := __HAVOC_malloc(4);
    call {:si_unique_call 1060} Tmp_1713 := __HAVOC_malloc(4);
    call {:si_unique_call 1061} Tmp_1722 := __HAVOC_malloc(4);
    call {:si_unique_call 1062} Tmp_1724 := __HAVOC_malloc(4);
    call {:si_unique_call 1063} Tmp_1725 := __HAVOC_malloc(4);
    call {:si_unique_call 1064} Tmp_1728 := __HAVOC_malloc(4);
    call {:si_unique_call 1065} Tmp_1733 := __HAVOC_malloc(4);
    call {:si_unique_call 1066} irpStack_14 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    havoc pdoExtension_15;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    call {:si_unique_call 1067} status_47 := sdv_IoAcquireRemoveLock(0, 0);
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    havoc srb_5;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} status_47 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1721;
    call {:si_unique_call 1068} Sbp2AddLog(pdoExtension_15, 64, -748457111, Irp_21, Tmp_1721);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    havoc Tmp_1725;
    assume {:nonnull} Tmp_1725 != 0;
    assume Tmp_1725 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1725], 512) != 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    havoc Tmp_1723;
    havoc Tmp_1727;
    call {:si_unique_call 1069} WPP_SF_q(Tmp_1727, 16, Tmp_1723, pdoExtension_15);
    goto L52;

  L52:
    call {:si_unique_call 1070} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1071} sdv_KeAcquireSpinLock(0, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1072} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1073} sdv_561 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_15), 0);
    tIrp := sdv_561;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} tIrp != 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_1713;
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1713], 512) != 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_1719;
    havoc Tmp_1729;
    call {:si_unique_call 1074} WPP_SF_qq(Tmp_1729, 17, Tmp_1719, pdoExtension_15, tIrp);
    goto L77;

  L77:
    call {:si_unique_call 1075} Sbp2StartPacket#1(DeviceObject_34, tIrp, 0);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    call {:si_unique_call 1076} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1077} sdv_KeRaiseIrql(2, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_125;
    call {:si_unique_call 1078} Sbp2StartNextPacketByKey#1(DeviceObject_34, vslice_dummy_var_125);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1079} sdv_KeLowerIrql(cIrql_9);
    goto L87;

  L87:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    status_47 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  L103:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1080} vslice_dummy_var_170 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    call {:si_unique_call 1081} sdv_IoCompleteRequest(0, 0);
    Tmp_1707 := status_47;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon139_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    call {:si_unique_call 1082} AcquireOrbListLock(pdoExtension_15, orbLock_8, 0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_126;
    call {:si_unique_call 1083} vslice_dummy_var_166 := FreeAsyncRequestContext(pdoExtension_15, vslice_dummy_var_126);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto L116;

  L116:
    call {:si_unique_call 1084} ReleaseOrbListLock(pdoExtension_15, orbLock_8, 0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    call {:si_unique_call 1085} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1086} sdv_KeAcquireSpinLock(0, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1087} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L125;

  L125:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    call {:si_unique_call 1088} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    call {:si_unique_call 1089} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1090} sdv_KeRaiseIrql(2, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_127;
    call {:si_unique_call 1091} Sbp2StartNextPacketByKey#1(DeviceObject_34, vslice_dummy_var_127);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1092} sdv_KeLowerIrql(cIrql_9);
    goto L138;

  L138:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1093} vslice_dummy_var_167 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    Tmp_1707 := 0;
    goto L1;

  anon196_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L138;

  anon142_Then:
    goto L125;

  anon141_Then:
    goto L116;

  anon140_Then:
    status_47 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon195_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon136_Then:
    goto L87;

  anon194_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon138_Then:
    goto L77;

  anon193_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1713], 512) == 0;
    goto L77;

  anon137_Then:
    goto L77;

  anon192_Then:
    assume {:partition} tIrp == 0;
    goto L72;

  anon135_Then:
    goto L52;

  anon191_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1725], 512) == 0;
    goto L52;

  anon134_Then:
    goto L52;

  anon169_Then:
    status_47 := -1073741637;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_1724;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1724], 1) != 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1736;
    havoc Tmp_1739;
    havoc Tmp_1735;
    call {:si_unique_call 1094} WPP_SF_qD(Tmp_1735, 19, Tmp_1739, pdoExtension_15, Tmp_1736);
    goto L103;

  anon168_Then:
    goto L103;

  anon198_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1724], 1) == 0;
    goto L103;

  anon197_Then:
    goto L103;

  anon170_Then:
    call {:si_unique_call 1095} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1096} sdv_KeAcquireSpinLock(0, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    call {:si_unique_call 1097} sdv_KeReleaseSpinLock(0, cIrql_9);
    status_47 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon144_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1098} sdv_KeReleaseSpinLock(0, cIrql_9);
    status_47 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_1711;
    assume {:nonnull} Tmp_1711 != 0;
    assume Tmp_1711 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1711], 512) != 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_1732;
    havoc Tmp_1717;
    call {:si_unique_call 1099} WPP_SF_q(Tmp_1717, 15, Tmp_1732, pdoExtension_15);
    goto L103;

  anon145_Then:
    goto L103;

  anon190_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1711], 512) == 0;
    goto L103;

  anon189_Then:
    goto L103;

  anon171_Then:
    goto L195;

  L195:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    havoc Tmp_1733;
    assume {:nonnull} Tmp_1733 != 0;
    assume Tmp_1733 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1733], 1) != 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    havoc Tmp_1726;
    havoc Tmp_1712;
    call {:si_unique_call 1100} WPP_SF_q(Tmp_1712, 12, Tmp_1726, pdoExtension_15);
    goto L196;

  L196:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    havoc Tmp_1709;
    assume {:nonnull} Tmp_1709 != 0;
    assume Tmp_1709 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1709], 1) != 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    havoc Tmp_1737;
    havoc Tmp_1716;
    call {:si_unique_call 1101} WPP_SF_q(Tmp_1716, 13, Tmp_1737, pdoExtension_15);
    goto L214;

  L214:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_47 := 0;
    goto L103;

  anon153_Then:
    goto L214;

  anon186_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1709], 1) == 0;
    goto L214;

  anon152_Then:
    goto L214;

  anon150_Then:
    call {:si_unique_call 1102} CleanupOrbList#1(pdoExtension_15, -1073741248);
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_47 := 0;
    goto L103;

  anon185_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon151_Then:
    goto L196;

  anon184_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1733], 1) == 0;
    goto L196;

  anon149_Then:
    goto L196;

  anon172_Then:
    call {:si_unique_call 1103} status_47 := Sbp2Issue1394BusReset#1(pdoExtension_15);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} yogi_error != 1;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_1728;
    assume {:nonnull} Tmp_1728 != 0;
    assume Tmp_1728 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1728], 1) != 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    havoc Tmp_1715;
    havoc Tmp_1730;
    call {:si_unique_call 1104} WPP_SF_q(Tmp_1730, 14, Tmp_1715, pdoExtension_15);
    goto L183;

  L183:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} status_47 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon147_Then:
    assume {:partition} 0 > status_47;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon148_Then:
    goto L183;

  anon188_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1728], 1) == 0;
    goto L183;

  anon146_Then:
    goto L183;

  anon187_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon173_Then:
    goto L195;

  anon174_Then:
    call {:si_unique_call 1105} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1106} sdv_KeAcquireSpinLock(0, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1107} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_47 := 0;
    goto L103;

  anon175_Then:
    call {:si_unique_call 1108} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1109} sdv_KeAcquireSpinLock(0, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    status_47 := 17;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L235;

  L235:
    call {:si_unique_call 1110} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L103;

  anon154_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_47 := 0;
    goto L235;

  anon133_Then:
    call {:si_unique_call 1111} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1112} sdv_KeAcquireSpinLock(0, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    call {:si_unique_call 1113} sdv_KeReleaseSpinLock(0, cIrql_9);
    status_47 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    havoc Tmp_1710;
    assume {:nonnull} Tmp_1710 != 0;
    assume Tmp_1710 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1710], 1) != 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    havoc Tmp_1731;
    havoc Tmp_1738;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_128;
    call {:si_unique_call 1114} WPP_SF_qDD(Tmp_1738, 10, Tmp_1731, pdoExtension_15, vslice_dummy_var_128, status_47);
    goto L254;

  L254:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1115} vslice_dummy_var_168 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    call {:si_unique_call 1116} sdv_IoCompleteRequest(0, 0);
    Tmp_1707 := status_47;
    goto L1;

  anon156_Then:
    goto L254;

  anon178_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1710], 1) == 0;
    goto L254;

  anon177_Then:
    goto L254;

  anon155_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc Tmp_1734;
    assume {:nonnull} Tmp_1734 != 0;
    assume Tmp_1734 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1734)], 256) != 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1708;
    assume {:nonnull} Tmp_1708 != 0;
    assume Tmp_1708 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} Mem_T.INT4[Tmp_1708] == 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    goto L273;

  L273:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L269;

  L269:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    call {:si_unique_call 1117} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    havoc Tmp_1722;
    assume {:nonnull} Tmp_1722 != 0;
    assume Tmp_1722 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1722], 1) != 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    havoc Tmp_1714;
    havoc Tmp_1720;
    call {:si_unique_call 1118} WPP_SF_qq(Tmp_1720, 11, Tmp_1714, pdoExtension_15, Irp_21);
    goto L285;

  L285:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 1119} vslice_dummy_var_169 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    call {:si_unique_call 1120} sdv_IoCompleteRequest(0, 0);
    Tmp_1707 := -1073741823;
    goto L1;

  anon162_Then:
    goto L285;

  anon181_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1722], 1) == 0;
    goto L285;

  anon161_Then:
    goto L285;

  anon160_Then:
    goto L274;

  L274:
    call {:si_unique_call 1121} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    goto L308;

  L308:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    call {:si_unique_call 1122} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 1123} Tmp_1718 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    Mem_T.INT4[Tmp_1718] := cIrql_9;
    call {:si_unique_call 1124} sdv_KeRaiseIrql(2, Tmp_1718);
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    cIrql_9 := Mem_T.INT4[Tmp_1718];
    call {:si_unique_call 1125} Sbp2StartIo#1(DeviceObject_34, Irp_21);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1126} sdv_KeLowerIrql(cIrql_9);
    goto L324;

  L324:
    Tmp_1707 := 259;
    goto L1;

  anon182_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    call {:si_unique_call 1127} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 1128} Sbp2DeferPendingRequest(pdoExtension_15, Irp_21);
    call {:si_unique_call 1129} Sbp2SetDeferLoginTimer(pdoExtension_15);
    goto L324;

  anon165_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    call {:si_unique_call 1130} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 1131} Sbp2DeferPendingRequest(pdoExtension_15, Irp_21);
    goto L324;

  anon166_Then:
    goto L308;

  anon164_Then:
    goto L302;

  L302:
    call {:si_unique_call 1132} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    call {:si_unique_call 1133} Sbp2StartPacket#1(DeviceObject_34, Irp_21, QueueSortKey__SCSI_REQUEST_BLOCK(srb_5));
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} yogi_error != 1;
    goto L324;

  anon183_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon163_Then:
    goto L302;

  anon157_Then:
    goto L274;

  anon158_Then:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L273;

  anon159_Then:
    goto L269;

  anon180_Then:
    assume {:partition} Mem_T.INT4[Tmp_1708] != 0;
    goto L269;

  anon179_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1734)], 256) == 0;
    goto L269;

  anon176_Then:
    assume {:partition} 0 > status_47;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    call {:si_unique_call 1134} sdv_IoCompleteRequest(0, 0);
    Tmp_1707 := status_47;
    goto L1;
}



procedure {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int)
{
  var {:scalar} i_4: int;
  var {:pointer} Tmp_1740: int;
  var {:scalar} size: int;
  var {:pointer} Tmp_1744: int;
  var {:pointer} Tmp_1745: int;
  var {:pointer} Tmp_1746: int;
  var {:pointer} Tmp_1747: int;
  var {:pointer} Tmp_1748: int;
  var {:pointer} Tmp_1749: int;
  var {:pointer} Tmp_1750: int;
  var {:pointer} Tmp_1751: int;
  var {:pointer} Tmp_1752: int;
  var {:pointer} Tmp_1753: int;
  var {:scalar} sdv_562: int;
  var {:scalar} Tmp_1754: int;
  var {:pointer} Tmp_1755: int;
  var {:pointer} Tmp_1756: int;
  var {:pointer} Tmp_1757: int;
  var {:pointer} Tmp_1758: int;
  var {:pointer} Tmp_1759: int;
  var {:scalar} sdv_563: int;
  var {:pointer} Tmp_1761: int;
  var {:pointer} Tmp_1763: int;
  var {:scalar} sdv_564: int;
  var {:scalar} Tmp_1765: int;
  var {:pointer} Tmp_1766: int;
  var {:pointer} Tmp_1767: int;
  var {:pointer} Tmp_1768: int;
  var {:scalar} sdv_565: int;
  var {:scalar} sdv_566: int;
  var {:scalar} sdv_567: int;
  var {:pointer} Tmp_1771: int;
  var {:pointer} Tmp_1772: int;
  var {:pointer} Tmp_1773: int;
  var {:pointer} Tmp_1774: int;
  var {:pointer} Tmp_1775: int;
  var {:scalar} Tmp_1777: int;
  var {:pointer} Tmp_1778: int;
  var {:pointer} Tmp_1780: int;
  var {:scalar} sdv_568: int;
  var {:pointer} Tmp_1781: int;
  var {:pointer} Tmp_1782: int;
  var {:pointer} Tmp_1783: int;
  var {:pointer} Tmp_1784: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} Tmp_1786: int;
  var {:pointer} Tmp_1787: int;
  var {:pointer} Tmp_1788: int;
  var {:pointer} Tmp_1789: int;
  var {:pointer} DeviceExtension_9: int;
  var {:pointer} CallbackContext_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_171: int;

  anon0:
    call {:si_unique_call 1135} vslice_dummy_var_171 := __HAVOC_malloc(4);
    DeviceExtension_9 := actual_DeviceExtension_9;
    CallbackContext_1 := actual_CallbackContext_1;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1740;
    assume {:nonnull} Tmp_1740 != 0;
    assume Tmp_1740 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1774;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1781;
    assume {:nonnull} Tmp_1781 != 0;
    assume Tmp_1781 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1749;
    assume {:nonnull} Tmp_1749 != 0;
    assume Tmp_1749 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L22;

  L22:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1771;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1755;
    assume {:nonnull} Tmp_1755 != 0;
    assume Tmp_1755 > 0;
    assume {:nonnull} Tmp_1771 != 0;
    assume Tmp_1771 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1787;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1787 != 0;
    assume Tmp_1787 > 0;
    goto L24;

  L24:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1759;
    assume {:nonnull} Tmp_1759 != 0;
    assume Tmp_1759 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1783;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1783 != 0;
    assume Tmp_1783 > 0;
    call {:si_unique_call 1136} boogieTmp := corral_nondet();
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1763;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1789;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    assume {:nonnull} Tmp_1789 != 0;
    assume Tmp_1789 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1788;
    assume {:nonnull} Tmp_1788 != 0;
    assume Tmp_1788 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1780;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1744;
    assume {:nonnull} Tmp_1744 != 0;
    assume Tmp_1744 > 0;
    assume {:nonnull} Tmp_1780 != 0;
    assume Tmp_1780 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1753;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1761;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1753 != 0;
    assume Tmp_1753 > 0;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    goto L31;

  L31:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1756;
    assume {:nonnull} Tmp_1756 != 0;
    assume Tmp_1756 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1777 := 16;
    goto L34;

  L34:
    size := Tmp_1777;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 1137} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 1138} sdv_RtlCopyMemory(0, 0, size);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1751;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    return;

  anon26_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1752;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    havoc Tmp_1777;
    goto L34;

  anon25_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1778;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1750;
    assume {:nonnull} Tmp_1750 != 0;
    assume Tmp_1750 > 0;
    assume {:nonnull} Tmp_1778 != 0;
    assume Tmp_1778 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1766;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1768;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1766 != 0;
    assume Tmp_1766 > 0;
    assume {:nonnull} Tmp_1768 != 0;
    assume Tmp_1768 > 0;
    goto L31;

  anon20_Then:
    goto L20;

  L20:
    i_4 := 0;
    goto L46;

  L46:
    call {:si_unique_call 1139} i_4, Tmp_1754, Tmp_1765, Tmp_1767, Tmp_1786 := Sbp2InitializeOrb_loop_L46(i_4, Tmp_1754, Tmp_1765, Tmp_1767, sdv_566, sdv_567, Tmp_1786, CallbackContext_1);
    goto L46_last;

  L46_last:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1754 := i_4;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1786;
    assume {:nonnull} Tmp_1786 != 0;
    assume Tmp_1786 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1765 := i_4;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1767;
    assume {:nonnull} Tmp_1767 != 0;
    assume Tmp_1767 > 0;
    i_4 := i_4 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L22;

  anon24_Then:
    goto L20;

  anon19_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1775;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1747;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1746;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1772 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1746 != 0;
    assume Tmp_1746 > 0;
    assume {:nonnull} Tmp_1772 != 0;
    assume Tmp_1772 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1748;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1757 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1748 != 0;
    assume Tmp_1748 > 0;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    goto L63;

  L63:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1782;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1785;
    assume {:nonnull} Tmp_1782 != 0;
    assume Tmp_1782 > 0;
    assume {:nonnull} Tmp_1785 != 0;
    assume Tmp_1785 > 0;
    goto L24;

  anon22_Then:
    goto L59;

  L59:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1773;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1784;
    assume {:nonnull} Tmp_1784 != 0;
    assume Tmp_1784 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1745;
    assume {:nonnull} Tmp_1745 != 0;
    assume Tmp_1745 > 0;
    goto L63;

  anon27_Then:
    goto L59;

  anon23_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1758;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    goto L24;
}



procedure {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_35: int, actual_Irp_22: int) returns (Tmp_1790: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1790 == -1073741789 || Tmp_1790 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_35: int, actual_Irp_22: int) returns (Tmp_1790: int)
{
  var {:pointer} irpStack_15: int;
  var {:pointer} pdoExtension_16: int;
  var {:pointer} Tmp_1791: int;
  var {:pointer} ioCapabilities: int;
  var {:scalar} status_48: int;
  var {:pointer} DeviceObject_35: int;
  var {:pointer} Irp_22: int;

  anon0:
    DeviceObject_35 := actual_DeviceObject_35;
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 1140} irpStack_15 := sdv_IoGetCurrentIrpStackLocation(Irp_22);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    havoc ioCapabilities;
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    havoc pdoExtension_16;
    call {:si_unique_call 1141} sdv_do_paged_code_check();
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    status_48 := -1073741789;
    goto L21;

  L21:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    call {:si_unique_call 1142} sdv_IoCompleteRequest(0, 0);
    Tmp_1790 := status_48;
    return;

  anon5_Then:
    call {:si_unique_call 1143} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1791;
    assume {:nonnull} Tmp_1791 != 0;
    assume Tmp_1791 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto L30;

  L30:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    status_48 := 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L21;

  anon6_Then:
    goto L30;
}



procedure {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1793: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1793: int)
{
  var {:scalar} Tmp_1794: int;
  var {:scalar} waitValue_3: int;
  var {:pointer} cdb_2: int;
  var {:pointer} Tmp_1795: int;
  var {:pointer} modeMdl: int;
  var {:pointer} Tmp_1796: int;
  var {:pointer} Tmp_1797: int;
  var {:pointer} Tmp_1798: int;
  var {:pointer} Tmp_1799: int;
  var {:scalar} Tmp_1800: int;
  var {:pointer} Tmp_1801: int;
  var {:pointer} Tmp_1802: int;
  var {:scalar} Tmp_1803: int;
  var {:scalar} Tmp_1804: int;
  var {:scalar} Tmp_1805: int;
  var {:pointer} Tmp_1806: int;
  var {:pointer} Tmp_1807: int;
  var {:pointer} Tmp_1808: int;
  var {:pointer} sdv_573: int;
  var {:scalar} Tmp_1809: int;
  var {:pointer} irp_7: int;
  var {:pointer} senseInfoBuffer: int;
  var {:pointer} Tmp_1810: int;
  var {:pointer} Tmp_1811: int;
  var {:pointer} Tmp_1812: int;
  var {:pointer} Tmp_1813: int;
  var {:pointer} srb_6: int;
  var {:scalar} Tmp_1814: int;
  var {:pointer} Tmp_1815: int;
  var {:pointer} Tmp_1816: int;
  var {:scalar} event_1: int;
  var {:scalar} Tmp_1817: int;
  var {:scalar} Tmp_1818: int;
  var {:scalar} Tmp_1819: int;
  var {:scalar} Tmp_1820: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_1821: int;
  var {:pointer} Tmp_1822: int;
  var {:pointer} irpStack_16: int;
  var {:pointer} Tmp_1823: int;
  var {:pointer} Tmp_1824: int;
  var {:pointer} inquiryMdl: int;
  var {:pointer} sdv_576: int;
  var {:pointer} context_1: int;
  var {:scalar} Tmp_1825: int;
  var {:pointer} sdv_577: int;
  var {:pointer} Tmp_1826: int;
  var {:scalar} Tmp_1827: int;
  var {:scalar} Tmp_1828: int;
  var {:scalar} Tmp_1829: int;
  var {:scalar} cIrql_10: int;
  var {:pointer} Tmp_1830: int;
  var {:scalar} Tmp_1831: int;
  var {:scalar} status_49: int;
  var {:scalar} Tmp_1832: int;
  var {:scalar} retryCount: int;
  var {:scalar} Tmp_1833: int;
  var {:pointer} Tmp_1834: int;
  var {:pointer} DeviceExtension_10: int;
  var {:scalar} Scsiop: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 1144} waitValue_3 := __HAVOC_malloc(20);
    call {:si_unique_call 1145} event_1 := __HAVOC_malloc(156);
    DeviceExtension_10 := actual_DeviceExtension_10;
    Scsiop := actual_Scsiop;
    call {:si_unique_call 1146} Tmp_1796 := __HAVOC_malloc(4);
    call {:si_unique_call 1147} Tmp_1802 := __HAVOC_malloc(4);
    call {:si_unique_call 1148} Tmp_1806 := __HAVOC_malloc(4);
    call {:si_unique_call 1149} Tmp_1810 := __HAVOC_malloc(4);
    call {:si_unique_call 1150} Tmp_1812 := __HAVOC_malloc(4);
    call {:si_unique_call 1151} Tmp_1813 := __HAVOC_malloc(4);
    call {:si_unique_call 1152} Tmp_1815 := __HAVOC_malloc(4);
    call {:si_unique_call 1153} Tmp_1824 := __HAVOC_malloc(4);
    call {:si_unique_call 1154} Tmp_1826 := __HAVOC_malloc(4);
    call {:si_unique_call 1155} Tmp_1834 := __HAVOC_malloc(4);
    status_49 := -1073741670;
    retryCount := 0;
    context_1 := 0;
    inquiryMdl := 0;
    modeMdl := 0;
    call {:si_unique_call 1156} Tmp_1830 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    Mem_T.INT4[Tmp_1830] := cIrql_10;
    call {:si_unique_call 1157} sdv_KeAcquireSpinLock(0, Tmp_1830);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    cIrql_10 := Mem_T.INT4[Tmp_1830];
    call {:si_unique_call 1158} sdv_576 := sdv_ExAllocateFromNPagedLookasideList(0);
    context_1 := sdv_576;
    call {:si_unique_call 1159} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} context_1 == 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    havoc Tmp_1796;
    assume {:nonnull} Tmp_1796 != 0;
    assume Tmp_1796 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1796], 1) != 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    havoc Tmp_1801;
    havoc Tmp_1800;
    call {:si_unique_call 1160} WPP_SF_q(Tmp_1800, 51, Tmp_1801, DeviceExtension_10);
    goto L320;

  L320:
    Tmp_1793 := status_49;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon152_Then:
    goto L320;

  anon177_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1796], 1) == 0;
    goto L320;

  anon151_Then:
    goto L320;

  anon119_Then:
    assume {:partition} context_1 != 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 1161} sdv_577 := ExAllocatePoolWithTag(516, 18, 846226035);
    senseInfoBuffer := sdv_577;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} senseInfoBuffer == 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    havoc Tmp_1806;
    assume {:nonnull} Tmp_1806 != 0;
    assume Tmp_1806 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1806], 1) != 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    havoc Tmp_1811;
    havoc Tmp_1831;
    call {:si_unique_call 1162} WPP_SF_q(Tmp_1831, 52, Tmp_1811, DeviceExtension_10);
    goto L311;

  L311:
    Tmp_1793 := status_49;
    goto L1;

  anon150_Then:
    goto L311;

  anon176_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1806], 1) == 0;
    goto L311;

  anon149_Then:
    goto L311;

  anon154_Then:
    assume {:partition} senseInfoBuffer != 0;
    call {:si_unique_call 1163} sdv_573 := ExAllocatePoolWithTag(516, 64, 846226035);
    srb_6 := sdv_573;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} srb_6 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1798;
    assume {:nonnull} Tmp_1798 != 0;
    assume Tmp_1798 > 0;
    havoc vslice_dummy_var_129;
    call {:si_unique_call 1164} irp_7 := IoAllocateIrp(vslice_dummy_var_129, 0);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} irp_7 != 0;
    goto L63;

  L63:
    call {:si_unique_call 1165} Tmp_1794, cdb_2, modeMdl, Tmp_1797, Tmp_1799, Tmp_1802, Tmp_1803, Tmp_1804, Tmp_1805, Tmp_1807, Tmp_1808, Tmp_1809, Tmp_1810, Tmp_1812, Tmp_1814, Tmp_1817, Tmp_1818, i_5, Tmp_1821, Tmp_1822, irpStack_16, Tmp_1824, inquiryMdl, Tmp_1826, Tmp_1828, status_49, Tmp_1832, retryCount, Tmp_1833, vslice_dummy_var_172, vslice_dummy_var_173 := Sbp2IssueInternalCommand_loop_L63(Tmp_1794, waitValue_3, cdb_2, modeMdl, Tmp_1797, Tmp_1799, Tmp_1802, Tmp_1803, Tmp_1804, Tmp_1805, Tmp_1807, Tmp_1808, Tmp_1809, irp_7, senseInfoBuffer, Tmp_1810, Tmp_1812, srb_6, Tmp_1814, event_1, Tmp_1817, Tmp_1818, i_5, Tmp_1821, Tmp_1822, irpStack_16, Tmp_1824, inquiryMdl, context_1, Tmp_1826, Tmp_1828, status_49, Tmp_1832, retryCount, Tmp_1833, DeviceExtension_10, Scsiop, vslice_dummy_var_172, vslice_dummy_var_173);
    goto L63_last;

  L63_last:
    call {:si_unique_call 1202} irpStack_16 := sdv_IoGetNextIrpStackLocation(irp_7);
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    call {:si_unique_call 1203} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    cdb_2 := Cdb__SCSI_REQUEST_BLOCK(srb_6);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} Scsiop != 18;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} Scsiop == 26;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto L84;

  L84:
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 1166} KeInitializeEvent(Event__REQUEST_CONTEXT(context_1), 0, 0);
    call {:si_unique_call 1167} sdv_IoSetCompletionRoutine(irp_7, li2bplFunctionConstant523, context_1, 1, 1, 1);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc Tmp_1802;
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1802], 1) != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    Tmp_1833 := Scsiop;
    havoc Tmp_1821;
    havoc Tmp_1794;
    call {:si_unique_call 1168} WPP_SF_qDq(Tmp_1794, 55, Tmp_1821, DeviceExtension_10, Tmp_1833, irp_7);
    goto L157;

  L157:
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc vslice_dummy_var_130;
    call {:si_unique_call 1169} status_49 := sdv_IoCallDriver(vslice_dummy_var_130, irp_7);
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    goto L171;

  L171:
    call {:si_unique_call 1170} vslice_dummy_var_172 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1832;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} Tmp_1832 != 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc Tmp_1824;
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1824], 1) != 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1804;
    Tmp_1805 := Scsiop;
    havoc Tmp_1822;
    havoc Tmp_1818;
    call {:si_unique_call 1171} WPP_SF_qDD(Tmp_1818, 57, Tmp_1822, DeviceExtension_10, Tmp_1805, Tmp_1804);
    goto L181;

  L181:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1828;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} Tmp_1828 == 18;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_1826;
    assume {:nonnull} Tmp_1826 != 0;
    assume Tmp_1826 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1826], 1) != 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    havoc Tmp_1808;
    havoc Tmp_1817;
    call {:si_unique_call 1172} WPP_SF_q(Tmp_1817, 58, Tmp_1808, DeviceExtension_10);
    goto L197;

  L197:
    status_49 := 0;
    goto L205;

  L205:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} status_49 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} 5 > retryCount;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_1812;
    assume {:nonnull} Tmp_1812 != 0;
    assume Tmp_1812 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1812], 1) != 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_1797;
    havoc Tmp_1814;
    call {:si_unique_call 1173} WPP_SF_q(Tmp_1814, 60, Tmp_1797, DeviceExtension_10);
    goto L213;

  L213:
    i_5 := 0;
    goto L221;

  L221:
    call {:si_unique_call 1174} i_5, vslice_dummy_var_173 := Sbp2IssueInternalCommand_loop_L221(waitValue_3, event_1, i_5, DeviceExtension_10, vslice_dummy_var_173);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_5"} true;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} 6 > i_5;
    call {:si_unique_call 1175} KeInitializeEvent(event_1, 0, 0);
    assume {:nonnull} waitValue_3 != 0;
    assume waitValue_3 > 0;
    call {:si_unique_call 1176} vslice_dummy_var_173 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_3);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    i_5 := i_5 + 1;
    goto anon140_Else_dummy;

  anon140_Else_dummy:
    assume false;
    return;

  anon140_Then:
    goto L206;

  L206:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} 3 > retryCount;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} status_49 == 0;
    goto L104;

  L104:
    call {:si_unique_call 1177} sdv_ExFreePool(0);
    call {:si_unique_call 1178} sdv_ExFreePool(0);
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    call {:si_unique_call 1179} IoFreeMdl(0);
    goto L111;

  L111:
    call {:si_unique_call 1180} IoFreeIrp(0);
    call {:si_unique_call 1181} Tmp_1830 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    Mem_T.INT4[Tmp_1830] := cIrql_10;
    call {:si_unique_call 1182} sdv_KeAcquireSpinLock(0, Tmp_1830);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    cIrql_10 := Mem_T.INT4[Tmp_1830];
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1183} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1184} sdv_KeReleaseSpinLock(0, cIrql_10);
    Tmp_1793 := status_49;
    goto L1;

  anon166_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon122_Then:
    goto L111;

  anon141_Then:
    assume {:partition} status_49 != 0;
    goto anon141_Then_dummy;

  anon141_Then_dummy:
    assume false;
    return;

  anon134_Then:
    assume {:partition} retryCount >= 3;
    goto L104;

  anon165_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon139_Then:
    assume {:partition} i_5 >= 6;
    goto L206;

  anon138_Then:
    goto L213;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1812], 1) == 0;
    goto L213;

  anon137_Then:
    goto L213;

  anon136_Then:
    assume {:partition} retryCount >= 5;
    goto L206;

  anon135_Then:
    goto L206;

  anon133_Then:
    assume {:partition} status_49 == 0;
    goto L206;

  anon132_Then:
    goto L197;

  anon163_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1826], 1) == 0;
    goto L197;

  anon131_Then:
    goto L197;

  anon162_Then:
    assume {:partition} Tmp_1828 != 18;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} senseInfoBuffer != 0;
    assume senseInfoBuffer > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    status_49 := -1073741808;
    retryCount := retryCount + 1;
    goto L205;

  anon142_Then:
    goto L233;

  L233:
    retryCount := retryCount + 1;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    havoc Tmp_1810;
    assume {:nonnull} Tmp_1810 != 0;
    assume Tmp_1810 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1810], 1) != 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    Tmp_1809 := Scsiop;
    havoc Tmp_1807;
    havoc Tmp_1803;
    call {:si_unique_call 1185} WPP_SF_qDd(Tmp_1803, 59, Tmp_1807, DeviceExtension_10, Tmp_1809, retryCount);
    goto L241;

  L241:
    status_49 := -1073741823;
    goto L205;

  anon143_Then:
    goto L241;

  anon168_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1810], 1) == 0;
    goto L241;

  anon167_Then:
    goto L241;

  anon130_Then:
    goto L233;

  anon129_Then:
    goto L181;

  anon161_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1824], 1) == 0;
    goto L181;

  anon128_Then:
    goto L181;

  anon160_Then:
    assume {:partition} Tmp_1832 == 1;
    status_49 := 0;
    goto L206;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon126_Then:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} status_49 != 259;
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    havoc status_49;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    havoc Tmp_1813;
    assume {:nonnull} Tmp_1813 != 0;
    assume Tmp_1813 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1813], 1) != 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1820;
    Tmp_1829 := Scsiop;
    havoc Tmp_1823;
    havoc Tmp_1825;
    call {:si_unique_call 1186} WPP_SF_qDqDD(Tmp_1825, 56, Tmp_1823, DeviceExtension_10, Tmp_1829, irp_7, status_49, Tmp_1820);
    goto L104;

  anon144_Then:
    goto L104;

  anon170_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1813], 1) == 0;
    goto L104;

  anon169_Then:
    goto L104;

  anon127_Then:
    assume {:partition} status_49 == 259;
    goto L171;

  anon125_Then:
    goto L157;

  anon158_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1802], 1) == 0;
    goto L157;

  anon124_Then:
    goto L157;

  anon171_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 1187} modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} modeMdl == 0;
    goto L104;

  anon121_Then:
    assume {:partition} modeMdl != 0;
    goto L96;

  anon153_Then:
    assume {:partition} Scsiop != 26;
    goto L84;

  anon156_Then:
    assume {:partition} Scsiop == 18;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1799;
    assume {:nonnull} Tmp_1799 != 0;
    assume Tmp_1799 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto L84;

  anon157_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 1188} inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} inquiryMdl != 0;
    goto L138;

  anon123_Then:
    assume {:partition} inquiryMdl == 0;
    goto L104;

  anon120_Then:
    assume {:partition} irp_7 == 0;
    call {:si_unique_call 1189} sdv_ExFreePool(0);
    call {:si_unique_call 1190} sdv_ExFreePool(0);
    call {:si_unique_call 1191} Tmp_1830 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    Mem_T.INT4[Tmp_1830] := cIrql_10;
    call {:si_unique_call 1192} sdv_KeAcquireSpinLock(0, Tmp_1830);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    cIrql_10 := Mem_T.INT4[Tmp_1830];
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1193} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1194} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_1815;
    assume {:nonnull} Tmp_1815 != 0;
    assume Tmp_1815 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1815], 1) != 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_1795;
    havoc Tmp_1827;
    call {:si_unique_call 1195} WPP_SF_q(Tmp_1827, 54, Tmp_1795, DeviceExtension_10);
    goto L281;

  L281:
    Tmp_1793 := status_49;
    goto L1;

  anon146_Then:
    goto L281;

  anon173_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1815], 1) == 0;
    goto L281;

  anon145_Then:
    goto L281;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon155_Then:
    assume {:partition} srb_6 == 0;
    call {:si_unique_call 1196} sdv_ExFreePool(0);
    call {:si_unique_call 1197} Tmp_1830 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    Mem_T.INT4[Tmp_1830] := cIrql_10;
    call {:si_unique_call 1198} sdv_KeAcquireSpinLock(0, Tmp_1830);
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    cIrql_10 := Mem_T.INT4[Tmp_1830];
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1199} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1200} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_1834;
    assume {:nonnull} Tmp_1834 != 0;
    assume Tmp_1834 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1834], 1) != 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    havoc Tmp_1816;
    havoc Tmp_1819;
    call {:si_unique_call 1201} WPP_SF_q(Tmp_1819, 53, Tmp_1816, DeviceExtension_10);
    goto L302;

  L302:
    Tmp_1793 := status_49;
    goto L1;

  anon148_Then:
    goto L302;

  anon175_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1834], 1) == 0;
    goto L302;

  anon147_Then:
    goto L302;

  anon174_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1835: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1835 == 1 || Tmp_1835 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1835: int)
{
  var {:pointer} Tmp_1836: int;
  var {:pointer} Tmp_1837: int;
  var {:pointer} Tmp_1838: int;
  var {:pointer} Tmp_1839: int;
  var {:pointer} Tmp_1840: int;
  var {:pointer} Tmp_1843: int;
  var {:pointer} Tmp_1844: int;
  var {:pointer} Tmp_1845: int;
  var {:scalar} Tmp_1846: int;
  var {:pointer} Tmp_1847: int;
  var {:scalar} validSense: int;
  var {:pointer} Tmp_1848: int;
  var {:pointer} Tmp_1849: int;
  var {:pointer} Tmp_1850: int;
  var {:pointer} Tmp_1851: int;
  var {:pointer} Tmp_1852: int;
  var {:pointer} Tmp_1853: int;
  var {:pointer} Tmp_1854: int;
  var {:pointer} Tmp_1855: int;
  var {:pointer} Tmp_1856: int;
  var {:pointer} Tmp_1857: int;
  var {:pointer} StatusBlock_1: int;
  var {:pointer} SenseBuffer: int;
  var {:scalar} SenseBufferLength: int;
  var boogieTmp: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;

  anon0:
    StatusBlock_1 := actual_StatusBlock_1;
    SenseBuffer := actual_SenseBuffer;
    SenseBufferLength := actual_SenseBufferLength;
    call {:si_unique_call 1204} Tmp_1836 := __HAVOC_malloc(228);
    call {:si_unique_call 1205} Tmp_1837 := __HAVOC_malloc(228);
    call {:si_unique_call 1206} Tmp_1838 := __HAVOC_malloc(228);
    call {:si_unique_call 1207} Tmp_1839 := __HAVOC_malloc(228);
    call {:si_unique_call 1208} Tmp_1840 := __HAVOC_malloc(228);
    call {:si_unique_call 1209} Tmp_1843 := __HAVOC_malloc(228);
    call {:si_unique_call 1210} Tmp_1844 := __HAVOC_malloc(228);
    call {:si_unique_call 1211} Tmp_1845 := __HAVOC_malloc(228);
    call {:si_unique_call 1212} Tmp_1847 := __HAVOC_malloc(228);
    call {:si_unique_call 1213} Tmp_1848 := __HAVOC_malloc(228);
    call {:si_unique_call 1214} Tmp_1849 := __HAVOC_malloc(228);
    call {:si_unique_call 1215} Tmp_1850 := __HAVOC_malloc(228);
    call {:si_unique_call 1216} Tmp_1851 := __HAVOC_malloc(228);
    call {:si_unique_call 1217} Tmp_1852 := __HAVOC_malloc(228);
    call {:si_unique_call 1218} Tmp_1853 := __HAVOC_malloc(228);
    call {:si_unique_call 1219} Tmp_1854 := __HAVOC_malloc(228);
    call {:si_unique_call 1220} Tmp_1855 := __HAVOC_malloc(228);
    call {:si_unique_call 1221} Tmp_1856 := __HAVOC_malloc(228);
    call {:si_unique_call 1222} Tmp_1857 := __HAVOC_malloc(228);
    validSense := 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SenseBuffer != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 14 <= SenseBufferLength;
    call {:si_unique_call 1223} sdv_RtlZeroMemory(0, SenseBufferLength);
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1844;
    assume {:nonnull} Tmp_1844 != 0;
    assume Tmp_1844 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1837;
    assume {:nonnull} Tmp_1837 != 0;
    assume Tmp_1837 > 0;
    havoc Tmp_1846;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Tmp_1846 == 1;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    Mem_T.INT4[SenseBuffer] := 113;
    validSense := 1;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} validSense != 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1843;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1843 != 0;
    assume Tmp_1843 > 0;
    havoc vslice_dummy_var_131;
    Mem_T.INT4[SenseBuffer] := vslice_dummy_var_131;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    Mem_T.INT4[SenseBuffer + 1 * 4] := 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1852;
    assume {:nonnull} Tmp_1852 != 0;
    assume Tmp_1852 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    call {:si_unique_call 1224} boogieTmp := corral_nondet();
    Mem_T.INT4[SenseBuffer + 2 * 4] := boogieTmp;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1838;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1838 != 0;
    assume Tmp_1838 > 0;
    havoc vslice_dummy_var_132;
    Mem_T.INT4[SenseBuffer + 2 * 4] := vslice_dummy_var_132;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1856;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1856 != 0;
    assume Tmp_1856 > 0;
    havoc vslice_dummy_var_133;
    Mem_T.INT4[SenseBuffer + 3 * 4] := vslice_dummy_var_133;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1854;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1854 != 0;
    assume Tmp_1854 > 0;
    havoc vslice_dummy_var_134;
    Mem_T.INT4[SenseBuffer + 4 * 4] := vslice_dummy_var_134;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1849;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1849 != 0;
    assume Tmp_1849 > 0;
    havoc vslice_dummy_var_135;
    Mem_T.INT4[SenseBuffer + 5 * 4] := vslice_dummy_var_135;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1855;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1855 != 0;
    assume Tmp_1855 > 0;
    havoc vslice_dummy_var_136;
    Mem_T.INT4[SenseBuffer + 6 * 4] := vslice_dummy_var_136;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    Mem_T.INT4[SenseBuffer + 7 * 4] := 11;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1857;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1857 != 0;
    assume Tmp_1857 > 0;
    havoc vslice_dummy_var_137;
    Mem_T.INT4[SenseBuffer + 8 * 4] := vslice_dummy_var_137;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1840;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1840 != 0;
    assume Tmp_1840 > 0;
    havoc vslice_dummy_var_138;
    Mem_T.INT4[SenseBuffer + 9 * 4] := vslice_dummy_var_138;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1850;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1850 != 0;
    assume Tmp_1850 > 0;
    havoc vslice_dummy_var_139;
    Mem_T.INT4[SenseBuffer + 10 * 4] := vslice_dummy_var_139;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1847;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1847 != 0;
    assume Tmp_1847 > 0;
    havoc vslice_dummy_var_140;
    Mem_T.INT4[SenseBuffer + 11 * 4] := vslice_dummy_var_140;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1848;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1848 != 0;
    assume Tmp_1848 > 0;
    havoc vslice_dummy_var_141;
    Mem_T.INT4[SenseBuffer + 12 * 4] := vslice_dummy_var_141;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1836;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1836 != 0;
    assume Tmp_1836 > 0;
    havoc vslice_dummy_var_142;
    Mem_T.INT4[SenseBuffer + 13 * 4] := vslice_dummy_var_142;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SenseBufferLength >= 18;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1839;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1839 != 0;
    assume Tmp_1839 > 0;
    havoc vslice_dummy_var_143;
    Mem_T.INT4[SenseBuffer + 14 * 4] := vslice_dummy_var_143;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1851;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1851 != 0;
    assume Tmp_1851 > 0;
    havoc vslice_dummy_var_144;
    Mem_T.INT4[SenseBuffer + 15 * 4] := vslice_dummy_var_144;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1853;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1853 != 0;
    assume Tmp_1853 > 0;
    havoc vslice_dummy_var_145;
    Mem_T.INT4[SenseBuffer + 16 * 4] := vslice_dummy_var_145;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1845;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    havoc vslice_dummy_var_146;
    Mem_T.INT4[SenseBuffer + 17 * 4] := vslice_dummy_var_146;
    goto L18;

  L18:
    Tmp_1835 := validSense;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} 18 > SenseBufferLength;
    goto L18;

  anon14_Then:
    assume {:partition} validSense == 0;
    goto L18;

  anon17_Then:
    assume {:partition} Tmp_1846 != 1;
    goto L15;

  anon16_Then:
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    Mem_T.INT4[SenseBuffer] := 112;
    validSense := 1;
    goto L15;

  anon13_Then:
    assume {:partition} SenseBufferLength < 14;
    goto L6;

  L6:
    Tmp_1835 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} SenseBuffer == 0;
    goto L6;
}



procedure {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int)
{
  var {:pointer} TraceGuid_23: int;
  var vslice_dummy_var_174: int;

  anon0:
    call {:si_unique_call 1225} vslice_dummy_var_174 := __HAVOC_malloc(4);
    TraceGuid_23 := actual_TraceGuid_23;
    return;
}



procedure {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_36: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1897: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1897 == -1073741808 || Tmp_1897 == -1073741789 || Tmp_1897 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_36: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1897: int)
{
  var {:pointer} Descriptor: int;
  var {:pointer} DescriptorLength: int;

  anon0:
    Descriptor := actual_Descriptor;
    DescriptorLength := actual_DescriptorLength;
    call {:si_unique_call 1226} sdv_do_paged_code_check();
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 8 > Mem_T.INT4[DescriptorLength];
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Mem_T.INT4[DescriptorLength] := 0;
    Tmp_1897 := -1073741808;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Mem_T.INT4[DescriptorLength] >= 8;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} 8 > Mem_T.INT4[DescriptorLength];
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Mem_T.INT4[DescriptorLength] := 24;
    Tmp_1897 := -1073741789;
    goto L1;

  anon10_Then:
    assume {:partition} Mem_T.INT4[DescriptorLength] >= 8;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.INT4[DescriptorLength] >= 8;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 24 > Mem_T.INT4[DescriptorLength];
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Mem_T.INT4[DescriptorLength] := 8;
    Tmp_1897 := 0;
    goto L1;

  anon12_Then:
    assume {:partition} Mem_T.INT4[DescriptorLength] >= 24;
    goto L13;

  L13:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Mem_T.INT4[DescriptorLength] := 24;
    Tmp_1897 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} 8 > Mem_T.INT4[DescriptorLength];
    goto L13;
}



procedure {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_37: int, actual_QueryIrp: int) returns (Tmp_1899: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1899 == -1073741585 || Tmp_1899 == 0 || Tmp_1899 == -1073741808 || Tmp_1899 == -1073741789 || Tmp_1899 == 17 || Tmp_1899 == -1073741823 || Tmp_1899 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_37: int, actual_QueryIrp: int) returns (Tmp_1899: int)
{
  var {:pointer} irpStack_17: int;
  var {:pointer} Tmp_1900: int;
  var {:pointer} query: int;
  var {:pointer} Tmp_1901: int;
  var {:dopa} {:scalar} queryLength: int;
  var {:scalar} status_51: int;
  var {:pointer} Tmp_1902: int;
  var {:pointer} deviceExtension_6: int;
  var {:pointer} DeviceObject_37: int;
  var {:pointer} QueryIrp: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1227} queryLength := __HAVOC_malloc(4);
    DeviceObject_37 := actual_DeviceObject_37;
    QueryIrp := actual_QueryIrp;
    call {:si_unique_call 1228} irpStack_17 := sdv_IoGetCurrentIrpStackLocation(QueryIrp);
    assume {:nonnull} DeviceObject_37 != 0;
    assume DeviceObject_37 > 0;
    havoc deviceExtension_6;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc query;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    havoc vslice_dummy_var_147;
    Mem_T.INT4[queryLength] := vslice_dummy_var_147;
    call {:si_unique_call 1229} sdv_do_paged_code_check();
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    status_51 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 1230} sdv_IoCompleteRequest(0, 0);
    Tmp_1899 := status_51;
    goto L1;

  L1:
    return;

  anon17_Then:
    call {:si_unique_call 1231} status_51 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status_51 >= 0;
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_51 := 0;
    goto L42;

  L42:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1232} vslice_dummy_var_175 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_6), 0);
    call {:si_unique_call 1233} sdv_IoCompleteRequest(0, 1);
    Tmp_1899 := status_51;
    goto L1;

  anon22_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1901 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1901 != 0;
    assume Tmp_1901 > 0;
    havoc vslice_dummy_var_148;
    call {:si_unique_call 1234} status_51 := Sbp2BuildMiniportDescriptor(DeviceObject_37, vslice_dummy_var_148, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon23_Then:
    status_51 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto L42;

  anon24_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_51 := 0;
    goto L42;

  anon21_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1902 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1902 != 0;
    assume Tmp_1902 > 0;
    havoc vslice_dummy_var_149;
    call {:si_unique_call 1235} status_51 := Sbp2BuildAdapterDescriptor(DeviceObject_37, vslice_dummy_var_149, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon19_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    status_51 := 0;
    goto L42;

  anon20_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1900 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1900 != 0;
    assume Tmp_1900 > 0;
    havoc vslice_dummy_var_150;
    call {:si_unique_call 1236} status_51 := Sbp2BuildDeviceDescriptor(DeviceObject_37, vslice_dummy_var_150, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon18_Then:
    assume {:partition} 0 > status_51;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 1237} sdv_IoCompleteRequest(0, 0);
    Tmp_1899 := status_51;
    goto L1;
}



procedure {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_38: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1904: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1904 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_38: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1904: int)
{
  var {:scalar} realLength: int;
  var {:scalar} tmp_1: int;
  var {:pointer} Tmp_1906: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} DeviceObject_38: int;
  var {:pointer} DescriptorLength_1: int;

  anon0:
    call {:si_unique_call 1238} tmp_1 := __HAVOC_malloc(56);
    DeviceObject_38 := actual_DeviceObject_38;
    DescriptorLength_1 := actual_DescriptorLength_1;
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    havoc deviceExtension_7;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    call {:si_unique_call 1239} sdv_do_paged_code_check();
    realLength := 32;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.INT4[DescriptorLength_1] >= 30;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} realLength > Mem_T.INT4[DescriptorLength_1];
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  L30:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 30 > Mem_T.INT4[DescriptorLength_1];
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    call {:si_unique_call 1240} sdv_RtlCopyMemory(0, 0, Mem_T.INT4[DescriptorLength_1]);
    Tmp_1904 := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[DescriptorLength_1] >= 30;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1906;
    assume {:nonnull} Tmp_1906 != 0;
    assume Tmp_1906 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 32 > Mem_T.INT4[DescriptorLength_1];
    call {:si_unique_call 1241} sdv_RtlCopyMemory(0, 0, 30);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    Mem_T.INT4[DescriptorLength_1] := 30;
    goto L55;

  L55:
    Tmp_1904 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} Mem_T.INT4[DescriptorLength_1] >= 32;
    call {:si_unique_call 1242} sdv_RtlCopyMemory(0, 0, 32);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    Mem_T.INT4[DescriptorLength_1] := 32;
    goto L55;

  anon14_Then:
    goto L38;

  anon11_Then:
    assume {:partition} Mem_T.INT4[DescriptorLength_1] >= realLength;
    goto L26;

  L26:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  anon13_Then:
    assume {:partition} 30 > Mem_T.INT4[DescriptorLength_1];
    goto L26;
}



procedure {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_39: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1907: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1907 == 0 || Tmp_1907 == 17;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_39: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1907: int)
{
  var {:scalar} Tmp_1908: int;
  var {:scalar} bytesRemaining: int;
  var {:scalar} infoLength: int;
  var {:scalar} maxLength: int;
  var {:pointer} Tmp_1909: int;
  var {:pointer} Tmp_1910: int;
  var {:pointer} Tmp_1911: int;
  var {:pointer} Tmp_1912: int;
  var {:scalar} Tmp_1913: int;
  var {:pointer} inquiryData: int;
  var {:scalar} Tmp_1914: int;
  var {:pointer} Tmp_1915: int;
  var {:pointer} Tmp_1916: int;
  var {:pointer} Tmp_1917: int;
  var {:pointer} currentOffset: int;
  var {:pointer} Tmp_1919: int;
  var {:pointer} Tmp_1920: int;
  var {:pointer} Tmp_1921: int;
  var {:scalar} realLength_1: int;
  var {:scalar} tmp_2: int;
  var {:scalar} status_52: int;
  var {:pointer} deviceExtension_8: int;
  var {:pointer} Tmp_1922: int;
  var {:pointer} DeviceObject_39: int;
  var {:pointer} Descriptor_2: int;
  var {:pointer} DescriptorLength_2: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;

  anon0:
    call {:si_unique_call 1243} tmp_2 := __HAVOC_malloc(52);
    DeviceObject_39 := actual_DeviceObject_39;
    Descriptor_2 := actual_Descriptor_2;
    DescriptorLength_2 := actual_DescriptorLength_2;
    call {:si_unique_call 1244} Tmp_1910 := __HAVOC_malloc(28);
    call {:si_unique_call 1245} Tmp_1911 := __HAVOC_malloc(8);
    call {:si_unique_call 1246} Tmp_1912 := __HAVOC_malloc(36);
    call {:si_unique_call 1247} Tmp_1915 := __HAVOC_malloc(8);
    call {:si_unique_call 1248} Tmp_1919 := __HAVOC_malloc(16);
    call {:si_unique_call 1249} Tmp_1920 := __HAVOC_malloc(20);
    call {:si_unique_call 1250} Tmp_1921 := __HAVOC_malloc(32);
    status_52 := 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    maxLength := Mem_T.INT4[DescriptorLength_2];
    bytesRemaining := maxLength;
    realLength_1 := 40;
    currentOffset := Descriptor_2;
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    havoc deviceExtension_8;
    call {:si_unique_call 1251} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    inquiryData := InquiryData__DEVICE_EXTENSION(deviceExtension_8);
    infoLength := 48;
    realLength_1 := realLength_1 + infoLength;
    call {:si_unique_call 1252} sdv_RtlZeroMemory(0, maxLength);
    call {:si_unique_call 1253} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} bytesRemaining > 40;
    Tmp_1914 := 40;
    goto L43;

  L43:
    call {:si_unique_call 1254} sdv_RtlCopyMemory(0, 0, Tmp_1914);
    bytesRemaining := bytesRemaining - 40;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 0 >= bytesRemaining;
    Tmp_1907 := status_52;
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} bytesRemaining > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1921;
    assume {:nonnull} Tmp_1921 != 0;
    assume Tmp_1921 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.INT4[Tmp_1921] != 0;
    goto L54;

  L54:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} 8 >= bytesRemaining;
    Tmp_1907 := 0;
    goto L1;

  anon22_Then:
    assume {:partition} bytesRemaining > 8;
    call {:si_unique_call 1255} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 9;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1907 := status_52;
    goto L1;

  anon28_Then:
    assume {:partition} bytesRemaining > 16;
    call {:si_unique_call 1256} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 17;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 4 >= bytesRemaining;
    Tmp_1907 := status_52;
    goto L1;

  anon29_Then:
    assume {:partition} bytesRemaining > 4;
    call {:si_unique_call 1257} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 5;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1907 := status_52;
    goto L1;

  anon30_Then:
    assume {:partition} bytesRemaining > 16;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1922;
    assume {:nonnull} Tmp_1922 != 0;
    assume Tmp_1922 > 0;
    havoc Tmp_1909;
    assume {:nonnull} Tmp_1909 != 0;
    assume Tmp_1909 > 0;
    havoc Tmp_1911;
    assume {:nonnull} Tmp_1911 != 0;
    assume Tmp_1911 > 0;
    Tmp_1913 := Mem_T.INT4[Tmp_1911 + 1 * 4];
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1916;
    assume {:nonnull} Tmp_1916 != 0;
    assume Tmp_1916 > 0;
    havoc Tmp_1917;
    assume {:nonnull} Tmp_1917 != 0;
    assume Tmp_1917 > 0;
    havoc Tmp_1915;
    assume {:nonnull} Tmp_1915 != 0;
    assume Tmp_1915 > 0;
    Tmp_1908 := Mem_T.INT4[Tmp_1915];
    Tmp_1912 := strConst__li2bpl30;
    call {:si_unique_call 1258} vslice_dummy_var_176 := RtlStringCbPrintfA(currentOffset, bytesRemaining, Tmp_1912);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    Mem_T.INT4[DescriptorLength_2] := realLength_1;
    Tmp_1907 := status_52;
    goto L1;

  anon27_Then:
    assume {:partition} Mem_T.INT4[Tmp_1921] == 0;
    Tmp_1910 := strConst__li2bpl27;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_151;
    call {:si_unique_call 1259} vslice_dummy_var_177 := RtlStringCbPrintfA(vslice_dummy_var_151, 8, Tmp_1910);
    Tmp_1920 := strConst__li2bpl28;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_152;
    call {:si_unique_call 1260} vslice_dummy_var_178 := RtlStringCbPrintfA(vslice_dummy_var_152, 16, Tmp_1920);
    Tmp_1919 := strConst__li2bpl29;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_153;
    call {:si_unique_call 1261} vslice_dummy_var_179 := RtlStringCbPrintfA(vslice_dummy_var_153, 4, Tmp_1919);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    status_52 := 17;
    goto L54;

  anon23_Then:
    goto L54;

  anon25_Then:
    assume {:partition} 40 >= bytesRemaining;
    Tmp_1914 := bytesRemaining;
    goto L43;

  anon24_Then:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto L38;

  anon21_Then:
    goto L36;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_180: int;

  anon0:
    call {:si_unique_call 1262} vslice_dummy_var_180 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int)
{
  var {:pointer} Tmp_1925: int;
  var {:scalar} sdv_601: int;
  var {:scalar} Tmp_1927: int;
  var {:pointer} TraceGuid_24: int;
  var {:pointer} s_p_e_c_i_a_l_98: int;
  var vslice_dummy_var_181: int;

  anon0:
    call {:si_unique_call 1263} vslice_dummy_var_181 := __HAVOC_malloc(4);
    TraceGuid_24 := actual_TraceGuid_24;
    s_p_e_c_i_a_l_98 := actual_s_p_e_c_i_a_l_98;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_98 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_98 != 0;
    assume s_p_e_c_i_a_l_98 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_98] != 0;
    Tmp_1927 := (sdv_601 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_98 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_98 != 0;
    assume s_p_e_c_i_a_l_98 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_98] != 0;
    Tmp_1925 := s_p_e_c_i_a_l_98;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_98] == 0;
    Tmp_1925 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_98 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_98] == 0;
    Tmp_1927 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_98 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_99: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_99: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int)
{
  var {:pointer} TraceGuid_25: int;
  var vslice_dummy_var_182: int;

  anon0:
    call {:si_unique_call 1264} vslice_dummy_var_182 := __HAVOC_malloc(4);
    TraceGuid_25 := actual_TraceGuid_25;
    return;
}



procedure {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1941: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_1941 == 1 || Tmp_1941 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1941: int)
{
  var {:pointer} Tmp_1942: int;
  var {:scalar} sdv_606: int;
  var {:pointer} PdoExtension_23: int;
  var {:scalar} NtStatus_2: int;
  var vslice_dummy_var_154: int;

  anon0:
    PdoExtension_23 := actual_PdoExtension_23;
    NtStatus_2 := actual_NtStatus_2;
    call {:si_unique_call 1265} Sbp2AddLog(PdoExtension_23, 1, -766742681, NtStatus_2, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} NtStatus_2 == -1072562032;
    Tmp_1941 := 1;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} NtStatus_2 != -1072562032;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} NtStatus_2 != -1073741810;
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1266} Tmp_1942 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    havoc vslice_dummy_var_154;
    Mem_T.INT4[Tmp_1942] := vslice_dummy_var_154;
    call {:si_unique_call 1267} sdv_606 := sdv_InterlockedDecrement(Tmp_1942);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_606 > 0;
    Tmp_1941 := 1;
    goto L1;

  anon12_Then:
    assume {:partition} 0 >= sdv_606;
    goto L9;

  L9:
    Tmp_1941 := 0;
    goto L1;

  anon11_Then:
    goto L9;

  anon10_Then:
    assume {:partition} NtStatus_2 == -1073741810;
    goto L9;
}



procedure {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1943: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1943 == 0 || Tmp_1943 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1943: int)
{
  var {:scalar} cchNewDestLength: int;
  var {:scalar} iRet: int;
  var {:scalar} cchMax: int;
  var {:scalar} status_53: int;
  var {:pointer} pszDest: int;
  var {:scalar} cchDest: int;
  var {:pointer} pcchNewDestLength: int;

  anon0:
    pszDest := actual_pszDest;
    cchDest := actual_cchDest;
    pcchNewDestLength := actual_pcchNewDestLength;
    status_53 := 0;
    cchNewDestLength := 0;
    cchMax := cchDest - 1;
    call {:si_unique_call 1268} iRet := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet;
    goto L16;

  L16:
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    Mem_T.INT4[pszDest] := 0;
    cchNewDestLength := cchMax;
    status_53 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength != 0;
    assume {:nonnull} pcchNewDestLength != 0;
    assume pcchNewDestLength > 0;
    Mem_T.INT4[pcchNewDestLength] := cchNewDestLength;
    goto L21;

  L21:
    Tmp_1943 := status_53;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet <= cchMax;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet == cchMax;
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    Mem_T.INT4[pszDest] := 0;
    cchNewDestLength := cchMax;
    goto L20;

  anon12_Then:
    assume {:partition} iRet != cchMax;
    cchNewDestLength := iRet;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax < iRet;
    goto L16;
}



procedure {:origName "Sbp2FdoRequestCompletionRoutine"} Sbp2FdoRequestCompletionRoutine(actual_DeviceObject_40: int, actual_Irp_23: int, actual_EventIn: int) returns (Tmp_1945: int);
  free ensures {:va_keep} Tmp_1945 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FdoRequestCompletionRoutine"} Sbp2FdoRequestCompletionRoutine(actual_DeviceObject_40: int, actual_Irp_23: int, actual_EventIn: int) returns (Tmp_1945: int)
{
  var {:pointer} Event_3: int;
  var {:pointer} EventIn: int;
  var vslice_dummy_var_183: int;

  anon0:
    EventIn := actual_EventIn;
    Event_3 := EventIn;
    call {:si_unique_call 1269} vslice_dummy_var_183 := KeSetEvent(Event_3, 0, 0);
    Tmp_1945 := -1073741802;
    return;
}



procedure {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_102: int, actual_s_p_e_c_i_a_l_103: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_102: int, actual_s_p_e_c_i_a_l_103: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int)
{
  var {:pointer} TraceGuid_26: int;
  var vslice_dummy_var_184: int;

  anon0:
    call {:si_unique_call 1270} vslice_dummy_var_184 := __HAVOC_malloc(4);
    TraceGuid_26 := actual_TraceGuid_26;
    return;
}



procedure {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1950: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1950: int)
{
  var {:pointer} Tmp_1951: int;
  var {:scalar} size_1: int;
  var {:pointer} Tmp_1952: int;
  var {:scalar} Tmp_1953: int;
  var {:pointer} symlinkBuffer: int;
  var {:pointer} pdoExtension_17: int;
  var {:scalar} uniDeviceName: int;
  var {:pointer} Tmp_1954: int;
  var {:pointer} Tmp_1955: int;
  var {:pointer} Tmp_1956: int;
  var {:pointer} Tmp_1957: int;
  var {:scalar} Tmp_1958: int;
  var {:pointer} Tmp_1959: int;
  var {:pointer} Tmp_1960: int;
  var {:pointer} Tmp_1961: int;
  var {:pointer} Tmp_1962: int;
  var {:pointer} Tmp_1964: int;
  var {:pointer} Tmp_1965: int;
  var {:scalar} Tmp_1966: int;
  var {:pointer} sdv_612: int;
  var {:pointer} Tmp_1967: int;
  var {:pointer} Tmp_1968: int;
  var {:pointer} Tmp_1969: int;
  var {:scalar} Tmp_1970: int;
  var {:scalar} sdv_613: int;
  var {:scalar} sdv_614: int;
  var {:scalar} prevRemoveLock: int;
  var {:pointer} Tmp_1972: int;
  var {:pointer} Tmp_1973: int;
  var {:scalar} status_54: int;
  var {:pointer} Tmp_1974: int;
  var {:scalar} prevDeviceFlags: int;
  var {:pointer} FdoExtension_4: int;
  var {:pointer} DeviceInfo_2: int;
  var {:scalar} InstanceNumber: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 1271} uniDeviceName := __HAVOC_malloc(12);
    call {:si_unique_call 1272} prevRemoveLock := __HAVOC_malloc(168);
    FdoExtension_4 := actual_FdoExtension_4;
    DeviceInfo_2 := actual_DeviceInfo_2;
    InstanceNumber := actual_InstanceNumber;
    call {:si_unique_call 1273} Tmp_1951 := __HAVOC_malloc(4);
    call {:si_unique_call 1274} Tmp_1959 := __HAVOC_malloc(4);
    call {:si_unique_call 1275} Tmp_1962 := __HAVOC_malloc(180);
    call {:si_unique_call 1276} vslice_dummy_var_185 := __HAVOC_malloc(8);
    call {:si_unique_call 1277} Tmp_1968 := __HAVOC_malloc(4);
    call {:si_unique_call 1278} Tmp_1969 := __HAVOC_malloc(4);
    call {:si_unique_call 1279} vslice_dummy_var_186 := __HAVOC_malloc(8);
    call {:si_unique_call 1280} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1965;
    assume {:nonnull} Tmp_1965 != 0;
    assume Tmp_1965 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1960;
    assume {:nonnull} Tmp_1960 != 0;
    assume Tmp_1960 > 0;
    goto L15;

  L15:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1954;
    assume {:nonnull} Tmp_1954 != 0;
    assume Tmp_1954 > 0;
    havoc pdoExtension_17;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc prevDeviceFlags;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    call {:si_unique_call 1281} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_1955;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} Tmp_1955 != 0;
    assume Tmp_1955 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1282} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_17), 0, 0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1283} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_17), 0, 0);
    call {:si_unique_call 1284} Tmp_1973 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1973 != 0;
    assume Tmp_1973 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_155;
    Mem_T.INT4[Tmp_1973] := vslice_dummy_var_155;
    call {:si_unique_call 1285} sdv_KeInitializeSpinLock(Tmp_1973);
    assume {:nonnull} Tmp_1973 != 0;
    assume Tmp_1973 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1959;
    assume {:nonnull} Tmp_1959 != 0;
    assume Tmp_1959 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1959], 2) != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1974;
    havoc Tmp_1953;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc vslice_dummy_var_156;
    call {:si_unique_call 1286} WPP_SF_S(Tmp_1953, 109, Tmp_1974, vslice_dummy_var_156);
    goto L42;

  L42:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1957;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1964;
    assume {:nonnull} Tmp_1957 != 0;
    assume Tmp_1957 > 0;
    assume {:nonnull} Tmp_1964 != 0;
    assume Tmp_1964 > 0;
    call {:si_unique_call 1287} status_54 := Sbp2PreAllocateLists(pdoExtension_17);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_54 >= 0;
    size_1 := 1536;
    call {:si_unique_call 1288} sdv_612 := ExAllocatePoolWithTag(1, size_1, -330079661);
    symlinkBuffer := sdv_612;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} symlinkBuffer == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1969;
    assume {:nonnull} Tmp_1969 != 0;
    assume Tmp_1969 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1969], 1) != 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1956;
    havoc Tmp_1958;
    call {:si_unique_call 1289} WPP_SF_(Tmp_1958, 112, Tmp_1956);
    goto L95;

  L95:
    status_54 := 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1967;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1952;
    assume {:nonnull} Tmp_1952 != 0;
    assume Tmp_1952 > 0;
    assume {:nonnull} Tmp_1967 != 0;
    assume Tmp_1967 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L105;

  L105:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1290} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    Tmp_1950 := status_54;
    goto LM2;

  LM2:
    return;

  anon44_Then:
    goto L95;

  anon51_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1969], 1) == 0;
    goto L95;

  anon43_Then:
    goto L95;

  anon48_Then:
    assume {:partition} symlinkBuffer != 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    Tmp_1962 := strConst__li2bpl31;
    call {:si_unique_call 1291} vslice_dummy_var_187 := RtlStringCbPrintfW(symlinkBuffer, size_1, Tmp_1962);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1292} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_17), symlinkBuffer);
    call {:si_unique_call 1293} RtlInitUnicodeString(uniDeviceName, symlinkBuffer);
    call {:si_unique_call 1294} status_54 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_54 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1951;
    assume {:nonnull} Tmp_1951 != 0;
    assume Tmp_1951 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1951], 1) != 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1972;
    havoc Tmp_1966;
    call {:si_unique_call 1295} WPP_SF_D(Tmp_1966, 111, Tmp_1972, status_54);
    goto L95;

  anon42_Then:
    goto L95;

  anon50_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1951], 1) == 0;
    goto L95;

  anon41_Then:
    goto L95;

  anon38_Then:
    assume {:partition} 0 <= status_54;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_1968;
    assume {:nonnull} Tmp_1968 != 0;
    assume Tmp_1968 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1968], 1) != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_1961;
    havoc Tmp_1970;
    call {:si_unique_call 1296} WPP_SF_S(Tmp_1970, 110, Tmp_1961, symlinkBuffer);
    goto L95;

  anon40_Then:
    goto L95;

  anon49_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1968], 1) == 0;
    goto L95;

  anon39_Then:
    goto L95;

  anon37_Then:
    assume {:partition} 0 > status_54;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L105;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    goto L42;

  anon46_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1959], 2) == 0;
    goto L42;

  anon35_Then:
    goto L42;

  anon45_Then:
    goto L15;
}



procedure {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1975: int);
  free ensures {:va_keep} Tmp_1975 == 0 || Tmp_1975 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1975: int)
{
  var {:scalar} status_55: int;
  var {:scalar} cchDest_1: int;
  var {:scalar} cchMax_1: int;

  anon0:
    cchDest_1 := actual_cchDest_1;
    cchMax_1 := actual_cchMax_1;
    status_55 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_1 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_1 <= cchMax_1;
    goto L8;

  L8:
    Tmp_1975 := status_55;
    return;

  anon5_Then:
    assume {:partition} cchMax_1 < cchDest_1;
    goto L6;

  L6:
    status_55 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_1 == 0;
    goto L6;
}



procedure {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_41: int, actual_Irp_24: int) returns (Tmp_1977: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_41: int, actual_Irp_24: int) returns (Tmp_1977: int)
{
  var {:pointer} Tmp_1978: int;
  var {:scalar} Tmp_1979: int;
  var {:pointer} Tmp_1980: int;
  var {:scalar} status_56: int;
  var {:pointer} deviceExtension_9: int;
  var {:pointer} DeviceObject_41: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_157: int;

  anon0:
    DeviceObject_41 := actual_DeviceObject_41;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 1297} Tmp_1980 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_41 != 0;
    assume DeviceObject_41 > 0;
    havoc deviceExtension_9;
    call {:si_unique_call 1298} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1980;
    assume {:nonnull} Tmp_1980 != 0;
    assume Tmp_1980 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1980], 1) != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    havoc Tmp_1978;
    havoc Tmp_1979;
    call {:si_unique_call 1299} WPP_SF_qq(Tmp_1979, 101, Tmp_1978, deviceExtension_9, Irp_24);
    goto L15;

  L15:
    call {:si_unique_call 1300} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_24);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_157;
    call {:si_unique_call 1301} Tmp_1977 := sdv_IoCallDriver(vslice_dummy_var_157, Irp_24);
    goto L1;

  L1:
    return;

  anon11_Then:
    goto L15;

  anon12_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1980], 1) == 0;
    goto L15;

  anon10_Then:
    goto L15;

  anon9_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_56;
    call {:si_unique_call 1302} sdv_IoCompleteRequest(0, 0);
    Tmp_1977 := status_56;
    goto L1;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var {:scalar} Tmp_1984: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_158: int;

  anon0:
    call {:si_unique_call 1303} vslice_dummy_var_188 := __HAVOC_malloc(4);
    call {:si_unique_call 1304} Tmp_1984 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    assume {:nonnull} Tmp_1984 != 0;
    assume Tmp_1984 > 0;
    havoc vslice_dummy_var_158;
    Mem_T.INT4[Tmp_1984] := vslice_dummy_var_158;
    assume Sbp2LogLevel == 15;
    return;
}



procedure {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int, actual_s_p_e_c_i_a_l_106: int, actual_s_p_e_c_i_a_l_107: int, actual_s_p_e_c_i_a_l_108: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int, actual_s_p_e_c_i_a_l_106: int, actual_s_p_e_c_i_a_l_107: int, actual_s_p_e_c_i_a_l_108: int)
{
  var {:pointer} TraceGuid_27: int;
  var vslice_dummy_var_189: int;

  anon0:
    call {:si_unique_call 1305} vslice_dummy_var_189 := __HAVOC_malloc(4);
    TraceGuid_27 := actual_TraceGuid_27;
    return;
}



procedure {:origName "Sbp2DeviceManagementTimeoutDpc"} Sbp2DeviceManagementTimeoutDpc(actual_Dpc_3: int, actual_PdoExtensionIn: int, actual_SystemArgument1: int, actual_SystemArgument2: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DeviceManagementTimeoutDpc"} Sbp2DeviceManagementTimeoutDpc(actual_Dpc_3: int, actual_PdoExtensionIn: int, actual_SystemArgument1: int, actual_SystemArgument2: int)
{
  var {:scalar} i_6: int;
  var {:scalar} Tmp_1988: int;
  var {:scalar} bDeviceInitialized: int;
  var {:scalar} Tmp_1989: int;
  var {:scalar} bPdoStopped: int;
  var {:pointer} Tmp_1990: int;
  var {:scalar} Tmp_1991: int;
  var {:scalar} Tmp_1992: int;
  var {:scalar} Tmp_1993: int;
  var {:scalar} bDeviceInactive: int;
  var {:pointer} Tmp_1994: int;
  var {:pointer} Tmp_1995: int;
  var {:pointer} pdoExtension_18: int;
  var {:scalar} resetLevel: int;
  var {:scalar} Tmp_1996: int;
  var {:scalar} Tmp_1997: int;
  var {:pointer} Tmp_1998: int;
  var {:pointer} Tmp_1999: int;
  var {:pointer} Tmp_2000: int;
  var {:pointer} Tmp_2001: int;
  var {:scalar} Tmp_2002: int;
  var {:scalar} Tmp_2003: int;
  var {:pointer} Tmp_2004: int;
  var {:pointer} Tmp_2006: int;
  var {:scalar} Tmp_2007: int;
  var {:scalar} Tmp_2008: int;
  var {:pointer} Tmp_2009: int;
  var {:pointer} Tmp_2010: int;
  var {:pointer} PdoExtension_24: int;
  var {:scalar} Tmp_2011: int;
  var {:pointer} Tmp_2012: int;
  var {:pointer} Tmp_2013: int;
  var {:pointer} fdoExtension_10: int;
  var {:pointer} Tmp_2014: int;
  var {:scalar} Tmp_2015: int;
  var {:pointer} Tmp_2016: int;
  var {:pointer} Tmp_2017: int;
  var {:pointer} Tmp_2018: int;
  var {:pointer} Tmp_2019: int;
  var {:scalar} Tmp_2020: int;
  var {:scalar} status_57: int;
  var {:pointer} Tmp_2022: int;
  var {:pointer} Tmp_2023: int;
  var {:pointer} Tmp_2024: int;
  var {:pointer} Dpc_3: int;
  var {:pointer} PdoExtensionIn: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 1306} vslice_dummy_var_190 := __HAVOC_malloc(4);
    Dpc_3 := actual_Dpc_3;
    PdoExtensionIn := actual_PdoExtensionIn;
    call {:si_unique_call 1307} Tmp_1998 := __HAVOC_malloc(4);
    call {:si_unique_call 1308} Tmp_2000 := __HAVOC_malloc(4);
    call {:si_unique_call 1309} Tmp_2006 := __HAVOC_malloc(4);
    call {:si_unique_call 1310} Tmp_2009 := __HAVOC_malloc(4);
    call {:si_unique_call 1311} Tmp_2010 := __HAVOC_malloc(4);
    call {:si_unique_call 1312} Tmp_2012 := __HAVOC_malloc(4);
    call {:si_unique_call 1313} Tmp_2013 := __HAVOC_malloc(4);
    call {:si_unique_call 1314} Tmp_2014 := __HAVOC_malloc(4);
    call {:si_unique_call 1315} Tmp_2017 := __HAVOC_malloc(2680);
    call {:si_unique_call 1316} Tmp_2019 := __HAVOC_malloc(4);
    PdoExtension_24 := PdoExtensionIn;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Dpc_3 == DeviceManagementTimeoutDpc__DEVICE_EXTENSION(PdoExtension_24);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    havoc Tmp_2006;
    assume {:nonnull} Tmp_2006 != 0;
    assume Tmp_2006 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2006], 1) != 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_2024;
    havoc Tmp_1991;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_159;
    call {:si_unique_call 1317} WPP_SF_qD(Tmp_1991, 44, Tmp_2024, PdoExtension_24, vslice_dummy_var_159);
    goto L27;

  L27:
    call {:si_unique_call 1318} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1319} Sbp2AddLog(PdoExtension_24, 1, -848867980, 0, 0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    call {:si_unique_call 1320} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon117_Then:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    bPdoStopped := 0;
    bDeviceInitialized := 0;
    bDeviceInactive := 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    havoc Tmp_2012;
    assume {:nonnull} Tmp_2012 != 0;
    assume Tmp_2012 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2012], 1) != 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    havoc Tmp_2001;
    havoc Tmp_2015;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_160;
    call {:si_unique_call 1321} WPP_SF_qD(Tmp_2015, 45, Tmp_2001, PdoExtension_24, vslice_dummy_var_160);
    goto L57;

  L57:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc Tmp_2002;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} 0 == Tmp_2002;
    bPdoStopped := 0;
    goto L319;

  L319:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc Tmp_1995;
    assume {:nonnull} Tmp_1995 != 0;
    assume Tmp_1995 > 0;
    havoc fdoExtension_10;
    call {:si_unique_call 1322} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} bPdoStopped != 0;
    i_6 := 0;
    goto L78;

  L78:
    call {:si_unique_call 1323} i_6, Tmp_1988, bDeviceInitialized, Tmp_1989, Tmp_1993, bDeviceInactive, pdoExtension_18, Tmp_2016, Tmp_2017, status_57 := Sbp2DeviceManagementTimeoutDpc_loop_L78(i_6, Tmp_1988, bDeviceInitialized, Tmp_1989, Tmp_1993, bDeviceInactive, pdoExtension_18, PdoExtension_24, fdoExtension_10, Tmp_2016, Tmp_2017, status_57);
    goto L78_last;

  L78_last:
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    Tmp_1988 := i_6;
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    havoc Tmp_2017;
    assume {:nonnull} Tmp_2017 != 0;
    assume Tmp_2017 > 0;
    havoc Tmp_2016;
    assume {:nonnull} Tmp_2016 != 0;
    assume Tmp_2016 > 0;
    havoc pdoExtension_18;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    call {:si_unique_call 1324} status_57 := Sbp2QueueManagementWorkItem(pdoExtension_18, 2, -1);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_57 >= 0;
    goto L94;

  L94:
    i_6 := i_6 + 1;
    goto L94_dummy;

  L94_dummy:
    assume false;
    return;

  anon124_Then:
    assume {:partition} 0 > status_57;
    call {:si_unique_call 1325} Sbp2SetDeferLoginTimer(pdoExtension_18);
    goto L94;

  anon152_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_1989;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} 0 == Tmp_1989;
    bDeviceInitialized := 0;
    goto L331;

  L331:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_1993;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} 0 == Tmp_1993;
    bDeviceInactive := 0;
    goto L335;

  L335:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} bDeviceInitialized != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} bDeviceInactive == 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1326} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1327} CleanupOrbList#1(pdoExtension_18, -1073741248);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1328} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 1329} status_57 := Sbp2QueueManagementWorkItem(pdoExtension_18, 2, -1);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} status_57 < 0;
    call {:si_unique_call 1330} Sbp2SetDeferLoginTimer(PdoExtension_24);
    goto L94;

  anon126_Then:
    assume {:partition} 0 <= status_57;
    goto L94;

  anon156_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon125_Then:
    assume {:partition} bDeviceInactive != 0;
    goto L94;

  anon155_Then:
    assume {:partition} bDeviceInitialized == 0;
    goto L94;

  anon154_Then:
    assume {:partition} 0 != Tmp_1993;
    bDeviceInactive := 1;
    goto L335;

  anon153_Then:
    assume {:partition} 0 != Tmp_1989;
    bDeviceInitialized := 1;
    goto L331;

  anon123_Then:
    goto L79;

  L79:
    call {:si_unique_call 1331} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1332} vslice_dummy_var_191 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_24), 0, 0);
    call {:si_unique_call 1333} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon122_Then:
    assume {:partition} bPdoStopped == 0;
    goto L73;

  L73:
    call {:si_unique_call 1334} status_57 := Sbp2QueueManagementWorkItem(PdoExtension_24, 2, -1);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} status_57 < 0;
    call {:si_unique_call 1335} Sbp2SetDeferLoginTimer(PdoExtension_24);
    goto L79;

  anon127_Then:
    assume {:partition} 0 <= status_57;
    goto L79;

  anon121_Then:
    goto L73;

  anon151_Then:
    assume {:partition} 0 != Tmp_2002;
    bPdoStopped := 1;
    goto L319;

  anon120_Then:
    goto L57;

  anon150_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2012], 1) == 0;
    goto L57;

  anon149_Then:
    goto L57;

  anon118_Then:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    havoc Tmp_2014;
    assume {:nonnull} Tmp_2014 != 0;
    assume Tmp_2014 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2014], 2048) != 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    havoc Tmp_2018;
    havoc Tmp_2020;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_161;
    call {:si_unique_call 1336} WPP_SF_qD(Tmp_2020, 46, Tmp_2018, PdoExtension_24, vslice_dummy_var_161);
    goto L135;

  L135:
    call {:si_unique_call 1337} status_57 := Sbp2QueueManagementWorkItem(PdoExtension_24, 2, -1);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_57 >= 0;
    goto L150;

  L150:
    call {:si_unique_call 1338} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon131_Then:
    assume {:partition} 0 > status_57;
    call {:si_unique_call 1339} Sbp2SetDeferLoginTimer(PdoExtension_24);
    goto L150;

  anon130_Then:
    goto L135;

  anon157_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2014], 2048) == 0;
    goto L135;

  anon129_Then:
    goto L135;

  anon119_Then:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_2000;
    assume {:nonnull} Tmp_2000 != 0;
    assume Tmp_2000 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2000], 1) != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    havoc Tmp_1990;
    havoc Tmp_2011;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_162;
    call {:si_unique_call 1340} WPP_SF_qD(Tmp_2011, 47, Tmp_1990, PdoExtension_24, vslice_dummy_var_162);
    goto L159;

  L159:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1341} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1342} vslice_dummy_var_192 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_24), 0, 0);
    call {:si_unique_call 1343} Sbp2LoginErrorHandler#1(PdoExtension_24, 258, 2746);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon134_Then:
    goto L159;

  anon158_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2000], 1) == 0;
    goto L159;

  anon133_Then:
    goto L159;

  anon128_Then:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1344} status_57 := Sbp2QueueManagementWorkItem(PdoExtension_24, 2, -1);
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} status_57 >= 0;
    goto L187;

  L187:
    call {:si_unique_call 1345} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    call {:si_unique_call 1346} vslice_dummy_var_193 := Sbp2RestartPendingPowerIrp#1(PdoExtension_24);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon160_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    goto L1;

  anon136_Then:
    assume {:partition} 0 > status_57;
    call {:si_unique_call 1347} Sbp2SetDeferLoginTimer(PdoExtension_24);
    goto L187;

  anon132_Then:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_2013;
    assume {:nonnull} Tmp_2013 != 0;
    assume Tmp_2013 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2013], 1) != 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    havoc Tmp_2022;
    havoc Tmp_2008;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_163;
    call {:si_unique_call 1348} WPP_SF_qD(Tmp_2008, 48, Tmp_2022, PdoExtension_24, vslice_dummy_var_163);
    goto L202;

  L202:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    resetLevel := 5;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    havoc Tmp_2009;
    assume {:nonnull} Tmp_2009 != 0;
    assume Tmp_2009 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2009], 2048) != 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    havoc Tmp_1999;
    havoc Tmp_2003;
    call {:si_unique_call 1349} WPP_SF_q(Tmp_2003, 50, Tmp_1999, PdoExtension_24);
    goto L216;

  L216:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1350} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon141_Then:
    call {:si_unique_call 1351} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    havoc Tmp_2010;
    assume {:nonnull} Tmp_2010 != 0;
    assume Tmp_2010 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2010], 1) != 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_2004;
    havoc Tmp_1996;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_164;
    call {:si_unique_call 1352} WPP_SF_qD(Tmp_1996, 51, Tmp_2004, PdoExtension_24, vslice_dummy_var_164);
    goto L236;

  L236:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_165;
    call {:si_unique_call 1353} vslice_dummy_var_194 := Sbp2Reset#1(vslice_dummy_var_165, resetLevel);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon165_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon144_Then:
    goto L236;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2010], 1) == 0;
    goto L236;

  anon143_Then:
    goto L236;

  anon142_Then:
    goto L216;

  anon163_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2009], 2048) == 0;
    goto L216;

  anon162_Then:
    goto L216;

  anon139_Then:
    resetLevel := 3;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    Tmp_2007 := 5;
    goto L250;

  L250:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    havoc Tmp_2019;
    assume {:nonnull} Tmp_2019 != 0;
    assume Tmp_2019 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2019], 2048) != 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_1994;
    havoc Tmp_1997;
    call {:si_unique_call 1354} WPP_SF_q(Tmp_1997, 49, Tmp_1994, PdoExtension_24);
    goto L216;

  anon145_Then:
    goto L216;

  anon168_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2019], 2048) == 0;
    goto L216;

  anon167_Then:
    goto L216;

  anon166_Then:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc Tmp_2007;
    goto L250;

  anon140_Then:
    goto L202;

  anon161_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2013], 1) == 0;
    goto L202;

  anon138_Then:
    goto L202;

  anon135_Then:
    call {:si_unique_call 1355} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon116_Then:
    goto L27;

  anon148_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2006], 1) == 0;
    goto L27;

  anon115_Then:
    goto L27;

  anon146_Then:
    assume {:partition} Dpc_3 != DeviceManagementTimeoutDpc__DEVICE_EXTENSION(PdoExtension_24);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    havoc Tmp_1998;
    assume {:nonnull} Tmp_1998 != 0;
    assume Tmp_1998 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1998], 1) != 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_2023;
    havoc Tmp_1992;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1356} WPP_SF_qqq(Tmp_1992, 43, Tmp_2023, PdoExtension_24, Dpc_3, DeviceManagementTimeoutDpc__DEVICE_EXTENSION(PdoExtension_24));
    goto L1;

  anon114_Then:
    goto L1;

  anon147_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1998], 1) == 0;
    goto L1;

  anon113_Then:
    goto L1;
}



procedure {:origName "Sbp2PortForwardIrpSynchronousCompletionRoutine"} Sbp2PortForwardIrpSynchronousCompletionRoutine(actual_DeviceObject_42: int, actual_Irp_25: int, actual_Context_19: int) returns (Tmp_2025: int);
  free ensures {:va_keep} Tmp_2025 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PortForwardIrpSynchronousCompletionRoutine"} Sbp2PortForwardIrpSynchronousCompletionRoutine(actual_DeviceObject_42: int, actual_Irp_25: int, actual_Context_19: int) returns (Tmp_2025: int)
{
  var {:pointer} event_2: int;
  var {:pointer} Context_19: int;
  var vslice_dummy_var_195: int;

  anon0:
    Context_19 := actual_Context_19;
    event_2 := Context_19;
    call {:si_unique_call 1357} vslice_dummy_var_195 := KeSetEvent(event_2, 1, 0);
    Tmp_2025 := -1073741802;
    return;
}



procedure {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_2027: int);
  free ensures {:va_keep} Tmp_2027 == 0 || Tmp_2027 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_2027: int)
{
  var {:scalar} status_58: int;
  var {:scalar} cchDest_2: int;
  var {:scalar} cchMax_2: int;

  anon0:
    cchDest_2 := actual_cchDest_2;
    cchMax_2 := actual_cchMax_2;
    status_58 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_2 <= cchMax_2;
    goto L8;

  L8:
    Tmp_2027 := status_58;
    return;

  anon5_Then:
    assume {:partition} cchMax_2 < cchDest_2;
    goto L6;

  L6:
    status_58 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_2 == 0;
    goto L6;
}



procedure {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_43: int, actual_Irp_26: int) returns (Tmp_2029: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_43: int, actual_Irp_26: int) returns (Tmp_2029: int)
{
  var {:pointer} irpStack_18: int;
  var {:pointer} pdoExtension_19: int;
  var {:scalar} Tmp_2030: int;
  var {:pointer} Tmp_2032: int;
  var {:pointer} Tmp_2033: int;
  var {:scalar} status_59: int;
  var {:pointer} DeviceObject_43: int;
  var {:pointer} Irp_26: int;
  var vslice_dummy_var_166: int;

  anon0:
    DeviceObject_43 := actual_DeviceObject_43;
    Irp_26 := actual_Irp_26;
    call {:si_unique_call 1358} Tmp_2033 := __HAVOC_malloc(4);
    call {:si_unique_call 1359} irpStack_18 := sdv_IoGetCurrentIrpStackLocation(Irp_26);
    assume {:nonnull} DeviceObject_43 != 0;
    assume DeviceObject_43 > 0;
    havoc pdoExtension_19;
    call {:si_unique_call 1360} sdv_do_paged_code_check();
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    havoc Tmp_2033;
    assume {:nonnull} Tmp_2033 != 0;
    assume Tmp_2033 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2033], 1) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_2032;
    havoc Tmp_2030;
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    havoc vslice_dummy_var_166;
    call {:si_unique_call 1361} WPP_SF_qqD(Tmp_2030, 66, Tmp_2032, pdoExtension_19, Irp_26, vslice_dummy_var_166);
    goto L56;

  L56:
    status_59 := -1073741637;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1362} sdv_IoCompleteRequest(0, 0);
    goto L44;

  L44:
    Tmp_2029 := status_59;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    goto L56;

  anon33_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2033], 1) == 0;
    goto L56;

  anon26_Then:
    goto L56;

  anon28_Then:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    status_59 := -1073741811;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1363} sdv_IoCompleteRequest(0, 0);
    goto L44;

  anon25_Then:
    call {:si_unique_call 1364} status_59 := Sbp2QueryProperty(DeviceObject_43, Irp_26);
    goto L44;

  anon29_Then:
    call {:si_unique_call 1365} status_59 := Sbp2HandleApiRequest(pdoExtension_19, Irp_26);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    call {:si_unique_call 1366} status_59 := Sbp2ScsiPassThrough(DeviceObject_43, Irp_26, 1);
    goto L44;

  anon31_Then:
    call {:si_unique_call 1367} status_59 := Sbp2ScsiPassThrough(DeviceObject_43, Irp_26, 0);
    goto L44;

  anon24_Then:
    call {:si_unique_call 1368} status_59 := Sbp2ScsiGetCapabilities(DeviceObject_43, Irp_26);
    goto L44;

  anon23_Then:
    status_59 := -1073741637;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1369} sdv_IoCompleteRequest(0, 0);
    goto L44;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int)
{
  var {:pointer} NextEntry: int;
  var {:pointer} ListHead_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_167: int;

  anon0:
    call {:si_unique_call 1370} vslice_dummy_var_196 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc NextEntry;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    havoc vslice_dummy_var_167;
    call {:si_unique_call 1371} FatalListEntryError(ListHead_3, NextEntry, vslice_dummy_var_167);
    goto L8;

  L8:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;

  anon3_Then:
    goto L8;
}



procedure {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_2036: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_2036 == -1073741670 || Tmp_2036 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_2036: int)
{
  var {:pointer} Tmp_2037: int;
  var {:scalar} Tmp_2038: int;
  var {:scalar} Tmp_2039: int;
  var {:pointer} Tmp_2040: int;
  var {:pointer} sdv_634: int;
  var {:scalar} Tmp_2041: int;
  var {:scalar} Tmp_2042: int;
  var {:pointer} Tmp_2043: int;
  var {:scalar} Tmp_2045: int;
  var {:scalar} status_60: int;
  var {:pointer} DeviceInfo_3: int;
  var {:pointer} uniCompatIds: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_168: int;

  anon0:
    DeviceInfo_3 := actual_DeviceInfo_3;
    uniCompatIds := actual_uniCompatIds;
    call {:si_unique_call 1372} Tmp_2037 := __HAVOC_malloc(4);
    call {:si_unique_call 1373} Tmp_2040 := __HAVOC_malloc(56);
    status_60 := 0;
    call {:si_unique_call 1374} sdv_do_paged_code_check();
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_2039;
    call {:si_unique_call 1375} sdv_634 := ExAllocatePoolWithTag(1, Tmp_2039, 846226003);
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    havoc Tmp_2037;
    assume {:nonnull} Tmp_2037 != 0;
    assume Tmp_2037 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2037], 2) != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_2043;
    havoc Tmp_2045;
    call {:si_unique_call 1376} WPP_SF_(Tmp_2045, 106, Tmp_2043);
    goto L30;

  L30:
    status_60 := -1073741670;
    goto L28;

  L28:
    Tmp_2036 := status_60;
    return;

  anon10_Then:
    goto L30;

  anon12_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2037], 2) == 0;
    goto L30;

  anon9_Then:
    goto L30;

  anon11_Then:
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_2041;
    call {:si_unique_call 1377} sdv_RtlZeroMemory(0, Tmp_2041);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc Tmp_2042;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_2038;
    Tmp_2040 := strConst__li2bpl32;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc vslice_dummy_var_168;
    call {:si_unique_call 1378} vslice_dummy_var_197 := RtlStringCbPrintfW(vslice_dummy_var_168, Tmp_2038, Tmp_2040);
    goto L28;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int)
{
  var {:pointer} ListHead_4: int;
  var vslice_dummy_var_198: int;

  anon0:
    call {:si_unique_call 1379} vslice_dummy_var_198 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:origName "Sbp2RequestTimeoutDpc"} Sbp2RequestTimeoutDpc(actual_Dpc_4: int, actual_PdoExtensionIn_1: int, actual_SystemArgument1_1: int, actual_SystemArgument2_1: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RequestTimeoutDpc"} Sbp2RequestTimeoutDpc(actual_Dpc_4: int, actual_PdoExtensionIn_1: int, actual_SystemArgument1_1: int, actual_SystemArgument2_1: int)
{
  var {:scalar} Tmp_2048: int;
  var {:scalar} Tmp_2049: int;
  var {:scalar} Tmp_2050: int;
  var {:scalar} Time: int;
  var {:pointer} Tmp_2052: int;
  var {:pointer} Tmp_2053: int;
  var {:scalar} Tmp_2054: int;
  var {:scalar} sdv_636: int;
  var {:pointer} Tmp_2055: int;
  var {:scalar} orbLock_10: int;
  var {:scalar} Tmp_2056: int;
  var {:pointer} Tmp_2057: int;
  var {:pointer} Tmp_2058: int;
  var {:pointer} Tmp_2059: int;
  var {:pointer} Tmp_2061: int;
  var {:pointer} Tmp_2062: int;
  var {:pointer} Tmp_2063: int;
  var {:pointer} Tmp_2064: int;
  var {:pointer} Tmp_2065: int;
  var {:pointer} sdv_640: int;
  var {:pointer} PdoExtension_25: int;
  var {:scalar} Tmp_2066: int;
  var {:pointer} Tmp_2067: int;
  var {:pointer} Tmp_2068: int;
  var {:pointer} Tmp_2069: int;
  var {:pointer} Tmp_2070: int;
  var {:pointer} irp_8: int;
  var {:pointer} current: int;
  var {:pointer} Tmp_2071: int;
  var {:pointer} Tmp_2072: int;
  var {:pointer} Tmp_2073: int;
  var {:scalar} Tmp_2074: int;
  var {:pointer} Tmp_2075: int;
  var {:scalar} status_61: int;
  var {:scalar} tmp_3: int;
  var {:scalar} Tmp_2076: int;
  var {:pointer} Tmp_2077: int;
  var {:pointer} Tmp_2078: int;
  var {:scalar} bEndOfList: int;
  var {:scalar} Tmp_2079: int;
  var {:pointer} Tmp_2080: int;
  var {:pointer} sdv_645: int;
  var {:pointer} Tmp_2081: int;
  var {:scalar} Tmp_2082: int;
  var {:pointer} Dpc_4: int;
  var {:pointer} PdoExtensionIn_1: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;

  anon0:
    call {:si_unique_call 1380} vslice_dummy_var_199 := __HAVOC_malloc(4);
    call {:si_unique_call 1381} Time := __HAVOC_malloc(20);
    call {:si_unique_call 1382} orbLock_10 := __HAVOC_malloc(12);
    Dpc_4 := actual_Dpc_4;
    PdoExtensionIn_1 := actual_PdoExtensionIn_1;
    call {:si_unique_call 1383} Tmp_2052 := __HAVOC_malloc(4);
    call {:si_unique_call 1384} Tmp_2055 := __HAVOC_malloc(64);
    call {:si_unique_call 1385} Tmp_2058 := __HAVOC_malloc(4);
    call {:si_unique_call 1386} Tmp_2059 := __HAVOC_malloc(4);
    call {:si_unique_call 1387} Tmp_2062 := __HAVOC_malloc(4);
    call {:si_unique_call 1388} Tmp_2067 := __HAVOC_malloc(4);
    call {:si_unique_call 1389} Tmp_2070 := __HAVOC_malloc(4);
    call {:si_unique_call 1390} Tmp_2073 := __HAVOC_malloc(4);
    call {:si_unique_call 1391} Tmp_2078 := __HAVOC_malloc(4);
    PdoExtension_25 := PdoExtensionIn_1;
    current := 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    status_61 := -1073741643;
    call {:si_unique_call 1392} AcquireOrbListLock(PdoExtension_25, orbLock_10, 1);
    call {:si_unique_call 1393} sdv_636 := sdv_IsListEmpty(0);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_636 == 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    havoc Tmp_2058;
    assume {:nonnull} Tmp_2058 != 0;
    assume Tmp_2058 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2058], 1) != 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_2061;
    havoc Tmp_2079;
    call {:si_unique_call 1394} WPP_SF_qq(Tmp_2079, 53, Tmp_2061, PdoExtension_25, Dpc_4);
    goto L44;

  L44:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    havoc Tmp_2073;
    assume {:nonnull} Tmp_2073 != 0;
    assume Tmp_2073 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2073], 1) != 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_2081;
    havoc Tmp_2054;
    call {:si_unique_call 1395} WPP_SF_qq(Tmp_2054, 54, Tmp_2081, PdoExtension_25, Dpc_4);
    goto L59;

  L59:
    call {:si_unique_call 1396} ReleaseOrbListLock(PdoExtension_25, orbLock_10, 1);
    call {:si_unique_call 1397} CleanupOrbList#1(PdoExtension_25, -1073741632);
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon134_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    goto L59;

  anon133_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2073], 1) == 0;
    goto L59;

  anon109_Then:
    goto L59;

  anon107_Then:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc vslice_dummy_var_169;
    call {:si_unique_call 1398} sdv_640 := sdv_containing_record(vslice_dummy_var_169, 0);
    current := sdv_640;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc Tmp_2050;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} 16384 != Tmp_2050;
    bEndOfList := 0;
    goto L297;

  L297:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} bEndOfList != 0;
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_2062;
    assume {:nonnull} Tmp_2062 != 0;
    assume Tmp_2062 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2062], 1) != 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    havoc Tmp_2072;
    havoc Tmp_2056;
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc Tmp_2077;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    assume {:nonnull} Tmp_2077 != 0;
    assume Tmp_2077 > 0;
    havoc vslice_dummy_var_170;
    havoc vslice_dummy_var_171;
    call {:si_unique_call 1399} WPP_SF_qqD(Tmp_2056, 55, Tmp_2072, PdoExtension_25, vslice_dummy_var_170, vslice_dummy_var_171);
    goto L84;

  L84:
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc Tmp_2075;
    assume {:nonnull} Tmp_2075 != 0;
    assume Tmp_2075 > 0;
    havoc irp_8;
    assume {:nonnull} irp_8 != 0;
    assume irp_8 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} current != 0;
    assume current > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    call {:si_unique_call 1400} vslice_dummy_var_203 := KeSetTimer(0, Time, 0);
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    call {:si_unique_call 1401} status_61 := Sbp2AccessRegister#1(PdoExtension_25, Reserved__DEVICE_EXTENSION(PdoExtension_25), 1032);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} yogi_error != 1;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_2070;
    assume {:nonnull} Tmp_2070 != 0;
    assume Tmp_2070 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2070], 1) != 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    havoc Tmp_2063;
    havoc Tmp_2082;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc vslice_dummy_var_172;
    call {:si_unique_call 1402} WPP_SF_qDD(Tmp_2082, 56, Tmp_2063, PdoExtension_25, status_61, vslice_dummy_var_172);
    goto L106;

  L106:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} status_61 >= 0;
    call {:si_unique_call 1403} ReleaseOrbListLock(PdoExtension_25, orbLock_10, 1);
    goto L1;

  anon117_Then:
    assume {:partition} 0 > status_61;
    goto L77;

  L77:
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_2078;
    assume {:nonnull} Tmp_2078 != 0;
    assume Tmp_2078 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2078], 1) != 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    havoc Tmp_2053;
    havoc Tmp_2048;
    call {:si_unique_call 1404} WPP_SF_(Tmp_2048, 57, Tmp_2053);
    goto L118;

  L118:
    call {:si_unique_call 1405} current, sdv_645 := Sbp2RequestTimeoutDpc_loop_L118(PdoExtension_25, current, sdv_645, Dpc_4);
    goto L118_last;

  L118_last:
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} TimerDpc__ASYNC_REQUEST_CONTEXT(current) == Dpc_4;
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} current != 0;
    assume current > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc Tmp_2059;
    assume {:nonnull} Tmp_2059 != 0;
    assume Tmp_2059 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2059], 1) != 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc Tmp_2064;
    havoc Tmp_2076;
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc Tmp_2057;
    assume {:nonnull} Tmp_2057 != 0;
    assume Tmp_2057 > 0;
    havoc vslice_dummy_var_173;
    call {:si_unique_call 1406} WPP_SF_qq(Tmp_2076, 58, Tmp_2064, vslice_dummy_var_173, PdoExtension_25);
    goto L139;

  L139:
    call {:si_unique_call 1407} ReleaseOrbListLock(PdoExtension_25, orbLock_10, 1);
    goto L1;

  anon124_Then:
    goto L139;

  anon139_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2059], 1) == 0;
    goto L139;

  anon123_Then:
    goto L139;

  anon122_Then:
    assume {:nonnull} current != 0;
    assume current > 0;
    call {:si_unique_call 1408} vslice_dummy_var_202 := KeCancelTimer(0);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    havoc Tmp_2067;
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2067], 1) != 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc Tmp_2068;
    assume {:nonnull} Tmp_2068 != 0;
    assume Tmp_2068 > 0;
    havoc Tmp_2055;
    assume {:nonnull} Tmp_2055 != 0;
    assume Tmp_2055 > 0;
    Tmp_2074 := Mem_T.INT4[Tmp_2055];
    havoc Tmp_2069;
    havoc Tmp_2066;
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc Tmp_2080;
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc Tmp_2071;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    assume {:nonnull} Tmp_2071 != 0;
    assume Tmp_2071 > 0;
    assume {:nonnull} Tmp_2080 != 0;
    assume Tmp_2080 > 0;
    havoc vslice_dummy_var_174;
    havoc vslice_dummy_var_175;
    havoc vslice_dummy_var_176;
    call {:si_unique_call 1409} WPP_SF_qqdDD(Tmp_2066, 59, Tmp_2069, PdoExtension_25, vslice_dummy_var_174, vslice_dummy_var_175, Tmp_2074, vslice_dummy_var_176);
    goto L157;

  L157:
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc vslice_dummy_var_177;
    call {:si_unique_call 1410} Sbp2AddLog(PdoExtension_25, 64, -917547921, vslice_dummy_var_177, current);
    call {:si_unique_call 1411} ReleaseOrbListLock(PdoExtension_25, orbLock_10, 1);
    call {:si_unique_call 1412} CleanupOrbList#1(PdoExtension_25, -1073741643);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1413} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc tmp_3;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    call {:si_unique_call 1414} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1415} status_61 := Sbp2UpdateNodeInformation#1(PdoExtension_25);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} yogi_error != 1;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} status_61 < 0;
    goto L206;

  L206:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_61 >= 0;
    goto L210;

  L210:
    call {:si_unique_call 1416} vslice_dummy_var_200 := Sbp2RestartPendingPowerIrp#1(PdoExtension_25);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon146_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon129_Then:
    assume {:partition} 0 > status_61;
    call {:si_unique_call 1417} CleanupOrbList#1(PdoExtension_25, status_61);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} yogi_error != 1;
    goto L210;

  anon147_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon127_Then:
    assume {:partition} 0 <= status_61;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc vslice_dummy_var_178;
    call {:si_unique_call 1418} status_61 := Sbp2Reset#1(vslice_dummy_var_178, tmp_3);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} yogi_error != 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_61 < 0;
    goto L206;

  anon128_Then:
    assume {:partition} 0 <= status_61;
    goto L1;

  anon145_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon144_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    call {:si_unique_call 1419} vslice_dummy_var_201 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_25), 0, 0);
    goto L215;

  L215:
    call {:si_unique_call 1420} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc vslice_dummy_var_179;
    call {:si_unique_call 1421} Sbp2CreateRequestErrorLog(vslice_dummy_var_179, current, 3082, -1073741643);
    call {:si_unique_call 1422} Sbp2StartQueue#1(PdoExtension_25);
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1423} IoInvalidateDeviceState(0);
    goto L1;

  anon149_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    goto L215;

  anon142_Then:
    call {:si_unique_call 1424} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc vslice_dummy_var_180;
    call {:si_unique_call 1425} Sbp2AddLog(PdoExtension_25, 64, -917547983, vslice_dummy_var_180, current);
    goto L1;

  anon141_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon126_Then:
    goto L157;

  anon140_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2067], 1) == 0;
    goto L157;

  anon125_Then:
    goto L157;

  anon121_Then:
    goto L131;

  L131:
    assume {:nonnull} current != 0;
    assume current > 0;
    havoc current;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc vslice_dummy_var_181;
    call {:si_unique_call 1426} sdv_645 := sdv_containing_record(vslice_dummy_var_181, 0);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} current == sdv_645;
    call {:si_unique_call 1427} ReleaseOrbListLock(PdoExtension_25, orbLock_10, 1);
    goto L206;

  anon130_Then:
    assume {:partition} current != sdv_645;
    goto anon130_Then_dummy;

  anon130_Then_dummy:
    assume false;
    return;

  anon119_Then:
    assume {:partition} TimerDpc__ASYNC_REQUEST_CONTEXT(current) != Dpc_4;
    goto L131;

  anon120_Then:
    goto L118;

  anon138_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2078], 1) == 0;
    goto L118;

  anon137_Then:
    goto L118;

  anon111_Then:
    goto L118;

  anon118_Then:
    goto L106;

  anon153_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2070], 1) == 0;
    goto L106;

  anon116_Then:
    goto L106;

  anon152_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon151_Then:
    goto L77;

  anon115_Then:
    goto L84;

  anon150_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2062], 1) == 0;
    goto L84;

  anon114_Then:
    goto L84;

  anon113_Then:
    goto L77;

  anon112_Then:
    goto L77;

  anon136_Then:
    assume {:partition} bEndOfList == 0;
    goto L77;

  anon135_Then:
    assume {:partition} 16384 == Tmp_2050;
    bEndOfList := 1;
    goto L297;

  anon108_Then:
    goto L44;

  anon132_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2058], 1) == 0;
    goto L44;

  anon106_Then:
    goto L44;

  anon103_Then:
    assume {:partition} sdv_636 != 0;
    call {:si_unique_call 1428} ReleaseOrbListLock(PdoExtension_25, orbLock_10, 1);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    havoc Tmp_2052;
    assume {:nonnull} Tmp_2052 != 0;
    assume Tmp_2052 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2052], 1) != 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    havoc Tmp_2065;
    havoc Tmp_2049;
    call {:si_unique_call 1429} WPP_SF_qq(Tmp_2049, 52, Tmp_2065, PdoExtension_25, Dpc_4);
    goto L1;

  anon105_Then:
    goto L1;

  anon131_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2052], 1) == 0;
    goto L1;

  anon104_Then:
    goto L1;
}



procedure {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_44: int, actual_Irp_27: int) returns (Tmp_2083: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_44: int, actual_Irp_27: int) returns (Tmp_2083: int)
{
  var {:pointer} newIrpSp: int;
  var {:pointer} newIrp: int;
  var {:scalar} status_62: int;
  var {:scalar} event_3: int;
  var {:pointer} DeviceObject_44: int;
  var {:pointer} Irp_27: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_182: int;

  anon0:
    call {:si_unique_call 1430} event_3 := __HAVOC_malloc(156);
    DeviceObject_44 := actual_DeviceObject_44;
    Irp_27 := actual_Irp_27;
    status_62 := 0;
    call {:si_unique_call 1431} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_44 != 0;
    assume DeviceObject_44 > 0;
    havoc vslice_dummy_var_182;
    call {:si_unique_call 1432} newIrp := IoAllocateIrp(vslice_dummy_var_182, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 1433} vslice_dummy_var_204 := sdv_IoGetCurrentIrpStackLocation(Irp_27);
    call {:si_unique_call 1434} newIrpSp := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 1435} sdv_RtlCopyMemory(0, 0, 28);
    assume {:nonnull} newIrpSp != 0;
    assume newIrpSp > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    call {:si_unique_call 1436} KeInitializeEvent(event_3, 0, 0);
    call {:si_unique_call 1437} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant399, event_3, 1, 1, 1);
    call {:si_unique_call 1438} status_62 := sdv_IoCallDriver(DeviceObject_44, newIrp);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_62 == 259;
    call {:si_unique_call 1439} vslice_dummy_var_205 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  L42:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    havoc status_62;
    call {:si_unique_call 1440} IoFreeIrp(0);
    goto L49;

  L49:
    Tmp_2083 := status_62;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} status_62 != 259;
    goto L42;

  anon7_Then:
    assume {:partition} newIrp == 0;
    status_62 := -1073741670;
    goto L49;
}



procedure {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_109: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_109: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int)
{
  var {:pointer} TraceGuid_28: int;
  var vslice_dummy_var_206: int;

  anon0:
    call {:si_unique_call 1441} vslice_dummy_var_206 := __HAVOC_malloc(4);
    TraceGuid_28 := actual_TraceGuid_28;
    return;
}



procedure {:origName "WPP_SF_"} WPP_SF_(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_"} WPP_SF_(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int)
{
  var {:pointer} TraceGuid_29: int;
  var vslice_dummy_var_207: int;

  anon0:
    call {:si_unique_call 1442} vslice_dummy_var_207 := __HAVOC_malloc(4);
    TraceGuid_29 := actual_TraceGuid_29;
    return;
}



procedure {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_2091: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_2091 == -1073741670 || Tmp_2091 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_2091: int)
{
  var {:scalar} Tmp_2092: int;
  var {:pointer} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:scalar} Tmp_2096: int;
  var {:scalar} Tmp_2097: int;
  var {:pointer} sdv_653: int;
  var {:scalar} Tmp_2098: int;
  var {:scalar} Tmp_2099: int;
  var {:pointer} Tmp_2100: int;
  var {:pointer} Tmp_2101: int;
  var {:pointer} Tmp_2102: int;
  var {:scalar} status_63: int;
  var {:pointer} Tmp_2103: int;
  var {:scalar} Tmp_2104: int;
  var {:scalar} TextType: int;
  var {:pointer} DeviceInfo_4: int;
  var {:pointer} uniDeviceText: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;

  anon0:
    TextType := actual_TextType;
    DeviceInfo_4 := actual_DeviceInfo_4;
    uniDeviceText := actual_uniDeviceText;
    call {:si_unique_call 1443} Tmp_2095 := __HAVOC_malloc(188);
    call {:si_unique_call 1444} Tmp_2100 := __HAVOC_malloc(120);
    call {:si_unique_call 1445} Tmp_2102 := __HAVOC_malloc(4);
    call {:si_unique_call 1446} Tmp_2103 := __HAVOC_malloc(28);
    status_63 := 0;
    call {:si_unique_call 1447} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2092;
    call {:si_unique_call 1448} sdv_653 := ExAllocatePoolWithTag(1, Tmp_2092, 846226003);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_2102;
    assume {:nonnull} Tmp_2102 != 0;
    assume Tmp_2102 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2102], 2) != 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_2094;
    havoc Tmp_2099;
    call {:si_unique_call 1449} WPP_SF_(Tmp_2099, 108, Tmp_2094);
    goto L43;

  L43:
    status_63 := -1073741670;
    goto L26;

  L26:
    Tmp_2091 := status_63;
    return;

  anon22_Then:
    goto L43;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2102], 2) == 0;
    goto L43;

  anon21_Then:
    goto L43;

  anon23_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2096;
    call {:si_unique_call 1450} sdv_RtlZeroMemory(0, Tmp_2096);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} TextType != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} TextType == 1;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2104;
    Tmp_2103 := strConst__li2bpl34;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_183;
    call {:si_unique_call 1451} vslice_dummy_var_208 := RtlStringCbPrintfW(vslice_dummy_var_183, Tmp_2104, Tmp_2103);
    goto L26;

  anon19_Then:
    assume {:partition} TextType != 1;
    goto L26;

  anon17_Then:
    assume {:partition} TextType == 0;
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    havoc Tmp_2101;
    goto L35;

  L35:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2097;
    Tmp_2100 := strConst__li2bpl35;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_184;
    call {:si_unique_call 1452} vslice_dummy_var_209 := RtlStringCbPrintfW(vslice_dummy_var_184, Tmp_2097, Tmp_2100);
    goto L26;

  anon20_Then:
    Tmp_2101 := strConst__li2bpl33;
    goto L35;

  anon18_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2098;
    Tmp_2095 := strConst__li2bpl36;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_185;
    call {:si_unique_call 1453} vslice_dummy_var_210 := RtlStringCbPrintfW(vslice_dummy_var_185, Tmp_2098, Tmp_2095);
    goto L26;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_2105: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_2105: int)
{
  var {:pointer} NextEntry_1: int;
  var {:pointer} Entry_2: int;
  var {:pointer} ListHead_5: int;

  anon0:
    ListHead_5 := actual_ListHead_5;
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc NextEntry_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L9;

  L9:
    call {:si_unique_call 1454} FatalListEntryError(ListHead_5, Entry_2, NextEntry_1);
    goto L12;

  L12:
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    assume {:nonnull} NextEntry_1 != 0;
    assume NextEntry_1 > 0;
    Tmp_2105 := Entry_2;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L12;

  anon5_Then:
    goto L9;
}



procedure {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_46: int, actual_Irp_28: int) returns (Tmp_2136: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_46: int, actual_Irp_28: int) returns (Tmp_2136: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} irpStack_19: int;
  var {:pointer} Tmp_2137: int;
  var {:scalar} Tmp_2138: int;
  var {:pointer} Tmp_2139: int;
  var {:scalar} Tmp_2140: int;
  var {:pointer} Tmp_2141: int;
  var {:pointer} deviceCapabilities: int;
  var {:pointer} fdoExtension_12: int;
  var {:pointer} sdv_678: int;
  var {:pointer} Tmp_2142: int;
  var {:scalar} status_65: int;
  var {:scalar} event_4: int;
  var {:pointer} DeviceObject_46: int;
  var {:pointer} Irp_28: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;

  anon0:
    call {:si_unique_call 1455} event_4 := __HAVOC_malloc(156);
    DeviceObject_46 := actual_DeviceObject_46;
    Irp_28 := actual_Irp_28;
    call {:si_unique_call 1456} Tmp_2141 := __HAVOC_malloc(4);
    call {:si_unique_call 1457} Tmp_2142 := __HAVOC_malloc(4);
    call {:si_unique_call 1458} irpStack_19 := sdv_IoGetCurrentIrpStackLocation(Irp_28);
    assume {:nonnull} DeviceObject_46 != 0;
    assume DeviceObject_46 > 0;
    havoc fdoExtension_12;
    call {:si_unique_call 1459} status_65 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} status_65 >= 0;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L34;

  L34:
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1460} vslice_dummy_var_211 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_12), 0);
    call {:si_unique_call 1461} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    havoc vslice_dummy_var_186;
    call {:si_unique_call 1462} status_65 := sdv_IoCallDriver(vslice_dummy_var_186, Irp_28);
    Tmp_2136 := status_65;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon52_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto L34;

  anon53_Then:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc deviceCapabilities;
    assume {:nonnull} deviceCapabilities != 0;
    assume deviceCapabilities > 0;
    goto L34;

  anon54_Then:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_2142;
    assume {:nonnull} Tmp_2142 != 0;
    assume Tmp_2142 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2142], 2) != 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_2137;
    havoc Tmp_2140;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc vslice_dummy_var_187;
    call {:si_unique_call 1463} WPP_SF_qD(Tmp_2140, 97, Tmp_2137, fdoExtension_12, vslice_dummy_var_187);
    goto L48;

  L48:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1464} sdv_678 := ExAllocatePoolWithTag(1, 48, -230399405);
    deviceRelations := sdv_678;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} deviceRelations == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_2141;
    assume {:nonnull} Tmp_2141 != 0;
    assume Tmp_2141 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2141], 2) != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_2139;
    havoc Tmp_2138;
    call {:si_unique_call 1465} WPP_SF_q(Tmp_2138, 98, Tmp_2139, fdoExtension_12);
    goto L86;

  L86:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1466} vslice_dummy_var_216 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_12), 0);
    call {:si_unique_call 1467} sdv_IoCompleteRequest(0, 0);
    Tmp_2136 := -1073741670;
    goto L1;

  anon49_Then:
    goto L86;

  anon63_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2141], 2) == 0;
    goto L86;

  anon48_Then:
    goto L86;

  anon60_Then:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 1468} status_65 := Sbp2CreateDeviceRelations(fdoExtension_12, deviceRelations);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_65 >= 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto L34;

  anon62_Then:
    assume {:partition} 0 > status_65;
    call {:si_unique_call 1469} ExFreePoolWithTag(0, -230399405);
    deviceRelations := 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1470} vslice_dummy_var_215 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_12), 0);
    call {:si_unique_call 1471} sdv_IoCompleteRequest(0, 0);
    Tmp_2136 := status_65;
    goto L1;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L34;

  anon47_Then:
    goto L48;

  anon59_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2142], 2) == 0;
    goto L48;

  anon45_Then:
    goto L48;

  anon55_Then:
    call {:si_unique_call 1472} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 1473} vslice_dummy_var_212 := Sbp2CleanDeviceExtension#1(DeviceObject_46, 1, 1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1474} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    havoc vslice_dummy_var_188;
    call {:si_unique_call 1475} status_65 := sdv_IoCallDriver(vslice_dummy_var_188, Irp_28);
    call {:si_unique_call 1476} IoDetachDevice(0);
    call {:si_unique_call 1477} IoDeleteDevice(0);
    Tmp_2136 := status_65;
    goto L1;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    call {:si_unique_call 1478} KeInitializeEvent(event_4, 1, 0);
    call {:si_unique_call 1479} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    call {:si_unique_call 1480} sdv_IoSetCompletionRoutine(Irp_28, li2bplFunctionConstant385, event_4, 1, 1, 1);
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    havoc vslice_dummy_var_189;
    call {:si_unique_call 1481} status_65 := sdv_IoCallDriver(vslice_dummy_var_189, Irp_28);
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L131;

  L131:
    call {:si_unique_call 1482} vslice_dummy_var_213 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1483} status_65 := Sbp2StartDevice(DeviceObject_46);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L138;

  L138:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1484} vslice_dummy_var_214 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_12), 0);
    call {:si_unique_call 1485} sdv_IoCompleteRequest(0, 0);
    Tmp_2136 := status_65;
    goto L1;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_65 != 259;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc status_65;
    goto L138;

  anon51_Then:
    assume {:partition} status_65 == 259;
    goto L131;

  anon43_Then:
    assume {:partition} 0 > status_65;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    call {:si_unique_call 1486} sdv_IoCompleteRequest(0, 0);
    Tmp_2136 := status_65;
    goto L1;
}



procedure {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_112: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_112: int)
{
  var {:pointer} TraceGuid_30: int;
  var vslice_dummy_var_217: int;

  anon0:
    call {:si_unique_call 1487} vslice_dummy_var_217 := __HAVOC_malloc(4);
    TraceGuid_30 := actual_TraceGuid_30;
    return;
}



procedure {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_2147: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_2147 == 0 || Tmp_2147 == 5 || Tmp_2147 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_2147: int)
{
  var {:scalar} cchDest_3: int;
  var {:pointer} argList_1: int;
  var {:scalar} status_66: int;
  var {:pointer} pszDest_3: int;
  var {:scalar} cbDest: int;
  var {:pointer} pszFormat_1: int;
  var vslice_dummy_var_190: int;

  anon0:
    pszDest_3 := actual_pszDest_3;
    cbDest := actual_cbDest;
    call {:si_unique_call 1488} pszFormat_1 := __HAVOC_malloc(4);
    cchDest_3 := INTDIV(cbDest, 1);
    call {:si_unique_call 1489} status_66 := RtlStringValidateDestA_sdv_static_function_1(pszDest_3, cchDest_3, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_66 >= 0;
    argList_1 := pszFormat_1;
    assume {:nonnull} pszFormat_1 != 0;
    assume pszFormat_1 > 0;
    havoc vslice_dummy_var_190;
    call {:si_unique_call 1490} status_66 := RtlStringVPrintfWorkerA_sdv_static_function_1(pszDest_3, cchDest_3, 0, vslice_dummy_var_190, argList_1);
    argList_1 := 0;
    goto L19;

  L19:
    Tmp_2147 := status_66;
    return;

  anon5_Then:
    assume {:partition} 0 > status_66;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_3 > 0;
    assume {:nonnull} pszDest_3 != 0;
    assume pszDest_3 > 0;
    Mem_T.INT4[pszDest_3] := 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_3;
    goto L19;
}



procedure {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_2149: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_2149: int)
{
  var {:scalar} sdv_684: int;

  anon0:
    Tmp_2149 := sdv_684;
    return;
}



procedure {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_2151: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2151 == -1073741670 || Tmp_2151 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_2151: int)
{
  var {:pointer} Tmp_2162: int;
  var {:scalar} uniCmdSetId: int;
  var {:pointer} Tmp_2166: int;
  var {:pointer} sdv_701: int;
  var {:scalar} Tmp_2168: int;
  var {:scalar} Tmp_2169: int;
  var {:pointer} Tmp_2170: int;
  var {:scalar} Tmp_2171: int;
  var {:pointer} Tmp_2173: int;
  var {:scalar} Tmp_2177: int;
  var {:scalar} Tmp_2178: int;
  var {:scalar} uniModelId: int;
  var {:scalar} uniLunNumber: int;
  var {:scalar} Tmp_2179: int;
  var {:pointer} Tmp_2181: int;
  var {:scalar} uniRevision: int;
  var {:pointer} sdv_713: int;
  var {:pointer} sdv_715: int;
  var {:pointer} Tmp_2182: int;
  var {:pointer} Tmp_2183: int;
  var {:scalar} Tmp_2184: int;
  var {:scalar} Tmp_2186: int;
  var {:scalar} Tmp_2187: int;
  var {:pointer} sdv_722: int;
  var {:scalar} status_67: int;
  var {:scalar} Tmp_2189: int;
  var {:scalar} Tmp_2192: int;
  var {:scalar} Tmp_2194: int;
  var {:scalar} Tmp_2195: int;
  var {:pointer} DeviceInfo_5: int;
  var {:pointer} uniHardwareIds: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_191: int;

  anon0:
    call {:si_unique_call 1491} uniCmdSetId := __HAVOC_malloc(12);
    call {:si_unique_call 1492} uniModelId := __HAVOC_malloc(12);
    call {:si_unique_call 1493} uniLunNumber := __HAVOC_malloc(12);
    call {:si_unique_call 1494} uniRevision := __HAVOC_malloc(12);
    DeviceInfo_5 := actual_DeviceInfo_5;
    uniHardwareIds := actual_uniHardwareIds;
    call {:si_unique_call 1495} vslice_dummy_var_234 := __HAVOC_malloc(116);
    call {:si_unique_call 1496} vslice_dummy_var_235 := __HAVOC_malloc(16);
    call {:si_unique_call 1497} vslice_dummy_var_236 := __HAVOC_malloc(8);
    call {:si_unique_call 1498} vslice_dummy_var_237 := __HAVOC_malloc(116);
    call {:si_unique_call 1499} vslice_dummy_var_238 := __HAVOC_malloc(116);
    call {:si_unique_call 1500} vslice_dummy_var_239 := __HAVOC_malloc(24);
    call {:si_unique_call 1501} vslice_dummy_var_240 := __HAVOC_malloc(20);
    call {:si_unique_call 1502} vslice_dummy_var_241 := __HAVOC_malloc(36);
    call {:si_unique_call 1503} vslice_dummy_var_242 := __HAVOC_malloc(8);
    call {:si_unique_call 1504} Tmp_2162 := __HAVOC_malloc(4);
    call {:si_unique_call 1505} vslice_dummy_var_243 := __HAVOC_malloc(16);
    call {:si_unique_call 1506} vslice_dummy_var_244 := __HAVOC_malloc(36);
    call {:si_unique_call 1507} vslice_dummy_var_245 := __HAVOC_malloc(24);
    call {:si_unique_call 1508} Tmp_2166 := __HAVOC_malloc(56);
    call {:si_unique_call 1509} vslice_dummy_var_246 := __HAVOC_malloc(8);
    call {:si_unique_call 1510} Tmp_2170 := __HAVOC_malloc(4);
    call {:si_unique_call 1511} vslice_dummy_var_247 := __HAVOC_malloc(24);
    call {:si_unique_call 1512} vslice_dummy_var_248 := __HAVOC_malloc(8);
    call {:si_unique_call 1513} vslice_dummy_var_249 := __HAVOC_malloc(8);
    call {:si_unique_call 1514} vslice_dummy_var_250 := __HAVOC_malloc(24);
    call {:si_unique_call 1515} vslice_dummy_var_251 := __HAVOC_malloc(8);
    call {:si_unique_call 1516} Tmp_2182 := __HAVOC_malloc(4);
    call {:si_unique_call 1517} vslice_dummy_var_252 := __HAVOC_malloc(8);
    call {:si_unique_call 1518} vslice_dummy_var_253 := __HAVOC_malloc(8);
    call {:si_unique_call 1519} vslice_dummy_var_254 := __HAVOC_malloc(8);
    call {:si_unique_call 1520} vslice_dummy_var_255 := __HAVOC_malloc(24);
    call {:si_unique_call 1521} vslice_dummy_var_256 := __HAVOC_malloc(116);
    status_67 := 0;
    call {:si_unique_call 1522} sdv_do_paged_code_check();
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2179;
    call {:si_unique_call 1523} sdv_701 := ExAllocatePoolWithTag(1, Tmp_2179, 846226003);
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_2170;
    assume {:nonnull} Tmp_2170 != 0;
    assume Tmp_2170 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2170], 2) != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_2173;
    havoc Tmp_2192;
    call {:si_unique_call 1524} WPP_SF_(Tmp_2192, 103, Tmp_2173);
    goto L252;

  L252:
    status_67 := -1073741670;
    goto L218;

  L218:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 1525} sdv_ExFreePool(0);
    goto L219;

  L219:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1526} sdv_ExFreePool(0);
    goto L223;

  L223:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 1527} sdv_ExFreePool(0);
    goto L227;

  L227:
    Tmp_2151 := status_67;
    return;

  anon55_Then:
    goto L227;

  anon54_Then:
    goto L223;

  anon53_Then:
    goto L219;

  anon61_Then:
    goto L252;

  anon69_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2170], 2) == 0;
    goto L252;

  anon60_Then:
    goto L252;

  anon62_Then:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2194;
    call {:si_unique_call 1528} sdv_RtlZeroMemory(0, Tmp_2194);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_2184;
    call {:si_unique_call 1529} vslice_dummy_var_257 := RtlIntegerToUnicodeString(Tmp_2184, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2178;
    call {:si_unique_call 1530} sdv_713 := ExAllocatePoolWithTag(1, Tmp_2178, 846226003);
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2195;
    call {:si_unique_call 1531} sdv_RtlZeroMemory(0, Tmp_2195);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_2189;
    call {:si_unique_call 1532} vslice_dummy_var_258 := RtlIntegerToUnicodeString(Tmp_2189, 16, 0);
    goto L35;

  L35:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_2169;
    call {:si_unique_call 1533} sdv_715 := ExAllocatePoolWithTag(1, Tmp_2169, 846226003);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_2182;
    assume {:nonnull} Tmp_2182 != 0;
    assume Tmp_2182 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2182], 2) != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_2183;
    havoc Tmp_2186;
    call {:si_unique_call 1534} WPP_SF_(Tmp_2186, 104, Tmp_2183);
    goto L242;

  L242:
    status_67 := -1073741670;
    goto L218;

  anon59_Then:
    goto L242;

  anon68_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2182], 2) == 0;
    goto L242;

  anon58_Then:
    goto L242;

  anon64_Then:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_2168;
    call {:si_unique_call 1535} sdv_RtlZeroMemory(0, Tmp_2168);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc vslice_dummy_var_191;
    call {:si_unique_call 1536} vslice_dummy_var_218 := RtlIntegerToUnicodeString(vslice_dummy_var_191, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    goto L76;

  L76:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_2177;
    call {:si_unique_call 1537} sdv_722 := ExAllocatePoolWithTag(1, Tmp_2177, 846226003);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_2162;
    assume {:nonnull} Tmp_2162 != 0;
    assume Tmp_2162 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2162], 2) != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_2181;
    havoc Tmp_2171;
    call {:si_unique_call 1538} WPP_SF_(Tmp_2171, 105, Tmp_2181);
    goto L232;

  L232:
    status_67 := -1073741670;
    goto L218;

  anon57_Then:
    goto L232;

  anon67_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2162], 2) == 0;
    goto L232;

  anon56_Then:
    goto L232;

  anon65_Then:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_2187;
    call {:si_unique_call 1539} sdv_RtlZeroMemory(0, Tmp_2187);
    call {:si_unique_call 1540} vslice_dummy_var_259 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1541} vslice_dummy_var_219 := corral_nondet();
    call {:si_unique_call 1542} vslice_dummy_var_260 := corral_nondet();
    call {:si_unique_call 1543} vslice_dummy_var_220 := corral_nondet();
    goto L107;

  L107:
    call {:si_unique_call 1544} vslice_dummy_var_261 := corral_nondet();
    call {:si_unique_call 1545} vslice_dummy_var_262 := corral_nondet();
    call {:si_unique_call 1546} vslice_dummy_var_221 := corral_nondet();
    call {:si_unique_call 1547} vslice_dummy_var_263 := corral_nondet();
    call {:si_unique_call 1548} vslice_dummy_var_222 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1549} vslice_dummy_var_264 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1550} vslice_dummy_var_223 := corral_nondet();
    call {:si_unique_call 1551} vslice_dummy_var_265 := corral_nondet();
    call {:si_unique_call 1552} vslice_dummy_var_224 := corral_nondet();
    goto L139;

  L139:
    call {:si_unique_call 1553} vslice_dummy_var_266 := corral_nondet();
    call {:si_unique_call 1554} vslice_dummy_var_267 := corral_nondet();
    call {:si_unique_call 1555} vslice_dummy_var_225 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 1556} vslice_dummy_var_268 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 1557} vslice_dummy_var_226 := corral_nondet();
    call {:si_unique_call 1558} vslice_dummy_var_269 := corral_nondet();
    call {:si_unique_call 1559} vslice_dummy_var_227 := corral_nondet();
    goto L169;

  L169:
    call {:si_unique_call 1560} vslice_dummy_var_270 := corral_nondet();
    call {:si_unique_call 1561} vslice_dummy_var_271 := corral_nondet();
    call {:si_unique_call 1562} vslice_dummy_var_228 := corral_nondet();
    call {:si_unique_call 1563} vslice_dummy_var_272 := corral_nondet();
    call {:si_unique_call 1564} vslice_dummy_var_229 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto L150;

  L150:
    call {:si_unique_call 1565} vslice_dummy_var_273 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1566} vslice_dummy_var_230 := corral_nondet();
    call {:si_unique_call 1567} vslice_dummy_var_274 := corral_nondet();
    call {:si_unique_call 1568} vslice_dummy_var_231 := corral_nondet();
    goto L198;

  L198:
    call {:si_unique_call 1569} vslice_dummy_var_275 := corral_nondet();
    call {:si_unique_call 1570} vslice_dummy_var_276 := corral_nondet();
    call {:si_unique_call 1571} vslice_dummy_var_232 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1572} vslice_dummy_var_277 := corral_nondet();
    call {:si_unique_call 1573} vslice_dummy_var_233 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1574} vslice_dummy_var_278 := corral_nondet();
    goto L218;

  anon52_Then:
    call {:si_unique_call 1575} vslice_dummy_var_279 := corral_nondet();
    goto L198;

  anon51_Then:
    call {:si_unique_call 1576} vslice_dummy_var_280 := corral_nondet();
    goto L169;

  anon66_Then:
    goto L150;

  anon50_Then:
    call {:si_unique_call 1577} vslice_dummy_var_281 := corral_nondet();
    goto L139;

  anon49_Then:
    call {:si_unique_call 1578} vslice_dummy_var_282 := corral_nondet();
    goto L107;

  anon48_Then:
    Tmp_2166 := strConst__li2bpl33;
    call {:si_unique_call 1579} RtlInitUnicodeString(uniModelId, Tmp_2166);
    goto L76;

  anon63_Then:
    goto L35;

  anon47_Then:
    goto L35;
}



procedure {:origName "FatalListEntryError"} FatalListEntryError(actual_p1: int, actual_p2: int, actual_p3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "FatalListEntryError"} FatalListEntryError(actual_p1: int, actual_p2: int, actual_p3: int)
{
  var vslice_dummy_var_283: int;

  anon0:
    call {:si_unique_call 1580} vslice_dummy_var_283 := __HAVOC_malloc(4);
    call {:si_unique_call 1581} RtlFailFast(3);
    return;
}



procedure {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int)
{
  var {:pointer} Tmp_2323: int;
  var {:scalar} Tmp_2324: int;
  var {:scalar} sdv_747: int;
  var {:scalar} sdv_748: int;
  var {:scalar} uniTemp_1: int;
  var {:pointer} devInfo_1: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;

  anon0:
    call {:si_unique_call 1582} uniTemp_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1583} vslice_dummy_var_284 := __HAVOC_malloc(4);
    devInfo_1 := actual_devInfo_1;
    call {:si_unique_call 1584} Tmp_2323 := __HAVOC_malloc(28);
    call {:si_unique_call 1585} vslice_dummy_var_285 := __HAVOC_malloc(36);
    call {:si_unique_call 1586} vslice_dummy_var_286 := __HAVOC_malloc(20);
    Tmp_2323 := strConst__li2bpl43;
    call {:si_unique_call 1587} RtlInitUnicodeString(uniTemp_1, Tmp_2323);
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1588} sdv_747 := corral_nondet();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_747 != 0;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    call {:si_unique_call 1589} sdv_748 := RtlCompareMemory(0, 0, 8);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_748 == 8;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    havoc Tmp_2324;
    call {:si_unique_call 1590} sdv_RtlCopyMemory(0, 0, Tmp_2324);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon14_Then:
    goto L1;

  anon13_Then:
    assume {:partition} sdv_748 != 8;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_747 == 0;
    goto L1;

  anon11_Then:
    goto L1;
}



procedure {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_48: int, actual_Irp_29: int) returns (Tmp_2330: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_48: int, actual_Irp_29: int) returns (Tmp_2330: int)
{
  var {:scalar} uniRetString: int;
  var {:pointer} Tmp_2331: int;
  var {:pointer} Tmp_2332: int;
  var {:pointer} Tmp_2333: int;
  var {:scalar} Tmp_2334: int;
  var {:pointer} Tmp_2335: int;
  var {:scalar} Tmp_2336: int;
  var {:pointer} DevInfo: int;
  var {:scalar} Tmp_2337: int;
  var {:scalar} Tmp_2338: int;
  var {:pointer} Tmp_2339: int;
  var {:scalar} Tmp_2340: int;
  var {:pointer} sdv_751: int;
  var {:pointer} Tmp_2341: int;
  var {:pointer} Tmp_2342: int;
  var {:pointer} Tmp_2343: int;
  var {:scalar} Tmp_2344: int;
  var {:pointer} Tmp_2345: int;
  var {:pointer} Tmp_2346: int;
  var {:pointer} Tmp_2347: int;
  var {:pointer} Tmp_2348: int;
  var {:pointer} Tmp_2349: int;
  var {:scalar} Tmp_2350: int;
  var {:pointer} Tmp_2351: int;
  var {:pointer} Tmp_2352: int;
  var {:scalar} Tmp_2353: int;
  var {:pointer} Tmp_2355: int;
  var {:scalar} Tmp_2356: int;
  var {:scalar} Tmp_2357: int;
  var {:pointer} Tmp_2358: int;
  var {:scalar} Tmp_2359: int;
  var {:scalar} i_8: int;
  var {:pointer} Tmp_2360: int;
  var {:pointer} DeviceInfo_6: int;
  var {:pointer} irpStack_20: int;
  var {:pointer} Tmp_2361: int;
  var {:pointer} Tmp_2362: int;
  var {:scalar} Tmp_2363: int;
  var {:pointer} Tmp_2364: int;
  var {:scalar} Tmp_2365: int;
  var {:pointer} Tmp_2366: int;
  var {:scalar} Tmp_2367: int;
  var {:pointer} Tmp_2368: int;
  var {:pointer} Tmp_2369: int;
  var {:scalar} reportedMissing: int;
  var {:pointer} Tmp_2370: int;
  var {:scalar} sdv_757: int;
  var {:pointer} Tmp_2371: int;
  var {:pointer} Tmp_2372: int;
  var {:scalar} Tmp_2373: int;
  var {:pointer} Tmp_2374: int;
  var {:pointer} Tmp_2375: int;
  var {:pointer} Tmp_2376: int;
  var {:pointer} fdoExtension_14: int;
  var {:pointer} Tmp_2377: int;
  var {:pointer} Tmp_2378: int;
  var {:scalar} Tmp_2379: int;
  var {:pointer} Tmp_2380: int;
  var {:pointer} Tmp_2381: int;
  var {:scalar} status_70: int;
  var {:pointer} sdv_761: int;
  var {:pointer} Tmp_2382: int;
  var {:pointer} Tmp_2383: int;
  var {:pointer} Tmp_2385: int;
  var {:pointer} Tmp_2387: int;
  var {:pointer} Tmp_2388: int;
  var {:pointer} Tmp_2389: int;
  var {:pointer} Tmp_2390: int;
  var {:scalar} Tmp_2391: int;
  var {:pointer} Tmp_2392: int;
  var {:pointer} count: int;
  var {:pointer} Tmp_2393: int;
  var {:pointer} Tmp_2394: int;
  var {:pointer} Tmp_2395: int;
  var {:pointer} pdoExtension_22: int;
  var {:pointer} Tmp_2396: int;
  var {:scalar} Tmp_2397: int;
  var {:scalar} Tmp_2398: int;
  var {:pointer} Tmp_2399: int;
  var {:pointer} Tmp_2400: int;
  var {:pointer} Tmp_2401: int;
  var {:pointer} Tmp_2402: int;
  var {:pointer} Tmp_2403: int;
  var {:pointer} Tmp_2404: int;
  var {:pointer} Tmp_2405: int;
  var {:pointer} Tmp_2406: int;
  var {:scalar} Tmp_2407: int;
  var {:pointer} Tmp_2408: int;
  var {:pointer} irp_11: int;
  var {:scalar} Tmp_2410: int;
  var {:pointer} Tmp_2411: int;
  var {:scalar} Tmp_2412: int;
  var {:pointer} Tmp_2413: int;
  var {:scalar} Tmp_2414: int;
  var {:pointer} Tmp_2416: int;
  var {:pointer} Tmp_2417: int;
  var {:pointer} Tmp_2418: int;
  var {:pointer} Tmp_2420: int;
  var {:pointer} deviceRelations_1: int;
  var {:pointer} Tmp_2421: int;
  var {:pointer} Tmp_2422: int;
  var {:pointer} Tmp_2423: int;
  var {:scalar} Tmp_2424: int;
  var {:scalar} Tmp_2425: int;
  var {:scalar} Tmp_2426: int;
  var {:pointer} Tmp_2427: int;
  var {:pointer} Tmp_2428: int;
  var {:scalar} Tmp_2429: int;
  var {:pointer} Tmp_2430: int;
  var {:pointer} Tmp_2431: int;
  var {:pointer} Tmp_2432: int;
  var {:pointer} Tmp_2433: int;
  var {:pointer} Tmp_2434: int;
  var {:scalar} Tmp_2435: int;
  var {:pointer} deviceCapabilities_1: int;
  var {:pointer} Tmp_2436: int;
  var {:pointer} Tmp_2437: int;
  var {:pointer} Tmp_2438: int;
  var {:pointer} Tmp_2439: int;
  var {:scalar} Tmp_2440: int;
  var {:scalar} cIrql_12: int;
  var {:pointer} Tmp_2441: int;
  var {:pointer} Tmp_2442: int;
  var {:pointer} Tmp_2443: int;
  var {:scalar} reported: int;
  var {:pointer} Tmp_2444: int;
  var {:pointer} Tmp_2445: int;
  var {:pointer} Tmp_2446: int;
  var {:pointer} DeviceObject_48: int;
  var {:pointer} Irp_29: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;

  anon0:
    call {:si_unique_call 1591} uniRetString := __HAVOC_malloc(12);
    DeviceObject_48 := actual_DeviceObject_48;
    Irp_29 := actual_Irp_29;
    call {:si_unique_call 1592} Tmp_2331 := __HAVOC_malloc(2680);
    call {:si_unique_call 1593} Tmp_2335 := __HAVOC_malloc(4);
    call {:si_unique_call 1594} Tmp_2341 := __HAVOC_malloc(4);
    call {:si_unique_call 1595} Tmp_2342 := __HAVOC_malloc(28);
    call {:si_unique_call 1596} Tmp_2343 := __HAVOC_malloc(4);
    call {:si_unique_call 1597} Tmp_2346 := __HAVOC_malloc(4);
    call {:si_unique_call 1598} Tmp_2348 := __HAVOC_malloc(4);
    call {:si_unique_call 1599} Tmp_2352 := __HAVOC_malloc(4);
    call {:si_unique_call 1600} Tmp_2360 := __HAVOC_malloc(2680);
    call {:si_unique_call 1601} Tmp_2361 := __HAVOC_malloc(4);
    call {:si_unique_call 1602} Tmp_2369 := __HAVOC_malloc(4);
    call {:si_unique_call 1603} Tmp_2370 := __HAVOC_malloc(4);
    call {:si_unique_call 1604} Tmp_2374 := __HAVOC_malloc(2680);
    call {:si_unique_call 1605} Tmp_2380 := __HAVOC_malloc(4);
    call {:si_unique_call 1606} Tmp_2383 := __HAVOC_malloc(4);
    call {:si_unique_call 1607} Tmp_2388 := __HAVOC_malloc(4);
    call {:si_unique_call 1608} Tmp_2390 := __HAVOC_malloc(4);
    call {:si_unique_call 1609} Tmp_2392 := __HAVOC_malloc(4);
    call {:si_unique_call 1610} Tmp_2394 := __HAVOC_malloc(28);
    call {:si_unique_call 1611} Tmp_2396 := __HAVOC_malloc(4);
    call {:si_unique_call 1612} Tmp_2399 := __HAVOC_malloc(2680);
    call {:si_unique_call 1613} Tmp_2400 := __HAVOC_malloc(4);
    call {:si_unique_call 1614} Tmp_2401 := __HAVOC_malloc(4);
    call {:si_unique_call 1615} Tmp_2408 := __HAVOC_malloc(4);
    call {:si_unique_call 1616} Tmp_2411 := __HAVOC_malloc(4);
    call {:si_unique_call 1617} Tmp_2413 := __HAVOC_malloc(4);
    call {:si_unique_call 1618} Tmp_2416 := __HAVOC_malloc(4);
    call {:si_unique_call 1619} Tmp_2420 := __HAVOC_malloc(4);
    call {:si_unique_call 1620} Tmp_2422 := __HAVOC_malloc(4);
    call {:si_unique_call 1621} Tmp_2428 := __HAVOC_malloc(4);
    call {:si_unique_call 1622} Tmp_2430 := __HAVOC_malloc(28);
    call {:si_unique_call 1623} Tmp_2437 := __HAVOC_malloc(28);
    call {:si_unique_call 1624} Tmp_2442 := __HAVOC_malloc(28);
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    havoc pdoExtension_22;
    call {:si_unique_call 1625} irpStack_20 := sdv_IoGetCurrentIrpStackLocation(Irp_29);
    DevInfo := 0;
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1626} sdv_IoCompleteRequest(0, 0);
    Tmp_2330 := -1073741810;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon406_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    call {:si_unique_call 1627} status_70 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:partition} status_70 >= 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc DeviceInfo_6;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc Tmp_2357;
    call {:si_unique_call 1628} Sbp2AddLog(pdoExtension_22, 1, -798076866, Tmp_2357, 0);
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    status_70 := 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1629} vslice_dummy_var_287 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_22), 0);
    call {:si_unique_call 1630} sdv_IoCompleteRequest(0, 0);
    Tmp_2330 := status_70;
    goto L1;

  anon385_Then:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon386_Then:
    reportedMissing := 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2362;
    assume {:nonnull} Tmp_2362 != 0;
    assume Tmp_2362 > 0;
    havoc fdoExtension_14;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc vslice_dummy_var_192;
    call {:si_unique_call 1631} Sbp2AddLog(pdoExtension_22, 1, -747278254, fdoExtension_14, vslice_dummy_var_192);
    call {:si_unique_call 1632} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1633} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    reportedMissing := 0;
    goto L94;

  L94:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1634} vslice_dummy_var_302 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_22), 0, 0);
    call {:si_unique_call 1635} sdv_KeReleaseSpinLock(0, cIrql_12);
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} reportedMissing != 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2385;
    assume {:nonnull} Tmp_2385 != 0;
    assume Tmp_2385 > 0;
    havoc vslice_dummy_var_193;
    call {:si_unique_call 1636} vslice_dummy_var_303 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_193, 0);
    goto anon460_Then, anon460_Else;

  anon460_Else:
    assume {:partition} yogi_error != 1;
    goto L103;

  L103:
    call {:si_unique_call 1637} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1638} sdv_KeRaiseIrql(2, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1639} sdv_751 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_22), 0);
    irp_11 := sdv_751;
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:partition} irp_11 != 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_194;
    call {:si_unique_call 1640} Sbp2StartIo#1(vslice_dummy_var_194, irp_11);
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:partition} yogi_error != 1;
    goto L114;

  L114:
    call {:si_unique_call 1641} Sbp2StartNextPacketByKey#1(DeviceObject_48, 0);
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1642} sdv_KeLowerIrql(cIrql_12);
    call {:si_unique_call 1643} vslice_dummy_var_288 := Sbp2CleanDeviceExtension#1(DeviceObject_48, 1, 0);
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon464_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon463_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon462_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon461_Then:
    assume {:partition} irp_11 == 0;
    goto L114;

  anon460_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon319_Then:
    assume {:partition} reportedMissing == 0;
    goto L103;

  anon318_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    reportedMissing := 1;
    goto L94;

  anon465_Then:
    goto L94;

  anon387_Then:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    count := HibernateCount__DEVICE_EXTENSION(pdoExtension_22);
    goto L134;

  L134:
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume {:partition} count != 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_195;
    call {:si_unique_call 1644} status_70 := Sbp2ForwardIrpSynchronous(vslice_dummy_var_195, Irp_29);
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:partition} yogi_error != 1;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} status_70 >= 0;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_196;
    call {:si_unique_call 1645} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_196);
    goto L141;

  L141:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon321_Then:
    assume {:partition} 0 > status_70;
    goto L141;

  anon459_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon320_Then:
    assume {:partition} count == 0;
    status_70 := -1073741637;
    goto L141;

  anon405_Then:
    count := 0;
    goto L134;

  anon317_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    count := PagingPathCount__DEVICE_EXTENSION(pdoExtension_22);
    goto L134;

  anon388_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    goto anon323_Then, anon323_Else;

  anon323_Else:
    havoc Tmp_2420;
    assume {:nonnull} Tmp_2420 != 0;
    assume Tmp_2420 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2420], 1) != 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc Tmp_2378;
    havoc Tmp_2347;
    havoc Tmp_2356;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_197;
    call {:si_unique_call 1646} WPP_SF_qqD(Tmp_2356, 90, Tmp_2347, pdoExtension_22, Tmp_2378, vslice_dummy_var_197);
    goto L153;

  L153:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon324_Then:
    goto L153;

  anon456_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2420], 1) == 0;
    goto L153;

  anon323_Then:
    goto L153;

  anon316_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    call {:si_unique_call 1647} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1648} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1649} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    havoc Tmp_2388;
    assume {:nonnull} Tmp_2388 != 0;
    assume Tmp_2388 > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2388], 1) != 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc Tmp_2372;
    havoc Tmp_2364;
    havoc Tmp_2365;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_198;
    call {:si_unique_call 1650} WPP_SF_qqD(Tmp_2365, 91, Tmp_2364, pdoExtension_22, Tmp_2372, vslice_dummy_var_198);
    goto L153;

  anon326_Then:
    goto L153;

  anon458_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2388], 1) == 0;
    goto L153;

  anon457_Then:
    goto L153;

  anon325_Then:
    goto L153;

  anon322_Then:
    goto L153;

  anon389_Then:
    goto anon327_Then, anon327_Else;

  anon327_Else:
    havoc Tmp_2413;
    assume {:nonnull} Tmp_2413 != 0;
    assume Tmp_2413 > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2413], 2) != 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    havoc Tmp_2345;
    havoc Tmp_2336;
    call {:si_unique_call 1651} WPP_SF_(Tmp_2336, 76, Tmp_2345);
    goto L186;

  L186:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    goto anon353_Then, anon353_Else;

  anon353_Else:
    havoc Tmp_2348;
    assume {:nonnull} Tmp_2348 != 0;
    assume Tmp_2348 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2348], 2) != 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    havoc Tmp_2404;
    havoc Tmp_2414;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_199;
    call {:si_unique_call 1652} WPP_SF_qD(Tmp_2414, 89, Tmp_2404, pdoExtension_22, vslice_dummy_var_199);
    goto L361;

  L361:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L239;

  L239:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon354_Then:
    goto L361;

  anon455_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2348], 2) == 0;
    goto L361;

  anon353_Then:
    goto L361;

  anon402_Then:
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc Tmp_2341;
    assume {:nonnull} Tmp_2341 != 0;
    assume Tmp_2341 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2341], 1) != 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc Tmp_2333;
    havoc Tmp_2410;
    call {:si_unique_call 1653} WPP_SF_(Tmp_2410, 86, Tmp_2333);
    goto L211;

  L211:
    call {:si_unique_call 1654} status_70 := Sbp2_BuildInstanceId(DeviceInfo_6, uniRetString);
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:partition} status_70 < 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    havoc Tmp_2361;
    assume {:nonnull} Tmp_2361 != 0;
    assume Tmp_2361 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2361], 1) != 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    havoc Tmp_2375;
    havoc Tmp_2424;
    call {:si_unique_call 1655} WPP_SF_D(Tmp_2424, 87, Tmp_2375, status_70);
    goto L239;

  anon334_Then:
    goto L239;

  anon454_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2361], 1) == 0;
    goto L239;

  anon333_Then:
    goto L239;

  anon331_Then:
    assume {:partition} 0 <= status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    goto L239;

  anon452_Then:
    havoc Tmp_2396;
    assume {:nonnull} Tmp_2396 != 0;
    assume Tmp_2396 > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2396], 1) == 0;
    goto L239;

  anon453_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2396], 1) != 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L239;

  anon332_Then:
    havoc Tmp_2376;
    havoc Tmp_2426;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_200;
    call {:si_unique_call 1656} WPP_SF_S(Tmp_2426, 88, Tmp_2376, vslice_dummy_var_200);
    goto L239;

  anon330_Then:
    goto L211;

  anon451_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2341], 1) == 0;
    goto L211;

  anon329_Then:
    goto L211;

  anon403_Then:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    havoc Tmp_2383;
    assume {:nonnull} Tmp_2383 != 0;
    assume Tmp_2383 > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2383], 2) != 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc Tmp_2434;
    havoc Tmp_2350;
    call {:si_unique_call 1657} WPP_SF_(Tmp_2350, 83, Tmp_2434);
    goto L250;

  L250:
    call {:si_unique_call 1658} status_70 := Sbp2_BuildCompatIds(DeviceInfo_6, uniRetString);
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} status_70 < 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    havoc Tmp_2390;
    assume {:nonnull} Tmp_2390 != 0;
    assume Tmp_2390 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2390], 1) != 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    havoc Tmp_2431;
    havoc Tmp_2353;
    call {:si_unique_call 1659} WPP_SF_D(Tmp_2353, 84, Tmp_2431, status_70);
    goto L239;

  anon340_Then:
    goto L239;

  anon450_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2390], 1) == 0;
    goto L239;

  anon339_Then:
    goto L239;

  anon337_Then:
    assume {:partition} 0 <= status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    havoc Tmp_2422;
    assume {:nonnull} Tmp_2422 != 0;
    assume Tmp_2422 > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2422], 1) != 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    havoc Tmp_2445;
    havoc Tmp_2398;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_201;
    call {:si_unique_call 1660} WPP_SF_S(Tmp_2398, 85, Tmp_2445, vslice_dummy_var_201);
    goto L239;

  anon338_Then:
    goto L239;

  anon449_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2422], 1) == 0;
    goto L239;

  anon448_Then:
    goto L239;

  anon336_Then:
    goto L250;

  anon447_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2383], 2) == 0;
    goto L250;

  anon335_Then:
    goto L250;

  anon404_Then:
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc Tmp_2392;
    assume {:nonnull} Tmp_2392 != 0;
    assume Tmp_2392 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2392], 2) != 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    havoc Tmp_2443;
    havoc Tmp_2337;
    call {:si_unique_call 1661} WPP_SF_(Tmp_2337, 80, Tmp_2443);
    goto L287;

  L287:
    call {:si_unique_call 1662} status_70 := Sbp2_BuildHardwareIds(DeviceInfo_6, uniRetString);
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} status_70 < 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc Tmp_2335;
    assume {:nonnull} Tmp_2335 != 0;
    assume Tmp_2335 > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2335], 2) != 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    havoc Tmp_2421;
    havoc Tmp_2373;
    call {:si_unique_call 1663} WPP_SF_D(Tmp_2373, 81, Tmp_2421, status_70);
    goto L239;

  anon346_Then:
    goto L239;

  anon446_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2335], 2) == 0;
    goto L239;

  anon345_Then:
    goto L239;

  anon343_Then:
    assume {:partition} 0 <= status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    havoc Tmp_2428;
    assume {:nonnull} Tmp_2428 != 0;
    assume Tmp_2428 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2428], 2) != 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    havoc Tmp_2438;
    havoc Tmp_2379;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_202;
    call {:si_unique_call 1664} WPP_SF_S(Tmp_2379, 82, Tmp_2438, vslice_dummy_var_202);
    goto L239;

  anon344_Then:
    goto L239;

  anon445_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2428], 2) == 0;
    goto L239;

  anon444_Then:
    goto L239;

  anon342_Then:
    goto L287;

  anon443_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2392], 2) == 0;
    goto L287;

  anon341_Then:
    goto L287;

  anon438_Then:
    goto anon347_Then, anon347_Else;

  anon347_Else:
    havoc Tmp_2352;
    assume {:nonnull} Tmp_2352 != 0;
    assume Tmp_2352 > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2352], 2) != 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    havoc Tmp_2439;
    havoc Tmp_2412;
    call {:si_unique_call 1665} WPP_SF_(Tmp_2412, 77, Tmp_2439);
    goto L324;

  L324:
    call {:si_unique_call 1666} status_70 := Sbp2_BuildDeviceId(DeviceInfo_6, uniRetString);
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} status_70 < 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc Tmp_2380;
    assume {:nonnull} Tmp_2380 != 0;
    assume Tmp_2380 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2380], 2) != 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc Tmp_2395;
    havoc Tmp_2334;
    call {:si_unique_call 1667} WPP_SF_D(Tmp_2334, 78, Tmp_2395, status_70);
    goto L239;

  anon352_Then:
    goto L239;

  anon442_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2380], 2) == 0;
    goto L239;

  anon351_Then:
    goto L239;

  anon349_Then:
    assume {:partition} 0 <= status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    havoc Tmp_2408;
    assume {:nonnull} Tmp_2408 != 0;
    assume Tmp_2408 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2408], 2) != 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    havoc Tmp_2405;
    havoc Tmp_2340;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_203;
    call {:si_unique_call 1668} WPP_SF_S(Tmp_2340, 79, Tmp_2405, vslice_dummy_var_203);
    goto L239;

  anon350_Then:
    goto L239;

  anon441_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2408], 2) == 0;
    goto L239;

  anon440_Then:
    goto L239;

  anon348_Then:
    goto L324;

  anon439_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2352], 2) == 0;
    goto L324;

  anon347_Then:
    goto L324;

  anon328_Then:
    goto L186;

  anon437_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2413], 2) == 0;
    goto L186;

  anon327_Then:
    goto L186;

  anon390_Then:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    status_70 := -1073741637;
    goto L375;

  L375:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon355_Then:
    goto L370;

  L370:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_204;
    call {:si_unique_call 1669} status_70 := Sbp2_BuildDeviceText(vslice_dummy_var_204, DeviceInfo_6, uniRetString);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    havoc Tmp_2369;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2369], 2) != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    havoc Tmp_2433;
    havoc Tmp_2397;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_205;
    call {:si_unique_call 1670} WPP_SF_qS(Tmp_2397, 75, Tmp_2433, pdoExtension_22, vslice_dummy_var_205);
    goto L375;

  anon356_Then:
    goto L375;

  anon436_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2369], 2) == 0;
    goto L375;

  anon435_Then:
    goto L375;

  anon315_Then:
    goto L370;

  anon391_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2382;
    assume {:nonnull} Tmp_2382 != 0;
    assume Tmp_2382 > 0;
    havoc fdoExtension_14;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2355;
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    assume {:nonnull} Tmp_2355 != 0;
    assume Tmp_2355 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon392_Then:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc deviceCapabilities_1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2432;
    assume {:nonnull} Tmp_2432 != 0;
    assume Tmp_2432 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} Tmp_2432 != 0;
    assume Tmp_2432 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    goto L404;

  L404:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2442;
    assume {:nonnull} Tmp_2442 != 0;
    assume Tmp_2442 > 0;
    Mem_T.INT4[Tmp_2442 + 1 * 4] := 1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2342;
    assume {:nonnull} Tmp_2342 != 0;
    assume Tmp_2342 > 0;
    Mem_T.INT4[Tmp_2342 + 2 * 4] := 4;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2430;
    assume {:nonnull} Tmp_2430 != 0;
    assume Tmp_2430 > 0;
    Mem_T.INT4[Tmp_2430 + 3 * 4] := 4;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2437;
    assume {:nonnull} Tmp_2437 != 0;
    assume Tmp_2437 > 0;
    Mem_T.INT4[Tmp_2437 + 4 * 4] := 4;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2394;
    assume {:nonnull} Tmp_2394 != 0;
    assume Tmp_2394 > 0;
    Mem_T.INT4[Tmp_2394 + 5 * 4] := 4;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon400_Then:
    goto L398;

  L398:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2387;
    assume {:nonnull} Tmp_2387 != 0;
    assume Tmp_2387 > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:nonnull} Tmp_2387 != 0;
    assume Tmp_2387 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    goto L400;

  L400:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon401_Then:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon434_Then:
    goto L400;

  anon433_Then:
    goto L398;

  anon393_Then:
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc Tmp_2400;
    assume {:nonnull} Tmp_2400 != 0;
    assume Tmp_2400 > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2400], 1) != 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    havoc Tmp_2339;
    havoc Tmp_2344;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_206;
    call {:si_unique_call 1671} WPP_SF_qD(Tmp_2344, 74, Tmp_2339, pdoExtension_22, vslice_dummy_var_206);
    goto L420;

  L420:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon358_Then:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc deviceRelations_1;
    goto L435;

  L435:
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2338;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2346;
    assume {:nonnull} Tmp_2346 != 0;
    assume Tmp_2346 > 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    call {:si_unique_call 1672} vslice_dummy_var_301 := sdv_ObReferenceObject(0);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon360_Then:
    call {:si_unique_call 1673} sdv_761 := ExAllocatePoolWithTag(1, 8, 846226003);
    deviceRelations_1 := sdv_761;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} deviceRelations_1 != 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    goto L435;

  anon432_Then:
    assume {:partition} deviceRelations_1 == 0;
    status_70 := -1073741670;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon359_Then:
    goto L420;

  anon431_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2400], 1) == 0;
    goto L420;

  anon357_Then:
    goto L420;

  anon394_Then:
    goto L58;

  L58:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon395_Then:
    goto L58;

  anon396_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2427;
    assume {:nonnull} Tmp_2427 != 0;
    assume Tmp_2427 > 0;
    havoc vslice_dummy_var_207;
    call {:si_unique_call 1674} vslice_dummy_var_300 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_207, 0);
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1675} vslice_dummy_var_289 := PoRegisterDeviceForIdleDetection(0, 0, 0, 4);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1676} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1677} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1678} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1679} vslice_dummy_var_290 := KeCancelTimer(0);
    goto L469;

  L469:
    status_70 := 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon361_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1680} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2349;
    assume {:nonnull} Tmp_2349 != 0;
    assume Tmp_2349 > 0;
    havoc fdoExtension_14;
    call {:si_unique_call 1681} ExAcquireFastMutex(0);
    call {:si_unique_call 1682} vslice_dummy_var_291 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1683} ExReleaseFastMutex(0);
    call {:si_unique_call 1684} vslice_dummy_var_292 := Sbp2CleanDeviceExtension#1(DeviceObject_48, 0, 0);
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1685} vslice_dummy_var_293 := Sbp2InitializeDeviceExtension#1(pdoExtension_22);
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto L469;

  anon430_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon429_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon428_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon427_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon397_Then:
    call {:si_unique_call 1686} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1687} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1688} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon398_Then:
    status_70 := 0;
    call {:si_unique_call 1689} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1690} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    call {:si_unique_call 1691} vslice_dummy_var_294 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1692} vslice_dummy_var_297 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_22), 0, 0);
    goto L504;

  L504:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    reported := 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2377;
    assume {:nonnull} Tmp_2377 != 0;
    assume Tmp_2377 > 0;
    havoc fdoExtension_14;
    i_8 := 0;
    goto L517;

  L517:
    call {:si_unique_call 1693} Tmp_2331, i_8, Tmp_2367 := Sbp2PnpDeviceControl_loop_L517(Tmp_2331, i_8, Tmp_2367, fdoExtension_14, DeviceObject_48);
    goto L517_last;

  L517_last:
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    Tmp_2367 := i_8;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2331;
    assume {:nonnull} Tmp_2331 != 0;
    assume Tmp_2331 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    reported := 1;
    goto L518;

  L518:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1694} vslice_dummy_var_298 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_22), 0, 0);
    call {:si_unique_call 1695} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1696} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1697} sdv_KeRaiseIrql(2, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    call {:si_unique_call 1698} Sbp2StartNextPacketByKey#1(DeviceObject_48, 0);
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1699} sdv_KeLowerIrql(cIrql_12);
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc Tmp_2411;
    assume {:nonnull} Tmp_2411 != 0;
    assume Tmp_2411 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2411], 1) != 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    havoc Tmp_2423;
    havoc Tmp_2435;
    call {:si_unique_call 1700} WPP_SF_qq(Tmp_2435, 92, Tmp_2423, pdoExtension_22, DeviceObject_48);
    goto L542;

  L542:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1701} vslice_dummy_var_299 := KeCancelTimer(0);
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} reported != 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1702} sdv_IoCompleteRequest(0, 0);
    Tmp_2330 := 0;
    goto L1;

  anon367_Then:
    assume {:partition} reported == 0;
    call {:si_unique_call 1703} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2436;
    assume {:nonnull} Tmp_2436 != 0;
    assume Tmp_2436 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2389;
    assume {:nonnull} Tmp_2389 != 0;
    assume Tmp_2389 > 0;
    call {:si_unique_call 1704} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2371;
    assume {:nonnull} Tmp_2371 != 0;
    assume Tmp_2371 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2444;
    assume {:nonnull} Tmp_2444 != 0;
    assume Tmp_2444 > 0;
    goto L563;

  L563:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2332;
    assume {:nonnull} Tmp_2332 != 0;
    assume Tmp_2332 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2406;
    assume {:nonnull} Tmp_2406 != 0;
    assume Tmp_2406 > 0;
    call {:si_unique_call 1705} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2446;
    assume {:nonnull} Tmp_2446 != 0;
    assume Tmp_2446 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2366;
    assume {:nonnull} Tmp_2366 != 0;
    assume Tmp_2366 > 0;
    goto L569;

  L569:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2381;
    assume {:nonnull} Tmp_2381 != 0;
    assume Tmp_2381 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2417;
    assume {:nonnull} Tmp_2417 != 0;
    assume Tmp_2417 > 0;
    call {:si_unique_call 1706} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2368;
    assume {:nonnull} Tmp_2368 != 0;
    assume Tmp_2368 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2358;
    assume {:nonnull} Tmp_2358 != 0;
    assume Tmp_2358 > 0;
    goto L575;

  L575:
    call {:si_unique_call 1707} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1708} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    i_8 := 0;
    goto L584;

  L584:
    call {:si_unique_call 1709} i_8, Tmp_2360, Tmp_2399, Tmp_2425, Tmp_2440 := Sbp2PnpDeviceControl_loop_L584(i_8, Tmp_2360, fdoExtension_14, Tmp_2399, Tmp_2425, Tmp_2440, DeviceObject_48);
    goto L584_last;

  L584_last:
    Tmp_2440 := i_8;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2360;
    assume {:nonnull} Tmp_2360 != 0;
    assume Tmp_2360 > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    Tmp_2425 := i_8;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2399;
    assume {:nonnull} Tmp_2399 != 0;
    assume Tmp_2399 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    Tmp_2391 := i_8;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2374;
    DevInfo := Tmp_2374 + Tmp_2391 * 268;
    goto L585;

  L585:
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} DevInfo != 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1710} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L595;

  L595:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1711} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L601;

  L601:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1712} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L590;

  L590:
    call {:si_unique_call 1713} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1714} IoDeleteDevice(0);
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc Tmp_2343;
    assume {:nonnull} Tmp_2343 != 0;
    assume Tmp_2343 > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2343], 1) != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    havoc Tmp_2393;
    havoc Tmp_2407;
    call {:si_unique_call 1715} WPP_SF_qq(Tmp_2407, 93, Tmp_2393, pdoExtension_22, DeviceObject_48);
    goto L619;

  L619:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1716} sdv_IoCompleteRequest(0, 0);
    Tmp_2330 := status_70;
    goto L1;

  anon372_Then:
    goto L619;

  anon419_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2343], 1) == 0;
    goto L619;

  anon371_Then:
    goto L619;

  anon370_Then:
    goto L590;

  anon369_Then:
    goto L601;

  anon418_Then:
    goto L595;

  anon368_Then:
    assume {:partition} DevInfo == 0;
    goto L590;

  anon417_Then:
    i_8 := i_8 + 1;
    goto anon417_Then_dummy;

  anon417_Then_dummy:
    assume false;
    return;

  anon416_Then:
    goto L585;

  anon415_Then:
    goto L575;

  anon414_Then:
    goto L569;

  anon413_Then:
    goto L563;

  anon366_Then:
    goto L542;

  anon412_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2411], 1) == 0;
    goto L542;

  anon365_Then:
    goto L542;

  anon411_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon410_Then:
    i_8 := i_8 + 1;
    goto anon410_Then_dummy;

  anon410_Then_dummy:
    assume false;
    return;

  anon364_Then:
    goto L518;

  anon362_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    goto anon375_Then, anon375_Else;

  anon375_Else:
    havoc Tmp_2416;
    assume {:nonnull} Tmp_2416 != 0;
    assume Tmp_2416 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2416], 1) != 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    havoc Tmp_2418;
    havoc Tmp_2429;
    call {:si_unique_call 1717} WPP_SF_q(Tmp_2429, 94, Tmp_2418, pdoExtension_22);
    goto L638;

  L638:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2441;
    assume {:nonnull} Tmp_2441 != 0;
    assume Tmp_2441 > 0;
    havoc fdoExtension_14;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    call {:si_unique_call 1718} vslice_dummy_var_295 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L647;

  L647:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1719} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1720} ExAcquireFastMutex(0);
    call {:si_unique_call 1721} vslice_dummy_var_296 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1722} ExReleaseFastMutex(0);
    call {:si_unique_call 1723} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1724} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    goto L633;

  L633:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L669;

  L669:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1725} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1726} sdv_757 := Sbp2CleanDeviceExtension#1(DeviceObject_48, 1, 0);
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} yogi_error != 1;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:partition} sdv_757 == 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    havoc Tmp_2401;
    assume {:nonnull} Tmp_2401 != 0;
    assume Tmp_2401 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2401], 2) != 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    havoc Tmp_2351;
    havoc Tmp_2363;
    call {:si_unique_call 1727} WPP_SF_q(Tmp_2363, 96, Tmp_2351, pdoExtension_22);
    goto L680;

  L680:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon380_Then:
    goto L680;

  anon424_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2401], 2) == 0;
    goto L680;

  anon379_Then:
    goto L680;

  anon378_Then:
    assume {:partition} sdv_757 != 0;
    goto L680;

  anon423_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon422_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon377_Then:
    goto L633;

  anon421_Then:
    goto L647;

  anon376_Then:
    goto L638;

  anon420_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2416], 1) == 0;
    goto L638;

  anon375_Then:
    goto L638;

  anon374_Then:
    goto L633;

  anon363_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    havoc Tmp_2370;
    assume {:nonnull} Tmp_2370 != 0;
    assume Tmp_2370 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2370], 1) != 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    havoc Tmp_2402;
    havoc Tmp_2359;
    call {:si_unique_call 1728} WPP_SF_q(Tmp_2359, 95, Tmp_2402, pdoExtension_22);
    goto L669;

  anon381_Then:
    goto L669;

  anon426_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2370], 1) == 0;
    goto L669;

  anon425_Then:
    goto L669;

  anon373_Then:
    goto L669;

  anon409_Then:
    goto L504;

  anon399_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} Mem_T.INT4[PagingPathCount__DEVICE_EXTENSION(pdoExtension_22)] != 0;
    goto L704;

  L704:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon314_Then:
    assume {:partition} Mem_T.INT4[PagingPathCount__DEVICE_EXTENSION(pdoExtension_22)] == 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} Mem_T.INT4[HibernateCount__DEVICE_EXTENSION(pdoExtension_22)] == 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    call {:si_unique_call 1729} Tmp_2403 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    Mem_T.INT4[Tmp_2403] := cIrql_12;
    call {:si_unique_call 1730} sdv_KeAcquireSpinLock(0, Tmp_2403);
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    cIrql_12 := Mem_T.INT4[Tmp_2403];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1731} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_70;
    goto L74;

  anon383_Then:
    goto L704;

  anon382_Then:
    assume {:partition} Mem_T.INT4[HibernateCount__DEVICE_EXTENSION(pdoExtension_22)] != 0;
    goto L704;

  anon313_Then:
    call {:si_unique_call 1732} status_70 := Sbp2StartDevice(DeviceObject_48);
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon408_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon312_Then:
    assume {:partition} 0 > status_70;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1733} sdv_IoCompleteRequest(0, 0);
    Tmp_2330 := status_70;
    goto L1;

  anon384_Then:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1734} sdv_IoCompleteRequest(0, 0);
    Tmp_2330 := -1073741810;
    goto L1;

  anon311_Then:
    call {:si_unique_call 1735} Tmp_2330 := Sbp2FDOPnpDeviceControl(DeviceObject_48, Irp_29);
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon407_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2447: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_2447 == -1073741670 || Tmp_2447 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2447: int)
{
  var {:scalar} Tmp_2448: int;
  var {:pointer} Tmp_2449: int;
  var {:pointer} sdv_778: int;
  var {:scalar} Tmp_2450: int;
  var {:scalar} Tmp_2451: int;
  var {:pointer} Tmp_2452: int;
  var {:pointer} Tmp_2453: int;
  var {:scalar} Tmp_2454: int;
  var {:pointer} Tmp_2455: int;
  var {:scalar} Tmp_2456: int;
  var {:pointer} Tmp_2457: int;
  var {:scalar} Tmp_2458: int;
  var {:pointer} Tmp_2459: int;
  var {:scalar} Tmp_2460: int;
  var {:scalar} status_71: int;
  var {:pointer} Tmp_2461: int;
  var {:pointer} DeviceInfo_7: int;
  var {:pointer} uniDeviceId: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;

  anon0:
    DeviceInfo_7 := actual_DeviceInfo_7;
    uniDeviceId := actual_uniDeviceId;
    call {:si_unique_call 1736} Tmp_2452 := __HAVOC_malloc(4);
    call {:si_unique_call 1737} Tmp_2453 := __HAVOC_malloc(100);
    call {:si_unique_call 1738} Tmp_2459 := __HAVOC_malloc(76);
    call {:si_unique_call 1739} Tmp_2461 := __HAVOC_malloc(160);
    status_71 := 0;
    call {:si_unique_call 1740} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2454;
    call {:si_unique_call 1741} sdv_778 := ExAllocatePoolWithTag(1, Tmp_2454, -498638253);
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_2452;
    assume {:nonnull} Tmp_2452 != 0;
    assume Tmp_2452 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2452], 2) != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_2449;
    havoc Tmp_2458;
    call {:si_unique_call 1742} WPP_SF_(Tmp_2458, 102, Tmp_2449);
    goto L49;

  L49:
    status_71 := -1073741670;
    goto L38;

  L38:
    Tmp_2447 := status_71;
    return;

  anon21_Then:
    goto L49;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2452], 2) == 0;
    goto L49;

  anon20_Then:
    goto L49;

  anon22_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2450;
    call {:si_unique_call 1743} sdv_RtlZeroMemory(0, Tmp_2450);
    call {:si_unique_call 1744} Sbp2CreateNiveusId(DeviceInfo_7);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2460;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2455;
    goto L34;

  L34:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2448;
    Tmp_2453 := strConst__li2bpl46;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_208;
    call {:si_unique_call 1745} vslice_dummy_var_304 := RtlStringCbPrintfW(vslice_dummy_var_208, Tmp_2448, Tmp_2453);
    goto L38;

  anon23_Then:
    Tmp_2455 := strConst__li2bpl33;
    goto L34;

  anon18_Then:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2457;
    goto L41;

  L41:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2451;
    Tmp_2459 := strConst__li2bpl47;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_209;
    call {:si_unique_call 1746} vslice_dummy_var_305 := RtlStringCbPrintfW(vslice_dummy_var_209, Tmp_2451, Tmp_2459);
    goto L38;

  anon19_Then:
    Tmp_2457 := strConst__li2bpl33;
    goto L41;

  anon17_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2456;
    Tmp_2461 := strConst__li2bpl48;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_210;
    call {:si_unique_call 1747} vslice_dummy_var_306 := RtlStringCbPrintfW(vslice_dummy_var_210, Tmp_2456, Tmp_2461);
    goto L38;
}



procedure {:origName "WPP_SF_qqdDD"} WPP_SF_qqdDD(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int, actual_s_p_e_c_i_a_l_115: int, actual_s_p_e_c_i_a_l_116: int, actual_s_p_e_c_i_a_l_117: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qqdDD"} WPP_SF_qqdDD(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int, actual_s_p_e_c_i_a_l_115: int, actual_s_p_e_c_i_a_l_116: int, actual_s_p_e_c_i_a_l_117: int)
{
  var {:pointer} TraceGuid_31: int;
  var vslice_dummy_var_307: int;

  anon0:
    call {:si_unique_call 1748} vslice_dummy_var_307 := __HAVOC_malloc(4);
    TraceGuid_31 := actual_TraceGuid_31;
    return;
}



procedure {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_118: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_118: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int)
{
  var {:scalar} Tmp_2472: int;
  var {:scalar} sdv_784: int;
  var {:pointer} Tmp_2473: int;
  var {:pointer} TraceGuid_32: int;
  var {:pointer} s_p_e_c_i_a_l_119: int;
  var vslice_dummy_var_308: int;

  anon0:
    call {:si_unique_call 1749} vslice_dummy_var_308 := __HAVOC_malloc(4);
    TraceGuid_32 := actual_TraceGuid_32;
    s_p_e_c_i_a_l_119 := actual_s_p_e_c_i_a_l_119;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_119 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_119 != 0;
    assume s_p_e_c_i_a_l_119 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_119] != 0;
    Tmp_2472 := (sdv_784 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_119 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_119 != 0;
    assume s_p_e_c_i_a_l_119 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_119] != 0;
    Tmp_2473 := s_p_e_c_i_a_l_119;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_119] == 0;
    Tmp_2473 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_119 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_119] == 0;
    Tmp_2472 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_119 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_121: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_121: int)
{
  var {:pointer} TraceGuid_33: int;
  var vslice_dummy_var_309: int;

  anon0:
    call {:si_unique_call 1750} vslice_dummy_var_309 := __HAVOC_malloc(4);
    TraceGuid_33 := actual_TraceGuid_33;
    return;
}



procedure {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_49: int, actual_Irp_30: int) returns (Tmp_2482: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_49: int, actual_Irp_30: int) returns (Tmp_2482: int)
{
  var {:pointer} Tmp_2483: int;
  var {:pointer} irpStack_21: int;
  var {:scalar} waitValue_4: int;
  var {:scalar} Tmp_2484: int;
  var {:pointer} pdoExtension_23: int;
  var {:scalar} Tmp_2485: int;
  var {:pointer} Tmp_2486: int;
  var {:pointer} Tmp_2487: int;
  var {:pointer} Tmp_2488: int;
  var {:pointer} Tmp_2489: int;
  var {:pointer} Tmp_2490: int;
  var {:scalar} Tmp_2491: int;
  var {:scalar} Tmp_2492: int;
  var {:pointer} Tmp_2493: int;
  var {:pointer} Tmp_2494: int;
  var {:scalar} cIrql_13: int;
  var {:scalar} status_72: int;
  var {:pointer} Tmp_2495: int;
  var {:pointer} DeviceObject_49: int;
  var {:pointer} Irp_30: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;

  anon0:
    call {:si_unique_call 1751} waitValue_4 := __HAVOC_malloc(20);
    DeviceObject_49 := actual_DeviceObject_49;
    Irp_30 := actual_Irp_30;
    call {:si_unique_call 1752} Tmp_2486 := __HAVOC_malloc(4);
    call {:si_unique_call 1753} Tmp_2488 := __HAVOC_malloc(4);
    call {:si_unique_call 1754} Tmp_2489 := __HAVOC_malloc(4);
    call {:si_unique_call 1755} Tmp_2495 := __HAVOC_malloc(4);
    status_72 := 0;
    call {:si_unique_call 1756} irpStack_21 := sdv_IoGetCurrentIrpStackLocation(Irp_30);
    assume {:nonnull} DeviceObject_49 != 0;
    assume DeviceObject_49 > 0;
    havoc pdoExtension_23;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L21;

  L21:
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    call {:si_unique_call 1757} sdv_IoCompleteRequest(0, 0);
    Tmp_2482 := status_72;
    goto LM2;

  LM2:
    return;

  anon68_Then:
    call {:si_unique_call 1758} status_72 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} status_72 >= 0;
    assume {:nonnull} irpStack_21 != 0;
    assume irpStack_21 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} irpStack_21 != 0;
    assume irpStack_21 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto L44;

  L44:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_2495;
    assume {:nonnull} Tmp_2495 != 0;
    assume Tmp_2495 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2495], 1) != 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_2493;
    havoc Tmp_2485;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc vslice_dummy_var_211;
    call {:si_unique_call 1759} WPP_SF_qd(Tmp_2485, 71, Tmp_2493, pdoExtension_23, vslice_dummy_var_211);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    havoc Tmp_2489;
    assume {:nonnull} Tmp_2489 != 0;
    assume Tmp_2489 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2489], 1) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_2490;
    havoc Tmp_2491;
    call {:si_unique_call 1760} WPP_SF_q(Tmp_2491, 72, Tmp_2490, pdoExtension_23);
    goto L59;

  L59:
    call {:si_unique_call 1761} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    Mem_T.INT4[Tmp_2487] := cIrql_13;
    call {:si_unique_call 1762} sdv_KeAcquireSpinLock(0, Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    cIrql_13 := Mem_T.INT4[Tmp_2487];
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1763} sdv_KeReleaseSpinLock(0, cIrql_13);
    call {:si_unique_call 1764} vslice_dummy_var_311 := Sbp2ManagementTransaction#1(pdoExtension_23, 7, -1);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1765} CleanupOrbList#1(pdoExtension_23, -1073741248);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1766} vslice_dummy_var_310 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_23), 0);
    goto L21;

  anon96_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    goto L59;

  anon94_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2489], 1) == 0;
    goto L59;

  anon76_Then:
    goto L59;

  anon75_Then:
    goto L31;

  anon73_Then:
    goto L31;

  anon74_Then:
    goto L45;

  anon93_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2495], 1) == 0;
    goto L45;

  anon72_Then:
    goto L45;

  anon71_Then:
    call {:si_unique_call 1767} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc vslice_dummy_var_212;
    Mem_T.INT4[Tmp_2487] := vslice_dummy_var_212;
    call {:si_unique_call 1768} vslice_dummy_var_316 := sdv_InterlockedDecrement(Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto L44;

  anon86_Then:
    goto L31;

  anon70_Then:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    havoc Tmp_2486;
    assume {:nonnull} Tmp_2486 != 0;
    assume Tmp_2486 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2486], 1) != 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_2494;
    havoc Tmp_2492;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc vslice_dummy_var_213;
    call {:si_unique_call 1769} WPP_SF_qd(Tmp_2492, 69, Tmp_2494, pdoExtension_23, vslice_dummy_var_213);
    goto L81;

  L81:
    call {:si_unique_call 1770} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    Mem_T.INT4[Tmp_2487] := cIrql_13;
    call {:si_unique_call 1771} sdv_KeAcquireSpinLock(0, Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    cIrql_13 := Mem_T.INT4[Tmp_2487];
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 1772} sdv_KeReleaseSpinLock(0, cIrql_13);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_2488;
    assume {:nonnull} Tmp_2488 != 0;
    assume Tmp_2488 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2488], 1) != 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc Tmp_2483;
    havoc Tmp_2484;
    call {:si_unique_call 1773} WPP_SF_q(Tmp_2484, 70, Tmp_2483, pdoExtension_23);
    goto L102;

  L102:
    call {:si_unique_call 1774} status_72 := Sbp2ManagementTransaction#1(pdoExtension_23, 0, -1);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} status_72 == 259;
    assume {:nonnull} waitValue_4 != 0;
    assume waitValue_4 > 0;
    call {:si_unique_call 1775} vslice_dummy_var_313 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_4);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1776} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    Mem_T.INT4[Tmp_2487] := cIrql_13;
    call {:si_unique_call 1777} sdv_KeAcquireSpinLock(0, Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    cIrql_13 := Mem_T.INT4[Tmp_2487];
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    status_72 := -1073741823;
    goto L126;

  L126:
    call {:si_unique_call 1778} sdv_KeReleaseSpinLock(0, cIrql_13);
    goto L114;

  L114:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_72 == 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc vslice_dummy_var_214;
    call {:si_unique_call 1779} vslice_dummy_var_312 := Sbp2Reset#1(vslice_dummy_var_214, 1);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1780} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    Mem_T.INT4[Tmp_2487] := cIrql_13;
    call {:si_unique_call 1781} sdv_KeAcquireSpinLock(0, Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    cIrql_13 := Mem_T.INT4[Tmp_2487];
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1782} sdv_KeReleaseSpinLock(0, cIrql_13);
    call {:si_unique_call 1783} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc vslice_dummy_var_215;
    Mem_T.INT4[Tmp_2487] := vslice_dummy_var_215;
    call {:si_unique_call 1784} vslice_dummy_var_314 := sdv_InterlockedIncrement(Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto L31;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    assume {:partition} status_72 != 0;
    goto L31;

  anon85_Then:
    status_72 := 0;
    goto L126;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    assume {:partition} status_72 != 259;
    goto L114;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon82_Then:
    goto L102;

  anon89_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2488], 1) == 0;
    goto L102;

  anon81_Then:
    goto L102;

  anon80_Then:
    call {:si_unique_call 1785} sdv_KeReleaseSpinLock(0, cIrql_13);
    call {:si_unique_call 1786} Tmp_2487 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc vslice_dummy_var_216;
    Mem_T.INT4[Tmp_2487] := vslice_dummy_var_216;
    call {:si_unique_call 1787} vslice_dummy_var_315 := sdv_InterlockedIncrement(Tmp_2487);
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto L31;

  anon79_Then:
    goto L81;

  anon88_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2486], 1) == 0;
    goto L81;

  anon78_Then:
    goto L81;

  anon69_Then:
    assume {:partition} 0 > status_72;
    goto L21;

  anon66_Then:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L21;

  anon67_Then:
    goto L17;

  anon87_Then:
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    status_72 := -1073741810;
    goto L21;

  anon65_Then:
    goto L21;
}



procedure {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2496: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_2496 == 0 || Tmp_2496 == 5 || Tmp_2496 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2496: int)
{
  var {:scalar} cchDest_4: int;
  var {:pointer} argList_2: int;
  var {:scalar} status_73: int;
  var {:pointer} pszDest_4: int;
  var {:scalar} cbDest_1: int;
  var {:pointer} pszFormat_2: int;
  var vslice_dummy_var_217: int;

  anon0:
    pszDest_4 := actual_pszDest_4;
    cbDest_1 := actual_cbDest_1;
    call {:si_unique_call 1788} pszFormat_2 := __HAVOC_malloc(4);
    cchDest_4 := INTDIV(cbDest_1, 2);
    call {:si_unique_call 1789} status_73 := RtlStringValidateDestW_sdv_static_function_1(pszDest_4, cchDest_4, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_73 >= 0;
    argList_2 := pszFormat_2;
    assume {:nonnull} pszFormat_2 != 0;
    assume pszFormat_2 > 0;
    havoc vslice_dummy_var_217;
    call {:si_unique_call 1790} status_73 := RtlStringVPrintfWorkerW_sdv_static_function_1(pszDest_4, cchDest_4, 0, vslice_dummy_var_217, argList_2);
    argList_2 := 0;
    goto L19;

  L19:
    Tmp_2496 := status_73;
    return;

  anon5_Then:
    assume {:partition} 0 > status_73;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_4 > 0;
    assume {:nonnull} pszDest_4 != 0;
    assume pszDest_4 > 0;
    Mem_T.INT4[pszDest_4] := 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_4;
    goto L19;
}



procedure {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2498: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2498: int)
{
  var {:pointer} Tmp_2499: int;
  var {:scalar} Tmp_2500: int;
  var {:pointer} Tmp_2503: int;
  var {:pointer} Tmp_2504: int;
  var {:pointer} Tmp_2505: int;
  var {:scalar} size_2: int;
  var {:scalar} Tmp_2506: int;
  var {:pointer} symlinkBuffer_1: int;
  var {:pointer} Tmp_2508: int;
  var {:pointer} pdoExtension_24: int;
  var {:scalar} uniDeviceName_1: int;
  var {:pointer} Tmp_2509: int;
  var {:scalar} Tmp_2511: int;
  var {:pointer} Tmp_2512: int;
  var {:scalar} sdv_803: int;
  var {:pointer} Tmp_2513: int;
  var {:pointer} sdv_804: int;
  var {:scalar} Tmp_2515: int;
  var {:scalar} devType_1: int;
  var {:scalar} Tmp_2516: int;
  var {:pointer} sdv_805: int;
  var {:pointer} sdv_806: int;
  var {:scalar} sdv_807: int;
  var {:pointer} Tmp_2520: int;
  var {:scalar} sdv_810: int;
  var {:pointer} Tmp_2522: int;
  var {:scalar} sdv_812: int;
  var {:scalar} sdv_813: int;
  var {:pointer} Tmp_2524: int;
  var {:pointer} Tmp_2527: int;
  var {:pointer} Tmp_2528: int;
  var {:scalar} Tmp_2529: int;
  var {:pointer} Tmp_2530: int;
  var {:scalar} status_74: int;
  var {:pointer} devnameBuffer: int;
  var {:pointer} Tmp_2532: int;
  var {:pointer} Tmp_2533: int;
  var {:pointer} Tmp_2534: int;
  var {:pointer} Tmp_2535: int;
  var {:pointer} Tmp_2536: int;
  var {:pointer} Tmp_2537: int;
  var {:pointer} Tmp_2540: int;
  var {:scalar} sdv_822: int;
  var {:pointer} FdoExtension_6: int;
  var {:pointer} DeviceInfo_8: int;
  var {:scalar} InstanceNumber_1: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;

  anon0:
    call {:si_unique_call 1791} uniDeviceName_1 := __HAVOC_malloc(12);
    FdoExtension_6 := actual_FdoExtension_6;
    DeviceInfo_8 := actual_DeviceInfo_8;
    InstanceNumber_1 := actual_InstanceNumber_1;
    call {:si_unique_call 1792} vslice_dummy_var_317 := __HAVOC_malloc(56);
    call {:si_unique_call 1793} vslice_dummy_var_318 := __HAVOC_malloc(44);
    call {:si_unique_call 1794} vslice_dummy_var_319 := __HAVOC_malloc(56);
    call {:si_unique_call 1795} Tmp_2508 := __HAVOC_malloc(272);
    call {:si_unique_call 1796} Tmp_2509 := __HAVOC_malloc(180);
    call {:si_unique_call 1797} vslice_dummy_var_320 := __HAVOC_malloc(36);
    call {:si_unique_call 1798} Tmp_2513 := __HAVOC_malloc(4);
    call {:si_unique_call 1799} vslice_dummy_var_321 := __HAVOC_malloc(32);
    call {:si_unique_call 1800} vslice_dummy_var_322 := __HAVOC_malloc(8);
    call {:si_unique_call 1801} vslice_dummy_var_323 := __HAVOC_malloc(56);
    call {:si_unique_call 1802} vslice_dummy_var_324 := __HAVOC_malloc(44);
    call {:si_unique_call 1803} vslice_dummy_var_325 := __HAVOC_malloc(44);
    call {:si_unique_call 1804} vslice_dummy_var_326 := __HAVOC_malloc(8);
    call {:si_unique_call 1805} vslice_dummy_var_327 := __HAVOC_malloc(8);
    call {:si_unique_call 1806} Tmp_2527 := __HAVOC_malloc(4);
    call {:si_unique_call 1807} Tmp_2530 := __HAVOC_malloc(4);
    call {:si_unique_call 1808} vslice_dummy_var_328 := __HAVOC_malloc(8);
    call {:si_unique_call 1809} Tmp_2534 := __HAVOC_malloc(4);
    call {:si_unique_call 1810} Tmp_2535 := __HAVOC_malloc(188);
    call {:si_unique_call 1811} vslice_dummy_var_329 := __HAVOC_malloc(8);
    call {:si_unique_call 1812} vslice_dummy_var_330 := __HAVOC_malloc(44);
    call {:si_unique_call 1813} vslice_dummy_var_331 := __HAVOC_malloc(32);
    call {:si_unique_call 1814} vslice_dummy_var_332 := __HAVOC_malloc(8);
    devnameBuffer := 0;
    symlinkBuffer_1 := 0;
    call {:si_unique_call 1815} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto L18;

  L18:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    devType_1 := 25;
    goto L24;

  L24:
    size_2 := 2560;
    call {:si_unique_call 1816} sdv_804 := ExAllocatePoolWithTag(512, size_2, -330079661);
    devnameBuffer := sdv_804;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} devnameBuffer != 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2504;
    goto L44;

  L44:
    Tmp_2535 := strConst__li2bpl50;
    call {:si_unique_call 1817} status_74 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2535);
    goto L48;

  L48:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_74 >= 0;
    call {:si_unique_call 1818} RtlInitUnicodeString(uniDeviceName_1, devnameBuffer);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    call {:si_unique_call 1819} status_74 := IoCreateDevice(0, 5256, 0, devType_1, 0, 0, DeviceObject__DEVICE_INFORMATION(DeviceInfo_8));
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_74 >= 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2537;
    assume {:nonnull} Tmp_2537 != 0;
    assume Tmp_2537 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2522;
    assume {:nonnull} Tmp_2522 != 0;
    assume Tmp_2522 > 0;
    goto L64;

  L64:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2520;
    assume {:nonnull} Tmp_2520 != 0;
    assume Tmp_2520 > 0;
    havoc pdoExtension_24;
    call {:si_unique_call 1820} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    havoc Tmp_2533;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} Tmp_2533 != 0;
    assume Tmp_2533 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1821} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_24), 0, 0);
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1822} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_24), 0, 0);
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1823} Tmp_2524 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2524 != 0;
    assume Tmp_2524 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    havoc vslice_dummy_var_218;
    Mem_T.INT4[Tmp_2524] := vslice_dummy_var_218;
    call {:si_unique_call 1824} sdv_KeInitializeSpinLock(Tmp_2524);
    assume {:nonnull} Tmp_2524 != 0;
    assume Tmp_2524 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1825} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1826} Sbp2AllocateLog(pdoExtension_24);
    call {:si_unique_call 1827} Sbp2AddLog(pdoExtension_24, 1, -917616300, pdoExtension_24, 0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2506;
    call {:si_unique_call 1828} sdv_806 := ExAllocatePoolWithTag(512, Tmp_2506, -498638253);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_2530;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2530], 2) != 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_2505;
    havoc Tmp_2529;
    call {:si_unique_call 1829} WPP_SF_(Tmp_2529, 14, Tmp_2505);
    goto L148;

  L148:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2536;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2499;
    assume {:nonnull} Tmp_2499 != 0;
    assume Tmp_2499 > 0;
    assume {:nonnull} Tmp_2536 != 0;
    assume Tmp_2536 > 0;
    call {:si_unique_call 1830} status_74 := Sbp2PreAllocateLists(pdoExtension_24);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} yogi_error != 1;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_74 >= 0;
    size_2 := 1536;
    call {:si_unique_call 1831} sdv_805 := ExAllocatePoolWithTag(1, size_2, -330079661);
    symlinkBuffer_1 := sdv_805;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2509 := strConst__li2bpl31;
    call {:si_unique_call 1832} status_74 := RtlStringCbPrintfW(symlinkBuffer_1, size_2, Tmp_2509);
    goto L183;

  L183:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_74 >= 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1833} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_24), symlinkBuffer_1);
    call {:si_unique_call 1834} status_74 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto L184;

  L184:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_74 < 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_2527;
    assume {:nonnull} Tmp_2527 != 0;
    assume Tmp_2527 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2527], 1) != 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    havoc Tmp_2503;
    havoc Tmp_2515;
    call {:si_unique_call 1835} WPP_SF_qD(Tmp_2515, 16, Tmp_2503, pdoExtension_24, status_74);
    goto L227;

  L227:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1836} ExFreePoolWithTag(0, -330079661);
    symlinkBuffer_1 := 0;
    goto L235;

  L235:
    status_74 := 0;
    goto L199;

  L199:
    call {:si_unique_call 1837} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1838} KeInitializeDpc(DeviceManagementTimeoutDpc__DEVICE_EXTENSION(pdoExtension_24), li2bplFunctionConstant375, 0);
    call {:si_unique_call 1839} KeInitializeTimer(0);
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1840} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_24));
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    call {:si_unique_call 1841} Sbp2SqmInsertLunInformation(DeviceInfo_8);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2532;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2512;
    assume {:nonnull} Tmp_2512 != 0;
    assume Tmp_2512 > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    Tmp_2498 := status_74;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon100_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    goto L235;

  anon101_Then:
    goto L227;

  anon125_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2527], 1) == 0;
    goto L227;

  anon99_Then:
    goto L227;

  anon96_Then:
    assume {:partition} 0 <= status_74;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_2534;
    assume {:nonnull} Tmp_2534 != 0;
    assume Tmp_2534 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2534], 1) != 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    havoc Tmp_2528;
    havoc Tmp_2500;
    call {:si_unique_call 1842} WPP_SF_qS(Tmp_2500, 15, Tmp_2528, pdoExtension_24, symlinkBuffer_1);
    goto L199;

  anon98_Then:
    goto L199;

  anon124_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2534], 1) == 0;
    goto L199;

  anon97_Then:
    goto L199;

  anon95_Then:
    assume {:partition} 0 > status_74;
    goto L184;

  anon123_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    status_74 := -1073741670;
    goto L183;

  anon94_Then:
    assume {:partition} 0 > status_74;
    call {:si_unique_call 1843} IoDeleteDevice(0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2498 := status_74;
    goto L1;

  anon122_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    goto L148;

  anon126_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2530], 2) == 0;
    goto L148;

  anon102_Then:
    goto L148;

  anon120_Then:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2511;
    call {:si_unique_call 1844} sdv_RtlZeroMemory(0, Tmp_2511);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L114;

  L114:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L118;

  L118:
    call {:si_unique_call 1845} vslice_dummy_var_333 := corral_nondet();
    goto L147;

  L147:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc Tmp_2513;
    assume {:nonnull} Tmp_2513 != 0;
    assume Tmp_2513 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2513], 2) != 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_2540;
    havoc Tmp_2516;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc vslice_dummy_var_219;
    call {:si_unique_call 1846} WPP_SF_qS(Tmp_2516, 13, Tmp_2540, pdoExtension_24, vslice_dummy_var_219);
    goto L148;

  anon93_Then:
    goto L148;

  anon121_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2513], 2) == 0;
    goto L148;

  anon92_Then:
    goto L148;

  anon109_Then:
    call {:si_unique_call 1847} vslice_dummy_var_341 := corral_nondet();
    goto L147;

  anon110_Then:
    call {:si_unique_call 1848} vslice_dummy_var_340 := corral_nondet();
    goto L147;

  anon111_Then:
    call {:si_unique_call 1849} vslice_dummy_var_339 := corral_nondet();
    goto L147;

  anon112_Then:
    call {:si_unique_call 1850} vslice_dummy_var_338 := corral_nondet();
    goto L147;

  anon113_Then:
    call {:si_unique_call 1851} vslice_dummy_var_337 := corral_nondet();
    goto L147;

  anon114_Then:
    call {:si_unique_call 1852} vslice_dummy_var_336 := corral_nondet();
    goto L147;

  anon115_Then:
    call {:si_unique_call 1853} vslice_dummy_var_335 := corral_nondet();
    goto L147;

  anon116_Then:
    call {:si_unique_call 1854} vslice_dummy_var_334 := corral_nondet();
    goto L147;

  anon91_Then:
    goto L118;

  anon108_Then:
    call {:si_unique_call 1855} vslice_dummy_var_342 := corral_nondet();
    goto L147;

  anon90_Then:
    goto L114;

  anon119_Then:
    goto L64;

  anon89_Then:
    assume {:partition} 0 > status_74;
    call {:si_unique_call 1856} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2498 := status_74;
    goto L1;

  anon88_Then:
    assume {:partition} 0 > status_74;
    call {:si_unique_call 1857} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2498 := status_74;
    goto L1;

  anon118_Then:
    Tmp_2504 := strConst__li2bpl49;
    goto L44;

  anon87_Then:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2508 := strConst__li2bpl60;
    call {:si_unique_call 1858} status_74 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2508);
    goto L48;

  anon117_Then:
    assume {:partition} devnameBuffer == 0;
    Tmp_2498 := -1073741670;
    goto L1;

  anon105_Then:
    goto L19;

  L19:
    devType_1 := 45;
    goto L24;

  anon106_Then:
    goto L19;

  anon107_Then:
    devType_1 := 24;
    goto L24;

  anon86_Then:
    goto L19;

  anon104_Then:
    devType_1 := 34;
    goto L24;

  anon85_Then:
    goto L18;
}



procedure {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2543: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_2543 == 0 || Tmp_2543 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2543: int)
{
  var {:scalar} cchNewDestLength_1: int;
  var {:scalar} iRet_1: int;
  var {:scalar} cchMax_3: int;
  var {:scalar} status_75: int;
  var {:pointer} pszDest_5: int;
  var {:scalar} cchDest_5: int;
  var {:pointer} pcchNewDestLength_1: int;

  anon0:
    pszDest_5 := actual_pszDest_5;
    cchDest_5 := actual_cchDest_5;
    pcchNewDestLength_1 := actual_pcchNewDestLength_1;
    status_75 := 0;
    cchNewDestLength_1 := 0;
    cchMax_3 := cchDest_5 - 1;
    call {:si_unique_call 1859} iRet_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet_1;
    goto L16;

  L16:
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    Mem_T.INT4[pszDest_5] := 0;
    cchNewDestLength_1 := cchMax_3;
    status_75 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength_1 != 0;
    assume {:nonnull} pcchNewDestLength_1 != 0;
    assume pcchNewDestLength_1 > 0;
    Mem_T.INT4[pcchNewDestLength_1] := cchNewDestLength_1;
    goto L21;

  L21:
    Tmp_2543 := status_75;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength_1 == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet_1 >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet_1 <= cchMax_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet_1 == cchMax_3;
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    Mem_T.INT4[pszDest_5] := 0;
    cchNewDestLength_1 := cchMax_3;
    goto L20;

  anon12_Then:
    assume {:partition} iRet_1 != cchMax_3;
    cchNewDestLength_1 := iRet_1;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax_3 < iRet_1;
    goto L16;
}



procedure {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2545: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_2545 == -1073741670 || Tmp_2545 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2545: int)
{
  var {:pointer} Tmp_2546: int;
  var {:scalar} Tmp_2547: int;
  var {:pointer} Tmp_2548: int;
  var {:pointer} sdv_824: int;
  var {:scalar} Tmp_2549: int;
  var {:pointer} Tmp_2550: int;
  var {:scalar} sdv_825: int;
  var {:scalar} Tmp_2551: int;
  var {:pointer} Tmp_2552: int;
  var {:scalar} sdv_826: int;
  var {:pointer} Tmp_2553: int;
  var {:scalar} Tmp_2554: int;
  var {:scalar} status_76: int;
  var {:pointer} DeviceInfo_9: int;
  var {:pointer} uniInstanceId: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_220: int;

  anon0:
    DeviceInfo_9 := actual_DeviceInfo_9;
    uniInstanceId := actual_uniInstanceId;
    call {:si_unique_call 1860} Tmp_2550 := __HAVOC_malloc(4);
    call {:si_unique_call 1861} Tmp_2552 := __HAVOC_malloc(36);
    call {:si_unique_call 1862} vslice_dummy_var_343 := __HAVOC_malloc(8);
    call {:si_unique_call 1863} vslice_dummy_var_344 := __HAVOC_malloc(8);
    status_76 := 0;
    call {:si_unique_call 1864} sdv_do_paged_code_check();
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2554;
    call {:si_unique_call 1865} sdv_824 := ExAllocatePoolWithTag(1, Tmp_2554, 846226003);
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    havoc Tmp_2550;
    assume {:nonnull} Tmp_2550 != 0;
    assume Tmp_2550 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2550], 2) != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_2548;
    havoc Tmp_2547;
    call {:si_unique_call 1866} WPP_SF_(Tmp_2547, 107, Tmp_2548);
    goto L37;

  L37:
    status_76 := -1073741670;
    goto L35;

  L35:
    Tmp_2545 := status_76;
    return;

  anon10_Then:
    goto L37;

  anon12_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2550], 2) == 0;
    goto L37;

  anon9_Then:
    goto L37;

  anon11_Then:
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2551;
    call {:si_unique_call 1867} sdv_RtlZeroMemory(0, Tmp_2551);
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2546;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2553;
    assume {:nonnull} Tmp_2553 != 0;
    assume Tmp_2553 > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2549;
    Tmp_2552 := strConst__li2bpl30;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc vslice_dummy_var_220;
    call {:si_unique_call 1868} vslice_dummy_var_345 := RtlStringCbPrintfW(vslice_dummy_var_220, Tmp_2549, Tmp_2552);
    goto L35;
}



procedure {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2558: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2558: int)
{
  var {:scalar} sdv_828: int;

  anon0:
    Tmp_2558 := sdv_828;
    return;
}



procedure {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_26: int) returns (Tmp_2560: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_26: int) returns (Tmp_2560: int)
{
  var {:pointer} Tmp_2561: int;
  var {:pointer} Tmp_2562: int;
  var {:scalar} cnt: int;
  var {:pointer} Tmp_2563: int;
  var {:pointer} sdv_831: int;
  var {:pointer} context_3: int;
  var {:pointer} Tmp_2564: int;
  var {:pointer} Tmp_2565: int;
  var {:pointer} Tmp_2566: int;
  var {:pointer} sdv_832: int;
  var {:pointer} Tmp_2567: int;
  var {:pointer} Tmp_2568: int;
  var {:pointer} Tmp_2569: int;
  var {:pointer} sdv_833: int;
  var {:pointer} sdv_835: int;
  var {:pointer} Tmp_2570: int;
  var {:pointer} Tmp_2571: int;
  var {:pointer} sdv_836: int;
  var {:pointer} Tmp_2573: int;
  var {:pointer} Tmp_2574: int;
  var {:pointer} Tmp_2575: int;
  var {:pointer} statusFifoElement_1: int;
  var {:pointer} Tmp_2576: int;
  var {:pointer} Tmp_2577: int;
  var {:pointer} packet_15: int;
  var {:scalar} status_77: int;
  var {:pointer} Tmp_2578: int;
  var {:pointer} Tmp_2579: int;
  var {:pointer} Tmp_2580: int;
  var {:pointer} Tmp_2581: int;
  var {:pointer} PdoExtension_26: int;
  var boogieTmp: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;

  anon0:
    call {:si_unique_call 1869} packet_15 := __HAVOC_malloc(4);
    PdoExtension_26 := actual_PdoExtension_26;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 1870} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_26));
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 1871} InitializeSListHead(FreeContextListHead__DEVICE_EXTENSION(PdoExtension_26));
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 1872} InitializeSListHead(BusRequestIrpIrbListHead__DEVICE_EXTENSION(PdoExtension_26));
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 1873} InitializeSListHead(StatusFifoListHead__DEVICE_EXTENSION(PdoExtension_26));
    call {:si_unique_call 1874} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 32, 846226003, 0);
    call {:si_unique_call 1875} Tmp_2565 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    havoc vslice_dummy_var_221;
    Mem_T.INT4[Tmp_2565] := vslice_dummy_var_221;
    call {:si_unique_call 1876} sdv_KeInitializeSpinLock(Tmp_2565);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    call {:si_unique_call 1877} Tmp_2565 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    havoc vslice_dummy_var_222;
    Mem_T.INT4[Tmp_2565] := vslice_dummy_var_222;
    call {:si_unique_call 1878} sdv_KeInitializeSpinLock(Tmp_2565);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    call {:si_unique_call 1879} Tmp_2565 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    Mem_T.INT4[Tmp_2565] := Mem_T.INT4[StatusFifoLock__DEVICE_EXTENSION(PdoExtension_26)];
    call {:si_unique_call 1880} sdv_KeInitializeSpinLock(Tmp_2565);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    Mem_T.INT4[StatusFifoLock__DEVICE_EXTENSION(PdoExtension_26)] := Mem_T.INT4[Tmp_2565];
    call {:si_unique_call 1881} Tmp_2565 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    havoc vslice_dummy_var_223;
    Mem_T.INT4[Tmp_2565] := vslice_dummy_var_223;
    call {:si_unique_call 1882} sdv_KeInitializeSpinLock(Tmp_2565);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    call {:si_unique_call 1883} Tmp_2565 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    havoc vslice_dummy_var_224;
    Mem_T.INT4[Tmp_2565] := vslice_dummy_var_224;
    call {:si_unique_call 1884} sdv_KeInitializeSpinLock(Tmp_2565);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2565 != 0;
    assume Tmp_2565 > 0;
    cnt := 0;
    goto L41;

  L41:
    call {:si_unique_call 1885} cnt, sdv_831, sdv_835, Tmp_2570, boogieTmp, vslice_dummy_var_346 := Sbp2PreAllocateLists_loop_L41(cnt, sdv_831, sdv_835, Tmp_2570, packet_15, PdoExtension_26, boogieTmp, vslice_dummy_var_346);
    goto L41_last;

  L41_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 8 > cnt;
    call {:si_unique_call 1886} sdv_831 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L74;

  L74:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc vslice_dummy_var_225;
    call {:si_unique_call 1887} vslice_dummy_var_348 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_225, 1, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2560 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    call {:si_unique_call 1888} sdv_835 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2570;
    assume {:nonnull} Tmp_2570 != 0;
    assume Tmp_2570 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_226;
    call {:si_unique_call 1889} boogieTmp := IoAllocateIrp(vslice_dummy_var_226, 0);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1890} vslice_dummy_var_346 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    call {:si_unique_call 1891} sdv_ExFreePool(0);
    call {:si_unique_call 1892} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto L74;

  anon38_Then:
    call {:si_unique_call 1893} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto L74;

  anon29_Then:
    assume {:partition} cnt >= 8;
    cnt := 640;
    call {:si_unique_call 1894} sdv_832 := ExAllocatePoolWithTag(512, cnt, -430742957);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    cnt := 0;
    goto L88;

  L88:
    call {:si_unique_call 1895} cnt, statusFifoElement_1, boogieTmp, vslice_dummy_var_347 := Sbp2PreAllocateLists_loop_L88(cnt, statusFifoElement_1, PdoExtension_26, boogieTmp, vslice_dummy_var_347);
    goto L88_last;

  L88_last:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 15 > cnt;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc statusFifoElement_1;
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    call {:si_unique_call 1896} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1897} vslice_dummy_var_347 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    goto L74;

  anon31_Then:
    assume {:partition} cnt >= 15;
    cnt := 1600;
    call {:si_unique_call 1898} sdv_833 := ExAllocatePoolWithTag(512, cnt, -499031469);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1899} sdv_RtlZeroMemory(0, cnt);
    call {:si_unique_call 1900} AllocateIrpAndIrb(PdoExtension_26, packet_15);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    cnt := 0;
    goto L120;

  L120:
    call {:si_unique_call 1901} Tmp_2561, Tmp_2562, cnt, Tmp_2563, context_3, Tmp_2564, Tmp_2566, Tmp_2567, Tmp_2568, Tmp_2569, Tmp_2571, sdv_836, Tmp_2573, Tmp_2574, Tmp_2575, Tmp_2576, Tmp_2577, status_77, Tmp_2578, Tmp_2579, Tmp_2580, Tmp_2581, vslice_dummy_var_349 := Sbp2PreAllocateLists_loop_L120(Tmp_2561, Tmp_2562, cnt, Tmp_2563, context_3, Tmp_2564, Tmp_2566, Tmp_2567, Tmp_2568, Tmp_2569, Tmp_2571, sdv_836, Tmp_2573, Tmp_2574, Tmp_2575, Tmp_2576, Tmp_2577, packet_15, status_77, Tmp_2578, Tmp_2579, Tmp_2580, Tmp_2581, PdoExtension_26, vslice_dummy_var_349);
    goto L120_last;

  L120_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} 8 > cnt;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc context_3;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1902} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 1903} KeInitializeTimer(0);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2580;
    assume {:nonnull} Tmp_2580 != 0;
    assume Tmp_2580 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2567;
    assume {:nonnull} Tmp_2567 != 0;
    assume Tmp_2567 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2573;
    assume {:nonnull} Tmp_2573 != 0;
    assume Tmp_2573 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2563;
    assume {:nonnull} Tmp_2563 != 0;
    assume Tmp_2563 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2564;
    assume {:nonnull} Tmp_2564 != 0;
    assume Tmp_2564 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2575;
    assume {:nonnull} Tmp_2575 != 0;
    assume Tmp_2575 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2568;
    assume {:nonnull} Tmp_2568 != 0;
    assume Tmp_2568 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2562;
    assume {:nonnull} Tmp_2562 != 0;
    assume Tmp_2562 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2566;
    assume {:nonnull} Tmp_2566 != 0;
    assume Tmp_2566 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2569;
    assume {:nonnull} Tmp_2569 != 0;
    assume Tmp_2569 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2576;
    assume {:nonnull} Tmp_2576 != 0;
    assume Tmp_2576 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2574;
    assume {:nonnull} Tmp_2574 != 0;
    assume Tmp_2574 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2578;
    assume {:nonnull} Tmp_2578 != 0;
    assume Tmp_2578 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2579;
    assume {:nonnull} Tmp_2579 != 0;
    assume Tmp_2579 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2571;
    assume {:nonnull} Tmp_2571 != 0;
    assume Tmp_2571 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2581;
    assume {:nonnull} Tmp_2581 != 0;
    assume Tmp_2581 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_227;
    call {:si_unique_call 1904} status_77 := Sbp2SendRequest#1(PdoExtension_26, vslice_dummy_var_227, 2);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_77 >= 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2577;
    assume {:nonnull} Tmp_2577 != 0;
    assume Tmp_2577 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1905} sdv_836 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2561;
    assume {:nonnull} Tmp_2561 != 0;
    assume Tmp_2561 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1906} vslice_dummy_var_349 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} 0 > status_77;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_228;
    call {:si_unique_call 1907} DeAllocateIrpAndIrb(PdoExtension_26, vslice_dummy_var_228);
    goto L74;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    assume {:partition} cnt >= 8;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_229;
    call {:si_unique_call 1908} DeAllocateIrpAndIrb(PdoExtension_26, vslice_dummy_var_229);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 1909} boogieTmp := IoAllocateMdl(0, 4, 0, 0, 0);
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_2560 := 0;
    goto L1;

  anon36_Then:
    goto L74;

  anon33_Then:
    goto L74;

  anon41_Then:
    goto L74;

  anon40_Then:
    goto L74;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_350: int;

  anon0:
    call {:si_unique_call 1910} vslice_dummy_var_350 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int)
{
  var {:pointer} TraceGuid_34: int;
  var vslice_dummy_var_351: int;

  anon0:
    call {:si_unique_call 1911} vslice_dummy_var_351 := __HAVOC_malloc(4);
    TraceGuid_34 := actual_TraceGuid_34;
    return;
}



procedure {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_124: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int, actual_s_p_e_c_i_a_l_127: int, actual_s_p_e_c_i_a_l_128: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_124: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int, actual_s_p_e_c_i_a_l_127: int, actual_s_p_e_c_i_a_l_128: int)
{
  var {:pointer} Tmp_2587: int;
  var {:scalar} Tmp_2590: int;
  var {:scalar} sdv_844: int;
  var {:pointer} TraceGuid_35: int;
  var {:pointer} s_p_e_c_i_a_l_126: int;
  var vslice_dummy_var_352: int;

  anon0:
    call {:si_unique_call 1912} vslice_dummy_var_352 := __HAVOC_malloc(4);
    TraceGuid_35 := actual_TraceGuid_35;
    s_p_e_c_i_a_l_126 := actual_s_p_e_c_i_a_l_126;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_126 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_126 != 0;
    assume s_p_e_c_i_a_l_126 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_126] != 0;
    Tmp_2590 := (sdv_844 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_126 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_126 != 0;
    assume s_p_e_c_i_a_l_126 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_126] != 0;
    Tmp_2587 := s_p_e_c_i_a_l_126;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_126] == 0;
    Tmp_2587 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_126 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_126] == 0;
    Tmp_2590 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_126 == 0;
    goto L12;
}



procedure {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_27: int) returns (Tmp_2594: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_27: int) returns (Tmp_2594: int)
{
  var {:pointer} Tmp_2595: int;
  var {:pointer} PdoExtension_27: int;

  anon0:
    PdoExtension_27 := actual_PdoExtension_27;
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2595;
    assume {:nonnull} Tmp_2595 != 0;
    assume Tmp_2595 > 0;
    havoc Tmp_2594;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_2594 := 0;
    goto L1;
}



procedure {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_129: int, actual_s_p_e_c_i_a_l_130: int, actual_s_p_e_c_i_a_l_131: int, actual_s_p_e_c_i_a_l_132: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_129: int, actual_s_p_e_c_i_a_l_130: int, actual_s_p_e_c_i_a_l_131: int, actual_s_p_e_c_i_a_l_132: int)
{
  var {:scalar} Tmp_2598: int;
  var {:scalar} sdv_846: int;
  var {:pointer} Tmp_2601: int;
  var {:pointer} TraceGuid_36: int;
  var {:pointer} s_p_e_c_i_a_l_130: int;
  var vslice_dummy_var_353: int;

  anon0:
    call {:si_unique_call 1913} vslice_dummy_var_353 := __HAVOC_malloc(4);
    TraceGuid_36 := actual_TraceGuid_36;
    s_p_e_c_i_a_l_130 := actual_s_p_e_c_i_a_l_130;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_130 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_130 != 0;
    assume s_p_e_c_i_a_l_130 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_130] != 0;
    Tmp_2598 := (sdv_846 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_130 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_130 != 0;
    assume s_p_e_c_i_a_l_130 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_130] != 0;
    Tmp_2601 := s_p_e_c_i_a_l_130;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_130] == 0;
    Tmp_2601 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_130 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_130] == 0;
    Tmp_2598 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_130 == 0;
    goto L12;
}



procedure {:origName "RtlFailFast"} RtlFailFast(actual_Code: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlFailFast"} RtlFailFast(actual_Code: int)
{
  var vslice_dummy_var_354: int;

  anon0:
    call {:si_unique_call 1914} vslice_dummy_var_354 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_29: int) returns (Tmp_2635: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_29: int) returns (Tmp_2635: int)
{
  var {:pointer} Tmp_2637: int;
  var {:pointer} Tmp_2638: int;
  var {:pointer} PdoExtension_29: int;

  anon0:
    PdoExtension_29 := actual_PdoExtension_29;
    assume {:nonnull} PdoExtension_29 != 0;
    assume PdoExtension_29 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} PdoExtension_29 != 0;
    assume PdoExtension_29 > 0;
    havoc Tmp_2638;
    assume {:nonnull} Tmp_2638 != 0;
    assume Tmp_2638 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoExtension_29 != 0;
    assume PdoExtension_29 > 0;
    havoc Tmp_2637;
    assume {:nonnull} Tmp_2637 != 0;
    assume Tmp_2637 > 0;
    havoc Tmp_2635;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L4;

  L4:
    Tmp_2635 := strConst__li2bpl61;
    goto L1;

  anon5_Then:
    goto L4;
}



procedure {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_133: int, actual_s_p_e_c_i_a_l_134: int, actual_s_p_e_c_i_a_l_135: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_133: int, actual_s_p_e_c_i_a_l_134: int, actual_s_p_e_c_i_a_l_135: int)
{
  var {:pointer} TraceGuid_37: int;
  var vslice_dummy_var_355: int;

  anon0:
    call {:si_unique_call 1915} vslice_dummy_var_355 := __HAVOC_malloc(4);
    TraceGuid_37 := actual_TraceGuid_37;
    return;
}



procedure {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2642: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2642: int)
{
  var {:scalar} i_10: int;
  var {:scalar} Tmp_2643: int;
  var {:pointer} Tmp_2644: int;
  var {:scalar} Tmp_2645: int;
  var {:scalar} Tmp_2646: int;
  var {:scalar} Tmp_2647: int;
  var {:scalar} subStatus: int;
  var {:pointer} Tmp_2649: int;
  var {:pointer} pdoExtension_25: int;
  var {:pointer} workItem_1: int;
  var {:scalar} Status_2: int;
  var {:scalar} Tmp_2651: int;
  var {:scalar} Tmp_2652: int;
  var {:pointer} Tmp_2653: int;
  var {:pointer} Tmp_2654: int;
  var {:pointer} Tmp_2655: int;
  var {:scalar} Tmp_2656: int;
  var {:pointer} Tmp_2657: int;
  var {:pointer} Tmp_2658: int;
  var {:pointer} Tmp_2659: int;
  var {:scalar} Tmp_2660: int;
  var {:pointer} PdoExtension_30: int;
  var {:scalar} Tmp_2661: int;
  var {:pointer} Tmp_2662: int;
  var {:pointer} Tmp_2663: int;
  var {:scalar} Tmp_2664: int;
  var {:scalar} Tmp_2665: int;
  var {:pointer} Tmp_2666: int;
  var {:pointer} Tmp_2667: int;
  var {:pointer} Tmp_2669: int;
  var {:pointer} Tmp_2670: int;
  var {:pointer} Tmp_2671: int;
  var {:pointer} Tmp_2672: int;
  var {:scalar} Tmp_2673: int;
  var {:pointer} Tmp_2674: int;
  var {:scalar} status_79: int;
  var {:scalar} instanceNum: int;
  var {:pointer} Tmp_2675: int;
  var {:scalar} Tmp_2676: int;
  var {:scalar} Tmp_2677: int;
  var {:scalar} OrgLUNCount: int;
  var {:scalar} Tmp_2678: int;
  var {:scalar} Tmp_2679: int;
  var {:pointer} Tmp_2680: int;
  var {:pointer} Tmp_2681: int;
  var {:pointer} FdoExtension_8: int;
  var {:pointer} DeviceRelations: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;

  anon0:
    FdoExtension_8 := actual_FdoExtension_8;
    DeviceRelations := actual_DeviceRelations;
    call {:si_unique_call 1916} Tmp_2644 := __HAVOC_malloc(2680);
    call {:si_unique_call 1917} Tmp_2649 := __HAVOC_malloc(4);
    call {:si_unique_call 1918} Tmp_2655 := __HAVOC_malloc(2680);
    call {:si_unique_call 1919} Tmp_2658 := __HAVOC_malloc(4);
    call {:si_unique_call 1920} Tmp_2659 := __HAVOC_malloc(2680);
    call {:si_unique_call 1921} Tmp_2662 := __HAVOC_malloc(2680);
    call {:si_unique_call 1922} Tmp_2663 := __HAVOC_malloc(2680);
    call {:si_unique_call 1923} Tmp_2666 := __HAVOC_malloc(2680);
    call {:si_unique_call 1924} Tmp_2667 := __HAVOC_malloc(2680);
    call {:si_unique_call 1925} Tmp_2669 := __HAVOC_malloc(2680);
    call {:si_unique_call 1926} Tmp_2672 := __HAVOC_malloc(2680);
    call {:si_unique_call 1927} Tmp_2674 := __HAVOC_malloc(4);
    call {:si_unique_call 1928} Tmp_2675 := __HAVOC_malloc(2680);
    call {:si_unique_call 1929} Tmp_2680 := __HAVOC_malloc(2680);
    call {:si_unique_call 1930} Tmp_2681 := __HAVOC_malloc(2680);
    status_79 := 0;
    instanceNum := 0;
    OrgLUNCount := 0;
    PdoExtension_30 := 0;
    call {:si_unique_call 1931} sdv_do_paged_code_check();
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc OrgLUNCount;
    call {:si_unique_call 1932} status_79 := Sbp2Get1394ConfigInfo(FdoExtension_8, 0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_79 >= 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    status_79 := -1073741823;
    goto L27;

  L27:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2680;
    assume {:nonnull} Tmp_2680 != 0;
    assume Tmp_2680 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2662;
    assume {:nonnull} Tmp_2662 != 0;
    assume Tmp_2662 > 0;
    havoc Tmp_2653;
    assume {:nonnull} Tmp_2653 != 0;
    assume Tmp_2653 > 0;
    havoc PdoExtension_30;
    goto L28;

  L28:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} PdoExtension_30 != 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2681;
    assume {:nonnull} Tmp_2681 != 0;
    assume Tmp_2681 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_2681)], 256) != 0;
    i_10 := 0;
    goto L35;

  L35:
    call {:si_unique_call 1933} i_10, Tmp_2664, Tmp_2669 := Sbp2CreateDeviceRelations_loop_L35(i_10, Tmp_2664, Tmp_2669, OrgLUNCount, FdoExtension_8);
    goto L35_last;

  L35_last:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} OrgLUNCount > i_10;
    Tmp_2664 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2669;
    assume {:nonnull} Tmp_2669 != 0;
    assume Tmp_2669 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    i_10 := i_10 + 1;
    goto anon60_Else_dummy;

  anon60_Else_dummy:
    assume false;
    return;

  anon60_Then:
    goto L36;

  L36:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_79 < 0;
    call {:si_unique_call 1934} Status_2 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Status_2 >= 0;
    call {:si_unique_call 1935} workItem_1 := IoAllocateWorkItem(0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} workItem_1 != 0;
    call {:si_unique_call 1936} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L30;

  L30:
    Tmp_2642 := status_79;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon50_Then:
    assume {:partition} workItem_1 == 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    call {:si_unique_call 1937} vslice_dummy_var_356 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_8), 0);
    goto L30;

  anon49_Then:
    assume {:partition} 0 > Status_2;
    goto L30;

  anon61_Then:
    assume {:partition} 0 <= status_79;
    goto L30;

  anon48_Then:
    assume {:partition} i_10 >= OrgLUNCount;
    goto L36;

  anon59_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_2681)], 256) == 0;
    goto L30;

  anon47_Then:
    assume {:partition} PdoExtension_30 == 0;
    goto L30;

  anon58_Then:
    goto L28;

  anon46_Then:
    status_79 := 0;
    i_10 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1938} i_10, Tmp_2643, Tmp_2644, Tmp_2645, Tmp_2646, Tmp_2647, subStatus, Tmp_2649, pdoExtension_25, Tmp_2651, Tmp_2652, Tmp_2654, Tmp_2655, Tmp_2656, Tmp_2657, Tmp_2659, Tmp_2660, Tmp_2661, Tmp_2663, Tmp_2665, Tmp_2666, Tmp_2667, Tmp_2671, Tmp_2672, Tmp_2673, Tmp_2674, status_79, instanceNum, Tmp_2675, Tmp_2677, Tmp_2678, Tmp_2679, vslice_dummy_var_357, vslice_dummy_var_358 := Sbp2CreateDeviceRelations_loop_L58(i_10, Tmp_2643, Tmp_2644, Tmp_2645, Tmp_2646, Tmp_2647, subStatus, Tmp_2649, pdoExtension_25, Tmp_2651, Tmp_2652, Tmp_2654, Tmp_2655, Tmp_2656, Tmp_2657, Tmp_2659, Tmp_2660, Tmp_2661, Tmp_2663, Tmp_2665, Tmp_2666, Tmp_2667, Tmp_2671, Tmp_2672, Tmp_2673, Tmp_2674, status_79, instanceNum, Tmp_2675, Tmp_2677, Tmp_2678, Tmp_2679, FdoExtension_8, DeviceRelations, vslice_dummy_var_357, vslice_dummy_var_358);
    goto L58_last;

  L58_last:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_2678 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2663;
    assume {:nonnull} Tmp_2663 != 0;
    assume Tmp_2663 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    subStatus := 0;
    Tmp_2647 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2655;
    assume {:nonnull} Tmp_2655 != 0;
    assume Tmp_2655 > 0;
    havoc Tmp_2654;
    assume {:nonnull} Tmp_2654 != 0;
    assume Tmp_2654 > 0;
    havoc pdoExtension_25;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_2665 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2652 := Tmp_2665;
    Tmp_2673 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2672;
    Tmp_2657 := Tmp_2672 + Tmp_2673 * 268;
    call {:si_unique_call 1939} subStatus := Sbp2ReInitializePdo(FdoExtension_8, Tmp_2657, Tmp_2652);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} subStatus >= 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2679;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2674;
    Tmp_2646 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2667;
    assume {:nonnull} Tmp_2667 != 0;
    assume Tmp_2667 > 0;
    assume {:nonnull} Tmp_2674 != 0;
    assume Tmp_2674 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2677 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2644;
    assume {:nonnull} Tmp_2644 != 0;
    assume Tmp_2644 > 0;
    call {:si_unique_call 1940} vslice_dummy_var_357 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    i_10 := i_10 + 1;
    goto L73_dummy;

  L73_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} 0 > subStatus;
    goto L73;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L66;

  anon62_Then:
    instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 1941} Tmp_2643, Tmp_2651, Tmp_2659, Tmp_2661, Tmp_2671, status_79, instanceNum := Sbp2CreateDeviceRelations_loop_L80(i_10, Tmp_2643, Tmp_2651, Tmp_2659, Tmp_2661, Tmp_2671, status_79, instanceNum, FdoExtension_8);
    goto L80_last;

  L80_last:
    Tmp_2651 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2661 := Tmp_2651;
    Tmp_2643 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2659;
    Tmp_2671 := Tmp_2659 + Tmp_2643 * 268;
    call {:si_unique_call 1944} status_79 := Sbp2CreatePdo(FdoExtension_8, Tmp_2671, Tmp_2661);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_79 != -1073741771;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_79 < 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_2658;
    assume {:nonnull} Tmp_2658 != 0;
    assume Tmp_2658 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2658], 1) != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_2670;
    havoc Tmp_2676;
    call {:si_unique_call 1942} WPP_SF_D(Tmp_2676, 100, Tmp_2670, status_79);
    goto L98;

  L98:
    Tmp_2642 := status_79;
    goto L1;

  anon56_Then:
    goto L98;

  anon66_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2658], 1) == 0;
    goto L98;

  anon55_Then:
    goto L98;

  anon54_Then:
    assume {:partition} 0 <= status_79;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2660;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2649;
    Tmp_2656 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2675;
    assume {:nonnull} Tmp_2649 != 0;
    assume Tmp_2649 > 0;
    assume {:nonnull} Tmp_2675 != 0;
    assume Tmp_2675 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2645 := i_10;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2666;
    assume {:nonnull} Tmp_2666 != 0;
    assume Tmp_2666 > 0;
    call {:si_unique_call 1943} vslice_dummy_var_358 := sdv_ObReferenceObject(0);
    goto L73;

  anon53_Then:
    assume {:partition} status_79 == -1073741771;
    goto anon53_Then_dummy;

  anon53_Then_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    goto L27;

  anon45_Then:
    assume {:partition} 0 > status_79;
    Tmp_2642 := status_79;
    goto L1;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_50: int) returns (Tmp_2682: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_50: int) returns (Tmp_2682: int)
{
  var {:scalar} Tmp_2683: int;
  var {:scalar} errorId: int;
  var {:scalar} waitValue_6: int;
  var {:pointer} sdv_871: int;
  var {:scalar} Tmp_2684: int;
  var {:pointer} Tmp_2685: int;
  var {:pointer} pdoExtension_26: int;
  var {:pointer} Tmp_2686: int;
  var {:pointer} Tmp_2687: int;
  var {:pointer} Tmp_2688: int;
  var {:pointer} Tmp_2689: int;
  var {:pointer} Tmp_2690: int;
  var {:pointer} Tmp_2691: int;
  var {:pointer} Tmp_2692: int;
  var {:scalar} sdv_873: int;
  var {:scalar} sdv_874: int;
  var {:pointer} Tmp_2693: int;
  var {:scalar} Tmp_2694: int;
  var {:scalar} Tmp_2695: int;
  var {:pointer} sdv_876: int;
  var {:pointer} Tmp_2696: int;
  var {:pointer} Tmp_2697: int;
  var {:pointer} Tmp_2698: int;
  var {:pointer} Tmp_2699: int;
  var {:scalar} Tmp_2700: int;
  var {:pointer} Tmp_2701: int;
  var {:scalar} Tmp_2702: int;
  var {:pointer} Tmp_2703: int;
  var {:pointer} Tmp_2704: int;
  var {:pointer} Tmp_2705: int;
  var {:pointer} Tmp_2706: int;
  var {:scalar} Tmp_2707: int;
  var {:scalar} Tmp_2708: int;
  var {:scalar} enabledBusResetNotification: int;
  var {:pointer} Tmp_2709: int;
  var {:scalar} Tmp_2710: int;
  var {:pointer} Tmp_2711: int;
  var {:pointer} Tmp_2712: int;
  var {:pointer} Tmp_2713: int;
  var {:pointer} Tmp_2714: int;
  var {:pointer} Tmp_2715: int;
  var {:pointer} Tmp_2716: int;
  var {:pointer} Tmp_2717: int;
  var {:pointer} Tmp_2718: int;
  var {:scalar} Tmp_2719: int;
  var {:pointer} Tmp_2720: int;
  var {:pointer} Tmp_2721: int;
  var {:pointer} Tmp_2722: int;
  var {:scalar} Tmp_2723: int;
  var {:pointer} fdoDeviceExtension: int;
  var {:scalar} Tmp_2724: int;
  var {:scalar} Tmp_2725: int;
  var {:pointer} Tmp_2726: int;
  var {:pointer} Tmp_2727: int;
  var {:scalar} Tmp_2728: int;
  var {:pointer} Tmp_2729: int;
  var {:pointer} Tmp_2730: int;
  var {:pointer} fdoExtension_15: int;
  var {:scalar} Tmp_2731: int;
  var {:pointer} sdv_887: int;
  var {:pointer} Tmp_2732: int;
  var {:pointer} Tmp_2733: int;
  var {:pointer} Tmp_2734: int;
  var {:scalar} Tmp_2735: int;
  var {:scalar} status_80: int;
  var {:scalar} Tmp_2737: int;
  var {:pointer} Tmp_2738: int;
  var {:scalar} Tmp_2739: int;
  var {:scalar} Tmp_2741: int;
  var {:pointer} DeviceObject_50: int;
  var boogieTmp: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;

  anon0:
    call {:si_unique_call 1945} waitValue_6 := __HAVOC_malloc(20);
    DeviceObject_50 := actual_DeviceObject_50;
    call {:si_unique_call 1946} Tmp_2688 := __HAVOC_malloc(4);
    call {:si_unique_call 1947} Tmp_2689 := __HAVOC_malloc(4);
    call {:si_unique_call 1948} Tmp_2690 := __HAVOC_malloc(4);
    call {:si_unique_call 1949} Tmp_2691 := __HAVOC_malloc(4);
    call {:si_unique_call 1950} Tmp_2693 := __HAVOC_malloc(4);
    call {:si_unique_call 1951} Tmp_2696 := __HAVOC_malloc(4);
    call {:si_unique_call 1952} Tmp_2697 := __HAVOC_malloc(4);
    call {:si_unique_call 1953} Tmp_2705 := __HAVOC_malloc(4);
    call {:si_unique_call 1954} Tmp_2706 := __HAVOC_malloc(4);
    call {:si_unique_call 1955} Tmp_2727 := __HAVOC_malloc(4);
    call {:si_unique_call 1956} Tmp_2729 := __HAVOC_malloc(4);
    call {:si_unique_call 1957} Tmp_2734 := __HAVOC_malloc(4);
    call {:si_unique_call 1958} Tmp_2738 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_50 != 0;
    assume DeviceObject_50 > 0;
    havoc pdoExtension_26;
    assume {:nonnull} DeviceObject_50 != 0;
    assume DeviceObject_50 > 0;
    havoc fdoExtension_15;
    enabledBusResetNotification := 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    Tmp_2682 := -1073741130;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon168_Then:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2713;
    assume {:nonnull} Tmp_2713 != 0;
    assume Tmp_2713 > 0;
    havoc fdoDeviceExtension;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc vslice_dummy_var_230;
    call {:si_unique_call 1959} vslice_dummy_var_365 := Sbp2ConfigLegacyDevice(DeviceObject_50, vslice_dummy_var_230);
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2698;
    assume {:nonnull} Tmp_2698 != 0;
    assume Tmp_2698 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_2698)], 256) != 0;
    assume {:nonnull} fdoDeviceExtension != 0;
    assume fdoDeviceExtension > 0;
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1960} status_80 := Sbp2InitializeDeviceExtension#1(pdoExtension_26);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} yogi_error != 1;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} status_80 >= 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    havoc Tmp_2689;
    assume {:nonnull} Tmp_2689 != 0;
    assume Tmp_2689 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2689], 1) != 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc Tmp_2733;
    havoc Tmp_2739;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2704;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    havoc vslice_dummy_var_231;
    call {:si_unique_call 1961} WPP_SF_qD(Tmp_2739, 17, Tmp_2733, pdoExtension_26, vslice_dummy_var_231);
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2685;
    assume {:nonnull} Tmp_2685 != 0;
    assume Tmp_2685 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} Tmp_2685 != 0;
    assume Tmp_2685 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Tmp_2685 != 0;
    assume Tmp_2685 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto L42;

  L42:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    havoc Tmp_2697;
    assume {:nonnull} Tmp_2697 != 0;
    assume Tmp_2697 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2697], 1) != 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    havoc Tmp_2714;
    havoc Tmp_2725;
    call {:si_unique_call 1962} WPP_SF_q(Tmp_2725, 18, Tmp_2714, pdoExtension_26);
    goto L39;

  L39:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2701;
    assume {:nonnull} Tmp_2701 != 0;
    assume Tmp_2701 > 0;
    havoc vslice_dummy_var_232;
    call {:si_unique_call 1963} status_80 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_232, 1);
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} status_80 >= 0;
    enabledBusResetNotification := 1;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1964} vslice_dummy_var_362 := KeResetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_26));
    call {:si_unique_call 1965} status_80 := Sbp2Issue1394BusReset#1(pdoExtension_26);
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} status_80 < 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    havoc Tmp_2734;
    assume {:nonnull} Tmp_2734 != 0;
    assume Tmp_2734 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2734], 1) != 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_2732;
    havoc Tmp_2737;
    call {:si_unique_call 1966} WPP_SF_qD(Tmp_2737, 19, Tmp_2732, pdoExtension_26, status_80);
    goto L265;

  L265:
    call {:si_unique_call 1967} sdv_873 := IsDeviceGone#1(pdoExtension_26, status_80);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} sdv_873 != 0;
    errorId := 997;
    goto L169;

  L169:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} status_80 >= 0;
    assume {:nonnull} DeviceObject_50 != 0;
    assume DeviceObject_50 > 0;
    goto L174;

  L174:
    Tmp_2682 := status_80;
    goto L1;

  anon191_Then:
    assume {:partition} 0 > status_80;
    call {:si_unique_call 1968} Sbp2CreateRequestErrorLog(DeviceObject_50, 0, errorId, status_80);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2738;
    assume {:nonnull} Tmp_2738 != 0;
    assume Tmp_2738 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2738], 1) != 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_2717;
    havoc Tmp_2684;
    call {:si_unique_call 1969} WPP_SF_qD(Tmp_2684, 28, Tmp_2717, pdoExtension_26, status_80);
    goto L179;

  L179:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} enabledBusResetNotification != 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2703;
    assume {:nonnull} Tmp_2703 != 0;
    assume Tmp_2703 > 0;
    havoc vslice_dummy_var_233;
    call {:si_unique_call 1970} vslice_dummy_var_363 := Sbp2EnableBusResetNotification#1(vslice_dummy_var_233, 0);
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} yogi_error != 1;
    goto L174;

  anon227_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    assume {:partition} enabledBusResetNotification == 0;
    goto L174;

  anon193_Then:
    goto L179;

  anon225_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2738], 1) == 0;
    goto L179;

  anon192_Then:
    goto L179;

  anon209_Then:
    assume {:partition} sdv_873 == 0;
    goto L73;

  L73:
    goto anon176_Then, anon176_Else;

  anon176_Else:
    havoc Tmp_2696;
    assume {:nonnull} Tmp_2696 != 0;
    assume Tmp_2696 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2696], 1) != 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1971} Tmp_2710 := corral_nondet();
    call {:si_unique_call 1972} sdv_887 := GET_DEVICE_NAME(pdoExtension_26);
    call {:si_unique_call 1973} sdv_874 := GET_LUN(pdoExtension_26);
    havoc Tmp_2711;
    havoc Tmp_2735;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2699;
    assume {:nonnull} Tmp_2699 != 0;
    assume Tmp_2699 > 0;
    havoc vslice_dummy_var_234;
    call {:si_unique_call 1974} WPP_SF_qdSdd(Tmp_2735, 20, Tmp_2711, pdoExtension_26, sdv_874, sdv_887, vslice_dummy_var_234, Tmp_2710);
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2716;
    assume {:nonnull} Tmp_2716 != 0;
    assume Tmp_2716 > 0;
    assume {:nonnull} waitValue_6 != 0;
    assume waitValue_6 > 0;
    call {:si_unique_call 1975} status_80 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} yogi_error != 1;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} status_80 != 0;
    goto L99;

  L99:
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc Tmp_2688;
    assume {:nonnull} Tmp_2688 != 0;
    assume Tmp_2688 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2688], 1) != 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    call {:si_unique_call 1976} sdv_876 := GET_DEVICE_NAME(pdoExtension_26);
    havoc Tmp_2715;
    havoc Tmp_2694;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc vslice_dummy_var_235;
    call {:si_unique_call 1977} WPP_SF_qSDD(Tmp_2694, 21, Tmp_2715, pdoExtension_26, sdv_876, status_80, vslice_dummy_var_235);
    goto L100;

  L100:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L251;

  L251:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_2693;
    assume {:nonnull} Tmp_2693 != 0;
    assume Tmp_2693 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2693], 1) != 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 1978} sdv_871 := GET_DEVICE_NAME(pdoExtension_26);
    havoc Tmp_2692;
    havoc Tmp_2700;
    call {:si_unique_call 1979} WPP_SF_qSD(Tmp_2700, 22, Tmp_2692, pdoExtension_26, sdv_871, status_80);
    goto L252;

  L252:
    errorId := 1052;
    goto L169;

  anon206_Then:
    goto L252;

  anon224_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2693], 1) == 0;
    goto L252;

  anon205_Then:
    goto L252;

  anon180_Then:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    goto L251;

  anon182_Then:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1980} vslice_dummy_var_359 := Sbp2AccessRegister#1(pdoExtension_26, Reserved__DEVICE_EXTENSION(pdoExtension_26), 258);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1981} vslice_dummy_var_360 := Sbp2AccessRegister#1(pdoExtension_26, Reserved__DEVICE_EXTENSION(pdoExtension_26), 272);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto L126;

  L126:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    call {:si_unique_call 1982} status_80 := Sbp2IssueInternalCommand(pdoExtension_26, 18);
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} status_80 >= 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2691;
    assume {:nonnull} Tmp_2691 != 0;
    assume Tmp_2691 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2691], 1) != 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2723;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2712;
    assume {:nonnull} Tmp_2712 != 0;
    assume Tmp_2712 > 0;
    havoc Tmp_2683;
    havoc Tmp_2722;
    havoc Tmp_2741;
    call {:si_unique_call 1983} WPP_SF_qDD(Tmp_2741, 23, Tmp_2722, pdoExtension_26, Tmp_2683, Tmp_2723);
    goto L129;

  L129:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2686;
    assume {:nonnull} Tmp_2686 != 0;
    assume Tmp_2686 > 0;
    havoc Tmp_2695;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_2706;
    assume {:nonnull} Tmp_2706 != 0;
    assume Tmp_2706 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2706], 1) != 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2687;
    assume {:nonnull} Tmp_2687 != 0;
    assume Tmp_2687 > 0;
    havoc Tmp_2707;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2731;
    havoc Tmp_2720;
    havoc Tmp_2719;
    call {:si_unique_call 1984} WPP_SF_qDD(Tmp_2719, 26, Tmp_2720, pdoExtension_26, Tmp_2731, Tmp_2707);
    goto L210;

  L210:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc Tmp_2721;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto L205;

  L205:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto L221;

  L221:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} status_80 >= 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1985} CleanupOrbList#1(pdoExtension_26, -1073741248);
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1986} vslice_dummy_var_361 := Sbp2ManagementTransaction#1(pdoExtension_26, 7, -1);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto L169;

  anon237_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon236_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon199_Then:
    assume {:partition} 0 > status_80;
    goto L169;

  anon195_Then:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} status_80 >= 0;
    call {:si_unique_call 1987} status_80 := Sbp2IssueInternalCommand(pdoExtension_26, 26);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} status_80 < 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    havoc Tmp_2705;
    assume {:nonnull} Tmp_2705 != 0;
    assume Tmp_2705 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2705], 1) != 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    havoc Tmp_2718;
    havoc Tmp_2708;
    call {:si_unique_call 1988} WPP_SF_q(Tmp_2708, 27, Tmp_2718, pdoExtension_26);
    goto L241;

  L241:
    errorId := 1196;
    goto L169;

  anon204_Then:
    goto L241;

  anon239_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2705], 1) == 0;
    goto L241;

  anon203_Then:
    goto L241;

  anon202_Then:
    assume {:partition} 0 <= status_80;
    goto L169;

  anon238_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    assume {:partition} 0 > status_80;
    goto L169;

  anon200_Then:
    goto L169;

  anon198_Then:
    goto L221;

  anon197_Then:
    goto L210;

  anon235_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2706], 1) == 0;
    goto L210;

  anon196_Then:
    goto L210;

  anon234_Then:
    goto L205;

  anon186_Then:
    goto L129;

  anon233_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2691], 1) == 0;
    goto L129;

  anon185_Then:
    goto L129;

  anon183_Then:
    assume {:partition} 0 > status_80;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} status_80 == -1073741632;
    goto L153;

  L153:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2729;
    assume {:nonnull} Tmp_2729 != 0;
    assume Tmp_2729 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2729], 1) != 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_2730;
    havoc Tmp_2702;
    call {:si_unique_call 1989} WPP_SF_qD(Tmp_2702, 24, Tmp_2730, pdoExtension_26, status_80);
    goto L154;

  L154:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1990} vslice_dummy_var_364 := Sbp2ManagementTransaction#1(pdoExtension_26, 7, -1);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L162;

  L162:
    status_80 := -1073741435;
    errorId := 1136;
    goto L169;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon189_Then:
    goto L162;

  anon190_Then:
    goto L154;

  anon240_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2729], 1) == 0;
    goto L154;

  anon188_Then:
    goto L154;

  anon184_Then:
    assume {:partition} status_80 != -1073741632;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} status_80 != 17;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    havoc Tmp_2690;
    assume {:nonnull} Tmp_2690 != 0;
    assume Tmp_2690 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2690], 1) != 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_2709;
    havoc Tmp_2728;
    call {:si_unique_call 1991} WPP_SF_qD(Tmp_2728, 25, Tmp_2709, pdoExtension_26, status_80);
    goto L196;

  L196:
    status_80 := 0;
    goto L129;

  anon194_Then:
    goto L196;

  anon243_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2690], 1) == 0;
    goto L196;

  anon242_Then:
    goto L196;

  anon187_Then:
    assume {:partition} status_80 == 17;
    goto L153;

  anon232_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon231_Then:
    goto L129;

  anon230_Then:
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1992} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, 4);
    goto L126;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon181_Then:
    goto L100;

  anon223_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2688], 1) == 0;
    goto L100;

  anon179_Then:
    goto L100;

  anon178_Then:
    assume {:partition} status_80 == 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    havoc status_80;
    goto L99;

  anon222_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon177_Then:
    goto L74;

  anon221_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2696], 1) == 0;
    goto L74;

  anon176_Then:
    goto L74;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon208_Then:
    goto L265;

  anon244_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2734], 1) == 0;
    goto L265;

  anon207_Then:
    goto L265;

  anon175_Then:
    assume {:partition} 0 <= status_80;
    goto L73;

  anon220_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon174_Then:
    assume {:partition} 0 > status_80;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    assume {:nonnull} pdoExtension_26 != 0;
    assume pdoExtension_26 > 0;
    call {:si_unique_call 1993} CleanupOrbList#1(pdoExtension_26, -1073741248);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    errorId := 975;
    goto L169;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon173_Then:
    goto L39;

  anon218_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2697], 1) == 0;
    goto L39;

  anon217_Then:
    goto L39;

  anon211_Then:
    goto L39;

  anon212_Then:
    goto L42;

  anon216_Then:
    goto L42;

  anon172_Then:
    goto L31;

  anon215_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2689], 1) == 0;
    goto L31;

  anon171_Then:
    goto L31;

  anon170_Then:
    assume {:partition} 0 > status_80;
    errorId := 941;
    goto L169;

  anon214_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon247_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_2698)], 256) == 0;
    goto L20;

  anon169_Then:
    goto L20;

  anon213_Then:
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    havoc Tmp_2727;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2727], 1) != 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    havoc Tmp_2726;
    havoc Tmp_2724;
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    havoc vslice_dummy_var_236;
    call {:si_unique_call 1994} WPP_SF_qD(Tmp_2724, 29, Tmp_2726, fdoExtension_15, vslice_dummy_var_236);
    goto L300;

  L300:
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    status_80 := 0;
    goto L174;

  anon210_Then:
    goto L300;

  anon249_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2727], 1) == 0;
    goto L300;

  anon248_Then:
    goto L300;

  anon167_Then:
    status_80 := -1073741810;
    goto L174;
}



procedure {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_38: int, actual_id_38: int, actual_TraceGuid_38: int, actual_s_p_e_c_i_a_l_136: int, actual_s_p_e_c_i_a_l_137: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_38: int, actual_id_38: int, actual_TraceGuid_38: int, actual_s_p_e_c_i_a_l_136: int, actual_s_p_e_c_i_a_l_137: int)
{
  var {:pointer} TraceGuid_38: int;
  var vslice_dummy_var_366: int;

  anon0:
    call {:si_unique_call 1995} vslice_dummy_var_366 := __HAVOC_malloc(4);
    TraceGuid_38 := actual_TraceGuid_38;
    return;
}



procedure {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_31: int) returns (Tmp_2745: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_31: int) returns (Tmp_2745: int)
{
  var {:pointer} Tmp_2746: int;
  var {:pointer} irpStack_22: int;
  var {:pointer} Tmp_2747: int;
  var {:scalar} Tmp_2748: int;
  var {:pointer} Tmp_2750: int;
  var {:pointer} sbp2Req: int;
  var {:pointer} Tmp_2751: int;
  var {:scalar} Tmp_2752: int;
  var {:scalar} status_81: int;
  var {:pointer} Tmp_2753: int;
  var {:pointer} DeviceExtension_12: int;
  var {:pointer} Irp_31: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;

  anon0:
    DeviceExtension_12 := actual_DeviceExtension_12;
    Irp_31 := actual_Irp_31;
    call {:si_unique_call 1996} Tmp_2746 := __HAVOC_malloc(4);
    call {:si_unique_call 1997} Tmp_2753 := __HAVOC_malloc(4);
    call {:si_unique_call 1998} irpStack_22 := sdv_IoGetCurrentIrpStackLocation(Irp_31);
    call {:si_unique_call 1999} status_81 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_81 >= 0;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    havoc sbp2Req;
    assume {:nonnull} irpStack_22 != 0;
    assume irpStack_22 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    havoc Tmp_2746;
    assume {:nonnull} Tmp_2746 != 0;
    assume Tmp_2746 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2746], 1) != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_2751;
    havoc Tmp_2752;
    assume {:nonnull} irpStack_22 != 0;
    assume irpStack_22 > 0;
    havoc vslice_dummy_var_237;
    call {:si_unique_call 2000} WPP_SF_qDD(Tmp_2752, 67, Tmp_2751, DeviceExtension_12, vslice_dummy_var_237, 24);
    goto L25;

  L25:
    status_81 := -1073741811;
    goto L34;

  L34:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    call {:si_unique_call 2001} vslice_dummy_var_367 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_12), Irp_31);
    call {:si_unique_call 2002} sdv_IoCompleteRequest(0, 0);
    Tmp_2745 := status_81;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    goto L25;

  anon36_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2746], 1) == 0;
    goto L25;

  anon30_Then:
    goto L25;

  anon35_Then:
    goto L20;

  L20:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sbp2Req == 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_2753;
    assume {:nonnull} Tmp_2753 != 0;
    assume Tmp_2753 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2753], 1) != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_2747;
    havoc Tmp_2748;
    call {:si_unique_call 2003} WPP_SF_q(Tmp_2748, 68, Tmp_2747, DeviceExtension_12);
    goto L56;

  L56:
    status_81 := -1073741811;
    goto L34;

  anon34_Then:
    goto L56;

  anon39_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2753], 1) == 0;
    goto L56;

  anon33_Then:
    goto L56;

  anon29_Then:
    assume {:partition} sbp2Req != 0;
    status_81 := -1073741822;
    assume {:nonnull} sbp2Req != 0;
    assume sbp2Req > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    havoc Tmp_2750;
    assume {:nonnull} Tmp_2750 != 0;
    assume Tmp_2750 > 0;
    havoc vslice_dummy_var_238;
    call {:si_unique_call 2004} status_81 := Sbp2Get1394ConfigInfo(vslice_dummy_var_238, sbp2Req);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto L34;

  anon37_Then:
    status_81 := -1073741811;
    goto L34;

  anon28_Then:
    assume {:nonnull} irpStack_22 != 0;
    assume irpStack_22 > 0;
    havoc sbp2Req;
    goto L20;

  anon27_Then:
    assume {:partition} 0 > status_81;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    call {:si_unique_call 2005} sdv_IoCompleteRequest(0, 0);
    Tmp_2745 := status_81;
    goto L1;
}



procedure {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_39: int, actual_id_39: int, actual_TraceGuid_39: int, actual_s_p_e_c_i_a_l_138: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_39: int, actual_id_39: int, actual_TraceGuid_39: int, actual_s_p_e_c_i_a_l_138: int)
{
  var {:scalar} sdv_894: int;
  var {:pointer} Tmp_2757: int;
  var {:scalar} Tmp_2760: int;
  var {:pointer} TraceGuid_39: int;
  var {:pointer} s_p_e_c_i_a_l_138: int;
  var vslice_dummy_var_368: int;

  anon0:
    call {:si_unique_call 2006} vslice_dummy_var_368 := __HAVOC_malloc(4);
    TraceGuid_39 := actual_TraceGuid_39;
    s_p_e_c_i_a_l_138 := actual_s_p_e_c_i_a_l_138;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_138 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_138 != 0;
    assume s_p_e_c_i_a_l_138 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_138] != 0;
    Tmp_2760 := (sdv_894 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_138 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_138 != 0;
    assume s_p_e_c_i_a_l_138 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_138] != 0;
    Tmp_2757 := s_p_e_c_i_a_l_138;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_138] == 0;
    Tmp_2757 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_138 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} Mem_T.INT4[s_p_e_c_i_a_l_138] == 0;
    Tmp_2760 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_138 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_40: int, actual_id_40: int, actual_TraceGuid_40: int, actual_s_p_e_c_i_a_l_139: int, actual_s_p_e_c_i_a_l_140: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_40: int, actual_id_40: int, actual_TraceGuid_40: int, actual_s_p_e_c_i_a_l_139: int, actual_s_p_e_c_i_a_l_140: int)
{
  var {:pointer} TraceGuid_40: int;
  var vslice_dummy_var_369: int;

  anon0:
    call {:si_unique_call 2007} vslice_dummy_var_369 := __HAVOC_malloc(4);
    TraceGuid_40 := actual_TraceGuid_40;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AR_Length__ADDRESS_RANGE"} {:fieldname "AR_Length"} AR_Length__ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Abandoned__DISPATCHER_HEADER"} {:fieldname "Abandoned"} Abandoned__DISPATCHER_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Absolute__DISPATCHER_HEADER"} {:fieldname "Absolute"} Absolute__DISPATCHER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AcceleratedTransfer"} AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Action__BUS_RESET_ENTRY"} {:fieldname "Action"} Action__BUS_RESET_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterScansDown"} AdapterScansDown__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterScansDown"} AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AddressAndStatus__STATUS_FIFO_BLOCK"} {:fieldname "AddressAndStatus"} AddressAndStatus__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "AddressContext"} AddressContext__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "AddressHandle"} AddressHandle__ADDRESS_CONTEXT(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.AddressType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AddressType"} AddressType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "Address"} Address__ADDRESS_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AffinitySet__DISPATCHER_HEADER"} {:fieldname "AffinitySet"} AffinitySet__DISPATCHER_HEADER(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__IO_SCSI_CAPABILITIES"} {:fieldname "AlignmentMask"} AlignmentMask__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AlignmentMask"} AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_72"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_72(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__CDB6INQUIRY"} {:fieldname "AllocationLength"} AllocationLength__CDB6INQUIRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AppendToNextContextToFree__DEVICE_EXTENSION"} {:fieldname "AppendToNextContextToFree"} AppendToNextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 748
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_42"} {:fieldname "Argument1"} Argument1_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_1"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AsyncContextBase__DEVICE_EXTENSION"} {:fieldname "AsyncContextBase"} AsyncContextBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4524
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_72"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_72(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncReqCtx__ARCP_ORB"} {:fieldname "AsyncReqCtx"} AsyncReqCtx__ARCP_ORB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_72"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_72(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockLength__MODE_PARAMETER_BLOCK"} {:fieldname "BlockLength"} BlockLength__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Buffer"} Buffer_unnamed_tag_74(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusAddress__OCTLET"} {:fieldname "BusAddress"} BusAddress__OCTLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusFdo__DEVICE_EXTENSION"} {:fieldname "BusFdo"} BusFdo__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMajorVersion"} BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMinorVersion"} BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "BusRequestContextPool"} BusRequestContextPool__DEVICE_EXTENSION(x: int) : int
{
  x + 4388
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "BusRequestIrpIrbListHead"} BusRequestIrpIrbListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4500
}

function {:inline true} {:fieldmap "Mem_T.BusRequestLock__DEVICE_EXTENSION"} {:fieldname "BusRequestLock"} BusRequestLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4516
}

function {:inline true} {:fieldmap "Mem_T.BusResetEntryCount__DEVICE_EXTENSION"} {:fieldname "BusResetEntryCount"} BusResetEntryCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4776
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "BusResetEntry"} BusResetEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4768
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__BUS_RESET_ENTRY"} {:fieldname "BusResetGeneration"} BusResetGeneration__BUS_RESET_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__DEVICE_EXTENSION"} {:fieldname "BusResetGeneration"} BusResetGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1424
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_72"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_72(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusResetPacket__FDO_DEVICE_EXTENSION"} {:fieldname "BusResetPacket"} BusResetPacket__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3468
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_72"} {:fieldname "BusReset"} BusReset_unnamed_tag_72(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Busy__KDEVICE_QUEUE"} {:fieldname "Busy"} Busy__KDEVICE_QUEUE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte0_unnamed_tag_78"} {:fieldname "Byte0"} Byte0_unnamed_tag_78(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1_unnamed_tag_78"} {:fieldname "Byte1"} Byte1_unnamed_tag_78(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2_unnamed_tag_78"} {:fieldname "Byte2"} Byte2_unnamed_tag_78(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3_unnamed_tag_78"} {:fieldname "Byte3"} Byte3_unnamed_tag_78(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Byte4_unnamed_tag_70"} {:fieldname "Byte4"} Byte4_unnamed_tag_70(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte5_unnamed_tag_70"} {:fieldname "Byte5"} Byte5_unnamed_tag_70(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte6_unnamed_tag_70"} {:fieldname "Byte6"} Byte6_unnamed_tag_70(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte7_unnamed_tag_70"} {:fieldname "Byte7"} Byte7_unnamed_tag_70(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ByteArray__OCTLET"} {:fieldname "ByteArray"} ByteArray__OCTLET(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CDB10__CDB"} {:fieldname "CDB10"} CDB10__CDB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.CDB6GENERIC__CDB"} {:fieldname "CDB6GENERIC"} CDB6GENERIC__CDB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CDB6INQUIRY__CDB"} {:fieldname "CDB6INQUIRY"} CDB6INQUIRY__CDB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_30"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_REQUEST_BLOCK"} {:fieldname "CdbLength"} CdbLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "CmdOrbAddress"} CmdOrbAddress__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CmdOrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrb"} CmdOrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CmdOrbs__COMMON_BUFFER_DATA"} {:fieldname "CmdOrbs"} CmdOrbs__COMMON_BUFFER_DATA(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T.CmdSetId__DEVICE_INFORMATION"} {:fieldname "CmdSetId"} CmdSetId__DEVICE_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CmdSetSpecId__DEVICE_INFORMATION"} {:fieldname "CmdSetSpecId"} CmdSetSpecId__DEVICE_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "CommonBufferContext"} CommonBufferContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1864
}

function {:inline true} {:fieldmap "Mem_T.CommonBuffer__DEVICE_EXTENSION"} {:fieldname "CommonBuffer"} CommonBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 1860
}

function {:inline true} {:fieldmap "Mem_T.Common__IO_REMOVE_LOCK"} {:fieldname "Common"} Common__IO_REMOVE_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Complete"} Complete__REQUEST_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__DEVICE_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__DEVICE_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._CONFIG_ROM"} {:fieldname "ConfigRom"} ConfigRom__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3272
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ConsecutiveFailedRequestCount__DEVICE_EXTENSION"} {:fieldname "ConsecutiveFailedRequestCount"} ConsecutiveFailedRequestCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4788
}

function {:inline true} {:fieldmap "Mem_T.Contents__STATUS_FIFO_BLOCK"} {:fieldname "Contents"} Contents__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__NOTIFICATION_INFO_WXP"} {:fieldname "Context"} Context__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Control_WPP_PROJECT_CONTROL_BLOCK"} {:fieldname "Control"} Control_WPP_PROJECT_CONTROL_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Control__CDB6INQUIRY"} {:fieldname "Control"} Control__CDB6INQUIRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CounterProfiling__DISPATCHER_HEADER"} {:fieldname "CounterProfiling"} CounterProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.CrashDumpCount__DEVICE_EXTENSION"} {:fieldname "CrashDumpCount"} CrashDumpCount__DEVICE_EXTENSION(x: int) : int
{
  x + 780
}

function {:inline true} {:fieldmap "Mem_T.CsrRegisterBase__DEVICE_INFORMATION"} {:fieldname "CsrRegisterBase"} CsrRegisterBase__DEVICE_INFORMATION(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_High__LOGIN_RESPONSE"} {:fieldname "Csr_Off_High"} Csr_Off_High__LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_Low__LOGIN_RESPONSE"} {:fieldname "Csr_Off_Low"} Csr_Off_Low__LOGIN_RESPONSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CurrentGeneration__DEVICE_EXTENSION"} {:fieldname "CurrentGeneration"} CurrentGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1420
}

function {:inline true} {:fieldmap "Mem_T.CurrentKey__DEVICE_EXTENSION"} {:fieldname "CurrentKey"} CurrentKey__DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CycleProfiling__DISPATCHER_HEADER"} {:fieldname "CycleProfiling"} CycleProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1_LOG_ENTRY32"} {:fieldname "Data1"} Data1_LOG_ENTRY32(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2_LOG_ENTRY32"} {:fieldname "Data2"} Data2_LOG_ENTRY32(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataDescriptor__ORB_EXT_CMD"} {:fieldname "DataDescriptor"} DataDescriptor__ORB_EXT_CMD(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "DataMappingHandle"} DataMappingHandle__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE"} {:fieldname "Dbd"} Dbd__MODE_SENSE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE10"} {:fieldname "Dbd"} Dbd__MODE_SENSE10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._DEBUG_LOG"} {:fieldname "DbgLog"} DbgLog__DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.DebugActive__DISPATCHER_HEADER"} {:fieldname "DebugActive"} DebugActive__DISPATCHER_HEADER(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "DeferredPowerRequest"} DeferredPowerRequest__DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DensityCode__MODE_PARAMETER_BLOCK"} {:fieldname "DensityCode"} DensityCode__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__REQUEST_CONTEXT"} {:fieldname "DeviceExtension"} DeviceExtension__REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceInfo__DEVICE_EXTENSION"} {:fieldname "DeviceInfo"} DeviceInfo__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListEntry"} DeviceListEntry__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListHead"} DeviceListHead__KDEVICE_QUEUE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceListSize__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListSize"} DeviceListSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.DeviceList__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceList"} DeviceList__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "DeviceManagementTimeoutDpc"} DeviceManagementTimeoutDpc__DEVICE_EXTENSION(x: int) : int
{
  x + 4532
}

function {:inline true} {:fieldmap "Mem_T._MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "DeviceModeHeaderAndPage"} DeviceModeHeaderAndPage__DEVICE_EXTENSION(x: int) : int
{
  x + 1316
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ADDRESS_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ADDRESS_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ASYNC_REQUEST_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.P_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 752
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__FDO_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE_ENTRY"} {:fieldname "DeviceQueueEntry"} DeviceQueueEntry_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE"} {:fieldname "DeviceQueue"} DeviceQueue__DEVICE_OBJECT(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DeviceSpecificParameter__MODE_PARAMETER_HEADER"} {:fieldname "DeviceSpecificParameter"} DeviceSpecificParameter__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_35"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceTypeModifier"} DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceType"} DeviceType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_80"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_80(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DisableIncrement__DISPATCHER_HEADER"} {:fieldname "DisableIncrement"} DisableIncrement__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DpcActive__DISPATCHER_HEADER"} {:fieldname "DpcActive"} DpcActive__DISPATCHER_HEADER(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "DummyContext"} DummyContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Dummy"} Dummy__DEVICE_EXTENSION(x: int) : int
{
  x + 1460
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Elements__QUERY_LOGIN_RESPONSE"} {:fieldname "Elements"} Elements__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EncodedTolerableDelay__DISPATCHER_HEADER"} {:fieldname "EncodedTolerableDelay"} EncodedTolerableDelay__DISPATCHER_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__REQUEST_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Expired__DISPATCHER_HEADER"} {:fieldname "Expired"} Expired__DISPATCHER_HEADER(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.ExtensionDataSpinLock__DEVICE_EXTENSION"} {:fieldname "ExtensionDataSpinLock"} ExtensionDataSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4528
}

function {:inline true} {:fieldmap "Mem_T.FifoMdl__ADDRESS_FIFO"} {:fieldname "FifoMdl"} FifoMdl__ADDRESS_FIFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Fifo__NOTIFICATION_INFO_WXP"} {:fieldname "Fifo"} Fifo__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirmwareVersion__DEVICE_INFORMATION"} {:fieldname "FirmwareVersion"} FirmwareVersion__DEVICE_INFORMATION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Flag_LOG_ENTRY32"} {:fieldname "Flag"} Flag_LOG_ENTRY32(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__ASYNC_REQUEST_CONTEXT"} {:fieldname "Flags"} Flags__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Flags"} Flags__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_72"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_72(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "FreeContextListHead"} FreeContextListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4372
}

function {:inline true} {:fieldmap "Mem_T.FreeContextLock__DEVICE_EXTENSION"} {:fieldname "FreeContextLock"} FreeContextLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4520
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__BUS_RESET_DATA"} {:fieldname "GenerationCount"} GenerationCount__BUS_RESET_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Generation__SBP2_BUSRESET_WORKITEM"} {:fieldname "Generation"} Generation__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_72"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_72(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T._IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_72(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_72"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_72(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_72"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_72(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_72"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_72(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "GlobalStatusContext"} GlobalStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4176
}

function {:inline true} {:fieldmap "Mem_T.GroupScheduling__DISPATCHER_HEADER"} {:fieldname "GroupScheduling"} GroupScheduling__DISPATCHER_HEADER(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Hand__DISPATCHER_HEADER"} {:fieldname "Hand"} Hand__DISPATCHER_HEADER(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.HandleCount__DEVICE_EXTENSION"} {:fieldname "HandleCount"} HandleCount__DEVICE_EXTENSION(x: int) : int
{
  x + 784
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HibernateCount"} HibernateCount__DEVICE_EXTENSION(x: int) : int
{
  x + 776
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HighQuad_unnamed_tag_68"} {:fieldname "HighQuad"} HighQuad_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO2"} {:fieldname "HostControllerInformation"} HostControllerInformation__DEVICE_EXTENSION(x: int) : int
{
  x + 1440
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMajorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMajorVersion"} HostDDIMajorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3472
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMinorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMinorVersion"} HostDDIMinorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3476
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO4"} {:fieldname "HostRoutineAPI"} HostRoutineAPI__DEVICE_EXTENSION(x: int) : int
{
  x + 1452
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IReserved__CDB6INQUIRY"} {:fieldname "IReserved"} IReserved__CDB6INQUIRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_34"} {:fieldname "IdType"} IdType_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__DEVICE_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__DEVICE_EXTENSION(x: int) : int
{
  x + 788
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_36"} {:fieldname "InPath"} InPath_unnamed_tag_36(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DEBUG_LOG"} {:fieldname "Index"} Index__DEBUG_LOG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DISPATCHER_HEADER"} {:fieldname "Index"} Index__DISPATCHER_HEADER(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "Information"} Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "InitiatorAddressId"} InitiatorAddressId__DEVICE_EXTENSION(x: int) : int
{
  x + 1412
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_22"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._INQUIRYDATA"} {:fieldname "InquiryData"} InquiryData__DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.Inserted__DISPATCHER_HEADER"} {:fieldname "Inserted"} Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.Inserted__KDEVICE_QUEUE_ENTRY"} {:fieldname "Inserted"} Inserted__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.InternalStatus__SCSI_REQUEST_BLOCK"} {:fieldname "InternalStatus"} InternalStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_22"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_22(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoCount__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "IoCount"} IoCount__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._IO_STATUS_BLOCK"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "IoTimeoutValue"} IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.IoWi__SBP2_BUSRESET_WORKITEM"} {:fieldname "IoWi"} IoWi__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irb__IRBIRP"} {:fieldname "Irb"} Irb__IRBIRP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__IRBIRP"} {:fieldname "Irp"} Irp__IRBIRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_74"} {:fieldname "Key"} Key_unnamed_tag_74(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "LUNResetSupported"} LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastStatusBlock__DEVICE_EXTENSION"} {:fieldname "LastStatusBlock"} LastStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.LastTransactionStatus__DEVICE_EXTENSION"} {:fieldname "LastTransactionStatus"} LastTransactionStatus__DEVICE_EXTENSION(x: int) : int
{
  x + 796
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LegacyFlags"} LegacyFlags__DEVICE_INFORMATION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LengthAndLoginId__LOGIN_RESPONSE"} {:fieldname "LengthAndLoginId"} LengthAndLoginId__LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthAndNumLogins__QUERY_LOGIN_RESPONSE"} {:fieldname "LengthAndNumLogins"} LengthAndNumLogins__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_QUERY_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_18"} {:fieldname "Length"} Length_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Level__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Level"} Level__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Link"} Link__BUS_RESET_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ListPointer__IRBIRP"} {:fieldname "ListPointer"} ListPointer__IRBIRP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LoadEject__START_STOP_RBC"} {:fieldname "LoadEject"} LoadEject__START_STOP_RBC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LockNV__DISPATCHER_HEADER"} {:fieldname "LockNV"} LockNV__DISPATCHER_HEADER(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.LockQueue__KLOCK_QUEUE_HANDLE"} {:fieldname "LockQueue"} LockQueue__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Lock__DISPATCHER_HEADER"} {:fieldname "Lock"} Lock__DISPATCHER_HEADER(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Lock__KSPIN_LOCK_QUEUE"} {:fieldname "Lock"} Lock__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LogEnd__DEBUG_LOG"} {:fieldname "LogEnd"} LogEnd__DEBUG_LOG(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogEntry__DEVICE_EXTENSION"} {:fieldname "LogEntry"} LogEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4792
}

function {:inline true} {:fieldmap "Mem_T.LogStart__DEBUG_LOG"} {:fieldname "LogStart"} LogStart__DEBUG_LOG(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Logger__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Logger"} Logger__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "LogicalBlockSize"} LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalUnitNumber__CDB6INQUIRY"} {:fieldname "LogicalUnitNumber"} LogicalUnitNumber__CDB6INQUIRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LoginRespContext__DEVICE_EXTENSION"} {:fieldname "LoginRespContext"} LoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2704
}

function {:inline true} {:fieldmap "Mem_T.LoginResponseAddress__ORB_LOGIN"} {:fieldname "LoginResponseAddress"} LoginResponseAddress__ORB_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._LOGIN_RESPONSE"} {:fieldname "LoginResponse"} LoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.LoginResponse__DEVICE_EXTENSION"} {:fieldname "LoginResponse"} LoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2700
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowQuad_unnamed_tag_68"} {:fieldname "LowQuad"} LowQuad_unnamed_tag_68(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.Lun__DEVICE_INFORMATION"} {:fieldname "Lun"} Lun__DEVICE_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MODE_SELECT__CDB"} {:fieldname "MODE_SELECT"} MODE_SELECT__CDB(x: int) : int
{
  x + 1944
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE10__CDB"} {:fieldname "MODE_SENSE10"} MODE_SENSE10__CDB(x: int) : int
{
  x + 1888
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1852
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MajorVersion"} MajorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ManagementAgentBaseReg__DEVICE_INFORMATION"} {:fieldname "ManagementAgentBaseReg"} ManagementAgentBaseReg__DEVICE_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "ManagementEvent"} ManagementEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2388
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbContext__DEVICE_EXTENSION"} {:fieldname "ManagementOrbContext"} ManagementOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2216
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "ManagementOrbStatusBlock"} ManagementOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3224
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "ManagementOrbStatusContext"} ManagementOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3528
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbTimeout__DEVICE_INFORMATION"} {:fieldname "ManagementOrbTimeout"} ManagementOrbTimeout__DEVICE_INFORMATION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T._ORB_MNG"} {:fieldname "ManagementOrb"} ManagementOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrb__DEVICE_EXTENSION"} {:fieldname "ManagementOrb"} ManagementOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2212
}

function {:inline true} {:fieldmap "Mem_T.Mask__DEBUG_LOG"} {:fieldname "Mask"} Mask__DEBUG_LOG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncReadRequest"} MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncWriteRequest"} MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxCdbLength__DEVICE_INFORMATION"} {:fieldname "MaxCdbLength"} MaxCdbLength__DEVICE_INFORMATION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__DEVICE_INFORMATION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__DEVICE_INFORMATION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__FDO_DEVICE_EXTENSION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.MaxControllerPhySpeed__DEVICE_EXTENSION"} {:fieldname "MaxControllerPhySpeed"} MaxControllerPhySpeed__DEVICE_EXTENSION(x: int) : int
{
  x + 1428
}

function {:inline true} {:fieldmap "Mem_T.MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP"} {:fieldname "MaxDmaBufferSize"} MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxOrbListDepth__DEVICE_EXTENSION"} {:fieldname "MaxOrbListDepth"} MaxOrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.MaxPages__PAGE_TABLE_CONTEXT"} {:fieldname "MaxPages"} MaxPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MediumType__MODE_PARAMETER_HEADER"} {:fieldname "MediumType"} MediumType__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MinorVersion"} MinorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MultiplicationFactor__MODE_CACHING_PAGE"} {:fieldname "MultiplicationFactor"} MultiplicationFactor__MODE_CACHING_PAGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextContextToFree__DEVICE_EXTENSION"} {:fieldname "NextContextToFree"} NextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 744
}

function {:inline true} {:fieldmap "Mem_T.NextOrbAddress__ORB_EXT_CMD"} {:fieldname "NextOrbAddress"} NextOrbAddress__ORB_EXT_CMD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__KSPIN_LOCK_QUEUE"} {:fieldname "Next"} Next__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__SINGLE_LIST_ENTRY"} {:fieldname "Next"} Next__SINGLE_LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeAndLoginId__QUERY_RESPONSE_ELEMENT"} {:fieldname "NodeAndLoginId"} NodeAndLoginId__QUERY_RESPONSE_ELEMENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeId__B1394_ADDRESS"} {:fieldname "NodeId"} NodeId__B1394_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumPDOsStarted__FDO_DEVICE_EXTENSION"} {:fieldname "NumPDOsStarted"} NumPDOsStarted__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.NumberOfBlocks__MODE_PARAMETER_BLOCK"} {:fieldname "NumberOfBlocks"} NumberOfBlocks__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "NumberOfLogicalBlocks"} NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NumberOfPages__PAGE_TABLE_CONTEXT"} {:fieldname "NumberOfPages"} NumberOfPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OctletPart__OCTLET"} {:fieldname "OctletPart"} OctletPart__OCTLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Octlet__IRBIRP"} {:fieldname "Octlet"} Octlet__IRBIRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_High__B1394_ADDRESS"} {:fieldname "Off_High"} Off_High__B1394_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__B1394_ADDRESS"} {:fieldname "Off_Low"} Off_Low__B1394_ADDRESS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OldIrql__KLOCK_QUEUE_HANDLE"} {:fieldname "OldIrql"} OldIrql__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB10"} {:fieldname "OperationCode"} OperationCode__CDB10(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB6GENERIC"} {:fieldname "OperationCode"} OperationCode__CDB6GENERIC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_EXT_CMD"} {:fieldname "OrbInfo"} OrbInfo__ORB_EXT_CMD(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_QUERY_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_TASK_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_TASK_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__ASYNC_REQUEST_CONTEXT"} {:fieldname "OrbListDepth"} OrbListDepth__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__DEVICE_EXTENSION"} {:fieldname "OrbListDepth"} OrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.OrbListOwnedCount__DEVICE_EXTENSION"} {:fieldname "OrbListOwnedCount"} OrbListOwnedCount__DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.P_KTHREAD"} {:fieldname "OrbListOwner"} OrbListOwner__DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.OrbListSpinLock__DEVICE_EXTENSION"} {:fieldname "OrbListSpinLock"} OrbListSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OrbList"} OrbList__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbPoolContext__DEVICE_EXTENSION"} {:fieldname "OrbPoolContext"} OrbPoolContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3052
}

function {:inline true} {:fieldmap "Mem_T.OrbReadPayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbReadPayloadMask"} OrbReadPayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1432
}

function {:inline true} {:fieldmap "Mem_T.OrbWritePayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbWritePayloadMask"} OrbWritePayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1436
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Orb"} Orb__ARCP_ORB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalRequest__SCSI_REQUEST_BLOCK"} {:fieldname "OriginalRequest"} OriginalRequest__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.OriginalSrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "OriginalSrb"} OriginalSrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_22"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PFBit__MODE_SELECT"} {:fieldname "PFBit"} PFBit__MODE_SELECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Packet__ASYNC_REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.Packet__REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__REQUEST_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.PageCode__CDB6INQUIRY"} {:fieldname "PageCode"} PageCode__CDB6INQUIRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_CACHING_PAGE"} {:fieldname "PageCode"} PageCode__MODE_CACHING_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_CACHING_PAGE"} {:fieldname "PageLength"} PageLength__MODE_CACHING_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageSavable__MODE_CACHING_PAGE"} {:fieldname "PageSavable"} PageSavable__MODE_CACHING_PAGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PageTableContext__ASYNC_REQUEST_CONTEXT"} {:fieldname "PageTableContext"} PageTableContext__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PageTable__PAGE_TABLE_CONTEXT"} {:fieldname "PageTable"} PageTable__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "Page"} Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION(x: int) : int
{
  x + 772
}

function {:inline true} {:fieldmap "Mem_T.ParameterListLength__MODE_SELECT"} {:fieldname "ParameterListLength"} ParameterListLength__MODE_SELECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "PartialMdl"} PartialMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Password__ORB_LOGIN"} {:fieldname "Password"} Password__ORB_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pc__MODE_SENSE"} {:fieldname "Pc"} Pc__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Pdo__FDO_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingOrbList"} PendingOrbList__DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PendingPowerIrp"} PendingPowerIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 768
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4"} {:fieldname "PhysAddrMappingRoutine"} PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Portdriver__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Portdriver"} Portdriver__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PowerConditions__START_STOP_RBC"} {:fieldname "PowerConditions"} PowerConditions__START_STOP_RBC(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PowerDeferredIrp"} PowerDeferredIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 760
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.Processor__DISPATCHER_HEADER"} {:fieldname "Processor"} Processor__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductIdOffset"} ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ProductId__INQUIRYDATA"} {:fieldname "ProductId"} ProductId__INQUIRYDATA(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionLevel__INQUIRYDATA"} {:fieldname "ProductRevisionLevel"} ProductRevisionLevel__INQUIRYDATA(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductRevisionOffset"} ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PropertyId__STORAGE_PROPERTY_QUERY"} {:fieldname "PropertyId"} PropertyId__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__QUADLET"} {:fieldname "QuadPart"} QuadPart__QUADLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginRespContext__DEVICE_EXTENSION"} {:fieldname "QueryLoginRespContext"} QueryLoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2880
}

function {:inline true} {:fieldmap "Mem_T._QUERY_LOGIN_RESPONSE"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginResponse__DEVICE_EXTENSION"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2876
}

function {:inline true} {:fieldmap "Mem_T.QueryResponseAddress__ORB_QUERY_LOGIN"} {:fieldname "QueryResponseAddress"} QueryResponseAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.QueryType__STORAGE_PROPERTY_QUERY"} {:fieldname "QueryType"} QueryType__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.QueueControlFlags__DISPATCHER_HEADER"} {:fieldname "QueueControlFlags"} QueueControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "QueueSortKey"} QueueSortKey__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ReLoginCount__DEVICE_EXTENSION"} {:fieldname "ReLoginCount"} ReLoginCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4784
}

function {:inline true} {:fieldmap "Mem_T.ReadDisableCache__MODE_CACHING_PAGE"} {:fieldname "ReadDisableCache"} ReadDisableCache__MODE_CACHING_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ReadRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "ReadRetensionPriority"} ReadRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ReconnectHold__DEVICE_INFORMATION"} {:fieldname "ReconnectHold"} ReconnectHold__DEVICE_INFORMATION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "RemovableMedia"} RemovableMedia__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "RemoveEvent"} RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.Removed__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Removed"} Removed__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ADDRESS_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ADDRESS_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RequestNumber__SBP2_REQUEST"} {:fieldname "RequestNumber"} RequestNumber__SBP2_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestType__REQUEST_CONTEXT"} {:fieldname "RequestType"} RequestType__REQUEST_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__CDB6INQUIRY"} {:fieldname "Reserved1"} Reserved1__CDB6INQUIRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__DISPATCHER_HEADER"} {:fieldname "Reserved1"} Reserved1__DISPATCHER_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Reserved2__DISPATCHER_HEADER"} {:fieldname "Reserved2"} Reserved2__DISPATCHER_HEADER(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Reserved3__DISPATCHER_HEADER"} {:fieldname "Reserved3"} Reserved3__DISPATCHER_HEADER(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.Reserved5__DISPATCHER_HEADER"} {:fieldname "Reserved5"} Reserved5__DISPATCHER_HEADER(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.ReservedMdl__DEVICE_EXTENSION"} {:fieldname "ReservedMdl"} ReservedMdl__DEVICE_EXTENSION(x: int) : int
{
  x + 800
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ADDRESS_CONTEXT"} {:fieldname "Reserved"} Reserved__ADDRESS_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Reserved"} Reserved__DEVICE_EXTENSION(x: int) : int
{
  x + 792
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Reserved"} Reserved__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ORB_QUERY_LOGIN"} {:fieldname "Reserved"} Reserved__ORB_QUERY_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__BUS_RESET_DATA"} {:fieldname "ResetContext"} ResetContext__BUS_RESET_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RetrieveTextLeaf_unnamed_tag_73"} {:fieldname "RetrieveTextLeaf"} RetrieveTextLeaf_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SPBit__MODE_SELECT"} {:fieldname "SPBit"} SPBit__MODE_SELECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.START_STOP_RBC__CDB_RBC"} {:fieldname "START_STOP_RBC"} START_STOP_RBC__CDB_RBC(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_REQUEST_BLOCK"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBufferLength__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBufferLength"} SenseInfoBufferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBuffer"} SenseInfoBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SenseKey__SENSE_DATA"} {:fieldname "SenseKey"} SenseKey__SENSE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "SerialNumberOffset"} SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Sig_LOG_ENTRY32"} {:fieldname "Sig"} Sig_LOG_ENTRY32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SortKey__KDEVICE_QUEUE_ENTRY"} {:fieldname "SortKey"} SortKey__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "SrbType"} SrbType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Srb__ASYNC_REQUEST_CONTEXT"} {:fieldname "Srb"} Srb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_26"} {:fieldname "Srb"} Srb_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "StartEvent"} StartEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2544
}

function {:inline true} {:fieldmap "Mem_T.StartNextPacketCount__DEVICE_EXTENSION"} {:fieldname "StartNextPacketCount"} StartNextPacketCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4780
}

function {:inline true} {:fieldmap "Mem_T.Start__START_STOP_RBC"} {:fieldname "Start"} Start__START_STOP_RBC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_39"} {:fieldname "State"} State_unnamed_tag_39(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_QUERY_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_TASK_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_TASK_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusFifoBase__DEVICE_EXTENSION"} {:fieldname "StatusFifoBase"} StatusFifoBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4368
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "StatusFifoListHead"} StatusFifoListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4348
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "StatusFifoLock"} StatusFifoLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4364
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES"} {:fieldname "SupportedAsynchronousEvents"} SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_1"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 756
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TL_Length__TEXTUAL_LEAF"} {:fieldname "TL_Length"} TL_Length__TEXTUAL_LEAF(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Tag__ASYNC_REQUEST_CONTEXT"} {:fieldname "Tag"} Tag__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TaggedQueuing__IO_SCSI_CAPABILITIES"} {:fieldname "TaggedQueuing"} TaggedQueuing__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "TargetResetSupported"} TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.TaskOrbContext__DEVICE_EXTENSION"} {:fieldname "TaskOrbContext"} TaskOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2040
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "TaskOrbStatusBlock"} TaskOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3700
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "TaskOrbStatusContext"} TaskOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4004
}

function {:inline true} {:fieldmap "Mem_T._ORB_TASK_MNG"} {:fieldname "TaskOrb"} TaskOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TaskOrb__DEVICE_EXTENSION"} {:fieldname "TaskOrb"} TaskOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2036
}

function {:inline true} {:fieldmap "Mem_T.ThreadControlFlags__DISPATCHER_HEADER"} {:fieldname "ThreadControlFlags"} ThreadControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_REQUEST_BLOCK"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Timer2CancelPending__DISPATCHER_HEADER"} {:fieldname "Timer2CancelPending"} Timer2CancelPending__DISPATCHER_HEADER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Timer2Disabled__DISPATCHER_HEADER"} {:fieldname "Timer2Disabled"} Timer2Disabled__DISPATCHER_HEADER(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Timer2Expiring__DISPATCHER_HEADER"} {:fieldname "Timer2Expiring"} Timer2Expiring__DISPATCHER_HEADER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Timer2Flags__DISPATCHER_HEADER"} {:fieldname "Timer2Flags"} Timer2Flags__DISPATCHER_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Timer2Inserted__DISPATCHER_HEADER"} {:fieldname "Timer2Inserted"} Timer2Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Timer2Running__DISPATCHER_HEADER"} {:fieldname "Timer2Running"} Timer2Running__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Timer2SetPending__DISPATCHER_HEADER"} {:fieldname "Timer2SetPending"} Timer2SetPending__DISPATCHER_HEADER(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.TimerControlFlags__DISPATCHER_HEADER"} {:fieldname "TimerControlFlags"} TimerControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.TimerMiscFlags__DISPATCHER_HEADER"} {:fieldname "TimerMiscFlags"} TimerMiscFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TransactionType__ADDRESS_CONTEXT"} {:fieldname "TransactionType"} TransactionType__ADDRESS_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Type__DEVICE_EXTENSION"} {:fieldname "Type"} Type__DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type__FDO_DEVICE_EXTENSION"} {:fieldname "Type"} Type__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_28"} {:fieldname "Type"} Type_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_36"} {:fieldname "Type"} Type_unnamed_tag_36(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_39"} {:fieldname "Type"} Type_unnamed_tag_39(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniSymLinkName"} UniSymLinkName__DEVICE_EXTENSION(x: int) : int
{
  x + 1304
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitCharacteristics__DEVICE_INFORMATION"} {:fieldname "UnitCharacteristics"} UnitCharacteristics__DEVICE_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryLocation"} UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "VendorIdOffset"} VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VendorId__INQUIRYDATA"} {:fieldname "VendorId"} VendorId__INQUIRYDATA(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WaitListHead__DISPATCHER_HEADER"} {:fieldname "WaitListHead"} WaitListHead__DISPATCHER_HEADER(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.Wake__DISPATCHER_HEADER"} {:fieldname "Wake"} Wake__DISPATCHER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "WriteCacheDisable"} WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnable__MODE_CACHING_PAGE"} {:fieldname "WriteCacheEnable"} WriteCacheEnable__MODE_CACHING_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.WriteRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "WriteRetensionPriority"} WriteRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_80"} {:fieldname "asUlong"} asUlong_unnamed_tag_80(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.b__LOG_SIGNATURE"} {:fieldname "b"} b__LOG_SIGNATURE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__NOTIFICATION_INFO_WXP"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.l__LOG_SIGNATURE"} {:fieldname "l"} l__LOG_SIGNATURE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "nLevel"} nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__OCTLET"} {:fieldname "u"} u__OCTLET(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.u__QUADLET"} {:fieldname "u"} u__QUADLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__SBP2_REQUEST"} {:fieldname "u"} u__SBP2_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength_unnamed_tag_74"} {:fieldname "ulLength"} ulLength_unnamed_tag_74(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniGenericName"} uniGenericName__DEVICE_INFORMATION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__DEVICE_INFORMATION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__DEVICE_INFORMATION(x: int) : int
{
  x + 232
}

const {:string "%08x%08x"} unique strConst__li2bpl30: int;

const {:string "%ws %ws IEEE 1394 SBP2 Device"} unique strConst__li2bpl35: int;

const {:string "&"} unique strConst__li2bpl39: int;

const {:string "&REV"} unique strConst__li2bpl42: int;

const {:string "1.0"} unique strConst__li2bpl29: int;

const {:string "<NULL>"} unique strConst__li2bpl1: int;

const {:string "Callers of KeWaitForSingleObject must be running at IRQL <= APC_LEVEL when called with a non-zero timeout interval."} unique strConst__li2bpl5: int;

const {:string "Callers of KeWaitForSingleObject must be running at IRQL <= DISPATCH_LEVEL."} unique strConst__li2bpl4: int;

const {:string "Callers of sdv_KeWaitForMutexObject must be running at IRQL <= APC_LEVEL when called with a non-zero timeout interval."} unique strConst__li2bpl3: int;

const {:string "Callers of sdv_KeWaitForMutexObject must be running at IRQL <= DISPATCH_LEVEL."} unique strConst__li2bpl6: int;

const {:string "CmdSetId"} unique strConst__li2bpl40: int;

const {:string "D"} unique strConst__li2bpl10: int;

const {:string "F"} unique strConst__li2bpl11: int;

const {:string "FireLite Drive  "} unique strConst__li2bpl23: int;

const {:string "FireREX Storage"} unique strConst__li2bpl17: int;

const {:string "GSA-5163D Super Multi DVD Rewriter"} unique strConst__li2bpl16: int;

const {:string "GenCdRom"} unique strConst__li2bpl56: int;

const {:string "GenChanger"} unique strConst__li2bpl59: int;

const {:string "GenDisk"} unique strConst__li2bpl52: int;

const {:string "GenOptical"} unique strConst__li2bpl58: int;

const {:string "GenPrinter"} unique strConst__li2bpl54: int;

const {:string "GenSbp2Device"} unique strConst__li2bpl51: int;

const {:string "GenScanner"} unique strConst__li2bpl57: int;

const {:string "GenSequential"} unique strConst__li2bpl53: int;

const {:string "GenWorm"} unique strConst__li2bpl55: int;

const {:string "HDD USB 2.0/1394A"} unique strConst__li2bpl21: int;

const {:string "HL-DT-ST"} unique strConst__li2bpl25: int;

const {:string "IV00"} unique strConst__li2bpl44: int;

const {:string "IV00XXXX"} unique strConst__li2bpl45: int;

const {:string "Iomega"} unique strConst__li2bpl20: int;

const {:string "LUN"} unique strConst__li2bpl41: int;

const {:string "LUN %d"} unique strConst__li2bpl34: int;

const {:string "LegacyFlags"} unique strConst__li2bpl24: int;

const {:string "NULL"} unique strConst__li2bpl0: int;

const {:string "Niveus"} unique strConst__li2bpl43: int;

const {:string "P"} unique strConst__li2bpl12: int;

const {:string "PL3507"} unique strConst__li2bpl19: int;

const {:string "Prolific"} unique strConst__li2bpl18: int;

const {:string "S"} unique strConst__li2bpl9: int;

const {:string "SBP2\\"} unique strConst__li2bpl37: int;

const {:string "SBP2\\%d&%d&%d"} unique strConst__li2bpl32: int;

const {:string "SBP2\\%ws&%ws&LUN%x"} unique strConst__li2bpl47: int;

const {:string "SBP2\\%ws&%ws&LUN%x&REV%x"} unique strConst__li2bpl46: int;

const {:string "SBP2\\UNKNOWN VENDOR&UNKNOWN MODEL&LUN%x"} unique strConst__li2bpl48: int;

const {:string "Sbp2"} unique strConst__li2bpl28: int;

const {:string "TI STORAGELYNX!!"} unique strConst__li2bpl26: int;

const {:string "UNKNOWN MODEL"} unique strConst__li2bpl33: int;

const {:string "UNKNOWN VENDOR AND MODEL IEEE 1394 SBP2 Device"} unique strConst__li2bpl36: int;

const {:string "UNKNOWN VENDOR&UNKNOWN MODEL"} unique strConst__li2bpl38: int;

const {:string "UNKNOWN_MODEL"} unique strConst__li2bpl49: int;

const {:string "Unknown"} unique strConst__li2bpl61: int;

const {:string "VGP-XL1B"} unique strConst__li2bpl15: int;

const {:string "Vendor"} unique strConst__li2bpl27: int;

const {:string "\\Device\\Sbp2\\%ws&%ws&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl50: int;

const {:string "\\Device\\Sbp2\\UNKNOWN_VENDOR&UNKNOWN_MODEL&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl60: int;

const {:string "\\DosDevices\\Sbp2&LUN%x&%08x%08x&Instance%02d"} unique strConst__li2bpl31: int;

const {:string "callee"} unique strConst__li2bpl2: int;

const {:string "f"} unique strConst__li2bpl13: int;

const {:string "fdo"} unique strConst__li2bpl8: int;

const {:string "iPod"} unique strConst__li2bpl22: int;

const {:string "p"} unique strConst__li2bpl14: int;

const {:string "pdo"} unique strConst__li2bpl7: int;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant378: int;

axiom li2bplFunctionConstant378 == 378;

const {:allocated} li2bplFunctionConstant385: int;

axiom li2bplFunctionConstant385 == 385;

const {:allocated} li2bplFunctionConstant389: int;

axiom li2bplFunctionConstant389 == 389;

const {:allocated} li2bplFunctionConstant391: int;

axiom li2bplFunctionConstant391 == 391;

const {:allocated} li2bplFunctionConstant392: int;

axiom li2bplFunctionConstant392 == 392;

const {:allocated} li2bplFunctionConstant399: int;

axiom li2bplFunctionConstant399 == 399;

const {:allocated} li2bplFunctionConstant461: int;

axiom li2bplFunctionConstant461 == 461;

const {:allocated} li2bplFunctionConstant463: int;

axiom li2bplFunctionConstant463 == 463;

const {:allocated} li2bplFunctionConstant464: int;

axiom li2bplFunctionConstant464 == 464;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant523: int;

axiom li2bplFunctionConstant523 == 523;

const {:allocated} li2bplFunctionConstant641: int;

axiom li2bplFunctionConstant641 == 641;

const {:allocated} li2bplFunctionConstant694: int;

axiom li2bplFunctionConstant694 == 694;

const {:allocated} li2bplFunctionConstant697: int;

axiom li2bplFunctionConstant697 == 697;

const {:allocated} li2bplFunctionConstant698: int;

axiom li2bplFunctionConstant698 == 698;

const {:allocated} li2bplFunctionConstant699: int;

axiom li2bplFunctionConstant699 == 699;

const {:allocated} li2bplFunctionConstant700: int;

axiom li2bplFunctionConstant700 == 700;

const {:allocated} li2bplFunctionConstant799: int;

axiom li2bplFunctionConstant799 == 799;

const {:allocated} li2bplFunctionConstant801: int;

axiom li2bplFunctionConstant801 == 801;

const {:allocated} li2bplFunctionConstant804: int;

axiom li2bplFunctionConstant804 == 804;

implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_168: int)
{
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:scalar} Tmp_173: int;
  var {:scalar} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:scalar} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} Tmp_189: int;
  var {:scalar} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_195: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} Tmp_197: int;
  var {:scalar} Tmp_198: int;
  var {:scalar} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:scalar} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:scalar} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_212: int;
  var {:scalar} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} PdoExtension_1: int;

  anon0:
    call {:si_unique_call 2008} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 2009} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 2010} Tmp_170 := __HAVOC_malloc(4);
    call {:si_unique_call 2011} Tmp_172 := __HAVOC_malloc(4);
    call {:si_unique_call 2012} Tmp_188 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 2013} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    assume false;
    return;

  anon91_Then:
    Tmp_168 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_168: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_168 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_168: int)
{
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:scalar} Tmp_173: int;
  var {:scalar} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:scalar} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} Tmp_189: int;
  var {:scalar} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_195: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} Tmp_197: int;
  var {:scalar} Tmp_198: int;
  var {:scalar} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:scalar} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:scalar} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_212: int;
  var {:scalar} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} PdoExtension_1: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;

  anon0:
    call {:si_unique_call 2014} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 2015} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 2016} Tmp_170 := __HAVOC_malloc(4);
    call {:si_unique_call 2017} Tmp_172 := __HAVOC_malloc(4);
    call {:si_unique_call 2018} Tmp_188 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 2019} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_239;
    call {:si_unique_call 2020} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_239, 2);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  L121:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_240;
    call {:si_unique_call 2021} DeAllocateIrpAndIrb(PdoExtension_1, vslice_dummy_var_240);
    Tmp_168 := status_4;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon92_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  L32:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_193;
    assume {:nonnull} Tmp_193 != 0;
    assume Tmp_193 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_196;
    assume {:nonnull} Tmp_196 != 0;
    assume Tmp_196 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_169;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_241;
    call {:si_unique_call 2022} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_241, 2);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} yogi_error != 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  anon93_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_192 := 160;
    goto L50;

  L50:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_194 := 160;
    goto L71;

  L71:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  L64:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_177;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_212;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_242;
    call {:si_unique_call 2023} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_242, 2);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} yogi_error != 1;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} status_4 < 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_172], 1) != 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_185;
    havoc Tmp_190;
    call {:si_unique_call 2024} WPP_SF_q(Tmp_190, 119, Tmp_185, PdoExtension_1);
    goto L121;

  anon114_Then:
    goto L121;

  anon135_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_172], 1) == 0;
    goto L121;

  anon113_Then:
    goto L121;

  anon104_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_186;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_209;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_205;
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_210;
    assume {:nonnull} Tmp_210 != 0;
    assume Tmp_210 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_243;
    call {:si_unique_call 2025} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_243, 2);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} yogi_error != 1;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} status_4 < 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_188;
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_188], 1) != 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    havoc Tmp_180;
    havoc Tmp_199;
    call {:si_unique_call 2026} WPP_SF_q(Tmp_199, 120, Tmp_180, PdoExtension_1);
    goto L139;

  L139:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_179;
    assume {:nonnull} Tmp_179 != 0;
    assume Tmp_179 > 0;
    status_4 := 0;
    goto L121;

  anon112_Then:
    goto L139;

  anon134_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_188], 1) == 0;
    goto L139;

  anon111_Then:
    goto L139;

  anon105_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_178;
    goto L113;

  L113:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_182;
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    havoc Tmp_208;
    goto L116;

  L116:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_189;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    goto L120;

  L120:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    havoc Tmp_170;
    assume {:nonnull} Tmp_170 != 0;
    assume Tmp_170 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_170], 1) != 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_187;
    havoc Tmp_200;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_171;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc vslice_dummy_var_244;
    havoc vslice_dummy_var_245;
    havoc vslice_dummy_var_246;
    call {:si_unique_call 2027} WPP_SF_qDDD(Tmp_200, 121, Tmp_187, PdoExtension_1, vslice_dummy_var_244, vslice_dummy_var_245, vslice_dummy_var_246);
    goto L121;

  anon110_Then:
    goto L121;

  anon132_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_170], 1) == 0;
    goto L121;

  anon109_Then:
    goto L121;

  anon131_Then:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_198;
    goto L134;

  L134:
    Tmp_208 := Tmp_198;
    goto L116;

  anon108_Then:
    Tmp_198 := 2093056;
    goto L134;

  anon107_Then:
    Tmp_178 := 2093056;
    goto L113;

  anon106_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_184;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    havoc Tmp_195;
    goto L137;

  L137:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_197;
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    goto L120;

  anon133_Then:
    Tmp_195 := 2093056;
    goto L137;

  anon130_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon129_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_194;
    goto L71;

  anon123_Then:
    goto L64;

  anon124_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    Tmp_203 := 144;
    goto L75;

  L75:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon102_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_203;
    goto L75;

  anon125_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    Tmp_204 := 128;
    goto L79;

  L79:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon101_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_204;
    goto L79;

  anon95_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    Tmp_213 := 112;
    goto L83;

  L83:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon100_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_213;
    goto L83;

  anon99_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_192;
    goto L50;

  anon120_Then:
    goto L43;

  anon121_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_191 := 144;
    goto L54;

  L54:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon98_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_191;
    goto L54;

  anon122_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_174 := 128;
    goto L58;

  L58:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon97_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_174;
    goto L58;

  anon94_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_173 := 112;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon96_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_173;
    goto L62;

  anon128_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    goto L23;

  L23:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon116_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon117_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon118_Then:
    goto L23;

  anon119_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon127_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    Tmp_168 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_168: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1409: int)
{
  var {:pointer} Tmp_1410: int;
  var {:scalar} Tmp_1411: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_74: int;
  var {:pointer} Tmp_1412: int;
  var {:pointer} pdoExtension_12: int;
  var {:pointer} Tmp_1413: int;
  var {:pointer} Tmp_1414: int;
  var {:pointer} sdv_478: int;
  var {:scalar} Tmp_1415: int;
  var {:pointer} Tmp_1416: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1417: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1418: int;
  var {:pointer} Tmp_1419: int;
  var {:pointer} Tmp_1420: int;
  var {:scalar} sdv_480: int;
  var {:pointer} sdv_481: int;
  var {:pointer} Tmp_1421: int;
  var {:pointer} s_p_e_c_i_a_l_75: int;
  var {:pointer} Tmp_1422: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_482: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1423: int;
  var {:scalar} cIrql_8: int;
  var {:scalar} sdv_485: int;
  var {:scalar} status_38: int;
  var {:pointer} Tmp_1424: int;
  var {:pointer} Tmp_1425: int;
  var {:scalar} completed_1: int;
  var {:pointer} Tmp_1426: int;
  var {:pointer} Tmp_1427: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;

  anon0:
    call {:si_unique_call 2028} tick := __HAVOC_malloc(20);
    call {:si_unique_call 2029} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 2030} Tmp_1421 := __HAVOC_malloc(4);
    call {:si_unique_call 2031} Tmp_1425 := __HAVOC_malloc(4);
    call {:si_unique_call 2032} Tmp_1427 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_12 := 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1422;
    assume {:nonnull} Tmp_1422 != 0;
    assume Tmp_1422 > 0;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1416;
    assume {:nonnull} Tmp_1416 != 0;
    assume Tmp_1416 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    Tmp_1409 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon80_Then:
    goto L20;

  L20:
    call {:si_unique_call 2033} Tmp_1417 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    Mem_T.INT4[Tmp_1417] := cIrql_8;
    call {:si_unique_call 2034} sdv_KeAcquireSpinLock(0, Tmp_1417);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    cIrql_8 := Mem_T.INT4[Tmp_1417];
    call {:si_unique_call 2035} sdv_481 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_481;
    call {:si_unique_call 2036} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L32;

  L32:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} requestContext == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1427], 1) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1420;
    havoc Tmp_1418;
    call {:si_unique_call 2037} WPP_SF_(Tmp_1418, 18, Tmp_1420);
    goto L152;

  L152:
    Tmp_1409 := -1073741670;
    goto L1;

  anon77_Then:
    goto L152;

  anon90_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1427], 1) == 0;
    goto L152;

  anon76_Then:
    goto L152;

  anon62_Then:
    assume {:partition} requestContext != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 2038} sdv_482 := sdv_KeGetCurrentIrql();
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_482 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    Mem_T.INT4[Complete__REQUEST_CONTEXT(requestContext)] := 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_247;
    call {:si_unique_call 2039} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_247);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_248;
    call {:si_unique_call 2040} sdv_IoSetCompletionRoutine(vslice_dummy_var_248, li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_249;
    havoc vslice_dummy_var_250;
    call {:si_unique_call 2041} status_38 := sdv_IoCallDriver(vslice_dummy_var_249, vslice_dummy_var_250);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_38 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1424;
    assume {:nonnull} Tmp_1424 != 0;
    assume Tmp_1424 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L82;

  L82:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1425;
    assume {:nonnull} Tmp_1425 != 0;
    assume Tmp_1425 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1425], 1) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1412;
    havoc Tmp_1411;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1423;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1410;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    assume {:nonnull} Tmp_1423 != 0;
    assume Tmp_1423 > 0;
    havoc vslice_dummy_var_251;
    havoc vslice_dummy_var_252;
    havoc vslice_dummy_var_253;
    call {:si_unique_call 2042} WPP_SF_DDD(Tmp_1411, 20, Tmp_1412, vslice_dummy_var_251, vslice_dummy_var_252, vslice_dummy_var_253);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto L66;

  L66:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1426 := KeTickCount;
    assume {:nonnull} Tmp_1426 != 0;
    assume Tmp_1426 > 0;
    havoc s_p_e_c_i_a_l_74;
    goto L121;

  L121:
    call {:si_unique_call 2043} Sbp2SendRequest#0_loop_L121(s_p_e_c_i_a_l_74, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 2044} sdv_485 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 2045} Tmp_1419, s_p_e_c_i_a_l_75 := Sbp2SendRequest#0_loop_L132(tick, pComplete, Tmp_1419, s_p_e_c_i_a_l_75, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.INT4[pComplete] == 0;
    Tmp_1419 := KeTickCount;
    assume {:nonnull} Tmp_1419 != 0;
    assume Tmp_1419 > 0;
    havoc s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 2046} Sbp2SendRequest#0_loop_L142(tick, s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L137;

  L137:
    completed_1 := sdv_480;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} completed_1 == 0;
    Tmp_1409 := -1073741823;
    goto L1;

  anon88_Then:
    assume {:partition} completed_1 != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 2047} Tmp_1417 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    Mem_T.INT4[Tmp_1417] := cIrql_8;
    call {:si_unique_call 2048} sdv_KeAcquireSpinLock(0, Tmp_1417);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    cIrql_8 := Mem_T.INT4[Tmp_1417];
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 2049} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2050} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1413;
    assume {:nonnull} Tmp_1413 != 0;
    assume Tmp_1413 > 0;
    havoc Tmp_1409;
    goto L1;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    call {:si_unique_call 2051} sdv_ExFreePool(0);
    goto L113;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon74_Then:
    assume {:partition} Mem_T.INT4[pComplete] != 0;
    goto L137;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    assume false;
    return;

  anon71_Then:
    assume {:partition} TransferMode == 2;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_38 == 259;
    call {:si_unique_call 2052} vslice_dummy_var_370 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L97;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    assume {:partition} status_38 != 259;
    goto L97;

  anon66_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1409 := status_38;
    goto L1;

  anon69_Then:
    goto L66;

  anon70_Then:
    goto L83;

  anon84_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1425], 1) == 0;
    goto L83;

  anon68_Then:
    goto L83;

  anon82_Then:
    havoc Tmp_1421;
    assume {:nonnull} Tmp_1421 != 0;
    assume Tmp_1421 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1421], 1) == 0;
    goto L82;

  anon83_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1421], 1) != 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L82;

  anon67_Then:
    havoc Tmp_1414;
    havoc Tmp_1415;
    call {:si_unique_call 2053} WPP_SF_(Tmp_1415, 19, Tmp_1414);
    goto L82;

  anon65_Then:
    assume {:partition} status_38 != -1072562032;
    goto L66;

  anon81_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon64_Then:
    assume {:partition} 2 > sdv_482;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 2054} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon63_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon79_Then:
    goto L20;

  anon61_Then:
    call {:si_unique_call 2055} sdv_478 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_478;
    goto L32;

  anon78_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1409: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1409: int)
{
  var {:pointer} Tmp_1410: int;
  var {:scalar} Tmp_1411: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_74: int;
  var {:pointer} Tmp_1412: int;
  var {:pointer} pdoExtension_12: int;
  var {:pointer} Tmp_1413: int;
  var {:pointer} Tmp_1414: int;
  var {:pointer} sdv_478: int;
  var {:scalar} Tmp_1415: int;
  var {:pointer} Tmp_1416: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1417: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1418: int;
  var {:pointer} Tmp_1419: int;
  var {:pointer} Tmp_1420: int;
  var {:scalar} sdv_480: int;
  var {:pointer} sdv_481: int;
  var {:pointer} Tmp_1421: int;
  var {:pointer} s_p_e_c_i_a_l_75: int;
  var {:pointer} Tmp_1422: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_482: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1423: int;
  var {:scalar} cIrql_8: int;
  var {:scalar} sdv_485: int;
  var {:scalar} status_38: int;
  var {:pointer} Tmp_1424: int;
  var {:pointer} Tmp_1425: int;
  var {:scalar} completed_1: int;
  var {:pointer} Tmp_1426: int;
  var {:pointer} Tmp_1427: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;

  anon0:
    call {:si_unique_call 2056} tick := __HAVOC_malloc(20);
    call {:si_unique_call 2057} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 2058} Tmp_1421 := __HAVOC_malloc(4);
    call {:si_unique_call 2059} Tmp_1425 := __HAVOC_malloc(4);
    call {:si_unique_call 2060} Tmp_1427 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_12 := 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1422;
    assume {:nonnull} Tmp_1422 != 0;
    assume Tmp_1422 > 0;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1416;
    assume {:nonnull} Tmp_1416 != 0;
    assume Tmp_1416 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    Tmp_1409 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon80_Then:
    goto L20;

  L20:
    call {:si_unique_call 2061} Tmp_1417 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    Mem_T.INT4[Tmp_1417] := cIrql_8;
    call {:si_unique_call 2062} sdv_KeAcquireSpinLock(0, Tmp_1417);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    cIrql_8 := Mem_T.INT4[Tmp_1417];
    call {:si_unique_call 2063} sdv_481 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_481;
    call {:si_unique_call 2064} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L32;

  L32:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} requestContext == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1427], 1) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1420;
    havoc Tmp_1418;
    call {:si_unique_call 2065} WPP_SF_(Tmp_1418, 18, Tmp_1420);
    goto L152;

  L152:
    Tmp_1409 := -1073741670;
    goto L1;

  anon77_Then:
    goto L152;

  anon90_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1427], 1) == 0;
    goto L152;

  anon76_Then:
    goto L152;

  anon62_Then:
    assume {:partition} requestContext != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 2066} sdv_482 := sdv_KeGetCurrentIrql();
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_482 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    Mem_T.INT4[Complete__REQUEST_CONTEXT(requestContext)] := 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_254;
    call {:si_unique_call 2067} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_254);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_255;
    call {:si_unique_call 2068} sdv_IoSetCompletionRoutine(vslice_dummy_var_255, li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_256;
    havoc vslice_dummy_var_257;
    call {:si_unique_call 2069} status_38 := sdv_IoCallDriver(vslice_dummy_var_256, vslice_dummy_var_257);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_38 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1424;
    assume {:nonnull} Tmp_1424 != 0;
    assume Tmp_1424 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L82;

  L82:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1425;
    assume {:nonnull} Tmp_1425 != 0;
    assume Tmp_1425 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1425], 1) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1412;
    havoc Tmp_1411;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1423;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1410;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    assume {:nonnull} Tmp_1423 != 0;
    assume Tmp_1423 > 0;
    havoc vslice_dummy_var_258;
    havoc vslice_dummy_var_259;
    havoc vslice_dummy_var_260;
    call {:si_unique_call 2070} WPP_SF_DDD(Tmp_1411, 20, Tmp_1412, vslice_dummy_var_258, vslice_dummy_var_259, vslice_dummy_var_260);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto L66;

  L66:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1426 := KeTickCount;
    assume {:nonnull} Tmp_1426 != 0;
    assume Tmp_1426 > 0;
    havoc s_p_e_c_i_a_l_74;
    goto L121;

  L121:
    call {:si_unique_call 2071} Sbp2SendRequest#1_loop_L121(s_p_e_c_i_a_l_74, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 2072} sdv_485 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 2073} Tmp_1419, s_p_e_c_i_a_l_75 := Sbp2SendRequest#1_loop_L132(tick, pComplete, Tmp_1419, s_p_e_c_i_a_l_75, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.INT4[pComplete] == 0;
    Tmp_1419 := KeTickCount;
    assume {:nonnull} Tmp_1419 != 0;
    assume Tmp_1419 > 0;
    havoc s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 2074} Sbp2SendRequest#1_loop_L142(tick, s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L137;

  L137:
    completed_1 := sdv_480;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} completed_1 == 0;
    Tmp_1409 := -1073741823;
    goto L1;

  anon88_Then:
    assume {:partition} completed_1 != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 2075} Tmp_1417 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    Mem_T.INT4[Tmp_1417] := cIrql_8;
    call {:si_unique_call 2076} sdv_KeAcquireSpinLock(0, Tmp_1417);
    assume {:nonnull} Tmp_1417 != 0;
    assume Tmp_1417 > 0;
    cIrql_8 := Mem_T.INT4[Tmp_1417];
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 2077} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2078} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1413;
    assume {:nonnull} Tmp_1413 != 0;
    assume Tmp_1413 > 0;
    havoc Tmp_1409;
    goto L1;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    call {:si_unique_call 2079} sdv_ExFreePool(0);
    goto L113;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon74_Then:
    assume {:partition} Mem_T.INT4[pComplete] != 0;
    goto L137;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    assume false;
    return;

  anon71_Then:
    assume {:partition} TransferMode == 2;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_38 == 259;
    call {:si_unique_call 2080} vslice_dummy_var_371 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L97;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    assume {:partition} status_38 != 259;
    goto L97;

  anon66_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1409 := status_38;
    goto L1;

  anon69_Then:
    goto L66;

  anon70_Then:
    goto L83;

  anon84_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1425], 1) == 0;
    goto L83;

  anon68_Then:
    goto L83;

  anon82_Then:
    havoc Tmp_1421;
    assume {:nonnull} Tmp_1421 != 0;
    assume Tmp_1421 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1421], 1) == 0;
    goto L82;

  anon83_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1421], 1) != 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L82;

  anon67_Then:
    havoc Tmp_1414;
    havoc Tmp_1415;
    call {:si_unique_call 2081} WPP_SF_(Tmp_1415, 19, Tmp_1414);
    goto L82;

  anon65_Then:
    assume {:partition} status_38 != -1072562032;
    goto L66;

  anon81_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon64_Then:
    assume {:partition} 2 > sdv_482;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 2082} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon63_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon79_Then:
    goto L20;

  anon61_Then:
    call {:si_unique_call 2083} sdv_478 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_478;
    goto L32;

  anon78_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1409: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2606: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;

  anon0:
    call {:si_unique_call 2084} vslice_dummy_var_372 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2606 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2606 != 0;
    assume Tmp_2606 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2085} Sbp2AllocComplete#0(Entry_3);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2086} Sbp2BusResetNotification(Entry_3);
    goto L1;

  anon26_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2087} Sbp2BusResetNotificationEx(Entry_3);
    goto L1;

  anon25_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2088} vslice_dummy_var_375 := Sbp2GlobalStatusCallback#0(Entry_3);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2089} vslice_dummy_var_374 := Sbp2ManagementOrbStatusCallback#0(Entry_3);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon31_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2090} vslice_dummy_var_373 := Sbp2TaskOrbStatusCallback#0(Entry_3);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L1;

  anon23_Then:
    call {:si_unique_call 2091} vslice_dummy_var_376 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2606: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;

  anon0:
    call {:si_unique_call 2092} vslice_dummy_var_377 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2606 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2606 != 0;
    assume Tmp_2606 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2093} Sbp2AllocComplete#1(Entry_3);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2094} Sbp2BusResetNotification(Entry_3);
    goto L1;

  anon26_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2095} Sbp2BusResetNotificationEx(Entry_3);
    goto L1;

  anon25_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2096} vslice_dummy_var_380 := Sbp2GlobalStatusCallback#1(Entry_3);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2097} vslice_dummy_var_379 := Sbp2ManagementOrbStatusCallback#1(Entry_3);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon31_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 2098} vslice_dummy_var_378 := Sbp2TaskOrbStatusCallback#1(Entry_3);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L1;

  anon23_Then:
    call {:si_unique_call 2099} vslice_dummy_var_381 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 2100} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 2101} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 2102} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 2103} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pdoExtension;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 2104} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 2105} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon54_Then:
    call {:si_unique_call 2106} vslice_dummy_var_382 := KeCancelTimer(0);
    call {:si_unique_call 2107} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 2108} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_54], 1) != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_52;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_261;
    havoc vslice_dummy_var_262;
    call {:si_unique_call 2109} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_261, vslice_dummy_var_262);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_263;
    call {:si_unique_call 2110} vslice_dummy_var_383 := Sbp2Reset#0(vslice_dummy_var_263, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_50], 1) != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_44;
    havoc Tmp_45;
    call {:si_unique_call 2111} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 2112} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 2113} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 2114} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2115} CleanupOrbList#0(pdoExtension, -1073741248);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_264;
    call {:si_unique_call 2116} Sbp2StartNextPacketByKey#0(vslice_dummy_var_264, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon72_Then:
    goto L94;

  anon62_Then:
    goto L82;

  anon71_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_50], 1) == 0;
    goto L82;

  anon61_Then:
    goto L82;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L45;

  anon69_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_54], 1) == 0;
    goto L45;

  anon59_Then:
    goto L45;

  anon56_Then:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_46], 1) != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_49;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_265;
    call {:si_unique_call 2117} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_265, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_266;
    call {:si_unique_call 2118} Sbp2CreateRequestErrorLog(vslice_dummy_var_266, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_267;
    call {:si_unique_call 2119} vslice_dummy_var_384 := Sbp2Reset#0(vslice_dummy_var_267, 5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := 0;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L56;

  anon67_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_46], 1) == 0;
    goto L56;

  anon57_Then:
    goto L56;

  anon55_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon53_Then:
    call {:si_unique_call 2120} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_47], 1) != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_55;
    havoc Tmp_48;
    call {:si_unique_call 2121} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon65_Then:
    goto L115;

  anon75_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_47], 1) == 0;
    goto L115;

  anon64_Then:
    goto L115;

  anon52_Then:
    goto L13;

  anon51_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 2122} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 2123} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 2124} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 2125} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pdoExtension;
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 2126} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 2127} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon54_Then:
    call {:si_unique_call 2128} vslice_dummy_var_385 := KeCancelTimer(0);
    call {:si_unique_call 2129} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 2130} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_54], 1) != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_52;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_268;
    havoc vslice_dummy_var_269;
    call {:si_unique_call 2131} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_268, vslice_dummy_var_269);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_270;
    call {:si_unique_call 2132} vslice_dummy_var_386 := Sbp2Reset#1(vslice_dummy_var_270, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_50], 1) != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_44;
    havoc Tmp_45;
    call {:si_unique_call 2133} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 2134} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 2135} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 2136} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2137} CleanupOrbList#1(pdoExtension, -1073741248);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_271;
    call {:si_unique_call 2138} Sbp2StartNextPacketByKey#1(vslice_dummy_var_271, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon72_Then:
    goto L94;

  anon62_Then:
    goto L82;

  anon71_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_50], 1) == 0;
    goto L82;

  anon61_Then:
    goto L82;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L45;

  anon69_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_54], 1) == 0;
    goto L45;

  anon59_Then:
    goto L45;

  anon56_Then:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_46], 1) != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_49;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_272;
    call {:si_unique_call 2139} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_272, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_273;
    call {:si_unique_call 2140} Sbp2CreateRequestErrorLog(vslice_dummy_var_273, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_274;
    call {:si_unique_call 2141} vslice_dummy_var_387 := Sbp2Reset#1(vslice_dummy_var_274, 5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := 0;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L56;

  anon67_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_46], 1) == 0;
    goto L56;

  anon57_Then:
    goto L56;

  anon55_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon53_Then:
    call {:si_unique_call 2142} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_47], 1) != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_55;
    havoc Tmp_48;
    call {:si_unique_call 2143} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon65_Then:
    goto L115;

  anon75_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_47], 1) == 0;
    goto L115;

  anon64_Then:
    goto L115;

  anon52_Then:
    goto L13;

  anon51_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_45: int, actual_ResetLevel: int) returns (Tmp_2107: int)
{
  var {:pointer} Tmp_2108: int;
  var {:pointer} Tmp_2109: int;
  var {:pointer} Tmp_2110: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_20: int;
  var {:pointer} Tmp_2111: int;
  var {:pointer} Tmp_2112: int;
  var {:pointer} Tmp_2113: int;
  var {:pointer} Tmp_2114: int;
  var {:scalar} Tmp_2115: int;
  var {:scalar} sdv_659: int;
  var {:pointer} Tmp_2116: int;
  var {:pointer} Tmp_2117: int;
  var {:pointer} Tmp_2118: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_661: int;
  var {:pointer} Tmp_2119: int;
  var {:scalar} sdv_663: int;
  var {:scalar} Tmp_2120: int;
  var {:pointer} Tmp_2121: int;
  var {:scalar} Tmp_2122: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_2123: int;
  var {:pointer} Tmp_2124: int;
  var {:pointer} fdoExtension_11: int;
  var {:scalar} sdv_665: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:pointer} Tmp_2127: int;
  var {:pointer} irp_9: int;
  var {:pointer} Tmp_2128: int;
  var {:scalar} Tmp_2129: int;
  var {:pointer} Tmp_2130: int;
  var {:scalar} Tmp_2131: int;
  var {:pointer} sdv_669: int;
  var {:scalar} status_64: int;
  var {:pointer} Tmp_2132: int;
  var {:pointer} Tmp_2133: int;
  var {:pointer} Tmp_2134: int;
  var {:pointer} Tmp_2135: int;
  var {:pointer} DeviceObject_45: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;

  anon0:
    DeviceObject_45 := actual_DeviceObject_45;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 2144} Tmp_2114 := __HAVOC_malloc(4);
    call {:si_unique_call 2145} Tmp_2118 := __HAVOC_malloc(4);
    call {:si_unique_call 2146} Tmp_2119 := __HAVOC_malloc(4);
    call {:si_unique_call 2147} Tmp_2124 := __HAVOC_malloc(4);
    call {:si_unique_call 2148} Tmp_2134 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_45 != 0;
    assume DeviceObject_45 > 0;
    havoc pdoExtension_20;
    status_64 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2116;
    assume {:nonnull} Tmp_2116 != 0;
    assume Tmp_2116 > 0;
    havoc fdoExtension_11;
    call {:si_unique_call 2149} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2150} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 2151} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_2107 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon79_Then:
    call {:si_unique_call 2152} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 2153} Tmp_2108, Tmp_2109, Tmp_2110, transTimeout, retry, Tmp_2111, Tmp_2112, Tmp_2113, Tmp_2114, Tmp_2115, Tmp_2117, Tmp_2118, transType, sdv_661, Tmp_2119, Tmp_2120, Tmp_2121, Tmp_2122, oldIrql_5, Tmp_2123, Tmp_2124, Tmp_2125, Tmp_2126, Tmp_2127, Tmp_2128, Tmp_2129, Tmp_2130, Tmp_2131, status_64, Tmp_2132, Tmp_2133, Tmp_2134, Tmp_2135, vslice_dummy_var_388, vslice_dummy_var_390, vslice_dummy_var_391 := Sbp2Reset#0_loop_L26(Tmp_2108, Tmp_2109, Tmp_2110, transTimeout, retry, pdoExtension_20, Tmp_2111, Tmp_2112, Tmp_2113, Tmp_2114, Tmp_2115, sdv_659, Tmp_2117, Tmp_2118, transType, sdv_661, Tmp_2119, sdv_663, Tmp_2120, Tmp_2121, Tmp_2122, oldIrql_5, Tmp_2123, Tmp_2124, fdoExtension_11, sdv_665, Tmp_2125, Tmp_2126, Tmp_2127, Tmp_2128, Tmp_2129, Tmp_2130, Tmp_2131, status_64, Tmp_2132, Tmp_2133, Tmp_2134, Tmp_2135, ResetLevel, vslice_dummy_var_388, vslice_dummy_var_390, vslice_dummy_var_391);
    goto L26_last;

  L26_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} 0 >= retry;
    Tmp_2107 := status_64;
    goto L1;

  anon80_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 2154} Sbp2AddLog(pdoExtension_20, 1, -227314626, ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_2118;
    assume {:nonnull} Tmp_2118 != 0;
    assume Tmp_2118 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2118], 1) != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_2123;
    havoc Tmp_2131;
    call {:si_unique_call 2155} WPP_SF_q(Tmp_2131, 64, Tmp_2123, pdoExtension_20);
    goto L188;

  L188:
    call {:si_unique_call 2156} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2157} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L201;

  L201:
    call {:si_unique_call 2158} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2159} CleanupOrbList#0(pdoExtension_20, -1073741248);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2160} status_64 := Sbp2QueueManagementWorkItem(pdoExtension_20, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 2161} Sbp2AddLog(pdoExtension_20, 1, -227314639, status_64, retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_64 == -1072562032;
    goto L98;

  L98:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 2162} vslice_dummy_var_388 := KeCancelTimer(0);
    call {:si_unique_call 2163} status_64 := Sbp2UpdateNodeInformation#0(pdoExtension_20);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc Tmp_2134;
    assume {:nonnull} Tmp_2134 != 0;
    assume Tmp_2134 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2134], 1) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_2128;
    havoc Tmp_2122;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_275;
    call {:si_unique_call 2164} WPP_SF_qDD(Tmp_2122, 65, Tmp_2128, pdoExtension_20, status_64, vslice_dummy_var_275);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon103_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2134], 1) == 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon88_Then:
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    assume false;
    return;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} retry == 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_2107 := status_64;
    goto L1;

  anon87_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 2165} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2166} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2167} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2168} sdv_669 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_669;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_276;
    call {:si_unique_call 2169} Sbp2StartIo#0(vslice_dummy_var_276, irp_9);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_277;
    call {:si_unique_call 2170} Sbp2StartNextPacketByKey#0(vslice_dummy_var_277, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2107 := status_64;
    goto L1;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume {:partition} irp_9 == 0;
    goto L133;

  anon84_Then:
    assume {:partition} status_64 != -1072562032;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_64 != -1073741248;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_64 >= 0;
    goto L144;

  L144:
    Tmp_2107 := status_64;
    goto L1;

  anon90_Then:
    assume {:partition} 0 > status_64;
    call {:si_unique_call 2171} vslice_dummy_var_389 := KeCancelTimer(0);
    call {:si_unique_call 2172} IoInvalidateDeviceState(0);
    goto L144;

  anon85_Then:
    assume {:partition} status_64 == -1073741248;
    goto L98;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2118], 1) == 0;
    goto L188;

  anon96_Then:
    goto L188;

  anon98_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc Tmp_2119;
    assume {:nonnull} Tmp_2119 != 0;
    assume Tmp_2119 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2119], 1) != 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_2126;
    havoc Tmp_2120;
    call {:si_unique_call 2173} WPP_SF_q(Tmp_2120, 63, Tmp_2126, pdoExtension_20);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 2174} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2175} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2113;
    assume {:nonnull} Tmp_2113 != 0;
    assume Tmp_2113 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2112;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2135;
    assume {:nonnull} Tmp_2112 != 0;
    assume Tmp_2112 > 0;
    assume {:nonnull} Tmp_2135 != 0;
    assume Tmp_2135 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2132;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2111;
    assume {:nonnull} Tmp_2111 != 0;
    assume Tmp_2111 > 0;
    assume {:nonnull} Tmp_2132 != 0;
    assume Tmp_2132 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2109;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2125;
    assume {:nonnull} Tmp_2109 != 0;
    assume Tmp_2109 > 0;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2130;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2108;
    assume {:nonnull} Tmp_2108 != 0;
    assume Tmp_2108 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2133;
    assume {:nonnull} Tmp_2133 != 0;
    assume Tmp_2133 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2121;
    assume {:nonnull} Tmp_2121 != 0;
    assume Tmp_2121 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2176} Sbp2SetManagementTimer(pdoExtension_20, transTimeout);
    call {:si_unique_call 2177} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2178} CleanupOrbList#0(pdoExtension_20, -1073741248);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2179} status_64 := Sbp2AccessRegister#0(pdoExtension_20, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_20)), 1024);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    goto L46;

  anon112_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2119], 1) == 0;
    goto L46;

  anon82_Then:
    goto L46;

  anon100_Then:
    assume {:partition} ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_2114;
    assume {:nonnull} Tmp_2114 != 0;
    assume Tmp_2114 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2114], 1) != 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc Tmp_2117;
    havoc Tmp_2129;
    call {:si_unique_call 2180} WPP_SF_q(Tmp_2129, 62, Tmp_2117, pdoExtension_20);
    goto L149;

  L149:
    call {:si_unique_call 2181} sdv_661 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > sdv_661;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(pdoExtension_20)] := 15;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2182} vslice_dummy_var_390 := Sbp2AccessRegister#0(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 320);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2183} status_64 := Sbp2AccessRegister#0(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 258);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon93_Then:
    assume {:partition} sdv_661 >= 2;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(pdoExtension_20)] := 15;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2184} vslice_dummy_var_391 := Sbp2AccessRegister#0(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 1088);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2185} status_64 := Sbp2AccessRegister#0(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 1026);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    goto L149;

  anon107_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2114], 1) == 0;
    goto L149;

  anon91_Then:
    goto L149;

  anon81_Then:
    assume {:partition} ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc Tmp_2124;
    assume {:nonnull} Tmp_2124 != 0;
    assume Tmp_2124 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2124], 1) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_2110;
    havoc Tmp_2115;
    call {:si_unique_call 2186} WPP_SF_q(Tmp_2115, 61, Tmp_2110, pdoExtension_20);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2124], 1) == 0;
    goto L178;

  anon94_Then:
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_45: int, actual_ResetLevel: int) returns (Tmp_2107: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_45: int, actual_ResetLevel: int) returns (Tmp_2107: int)
{
  var {:pointer} Tmp_2108: int;
  var {:pointer} Tmp_2109: int;
  var {:pointer} Tmp_2110: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_20: int;
  var {:pointer} Tmp_2111: int;
  var {:pointer} Tmp_2112: int;
  var {:pointer} Tmp_2113: int;
  var {:pointer} Tmp_2114: int;
  var {:scalar} Tmp_2115: int;
  var {:scalar} sdv_659: int;
  var {:pointer} Tmp_2116: int;
  var {:pointer} Tmp_2117: int;
  var {:pointer} Tmp_2118: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_661: int;
  var {:pointer} Tmp_2119: int;
  var {:scalar} sdv_663: int;
  var {:scalar} Tmp_2120: int;
  var {:pointer} Tmp_2121: int;
  var {:scalar} Tmp_2122: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_2123: int;
  var {:pointer} Tmp_2124: int;
  var {:pointer} fdoExtension_11: int;
  var {:scalar} sdv_665: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:pointer} Tmp_2127: int;
  var {:pointer} irp_9: int;
  var {:pointer} Tmp_2128: int;
  var {:scalar} Tmp_2129: int;
  var {:pointer} Tmp_2130: int;
  var {:scalar} Tmp_2131: int;
  var {:pointer} sdv_669: int;
  var {:scalar} status_64: int;
  var {:pointer} Tmp_2132: int;
  var {:pointer} Tmp_2133: int;
  var {:pointer} Tmp_2134: int;
  var {:pointer} Tmp_2135: int;
  var {:pointer} DeviceObject_45: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;

  anon0:
    DeviceObject_45 := actual_DeviceObject_45;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 2187} Tmp_2114 := __HAVOC_malloc(4);
    call {:si_unique_call 2188} Tmp_2118 := __HAVOC_malloc(4);
    call {:si_unique_call 2189} Tmp_2119 := __HAVOC_malloc(4);
    call {:si_unique_call 2190} Tmp_2124 := __HAVOC_malloc(4);
    call {:si_unique_call 2191} Tmp_2134 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_45 != 0;
    assume DeviceObject_45 > 0;
    havoc pdoExtension_20;
    status_64 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2116;
    assume {:nonnull} Tmp_2116 != 0;
    assume Tmp_2116 > 0;
    havoc fdoExtension_11;
    call {:si_unique_call 2192} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2193} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 2194} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_2107 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon79_Then:
    call {:si_unique_call 2195} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 2196} Tmp_2108, Tmp_2109, Tmp_2110, transTimeout, retry, Tmp_2111, Tmp_2112, Tmp_2113, Tmp_2114, Tmp_2115, Tmp_2117, Tmp_2118, transType, sdv_661, Tmp_2119, Tmp_2120, Tmp_2121, Tmp_2122, oldIrql_5, Tmp_2123, Tmp_2124, Tmp_2125, Tmp_2126, Tmp_2127, Tmp_2128, Tmp_2129, Tmp_2130, Tmp_2131, status_64, Tmp_2132, Tmp_2133, Tmp_2134, Tmp_2135, vslice_dummy_var_392, vslice_dummy_var_394, vslice_dummy_var_395 := Sbp2Reset#1_loop_L26(Tmp_2108, Tmp_2109, Tmp_2110, transTimeout, retry, pdoExtension_20, Tmp_2111, Tmp_2112, Tmp_2113, Tmp_2114, Tmp_2115, sdv_659, Tmp_2117, Tmp_2118, transType, sdv_661, Tmp_2119, sdv_663, Tmp_2120, Tmp_2121, Tmp_2122, oldIrql_5, Tmp_2123, Tmp_2124, fdoExtension_11, sdv_665, Tmp_2125, Tmp_2126, Tmp_2127, Tmp_2128, Tmp_2129, Tmp_2130, Tmp_2131, status_64, Tmp_2132, Tmp_2133, Tmp_2134, Tmp_2135, ResetLevel, vslice_dummy_var_392, vslice_dummy_var_394, vslice_dummy_var_395);
    goto L26_last;

  L26_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} 0 >= retry;
    Tmp_2107 := status_64;
    goto L1;

  anon80_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 2197} Sbp2AddLog(pdoExtension_20, 1, -227314626, ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_2118;
    assume {:nonnull} Tmp_2118 != 0;
    assume Tmp_2118 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2118], 1) != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_2123;
    havoc Tmp_2131;
    call {:si_unique_call 2198} WPP_SF_q(Tmp_2131, 64, Tmp_2123, pdoExtension_20);
    goto L188;

  L188:
    call {:si_unique_call 2199} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2200} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L201;

  L201:
    call {:si_unique_call 2201} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2202} CleanupOrbList#1(pdoExtension_20, -1073741248);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2203} status_64 := Sbp2QueueManagementWorkItem(pdoExtension_20, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 2204} Sbp2AddLog(pdoExtension_20, 1, -227314639, status_64, retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_64 == -1072562032;
    goto L98;

  L98:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 2205} vslice_dummy_var_392 := KeCancelTimer(0);
    call {:si_unique_call 2206} status_64 := Sbp2UpdateNodeInformation#1(pdoExtension_20);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc Tmp_2134;
    assume {:nonnull} Tmp_2134 != 0;
    assume Tmp_2134 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2134], 1) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_2128;
    havoc Tmp_2122;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_278;
    call {:si_unique_call 2207} WPP_SF_qDD(Tmp_2122, 65, Tmp_2128, pdoExtension_20, status_64, vslice_dummy_var_278);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon103_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2134], 1) == 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon88_Then:
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    assume false;
    return;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} retry == 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_2107 := status_64;
    goto L1;

  anon87_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 2208} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2209} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2210} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2211} sdv_669 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_669;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_279;
    call {:si_unique_call 2212} Sbp2StartIo#1(vslice_dummy_var_279, irp_9);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_280;
    call {:si_unique_call 2213} Sbp2StartNextPacketByKey#1(vslice_dummy_var_280, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2107 := status_64;
    goto L1;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume {:partition} irp_9 == 0;
    goto L133;

  anon84_Then:
    assume {:partition} status_64 != -1072562032;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_64 != -1073741248;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_64 >= 0;
    goto L144;

  L144:
    Tmp_2107 := status_64;
    goto L1;

  anon90_Then:
    assume {:partition} 0 > status_64;
    call {:si_unique_call 2214} vslice_dummy_var_393 := KeCancelTimer(0);
    call {:si_unique_call 2215} IoInvalidateDeviceState(0);
    goto L144;

  anon85_Then:
    assume {:partition} status_64 == -1073741248;
    goto L98;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2118], 1) == 0;
    goto L188;

  anon96_Then:
    goto L188;

  anon98_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc Tmp_2119;
    assume {:nonnull} Tmp_2119 != 0;
    assume Tmp_2119 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2119], 1) != 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_2126;
    havoc Tmp_2120;
    call {:si_unique_call 2216} WPP_SF_q(Tmp_2120, 63, Tmp_2126, pdoExtension_20);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 2217} Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    Mem_T.INT4[Tmp_2127] := oldIrql_5;
    call {:si_unique_call 2218} sdv_KeAcquireSpinLock(0, Tmp_2127);
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_2127];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2113;
    assume {:nonnull} Tmp_2113 != 0;
    assume Tmp_2113 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2112;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2135;
    assume {:nonnull} Tmp_2112 != 0;
    assume Tmp_2112 > 0;
    assume {:nonnull} Tmp_2135 != 0;
    assume Tmp_2135 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2132;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2111;
    assume {:nonnull} Tmp_2111 != 0;
    assume Tmp_2111 > 0;
    assume {:nonnull} Tmp_2132 != 0;
    assume Tmp_2132 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2109;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2125;
    assume {:nonnull} Tmp_2109 != 0;
    assume Tmp_2109 > 0;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2130;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} Tmp_2130 != 0;
    assume Tmp_2130 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2108;
    assume {:nonnull} Tmp_2108 != 0;
    assume Tmp_2108 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2133;
    assume {:nonnull} Tmp_2133 != 0;
    assume Tmp_2133 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2121;
    assume {:nonnull} Tmp_2121 != 0;
    assume Tmp_2121 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2219} Sbp2SetManagementTimer(pdoExtension_20, transTimeout);
    call {:si_unique_call 2220} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2221} CleanupOrbList#1(pdoExtension_20, -1073741248);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2222} status_64 := Sbp2AccessRegister#1(pdoExtension_20, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_20)), 1024);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    goto L46;

  anon112_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2119], 1) == 0;
    goto L46;

  anon82_Then:
    goto L46;

  anon100_Then:
    assume {:partition} ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_2114;
    assume {:nonnull} Tmp_2114 != 0;
    assume Tmp_2114 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2114], 1) != 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc Tmp_2117;
    havoc Tmp_2129;
    call {:si_unique_call 2223} WPP_SF_q(Tmp_2129, 62, Tmp_2117, pdoExtension_20);
    goto L149;

  L149:
    call {:si_unique_call 2224} sdv_661 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > sdv_661;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(pdoExtension_20)] := 15;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2225} vslice_dummy_var_394 := Sbp2AccessRegister#1(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 320);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2226} status_64 := Sbp2AccessRegister#1(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 258);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon93_Then:
    assume {:partition} sdv_661 >= 2;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(pdoExtension_20)] := 15;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2227} vslice_dummy_var_395 := Sbp2AccessRegister#1(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 1088);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2228} status_64 := Sbp2AccessRegister#1(pdoExtension_20, Reserved__DEVICE_EXTENSION(pdoExtension_20), 1026);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    goto L149;

  anon107_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2114], 1) == 0;
    goto L149;

  anon91_Then:
    goto L149;

  anon81_Then:
    assume {:partition} ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc Tmp_2124;
    assume {:nonnull} Tmp_2124 != 0;
    assume Tmp_2124 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2124], 1) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_2110;
    havoc Tmp_2115;
    call {:si_unique_call 2229} WPP_SF_q(Tmp_2115, 61, Tmp_2110, pdoExtension_20);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2124], 1) == 0;
    goto L178;

  anon94_Then:
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_45: int, actual_ResetLevel: int) returns (Tmp_2107: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1359: int;
  var {:pointer} Tmp_1361: int;
  var {:pointer} Tmp_1362: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1363: int;
  var {:scalar} Tmp_1364: int;
  var {:scalar} sdv_459: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1366: int;
  var {:pointer} Tmp_1367: int;
  var {:pointer} Tmp_1368: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} sdv_466: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1372: int;
  var {:scalar} sdv_468: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;

  anon0:
    call {:si_unique_call 2230} vslice_dummy_var_396 := __HAVOC_malloc(4);
    call {:si_unique_call 2231} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2232} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2233} Tmp_1362 := __HAVOC_malloc(4);
    call {:si_unique_call 2234} Tmp_1371 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2235} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2236} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_281;
    call {:si_unique_call 2237} vslice_dummy_var_397 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_281);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2238} sdv_459 := sdv_IsListEmpty(0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_459 != 0;
    call {:si_unique_call 2239} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon40_Then:
    assume {:partition} sdv_459 == 0;
    call {:si_unique_call 2240} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2241} vslice_dummy_var_398 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2242} vslice_dummy_var_399 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2243} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2244} Tmp_1359, Tmp_1361, Tmp_1362, Tmp_1363, Tmp_1364, pEntry, Tmp_1366, Tmp_1367, Tmp_1368, requestIrp_1, Tmp_1369, Tmp_1370, sdv_466, Tmp_1371, currentListItem_1, Tmp_1372, sdv_468, Tmp_1373, vslice_dummy_var_400, vslice_dummy_var_402, vslice_dummy_var_403, vslice_dummy_var_404, vslice_dummy_var_405, vslice_dummy_var_406 := CleanupOrbList#0_loop_L42(Tmp_1359, Tmp_1361, Tmp_1362, pendingOrbListHead, Tmp_1363, Tmp_1364, orbLock_6, pEntry, Tmp_1366, Tmp_1367, Tmp_1368, requestIrp_1, Tmp_1369, Tmp_1370, sdv_466, Tmp_1371, currentListItem_1, Tmp_1372, sdv_468, Tmp_1373, DeviceExtension_4, CompletionStatus, vslice_dummy_var_400, vslice_dummy_var_402, vslice_dummy_var_403, vslice_dummy_var_404, vslice_dummy_var_405, vslice_dummy_var_406);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2261} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2262} InitializeListHead(pEntry);
    call {:si_unique_call 2263} sdv_466 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_466;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 2245} vslice_dummy_var_400 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2246} sdv_468 := sdv_IsListEmpty(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_468 != 0;
    call {:si_unique_call 2247} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2248} vslice_dummy_var_401 := Sbp2RestartPendingPowerIrp#0(DeviceExtension_4);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:partition} sdv_468 == 0;
    goto anon41_Then_dummy;

  anon41_Then_dummy:
    assume false;
    return;

  anon51_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2249} vslice_dummy_var_404 := KeCancelTimer(0);
    call {:si_unique_call 2250} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2251} vslice_dummy_var_402 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1371], 128) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1367;
    havoc Tmp_1364;
    call {:si_unique_call 2252} WPP_SF_q(Tmp_1364, 11, Tmp_1367, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1361;
    assume {:nonnull} Tmp_1361 != 0;
    assume Tmp_1361 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 2253} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2254} vslice_dummy_var_405 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2255} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon55_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1359;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1359 != 0;
    assume Tmp_1359 > 0;
    havoc vslice_dummy_var_282;
    call {:si_unique_call 2256} Sbp2StartPacket#0(vslice_dummy_var_282, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1359));
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L105;

  anon45_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2257} vslice_dummy_var_406 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_1362;
    assume {:nonnull} Tmp_1362 != 0;
    assume Tmp_1362 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1362], 1) != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_1368;
    havoc Tmp_1366;
    call {:si_unique_call 2258} WPP_SF_qq(Tmp_1366, 12, Tmp_1368, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2259} vslice_dummy_var_403 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    call {:si_unique_call 2260} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon48_Then:
    goto L123;

  anon57_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1362], 1) == 0;
    goto L123;

  anon47_Then:
    goto L123;

  anon44_Then:
    goto L99;

  anon49_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1363;
    assume {:nonnull} Tmp_1363 != 0;
    assume Tmp_1363 > 0;
    goto L98;

  anon50_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    goto L98;

  anon54_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    goto L98;

  anon43_Then:
    goto L83;

  anon53_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1371], 128) == 0;
    goto L83;

  anon42_Then:
    goto L83;

  anon39_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1359: int;
  var {:pointer} Tmp_1361: int;
  var {:pointer} Tmp_1362: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1363: int;
  var {:scalar} Tmp_1364: int;
  var {:scalar} sdv_459: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1366: int;
  var {:pointer} Tmp_1367: int;
  var {:pointer} Tmp_1368: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} sdv_466: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1372: int;
  var {:scalar} sdv_468: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;

  anon0:
    call {:si_unique_call 2264} vslice_dummy_var_407 := __HAVOC_malloc(4);
    call {:si_unique_call 2265} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2266} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2267} Tmp_1362 := __HAVOC_malloc(4);
    call {:si_unique_call 2268} Tmp_1371 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2269} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2270} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_283;
    call {:si_unique_call 2271} vslice_dummy_var_408 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_283);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2272} sdv_459 := sdv_IsListEmpty(0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_459 != 0;
    call {:si_unique_call 2273} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon40_Then:
    assume {:partition} sdv_459 == 0;
    call {:si_unique_call 2274} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2275} vslice_dummy_var_409 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2276} vslice_dummy_var_410 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2277} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2278} Tmp_1359, Tmp_1361, Tmp_1362, Tmp_1363, Tmp_1364, pEntry, Tmp_1366, Tmp_1367, Tmp_1368, requestIrp_1, Tmp_1369, Tmp_1370, sdv_466, Tmp_1371, currentListItem_1, Tmp_1372, sdv_468, Tmp_1373, vslice_dummy_var_411, vslice_dummy_var_413, vslice_dummy_var_414, vslice_dummy_var_415, vslice_dummy_var_416, vslice_dummy_var_417 := CleanupOrbList#1_loop_L42(Tmp_1359, Tmp_1361, Tmp_1362, pendingOrbListHead, Tmp_1363, Tmp_1364, orbLock_6, pEntry, Tmp_1366, Tmp_1367, Tmp_1368, requestIrp_1, Tmp_1369, Tmp_1370, sdv_466, Tmp_1371, currentListItem_1, Tmp_1372, sdv_468, Tmp_1373, DeviceExtension_4, CompletionStatus, vslice_dummy_var_411, vslice_dummy_var_413, vslice_dummy_var_414, vslice_dummy_var_415, vslice_dummy_var_416, vslice_dummy_var_417);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2295} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2296} InitializeListHead(pEntry);
    call {:si_unique_call 2297} sdv_466 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_466;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 2279} vslice_dummy_var_411 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2280} sdv_468 := sdv_IsListEmpty(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_468 != 0;
    call {:si_unique_call 2281} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2282} vslice_dummy_var_412 := Sbp2RestartPendingPowerIrp#1(DeviceExtension_4);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:partition} sdv_468 == 0;
    goto anon41_Then_dummy;

  anon41_Then_dummy:
    assume false;
    return;

  anon51_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2283} vslice_dummy_var_415 := KeCancelTimer(0);
    call {:si_unique_call 2284} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2285} vslice_dummy_var_413 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1371], 128) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1367;
    havoc Tmp_1364;
    call {:si_unique_call 2286} WPP_SF_q(Tmp_1364, 11, Tmp_1367, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1361;
    assume {:nonnull} Tmp_1361 != 0;
    assume Tmp_1361 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 2287} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2288} vslice_dummy_var_416 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2289} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon55_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1359;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1359 != 0;
    assume Tmp_1359 > 0;
    havoc vslice_dummy_var_284;
    call {:si_unique_call 2290} Sbp2StartPacket#1(vslice_dummy_var_284, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1359));
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L105;

  anon45_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2291} vslice_dummy_var_417 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_1362;
    assume {:nonnull} Tmp_1362 != 0;
    assume Tmp_1362 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1362], 1) != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_1368;
    havoc Tmp_1366;
    call {:si_unique_call 2292} WPP_SF_qq(Tmp_1366, 12, Tmp_1368, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2293} vslice_dummy_var_414 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    call {:si_unique_call 2294} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon48_Then:
    goto L123;

  anon57_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1362], 1) == 0;
    goto L123;

  anon47_Then:
    goto L123;

  anon44_Then:
    goto L99;

  anon49_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1363;
    assume {:nonnull} Tmp_1363 != 0;
    assume Tmp_1363 > 0;
    goto L98;

  anon50_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    goto L98;

  anon54_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    goto L98;

  anon43_Then:
    goto L83;

  anon53_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1371], 128) == 0;
    goto L83;

  anon42_Then:
    goto L83;

  anon39_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1191: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Tmp_1192: int;
  var {:pointer} Tmp_1193: int;
  var {:pointer} sdv_410: int;
  var {:pointer} Tmp_1194: int;
  var {:pointer} Tmp_1195: int;
  var {:pointer} Tmp_1196: int;
  var {:pointer} Tmp_1197: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_29: int;
  var {:scalar} Tmp_1198: int;
  var {:scalar} Tmp_1199: int;
  var {:scalar} Tmp_1200: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_285: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2298} Tmp_1192 := __HAVOC_malloc(4);
    call {:si_unique_call 2299} Tmp_1197 := __HAVOC_malloc(4);
    status_29 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2300} sdv_410 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_12 := sdv_410;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irp_12 != 0;
    call {:si_unique_call 2301} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_12, 0);
    call {:si_unique_call 2302} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1197;
    assume {:nonnull} Tmp_1197 != 0;
    assume Tmp_1197 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1197], 4) != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc Tmp_1200;
    havoc Tmp_1193;
    havoc Tmp_1198;
    call {:si_unique_call 2303} WPP_SF_qD(Tmp_1198, 36, Tmp_1193, PdoExtension_13, Tmp_1200);
    goto L25;

  L25:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2304} Tmp_1194 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1194 != 0;
    assume Tmp_1194 > 0;
    Mem_T.INT4[Tmp_1194] := cIrql_3;
    call {:si_unique_call 2305} sdv_KeAcquireSpinLock(0, Tmp_1194);
    assume {:nonnull} Tmp_1194 != 0;
    assume Tmp_1194 > 0;
    cIrql_3 := Mem_T.INT4[Tmp_1194];
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1195;
    assume {:nonnull} Tmp_1195 != 0;
    assume Tmp_1195 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1195)], 16) == 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2306} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2307} status_29 := Sbp2ManagementTransaction#0(PdoExtension_13, 7, -1);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1192;
    assume {:nonnull} Tmp_1192 != 0;
    assume Tmp_1192 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1192], 4) != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_1196;
    havoc Tmp_1199;
    call {:si_unique_call 2308} WPP_SF_qD(Tmp_1199, 37, Tmp_1196, PdoExtension_13, status_29);
    goto L56;

  L56:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_285;
    call {:si_unique_call 2309} Sbp2PdoCompletePowerIrp(vslice_dummy_var_285, Irp_12);
    Tmp_1191 := status_29;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon32_Then:
    goto L56;

  anon38_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1192], 4) == 0;
    goto L56;

  anon31_Then:
    goto L56;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1195)], 16) != 0;
    goto L40;

  L40:
    call {:si_unique_call 2310} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon35_Then:
    goto L40;

  anon28_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2311} status_29 := Sbp2Issue1394BusReset#0(PdoExtension_13);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L56;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    goto L56;

  anon29_Then:
    goto L25;

  anon34_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1197], 4) == 0;
    goto L25;

  anon27_Then:
    goto L25;

  anon33_Then:
    assume {:partition} Irp_12 == 0;
    Tmp_1191 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1191: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1191: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Tmp_1192: int;
  var {:pointer} Tmp_1193: int;
  var {:pointer} sdv_410: int;
  var {:pointer} Tmp_1194: int;
  var {:pointer} Tmp_1195: int;
  var {:pointer} Tmp_1196: int;
  var {:pointer} Tmp_1197: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_29: int;
  var {:scalar} Tmp_1198: int;
  var {:scalar} Tmp_1199: int;
  var {:scalar} Tmp_1200: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_286: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2312} Tmp_1192 := __HAVOC_malloc(4);
    call {:si_unique_call 2313} Tmp_1197 := __HAVOC_malloc(4);
    status_29 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2314} sdv_410 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_12 := sdv_410;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irp_12 != 0;
    call {:si_unique_call 2315} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_12, 0);
    call {:si_unique_call 2316} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1197;
    assume {:nonnull} Tmp_1197 != 0;
    assume Tmp_1197 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1197], 4) != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc Tmp_1200;
    havoc Tmp_1193;
    havoc Tmp_1198;
    call {:si_unique_call 2317} WPP_SF_qD(Tmp_1198, 36, Tmp_1193, PdoExtension_13, Tmp_1200);
    goto L25;

  L25:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2318} Tmp_1194 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1194 != 0;
    assume Tmp_1194 > 0;
    Mem_T.INT4[Tmp_1194] := cIrql_3;
    call {:si_unique_call 2319} sdv_KeAcquireSpinLock(0, Tmp_1194);
    assume {:nonnull} Tmp_1194 != 0;
    assume Tmp_1194 > 0;
    cIrql_3 := Mem_T.INT4[Tmp_1194];
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1195;
    assume {:nonnull} Tmp_1195 != 0;
    assume Tmp_1195 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1195)], 16) == 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2320} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2321} status_29 := Sbp2ManagementTransaction#1(PdoExtension_13, 7, -1);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1192;
    assume {:nonnull} Tmp_1192 != 0;
    assume Tmp_1192 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1192], 4) != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_1196;
    havoc Tmp_1199;
    call {:si_unique_call 2322} WPP_SF_qD(Tmp_1199, 37, Tmp_1196, PdoExtension_13, status_29);
    goto L56;

  L56:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_286;
    call {:si_unique_call 2323} Sbp2PdoCompletePowerIrp(vslice_dummy_var_286, Irp_12);
    Tmp_1191 := status_29;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon32_Then:
    goto L56;

  anon38_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1192], 4) == 0;
    goto L56;

  anon31_Then:
    goto L56;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1195)], 16) != 0;
    goto L40;

  L40:
    call {:si_unique_call 2324} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon35_Then:
    goto L40;

  anon28_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2325} status_29 := Sbp2Issue1394BusReset#1(PdoExtension_13);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L56;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    goto L56;

  anon29_Then:
    goto L25;

  anon34_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1197], 4) == 0;
    goto L25;

  anon27_Then:
    goto L25;

  anon33_Then:
    assume {:partition} Irp_12 == 0;
    Tmp_1191 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1191: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int)
{
  var {:scalar} Tmp_592: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_169: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:scalar} Tmp_595: int;
  var {:scalar} Tmp_596: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:scalar} sdv_172: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_173: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} sdv_174: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_179: int;
  var {:scalar} sdv_180: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} Tmp_608: int;
  var {:scalar} sdv_182: int;
  var {:pointer} Tmp_609: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_183: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} sdv_184: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_611: int;
  var {:scalar} Tmp_612: int;
  var {:pointer} Tmp_613: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_287: int;

  anon0:
    call {:si_unique_call 2326} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2327} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2328} Tmp_599 := __HAVOC_malloc(4);
    call {:si_unique_call 2329} Tmp_600 := __HAVOC_malloc(4);
    call {:si_unique_call 2330} Tmp_601 := __HAVOC_malloc(4);
    call {:si_unique_call 2331} Tmp_604 := __HAVOC_malloc(4);
    call {:si_unique_call 2332} Tmp_614 := __HAVOC_malloc(4);
    call {:si_unique_call 2333} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    Tmp_591 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon79_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2334} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Type != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Type != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Type != 3;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2335} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_591 := status_14;
    goto L1;

  anon80_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_614], 2048) != 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_610;
    havoc Tmp_592;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_287;
    call {:si_unique_call 2336} WPP_SF_qD(Tmp_592, 88, Tmp_610, PdoExtension_7, vslice_dummy_var_287);
    goto L25;

  L25:
    call {:si_unique_call 2337} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_597;
    assume {:nonnull} Tmp_597 != 0;
    assume Tmp_597 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2338} sdv_184 := sdv_KeGetCurrentIrql();
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} 2 > sdv_184;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2339} vslice_dummy_var_418 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_603 := bSync;
    call {:si_unique_call 2340} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_603);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2341} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_14 < 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    havoc Tmp_601;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_601], 2048) != 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_605;
    havoc Tmp_596;
    call {:si_unique_call 2342} WPP_SF_qdD(Tmp_596, 91, Tmp_605, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2343} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2344} vslice_dummy_var_419 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto L39;

  anon99_Then:
    goto L218;

  anon117_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_601], 2048) == 0;
    goto L218;

  anon98_Then:
    goto L218;

  anon90_Then:
    assume {:partition} 0 <= status_14;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2345} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2346} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_14 == 258;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc Tmp_599;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_599], 2048) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_609;
    havoc Tmp_612;
    call {:si_unique_call 2347} WPP_SF_qd(Tmp_612, 89, Tmp_609, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon95_Then:
    goto L193;

  anon115_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_599], 2048) == 0;
    goto L193;

  anon94_Then:
    goto L193;

  anon92_Then:
    assume {:partition} status_14 != 258;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2348} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_600;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_600], 2048) != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_598;
    havoc Tmp_611;
    call {:si_unique_call 2349} WPP_SF_qD(Tmp_611, 90, Tmp_598, PdoExtension_7, status_14);
    goto L176;

  anon97_Then:
    goto L176;

  anon116_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_600], 2048) == 0;
    goto L176;

  anon96_Then:
    goto L176;

  anon93_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon89_Then:
    assume {:partition} sdv_184 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon88_Then:
    assume {:partition} 0 > status_14;
    Tmp_591 := status_14;
    goto L1;

  anon81_Then:
    goto L25;

  anon112_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_614], 2048) == 0;
    goto L25;

  anon111_Then:
    goto L25;

  anon100_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon101_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2350} status_14 := Sbp2DoReconnect#0(PdoExtension_7, Generation_3);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon102_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2351} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_613;
    assume {:nonnull} Tmp_613 != 0;
    assume Tmp_613 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2352} vslice_dummy_var_420 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2353} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} status_14 < 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_593], 2048) != 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    havoc Tmp_607;
    havoc Tmp_595;
    call {:si_unique_call 2354} WPP_SF_qD(Tmp_595, 86, Tmp_607, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_591 := status_14;
    goto L1;

  anon87_Then:
    goto L123;

  anon109_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_593], 2048) == 0;
    goto L123;

  anon86_Then:
    goto L123;

  anon82_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2355} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} status_14 == 258;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    havoc Tmp_604;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_604], 2048) != 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_594;
    havoc Tmp_606;
    call {:si_unique_call 2356} WPP_SF_q(Tmp_606, 87, Tmp_594, PdoExtension_7);
    goto L114;

  L114:
    Tmp_591 := -1073741823;
    goto L1;

  anon85_Then:
    goto L114;

  anon108_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_604], 2048) == 0;
    goto L114;

  anon84_Then:
    goto L114;

  anon83_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2357} status_14 := Sbp2DoLogin#0(PdoExtension_7, Generation_3);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_591 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int)
{
  var {:scalar} Tmp_592: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_169: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:scalar} Tmp_595: int;
  var {:scalar} Tmp_596: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:scalar} sdv_172: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_173: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} sdv_174: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_179: int;
  var {:scalar} sdv_180: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} Tmp_608: int;
  var {:scalar} sdv_182: int;
  var {:pointer} Tmp_609: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_183: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} sdv_184: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_611: int;
  var {:scalar} Tmp_612: int;
  var {:pointer} Tmp_613: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_288: int;

  anon0:
    call {:si_unique_call 2358} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2359} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2360} Tmp_599 := __HAVOC_malloc(4);
    call {:si_unique_call 2361} Tmp_600 := __HAVOC_malloc(4);
    call {:si_unique_call 2362} Tmp_601 := __HAVOC_malloc(4);
    call {:si_unique_call 2363} Tmp_604 := __HAVOC_malloc(4);
    call {:si_unique_call 2364} Tmp_614 := __HAVOC_malloc(4);
    call {:si_unique_call 2365} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    Tmp_591 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon79_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2366} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Type != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Type != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Type != 3;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2367} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_591 := status_14;
    goto L1;

  anon80_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_614], 2048) != 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_610;
    havoc Tmp_592;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_288;
    call {:si_unique_call 2368} WPP_SF_qD(Tmp_592, 88, Tmp_610, PdoExtension_7, vslice_dummy_var_288);
    goto L25;

  L25:
    call {:si_unique_call 2369} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_597;
    assume {:nonnull} Tmp_597 != 0;
    assume Tmp_597 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2370} sdv_184 := sdv_KeGetCurrentIrql();
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} 2 > sdv_184;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2371} vslice_dummy_var_421 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_603 := bSync;
    call {:si_unique_call 2372} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_603);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2373} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_14 < 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    havoc Tmp_601;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_601], 2048) != 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_605;
    havoc Tmp_596;
    call {:si_unique_call 2374} WPP_SF_qdD(Tmp_596, 91, Tmp_605, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2375} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2376} vslice_dummy_var_422 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto L39;

  anon99_Then:
    goto L218;

  anon117_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_601], 2048) == 0;
    goto L218;

  anon98_Then:
    goto L218;

  anon90_Then:
    assume {:partition} 0 <= status_14;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2377} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2378} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_14 == 258;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc Tmp_599;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_599], 2048) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_609;
    havoc Tmp_612;
    call {:si_unique_call 2379} WPP_SF_qd(Tmp_612, 89, Tmp_609, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon95_Then:
    goto L193;

  anon115_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_599], 2048) == 0;
    goto L193;

  anon94_Then:
    goto L193;

  anon92_Then:
    assume {:partition} status_14 != 258;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2380} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_600;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_600], 2048) != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_598;
    havoc Tmp_611;
    call {:si_unique_call 2381} WPP_SF_qD(Tmp_611, 90, Tmp_598, PdoExtension_7, status_14);
    goto L176;

  anon97_Then:
    goto L176;

  anon116_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_600], 2048) == 0;
    goto L176;

  anon96_Then:
    goto L176;

  anon93_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon89_Then:
    assume {:partition} sdv_184 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon88_Then:
    assume {:partition} 0 > status_14;
    Tmp_591 := status_14;
    goto L1;

  anon81_Then:
    goto L25;

  anon112_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_614], 2048) == 0;
    goto L25;

  anon111_Then:
    goto L25;

  anon100_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon101_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2382} status_14 := Sbp2DoReconnect#1(PdoExtension_7, Generation_3);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon102_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2383} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_613;
    assume {:nonnull} Tmp_613 != 0;
    assume Tmp_613 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2384} vslice_dummy_var_423 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2385} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} status_14 < 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_593], 2048) != 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    havoc Tmp_607;
    havoc Tmp_595;
    call {:si_unique_call 2386} WPP_SF_qD(Tmp_595, 86, Tmp_607, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_591 := status_14;
    goto L1;

  anon87_Then:
    goto L123;

  anon109_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_593], 2048) == 0;
    goto L123;

  anon86_Then:
    goto L123;

  anon82_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2387} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} status_14 == 258;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    havoc Tmp_604;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_604], 2048) != 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_594;
    havoc Tmp_606;
    call {:si_unique_call 2388} WPP_SF_q(Tmp_606, 87, Tmp_594, PdoExtension_7);
    goto L114;

  L114:
    Tmp_591 := -1073741823;
    goto L1;

  anon85_Then:
    goto L114;

  anon108_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_604], 2048) == 0;
    goto L114;

  anon84_Then:
    goto L114;

  anon83_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2389} status_14 := Sbp2DoLogin#1(PdoExtension_7, Generation_3);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_591 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int)
{
  var {:pointer} Tmp_373: int;
  var {:scalar} Tmp_374: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} Tmp_376: int;
  var {:scalar} sdv_89: int;
  var {:scalar} sdv_90: int;
  var {:scalar} Tmp_377: int;
  var {:scalar} Tmp_378: int;
  var {:scalar} sdv_92: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_93: int;
  var {:scalar} sdv_94: int;
  var {:scalar} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:pointer} sdv_96: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} sdv_99: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:scalar} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:pointer} Tmp_397: int;
  var {:scalar} Tmp_398: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_402: int;
  var {:scalar} Tmp_403: int;
  var {:scalar} sdv_103: int;
  var {:scalar} sdv_104: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} sdv_106: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_407: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_109: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;

  anon0:
    call {:si_unique_call 2390} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2391} Tmp_376 := __HAVOC_malloc(4);
    call {:si_unique_call 2392} Tmp_379 := __HAVOC_malloc(4);
    call {:si_unique_call 2393} Tmp_383 := __HAVOC_malloc(4);
    call {:si_unique_call 2394} Tmp_386 := __HAVOC_malloc(4);
    call {:si_unique_call 2395} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2396} Tmp_393 := __HAVOC_malloc(4);
    call {:si_unique_call 2397} Tmp_394 := __HAVOC_malloc(4);
    call {:si_unique_call 2398} Tmp_396 := __HAVOC_malloc(4);
    call {:si_unique_call 2399} Tmp_397 := __HAVOC_malloc(4);
    call {:si_unique_call 2400} Tmp_406 := __HAVOC_malloc(4);
    call {:si_unique_call 2401} vslice_dummy_var_424 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2402} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2403} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    call {:si_unique_call 2404} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    havoc Tmp_394;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_394], 2048) != 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    havoc Tmp_408;
    havoc Tmp_377;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_289;
    call {:si_unique_call 2405} WPP_SF_qD(Tmp_377, 68, Tmp_408, PdoExtension_2, vslice_dummy_var_289);
    goto L25;

  L25:
    call {:si_unique_call 2406} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2407} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon120_Then:
    goto L25;

  anon151_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_394], 2048) == 0;
    goto L25;

  anon119_Then:
    goto L25;

  anon117_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2408} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2409} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_290;
    call {:si_unique_call 2410} sdv_103 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_290, 0, 0);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} yogi_error != 1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} sdv_103 == 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    havoc Tmp_376;
    assume {:nonnull} Tmp_376 != 0;
    assume Tmp_376 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_376], 2048) != 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    havoc Tmp_395;
    havoc Tmp_388;
    call {:si_unique_call 2411} WPP_SF_q(Tmp_388, 69, Tmp_395, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2412} status_8 := Sbp2InitializeDeviceExtension#0(PdoExtension_2);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} yogi_error != 1;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} status_8 < 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_383], 2048) != 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_400;
    havoc Tmp_392;
    call {:si_unique_call 2413} WPP_SF_qD(Tmp_392, 70, Tmp_400, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_372 := status_8;
    goto L1;

  anon147_Then:
    goto L315;

  anon173_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_383], 2048) == 0;
    goto L315;

  anon146_Then:
    goto L315;

  anon122_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_386], 2048) != 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 2414} sdv_96 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2415} sdv_106 := GET_LUN(PdoExtension_2);
    havoc Tmp_407;
    havoc Tmp_401;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_291;
    call {:si_unique_call 2416} WPP_SF_qdSDd(Tmp_401, 71, Tmp_407, PdoExtension_2, sdv_106, sdv_96, vslice_dummy_var_291, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2417} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2418} vslice_dummy_var_427 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2419} status_8 := Sbp2AccessRegisterEx#0(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2420} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_8 < 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_379], 2048) != 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    havoc Tmp_399;
    havoc Tmp_378;
    call {:si_unique_call 2421} WPP_SF_qD(Tmp_378, 76, Tmp_399, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2422} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2423} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2424} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2425} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2426} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  anon169_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2427} sdv_90 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} sdv_90 == 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_393;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_393], 2048) != 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_409;
    havoc Tmp_398;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_292;
    call {:si_unique_call 2428} WPP_SF_qD(Tmp_398, 77, Tmp_409, PdoExtension_2, vslice_dummy_var_292);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    call {:si_unique_call 2429} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2430} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2793);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon145_Then:
    goto L298;

  anon171_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_393], 2048) == 0;
    goto L298;

  anon144_Then:
    goto L298;

  anon143_Then:
    assume {:partition} sdv_90 != 0;
    call {:si_unique_call 2431} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2432} vslice_dummy_var_426 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2433} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2434} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    call {:si_unique_call 2435} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_372 := status_8;
    goto L1;

  anon170_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon142_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon141_Then:
    goto L254;

  anon168_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_379], 2048) == 0;
    goto L254;

  anon140_Then:
    goto L254;

  anon124_Then:
    assume {:partition} 0 <= status_8;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    havoc Tmp_406;
    assume {:nonnull} Tmp_406 != 0;
    assume Tmp_406 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_406], 2048) != 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_387;
    havoc Tmp_380;
    call {:si_unique_call 2436} WPP_SF_qD(Tmp_380, 72, Tmp_387, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2437} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2438} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2439} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2440} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} status_8 == 258;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_396], 2048) != 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc Tmp_405;
    havoc Tmp_382;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_389;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    havoc vslice_dummy_var_293;
    call {:si_unique_call 2441} WPP_SF_qd(Tmp_382, 73, Tmp_405, PdoExtension_2, vslice_dummy_var_293);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} status_8 < 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_391], 2048) != 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_404;
    havoc Tmp_403;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_294;
    call {:si_unique_call 2442} WPP_SF_qDd(Tmp_403, 74, Tmp_404, PdoExtension_2, status_8, vslice_dummy_var_294);
    goto L204;

  L204:
    call {:si_unique_call 2443} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2444} sdv_105 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_105 == 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_397;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_397], 2048) != 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_384;
    havoc Tmp_374;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_295;
    call {:si_unique_call 2445} WPP_SF_qD(Tmp_374, 75, Tmp_384, PdoExtension_2, vslice_dummy_var_295);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_402;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 2446} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2447} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2707);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon139_Then:
    goto L237;

  anon166_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_397], 2048) == 0;
    goto L237;

  anon138_Then:
    goto L237;

  anon135_Then:
    assume {:partition} sdv_105 != 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2448} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2449} sdv_102 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} sdv_102 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2450} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2451} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    goto L186;

  L186:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2452} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon131_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2453} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2454} vslice_dummy_var_425 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    assume false;
    return;

  anon162_Then:
    goto L197;

  anon137_Then:
    assume {:partition} 0 > sdv_102;
    call {:si_unique_call 2455} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon165_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon136_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon134_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon133_Then:
    goto L204;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_391], 2048) == 0;
    goto L204;

  anon132_Then:
    goto L204;

  anon130_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon129_Then:
    goto L181;

  anon128_Then:
    goto L171;

  anon161_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_396], 2048) == 0;
    goto L171;

  anon127_Then:
    goto L171;

  anon160_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon126_Then:
    goto L146;

  anon158_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_406], 2048) == 0;
    goto L146;

  anon125_Then:
    goto L146;

  anon157_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon150_Then:
    goto L106;

  anon156_Then:
    goto L107;

  anon123_Then:
    goto L68;

  anon155_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_386], 2048) == 0;
    goto L68;

  anon154_Then:
    goto L68;

  anon153_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon149_Then:
    goto L54;

  anon174_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_376], 2048) == 0;
    goto L54;

  anon148_Then:
    goto L54;

  anon121_Then:
    assume {:partition} sdv_103 != 0;
    goto L54;

  anon152_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int)
{
  var {:pointer} Tmp_373: int;
  var {:scalar} Tmp_374: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} Tmp_376: int;
  var {:scalar} sdv_89: int;
  var {:scalar} sdv_90: int;
  var {:scalar} Tmp_377: int;
  var {:scalar} Tmp_378: int;
  var {:scalar} sdv_92: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_93: int;
  var {:scalar} sdv_94: int;
  var {:scalar} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:pointer} sdv_96: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} sdv_99: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:scalar} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:pointer} Tmp_397: int;
  var {:scalar} Tmp_398: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_402: int;
  var {:scalar} Tmp_403: int;
  var {:scalar} sdv_103: int;
  var {:scalar} sdv_104: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} sdv_106: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_407: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_109: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;

  anon0:
    call {:si_unique_call 2456} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2457} Tmp_376 := __HAVOC_malloc(4);
    call {:si_unique_call 2458} Tmp_379 := __HAVOC_malloc(4);
    call {:si_unique_call 2459} Tmp_383 := __HAVOC_malloc(4);
    call {:si_unique_call 2460} Tmp_386 := __HAVOC_malloc(4);
    call {:si_unique_call 2461} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2462} Tmp_393 := __HAVOC_malloc(4);
    call {:si_unique_call 2463} Tmp_394 := __HAVOC_malloc(4);
    call {:si_unique_call 2464} Tmp_396 := __HAVOC_malloc(4);
    call {:si_unique_call 2465} Tmp_397 := __HAVOC_malloc(4);
    call {:si_unique_call 2466} Tmp_406 := __HAVOC_malloc(4);
    call {:si_unique_call 2467} vslice_dummy_var_428 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2468} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2469} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    call {:si_unique_call 2470} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    havoc Tmp_394;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_394], 2048) != 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    havoc Tmp_408;
    havoc Tmp_377;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_296;
    call {:si_unique_call 2471} WPP_SF_qD(Tmp_377, 68, Tmp_408, PdoExtension_2, vslice_dummy_var_296);
    goto L25;

  L25:
    call {:si_unique_call 2472} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2473} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon120_Then:
    goto L25;

  anon151_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_394], 2048) == 0;
    goto L25;

  anon119_Then:
    goto L25;

  anon117_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2474} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2475} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_297;
    call {:si_unique_call 2476} sdv_103 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_297, 0, 0);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} yogi_error != 1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} sdv_103 == 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    havoc Tmp_376;
    assume {:nonnull} Tmp_376 != 0;
    assume Tmp_376 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_376], 2048) != 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    havoc Tmp_395;
    havoc Tmp_388;
    call {:si_unique_call 2477} WPP_SF_q(Tmp_388, 69, Tmp_395, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2478} status_8 := Sbp2InitializeDeviceExtension#1(PdoExtension_2);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} yogi_error != 1;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} status_8 < 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_383], 2048) != 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_400;
    havoc Tmp_392;
    call {:si_unique_call 2479} WPP_SF_qD(Tmp_392, 70, Tmp_400, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_372 := status_8;
    goto L1;

  anon147_Then:
    goto L315;

  anon173_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_383], 2048) == 0;
    goto L315;

  anon146_Then:
    goto L315;

  anon122_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_386], 2048) != 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 2480} sdv_96 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2481} sdv_106 := GET_LUN(PdoExtension_2);
    havoc Tmp_407;
    havoc Tmp_401;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_298;
    call {:si_unique_call 2482} WPP_SF_qdSDd(Tmp_401, 71, Tmp_407, PdoExtension_2, sdv_106, sdv_96, vslice_dummy_var_298, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2483} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2484} vslice_dummy_var_432 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2485} status_8 := Sbp2AccessRegisterEx#1(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2486} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} status_8 < 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_379], 2048) != 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    havoc Tmp_399;
    havoc Tmp_378;
    call {:si_unique_call 2487} WPP_SF_qD(Tmp_378, 76, Tmp_399, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2488} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2489} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2490} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2491} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2492} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  anon169_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2493} sdv_90 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} sdv_90 == 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_393;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_393], 2048) != 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_409;
    havoc Tmp_398;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_299;
    call {:si_unique_call 2494} WPP_SF_qD(Tmp_398, 77, Tmp_409, PdoExtension_2, vslice_dummy_var_299);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    call {:si_unique_call 2495} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2496} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2793);
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon172_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon145_Then:
    goto L298;

  anon171_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_393], 2048) == 0;
    goto L298;

  anon144_Then:
    goto L298;

  anon143_Then:
    assume {:partition} sdv_90 != 0;
    call {:si_unique_call 2497} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2498} vslice_dummy_var_431 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2499} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2500} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    call {:si_unique_call 2501} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_372 := status_8;
    goto L1;

  anon170_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon142_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon141_Then:
    goto L254;

  anon168_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_379], 2048) == 0;
    goto L254;

  anon140_Then:
    goto L254;

  anon124_Then:
    assume {:partition} 0 <= status_8;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    havoc Tmp_406;
    assume {:nonnull} Tmp_406 != 0;
    assume Tmp_406 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_406], 2048) != 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_387;
    havoc Tmp_380;
    call {:si_unique_call 2502} WPP_SF_qD(Tmp_380, 72, Tmp_387, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2503} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2504} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2505} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2506} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} status_8 == 258;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_396], 2048) != 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc Tmp_405;
    havoc Tmp_382;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_389;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    havoc vslice_dummy_var_300;
    call {:si_unique_call 2507} WPP_SF_qd(Tmp_382, 73, Tmp_405, PdoExtension_2, vslice_dummy_var_300);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} status_8 < 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_391], 2048) != 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_404;
    havoc Tmp_403;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_301;
    call {:si_unique_call 2508} WPP_SF_qDd(Tmp_403, 74, Tmp_404, PdoExtension_2, status_8, vslice_dummy_var_301);
    goto L204;

  L204:
    call {:si_unique_call 2509} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2510} sdv_105 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_105 == 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc Tmp_397;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_397], 2048) != 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_384;
    havoc Tmp_374;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_302;
    call {:si_unique_call 2511} WPP_SF_qD(Tmp_374, 75, Tmp_384, PdoExtension_2, vslice_dummy_var_302);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_402;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 2512} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2513} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2707);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon139_Then:
    goto L237;

  anon166_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_397], 2048) == 0;
    goto L237;

  anon138_Then:
    goto L237;

  anon135_Then:
    assume {:partition} sdv_105 != 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2514} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2515} sdv_102 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} sdv_102 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2516} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    Mem_T.INT4[Tmp_390] := cIrql_1;
    call {:si_unique_call 2517} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    cIrql_1 := Mem_T.INT4[Tmp_390];
    goto L186;

  L186:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2518} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon131_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2519} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2520} vslice_dummy_var_430 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    call {:si_unique_call 2521} vslice_dummy_var_429 := Sbp2RestartPendingPowerIrp#0(PdoExtension_2);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} yogi_error != 1;
    goto L190;

  anon163_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon162_Then:
    goto L197;

  anon137_Then:
    assume {:partition} 0 > sdv_102;
    call {:si_unique_call 2522} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon165_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon136_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon134_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon133_Then:
    goto L204;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_391], 2048) == 0;
    goto L204;

  anon132_Then:
    goto L204;

  anon130_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon129_Then:
    goto L181;

  anon128_Then:
    goto L171;

  anon161_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_396], 2048) == 0;
    goto L171;

  anon127_Then:
    goto L171;

  anon160_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon126_Then:
    goto L146;

  anon158_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_406], 2048) == 0;
    goto L146;

  anon125_Then:
    goto L146;

  anon157_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon150_Then:
    goto L106;

  anon156_Then:
    goto L107;

  anon123_Then:
    goto L68;

  anon155_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_386], 2048) == 0;
    goto L68;

  anon154_Then:
    goto L68;

  anon153_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon149_Then:
    goto L54;

  anon174_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_376], 2048) == 0;
    goto L54;

  anon148_Then:
    goto L54;

  anon121_Then:
    assume {:partition} sdv_103 != 0;
    goto L54;

  anon152_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_47: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2198: int)
{
  var {:scalar} Tmp_2199: int;
  var {:scalar} Tmp_2200: int;
  var {:pointer} Tmp_2202: int;
  var {:scalar} Tmp_2203: int;
  var {:scalar} Tmp_2204: int;
  var {:pointer} Tmp_2205: int;
  var {:pointer} Tmp_2206: int;
  var {:scalar} Tmp_2207: int;
  var {:pointer} Tmp_2209: int;
  var {:pointer} pdoExtension_21: int;
  var {:scalar} Tmp_2211: int;
  var {:scalar} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:pointer} Tmp_2214: int;
  var {:pointer} Tmp_2215: int;
  var {:scalar} Tmp_2216: int;
  var {:pointer} Tmp_2217: int;
  var {:pointer} Tmp_2218: int;
  var {:pointer} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:pointer} Tmp_2221: int;
  var {:pointer} sdv_732: int;
  var {:pointer} Tmp_2222: int;
  var {:scalar} Tmp_2223: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:pointer} Tmp_2226: int;
  var {:scalar} Tmp_2227: int;
  var {:scalar} Tmp_2228: int;
  var {:pointer} sdv_733: int;
  var {:pointer} sdv_734: int;
  var {:scalar} Tmp_2229: int;
  var {:pointer} Tmp_2230: int;
  var {:pointer} Tmp_2231: int;
  var {:pointer} Tmp_2232: int;
  var {:pointer} sdv_735: int;
  var {:pointer} Tmp_2233: int;
  var {:pointer} Tmp_2234: int;
  var {:pointer} sdv_736: int;
  var {:scalar} Tmp_2235: int;
  var {:pointer} Tmp_2236: int;
  var {:pointer} Tmp_2237: int;
  var {:pointer} irp_10: int;
  var {:pointer} Tmp_2238: int;
  var {:pointer} Tmp_2239: int;
  var {:pointer} Tmp_2240: int;
  var {:pointer} Tmp_2241: int;
  var {:scalar} sdv_738: int;
  var {:pointer} Tmp_2242: int;
  var {:pointer} Tmp_2243: int;
  var {:scalar} Tmp_2244: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2245: int;
  var {:pointer} sdv_739: int;
  var {:scalar} Tmp_2246: int;
  var {:pointer} Tmp_2247: int;
  var {:pointer} Tmp_2248: int;
  var {:pointer} Tmp_2249: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2251: int;
  var {:scalar} Tmp_2252: int;
  var {:scalar} status_68: int;
  var {:pointer} Tmp_2253: int;
  var {:scalar} Tmp_2254: int;
  var {:pointer} Tmp_2255: int;
  var {:scalar} Tmp_2256: int;
  var {:pointer} Tmp_2257: int;
  var {:pointer} Tmp_2258: int;
  var {:scalar} Tmp_2259: int;
  var {:pointer} Tmp_2260: int;
  var {:scalar} Tmp_2261: int;
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2262: int;
  var {:pointer} Tmp_2263: int;
  var {:pointer} Tmp_2264: int;
  var {:pointer} Tmp_2265: int;
  var {:scalar} Tmp_2266: int;
  var {:scalar} Tmp_2267: int;
  var {:pointer} Tmp_2268: int;
  var {:scalar} Tmp_2269: int;
  var {:scalar} Tmp_2270: int;
  var {:scalar} Tmp_2272: int;
  var {:pointer} Tmp_2274: int;
  var {:pointer} Tmp_2275: int;
  var {:pointer} Tmp_2276: int;
  var {:scalar} Tmp_2277: int;
  var {:scalar} Tmp_2280: int;
  var {:scalar} Tmp_2281: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2282: int;
  var {:scalar} Tmp_2283: int;
  var {:scalar} Tmp_2284: int;
  var {:scalar} Tmp_2286: int;
  var {:pointer} Tmp_2287: int;
  var {:pointer} Tmp_2288: int;
  var {:scalar} Tmp_2289: int;
  var {:pointer} Tmp_2290: int;
  var {:scalar} Tmp_2291: int;
  var {:pointer} Tmp_2292: int;
  var {:pointer} Tmp_2293: int;
  var {:pointer} Tmp_2294: int;
  var {:pointer} Tmp_2295: int;
  var {:scalar} Tmp_2296: int;
  var {:pointer} sdv_742: int;
  var {:scalar} sdv_743: int;
  var {:pointer} Tmp_2297: int;
  var {:scalar} Tmp_2298: int;
  var {:pointer} fdoExtension_13: int;
  var {:pointer} Tmp_2299: int;
  var {:pointer} Tmp_2300: int;
  var {:pointer} Tmp_2301: int;
  var {:pointer} Tmp_2302: int;
  var {:pointer} Tmp_2303: int;
  var {:pointer} Tmp_2304: int;
  var {:pointer} Tmp_2305: int;
  var {:scalar} Tmp_2306: int;
  var {:scalar} Tmp_2307: int;
  var {:pointer} Tmp_2308: int;
  var {:scalar} Tmp_2309: int;
  var {:scalar} cIrql_11: int;
  var {:pointer} Tmp_2310: int;
  var {:scalar} Tmp_2312: int;
  var {:scalar} status_69: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2313: int;
  var {:scalar} Tmp_2314: int;
  var {:pointer} Tmp_2315: int;
  var {:scalar} Tmp_2316: int;
  var {:scalar} Tmp_2317: int;
  var {:pointer} Tmp_2318: int;
  var {:pointer} Tmp_2319: int;
  var {:pointer} Tmp_2320: int;
  var {:scalar} Tmp_2321: int;
  var {:pointer} Tmp_2322: int;
  var {:pointer} DeviceObject_47: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;

  anon0:
    DeviceObject_47 := actual_DeviceObject_47;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2523} Tmp_2202 := __HAVOC_malloc(2680);
    call {:si_unique_call 2524} Tmp_2206 := __HAVOC_malloc(2680);
    call {:si_unique_call 2525} Tmp_2213 := __HAVOC_malloc(4);
    call {:si_unique_call 2526} Tmp_2214 := __HAVOC_malloc(2680);
    call {:si_unique_call 2527} Tmp_2215 := __HAVOC_malloc(2680);
    call {:si_unique_call 2528} Tmp_2217 := __HAVOC_malloc(2680);
    call {:si_unique_call 2529} Tmp_2218 := __HAVOC_malloc(2680);
    call {:si_unique_call 2530} Tmp_2219 := __HAVOC_malloc(2680);
    call {:si_unique_call 2531} Tmp_2221 := __HAVOC_malloc(2680);
    call {:si_unique_call 2532} Tmp_2226 := __HAVOC_malloc(2680);
    call {:si_unique_call 2533} Tmp_2231 := __HAVOC_malloc(2680);
    call {:si_unique_call 2534} Tmp_2232 := __HAVOC_malloc(4);
    call {:si_unique_call 2535} Tmp_2233 := __HAVOC_malloc(2680);
    call {:si_unique_call 2536} Tmp_2234 := __HAVOC_malloc(4);
    call {:si_unique_call 2537} Tmp_2236 := __HAVOC_malloc(2680);
    call {:si_unique_call 2538} Tmp_2237 := __HAVOC_malloc(2680);
    call {:si_unique_call 2539} Tmp_2240 := __HAVOC_malloc(4);
    call {:si_unique_call 2540} Tmp_2243 := __HAVOC_malloc(2680);
    call {:si_unique_call 2541} Tmp_2247 := __HAVOC_malloc(2680);
    call {:si_unique_call 2542} Tmp_2248 := __HAVOC_malloc(2680);
    call {:si_unique_call 2543} Tmp_2255 := __HAVOC_malloc(2680);
    call {:si_unique_call 2544} Tmp_2257 := __HAVOC_malloc(2680);
    call {:si_unique_call 2545} Tmp_2262 := __HAVOC_malloc(4);
    call {:si_unique_call 2546} Tmp_2263 := __HAVOC_malloc(4);
    call {:si_unique_call 2547} Tmp_2264 := __HAVOC_malloc(2680);
    call {:si_unique_call 2548} Tmp_2268 := __HAVOC_malloc(4);
    call {:si_unique_call 2549} Tmp_2274 := __HAVOC_malloc(2680);
    call {:si_unique_call 2550} Tmp_2276 := __HAVOC_malloc(2680);
    call {:si_unique_call 2551} Tmp_2287 := __HAVOC_malloc(2680);
    call {:si_unique_call 2552} Tmp_2290 := __HAVOC_malloc(4);
    call {:si_unique_call 2553} Tmp_2292 := __HAVOC_malloc(2680);
    call {:si_unique_call 2554} Tmp_2293 := __HAVOC_malloc(4);
    call {:si_unique_call 2555} Tmp_2295 := __HAVOC_malloc(2680);
    call {:si_unique_call 2556} Tmp_2297 := __HAVOC_malloc(2680);
    call {:si_unique_call 2557} Tmp_2299 := __HAVOC_malloc(2680);
    call {:si_unique_call 2558} Tmp_2301 := __HAVOC_malloc(2680);
    call {:si_unique_call 2559} Tmp_2304 := __HAVOC_malloc(2680);
    call {:si_unique_call 2560} Tmp_2310 := __HAVOC_malloc(2680);
    call {:si_unique_call 2561} Tmp_2315 := __HAVOC_malloc(2680);
    call {:si_unique_call 2562} Tmp_2319 := __HAVOC_malloc(4);
    call {:si_unique_call 2563} Tmp_2320 := __HAVOC_malloc(2680);
    call {:si_unique_call 2564} Tmp_2322 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_47 != 0;
    assume DeviceObject_47 > 0;
    havoc pdoExtension_21;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    havoc Tmp_2234;
    assume {:nonnull} Tmp_2234 != 0;
    assume Tmp_2234 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2234], 1) != 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    Tmp_2298 := FreeLists;
    havoc Tmp_2209;
    havoc Tmp_2321;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_303;
    call {:si_unique_call 2565} WPP_SF_qDd(Tmp_2321, 31, Tmp_2209, pdoExtension_21, vslice_dummy_var_303, Tmp_2298);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2230;
    assume {:nonnull} Tmp_2230 != 0;
    assume Tmp_2230 > 0;
    havoc fdoExtension_13;
    Tmp_2312 := FreeLists;
    call {:si_unique_call 2566} Sbp2AddLog(pdoExtension_21, 1, -1016304048, Tmp_2312, fdoExtension_13);
    i_7 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2567} Tmp_2211, i_7, Tmp_2282, Tmp_2292, Tmp_2297 := Sbp2CleanDeviceExtension#0_loop_L33(Tmp_2211, i_7, Tmp_2282, Tmp_2292, Tmp_2297, fdoExtension_13, DeviceObject_47);
    goto L33_last;

  L33_last:
    Tmp_2282 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2297;
    assume {:nonnull} Tmp_2297 != 0;
    assume Tmp_2297 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    Tmp_2211 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2292;
    assume {:nonnull} Tmp_2292 != 0;
    assume Tmp_2292 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    valid := 1;
    goto L34;

  L34:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    call {:si_unique_call 2568} vslice_dummy_var_433 := KeCancelTimer(0);
    assume false;
    return;

  anon166_Then:
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2569} FreeAddressRange#0(pdoExtension_21, DummyContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} yogi_error != 1;
    goto L50;

  L50:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} FreeLists != 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2213], 1) != 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    Tmp_2252 := OnRemove;
    Tmp_2245 := FreeLists;
    havoc Tmp_2265;
    havoc Tmp_2270;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_304;
    call {:si_unique_call 2570} WPP_SF_qDdd(Tmp_2270, 32, Tmp_2265, pdoExtension_21, vslice_dummy_var_304, Tmp_2245, Tmp_2252);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2571} FreeAddressRange#0(pdoExtension_21, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2572} FreeAddressRange#0(pdoExtension_21, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2573} FreeAddressRange#0(pdoExtension_21, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2574} sdv_742 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_742;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} irp_10 != 0;
    assume irp_10 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2575} vslice_dummy_var_436 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), irp_10);
    call {:si_unique_call 2576} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2577} sdv_735 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_735;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} irp_10 != 0;
    assume irp_10 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2578} vslice_dummy_var_437 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), irp_10);
    call {:si_unique_call 2579} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2580} sdv_736 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_736;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} irp_10 != 0;
    assume irp_10 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2581} vslice_dummy_var_438 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), irp_10);
    call {:si_unique_call 2582} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    call {:si_unique_call 2583} vslice_dummy_var_434 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2584} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_2232;
    assume {:nonnull} Tmp_2232 != 0;
    assume Tmp_2232 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2232], 1) != 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2225;
    havoc Tmp_2317;
    call {:si_unique_call 2585} WPP_SF_q(Tmp_2317, 33, Tmp_2225, pdoExtension_21);
    goto L240;

  L240:
    Tmp_2198 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon185_Then:
    goto L240;

  anon225_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2232], 1) == 0;
    goto L240;

  anon184_Then:
    goto L240;

  anon173_Then:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    havoc Tmp_2293;
    assume {:nonnull} Tmp_2293 != 0;
    assume Tmp_2293 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2293], 1) != 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    havoc Tmp_2318;
    havoc Tmp_2291;
    call {:si_unique_call 2586} WPP_SF_q(Tmp_2291, 34, Tmp_2318, pdoExtension_21);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2587} FreeAddressRange#0(pdoExtension_21, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    i_7 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2588} i_7, context_2 := Sbp2CleanDeviceExtension#0_loop_L147(pdoExtension_21, i_7, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} 8 > i_7;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2589} FreeAddressRange#0(pdoExtension_21, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    i_7 := i_7 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon218_Then:
    goto L154;

  anon177_Then:
    assume {:partition} i_7 >= 8;
    call {:si_unique_call 2590} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2591} sdv_739 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_739;
    goto L167;

  L167:
    call {:si_unique_call 2592} Tmp_2203, sdv_734, statusFifoElement, Tmp_2268, Tmp_2308 := Sbp2CleanDeviceExtension#0_loop_L167(Tmp_2203, pdoExtension_21, sdv_734, statusFifoElement, Tmp_2268, Tmp_2308);
    goto L167_last;

  L167_last:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc Tmp_2268;
    assume {:nonnull} Tmp_2268 != 0;
    assume Tmp_2268 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2268], 1) != 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_2308;
    havoc Tmp_2203;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_305;
    call {:si_unique_call 2593} WPP_SF_qqq(Tmp_2203, 35, Tmp_2308, pdoExtension_21, statusFifoElement, vslice_dummy_var_305);
    goto L175;

  L175:
    call {:si_unique_call 2594} IoFreeMdl(0);
    call {:si_unique_call 2595} sdv_734 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_734;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2268], 1) == 0;
    goto L175;

  anon179_Then:
    goto L175;

  anon178_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2596} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2597} sdv_732 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_732;
    goto L191;

  L191:
    call {:si_unique_call 2598} sdv_733, Tmp_2302, packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(sdv_733, Tmp_2302, packet_13);
    goto L191_last;

  L191_last:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2599} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_2302;
    assume {:nonnull} Tmp_2302 != 0;
    assume Tmp_2302 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 2600} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2601} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2602} sdv_733 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_733;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon221_Then:
    goto L199;

  anon181_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2603} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2604} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    call {:si_unique_call 2605} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2606} sdv_KeReleaseSpinLock(0, cIrql_11);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2607} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2253;
    assume {:nonnull} Tmp_2253 != 0;
    assume Tmp_2253 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2288;
    assume {:nonnull} Tmp_2288 != 0;
    assume Tmp_2288 > 0;
    call {:si_unique_call 2608} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2241;
    assume {:nonnull} Tmp_2241 != 0;
    assume Tmp_2241 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2251;
    assume {:nonnull} Tmp_2251 != 0;
    assume Tmp_2251 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2305;
    assume {:nonnull} Tmp_2305 != 0;
    assume Tmp_2305 > 0;
    call {:si_unique_call 2609} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2239;
    assume {:nonnull} Tmp_2239 != 0;
    assume Tmp_2239 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2258;
    assume {:nonnull} Tmp_2258 != 0;
    assume Tmp_2258 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2300;
    assume {:nonnull} Tmp_2300 != 0;
    assume Tmp_2300 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2224;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    call {:si_unique_call 2610} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2205;
    assume {:nonnull} Tmp_2205 != 0;
    assume Tmp_2205 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2294;
    assume {:nonnull} Tmp_2294 != 0;
    assume Tmp_2294 > 0;
    goto L54;

  L54:
    Tmp_2198 := 1;
    goto L1;

  anon224_Then:
    goto L54;

  anon223_Then:
    goto L228;

  anon222_Then:
    goto L222;

  anon183_Then:
    goto L54;

  anon182_Then:
    goto L216;

  anon176_Then:
    goto L160;

  anon217_Then:
    goto L145;

  anon216_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L132;

  anon215_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2293], 1) == 0;
    goto L132;

  anon174_Then:
    goto L132;

  anon172_Then:
    goto L116;

  anon214_Then:
    assume {:partition} irp_10 == 0;
    goto L108;

  anon213_Then:
    assume {:partition} irp_10 == 0;
    goto L96;

  anon212_Then:
    assume {:partition} irp_10 == 0;
    goto L84;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon210_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    goto L54;

  anon171_Then:
    goto L60;

  anon208_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2213], 1) == 0;
    goto L60;

  anon169_Then:
    goto L60;

  anon168_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon207_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    goto L50;

  anon165_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_306;
    call {:si_unique_call 2611} Sbp2AddLog(pdoExtension_21, 1, -1016304078, vslice_dummy_var_306, 0);
    Tmp_2198 := 0;
    goto L1;

  anon205_Then:
    i_7 := i_7 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    assume false;
    return;

  anon204_Then:
    goto L34;

  anon164_Then:
    goto L19;

  anon203_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2234], 1) == 0;
    goto L19;

  anon163_Then:
    goto L19;

  anon202_Then:
    assume {:nonnull} DeviceObject_47 != 0;
    assume DeviceObject_47 > 0;
    havoc fdoExtension_13;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    Tmp_2198 := 0;
    goto L1;

  anon226_Then:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    call {:si_unique_call 2612} status_69 := Sbp2EnableBusResetNotification#0(fdoExtension_13, 0);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} status_69 < 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    havoc Tmp_2263;
    assume {:nonnull} Tmp_2263 != 0;
    assume Tmp_2263 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2263], 1) != 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2303;
    havoc Tmp_2313;
    call {:si_unique_call 2613} WPP_SF_qD(Tmp_2313, 36, Tmp_2303, fdoExtension_13, status_69);
    goto L253;

  L253:
    call {:si_unique_call 2614} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2615} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    goto L273;

  L273:
    call {:si_unique_call 2616} Tmp_2199, Tmp_2200, Tmp_2202, Tmp_2206, pdoExtension_21, Tmp_2212, Tmp_2214, Tmp_2215, Tmp_2216, Tmp_2217, Tmp_2218, Tmp_2219, Tmp_2221, Tmp_2222, Tmp_2223, Tmp_2226, Tmp_2227, Tmp_2228, Tmp_2229, Tmp_2231, Tmp_2233, Tmp_2235, Tmp_2236, Tmp_2237, Tmp_2240, Tmp_2243, Tmp_2244, Tmp_2246, Tmp_2247, Tmp_2248, Tmp_2249, Tmp_2254, Tmp_2256, Tmp_2257, Tmp_2259, Tmp_2260, Tmp_2261, i_7, Tmp_2264, Tmp_2266, Tmp_2267, Tmp_2272, Tmp_2274, Tmp_2276, Tmp_2280, Tmp_2281, Tmp_2283, Tmp_2284, Tmp_2286, Tmp_2287, Tmp_2289, Tmp_2295, Tmp_2296, Tmp_2301, Tmp_2304, Tmp_2306, Tmp_2307, Tmp_2309, cIrql_11, Tmp_2310, Tmp_2314, Tmp_2315, Tmp_2320, Tmp_2322, DeviceObject_47 := Sbp2CleanDeviceExtension#0_loop_L273(Tmp_2199, Tmp_2200, Tmp_2202, Tmp_2206, pdoExtension_21, Tmp_2212, Tmp_2214, Tmp_2215, Tmp_2216, Tmp_2217, Tmp_2218, Tmp_2219, Tmp_2221, Tmp_2222, Tmp_2223, Tmp_2226, Tmp_2227, Tmp_2228, Tmp_2229, Tmp_2231, Tmp_2233, Tmp_2235, Tmp_2236, Tmp_2237, Tmp_2240, Tmp_2243, Tmp_2244, Tmp_2246, Tmp_2247, Tmp_2248, Tmp_2249, Tmp_2254, Tmp_2256, Tmp_2257, Tmp_2259, Tmp_2260, Tmp_2261, i_7, Tmp_2264, Tmp_2266, Tmp_2267, Tmp_2272, Tmp_2274, Tmp_2276, Tmp_2280, Tmp_2281, Tmp_2283, Tmp_2284, Tmp_2286, Tmp_2287, Tmp_2289, Tmp_2295, Tmp_2296, fdoExtension_13, Tmp_2301, Tmp_2304, Tmp_2306, Tmp_2307, Tmp_2309, cIrql_11, Tmp_2310, Tmp_2314, Tmp_2315, Tmp_2320, Tmp_2322, DeviceObject_47);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc i_7;
    Tmp_2246 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2215;
    assume {:nonnull} Tmp_2215 != 0;
    assume Tmp_2215 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    Tmp_2199 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2231;
    assume {:nonnull} Tmp_2231 != 0;
    assume Tmp_2231 > 0;
    havoc Tmp_2222;
    assume {:nonnull} Tmp_2222 != 0;
    assume Tmp_2222 > 0;
    havoc pdoExtension_21;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    Tmp_2281 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2264;
    assume {:nonnull} Tmp_2264 != 0;
    assume Tmp_2264 > 0;
    havoc DeviceObject_47;
    Tmp_2272 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2310;
    assume {:nonnull} Tmp_2310 != 0;
    assume Tmp_2310 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    Tmp_2261 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2295;
    assume {:nonnull} Tmp_2295 != 0;
    assume Tmp_2295 > 0;
    call {:si_unique_call 2617} sdv_ExFreePool(0);
    Tmp_2256 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2274;
    assume {:nonnull} Tmp_2274 != 0;
    assume Tmp_2274 > 0;
    Tmp_2200 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2320;
    assume {:nonnull} Tmp_2320 != 0;
    assume Tmp_2320 > 0;
    goto L283;

  L283:
    Tmp_2280 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2237;
    assume {:nonnull} Tmp_2237 != 0;
    assume Tmp_2237 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    Tmp_2228 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2322;
    assume {:nonnull} Tmp_2322 != 0;
    assume Tmp_2322 > 0;
    call {:si_unique_call 2618} sdv_ExFreePool(0);
    Tmp_2307 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2276;
    assume {:nonnull} Tmp_2276 != 0;
    assume Tmp_2276 > 0;
    Tmp_2286 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2315;
    assume {:nonnull} Tmp_2315 != 0;
    assume Tmp_2315 > 0;
    goto L290;

  L290:
    Tmp_2223 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2233;
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    Tmp_2296 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2247;
    assume {:nonnull} Tmp_2247 != 0;
    assume Tmp_2247 > 0;
    call {:si_unique_call 2619} sdv_ExFreePool(0);
    Tmp_2259 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2218;
    assume {:nonnull} Tmp_2218 != 0;
    assume Tmp_2218 > 0;
    Tmp_2283 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2206;
    assume {:nonnull} Tmp_2206 != 0;
    assume Tmp_2206 > 0;
    goto L297;

  L297:
    Tmp_2266 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2221;
    assume {:nonnull} Tmp_2221 != 0;
    assume Tmp_2221 > 0;
    call {:si_unique_call 2620} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2621} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 2622} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_2240;
    assume {:nonnull} Tmp_2240 != 0;
    assume Tmp_2240 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2240], 1) != 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2249;
    havoc Tmp_2235;
    call {:si_unique_call 2623} WPP_SF_q(Tmp_2235, 37, Tmp_2249, pdoExtension_21);
    goto L317;

  L317:
    call {:si_unique_call 2624} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2625} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2240], 1) == 0;
    goto L317;

  anon191_Then:
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon230_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    Tmp_2207 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2255;
    assume {:nonnull} Tmp_2255 != 0;
    assume Tmp_2255 > 0;
    havoc DeviceObject_47;
    call {:si_unique_call 2626} sdv_KeReleaseSpinLock(0, cIrql_11);
    assume false;
    return;

  anon229_Then:
    goto L277;

  L277:
    Tmp_2244 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2217;
    assume {:nonnull} Tmp_2217 != 0;
    assume Tmp_2217 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    Tmp_2267 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2243;
    assume {:nonnull} Tmp_2243 != 0;
    assume Tmp_2243 > 0;
    call {:si_unique_call 2627} sdv_ExFreePool(0);
    Tmp_2212 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2219;
    assume {:nonnull} Tmp_2219 != 0;
    assume Tmp_2219 > 0;
    Tmp_2254 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2301;
    assume {:nonnull} Tmp_2301 != 0;
    assume Tmp_2301 > 0;
    goto L423;

  L423:
    Tmp_2314 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2248;
    assume {:nonnull} Tmp_2248 != 0;
    assume Tmp_2248 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    Tmp_2229 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2304;
    assume {:nonnull} Tmp_2304 != 0;
    assume Tmp_2304 > 0;
    call {:si_unique_call 2628} sdv_ExFreePool(0);
    Tmp_2227 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2257;
    assume {:nonnull} Tmp_2257 != 0;
    assume Tmp_2257 > 0;
    Tmp_2284 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2236;
    assume {:nonnull} Tmp_2236 != 0;
    assume Tmp_2236 > 0;
    goto L430;

  L430:
    Tmp_2289 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2226;
    assume {:nonnull} Tmp_2226 != 0;
    assume Tmp_2226 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    Tmp_2216 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2287;
    assume {:nonnull} Tmp_2287 != 0;
    assume Tmp_2287 > 0;
    call {:si_unique_call 2629} sdv_ExFreePool(0);
    Tmp_2306 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2214;
    assume {:nonnull} Tmp_2214 != 0;
    assume Tmp_2214 > 0;
    Tmp_2309 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2202;
    assume {:nonnull} Tmp_2202 != 0;
    assume Tmp_2202 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;

  anon189_Then:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_307;
    call {:si_unique_call 2630} DeAllocateIrpAndIrb(fdoExtension_13, vslice_dummy_var_307);
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2631} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto L54;

  anon190_Then:
    goto L443;

  anon188_Then:
    goto L253;

  anon243_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2263], 1) == 0;
    goto L253;

  anon187_Then:
    goto L253;

  anon186_Then:
    assume {:partition} 0 <= status_69;
    goto L253;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_47: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2198: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_47: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2198: int)
{
  var {:scalar} Tmp_2199: int;
  var {:scalar} Tmp_2200: int;
  var {:pointer} Tmp_2202: int;
  var {:scalar} Tmp_2203: int;
  var {:scalar} Tmp_2204: int;
  var {:pointer} Tmp_2205: int;
  var {:pointer} Tmp_2206: int;
  var {:scalar} Tmp_2207: int;
  var {:pointer} Tmp_2209: int;
  var {:pointer} pdoExtension_21: int;
  var {:scalar} Tmp_2211: int;
  var {:scalar} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:pointer} Tmp_2214: int;
  var {:pointer} Tmp_2215: int;
  var {:scalar} Tmp_2216: int;
  var {:pointer} Tmp_2217: int;
  var {:pointer} Tmp_2218: int;
  var {:pointer} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:pointer} Tmp_2221: int;
  var {:pointer} sdv_732: int;
  var {:pointer} Tmp_2222: int;
  var {:scalar} Tmp_2223: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:pointer} Tmp_2226: int;
  var {:scalar} Tmp_2227: int;
  var {:scalar} Tmp_2228: int;
  var {:pointer} sdv_733: int;
  var {:pointer} sdv_734: int;
  var {:scalar} Tmp_2229: int;
  var {:pointer} Tmp_2230: int;
  var {:pointer} Tmp_2231: int;
  var {:pointer} Tmp_2232: int;
  var {:pointer} sdv_735: int;
  var {:pointer} Tmp_2233: int;
  var {:pointer} Tmp_2234: int;
  var {:pointer} sdv_736: int;
  var {:scalar} Tmp_2235: int;
  var {:pointer} Tmp_2236: int;
  var {:pointer} Tmp_2237: int;
  var {:pointer} irp_10: int;
  var {:pointer} Tmp_2238: int;
  var {:pointer} Tmp_2239: int;
  var {:pointer} Tmp_2240: int;
  var {:pointer} Tmp_2241: int;
  var {:scalar} sdv_738: int;
  var {:pointer} Tmp_2242: int;
  var {:pointer} Tmp_2243: int;
  var {:scalar} Tmp_2244: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2245: int;
  var {:pointer} sdv_739: int;
  var {:scalar} Tmp_2246: int;
  var {:pointer} Tmp_2247: int;
  var {:pointer} Tmp_2248: int;
  var {:pointer} Tmp_2249: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2251: int;
  var {:scalar} Tmp_2252: int;
  var {:scalar} status_68: int;
  var {:pointer} Tmp_2253: int;
  var {:scalar} Tmp_2254: int;
  var {:pointer} Tmp_2255: int;
  var {:scalar} Tmp_2256: int;
  var {:pointer} Tmp_2257: int;
  var {:pointer} Tmp_2258: int;
  var {:scalar} Tmp_2259: int;
  var {:pointer} Tmp_2260: int;
  var {:scalar} Tmp_2261: int;
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2262: int;
  var {:pointer} Tmp_2263: int;
  var {:pointer} Tmp_2264: int;
  var {:pointer} Tmp_2265: int;
  var {:scalar} Tmp_2266: int;
  var {:scalar} Tmp_2267: int;
  var {:pointer} Tmp_2268: int;
  var {:scalar} Tmp_2269: int;
  var {:scalar} Tmp_2270: int;
  var {:scalar} Tmp_2272: int;
  var {:pointer} Tmp_2274: int;
  var {:pointer} Tmp_2275: int;
  var {:pointer} Tmp_2276: int;
  var {:scalar} Tmp_2277: int;
  var {:scalar} Tmp_2280: int;
  var {:scalar} Tmp_2281: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2282: int;
  var {:scalar} Tmp_2283: int;
  var {:scalar} Tmp_2284: int;
  var {:scalar} Tmp_2286: int;
  var {:pointer} Tmp_2287: int;
  var {:pointer} Tmp_2288: int;
  var {:scalar} Tmp_2289: int;
  var {:pointer} Tmp_2290: int;
  var {:scalar} Tmp_2291: int;
  var {:pointer} Tmp_2292: int;
  var {:pointer} Tmp_2293: int;
  var {:pointer} Tmp_2294: int;
  var {:pointer} Tmp_2295: int;
  var {:scalar} Tmp_2296: int;
  var {:pointer} sdv_742: int;
  var {:scalar} sdv_743: int;
  var {:pointer} Tmp_2297: int;
  var {:scalar} Tmp_2298: int;
  var {:pointer} fdoExtension_13: int;
  var {:pointer} Tmp_2299: int;
  var {:pointer} Tmp_2300: int;
  var {:pointer} Tmp_2301: int;
  var {:pointer} Tmp_2302: int;
  var {:pointer} Tmp_2303: int;
  var {:pointer} Tmp_2304: int;
  var {:pointer} Tmp_2305: int;
  var {:scalar} Tmp_2306: int;
  var {:scalar} Tmp_2307: int;
  var {:pointer} Tmp_2308: int;
  var {:scalar} Tmp_2309: int;
  var {:scalar} cIrql_11: int;
  var {:pointer} Tmp_2310: int;
  var {:scalar} Tmp_2312: int;
  var {:scalar} status_69: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2313: int;
  var {:scalar} Tmp_2314: int;
  var {:pointer} Tmp_2315: int;
  var {:scalar} Tmp_2316: int;
  var {:scalar} Tmp_2317: int;
  var {:pointer} Tmp_2318: int;
  var {:pointer} Tmp_2319: int;
  var {:pointer} Tmp_2320: int;
  var {:scalar} Tmp_2321: int;
  var {:pointer} Tmp_2322: int;
  var {:pointer} DeviceObject_47: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;

  anon0:
    DeviceObject_47 := actual_DeviceObject_47;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2632} Tmp_2202 := __HAVOC_malloc(2680);
    call {:si_unique_call 2633} Tmp_2206 := __HAVOC_malloc(2680);
    call {:si_unique_call 2634} Tmp_2213 := __HAVOC_malloc(4);
    call {:si_unique_call 2635} Tmp_2214 := __HAVOC_malloc(2680);
    call {:si_unique_call 2636} Tmp_2215 := __HAVOC_malloc(2680);
    call {:si_unique_call 2637} Tmp_2217 := __HAVOC_malloc(2680);
    call {:si_unique_call 2638} Tmp_2218 := __HAVOC_malloc(2680);
    call {:si_unique_call 2639} Tmp_2219 := __HAVOC_malloc(2680);
    call {:si_unique_call 2640} Tmp_2221 := __HAVOC_malloc(2680);
    call {:si_unique_call 2641} Tmp_2226 := __HAVOC_malloc(2680);
    call {:si_unique_call 2642} Tmp_2231 := __HAVOC_malloc(2680);
    call {:si_unique_call 2643} Tmp_2232 := __HAVOC_malloc(4);
    call {:si_unique_call 2644} Tmp_2233 := __HAVOC_malloc(2680);
    call {:si_unique_call 2645} Tmp_2234 := __HAVOC_malloc(4);
    call {:si_unique_call 2646} Tmp_2236 := __HAVOC_malloc(2680);
    call {:si_unique_call 2647} Tmp_2237 := __HAVOC_malloc(2680);
    call {:si_unique_call 2648} Tmp_2240 := __HAVOC_malloc(4);
    call {:si_unique_call 2649} Tmp_2243 := __HAVOC_malloc(2680);
    call {:si_unique_call 2650} Tmp_2247 := __HAVOC_malloc(2680);
    call {:si_unique_call 2651} Tmp_2248 := __HAVOC_malloc(2680);
    call {:si_unique_call 2652} Tmp_2255 := __HAVOC_malloc(2680);
    call {:si_unique_call 2653} Tmp_2257 := __HAVOC_malloc(2680);
    call {:si_unique_call 2654} Tmp_2262 := __HAVOC_malloc(4);
    call {:si_unique_call 2655} Tmp_2263 := __HAVOC_malloc(4);
    call {:si_unique_call 2656} Tmp_2264 := __HAVOC_malloc(2680);
    call {:si_unique_call 2657} Tmp_2268 := __HAVOC_malloc(4);
    call {:si_unique_call 2658} Tmp_2274 := __HAVOC_malloc(2680);
    call {:si_unique_call 2659} Tmp_2276 := __HAVOC_malloc(2680);
    call {:si_unique_call 2660} Tmp_2287 := __HAVOC_malloc(2680);
    call {:si_unique_call 2661} Tmp_2290 := __HAVOC_malloc(4);
    call {:si_unique_call 2662} Tmp_2292 := __HAVOC_malloc(2680);
    call {:si_unique_call 2663} Tmp_2293 := __HAVOC_malloc(4);
    call {:si_unique_call 2664} Tmp_2295 := __HAVOC_malloc(2680);
    call {:si_unique_call 2665} Tmp_2297 := __HAVOC_malloc(2680);
    call {:si_unique_call 2666} Tmp_2299 := __HAVOC_malloc(2680);
    call {:si_unique_call 2667} Tmp_2301 := __HAVOC_malloc(2680);
    call {:si_unique_call 2668} Tmp_2304 := __HAVOC_malloc(2680);
    call {:si_unique_call 2669} Tmp_2310 := __HAVOC_malloc(2680);
    call {:si_unique_call 2670} Tmp_2315 := __HAVOC_malloc(2680);
    call {:si_unique_call 2671} Tmp_2319 := __HAVOC_malloc(4);
    call {:si_unique_call 2672} Tmp_2320 := __HAVOC_malloc(2680);
    call {:si_unique_call 2673} Tmp_2322 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_47 != 0;
    assume DeviceObject_47 > 0;
    havoc pdoExtension_21;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    havoc Tmp_2234;
    assume {:nonnull} Tmp_2234 != 0;
    assume Tmp_2234 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2234], 1) != 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    Tmp_2298 := FreeLists;
    havoc Tmp_2209;
    havoc Tmp_2321;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_308;
    call {:si_unique_call 2674} WPP_SF_qDd(Tmp_2321, 31, Tmp_2209, pdoExtension_21, vslice_dummy_var_308, Tmp_2298);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2230;
    assume {:nonnull} Tmp_2230 != 0;
    assume Tmp_2230 > 0;
    havoc fdoExtension_13;
    Tmp_2312 := FreeLists;
    call {:si_unique_call 2675} Sbp2AddLog(pdoExtension_21, 1, -1016304048, Tmp_2312, fdoExtension_13);
    i_7 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2676} Tmp_2211, i_7, Tmp_2282, Tmp_2292, Tmp_2297 := Sbp2CleanDeviceExtension#1_loop_L33(Tmp_2211, i_7, Tmp_2282, Tmp_2292, Tmp_2297, fdoExtension_13, DeviceObject_47);
    goto L33_last;

  L33_last:
    Tmp_2282 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2297;
    assume {:nonnull} Tmp_2297 != 0;
    assume Tmp_2297 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    Tmp_2211 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2292;
    assume {:nonnull} Tmp_2292 != 0;
    assume Tmp_2292 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    valid := 1;
    goto L34;

  L34:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    call {:si_unique_call 2677} vslice_dummy_var_441 := KeCancelTimer(0);
    call {:si_unique_call 2678} CleanupOrbList#0(pdoExtension_21, -1073741248);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2679} FreeAddressRange#1(pdoExtension_21, DummyContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} yogi_error != 1;
    goto L50;

  L50:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} FreeLists != 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2213], 1) != 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    Tmp_2252 := OnRemove;
    Tmp_2245 := FreeLists;
    havoc Tmp_2265;
    havoc Tmp_2270;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_309;
    call {:si_unique_call 2680} WPP_SF_qDdd(Tmp_2270, 32, Tmp_2265, pdoExtension_21, vslice_dummy_var_309, Tmp_2245, Tmp_2252);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2681} FreeAddressRange#1(pdoExtension_21, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2682} FreeAddressRange#1(pdoExtension_21, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2683} FreeAddressRange#1(pdoExtension_21, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2684} sdv_742 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_742;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} irp_10 != 0;
    assume irp_10 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2685} vslice_dummy_var_444 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), irp_10);
    call {:si_unique_call 2686} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2687} sdv_735 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_735;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} irp_10 != 0;
    assume irp_10 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2688} vslice_dummy_var_445 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), irp_10);
    call {:si_unique_call 2689} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2690} sdv_736 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_736;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} irp_10 != 0;
    assume irp_10 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2691} vslice_dummy_var_446 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), irp_10);
    call {:si_unique_call 2692} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    call {:si_unique_call 2693} vslice_dummy_var_442 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2694} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_2232;
    assume {:nonnull} Tmp_2232 != 0;
    assume Tmp_2232 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2232], 1) != 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2225;
    havoc Tmp_2317;
    call {:si_unique_call 2695} WPP_SF_q(Tmp_2317, 33, Tmp_2225, pdoExtension_21);
    goto L240;

  L240:
    Tmp_2198 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon185_Then:
    goto L240;

  anon225_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2232], 1) == 0;
    goto L240;

  anon184_Then:
    goto L240;

  anon173_Then:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    havoc Tmp_2293;
    assume {:nonnull} Tmp_2293 != 0;
    assume Tmp_2293 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2293], 1) != 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    havoc Tmp_2318;
    havoc Tmp_2291;
    call {:si_unique_call 2696} WPP_SF_q(Tmp_2291, 34, Tmp_2318, pdoExtension_21);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2697} FreeAddressRange#1(pdoExtension_21, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_21));
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    i_7 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2698} i_7, context_2 := Sbp2CleanDeviceExtension#1_loop_L147(pdoExtension_21, i_7, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} 8 > i_7;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2699} FreeAddressRange#1(pdoExtension_21, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    i_7 := i_7 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon218_Then:
    goto L154;

  anon177_Then:
    assume {:partition} i_7 >= 8;
    call {:si_unique_call 2700} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2701} sdv_739 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_739;
    goto L167;

  L167:
    call {:si_unique_call 2702} Tmp_2203, sdv_734, statusFifoElement, Tmp_2268, Tmp_2308 := Sbp2CleanDeviceExtension#1_loop_L167(Tmp_2203, pdoExtension_21, sdv_734, statusFifoElement, Tmp_2268, Tmp_2308);
    goto L167_last;

  L167_last:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc Tmp_2268;
    assume {:nonnull} Tmp_2268 != 0;
    assume Tmp_2268 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2268], 1) != 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_2308;
    havoc Tmp_2203;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_310;
    call {:si_unique_call 2703} WPP_SF_qqq(Tmp_2203, 35, Tmp_2308, pdoExtension_21, statusFifoElement, vslice_dummy_var_310);
    goto L175;

  L175:
    call {:si_unique_call 2704} IoFreeMdl(0);
    call {:si_unique_call 2705} sdv_734 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_734;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2268], 1) == 0;
    goto L175;

  anon179_Then:
    goto L175;

  anon178_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2706} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2707} sdv_732 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_732;
    goto L191;

  L191:
    call {:si_unique_call 2708} sdv_733, Tmp_2302, packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(sdv_733, Tmp_2302, packet_13);
    goto L191_last;

  L191_last:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2709} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_2302;
    assume {:nonnull} Tmp_2302 != 0;
    assume Tmp_2302 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 2710} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2711} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2712} sdv_733 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_733;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon221_Then:
    goto L199;

  anon181_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2713} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2714} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    call {:si_unique_call 2715} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2716} sdv_KeReleaseSpinLock(0, cIrql_11);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2717} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2253;
    assume {:nonnull} Tmp_2253 != 0;
    assume Tmp_2253 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2288;
    assume {:nonnull} Tmp_2288 != 0;
    assume Tmp_2288 > 0;
    call {:si_unique_call 2718} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2241;
    assume {:nonnull} Tmp_2241 != 0;
    assume Tmp_2241 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2251;
    assume {:nonnull} Tmp_2251 != 0;
    assume Tmp_2251 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2305;
    assume {:nonnull} Tmp_2305 != 0;
    assume Tmp_2305 > 0;
    call {:si_unique_call 2719} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2239;
    assume {:nonnull} Tmp_2239 != 0;
    assume Tmp_2239 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2258;
    assume {:nonnull} Tmp_2258 != 0;
    assume Tmp_2258 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2300;
    assume {:nonnull} Tmp_2300 != 0;
    assume Tmp_2300 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2224;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    call {:si_unique_call 2720} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2205;
    assume {:nonnull} Tmp_2205 != 0;
    assume Tmp_2205 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2294;
    assume {:nonnull} Tmp_2294 != 0;
    assume Tmp_2294 > 0;
    goto L54;

  L54:
    Tmp_2198 := 1;
    goto L1;

  anon224_Then:
    goto L54;

  anon223_Then:
    goto L228;

  anon222_Then:
    goto L222;

  anon183_Then:
    goto L54;

  anon182_Then:
    goto L216;

  anon176_Then:
    goto L160;

  anon217_Then:
    goto L145;

  anon216_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L132;

  anon215_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2293], 1) == 0;
    goto L132;

  anon174_Then:
    goto L132;

  anon172_Then:
    goto L116;

  anon214_Then:
    assume {:partition} irp_10 == 0;
    goto L108;

  anon213_Then:
    assume {:partition} irp_10 == 0;
    goto L96;

  anon212_Then:
    assume {:partition} irp_10 == 0;
    goto L84;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon210_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    goto L54;

  anon171_Then:
    goto L60;

  anon208_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2213], 1) == 0;
    goto L60;

  anon169_Then:
    goto L60;

  anon168_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon207_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    goto L50;

  anon206_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon166_Then:
    goto L43;

  anon165_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_311;
    call {:si_unique_call 2721} Sbp2AddLog(pdoExtension_21, 1, -1016304078, vslice_dummy_var_311, 0);
    Tmp_2198 := 0;
    goto L1;

  anon205_Then:
    i_7 := i_7 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    assume false;
    return;

  anon204_Then:
    goto L34;

  anon164_Then:
    goto L19;

  anon203_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2234], 1) == 0;
    goto L19;

  anon163_Then:
    goto L19;

  anon202_Then:
    assume {:nonnull} DeviceObject_47 != 0;
    assume DeviceObject_47 > 0;
    havoc fdoExtension_13;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    Tmp_2198 := 0;
    goto L1;

  anon226_Then:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    call {:si_unique_call 2722} status_69 := Sbp2EnableBusResetNotification#1(fdoExtension_13, 0);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} status_69 < 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    havoc Tmp_2263;
    assume {:nonnull} Tmp_2263 != 0;
    assume Tmp_2263 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2263], 1) != 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2303;
    havoc Tmp_2313;
    call {:si_unique_call 2723} WPP_SF_qD(Tmp_2313, 36, Tmp_2303, fdoExtension_13, status_69);
    goto L253;

  L253:
    call {:si_unique_call 2724} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2725} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    goto L273;

  L273:
    call {:si_unique_call 2726} Tmp_2199, Tmp_2200, Tmp_2202, Tmp_2204, Tmp_2206, Tmp_2207, pdoExtension_21, Tmp_2212, Tmp_2214, Tmp_2215, Tmp_2216, Tmp_2217, Tmp_2218, Tmp_2219, Tmp_2221, Tmp_2222, Tmp_2223, Tmp_2226, Tmp_2227, Tmp_2228, Tmp_2229, Tmp_2231, Tmp_2233, Tmp_2235, Tmp_2236, Tmp_2237, Tmp_2238, Tmp_2240, sdv_738, Tmp_2242, Tmp_2243, Tmp_2244, Tmp_2246, Tmp_2247, Tmp_2248, Tmp_2249, status_68, Tmp_2254, Tmp_2255, Tmp_2256, Tmp_2257, Tmp_2259, Tmp_2260, Tmp_2261, i_7, Tmp_2262, Tmp_2264, Tmp_2266, Tmp_2267, Tmp_2269, Tmp_2272, Tmp_2274, Tmp_2275, Tmp_2276, Tmp_2277, Tmp_2280, Tmp_2281, Tmp_2283, Tmp_2284, Tmp_2286, Tmp_2287, Tmp_2289, Tmp_2290, Tmp_2295, Tmp_2296, sdv_743, Tmp_2299, Tmp_2301, Tmp_2304, Tmp_2306, Tmp_2307, Tmp_2309, cIrql_11, Tmp_2310, Tmp_2314, Tmp_2315, Tmp_2316, Tmp_2319, Tmp_2320, Tmp_2322, DeviceObject_47, vslice_dummy_var_443, vslice_dummy_var_447, vslice_dummy_var_448 := Sbp2CleanDeviceExtension#1_loop_L273(Tmp_2199, Tmp_2200, Tmp_2202, Tmp_2204, Tmp_2206, Tmp_2207, pdoExtension_21, Tmp_2212, Tmp_2214, Tmp_2215, Tmp_2216, Tmp_2217, Tmp_2218, Tmp_2219, Tmp_2221, Tmp_2222, Tmp_2223, Tmp_2226, Tmp_2227, Tmp_2228, Tmp_2229, Tmp_2231, Tmp_2233, Tmp_2235, Tmp_2236, Tmp_2237, Tmp_2238, Tmp_2240, sdv_738, Tmp_2242, Tmp_2243, Tmp_2244, Tmp_2246, Tmp_2247, Tmp_2248, Tmp_2249, status_68, Tmp_2254, Tmp_2255, Tmp_2256, Tmp_2257, Tmp_2259, Tmp_2260, Tmp_2261, i_7, Tmp_2262, Tmp_2264, Tmp_2266, Tmp_2267, Tmp_2269, Tmp_2272, Tmp_2274, Tmp_2275, Tmp_2276, Tmp_2277, Tmp_2280, Tmp_2281, Tmp_2283, Tmp_2284, Tmp_2286, Tmp_2287, Tmp_2289, Tmp_2290, Tmp_2295, Tmp_2296, sdv_743, fdoExtension_13, Tmp_2299, Tmp_2301, Tmp_2304, Tmp_2306, Tmp_2307, Tmp_2309, cIrql_11, Tmp_2310, Tmp_2314, Tmp_2315, Tmp_2316, Tmp_2319, Tmp_2320, Tmp_2322, DeviceObject_47, vslice_dummy_var_443, vslice_dummy_var_447, vslice_dummy_var_448);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc i_7;
    Tmp_2246 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2215;
    assume {:nonnull} Tmp_2215 != 0;
    assume Tmp_2215 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    Tmp_2199 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2231;
    assume {:nonnull} Tmp_2231 != 0;
    assume Tmp_2231 > 0;
    havoc Tmp_2222;
    assume {:nonnull} Tmp_2222 != 0;
    assume Tmp_2222 > 0;
    havoc pdoExtension_21;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    Tmp_2281 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2264;
    assume {:nonnull} Tmp_2264 != 0;
    assume Tmp_2264 > 0;
    havoc DeviceObject_47;
    Tmp_2272 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2310;
    assume {:nonnull} Tmp_2310 != 0;
    assume Tmp_2310 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    Tmp_2261 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2295;
    assume {:nonnull} Tmp_2295 != 0;
    assume Tmp_2295 > 0;
    call {:si_unique_call 2727} sdv_ExFreePool(0);
    Tmp_2256 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2274;
    assume {:nonnull} Tmp_2274 != 0;
    assume Tmp_2274 > 0;
    Tmp_2200 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2320;
    assume {:nonnull} Tmp_2320 != 0;
    assume Tmp_2320 > 0;
    goto L283;

  L283:
    Tmp_2280 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2237;
    assume {:nonnull} Tmp_2237 != 0;
    assume Tmp_2237 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    Tmp_2228 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2322;
    assume {:nonnull} Tmp_2322 != 0;
    assume Tmp_2322 > 0;
    call {:si_unique_call 2728} sdv_ExFreePool(0);
    Tmp_2307 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2276;
    assume {:nonnull} Tmp_2276 != 0;
    assume Tmp_2276 > 0;
    Tmp_2286 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2315;
    assume {:nonnull} Tmp_2315 != 0;
    assume Tmp_2315 > 0;
    goto L290;

  L290:
    Tmp_2223 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2233;
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    Tmp_2296 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2247;
    assume {:nonnull} Tmp_2247 != 0;
    assume Tmp_2247 > 0;
    call {:si_unique_call 2729} sdv_ExFreePool(0);
    Tmp_2259 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2218;
    assume {:nonnull} Tmp_2218 != 0;
    assume Tmp_2218 > 0;
    Tmp_2283 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2206;
    assume {:nonnull} Tmp_2206 != 0;
    assume Tmp_2206 > 0;
    goto L297;

  L297:
    Tmp_2266 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2221;
    assume {:nonnull} Tmp_2221 != 0;
    assume Tmp_2221 > 0;
    call {:si_unique_call 2730} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2731} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 2732} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_2240;
    assume {:nonnull} Tmp_2240 != 0;
    assume Tmp_2240 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2240], 1) != 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2249;
    havoc Tmp_2235;
    call {:si_unique_call 2733} WPP_SF_q(Tmp_2235, 37, Tmp_2249, pdoExtension_21);
    goto L317;

  L317:
    call {:si_unique_call 2734} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2735} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2240], 1) == 0;
    goto L317;

  anon191_Then:
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon230_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    Tmp_2207 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2255;
    assume {:nonnull} Tmp_2255 != 0;
    assume Tmp_2255 > 0;
    havoc DeviceObject_47;
    call {:si_unique_call 2736} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2737} sdv_743 := Sbp2CleanDeviceExtension#0(DeviceObject_47, 1, 0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} sdv_743 != 0;
    call {:si_unique_call 2738} status_68 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} status_68 < 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    havoc Tmp_2290;
    assume {:nonnull} Tmp_2290 != 0;
    assume Tmp_2290 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2290], 1) != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_2275;
    havoc Tmp_2316;
    call {:si_unique_call 2739} WPP_SF_qD(Tmp_2316, 38, Tmp_2275, DeviceObject_47, status_68);
    goto L348;

  L348:
    call {:si_unique_call 2740} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2741} sdv_KeRaiseIrql(2, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    call {:si_unique_call 2742} Sbp2StartNextPacketByKey#1(DeviceObject_47, 0);
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2743} sdv_KeLowerIrql(cIrql_11);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    havoc Tmp_2262;
    assume {:nonnull} Tmp_2262 != 0;
    assume Tmp_2262 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2262], 1) != 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_2242;
    havoc Tmp_2204;
    call {:si_unique_call 2744} WPP_SF_qq(Tmp_2204, 39, Tmp_2242, pdoExtension_21, DeviceObject_47);
    goto L361;

  L361:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2745} vslice_dummy_var_447 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_21), 0, 0);
    call {:si_unique_call 2746} vslice_dummy_var_443 := KeCancelTimer(0);
    call {:si_unique_call 2747} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto L379;

  L379:
    call {:si_unique_call 2748} sdv_738, vslice_dummy_var_448 := Sbp2CleanDeviceExtension#1_loop_L379(pdoExtension_21, sdv_738, vslice_dummy_var_448);
    goto L379_last;

  L379_last:
    call {:si_unique_call 2765} sdv_738 := sdv_IsListEmpty(0);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} sdv_738 == 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 2749} vslice_dummy_var_448 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2750} sdv_ExFreePool(0);
    goto anon197_Else_dummy;

  anon197_Else_dummy:
    assume false;
    return;

  anon197_Then:
    assume {:partition} sdv_738 != 0;
    call {:si_unique_call 2751} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2752} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    Tmp_2269 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2299;
    assume {:nonnull} Tmp_2299 != 0;
    assume Tmp_2299 > 0;
    call {:si_unique_call 2753} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2754} IoDeleteDevice(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    havoc Tmp_2319;
    assume {:nonnull} Tmp_2319 != 0;
    assume Tmp_2319 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2319], 1) != 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    havoc Tmp_2238;
    havoc Tmp_2277;
    call {:si_unique_call 2755} WPP_SF_q(Tmp_2277, 40, Tmp_2238, pdoExtension_21);
    goto L398;

  L398:
    call {:si_unique_call 2756} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2757} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    goto L277;

  L277:
    Tmp_2244 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2217;
    assume {:nonnull} Tmp_2217 != 0;
    assume Tmp_2217 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    Tmp_2267 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2243;
    assume {:nonnull} Tmp_2243 != 0;
    assume Tmp_2243 > 0;
    call {:si_unique_call 2758} sdv_ExFreePool(0);
    Tmp_2212 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2219;
    assume {:nonnull} Tmp_2219 != 0;
    assume Tmp_2219 > 0;
    Tmp_2254 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2301;
    assume {:nonnull} Tmp_2301 != 0;
    assume Tmp_2301 > 0;
    goto L423;

  L423:
    Tmp_2314 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2248;
    assume {:nonnull} Tmp_2248 != 0;
    assume Tmp_2248 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    Tmp_2229 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2304;
    assume {:nonnull} Tmp_2304 != 0;
    assume Tmp_2304 > 0;
    call {:si_unique_call 2759} sdv_ExFreePool(0);
    Tmp_2227 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2257;
    assume {:nonnull} Tmp_2257 != 0;
    assume Tmp_2257 > 0;
    Tmp_2284 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2236;
    assume {:nonnull} Tmp_2236 != 0;
    assume Tmp_2236 > 0;
    goto L430;

  L430:
    Tmp_2289 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2226;
    assume {:nonnull} Tmp_2226 != 0;
    assume Tmp_2226 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    Tmp_2216 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2287;
    assume {:nonnull} Tmp_2287 != 0;
    assume Tmp_2287 > 0;
    call {:si_unique_call 2760} sdv_ExFreePool(0);
    Tmp_2306 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2214;
    assume {:nonnull} Tmp_2214 != 0;
    assume Tmp_2214 > 0;
    Tmp_2309 := i_7;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2202;
    assume {:nonnull} Tmp_2202 != 0;
    assume Tmp_2202 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;

  anon199_Then:
    goto L398;

  anon238_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2319], 1) == 0;
    goto L398;

  anon198_Then:
    goto L398;

  anon196_Then:
    goto L361;

  anon237_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2262], 1) == 0;
    goto L361;

  anon195_Then:
    goto L361;

  anon236_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    goto L348;

  anon242_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2290], 1) == 0;
    goto L348;

  anon200_Then:
    goto L348;

  anon194_Then:
    assume {:partition} 0 <= status_68;
    goto L348;

  anon193_Then:
    assume {:partition} sdv_743 == 0;
    call {:si_unique_call 2761} Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    Mem_T.INT4[Tmp_2260] := cIrql_11;
    call {:si_unique_call 2762} sdv_KeAcquireSpinLock(0, Tmp_2260);
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    cIrql_11 := Mem_T.INT4[Tmp_2260];
    goto L277;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon229_Then:
    goto L277;

  anon189_Then:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_312;
    call {:si_unique_call 2763} DeAllocateIrpAndIrb(fdoExtension_13, vslice_dummy_var_312);
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2764} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto L54;

  anon190_Then:
    goto L443;

  anon188_Then:
    goto L253;

  anon243_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2263], 1) == 0;
    goto L253;

  anon187_Then:
    goto L253;

  anon186_Then:
    assume {:partition} 0 <= status_69;
    goto L253;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_47: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2198: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_14: int)
{
  var {:pointer} Tmp_1453: int;
  var {:pointer} Tmp_1455: int;
  var {:scalar} Tmp_1456: int;
  var {:scalar} sdv_499: int;
  var {:pointer} Tmp_1457: int;
  var {:pointer} Tmp_1458: int;
  var {:pointer} Tmp_1459: int;
  var {:pointer} Tmp_1460: int;
  var {:scalar} sdv_500: int;
  var {:pointer} Tmp_1461: int;
  var {:pointer} Tmp_1462: int;
  var {:pointer} Tmp_1463: int;
  var {:pointer} Tmp_1464: int;
  var {:pointer} Tmp_1465: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1466: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_40: int;
  var {:pointer} Tmp_1467: int;
  var {:pointer} Tmp_1468: int;
  var {:scalar} Tmp_1469: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_14: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;

  anon0:
    call {:si_unique_call 2766} vslice_dummy_var_449 := __HAVOC_malloc(4);
    call {:si_unique_call 2767} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_14 := actual_Context_14;
    call {:si_unique_call 2768} Tmp_1455 := __HAVOC_malloc(4);
    call {:si_unique_call 2769} Tmp_1463 := __HAVOC_malloc(4);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 2770} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 2771} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_14);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1458;
    assume {:nonnull} Tmp_1458 != 0;
    assume Tmp_1458 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1467;
    assume {:nonnull} Tmp_1467 != 0;
    assume Tmp_1467 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1464;
    assume {:nonnull} Tmp_1464 != 0;
    assume Tmp_1464 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1466;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1466 != 0;
    assume Tmp_1466 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1460;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1460 != 0;
    assume Tmp_1460 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Context_14 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1465;
    assume {:nonnull} Tmp_1465 != 0;
    assume Tmp_1465 > 0;
    call {:si_unique_call 2772} sdv_500 := sdv_KeGetCurrentIrql();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_500 >= 2;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2773} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_40);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_40 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1463;
    assume {:nonnull} Tmp_1463 != 0;
    assume Tmp_1463 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1463], 1) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1459;
    havoc Tmp_1469;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc vslice_dummy_var_313;
    call {:si_unique_call 2774} WPP_SF_qD(Tmp_1469, 13, Tmp_1459, vslice_dummy_var_313, status_40);
    goto L49;

  L49:
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 2775} IoFreeMdl(0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_314;
    call {:si_unique_call 2776} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_314);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon49_Then:
    goto L51;

  anon43_Then:
    goto L49;

  anon51_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1463], 1) == 0;
    goto L49;

  anon42_Then:
    goto L49;

  anon41_Then:
    assume {:partition} 0 <= status_40;
    goto L49;

  anon40_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume false;
    return;

  anon39_Then:
    assume {:partition} 2 > sdv_500;
    goto L32;

  anon38_Then:
    assume {:partition} Context_14 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2777} sdv_499 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1462;
    assume {:nonnull} Tmp_1462 != 0;
    assume Tmp_1462 > 0;
    havoc Tmp_1468;
    assume {:nonnull} Tmp_1468 != 0;
    assume Tmp_1468 > 0;
    goto L27;

  anon47_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Context_14 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1461;
    assume {:nonnull} Tmp_1461 != 0;
    assume Tmp_1461 > 0;
    havoc Tmp_1457;
    assume {:nonnull} Tmp_1457 != 0;
    assume Tmp_1457 > 0;
    goto L27;

  anon37_Then:
    assume {:partition} Context_14 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon36_Then:
    goto L1;

  anon35_Then:
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_14: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_14: int)
{
  var {:pointer} Tmp_1453: int;
  var {:pointer} Tmp_1455: int;
  var {:scalar} Tmp_1456: int;
  var {:scalar} sdv_499: int;
  var {:pointer} Tmp_1457: int;
  var {:pointer} Tmp_1458: int;
  var {:pointer} Tmp_1459: int;
  var {:pointer} Tmp_1460: int;
  var {:scalar} sdv_500: int;
  var {:pointer} Tmp_1461: int;
  var {:pointer} Tmp_1462: int;
  var {:pointer} Tmp_1463: int;
  var {:pointer} Tmp_1464: int;
  var {:pointer} Tmp_1465: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1466: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_40: int;
  var {:pointer} Tmp_1467: int;
  var {:pointer} Tmp_1468: int;
  var {:scalar} Tmp_1469: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_14: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;

  anon0:
    call {:si_unique_call 2778} vslice_dummy_var_450 := __HAVOC_malloc(4);
    call {:si_unique_call 2779} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_14 := actual_Context_14;
    call {:si_unique_call 2780} Tmp_1455 := __HAVOC_malloc(4);
    call {:si_unique_call 2781} Tmp_1463 := __HAVOC_malloc(4);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 2782} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 2783} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_14);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1458;
    assume {:nonnull} Tmp_1458 != 0;
    assume Tmp_1458 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1467;
    assume {:nonnull} Tmp_1467 != 0;
    assume Tmp_1467 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1464;
    assume {:nonnull} Tmp_1464 != 0;
    assume Tmp_1464 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1466;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1466 != 0;
    assume Tmp_1466 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1460;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1460 != 0;
    assume Tmp_1460 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Context_14 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1465;
    assume {:nonnull} Tmp_1465 != 0;
    assume Tmp_1465 > 0;
    call {:si_unique_call 2784} sdv_500 := sdv_KeGetCurrentIrql();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_500 >= 2;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2785} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_40);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_40 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1463;
    assume {:nonnull} Tmp_1463 != 0;
    assume Tmp_1463 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1463], 1) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1459;
    havoc Tmp_1469;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc vslice_dummy_var_315;
    call {:si_unique_call 2786} WPP_SF_qD(Tmp_1469, 13, Tmp_1459, vslice_dummy_var_315, status_40);
    goto L49;

  L49:
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 2787} IoFreeMdl(0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_316;
    call {:si_unique_call 2788} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_316);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon49_Then:
    goto L51;

  anon43_Then:
    goto L49;

  anon51_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1463], 1) == 0;
    goto L49;

  anon42_Then:
    goto L49;

  anon41_Then:
    assume {:partition} 0 <= status_40;
    goto L49;

  anon40_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_317;
    call {:si_unique_call 2789} status_40 := Sbp2SendRequest#0(DeviceExtension_7, vslice_dummy_var_317, 2);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2790} Sbp2AddLog(DeviceExtension_7, 32, -968797646, DeviceExtension_7, status_40);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_40 < 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_1455;
    assume {:nonnull} Tmp_1455 != 0;
    assume Tmp_1455 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1455], 1) != 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_1453;
    havoc Tmp_1456;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    havoc vslice_dummy_var_318;
    call {:si_unique_call 2791} WPP_SF_qD(Tmp_1456, 14, Tmp_1453, vslice_dummy_var_318, status_40);
    goto L49;

  anon46_Then:
    goto L49;

  anon50_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1455], 1) == 0;
    goto L49;

  anon45_Then:
    goto L49;

  anon44_Then:
    assume {:partition} 0 <= status_40;
    goto L49;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    assume {:partition} 2 > sdv_500;
    goto L32;

  anon38_Then:
    assume {:partition} Context_14 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2792} sdv_499 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1462;
    assume {:nonnull} Tmp_1462 != 0;
    assume Tmp_1462 > 0;
    havoc Tmp_1468;
    assume {:nonnull} Tmp_1468 != 0;
    assume Tmp_1468 > 0;
    goto L27;

  anon47_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Context_14 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1461;
    assume {:nonnull} Tmp_1461 != 0;
    assume Tmp_1461 > 0;
    havoc Tmp_1457;
    assume {:nonnull} Tmp_1457 != 0;
    assume Tmp_1457 > 0;
    goto L27;

  anon37_Then:
    assume {:partition} Context_14 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon36_Then:
    goto L1;

  anon35_Then:
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_14: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2623: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2624: int;
  var {:pointer} Tmp_2625: int;
  var {:pointer} Tmp_2626: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2627: int;
  var {:pointer} Tmp_2628: int;
  var {:pointer} Tmp_2629: int;
  var {:pointer} Tmp_2631: int;
  var {:pointer} Tmp_2632: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;

  anon0:
    call {:si_unique_call 2793} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2794} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2795} vslice_dummy_var_453 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L22;

  L22:
    call {:si_unique_call 2796} vslice_dummy_var_451 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2623 := ntStatus_1;
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L20;

  L20:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2629;
    assume {:nonnull} Tmp_2629 != 0;
    assume Tmp_2629 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2632;
    assume {:nonnull} Tmp_2632 != 0;
    assume Tmp_2632 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2797} vslice_dummy_var_452 := Sbp2GetHostDDIVersion#0(FdoExtension_7);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2625;
    assume {:nonnull} Tmp_2625 != 0;
    assume Tmp_2625 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2626;
    assume {:nonnull} Tmp_2626 != 0;
    assume Tmp_2626 > 0;
    goto L36;

  L36:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2627;
    assume {:nonnull} Tmp_2627 != 0;
    assume Tmp_2627 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    assume false;
    return;

  anon29_Then:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2624;
    assume {:nonnull} Tmp_2624 != 0;
    assume Tmp_2624 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2628;
    assume {:nonnull} Tmp_2628 != 0;
    assume Tmp_2628 > 0;
    goto L36;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2631;
    assume {:nonnull} Tmp_2631 != 0;
    assume Tmp_2631 > 0;
    goto L37;

  anon27_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon28_Then:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L22;

  anon39_Then:
    goto L20;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    call {:si_unique_call 2798} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon32_Then:
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2623: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2623: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2624: int;
  var {:pointer} Tmp_2625: int;
  var {:pointer} Tmp_2626: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2627: int;
  var {:pointer} Tmp_2628: int;
  var {:pointer} Tmp_2629: int;
  var {:pointer} Tmp_2631: int;
  var {:pointer} Tmp_2632: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_319: int;

  anon0:
    call {:si_unique_call 2799} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2800} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2801} vslice_dummy_var_456 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L22;

  L22:
    call {:si_unique_call 2802} vslice_dummy_var_454 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2623 := ntStatus_1;
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L20;

  L20:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2629;
    assume {:nonnull} Tmp_2629 != 0;
    assume Tmp_2629 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2632;
    assume {:nonnull} Tmp_2632 != 0;
    assume Tmp_2632 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2803} vslice_dummy_var_455 := Sbp2GetHostDDIVersion#1(FdoExtension_7);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2625;
    assume {:nonnull} Tmp_2625 != 0;
    assume Tmp_2625 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2626;
    assume {:nonnull} Tmp_2626 != 0;
    assume Tmp_2626 > 0;
    goto L36;

  L36:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2627;
    assume {:nonnull} Tmp_2627 != 0;
    assume Tmp_2627 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc vslice_dummy_var_319;
    call {:si_unique_call 2804} ntStatus_1 := Sbp2SendRequest#0(FdoExtension_7, vslice_dummy_var_319, 2);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_1 < 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L22;

  anon31_Then:
    assume {:partition} Enable == 0;
    goto L22;

  anon30_Then:
    assume {:partition} 0 <= ntStatus_1;
    goto L22;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2624;
    assume {:nonnull} Tmp_2624 != 0;
    assume Tmp_2624 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2628;
    assume {:nonnull} Tmp_2628 != 0;
    assume Tmp_2628 > 0;
    goto L36;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2631;
    assume {:nonnull} Tmp_2631 != 0;
    assume Tmp_2631 > 0;
    goto L37;

  anon27_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon28_Then:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L22;

  anon39_Then:
    goto L20;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    call {:si_unique_call 2805} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon32_Then:
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2623: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2466: int)
{
  var {:pointer} Tmp_2467: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2468: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2470: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2471: int;
  var {:pointer} FdoExtension_5: int;

  anon0:
    call {:si_unique_call 2806} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2807} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2808} sdv_do_paged_code_check();
    call {:si_unique_call 2809} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2471;
    assume {:nonnull} Tmp_2471 != 0;
    assume Tmp_2471 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2467;
    assume {:nonnull} Tmp_2467 != 0;
    assume Tmp_2467 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2468;
    assume {:nonnull} Tmp_2468 != 0;
    assume Tmp_2468 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2470;
    assume {:nonnull} Tmp_2470 != 0;
    assume Tmp_2470 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    assume false;
    return;

  anon7_Then:
    Tmp_2466 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2466: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2466 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2466: int)
{
  var {:pointer} Tmp_2467: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2468: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2470: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2471: int;
  var {:pointer} FdoExtension_5: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;

  anon0:
    call {:si_unique_call 2810} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2811} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2812} sdv_do_paged_code_check();
    call {:si_unique_call 2813} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2471;
    assume {:nonnull} Tmp_2471 != 0;
    assume Tmp_2471 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2467;
    assume {:nonnull} Tmp_2467 != 0;
    assume Tmp_2467 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2468;
    assume {:nonnull} Tmp_2468 != 0;
    assume Tmp_2468 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2470;
    assume {:nonnull} Tmp_2470 != 0;
    assume Tmp_2470 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_320;
    call {:si_unique_call 2814} ntStatus := Sbp2SendRequest#0(FdoExtension_5, vslice_dummy_var_320, 2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    goto L31;

  L31:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_321;
    call {:si_unique_call 2815} DeAllocateIrpAndIrb(FdoExtension_5, vslice_dummy_var_321);
    Tmp_2466 := ntStatus;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} 0 > ntStatus;
    ntStatus := 0;
    goto L31;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    Tmp_2466 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2466: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_25: int, actual_Key: int)
{
  var {:pointer} Tmp_1293: int;
  var {:scalar} sdv_433: int;
  var {:scalar} sdv_435: int;
  var {:pointer} sdv_436: int;
  var {:pointer} irp_3: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_25: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;

  anon0:
    call {:si_unique_call 2816} vslice_dummy_var_457 := __HAVOC_malloc(4);
    DeviceObject_25 := actual_DeviceObject_25;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc deviceExtension;
    call {:si_unique_call 2817} Tmp_1293 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_322;
    Mem_T.INT4[Tmp_1293] := vslice_dummy_var_322;
    call {:si_unique_call 2818} sdv_433 := sdv_InterlockedIncrement(Tmp_1293);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_433 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2819} Tmp_1293, sdv_435, sdv_436, irp_3, packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(Tmp_1293, sdv_435, sdv_436, irp_3, packet_7, deviceExtension, DeviceObject_25, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    call {:si_unique_call 2824} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2820} sdv_436 := sdv_containing_record(packet_7, 64);
    irp_3 := sdv_436;
    call {:si_unique_call 2821} Sbp2StartIo#0(DeviceObject_25, irp_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 2822} Tmp_1293 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_323;
    Mem_T.INT4[Tmp_1293] := vslice_dummy_var_323;
    call {:si_unique_call 2823} sdv_435 := sdv_InterlockedDecrement(Tmp_1293);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_435 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_435 == 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon9_Then:
    assume {:partition} sdv_433 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_25: int, actual_Key: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current) || sdv_irql_current == old(sdv_irql_previous_3) || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_4) || sdv_irql_previous == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_25: int, actual_Key: int)
{
  var {:pointer} Tmp_1293: int;
  var {:scalar} sdv_433: int;
  var {:scalar} sdv_435: int;
  var {:pointer} sdv_436: int;
  var {:pointer} irp_3: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_25: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;

  anon0:
    call {:si_unique_call 2825} vslice_dummy_var_458 := __HAVOC_malloc(4);
    DeviceObject_25 := actual_DeviceObject_25;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    havoc deviceExtension;
    call {:si_unique_call 2826} Tmp_1293 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_324;
    Mem_T.INT4[Tmp_1293] := vslice_dummy_var_324;
    call {:si_unique_call 2827} sdv_433 := sdv_InterlockedIncrement(Tmp_1293);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_433 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2828} Tmp_1293, sdv_435, sdv_436, irp_3, packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(Tmp_1293, sdv_435, sdv_436, irp_3, packet_7, deviceExtension, DeviceObject_25, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    call {:si_unique_call 2833} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_25), Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2829} sdv_436 := sdv_containing_record(packet_7, 64);
    irp_3 := sdv_436;
    call {:si_unique_call 2830} Sbp2StartIo#1(DeviceObject_25, irp_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 2831} Tmp_1293 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    havoc vslice_dummy_var_325;
    Mem_T.INT4[Tmp_1293] := vslice_dummy_var_325;
    call {:si_unique_call 2832} sdv_435 := sdv_InterlockedDecrement(Tmp_1293);
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_435 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_435 == 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon9_Then:
    assume {:partition} sdv_433 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_25: int, actual_Key: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_33: int, actual_Irp_20: int)
{
  var {:scalar} Tmp_1657: int;
  var {:pointer} Tmp_1658: int;
  var {:pointer} Tmp_1660: int;
  var {:pointer} Tmp_1661: int;
  var {:scalar} Tmp_1662: int;
  var {:scalar} sdv_542: int;
  var {:scalar} Tmp_1663: int;
  var {:pointer} Tmp_1664: int;
  var {:pointer} Tmp_1665: int;
  var {:scalar} Tmp_1666: int;
  var {:pointer} Tmp_1667: int;
  var {:pointer} Tmp_1668: int;
  var {:pointer} Tmp_1669: int;
  var {:pointer} Tmp_1670: int;
  var {:scalar} Tmp_1671: int;
  var {:scalar} sdv_544: int;
  var {:pointer} Tmp_1672: int;
  var {:pointer} sdv_545: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_548: int;
  var {:pointer} Tmp_1673: int;
  var {:scalar} sdv_549: int;
  var {:scalar} queued: int;
  var {:scalar} Tmp_1674: int;
  var {:pointer} sdv_550: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1675: int;
  var {:pointer} Tmp_1676: int;
  var {:pointer} deviceExtension_5: int;
  var {:scalar} Tmp_1677: int;
  var {:pointer} irpStack_13: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1678: int;
  var {:scalar} Tmp_1679: int;
  var {:pointer} Tmp_1680: int;
  var {:pointer} sdv_551: int;
  var {:scalar} Tmp_1681: int;
  var {:pointer} Tmp_1682: int;
  var {:pointer} Tmp_1684: int;
  var {:pointer} Tmp_1685: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1686: int;
  var {:pointer} Tmp_1687: int;
  var {:pointer} Tmp_1688: int;
  var {:scalar} sdv_553: int;
  var {:scalar} sdv_554: int;
  var {:scalar} Tmp_1689: int;
  var {:scalar} Tmp_1690: int;
  var {:pointer} Tmp_1691: int;
  var {:scalar} Tmp_1692: int;
  var {:pointer} Tmp_1693: int;
  var {:pointer} Tmp_1694: int;
  var {:pointer} sdv_555: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1695: int;
  var {:pointer} Tmp_1696: int;
  var {:pointer} Tmp_1697: int;
  var {:pointer} Tmp_1698: int;
  var {:scalar} Tmp_1699: int;
  var {:pointer} Tmp_1700: int;
  var {:pointer} Tmp_1701: int;
  var {:pointer} Tmp_1702: int;
  var {:scalar} Tmp_1703: int;
  var {:scalar} status_46: int;
  var {:pointer} entry_3: int;
  var {:pointer} Tmp_1704: int;
  var {:pointer} Tmp_1705: int;
  var {:scalar} sdv_556: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1706: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;

  anon0:
    call {:si_unique_call 2834} vslice_dummy_var_459 := __HAVOC_malloc(4);
    call {:si_unique_call 2835} context := __HAVOC_malloc(4);
    call {:si_unique_call 2836} state_1 := __HAVOC_malloc(8);
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 2837} Tmp_1660 := __HAVOC_malloc(4);
    call {:si_unique_call 2838} Tmp_1661 := __HAVOC_malloc(4);
    call {:si_unique_call 2839} Tmp_1665 := __HAVOC_malloc(4);
    call {:si_unique_call 2840} Tmp_1670 := __HAVOC_malloc(4);
    call {:si_unique_call 2841} Tmp_1672 := __HAVOC_malloc(4);
    call {:si_unique_call 2842} Tmp_1673 := __HAVOC_malloc(4);
    call {:si_unique_call 2843} Tmp_1682 := __HAVOC_malloc(4);
    call {:si_unique_call 2844} Tmp_1684 := __HAVOC_malloc(4);
    call {:si_unique_call 2845} Tmp_1687 := __HAVOC_malloc(4);
    call {:si_unique_call 2846} Tmp_1695 := __HAVOC_malloc(4);
    call {:si_unique_call 2847} Tmp_1700 := __HAVOC_malloc(4);
    call {:si_unique_call 2848} Tmp_1701 := __HAVOC_malloc(4);
    call {:si_unique_call 2849} Tmp_1702 := __HAVOC_malloc(4);
    call {:si_unique_call 2850} Tmp_1704 := __HAVOC_malloc(4);
    call {:si_unique_call 2851} Tmp_1705 := __HAVOC_malloc(4);
    call {:si_unique_call 2852} irpStack_13 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc deviceExtension_5;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2853} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2854} Sbp2AddLog(deviceExtension_5, 64, -747353745, Irp_20, srb_4);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    call {:si_unique_call 2855} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_46 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2856} sdv_IoCompleteRequest(0, 0);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    havoc Tmp_1665;
    assume {:nonnull} Tmp_1665 != 0;
    assume Tmp_1665 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1665], 1) != 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    havoc Tmp_1697;
    havoc Tmp_1689;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_326;
    call {:si_unique_call 2857} WPP_SF_qqD(Tmp_1689, 23, Tmp_1697, deviceExtension_5, Irp_20, vslice_dummy_var_326);
    goto L39;

  L39:
    assume false;
    return;

  anon164_Then:
    goto L39;

  anon215_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1665], 1) == 0;
    goto L39;

  anon163_Then:
    goto L39;

  anon161_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    call {:si_unique_call 2858} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    goto anon166_Then, anon166_Else;

  anon166_Else:
    havoc Tmp_1660;
    assume {:nonnull} Tmp_1660 != 0;
    assume Tmp_1660 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1660], 1) != 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    havoc Tmp_1680;
    havoc Tmp_1671;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_327;
    havoc vslice_dummy_var_328;
    call {:si_unique_call 2859} WPP_SF_qqqDD(Tmp_1671, 25, Tmp_1680, DeviceObject_33, Irp_20, srb_4, vslice_dummy_var_327, vslice_dummy_var_328);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L76;

  L76:
    call {:si_unique_call 2860} Create1394TransactionForSrb#0(deviceExtension_5, srb_4, context);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon218_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1698;
    assume {:nonnull} Tmp_1698 != 0;
    assume Tmp_1698 > 0;
    Mem_T.INT4[Tmp_1698] := 0;
    goto L76;

  anon169_Then:
    goto L76;

  anon168_Then:
    goto L67;

  anon217_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1660], 1) == 0;
    goto L67;

  anon166_Then:
    goto L67;

  anon165_Then:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2861} sdv_553 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} sdv_553 == 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    havoc Tmp_1705;
    assume {:nonnull} Tmp_1705 != 0;
    assume Tmp_1705 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1705], 32) != 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc Tmp_1696;
    havoc Tmp_1663;
    call {:si_unique_call 2862} WPP_SF_qq(Tmp_1663, 24, Tmp_1696, deviceExtension_5, Irp_20);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2863} vslice_dummy_var_463 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    call {:si_unique_call 2864} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon172_Then:
    goto L87;

  anon219_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1705], 32) == 0;
    goto L87;

  anon171_Then:
    goto L87;

  anon170_Then:
    assume {:partition} sdv_553 != 0;
    goto L1;

  anon162_Then:
    call {:si_unique_call 2865} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2866} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} queued == 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_1687;
    assume {:nonnull} Tmp_1687 != 0;
    assume Tmp_1687 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1687], 32) != 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_1667;
    havoc Tmp_1703;
    call {:si_unique_call 2867} WPP_SF_qq(Tmp_1703, 26, Tmp_1667, deviceExtension_5, Irp_20);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2868} sdv_545 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto L116;

  L116:
    goto anon177_Then, anon177_Else;

  anon177_Else:
    havoc Tmp_1661;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1661], 4) != 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    Tmp_1699 := queued;
    havoc Tmp_1688;
    havoc Tmp_1677;
    call {:si_unique_call 2869} WPP_SF_qDq(Tmp_1677, 27, Tmp_1688, deviceExtension_5, Tmp_1699, Irp_20);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    havoc Tmp_1672;
    assume {:nonnull} Tmp_1672 != 0;
    assume Tmp_1672 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1672], 4) != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1674;
    havoc Tmp_1706;
    havoc Tmp_1679;
    call {:si_unique_call 2870} WPP_SF_qd(Tmp_1679, 28, Tmp_1706, deviceExtension_5, Tmp_1674);
    goto L130;

  L130:
    call {:si_unique_call 2871} status_46 := PoRequestPowerIrp(0, 2, state_1, 0, 0, 0);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} status_46 < 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    havoc Tmp_1702;
    assume {:nonnull} Tmp_1702 != 0;
    assume Tmp_1702 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1702], 4) != 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    havoc Tmp_1669;
    havoc Tmp_1690;
    call {:si_unique_call 2872} WPP_SF_qD(Tmp_1690, 29, Tmp_1669, deviceExtension_5, status_46);
    goto L148;

  L148:
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2873} sdv_550 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), 0, Irp_20);
    deferredIrp_2 := sdv_550;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} deferredIrp_2 != Irp_20;
    Irp_20 := 0;
    goto L181;

  L181:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Irp_20 == 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    havoc Tmp_1670;
    assume {:nonnull} Tmp_1670 != 0;
    assume Tmp_1670 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1670], 1) != 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_1694;
    havoc Tmp_1662;
    call {:si_unique_call 2874} WPP_SF_q(Tmp_1662, 30, Tmp_1694, deviceExtension_5);
    goto L1;

  anon188_Then:
    goto L1;

  anon226_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1670], 1) == 0;
    goto L1;

  anon187_Then:
    goto L1;

  anon186_Then:
    assume {:partition} Irp_20 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2875} sdv_IoCompleteRequest(0, 0);
    assume false;
    return;

  anon227_Then:
    assume {:partition} deferredIrp_2 == Irp_20;
    goto L181;

  anon182_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_33);
    call {:si_unique_call 2876} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_3;
    goto L166;

  L166:
    call {:si_unique_call 2877} qIrp, sdv_555, entry_3 := Sbp2StartIo#0_loop_L166(qIrp, sdv_555, entry_3, Irp_20);
    goto L166_last;

  L166_last:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    call {:si_unique_call 2878} sdv_555 := sdv_containing_record(entry_3, 64);
    qIrp := sdv_555;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} qIrp == Irp_20;
    call {:si_unique_call 2879} vslice_dummy_var_461 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2880} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} qIrp != Irp_20;
    Irp_20 := 0;
    goto L181;

  anon185_Then:
    assume {:partition} qIrp == Irp_20;
    goto L181;

  anon224_Then:
    assume {:partition} qIrp != Irp_20;
    assume {:nonnull} entry_3 != 0;
    assume entry_3 > 0;
    havoc entry_3;
    goto anon224_Then_dummy;

  anon224_Then_dummy:
    assume false;
    return;

  anon184_Then:
    goto L167;

  anon183_Then:
    goto L148;

  anon223_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1702], 4) == 0;
    goto L148;

  anon181_Then:
    goto L148;

  anon180_Then:
    assume {:partition} 0 <= status_46;
    goto L1;

  anon179_Then:
    goto L130;

  anon222_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1672], 4) == 0;
    goto L130;

  anon221_Then:
    goto L130;

  anon178_Then:
    goto L117;

  anon220_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1661], 4) == 0;
    goto L117;

  anon177_Then:
    goto L117;

  anon190_Then:
    goto L215;

  anon228_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1687], 32) == 0;
    goto L215;

  anon189_Then:
    goto L215;

  anon176_Then:
    assume {:partition} queued != 0;
    goto L116;

  anon175_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 2881} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2882} sdv_544 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} sdv_544 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2883} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_1701;
    assume {:nonnull} Tmp_1701 != 0;
    assume Tmp_1701 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1701], 32) != 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_1658;
    havoc Tmp_1692;
    call {:si_unique_call 2884} WPP_SF_qq(Tmp_1692, 31, Tmp_1658, deviceExtension_5, Irp_20);
    goto L1;

  anon194_Then:
    goto L1;

  anon229_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1701], 32) == 0;
    goto L1;

  anon193_Then:
    goto L1;

  anon192_Then:
    assume {:partition} sdv_544 == 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2885} sdv_556 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} sdv_556 == 0;
    call {:si_unique_call 2886} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_1684;
    assume {:nonnull} Tmp_1684 != 0;
    assume Tmp_1684 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1684], 32) != 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_1676;
    havoc Tmp_1678;
    call {:si_unique_call 2887} WPP_SF_qq(Tmp_1678, 32, Tmp_1676, deviceExtension_5, Irp_20);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2888} vslice_dummy_var_464 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    call {:si_unique_call 2889} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon197_Then:
    goto L261;

  anon230_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1684], 32) == 0;
    goto L261;

  anon196_Then:
    goto L261;

  anon195_Then:
    assume {:partition} sdv_556 != 0;
    goto L238;

  anon174_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2890} sdv_554 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} sdv_554 == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2891} sdv_551 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon232_Then, anon232_Else;

  anon232_Else:
    havoc Tmp_1673;
    assume {:nonnull} Tmp_1673 != 0;
    assume Tmp_1673 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1673], 4) != 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    havoc Tmp_1668;
    havoc Tmp_1675;
    call {:si_unique_call 2892} WPP_SF_q(Tmp_1675, 33, Tmp_1668, Irp_20);
    goto L1;

  anon203_Then:
    goto L1;

  anon233_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1673], 4) == 0;
    goto L1;

  anon232_Then:
    goto L1;

  anon200_Then:
    assume {:partition} sdv_554 != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_1704;
    assume {:nonnull} Tmp_1704 != 0;
    assume Tmp_1704 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1704], 32) != 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_1691;
    havoc Tmp_1686;
    call {:si_unique_call 2893} WPP_SF_q(Tmp_1686, 34, Tmp_1691, Irp_20);
    goto L1;

  anon202_Then:
    goto L1;

  anon231_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1704], 32) == 0;
    goto L1;

  anon201_Then:
    goto L1;

  anon199_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto L279;

  anon198_Then:
    goto L67;

  anon191_Then:
    goto L277;

  anon173_Then:
    goto L103;

  anon159_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2894} sdv_548 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    oldIrp_1 := sdv_548;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    havoc Tmp_1682;
    assume {:nonnull} Tmp_1682 != 0;
    assume Tmp_1682 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1682], 1) != 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_1685;
    havoc Tmp_1657;
    call {:si_unique_call 2895} WPP_SF_qqq(Tmp_1657, 20, Tmp_1685, deviceExtension_5, Irp_20, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto L338;

  L338:
    call {:si_unique_call 2896} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon207_Then:
    call {:si_unique_call 2897} Sbp2SetDeferLoginTimer(deviceExtension_5);
    goto L338;

  anon208_Then:
    goto L327;

  anon235_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1682], 1) == 0;
    goto L327;

  anon234_Then:
    goto L327;

  anon206_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2898} sdv_542 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} sdv_542 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2899} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon210_Then, anon210_Else;

  anon210_Else:
    havoc Tmp_1700;
    assume {:nonnull} Tmp_1700 != 0;
    assume Tmp_1700 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1700], 1) != 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    havoc Tmp_1693;
    havoc Tmp_1681;
    call {:si_unique_call 2900} WPP_SF_qq(Tmp_1681, 21, Tmp_1693, deviceExtension_5, Irp_20);
    goto L1;

  anon211_Then:
    goto L1;

  anon236_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1700], 1) == 0;
    goto L1;

  anon210_Then:
    goto L1;

  anon209_Then:
    assume {:partition} sdv_542 == 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2901} sdv_549 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} sdv_549 == 0;
    call {:si_unique_call 2902} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    havoc Tmp_1695;
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1695], 1) != 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    havoc Tmp_1664;
    havoc Tmp_1666;
    call {:si_unique_call 2903} WPP_SF_qq(Tmp_1666, 22, Tmp_1664, deviceExtension_5, Irp_20);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2904} vslice_dummy_var_465 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    call {:si_unique_call 2905} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon214_Then:
    goto L369;

  anon237_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1695], 1) == 0;
    goto L369;

  anon213_Then:
    goto L369;

  anon212_Then:
    assume {:partition} sdv_549 != 0;
    goto L346;

  anon205_Then:
    goto L314;

  anon204_Then:
    goto L24;

  anon160_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_33: int, actual_Irp_20: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current) || sdv_irql_current == old(sdv_irql_previous_3) || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_4) || sdv_irql_previous == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_33: int, actual_Irp_20: int)
{
  var {:scalar} Tmp_1657: int;
  var {:pointer} Tmp_1658: int;
  var {:pointer} Tmp_1660: int;
  var {:pointer} Tmp_1661: int;
  var {:scalar} Tmp_1662: int;
  var {:scalar} sdv_542: int;
  var {:scalar} Tmp_1663: int;
  var {:pointer} Tmp_1664: int;
  var {:pointer} Tmp_1665: int;
  var {:scalar} Tmp_1666: int;
  var {:pointer} Tmp_1667: int;
  var {:pointer} Tmp_1668: int;
  var {:pointer} Tmp_1669: int;
  var {:pointer} Tmp_1670: int;
  var {:scalar} Tmp_1671: int;
  var {:scalar} sdv_544: int;
  var {:pointer} Tmp_1672: int;
  var {:pointer} sdv_545: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_548: int;
  var {:pointer} Tmp_1673: int;
  var {:scalar} sdv_549: int;
  var {:scalar} queued: int;
  var {:scalar} Tmp_1674: int;
  var {:pointer} sdv_550: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1675: int;
  var {:pointer} Tmp_1676: int;
  var {:pointer} deviceExtension_5: int;
  var {:scalar} Tmp_1677: int;
  var {:pointer} irpStack_13: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1678: int;
  var {:scalar} Tmp_1679: int;
  var {:pointer} Tmp_1680: int;
  var {:pointer} sdv_551: int;
  var {:scalar} Tmp_1681: int;
  var {:pointer} Tmp_1682: int;
  var {:pointer} Tmp_1684: int;
  var {:pointer} Tmp_1685: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1686: int;
  var {:pointer} Tmp_1687: int;
  var {:pointer} Tmp_1688: int;
  var {:scalar} sdv_553: int;
  var {:scalar} sdv_554: int;
  var {:scalar} Tmp_1689: int;
  var {:scalar} Tmp_1690: int;
  var {:pointer} Tmp_1691: int;
  var {:scalar} Tmp_1692: int;
  var {:pointer} Tmp_1693: int;
  var {:pointer} Tmp_1694: int;
  var {:pointer} sdv_555: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1695: int;
  var {:pointer} Tmp_1696: int;
  var {:pointer} Tmp_1697: int;
  var {:pointer} Tmp_1698: int;
  var {:scalar} Tmp_1699: int;
  var {:pointer} Tmp_1700: int;
  var {:pointer} Tmp_1701: int;
  var {:pointer} Tmp_1702: int;
  var {:scalar} Tmp_1703: int;
  var {:scalar} status_46: int;
  var {:pointer} entry_3: int;
  var {:pointer} Tmp_1704: int;
  var {:pointer} Tmp_1705: int;
  var {:scalar} sdv_556: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1706: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;

  anon0:
    call {:si_unique_call 2906} vslice_dummy_var_466 := __HAVOC_malloc(4);
    call {:si_unique_call 2907} context := __HAVOC_malloc(4);
    call {:si_unique_call 2908} state_1 := __HAVOC_malloc(8);
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 2909} Tmp_1660 := __HAVOC_malloc(4);
    call {:si_unique_call 2910} Tmp_1661 := __HAVOC_malloc(4);
    call {:si_unique_call 2911} Tmp_1665 := __HAVOC_malloc(4);
    call {:si_unique_call 2912} Tmp_1670 := __HAVOC_malloc(4);
    call {:si_unique_call 2913} Tmp_1672 := __HAVOC_malloc(4);
    call {:si_unique_call 2914} Tmp_1673 := __HAVOC_malloc(4);
    call {:si_unique_call 2915} Tmp_1682 := __HAVOC_malloc(4);
    call {:si_unique_call 2916} Tmp_1684 := __HAVOC_malloc(4);
    call {:si_unique_call 2917} Tmp_1687 := __HAVOC_malloc(4);
    call {:si_unique_call 2918} Tmp_1695 := __HAVOC_malloc(4);
    call {:si_unique_call 2919} Tmp_1700 := __HAVOC_malloc(4);
    call {:si_unique_call 2920} Tmp_1701 := __HAVOC_malloc(4);
    call {:si_unique_call 2921} Tmp_1702 := __HAVOC_malloc(4);
    call {:si_unique_call 2922} Tmp_1704 := __HAVOC_malloc(4);
    call {:si_unique_call 2923} Tmp_1705 := __HAVOC_malloc(4);
    call {:si_unique_call 2924} irpStack_13 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc deviceExtension_5;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2925} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2926} Sbp2AddLog(deviceExtension_5, 64, -747353745, Irp_20, srb_4);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    call {:si_unique_call 2927} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_46 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2928} sdv_IoCompleteRequest(0, 0);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    havoc Tmp_1665;
    assume {:nonnull} Tmp_1665 != 0;
    assume Tmp_1665 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1665], 1) != 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    havoc Tmp_1697;
    havoc Tmp_1689;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_329;
    call {:si_unique_call 2929} WPP_SF_qqD(Tmp_1689, 23, Tmp_1697, deviceExtension_5, Irp_20, vslice_dummy_var_329);
    goto L39;

  L39:
    call {:si_unique_call 2930} Sbp2StartNextPacketByKey#0(DeviceObject_33, 0);
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2931} vslice_dummy_var_467 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon216_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon164_Then:
    goto L39;

  anon215_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1665], 1) == 0;
    goto L39;

  anon163_Then:
    goto L39;

  anon161_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    call {:si_unique_call 2932} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    goto anon166_Then, anon166_Else;

  anon166_Else:
    havoc Tmp_1660;
    assume {:nonnull} Tmp_1660 != 0;
    assume Tmp_1660 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1660], 1) != 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    havoc Tmp_1680;
    havoc Tmp_1671;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_330;
    havoc vslice_dummy_var_331;
    call {:si_unique_call 2933} WPP_SF_qqqDD(Tmp_1671, 25, Tmp_1680, DeviceObject_33, Irp_20, srb_4, vslice_dummy_var_330, vslice_dummy_var_331);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L76;

  L76:
    call {:si_unique_call 2934} Create1394TransactionForSrb#1(deviceExtension_5, srb_4, context);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon218_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1698;
    assume {:nonnull} Tmp_1698 != 0;
    assume Tmp_1698 > 0;
    Mem_T.INT4[Tmp_1698] := 0;
    goto L76;

  anon169_Then:
    goto L76;

  anon168_Then:
    goto L67;

  anon217_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1660], 1) == 0;
    goto L67;

  anon166_Then:
    goto L67;

  anon165_Then:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2935} sdv_553 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} sdv_553 == 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    havoc Tmp_1705;
    assume {:nonnull} Tmp_1705 != 0;
    assume Tmp_1705 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1705], 32) != 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc Tmp_1696;
    havoc Tmp_1663;
    call {:si_unique_call 2936} WPP_SF_qq(Tmp_1663, 24, Tmp_1696, deviceExtension_5, Irp_20);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2937} vslice_dummy_var_470 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    call {:si_unique_call 2938} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon172_Then:
    goto L87;

  anon219_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1705], 32) == 0;
    goto L87;

  anon171_Then:
    goto L87;

  anon170_Then:
    assume {:partition} sdv_553 != 0;
    goto L1;

  anon162_Then:
    call {:si_unique_call 2939} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2940} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} queued == 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_1687;
    assume {:nonnull} Tmp_1687 != 0;
    assume Tmp_1687 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1687], 32) != 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_1667;
    havoc Tmp_1703;
    call {:si_unique_call 2941} WPP_SF_qq(Tmp_1703, 26, Tmp_1667, deviceExtension_5, Irp_20);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2942} sdv_545 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto L116;

  L116:
    goto anon177_Then, anon177_Else;

  anon177_Else:
    havoc Tmp_1661;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1661], 4) != 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    Tmp_1699 := queued;
    havoc Tmp_1688;
    havoc Tmp_1677;
    call {:si_unique_call 2943} WPP_SF_qDq(Tmp_1677, 27, Tmp_1688, deviceExtension_5, Tmp_1699, Irp_20);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    havoc Tmp_1672;
    assume {:nonnull} Tmp_1672 != 0;
    assume Tmp_1672 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1672], 4) != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1674;
    havoc Tmp_1706;
    havoc Tmp_1679;
    call {:si_unique_call 2944} WPP_SF_qd(Tmp_1679, 28, Tmp_1706, deviceExtension_5, Tmp_1674);
    goto L130;

  L130:
    call {:si_unique_call 2945} status_46 := PoRequestPowerIrp(0, 2, state_1, 0, 0, 0);
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} status_46 < 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    havoc Tmp_1702;
    assume {:nonnull} Tmp_1702 != 0;
    assume Tmp_1702 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1702], 4) != 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    havoc Tmp_1669;
    havoc Tmp_1690;
    call {:si_unique_call 2946} WPP_SF_qD(Tmp_1690, 29, Tmp_1669, deviceExtension_5, status_46);
    goto L148;

  L148:
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2947} sdv_550 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), 0, Irp_20);
    deferredIrp_2 := sdv_550;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} deferredIrp_2 != Irp_20;
    Irp_20 := 0;
    goto L181;

  L181:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Irp_20 == 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    havoc Tmp_1670;
    assume {:nonnull} Tmp_1670 != 0;
    assume Tmp_1670 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1670], 1) != 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_1694;
    havoc Tmp_1662;
    call {:si_unique_call 2948} WPP_SF_q(Tmp_1662, 30, Tmp_1694, deviceExtension_5);
    goto L1;

  anon188_Then:
    goto L1;

  anon226_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1670], 1) == 0;
    goto L1;

  anon187_Then:
    goto L1;

  anon186_Then:
    assume {:partition} Irp_20 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2949} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2950} Sbp2StartNextPacketByKey#0(DeviceObject_33, 0);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2951} vslice_dummy_var_469 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto L1;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    assume {:partition} deferredIrp_2 == Irp_20;
    goto L181;

  anon182_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_33);
    call {:si_unique_call 2952} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_3;
    goto L166;

  L166:
    call {:si_unique_call 2953} qIrp, sdv_555, entry_3 := Sbp2StartIo#1_loop_L166(qIrp, sdv_555, entry_3, Irp_20);
    goto L166_last;

  L166_last:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    call {:si_unique_call 2954} sdv_555 := sdv_containing_record(entry_3, 64);
    qIrp := sdv_555;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} qIrp == Irp_20;
    call {:si_unique_call 2955} vslice_dummy_var_468 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2956} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} qIrp != Irp_20;
    Irp_20 := 0;
    goto L181;

  anon185_Then:
    assume {:partition} qIrp == Irp_20;
    goto L181;

  anon224_Then:
    assume {:partition} qIrp != Irp_20;
    assume {:nonnull} entry_3 != 0;
    assume entry_3 > 0;
    havoc entry_3;
    goto anon224_Then_dummy;

  anon224_Then_dummy:
    assume false;
    return;

  anon184_Then:
    goto L167;

  anon183_Then:
    goto L148;

  anon223_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1702], 4) == 0;
    goto L148;

  anon181_Then:
    goto L148;

  anon180_Then:
    assume {:partition} 0 <= status_46;
    goto L1;

  anon179_Then:
    goto L130;

  anon222_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1672], 4) == 0;
    goto L130;

  anon221_Then:
    goto L130;

  anon178_Then:
    goto L117;

  anon220_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1661], 4) == 0;
    goto L117;

  anon177_Then:
    goto L117;

  anon190_Then:
    goto L215;

  anon228_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1687], 32) == 0;
    goto L215;

  anon189_Then:
    goto L215;

  anon176_Then:
    assume {:partition} queued != 0;
    goto L116;

  anon175_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 2957} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2958} sdv_544 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} sdv_544 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2959} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_1701;
    assume {:nonnull} Tmp_1701 != 0;
    assume Tmp_1701 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1701], 32) != 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_1658;
    havoc Tmp_1692;
    call {:si_unique_call 2960} WPP_SF_qq(Tmp_1692, 31, Tmp_1658, deviceExtension_5, Irp_20);
    goto L1;

  anon194_Then:
    goto L1;

  anon229_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1701], 32) == 0;
    goto L1;

  anon193_Then:
    goto L1;

  anon192_Then:
    assume {:partition} sdv_544 == 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2961} sdv_556 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} sdv_556 == 0;
    call {:si_unique_call 2962} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_1684;
    assume {:nonnull} Tmp_1684 != 0;
    assume Tmp_1684 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1684], 32) != 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_1676;
    havoc Tmp_1678;
    call {:si_unique_call 2963} WPP_SF_qq(Tmp_1678, 32, Tmp_1676, deviceExtension_5, Irp_20);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2964} vslice_dummy_var_471 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    call {:si_unique_call 2965} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon197_Then:
    goto L261;

  anon230_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1684], 32) == 0;
    goto L261;

  anon196_Then:
    goto L261;

  anon195_Then:
    assume {:partition} sdv_556 != 0;
    goto L238;

  anon174_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2966} sdv_554 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} sdv_554 == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2967} sdv_551 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon232_Then, anon232_Else;

  anon232_Else:
    havoc Tmp_1673;
    assume {:nonnull} Tmp_1673 != 0;
    assume Tmp_1673 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1673], 4) != 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    havoc Tmp_1668;
    havoc Tmp_1675;
    call {:si_unique_call 2968} WPP_SF_q(Tmp_1675, 33, Tmp_1668, Irp_20);
    goto L1;

  anon203_Then:
    goto L1;

  anon233_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1673], 4) == 0;
    goto L1;

  anon232_Then:
    goto L1;

  anon200_Then:
    assume {:partition} sdv_554 != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_1704;
    assume {:nonnull} Tmp_1704 != 0;
    assume Tmp_1704 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1704], 32) != 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_1691;
    havoc Tmp_1686;
    call {:si_unique_call 2969} WPP_SF_q(Tmp_1686, 34, Tmp_1691, Irp_20);
    goto L1;

  anon202_Then:
    goto L1;

  anon231_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1704], 32) == 0;
    goto L1;

  anon201_Then:
    goto L1;

  anon199_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto L279;

  anon198_Then:
    goto L67;

  anon191_Then:
    goto L277;

  anon173_Then:
    goto L103;

  anon159_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2970} sdv_548 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    oldIrp_1 := sdv_548;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    havoc Tmp_1682;
    assume {:nonnull} Tmp_1682 != 0;
    assume Tmp_1682 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1682], 1) != 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_1685;
    havoc Tmp_1657;
    call {:si_unique_call 2971} WPP_SF_qqq(Tmp_1657, 20, Tmp_1685, deviceExtension_5, Irp_20, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto L338;

  L338:
    call {:si_unique_call 2972} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon207_Then:
    call {:si_unique_call 2973} Sbp2SetDeferLoginTimer(deviceExtension_5);
    goto L338;

  anon208_Then:
    goto L327;

  anon235_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1682], 1) == 0;
    goto L327;

  anon234_Then:
    goto L327;

  anon206_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2974} sdv_542 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} sdv_542 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2975} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon210_Then, anon210_Else;

  anon210_Else:
    havoc Tmp_1700;
    assume {:nonnull} Tmp_1700 != 0;
    assume Tmp_1700 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1700], 1) != 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    havoc Tmp_1693;
    havoc Tmp_1681;
    call {:si_unique_call 2976} WPP_SF_qq(Tmp_1681, 21, Tmp_1693, deviceExtension_5, Irp_20);
    goto L1;

  anon211_Then:
    goto L1;

  anon236_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1700], 1) == 0;
    goto L1;

  anon210_Then:
    goto L1;

  anon209_Then:
    assume {:partition} sdv_542 == 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2977} sdv_549 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_33), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), Mem_T.INT4[QueueSortKey__SCSI_REQUEST_BLOCK(srb_4)]);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} sdv_549 == 0;
    call {:si_unique_call 2978} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    havoc Tmp_1695;
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1695], 1) != 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    havoc Tmp_1664;
    havoc Tmp_1666;
    call {:si_unique_call 2979} WPP_SF_qq(Tmp_1666, 22, Tmp_1664, deviceExtension_5, Irp_20);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2980} vslice_dummy_var_472 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    call {:si_unique_call 2981} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon214_Then:
    goto L369;

  anon237_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1695], 1) == 0;
    goto L369;

  anon213_Then:
    goto L369;

  anon212_Then:
    assume {:partition} sdv_549 != 0;
    goto L346;

  anon205_Then:
    goto L314;

  anon204_Then:
    goto L24;

  anon160_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_33: int, actual_Irp_20: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1638: int;
  var {:pointer} Tmp_1639: int;
  var {:pointer} Tmp_1640: int;
  var {:pointer} Tmp_1641: int;
  var {:pointer} Tmp_1642: int;
  var {:pointer} sdv_533: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1643: int;
  var {:scalar} Tmp_1644: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1645: int;
  var {:pointer} Tmp_1646: int;
  var {:pointer} sdv_537: int;
  var {:pointer} Tmp_1647: int;
  var {:scalar} sdv_538: int;
  var {:pointer} Tmp_1648: int;
  var {:scalar} Tmp_1649: int;
  var {:pointer} Tmp_1650: int;
  var {:pointer} irp_6: int;
  var {:scalar} Tmp_1651: int;
  var {:scalar} Tmp_1652: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1653: int;
  var {:scalar} status_45: int;
  var {:pointer} Tmp_1654: int;
  var {:pointer} Tmp_1655: int;
  var {:pointer} Tmp_1656: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;

  anon0:
    call {:si_unique_call 2982} vslice_dummy_var_473 := __HAVOC_malloc(4);
    call {:si_unique_call 2983} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2984} Tmp_1642 := __HAVOC_malloc(4);
    call {:si_unique_call 2985} Tmp_1646 := __HAVOC_malloc(4);
    call {:si_unique_call 2986} Tmp_1647 := __HAVOC_malloc(4);
    call {:si_unique_call 2987} Tmp_1648 := __HAVOC_malloc(4);
    call {:si_unique_call 2988} Tmp_1653 := __HAVOC_malloc(4);
    status_45 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2989} sdv_533 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_533;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} callbackContext == 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_1648;
    assume {:nonnull} Tmp_1648 != 0;
    assume Tmp_1648 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1648], 1) != 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    havoc Tmp_1650;
    havoc Tmp_1644;
    call {:si_unique_call 2990} WPP_SF_q(Tmp_1644, 35, Tmp_1650, PdoExtension_20);
    goto L179;

  L179:
    status_45 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_332;
    call {:si_unique_call 2991} Sbp2CreateRequestErrorLog(vslice_dummy_var_332, 0, 1053, status_45);
    goto L124;

  L124:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_45 != 259;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} status_45 != 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2992} vslice_dummy_var_477 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 2993} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    return;

  anon74_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon73_Then:
    assume {:partition} status_45 == 0;
    call {:si_unique_call 2994} Sbp2InsertTailList#0(PdoExtension_20, callbackContext);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    assume {:partition} status_45 == 259;
    goto L1;

  anon80_Then:
    goto L179;

  anon93_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1648], 1) == 0;
    goto L179;

  anon79_Then:
    goto L179;

  anon81_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2995} sdv_537 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_537;
    call {:si_unique_call 2996} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2997} Tmp_1640 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1640 != 0;
    assume Tmp_1640 > 0;
    havoc vslice_dummy_var_333;
    Mem_T.INT4[Tmp_1640] := vslice_dummy_var_333;
    call {:si_unique_call 2998} sdv_538 := sdv_InterlockedIncrement(Tmp_1640);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1640 != 0;
    assume Tmp_1640 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2999} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3000} status_45 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_45 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3001} vslice_dummy_var_476 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_45 < 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1653;
    assume {:nonnull} Tmp_1653 != 0;
    assume Tmp_1653 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1653], 1) != 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_1655;
    havoc Tmp_1652;
    call {:si_unique_call 3002} WPP_SF_(Tmp_1652, 37, Tmp_1655);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1643;
    assume {:nonnull} Tmp_1643 != 0;
    assume Tmp_1643 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 3003} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    return;

  anon66_Then:
    goto L72;

  anon83_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1653], 1) == 0;
    goto L72;

  anon65_Then:
    goto L72;

  anon64_Then:
    assume {:partition} 0 <= status_45;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1638;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1638 != 0;
    assume Tmp_1638 > 0;
    goto L59;

  anon63_Then:
    assume {:partition} status_45 == 259;
    status_45 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1639;
    assume {:nonnull} Tmp_1639 != 0;
    assume Tmp_1639 > 0;
    havoc requestMdl;
    call {:si_unique_call 3004} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_334;
    call {:si_unique_call 3005} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_334, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_335;
    call {:si_unique_call 3006} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_335);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_1647;
    assume {:nonnull} Tmp_1647 != 0;
    assume Tmp_1647 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1647], 1) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1654;
    havoc Tmp_1649;
    call {:si_unique_call 3007} WPP_SF_q(Tmp_1649, 39, Tmp_1654, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3008} status_45 := Sbp2BusMapTransfer#0(PdoExtension_20, callbackContext);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_45 < 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_1646;
    assume {:nonnull} Tmp_1646 != 0;
    assume Tmp_1646 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1646], 1) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1641;
    havoc Tmp_1651;
    call {:si_unique_call 3009} WPP_SF_D(Tmp_1651, 40, Tmp_1641, status_45);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 3010} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon76_Then:
    goto L124;

  anon77_Then:
    goto L152;

  anon90_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1646], 1) == 0;
    goto L152;

  anon75_Then:
    goto L152;

  anon71_Then:
    assume {:partition} 0 <= status_45;
    goto L124;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    goto L108;

  anon86_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1647], 1) == 0;
    goto L108;

  anon85_Then:
    goto L108;

  anon69_Then:
    status_45 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_1642;
    assume {:nonnull} Tmp_1642 != 0;
    assume Tmp_1642 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1642], 1) != 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    havoc Tmp_1656;
    havoc Tmp_1645;
    call {:si_unique_call 3011} WPP_SF_(Tmp_1645, 38, Tmp_1656);
    goto L124;

  anon78_Then:
    goto L124;

  anon92_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1642], 1) == 0;
    goto L124;

  anon91_Then:
    goto L124;

  anon68_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon67_Then:
    goto L83;

  L83:
    call {:si_unique_call 3012} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon84_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_5) || sdv_irql_previous_2 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_previous_3) || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_current) || sdv_irql_current == old(sdv_irql_previous_5) || sdv_irql_current == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_4) || sdv_irql_previous == old(sdv_irql_previous_3) || sdv_irql_previous == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current) || sdv_irql_previous_3 == old(sdv_irql_previous_5);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1638: int;
  var {:pointer} Tmp_1639: int;
  var {:pointer} Tmp_1640: int;
  var {:pointer} Tmp_1641: int;
  var {:pointer} Tmp_1642: int;
  var {:pointer} sdv_533: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1643: int;
  var {:scalar} Tmp_1644: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1645: int;
  var {:pointer} Tmp_1646: int;
  var {:pointer} sdv_537: int;
  var {:pointer} Tmp_1647: int;
  var {:scalar} sdv_538: int;
  var {:pointer} Tmp_1648: int;
  var {:scalar} Tmp_1649: int;
  var {:pointer} Tmp_1650: int;
  var {:pointer} irp_6: int;
  var {:scalar} Tmp_1651: int;
  var {:scalar} Tmp_1652: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1653: int;
  var {:scalar} status_45: int;
  var {:pointer} Tmp_1654: int;
  var {:pointer} Tmp_1655: int;
  var {:pointer} Tmp_1656: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;

  anon0:
    call {:si_unique_call 3013} vslice_dummy_var_478 := __HAVOC_malloc(4);
    call {:si_unique_call 3014} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 3015} Tmp_1642 := __HAVOC_malloc(4);
    call {:si_unique_call 3016} Tmp_1646 := __HAVOC_malloc(4);
    call {:si_unique_call 3017} Tmp_1647 := __HAVOC_malloc(4);
    call {:si_unique_call 3018} Tmp_1648 := __HAVOC_malloc(4);
    call {:si_unique_call 3019} Tmp_1653 := __HAVOC_malloc(4);
    status_45 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 3020} sdv_533 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_533;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} callbackContext == 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_1648;
    assume {:nonnull} Tmp_1648 != 0;
    assume Tmp_1648 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1648], 1) != 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    havoc Tmp_1650;
    havoc Tmp_1644;
    call {:si_unique_call 3021} WPP_SF_q(Tmp_1644, 35, Tmp_1650, PdoExtension_20);
    goto L179;

  L179:
    status_45 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_336;
    call {:si_unique_call 3022} Sbp2CreateRequestErrorLog(vslice_dummy_var_336, 0, 1053, status_45);
    goto L124;

  L124:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_45 != 259;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} status_45 != 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3023} vslice_dummy_var_482 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 3024} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_337;
    call {:si_unique_call 3025} Sbp2StartNextPacketByKey#0(vslice_dummy_var_337, 0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 3026} vslice_dummy_var_480 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_6);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon73_Then:
    assume {:partition} status_45 == 0;
    call {:si_unique_call 3027} Sbp2InsertTailList#1(PdoExtension_20, callbackContext);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    assume {:partition} status_45 == 259;
    goto L1;

  anon80_Then:
    goto L179;

  anon93_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1648], 1) == 0;
    goto L179;

  anon79_Then:
    goto L179;

  anon81_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 3028} sdv_537 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_537;
    call {:si_unique_call 3029} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 3030} Tmp_1640 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1640 != 0;
    assume Tmp_1640 > 0;
    havoc vslice_dummy_var_338;
    Mem_T.INT4[Tmp_1640] := vslice_dummy_var_338;
    call {:si_unique_call 3031} sdv_538 := sdv_InterlockedIncrement(Tmp_1640);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1640 != 0;
    assume Tmp_1640 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3032} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3033} status_45 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_45 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3034} vslice_dummy_var_481 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_45 < 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1653;
    assume {:nonnull} Tmp_1653 != 0;
    assume Tmp_1653 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1653], 1) != 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_1655;
    havoc Tmp_1652;
    call {:si_unique_call 3035} WPP_SF_(Tmp_1652, 37, Tmp_1655);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1643;
    assume {:nonnull} Tmp_1643 != 0;
    assume Tmp_1643 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 3036} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_339;
    havoc vslice_dummy_var_340;
    call {:si_unique_call 3037} Sbp2StartNextPacketByKey#0(vslice_dummy_var_339, vslice_dummy_var_340);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 3038} vslice_dummy_var_479 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_6);
    goto L1;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    goto L72;

  anon83_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1653], 1) == 0;
    goto L72;

  anon65_Then:
    goto L72;

  anon64_Then:
    assume {:partition} 0 <= status_45;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1638;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1638 != 0;
    assume Tmp_1638 > 0;
    goto L59;

  anon63_Then:
    assume {:partition} status_45 == 259;
    status_45 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1639;
    assume {:nonnull} Tmp_1639 != 0;
    assume Tmp_1639 > 0;
    havoc requestMdl;
    call {:si_unique_call 3039} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_341;
    call {:si_unique_call 3040} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_341, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_342;
    call {:si_unique_call 3041} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_342);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_1647;
    assume {:nonnull} Tmp_1647 != 0;
    assume Tmp_1647 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1647], 1) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1654;
    havoc Tmp_1649;
    call {:si_unique_call 3042} WPP_SF_q(Tmp_1649, 39, Tmp_1654, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 3043} status_45 := Sbp2BusMapTransfer#1(PdoExtension_20, callbackContext);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_45 < 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_1646;
    assume {:nonnull} Tmp_1646 != 0;
    assume Tmp_1646 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1646], 1) != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1641;
    havoc Tmp_1651;
    call {:si_unique_call 3044} WPP_SF_D(Tmp_1651, 40, Tmp_1641, status_45);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 3045} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon76_Then:
    goto L124;

  anon77_Then:
    goto L152;

  anon90_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1646], 1) == 0;
    goto L152;

  anon75_Then:
    goto L152;

  anon71_Then:
    assume {:partition} 0 <= status_45;
    goto L124;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    goto L108;

  anon86_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1647], 1) == 0;
    goto L108;

  anon85_Then:
    goto L108;

  anon69_Then:
    status_45 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_1642;
    assume {:nonnull} Tmp_1642 != 0;
    assume Tmp_1642 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1642], 1) != 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    havoc Tmp_1656;
    havoc Tmp_1645;
    call {:si_unique_call 3046} WPP_SF_(Tmp_1645, 38, Tmp_1656);
    goto L124;

  anon78_Then:
    goto L124;

  anon92_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1642], 1) == 0;
    goto L124;

  anon91_Then:
    goto L124;

  anon68_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon67_Then:
    goto L83;

  L83:
    call {:si_unique_call 3047} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon84_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_18: int)
{
  var {:pointer} Tmp_1861: int;
  var {:pointer} Tmp_1862: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1863: int;
  var {:pointer} Tmp_1864: int;
  var {:pointer} Tmp_1865: int;
  var {:scalar} Tmp_1866: int;
  var {:pointer} Tmp_1867: int;
  var {:scalar} sdv_581: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1868: int;
  var {:pointer} Tmp_1869: int;
  var {:pointer} Tmp_1870: int;
  var {:pointer} Tmp_1871: int;
  var {:pointer} Tmp_1872: int;
  var {:pointer} Tmp_1873: int;
  var {:pointer} Tmp_1874: int;
  var {:scalar} Tmp_1875: int;
  var {:scalar} sdv_583: int;
  var {:scalar} sdv_587: int;
  var {:scalar} sdv_589: int;
  var {:scalar} Tmp_1876: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1877: int;
  var {:pointer} Tmp_1878: int;
  var {:scalar} Tmp_1879: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1880: int;
  var {:pointer} Tmp_1882: int;
  var {:pointer} Tmp_1883: int;
  var {:scalar} status_50: int;
  var {:pointer} Tmp_1884: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1885: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1886: int;
  var {:scalar} sdv_591: int;
  var {:pointer} Tmp_1887: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_18: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_343: int;

  anon0:
    call {:si_unique_call 3048} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 3049} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 3050} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 3051} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 3052} vslice_dummy_var_483 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_18 := actual_Context_18;
    call {:si_unique_call 3053} Tmp_1863 := __HAVOC_malloc(4);
    call {:si_unique_call 3054} Tmp_1864 := __HAVOC_malloc(4);
    call {:si_unique_call 3055} Tmp_1883 := __HAVOC_malloc(4);
    call {:si_unique_call 3056} Tmp_1885 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1886;
    assume {:nonnull} Tmp_1886 != 0;
    assume Tmp_1886 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc orbListDepth;
    call {:si_unique_call 3057} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1867;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1867 != 0;
    assume Tmp_1867 > 0;
    call {:si_unique_call 3058} sdv_581 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_581 != 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1865;
    assume {:nonnull} Tmp_1865 != 0;
    assume Tmp_1865 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1868;
    assume {:nonnull} Tmp_1868 != 0;
    assume Tmp_1868 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    call {:si_unique_call 3059} vslice_dummy_var_487 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3060} vslice_dummy_var_484 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_18));
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1874;
    assume {:nonnull} Tmp_1874 != 0;
    assume Tmp_1874 > 0;
    havoc Tmp_1882;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1878;
    assume {:nonnull} Tmp_1878 != 0;
    assume Tmp_1878 > 0;
    havoc Tmp_1873;
    assume {:nonnull} Tmp_1873 != 0;
    assume Tmp_1873 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1872;
    assume {:nonnull} Tmp_1872 != 0;
    assume Tmp_1872 > 0;
    havoc Tmp_1880;
    assume {:nonnull} Tmp_1880 != 0;
    assume Tmp_1880 > 0;
    call {:si_unique_call 3061} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_1864;
    assume {:nonnull} Tmp_1864 != 0;
    assume Tmp_1864 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1864], 1) != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_1877;
    havoc Tmp_1866;
    call {:si_unique_call 3062} WPP_SF_q(Tmp_1866, 47, Tmp_1877, Context_18);
    goto L60;

  L60:
    call {:si_unique_call 3063} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3064} status_50 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3065} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3066} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_50 == -1072562032;
    call {:si_unique_call 3067} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 3068} vslice_dummy_var_485 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 3069} vslice_dummy_var_488 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 3070} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} timeOutValue != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_1863;
    assume {:nonnull} Tmp_1863 != 0;
    assume Tmp_1863 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1863], 1) != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1871;
    havoc Tmp_1875;
    call {:si_unique_call 3071} WPP_SF_q(Tmp_1875, 49, Tmp_1871, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L99;

  anon72_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1863], 1) == 0;
    goto L99;

  anon62_Then:
    goto L99;

  anon61_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon60_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon59_Then:
    goto L86;

  anon57_Then:
    assume {:partition} status_50 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume false;
    return;

  anon58_Then:
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L60;

  anon70_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1864], 1) == 0;
    goto L60;

  anon55_Then:
    goto L60;

  anon54_Then:
    goto L37;

  L37:
    call {:si_unique_call 3072} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc Tmp_1885;
    assume {:nonnull} Tmp_1885 != 0;
    assume Tmp_1885 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1885], 1) != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1887;
    havoc Tmp_1876;
    call {:si_unique_call 3073} WPP_SF_q(Tmp_1876, 48, Tmp_1887, Context_18);
    goto L119;

  L119:
    call {:si_unique_call 3074} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3075} status_50 := Sbp2AccessRegister#0(PdoExtension_21, newAddr, 1028);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3076} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 3077} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_18);
    goto L80;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L119;

  anon74_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1885], 1) == 0;
    goto L119;

  anon64_Then:
    goto L119;

  anon69_Then:
    goto L37;

  anon53_Then:
    assume {:partition} sdv_581 == 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1862;
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1869;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1870;
    assume {:nonnull} Tmp_1870 != 0;
    assume Tmp_1870 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1884;
    assume {:nonnull} Tmp_1884 != 0;
    assume Tmp_1884 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3078} vslice_dummy_var_489 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_18));
    call {:si_unique_call 3079} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc Tmp_1883;
    assume {:nonnull} Tmp_1883 != 0;
    assume Tmp_1883 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1883], 1) != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1861;
    havoc Tmp_1879;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_343;
    call {:si_unique_call 3080} WPP_SF_dq(Tmp_1879, 50, Tmp_1861, vslice_dummy_var_343, Context_18);
    goto L166;

  L166:
    call {:si_unique_call 3081} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3082} vslice_dummy_var_486 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3083} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L166;

  anon77_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1883], 1) == 0;
    goto L166;

  anon67_Then:
    goto L166;

  anon66_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon76_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_18: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_4) || sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_3) || sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current) || sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current) || sdv_irql_previous_3 == old(sdv_irql_previous_5) || sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_18: int)
{
  var {:pointer} Tmp_1861: int;
  var {:pointer} Tmp_1862: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1863: int;
  var {:pointer} Tmp_1864: int;
  var {:pointer} Tmp_1865: int;
  var {:scalar} Tmp_1866: int;
  var {:pointer} Tmp_1867: int;
  var {:scalar} sdv_581: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1868: int;
  var {:pointer} Tmp_1869: int;
  var {:pointer} Tmp_1870: int;
  var {:pointer} Tmp_1871: int;
  var {:pointer} Tmp_1872: int;
  var {:pointer} Tmp_1873: int;
  var {:pointer} Tmp_1874: int;
  var {:scalar} Tmp_1875: int;
  var {:scalar} sdv_583: int;
  var {:scalar} sdv_587: int;
  var {:scalar} sdv_589: int;
  var {:scalar} Tmp_1876: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1877: int;
  var {:pointer} Tmp_1878: int;
  var {:scalar} Tmp_1879: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1880: int;
  var {:pointer} Tmp_1882: int;
  var {:pointer} Tmp_1883: int;
  var {:scalar} status_50: int;
  var {:pointer} Tmp_1884: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1885: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1886: int;
  var {:scalar} sdv_591: int;
  var {:pointer} Tmp_1887: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_18: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;

  anon0:
    call {:si_unique_call 3084} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 3085} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 3086} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 3087} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 3088} vslice_dummy_var_490 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_18 := actual_Context_18;
    call {:si_unique_call 3089} Tmp_1863 := __HAVOC_malloc(4);
    call {:si_unique_call 3090} Tmp_1864 := __HAVOC_malloc(4);
    call {:si_unique_call 3091} Tmp_1883 := __HAVOC_malloc(4);
    call {:si_unique_call 3092} Tmp_1885 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1886;
    assume {:nonnull} Tmp_1886 != 0;
    assume Tmp_1886 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc orbListDepth;
    call {:si_unique_call 3093} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1867;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1867 != 0;
    assume Tmp_1867 > 0;
    call {:si_unique_call 3094} sdv_581 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_581 != 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1865;
    assume {:nonnull} Tmp_1865 != 0;
    assume Tmp_1865 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1868;
    assume {:nonnull} Tmp_1868 != 0;
    assume Tmp_1868 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    call {:si_unique_call 3095} vslice_dummy_var_494 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3096} vslice_dummy_var_491 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_18));
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1874;
    assume {:nonnull} Tmp_1874 != 0;
    assume Tmp_1874 > 0;
    havoc Tmp_1882;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1878;
    assume {:nonnull} Tmp_1878 != 0;
    assume Tmp_1878 > 0;
    havoc Tmp_1873;
    assume {:nonnull} Tmp_1873 != 0;
    assume Tmp_1873 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1872;
    assume {:nonnull} Tmp_1872 != 0;
    assume Tmp_1872 > 0;
    havoc Tmp_1880;
    assume {:nonnull} Tmp_1880 != 0;
    assume Tmp_1880 > 0;
    call {:si_unique_call 3097} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_1864;
    assume {:nonnull} Tmp_1864 != 0;
    assume Tmp_1864 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1864], 1) != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_1877;
    havoc Tmp_1866;
    call {:si_unique_call 3098} WPP_SF_q(Tmp_1866, 47, Tmp_1877, Context_18);
    goto L60;

  L60:
    call {:si_unique_call 3099} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3100} status_50 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3101} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3102} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_50 == -1072562032;
    call {:si_unique_call 3103} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 3104} vslice_dummy_var_492 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 3105} vslice_dummy_var_495 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 3106} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} timeOutValue != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_1863;
    assume {:nonnull} Tmp_1863 != 0;
    assume Tmp_1863 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1863], 1) != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1871;
    havoc Tmp_1875;
    call {:si_unique_call 3107} WPP_SF_q(Tmp_1875, 49, Tmp_1871, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L99;

  anon72_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1863], 1) == 0;
    goto L99;

  anon62_Then:
    goto L99;

  anon61_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon60_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon59_Then:
    goto L86;

  anon57_Then:
    assume {:partition} status_50 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_344;
    havoc vslice_dummy_var_345;
    call {:si_unique_call 3108} Sbp2StartNextPacketByKey#0(vslice_dummy_var_344, vslice_dummy_var_345);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L60;

  anon70_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1864], 1) == 0;
    goto L60;

  anon55_Then:
    goto L60;

  anon54_Then:
    goto L37;

  L37:
    call {:si_unique_call 3109} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc Tmp_1885;
    assume {:nonnull} Tmp_1885 != 0;
    assume Tmp_1885 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1885], 1) != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1887;
    havoc Tmp_1876;
    call {:si_unique_call 3110} WPP_SF_q(Tmp_1876, 48, Tmp_1887, Context_18);
    goto L119;

  L119:
    call {:si_unique_call 3111} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3112} status_50 := Sbp2AccessRegister#1(PdoExtension_21, newAddr, 1028);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3113} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 3114} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_18);
    goto L80;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L119;

  anon74_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1885], 1) == 0;
    goto L119;

  anon64_Then:
    goto L119;

  anon69_Then:
    goto L37;

  anon53_Then:
    assume {:partition} sdv_581 == 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1862;
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1869;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1870;
    assume {:nonnull} Tmp_1870 != 0;
    assume Tmp_1870 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1884;
    assume {:nonnull} Tmp_1884 != 0;
    assume Tmp_1884 > 0;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3115} vslice_dummy_var_496 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_18));
    call {:si_unique_call 3116} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc Tmp_1883;
    assume {:nonnull} Tmp_1883 != 0;
    assume Tmp_1883 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1883], 1) != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1861;
    havoc Tmp_1879;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_346;
    call {:si_unique_call 3117} WPP_SF_dq(Tmp_1879, 50, Tmp_1861, vslice_dummy_var_346, Context_18);
    goto L166;

  L166:
    call {:si_unique_call 3118} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 3119} vslice_dummy_var_493 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3120} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L166;

  anon77_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1883], 1) == 0;
    goto L166;

  anon67_Then:
    goto L166;

  anon66_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon76_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_18: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 3121} Tmp_636 := Sbp2AccessRegisterEx#0(PdoExtension_9, Data, RegisterAndDirection, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_636 == -1073741632 || Tmp_636 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 3122} Tmp_636 := Sbp2AccessRegisterEx#1(PdoExtension_9, Data, RegisterAndDirection, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int)
{
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:scalar} sdv_212: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} sdv_213: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_690: int;
  var {:scalar} sdv_216: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:scalar} sdv_217: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} sdv_218: int;
  var {:pointer} sdv_219: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:scalar} status_19: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_710: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} Tmp_712: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_713: int;
  var {:pointer} Tmp_714: int;
  var {:pointer} Tmp_715: int;
  var {:pointer} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:scalar} sdv_221: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;

  anon0:
    call {:si_unique_call 3123} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_663 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon96_Then:
    call {:si_unique_call 3124} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    Tmp_668 := Data_1;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    Mem_T.INT4[Tmp_668] := sdv_212;
    goto L27;

  L27:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_710;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L21;

  L21:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon92_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_714;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    Tmp_669 := Data_1;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    Mem_T.INT4[Tmp_669] := sdv_216;
    goto L27;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    goto L27;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_670;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    goto L27;

  anon95_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_680;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    goto L27;

  anon105_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_671;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    assume {:nonnull} Tmp_671 != 0;
    assume Tmp_671 > 0;
    goto L27;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_666 := Data_1;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_717;
    assume {:nonnull} Tmp_717 != 0;
    assume Tmp_717 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_705;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_713;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    assume {:nonnull} Tmp_713 != 0;
    assume Tmp_713 > 0;
    goto L70;

  L70:
    call {:si_unique_call 3125} sdv_219 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon99_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_347;
    call {:si_unique_call 3126} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_347);
    Tmp_663 := -1073741670;
    goto L1;

  anon98_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto L70;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_712;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_715;
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} Tmp_715 != 0;
    assume Tmp_715 > 0;
    goto L92;

  L92:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    call {:si_unique_call 3127} sdv_213 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon104_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_348;
    call {:si_unique_call 3128} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_348);
    Tmp_663 := -1073741670;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_676;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_716;
    assume {:nonnull} Tmp_676 != 0;
    assume Tmp_676 > 0;
    assume {:nonnull} Tmp_716 != 0;
    assume Tmp_716 > 0;
    goto L92;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon73_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon71_Then:
    Tmp_663 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_663 == -1073741632 || Tmp_663 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int)
{
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:scalar} sdv_212: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} sdv_213: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_690: int;
  var {:scalar} sdv_216: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:scalar} sdv_217: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} sdv_218: int;
  var {:pointer} sdv_219: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:scalar} status_19: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_710: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} Tmp_712: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_713: int;
  var {:pointer} Tmp_714: int;
  var {:pointer} Tmp_715: int;
  var {:pointer} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:scalar} sdv_221: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;

  anon0:
    call {:si_unique_call 3129} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_663 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon96_Then:
    call {:si_unique_call 3130} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    Tmp_668 := Data_1;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    Mem_T.INT4[Tmp_668] := sdv_212;
    goto L27;

  L27:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_710;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L21;

  L21:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_349;
    call {:si_unique_call 3131} status_19 := Sbp2SendRequest#0(PdoExtension_12, vslice_dummy_var_349, 1);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_19 >= 0;
    goto L119;

  L119:
    Tmp_663 := status_19;
    goto L1;

  anon77_Then:
    assume {:partition} 0 > status_19;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 259 != status_19;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_350;
    call {:si_unique_call 3132} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_350);
    goto L119;

  anon101_Then:
    goto L119;

  anon78_Then:
    assume {:partition} 259 == status_19;
    goto L119;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_351;
    call {:si_unique_call 3133} status_19 := Sbp2SendRequest#0(PdoExtension_12, vslice_dummy_var_351, 2);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 3134} IoFreeMdl(0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    goto L126;

  L126:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_19 >= 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 512) != 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L136;

  L136:
    Tmp_691 := Data_1;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Tmp_708 := Data_1;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L131;

  L131:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_352;
    call {:si_unique_call 3135} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_352);
    goto L119;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto L131;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L136;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 512) == 0;
    goto L131;

  anon80_Then:
    assume {:partition} 0 > status_19;
    goto L131;

  anon79_Then:
    assume {:partition} bFreeMdl == 0;
    goto L126;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon92_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_714;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    Tmp_669 := Data_1;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    Mem_T.INT4[Tmp_669] := sdv_216;
    goto L27;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    goto L27;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_670;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    goto L27;

  anon95_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_680;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    goto L27;

  anon105_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_671;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    assume {:nonnull} Tmp_671 != 0;
    assume Tmp_671 > 0;
    goto L27;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_666 := Data_1;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_717;
    assume {:nonnull} Tmp_717 != 0;
    assume Tmp_717 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_705;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_713;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    assume {:nonnull} Tmp_713 != 0;
    assume Tmp_713 > 0;
    goto L70;

  L70:
    call {:si_unique_call 3136} sdv_219 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon99_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_353;
    call {:si_unique_call 3137} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_353);
    Tmp_663 := -1073741670;
    goto L1;

  anon98_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto L70;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_712;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_715;
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} Tmp_715 != 0;
    assume Tmp_715 > 0;
    goto L92;

  L92:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    call {:si_unique_call 3138} sdv_213 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon104_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_354;
    call {:si_unique_call 3139} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_354);
    Tmp_663 := -1073741670;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_676;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_716;
    assume {:nonnull} Tmp_676 != 0;
    assume Tmp_676 > 0;
    assume {:nonnull} Tmp_716 != 0;
    assume Tmp_716 > 0;
    goto L92;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon73_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon71_Then:
    Tmp_663 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1889: int)
{
  var {:pointer} Tmp_1890: int;
  var {:scalar} Tmp_1891: int;
  var {:pointer} Tmp_1892: int;
  var {:pointer} Tmp_1893: int;
  var {:scalar} Tmp_1894: int;
  var {:pointer} Tmp_1896: int;
  var {:pointer} CallbackContext_2: int;
  var vslice_dummy_var_355: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 3140} Tmp_1892 := __HAVOC_malloc(4);
    call {:si_unique_call 3141} Tmp_1893 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 3142} Sbp2AllocComplete#0(CallbackContext_2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc Tmp_1893;
    assume {:nonnull} Tmp_1893 != 0;
    assume Tmp_1893 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1893], 1) != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1896;
    havoc Tmp_1894;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    havoc vslice_dummy_var_355;
    call {:si_unique_call 3143} WPP_SF_qq(Tmp_1894, 43, Tmp_1896, CallbackContext_2, vslice_dummy_var_355);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_1892;
    assume {:nonnull} Tmp_1892 != 0;
    assume Tmp_1892 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1892], 1) != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1890;
    havoc Tmp_1891;
    call {:si_unique_call 3144} WPP_SF_q(Tmp_1891, 44, Tmp_1890, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1889 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L28;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1892], 1) == 0;
    goto L28;

  anon23_Then:
    goto L28;

  anon18_Then:
    Tmp_1889 := 259;
    goto L1;

  anon19_Then:
    goto L13;

  anon22_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1893], 1) == 0;
    goto L13;

  anon17_Then:
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1889: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_4) || sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_3) || sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current) || sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current) || sdv_irql_previous_3 == old(sdv_irql_previous_5) || sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1889: int)
{
  var {:pointer} Tmp_1890: int;
  var {:scalar} Tmp_1891: int;
  var {:pointer} Tmp_1892: int;
  var {:pointer} Tmp_1893: int;
  var {:scalar} Tmp_1894: int;
  var {:pointer} Tmp_1896: int;
  var {:pointer} CallbackContext_2: int;
  var vslice_dummy_var_356: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 3145} Tmp_1892 := __HAVOC_malloc(4);
    call {:si_unique_call 3146} Tmp_1893 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 3147} Sbp2AllocComplete#1(CallbackContext_2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    havoc Tmp_1893;
    assume {:nonnull} Tmp_1893 != 0;
    assume Tmp_1893 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1893], 1) != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1896;
    havoc Tmp_1894;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    havoc vslice_dummy_var_356;
    call {:si_unique_call 3148} WPP_SF_qq(Tmp_1894, 43, Tmp_1896, CallbackContext_2, vslice_dummy_var_356);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    havoc Tmp_1892;
    assume {:nonnull} Tmp_1892 != 0;
    assume Tmp_1892 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1892], 1) != 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1890;
    havoc Tmp_1891;
    call {:si_unique_call 3149} WPP_SF_q(Tmp_1891, 44, Tmp_1890, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1889 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L28;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1892], 1) == 0;
    goto L28;

  anon23_Then:
    goto L28;

  anon18_Then:
    Tmp_1889 := 259;
    goto L1;

  anon19_Then:
    goto L13;

  anon22_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1893], 1) == 0;
    goto L13;

  anon17_Then:
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1889: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1536: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} Tmp_1542: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} Tmp_1546: int;
  var {:pointer} Tmp_1547: int;
  var {:pointer} Tmp_1548: int;
  var {:scalar} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:scalar} Tmp_1551: int;
  var {:pointer} Tmp_1552: int;
  var {:pointer} Tmp_1553: int;
  var {:pointer} Tmp_1554: int;
  var {:pointer} Tmp_1555: int;
  var {:pointer} Tmp_1556: int;
  var {:pointer} Tmp_1557: int;
  var {:pointer} Tmp_1558: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1560: int;
  var {:pointer} Tmp_1561: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1562: int;
  var {:pointer} Tmp_1563: int;
  var {:pointer} Tmp_1564: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_43: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1565: int;
  var {:scalar} Tmp_1566: int;
  var {:pointer} Tmp_1567: int;
  var {:pointer} Tmp_1568: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} Tmp_1569: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;

  anon0:
    call {:si_unique_call 3150} vslice_dummy_var_497 := __HAVOC_malloc(4);
    call {:si_unique_call 3151} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 3152} Tmp_1552 := __HAVOC_malloc(4);
    call {:si_unique_call 3153} Tmp_1558 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1540;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    havoc deviceExtension_4;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc routine_2;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1552;
    assume {:nonnull} Tmp_1552 != 0;
    assume Tmp_1552 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1552], 1) != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_1562;
    havoc Tmp_1551;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_357;
    call {:si_unique_call 3154} WPP_SF_qD(Tmp_1551, 45, Tmp_1562, CallbackContext, vslice_dummy_var_357);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1563;
    assume {:nonnull} Tmp_1563 != 0;
    assume Tmp_1563 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1561;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1541;
    assume {:nonnull} Tmp_1541 != 0;
    assume Tmp_1541 > 0;
    assume {:nonnull} Tmp_1561 != 0;
    assume Tmp_1561 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1567;
    assume {:nonnull} Tmp_1567 != 0;
    assume Tmp_1567 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1539;
    assume {:nonnull} Tmp_1539 != 0;
    assume Tmp_1539 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1547;
    assume {:nonnull} Tmp_1547 != 0;
    assume Tmp_1547 > 0;
    goto L39;

  L39:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1548;
    assume {:nonnull} Tmp_1548 != 0;
    assume Tmp_1548 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1556;
    assume {:nonnull} Tmp_1556 != 0;
    assume Tmp_1556 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1565;
    assume {:nonnull} Tmp_1565 != 0;
    assume Tmp_1565 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1553;
    assume {:nonnull} Tmp_1553 != 0;
    assume Tmp_1553 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1569;
    assume {:nonnull} Tmp_1569 != 0;
    assume Tmp_1569 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1557;
    assume {:nonnull} Tmp_1557 != 0;
    assume Tmp_1557 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1564;
    assume {:nonnull} Tmp_1564 != 0;
    assume Tmp_1564 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1536;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1537;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1545;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1546;
    assume {:nonnull} Tmp_1546 != 0;
    assume Tmp_1546 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_43 != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1558;
    assume {:nonnull} Tmp_1558 != 0;
    assume Tmp_1558 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1558], 1) != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_1566 := bDirectCall;
    havoc Tmp_1560;
    havoc Tmp_1549;
    call {:si_unique_call 3155} WPP_SF_qD(Tmp_1549, 46, Tmp_1560, CallbackContext, Tmp_1566);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_358;
    call {:si_unique_call 3156} DeAllocateIrpAndIrb(deviceExtension_4, vslice_dummy_var_358);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3157} vslice_dummy_var_499 := FreeAsyncRequestContext(deviceExtension_4, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_5;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    call {:si_unique_call 3158} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume false;
    return;

  anon43_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon36_Then:
    goto L62;

  anon42_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1558], 1) == 0;
    goto L62;

  anon35_Then:
    goto L62;

  anon34_Then:
    assume {:partition} status_43 == 0;
    goto L1;

  anon41_Then:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1538;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    goto L39;

  anon40_Then:
    call {:si_unique_call 3159} AllocateIrpAndIrb(deviceExtension_4, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon37_Then:
    goto L1;

  anon31_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1550;
    assume {:nonnull} Tmp_1550 != 0;
    assume Tmp_1550 > 0;
    havoc Tmp_1554;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1554 != 0;
    assume Tmp_1554 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1555;
    assume {:nonnull} Tmp_1555 != 0;
    assume Tmp_1555 > 0;
    havoc Tmp_1568;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1568 != 0;
    assume Tmp_1568 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_359;
    call {:si_unique_call 3160} DeAllocateIrpAndIrb(deviceExtension_4, vslice_dummy_var_359);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3161} Sbp2InitializeOrb(deviceExtension_4, CallbackContext);
    call {:si_unique_call 3162} Sbp2InsertTailList#0(deviceExtension_4, CallbackContext);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    goto L1;

  anon32_Then:
    goto L18;

  anon39_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1552], 1) == 0;
    goto L18;

  anon38_Then:
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_4) || sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_3) || sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current) || sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current) || sdv_irql_previous_3 == old(sdv_irql_previous_5) || sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1536: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} Tmp_1542: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} Tmp_1546: int;
  var {:pointer} Tmp_1547: int;
  var {:pointer} Tmp_1548: int;
  var {:scalar} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:scalar} Tmp_1551: int;
  var {:pointer} Tmp_1552: int;
  var {:pointer} Tmp_1553: int;
  var {:pointer} Tmp_1554: int;
  var {:pointer} Tmp_1555: int;
  var {:pointer} Tmp_1556: int;
  var {:pointer} Tmp_1557: int;
  var {:pointer} Tmp_1558: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1560: int;
  var {:pointer} Tmp_1561: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1562: int;
  var {:pointer} Tmp_1563: int;
  var {:pointer} Tmp_1564: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_43: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1565: int;
  var {:scalar} Tmp_1566: int;
  var {:pointer} Tmp_1567: int;
  var {:pointer} Tmp_1568: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} Tmp_1569: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;

  anon0:
    call {:si_unique_call 3163} vslice_dummy_var_500 := __HAVOC_malloc(4);
    call {:si_unique_call 3164} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 3165} Tmp_1552 := __HAVOC_malloc(4);
    call {:si_unique_call 3166} Tmp_1558 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1540;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    havoc deviceExtension_4;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc routine_2;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1552;
    assume {:nonnull} Tmp_1552 != 0;
    assume Tmp_1552 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1552], 1) != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_1562;
    havoc Tmp_1551;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_360;
    call {:si_unique_call 3167} WPP_SF_qD(Tmp_1551, 45, Tmp_1562, CallbackContext, vslice_dummy_var_360);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1563;
    assume {:nonnull} Tmp_1563 != 0;
    assume Tmp_1563 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1561;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1541;
    assume {:nonnull} Tmp_1541 != 0;
    assume Tmp_1541 > 0;
    assume {:nonnull} Tmp_1561 != 0;
    assume Tmp_1561 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1567;
    assume {:nonnull} Tmp_1567 != 0;
    assume Tmp_1567 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1539;
    assume {:nonnull} Tmp_1539 != 0;
    assume Tmp_1539 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1547;
    assume {:nonnull} Tmp_1547 != 0;
    assume Tmp_1547 > 0;
    goto L39;

  L39:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1548;
    assume {:nonnull} Tmp_1548 != 0;
    assume Tmp_1548 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1556;
    assume {:nonnull} Tmp_1556 != 0;
    assume Tmp_1556 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1565;
    assume {:nonnull} Tmp_1565 != 0;
    assume Tmp_1565 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1553;
    assume {:nonnull} Tmp_1553 != 0;
    assume Tmp_1553 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1569;
    assume {:nonnull} Tmp_1569 != 0;
    assume Tmp_1569 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1557;
    assume {:nonnull} Tmp_1557 != 0;
    assume Tmp_1557 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1564;
    assume {:nonnull} Tmp_1564 != 0;
    assume Tmp_1564 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1536;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1537;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1545;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1546;
    assume {:nonnull} Tmp_1546 != 0;
    assume Tmp_1546 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_43 != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1558;
    assume {:nonnull} Tmp_1558 != 0;
    assume Tmp_1558 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1558], 1) != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_1566 := bDirectCall;
    havoc Tmp_1560;
    havoc Tmp_1549;
    call {:si_unique_call 3168} WPP_SF_qD(Tmp_1549, 46, Tmp_1560, CallbackContext, Tmp_1566);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_361;
    call {:si_unique_call 3169} DeAllocateIrpAndIrb(deviceExtension_4, vslice_dummy_var_361);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3170} vslice_dummy_var_502 := FreeAsyncRequestContext(deviceExtension_4, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_5;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    call {:si_unique_call 3171} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc vslice_dummy_var_362;
    call {:si_unique_call 3172} Sbp2StartNextPacketByKey#0(vslice_dummy_var_362, 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 3173} vslice_dummy_var_501 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), irp_5);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  anon36_Then:
    goto L62;

  anon42_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1558], 1) == 0;
    goto L62;

  anon35_Then:
    goto L62;

  anon34_Then:
    assume {:partition} status_43 == 0;
    goto L1;

  anon41_Then:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1538;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    goto L39;

  anon40_Then:
    call {:si_unique_call 3174} AllocateIrpAndIrb(deviceExtension_4, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon37_Then:
    goto L1;

  anon31_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1550;
    assume {:nonnull} Tmp_1550 != 0;
    assume Tmp_1550 > 0;
    havoc Tmp_1554;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1554 != 0;
    assume Tmp_1554 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1555;
    assume {:nonnull} Tmp_1555 != 0;
    assume Tmp_1555 > 0;
    havoc Tmp_1568;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1568 != 0;
    assume Tmp_1568 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_363;
    call {:si_unique_call 3175} DeAllocateIrpAndIrb(deviceExtension_4, vslice_dummy_var_363);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3176} Sbp2InitializeOrb(deviceExtension_4, CallbackContext);
    call {:si_unique_call 3177} Sbp2InsertTailList#1(deviceExtension_4, CallbackContext);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    goto L1;

  anon32_Then:
    goto L18;

  anon39_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1552], 1) == 0;
    goto L18;

  anon38_Then:
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_28: int) returns (Tmp_2607: int)
{
  var {:scalar} i_9: int;
  var {:pointer} Tmp_2608: int;
  var {:pointer} Tmp_2610: int;
  var {:pointer} Tmp_2611: int;
  var {:pointer} deviceObject_3: int;
  var {:scalar} Tmp_2612: int;
  var {:pointer} Tmp_2613: int;
  var {:scalar} orbLock_11: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2614: int;
  var {:scalar} Tmp_2615: int;
  var {:pointer} Tmp_2616: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2617: int;
  var {:pointer} sdv_851: int;
  var {:pointer} sdv_852: int;
  var {:pointer} Tmp_2618: int;
  var {:pointer} Tmp_2619: int;
  var {:scalar} status_78: int;
  var {:pointer} Tmp_2620: int;
  var {:pointer} Tmp_2621: int;
  var {:pointer} Tmp_2622: int;
  var {:pointer} PdoExtension_28: int;
  var vslice_dummy_var_503: int;

  anon0:
    call {:si_unique_call 3178} orbLock_11 := __HAVOC_malloc(12);
    PdoExtension_28 := actual_PdoExtension_28;
    call {:si_unique_call 3179} Tmp_2610 := __HAVOC_malloc(1856);
    call {:si_unique_call 3180} Tmp_2613 := __HAVOC_malloc(4);
    call {:si_unique_call 3181} Tmp_2620 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_11 != 0;
    assume orbLock_11 > 0;
    assume {:nonnull} orbLock_11 != 0;
    assume orbLock_11 > 0;
    assume {:nonnull} orbLock_11 != 0;
    assume orbLock_11 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc deviceObject_3;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_2607 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    assume false;
    return;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_28: int) returns (Tmp_2607: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2607 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_28: int) returns (Tmp_2607: int)
{
  var {:scalar} i_9: int;
  var {:pointer} Tmp_2608: int;
  var {:pointer} Tmp_2610: int;
  var {:pointer} Tmp_2611: int;
  var {:pointer} deviceObject_3: int;
  var {:scalar} Tmp_2612: int;
  var {:pointer} Tmp_2613: int;
  var {:scalar} orbLock_11: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2614: int;
  var {:scalar} Tmp_2615: int;
  var {:pointer} Tmp_2616: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2617: int;
  var {:pointer} sdv_851: int;
  var {:pointer} sdv_852: int;
  var {:pointer} Tmp_2618: int;
  var {:pointer} Tmp_2619: int;
  var {:scalar} status_78: int;
  var {:pointer} Tmp_2620: int;
  var {:pointer} Tmp_2621: int;
  var {:pointer} Tmp_2622: int;
  var {:pointer} PdoExtension_28: int;
  var vslice_dummy_var_504: int;

  anon0:
    call {:si_unique_call 3182} orbLock_11 := __HAVOC_malloc(12);
    PdoExtension_28 := actual_PdoExtension_28;
    call {:si_unique_call 3183} Tmp_2610 := __HAVOC_malloc(1856);
    call {:si_unique_call 3184} Tmp_2613 := __HAVOC_malloc(4);
    call {:si_unique_call 3185} Tmp_2620 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_11 != 0;
    assume orbLock_11 > 0;
    assume {:nonnull} orbLock_11 != 0;
    assume orbLock_11 > 0;
    assume {:nonnull} orbLock_11 != 0;
    assume orbLock_11 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc deviceObject_3;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_2607 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    call {:si_unique_call 3186} CleanupOrbList#0(PdoExtension_28, -1073741248);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3187} status_78 := Sbp2UpdateNodeInformation#1(PdoExtension_28);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_78 < 0;
    goto L70;

  L70:
    Tmp_2607 := status_78;
    goto L1;

  anon61_Then:
    assume {:partition} 0 <= status_78;
    call {:si_unique_call 3188} status_78 := Sbp2GetControllerInfo#1(PdoExtension_28);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_78 < 0;
    goto L70;

  anon62_Then:
    assume {:partition} 0 <= status_78;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L37;

  L37:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L41;

  L41:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L45;

  L45:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L53;

  L53:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    i_9 := 0;
    goto L56;

  L56:
    call {:si_unique_call 3189} i_9, context_4 := Sbp2InitializeDeviceExtension#1_loop_L56(i_9, context_4, PdoExtension_28);
    goto L56_last;

  L56_last:
    assume {:CounterLoop 8} {:Counter "i_9"} true;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} 8 > i_9;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc context_4;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_9 := i_9 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:partition} i_9 >= 8;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L69;

  L69:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_2613;
    assume {:nonnull} Tmp_2613 != 0;
    assume Tmp_2613 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2613], 1) != 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_2617;
    havoc Tmp_2614;
    call {:si_unique_call 3190} WPP_SF_q(Tmp_2614, 30, Tmp_2617, PdoExtension_28);
    goto L70;

  anon69_Then:
    goto L70;

  anon83_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_2613], 1) == 0;
    goto L70;

  anon68_Then:
    goto L70;

  anon82_Then:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3191} status_78 := AllocateSingle1394Address#1(deviceObject_3, Dummy__DEVICE_EXTENSION(PdoExtension_28), 40, 3, DummyContext__DEVICE_EXTENSION(PdoExtension_28));
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_78 < 0;
    goto L70;

  anon70_Then:
    assume {:partition} 0 <= status_78;
    goto L69;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    status_78 := -1073741670;
    goto L70;

  anon81_Then:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3192} status_78 := AllocateSingle1394Address#1(deviceObject_3, 0, 536, 3, CommonBufferContext__DEVICE_EXTENSION(PdoExtension_28));
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_78 >= 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2611;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} Tmp_2611 != 0;
    assume Tmp_2611 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2618;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} Tmp_2618 != 0;
    assume Tmp_2618 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2622;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} Tmp_2622 != 0;
    assume Tmp_2622 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2616;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} Tmp_2616 != 0;
    assume Tmp_2616 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2619;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} Tmp_2619 != 0;
    assume Tmp_2619 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3193} AcquireOrbListLock(PdoExtension_28, orbLock_11, 0);
    i_9 := 0;
    context_4 := 0;
    goto L105;

  L105:
    call {:si_unique_call 3194} i_9, Tmp_2608, Tmp_2610, Tmp_2612, context_4, Tmp_2615, oldContext, sdv_851, sdv_852, Tmp_2620, Tmp_2621 := Sbp2InitializeDeviceExtension#1_loop_L105(i_9, Tmp_2608, Tmp_2610, Tmp_2612, context_4, Tmp_2615, oldContext, sdv_851, sdv_852, Tmp_2620, Tmp_2621, PdoExtension_28);
    goto L105_last;

  L105_last:
    assume {:CounterLoop 8} {:Counter "i_9"} true;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} 8 > i_9;
    oldContext := context_4;
    call {:si_unique_call 3195} sdv_852 := sdv_ExInterlockedPopEntrySList(0, 0);
    context_4 := sdv_852;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} context_4 != 0;
    call {:si_unique_call 3196} sdv_851 := sdv_containing_record(context_4, 8);
    context_4 := sdv_851;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} context_4 != 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2615 := i_9;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2621;
    assume {:nonnull} Tmp_2621 != 0;
    assume Tmp_2621 > 0;
    havoc Tmp_2620;
    assume {:nonnull} Tmp_2620 != 0;
    assume Tmp_2620 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2612 := i_9;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    havoc Tmp_2608;
    assume {:nonnull} Tmp_2608 != 0;
    assume Tmp_2608 > 0;
    havoc Tmp_2610;
    assume {:nonnull} Tmp_2610 != 0;
    assume Tmp_2610 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_9 := i_9 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    assume false;
    return;

  anon87_Then:
    assume {:partition} context_4 == 0;
    status_78 := -1073741670;
    call {:si_unique_call 3197} ReleaseOrbListLock(PdoExtension_28, orbLock_11, 0);
    goto L70;

  anon86_Then:
    assume {:partition} context_4 == 0;
    status_78 := -1073741670;
    call {:si_unique_call 3198} ReleaseOrbListLock(PdoExtension_28, orbLock_11, 0);
    goto L70;

  anon72_Then:
    assume {:partition} i_9 >= 8;
    goto L106;

  L106:
    call {:si_unique_call 3199} context_4, oldContext, vslice_dummy_var_504 := Sbp2InitializeDeviceExtension#1_loop_L106(context_4, oldContext, vslice_dummy_var_504);
    goto L106_last;

  L106_last:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} context_4 != 0;
    oldContext := context_4;
    call {:si_unique_call 3200} vslice_dummy_var_504 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    havoc context_4;
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    assume false;
    return;

  anon73_Then:
    assume {:partition} context_4 == 0;
    call {:si_unique_call 3201} ReleaseOrbListLock(PdoExtension_28, orbLock_11, 0);
    goto L53;

  anon71_Then:
    assume {:partition} 0 > status_78;
    goto L70;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3202} status_78 := AllocateAddressForStatus#1(deviceObject_3, GlobalStatusContext__DEVICE_EXTENSION(PdoExtension_28), 8);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} status_78 < 0;
    goto L70;

  anon74_Then:
    assume {:partition} 0 <= status_78;
    goto L45;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3203} status_78 := AllocateAddressForStatus#1(deviceObject_3, ManagementOrbStatusContext__DEVICE_EXTENSION(PdoExtension_28), 4);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_78 < 0;
    goto L70;

  anon75_Then:
    assume {:partition} 0 <= status_78;
    goto L41;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension_28 != 0;
    assume PdoExtension_28 > 0;
    call {:si_unique_call 3204} status_78 := AllocateAddressForStatus#1(deviceObject_3, TaskOrbStatusContext__DEVICE_EXTENSION(PdoExtension_28), 2);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_78 < 0;
    goto L70;

  anon76_Then:
    assume {:partition} 0 <= status_78;
    goto L37;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_28: int) returns (Tmp_2607: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_28: int, actual_Context_15: int, actual_StatusType: int) returns (Tmp_1478: int)
{
  var {:pointer} Tmp_1479: int;
  var {:pointer} Tmp_1480: int;
  var {:pointer} Tmp_1481: int;
  var {:pointer} Tmp_1482: int;
  var {:pointer} Tmp_1483: int;
  var {:pointer} Tmp_1484: int;
  var {:pointer} Tmp_1486: int;
  var {:pointer} Tmp_1487: int;
  var {:pointer} Tmp_1488: int;
  var {:pointer} Tmp_1489: int;
  var {:pointer} Tmp_1490: int;
  var {:pointer} Tmp_1491: int;
  var {:pointer} Tmp_1492: int;
  var {:pointer} Tmp_1493: int;
  var {:pointer} Tmp_1494: int;
  var {:pointer} Tmp_1495: int;
  var {:pointer} Tmp_1496: int;
  var {:scalar} status_41: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1497: int;
  var {:pointer} Tmp_1498: int;
  var {:pointer} Tmp_1499: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1500: int;
  var {:pointer} Tmp_1501: int;
  var {:pointer} Tmp_1502: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Context_15: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_364: int;

  anon0:
    call {:si_unique_call 3205} packet_11 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    Context_15 := actual_Context_15;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3206} AllocateIrpAndIrb(deviceExtension_3, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1494;
    assume {:nonnull} Tmp_1494 != 0;
    assume Tmp_1494 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1488;
    assume {:nonnull} Tmp_1488 != 0;
    assume Tmp_1488 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1483;
    assume {:nonnull} Tmp_1483 != 0;
    assume Tmp_1483 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1490;
    assume {:nonnull} Tmp_1490 != 0;
    assume Tmp_1490 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1495;
    assume {:nonnull} Tmp_1495 != 0;
    assume Tmp_1495 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1484;
    assume {:nonnull} Tmp_1484 != 0;
    assume Tmp_1484 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1489;
    assume {:nonnull} Tmp_1489 != 0;
    assume Tmp_1489 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1480;
    assume {:nonnull} Tmp_1480 != 0;
    assume Tmp_1480 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1498;
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1491;
    assume {:nonnull} Tmp_1491 != 0;
    assume Tmp_1491 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1487;
    assume {:nonnull} Tmp_1487 != 0;
    assume Tmp_1487 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1493;
    assume {:nonnull} Tmp_1493 != 0;
    assume Tmp_1493 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1481;
    assume {:nonnull} Tmp_1481 != 0;
    assume Tmp_1481 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} StatusType != 2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} StatusType != 4;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1482;
    assume {:nonnull} Tmp_1482 != 0;
    assume Tmp_1482 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1492;
    assume {:nonnull} Tmp_1492 != 0;
    assume Tmp_1492 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1492 != 0;
    assume Tmp_1492 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1479;
    assume {:nonnull} Tmp_1479 != 0;
    assume Tmp_1479 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1501;
    assume {:nonnull} Tmp_1501 != 0;
    assume Tmp_1501 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L55;

  L55:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1502;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1502 != 0;
    assume Tmp_1502 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1500;
    assume {:nonnull} Tmp_1500 != 0;
    assume Tmp_1500 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1486;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1486 != 0;
    assume Tmp_1486 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume false;
    return;

  anon20_Then:
    goto L55;

  anon24_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon25_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1496;
    assume {:nonnull} Tmp_1496 != 0;
    assume Tmp_1496 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 3207} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_41 := -1073741670;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_364;
    call {:si_unique_call 3208} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_364);
    Tmp_1478 := status_41;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon21_Then:
    goto L27;

  anon26_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1499;
    assume {:nonnull} Tmp_1499 != 0;
    assume Tmp_1499 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 3209} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_41 := -1073741670;
    goto L43;

  anon22_Then:
    goto L27;

  anon19_Then:
    Tmp_1478 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_28: int, actual_Context_15: int, actual_StatusType: int) returns (Tmp_1478: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1478 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_28: int, actual_Context_15: int, actual_StatusType: int) returns (Tmp_1478: int)
{
  var {:pointer} Tmp_1479: int;
  var {:pointer} Tmp_1480: int;
  var {:pointer} Tmp_1481: int;
  var {:pointer} Tmp_1482: int;
  var {:pointer} Tmp_1483: int;
  var {:pointer} Tmp_1484: int;
  var {:pointer} Tmp_1486: int;
  var {:pointer} Tmp_1487: int;
  var {:pointer} Tmp_1488: int;
  var {:pointer} Tmp_1489: int;
  var {:pointer} Tmp_1490: int;
  var {:pointer} Tmp_1491: int;
  var {:pointer} Tmp_1492: int;
  var {:pointer} Tmp_1493: int;
  var {:pointer} Tmp_1494: int;
  var {:pointer} Tmp_1495: int;
  var {:pointer} Tmp_1496: int;
  var {:scalar} status_41: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1497: int;
  var {:pointer} Tmp_1498: int;
  var {:pointer} Tmp_1499: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1500: int;
  var {:pointer} Tmp_1501: int;
  var {:pointer} Tmp_1502: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Context_15: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;

  anon0:
    call {:si_unique_call 3210} packet_11 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    Context_15 := actual_Context_15;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc deviceExtension_3;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3211} AllocateIrpAndIrb(deviceExtension_3, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1494;
    assume {:nonnull} Tmp_1494 != 0;
    assume Tmp_1494 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1488;
    assume {:nonnull} Tmp_1488 != 0;
    assume Tmp_1488 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1483;
    assume {:nonnull} Tmp_1483 != 0;
    assume Tmp_1483 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1490;
    assume {:nonnull} Tmp_1490 != 0;
    assume Tmp_1490 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1495;
    assume {:nonnull} Tmp_1495 != 0;
    assume Tmp_1495 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1484;
    assume {:nonnull} Tmp_1484 != 0;
    assume Tmp_1484 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1489;
    assume {:nonnull} Tmp_1489 != 0;
    assume Tmp_1489 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1480;
    assume {:nonnull} Tmp_1480 != 0;
    assume Tmp_1480 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1498;
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1491;
    assume {:nonnull} Tmp_1491 != 0;
    assume Tmp_1491 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1487;
    assume {:nonnull} Tmp_1487 != 0;
    assume Tmp_1487 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1493;
    assume {:nonnull} Tmp_1493 != 0;
    assume Tmp_1493 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1481;
    assume {:nonnull} Tmp_1481 != 0;
    assume Tmp_1481 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} StatusType != 2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} StatusType != 4;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1482;
    assume {:nonnull} Tmp_1482 != 0;
    assume Tmp_1482 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1492;
    assume {:nonnull} Tmp_1492 != 0;
    assume Tmp_1492 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1492 != 0;
    assume Tmp_1492 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1479;
    assume {:nonnull} Tmp_1479 != 0;
    assume Tmp_1479 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1501;
    assume {:nonnull} Tmp_1501 != 0;
    assume Tmp_1501 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L55;

  L55:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1502;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1502 != 0;
    assume Tmp_1502 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1500;
    assume {:nonnull} Tmp_1500 != 0;
    assume Tmp_1500 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1486;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1486 != 0;
    assume Tmp_1486 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_365;
    call {:si_unique_call 3212} status_41 := Sbp2SendRequest#0(deviceExtension_3, vslice_dummy_var_365, 2);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_41 >= 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1497;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1497 != 0;
    assume Tmp_1497 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_366;
    call {:si_unique_call 3213} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_366);
    Tmp_1478 := status_41;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} 0 > status_41;
    goto L43;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    goto L55;

  anon24_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon25_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1496;
    assume {:nonnull} Tmp_1496 != 0;
    assume Tmp_1496 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 3214} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_41 := -1073741670;
    goto L43;

  anon21_Then:
    goto L27;

  anon26_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1499;
    assume {:nonnull} Tmp_1499 != 0;
    assume Tmp_1499 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 3215} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_41 := -1073741670;
    goto L43;

  anon22_Then:
    goto L27;

  anon19_Then:
    Tmp_1478 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_28: int, actual_Context_15: int, actual_StatusType: int) returns (Tmp_1478: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_27: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_13: int) returns (Tmp_1386: int)
{
  var {:pointer} Tmp_1387: int;
  var {:pointer} Tmp_1388: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:pointer} Tmp_1392: int;
  var {:pointer} Tmp_1393: int;
  var {:pointer} Tmp_1394: int;
  var {:pointer} Tmp_1395: int;
  var {:pointer} Tmp_1396: int;
  var {:pointer} Tmp_1397: int;
  var {:pointer} Tmp_1398: int;
  var {:pointer} Tmp_1399: int;
  var {:pointer} Tmp_1400: int;
  var {:pointer} Tmp_1401: int;
  var {:pointer} Tmp_1402: int;
  var {:pointer} Tmp_1403: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_37: int;
  var {:pointer} Tmp_1404: int;
  var {:pointer} Tmp_1405: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1407: int;
  var {:pointer} Tmp_1408: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_13: int;
  var boogieTmp: int;
  var vslice_dummy_var_367: int;

  anon0:
    call {:si_unique_call 3216} packet_9 := __HAVOC_malloc(4);
    DeviceObject_27 := actual_DeviceObject_27;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_13 := actual_Context_13;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc deviceExtension_2;
    call {:si_unique_call 3217} AllocateIrpAndIrb(deviceExtension_2, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1388;
    assume {:nonnull} Tmp_1388 != 0;
    assume Tmp_1388 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1397;
    assume {:nonnull} Tmp_1397 != 0;
    assume Tmp_1397 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1387;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1405;
    assume {:nonnull} Tmp_1405 != 0;
    assume Tmp_1405 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1398;
    assume {:nonnull} Tmp_1398 != 0;
    assume Tmp_1398 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1396;
    assume {:nonnull} Tmp_1396 != 0;
    assume Tmp_1396 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1399;
    assume {:nonnull} Tmp_1399 != 0;
    assume Tmp_1399 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1401;
    assume {:nonnull} Tmp_1401 != 0;
    assume Tmp_1401 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1389;
    assume {:nonnull} Tmp_1389 != 0;
    assume Tmp_1389 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1403;
    assume {:nonnull} Tmp_1403 != 0;
    assume Tmp_1403 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1407;
    assume {:nonnull} Tmp_1407 != 0;
    assume Tmp_1407 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1390;
    assume {:nonnull} Tmp_1390 != 0;
    assume Tmp_1390 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1400;
    assume {:nonnull} Tmp_1400 != 0;
    assume Tmp_1400 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1392;
    assume {:nonnull} Tmp_1392 != 0;
    assume Tmp_1392 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1391;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_1391 != 0;
    assume Tmp_1391 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1402;
    assume {:nonnull} Tmp_1402 != 0;
    assume Tmp_1402 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    call {:si_unique_call 3218} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1395;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_1395 != 0;
    assume Tmp_1395 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    assume false;
    return;

  anon14_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_367;
    call {:si_unique_call 3219} DeAllocateIrpAndIrb(deviceExtension_2, vslice_dummy_var_367);
    Tmp_1386 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1408;
    assume {:nonnull} Tmp_1408 != 0;
    assume Tmp_1408 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1394;
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    goto L43;

  anon13_Then:
    Tmp_1386 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_27: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_13: int) returns (Tmp_1386: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1386 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_27: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_13: int) returns (Tmp_1386: int)
{
  var {:pointer} Tmp_1387: int;
  var {:pointer} Tmp_1388: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:pointer} Tmp_1392: int;
  var {:pointer} Tmp_1393: int;
  var {:pointer} Tmp_1394: int;
  var {:pointer} Tmp_1395: int;
  var {:pointer} Tmp_1396: int;
  var {:pointer} Tmp_1397: int;
  var {:pointer} Tmp_1398: int;
  var {:pointer} Tmp_1399: int;
  var {:pointer} Tmp_1400: int;
  var {:pointer} Tmp_1401: int;
  var {:pointer} Tmp_1402: int;
  var {:pointer} Tmp_1403: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_37: int;
  var {:pointer} Tmp_1404: int;
  var {:pointer} Tmp_1405: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1407: int;
  var {:pointer} Tmp_1408: int;
  var {:pointer} DeviceObject_27: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_13: int;
  var boogieTmp: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;

  anon0:
    call {:si_unique_call 3220} packet_9 := __HAVOC_malloc(4);
    DeviceObject_27 := actual_DeviceObject_27;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_13 := actual_Context_13;
    assume {:nonnull} DeviceObject_27 != 0;
    assume DeviceObject_27 > 0;
    havoc deviceExtension_2;
    call {:si_unique_call 3221} AllocateIrpAndIrb(deviceExtension_2, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1388;
    assume {:nonnull} Tmp_1388 != 0;
    assume Tmp_1388 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1397;
    assume {:nonnull} Tmp_1397 != 0;
    assume Tmp_1397 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1387;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1405;
    assume {:nonnull} Tmp_1405 != 0;
    assume Tmp_1405 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1398;
    assume {:nonnull} Tmp_1398 != 0;
    assume Tmp_1398 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1396;
    assume {:nonnull} Tmp_1396 != 0;
    assume Tmp_1396 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1399;
    assume {:nonnull} Tmp_1399 != 0;
    assume Tmp_1399 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1401;
    assume {:nonnull} Tmp_1401 != 0;
    assume Tmp_1401 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1389;
    assume {:nonnull} Tmp_1389 != 0;
    assume Tmp_1389 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1403;
    assume {:nonnull} Tmp_1403 != 0;
    assume Tmp_1403 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1407;
    assume {:nonnull} Tmp_1407 != 0;
    assume Tmp_1407 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1390;
    assume {:nonnull} Tmp_1390 != 0;
    assume Tmp_1390 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1400;
    assume {:nonnull} Tmp_1400 != 0;
    assume Tmp_1400 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1392;
    assume {:nonnull} Tmp_1392 != 0;
    assume Tmp_1392 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1391;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_1391 != 0;
    assume Tmp_1391 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1402;
    assume {:nonnull} Tmp_1402 != 0;
    assume Tmp_1402 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    call {:si_unique_call 3222} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1395;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_1395 != 0;
    assume Tmp_1395 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_368;
    call {:si_unique_call 3223} status_37 := Sbp2SendRequest#0(deviceExtension_2, vslice_dummy_var_368, 2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_37 >= 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1393;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_1393 != 0;
    assume Tmp_1393 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1404;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    call {:si_unique_call 3224} boogieTmp := sdv_MmGetMdlVirtualAddress(0);
    goto L48;

  L48:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_369;
    call {:si_unique_call 3225} DeAllocateIrpAndIrb(deviceExtension_2, vslice_dummy_var_369);
    Tmp_1386 := status_37;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} Buffer != 0;
    goto L48;

  anon15_Then:
    assume {:partition} 0 > status_37;
    goto L48;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_370;
    call {:si_unique_call 3226} DeAllocateIrpAndIrb(deviceExtension_2, vslice_dummy_var_370);
    Tmp_1386 := -1073741670;
    goto L1;

  anon16_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1408;
    assume {:nonnull} Tmp_1408 != 0;
    assume Tmp_1408 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1394;
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    goto L43;

  anon13_Then:
    Tmp_1386 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_27: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_13: int) returns (Tmp_1386: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_646: int;
  var {:scalar} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:pointer} sdv_202: int;
  var {:scalar} sdv_203: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_205: int;
  var {:pointer} sdv_206: int;
  var {:scalar} sdv_207: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_650: int;
  var {:scalar} sdv_208: int;
  var {:scalar} status_17: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} PdoExtension_10: int;

  anon0:
    call {:si_unique_call 3227} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 3228} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 3229} Tmp_646 := __HAVOC_malloc(4);
    call {:si_unique_call 3230} Tmp_648 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 3231} status_17 := Sbp2GetGenerationCount#0(PdoExtension_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_17 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_646], 1) != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_640;
    havoc Tmp_645;
    call {:si_unique_call 3232} WPP_SF_qD(Tmp_645, 61, Tmp_640, PdoExtension_10, status_17);
    goto L95;

  L95:
    Tmp_638 := status_17;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L95;

  anon39_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_646], 1) == 0;
    goto L95;

  anon34_Then:
    goto L95;

  anon27_Then:
    assume {:partition} 0 <= status_17;
    call {:si_unique_call 3233} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume false;
    return;

  anon28_Then:
    Tmp_638 := -1073741670;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_638: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_646: int;
  var {:scalar} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:pointer} sdv_202: int;
  var {:scalar} sdv_203: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_205: int;
  var {:pointer} sdv_206: int;
  var {:scalar} sdv_207: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_650: int;
  var {:scalar} sdv_208: int;
  var {:scalar} status_17: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} PdoExtension_10: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;

  anon0:
    call {:si_unique_call 3234} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 3235} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 3236} Tmp_646 := __HAVOC_malloc(4);
    call {:si_unique_call 3237} Tmp_648 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 3238} status_17 := Sbp2GetGenerationCount#1(PdoExtension_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_17 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_646], 1) != 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_640;
    havoc Tmp_645;
    call {:si_unique_call 3239} WPP_SF_qD(Tmp_645, 61, Tmp_640, PdoExtension_10, status_17);
    goto L95;

  L95:
    Tmp_638 := status_17;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L95;

  anon39_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_646], 1) == 0;
    goto L95;

  anon34_Then:
    goto L95;

  anon27_Then:
    assume {:partition} 0 <= status_17;
    call {:si_unique_call 3240} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_371;
    call {:si_unique_call 3241} status_17 := Sbp2SendRequest#0(PdoExtension_10, vslice_dummy_var_371, 2);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_17 < 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_648;
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_648], 1) != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_649;
    havoc Tmp_647;
    call {:si_unique_call 3242} WPP_SF_qD(Tmp_647, 62, Tmp_649, PdoExtension_10, status_17);
    goto L57;

  L57:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_372;
    call {:si_unique_call 3243} DeAllocateIrpAndIrb(PdoExtension_10, vslice_dummy_var_372);
    Tmp_638 := status_17;
    goto L1;

  anon33_Then:
    goto L57;

  anon38_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_648], 1) == 0;
    goto L57;

  anon32_Then:
    goto L57;

  anon29_Then:
    assume {:partition} 0 <= status_17;
    call {:si_unique_call 3244} Tmp_639 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    Mem_T.INT4[Tmp_639] := oldIrql_2;
    call {:si_unique_call 3245} sdv_KeAcquireSpinLock(0, Tmp_639);
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    oldIrql_2 := Mem_T.INT4[Tmp_639];
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_644;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    call {:si_unique_call 3246} sdv_KeReleaseSpinLock(0, oldIrql_2);
    call {:si_unique_call 3247} AcquireOrbListLock(PdoExtension_10, orbLock_2, 0);
    call {:si_unique_call 3248} sdv_205 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_205 != 0;
    goto L54;

  L54:
    call {:si_unique_call 3249} ReleaseOrbListLock(PdoExtension_10, orbLock_2, 0);
    goto L57;

  anon30_Then:
    assume {:partition} sdv_205 == 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_373;
    call {:si_unique_call 3250} sdv_206 := sdv_containing_record(vslice_dummy_var_373, 0);
    nextListItem_1 := sdv_206;
    goto L62;

  L62:
    call {:si_unique_call 3251} nextListItem_1, Tmp_643, sdv_202, currentListItem, Tmp_650, Tmp_651, Tmp_652, Tmp_654 := Sbp2UpdateNodeInformation#1_loop_L62(nextListItem_1, Tmp_643, sdv_201, sdv_202, sdv_203, sdv_207, currentListItem, Tmp_650, sdv_208, Tmp_651, Tmp_652, Tmp_654, PdoExtension_10);
    goto L62_last;

  L62_last:
    currentListItem := nextListItem_1;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_651;
    assume {:nonnull} Tmp_651 != 0;
    assume Tmp_651 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_650;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_652;
    assume {:nonnull} Tmp_652 != 0;
    assume Tmp_652 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc nextListItem_1;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_374;
    call {:si_unique_call 3252} sdv_202 := sdv_containing_record(vslice_dummy_var_374, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} currentListItem != sdv_202;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} currentListItem == sdv_202;
    goto L54;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    Tmp_638 := -1073741670;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_638: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_655: int)
{
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_18: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_505: int;

  anon0:
    call {:si_unique_call 3253} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    status_18 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 3254} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    Mem_T.INT4[Tmp_656] := oldIrql_3;
    call {:si_unique_call 3255} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_656];
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3256} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_655 := status_18;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 3257} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_658;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    assume false;
    return;

  anon11_Then:
    Tmp_655 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_655: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_655 == 0 || Tmp_655 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_655: int)
{
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_18: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;

  anon0:
    call {:si_unique_call 3258} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    status_18 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 3259} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    Mem_T.INT4[Tmp_656] := oldIrql_3;
    call {:si_unique_call 3260} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_656];
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3261} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_655 := status_18;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 3262} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_658;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_375;
    call {:si_unique_call 3263} status_18 := Sbp2SendRequest#0(PdoExtension_11, vslice_dummy_var_375, 2);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_18 >= 0;
    call {:si_unique_call 3264} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    Mem_T.INT4[Tmp_656] := oldIrql_3;
    call {:si_unique_call 3265} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_656];
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_659;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    call {:si_unique_call 3266} sdv_KeReleaseSpinLock(0, oldIrql_3);
    goto L39;

  L39:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_376;
    call {:si_unique_call 3267} DeAllocateIrpAndIrb(PdoExtension_11, vslice_dummy_var_376);
    Tmp_655 := status_18;
    goto L1;

  anon12_Then:
    assume {:partition} 0 > status_18;
    call {:si_unique_call 3268} vslice_dummy_var_506 := IsDeviceGone#1(PdoExtension_11, status_18);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    Tmp_655 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_655: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_36: int) returns (Tmp_1381: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_36: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_36 := actual_status_36;
    bInvalidate := 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_36 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L11;

  L11:
    assume false;
    return;

  anon14_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon13_Then:
    goto L7;

  L7:
    Tmp_1381 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} status_36 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_36: int) returns (Tmp_1381: int);
  free ensures {:va_keep} Tmp_1381 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_36: int) returns (Tmp_1381: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_36: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_36 := actual_status_36;
    bInvalidate := 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_36 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L11;

  L11:
    call {:si_unique_call 3269} CleanupOrbList#0(PdoExtension_17, status_36);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3270} Sbp2StartQueue#1(PdoExtension_17);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} bInvalidate != 0;
    call {:si_unique_call 3271} IoInvalidateDeviceState(0);
    call {:si_unique_call 3272} Sbp2AddLog(PdoExtension_17, 1, -914985884, PdoExtension_17, status_36);
    goto L18;

  L18:
    Tmp_1381 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} bInvalidate == 0;
    goto L18;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon13_Then:
    goto L7;

  L7:
    Tmp_1381 := 0;
    goto L1;

  anon16_Then:
    assume {:partition} status_36 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_36: int) returns (Tmp_1381: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1374: int;
  var {:pointer} sdv_471: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_5: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;

  anon0:
    call {:si_unique_call 3273} vslice_dummy_var_507 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3274} Tmp_1374 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    Mem_T.INT4[Tmp_1374] := irql_5;
    call {:si_unique_call 3275} sdv_KeAcquireSpinLock(0, Tmp_1374);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    irql_5 := Mem_T.INT4[Tmp_1374];
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3276} sdv_KeReleaseSpinLock(0, irql_5);
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 3277} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3278} Tmp_1374 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    Mem_T.INT4[Tmp_1374] := irql_5;
    call {:si_unique_call 3279} sdv_KeRaiseIrql(2, Tmp_1374);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    irql_5 := Mem_T.INT4[Tmp_1374];
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3280} sdv_471 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_471;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_377;
    call {:si_unique_call 3281} Sbp2StartIo#0(vslice_dummy_var_377, pIrp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 3282} sdv_KeLowerIrql(irql_5);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_378;
    havoc vslice_dummy_var_379;
    call {:si_unique_call 3283} Sbp2StartNextPacketByKey#0(vslice_dummy_var_378, vslice_dummy_var_379);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 3284} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3285} Tmp_1374 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    Mem_T.INT4[Tmp_1374] := irql_5;
    call {:si_unique_call 3286} sdv_KeRaiseIrql(2, Tmp_1374);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    irql_5 := Mem_T.INT4[Tmp_1374];
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_380;
    havoc vslice_dummy_var_381;
    call {:si_unique_call 3287} Sbp2StartNextPacketByKey#0(vslice_dummy_var_380, vslice_dummy_var_381);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1374: int;
  var {:pointer} sdv_471: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_5: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;

  anon0:
    call {:si_unique_call 3288} vslice_dummy_var_508 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3289} Tmp_1374 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    Mem_T.INT4[Tmp_1374] := irql_5;
    call {:si_unique_call 3290} sdv_KeAcquireSpinLock(0, Tmp_1374);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    irql_5 := Mem_T.INT4[Tmp_1374];
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3291} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3292} vslice_dummy_var_509 := Sbp2RestartPendingPowerIrp#0(PdoExtension_16);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 3293} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3294} Tmp_1374 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    Mem_T.INT4[Tmp_1374] := irql_5;
    call {:si_unique_call 3295} sdv_KeRaiseIrql(2, Tmp_1374);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    irql_5 := Mem_T.INT4[Tmp_1374];
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3296} sdv_471 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_471;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_382;
    call {:si_unique_call 3297} Sbp2StartIo#1(vslice_dummy_var_382, pIrp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 3298} sdv_KeLowerIrql(irql_5);
    goto L1;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_383;
    havoc vslice_dummy_var_384;
    call {:si_unique_call 3299} Sbp2StartNextPacketByKey#1(vslice_dummy_var_383, vslice_dummy_var_384);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 3300} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3301} Tmp_1374 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    Mem_T.INT4[Tmp_1374] := irql_5;
    call {:si_unique_call 3302} sdv_KeRaiseIrql(2, Tmp_1374);
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    irql_5 := Mem_T.INT4[Tmp_1374];
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_385;
    havoc vslice_dummy_var_386;
    call {:si_unique_call 3303} Sbp2StartNextPacketByKey#1(vslice_dummy_var_385, vslice_dummy_var_386);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_560: int)
{
  var {:scalar} Tmp_561: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} Tmp_565: int;
  var {:pointer} Tmp_567: int;
  var {:scalar} Tmp_568: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_569: int;
  var {:pointer} Tmp_570: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_510: int;

  anon0:
    call {:si_unique_call 3304} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3305} Tmp_567 := __HAVOC_malloc(4);
    call {:si_unique_call 3306} Tmp_570 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3307} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_562;
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_565;
    assume {:nonnull} Tmp_565 != 0;
    assume Tmp_565 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_563;
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_567;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_567], 1) != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_569;
    havoc Tmp_561;
    call {:si_unique_call 3308} WPP_SF_q(Tmp_561, 10, Tmp_569, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3309} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume false;
    return;

  anon24_Then:
    goto L18;

  anon29_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_567], 1) == 0;
    goto L18;

  anon28_Then:
    goto L18;

  anon23_Then:
    Tmp_560 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_560: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_560 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_560: int)
{
  var {:scalar} Tmp_561: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} Tmp_565: int;
  var {:pointer} Tmp_567: int;
  var {:scalar} Tmp_568: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_569: int;
  var {:pointer} Tmp_570: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;

  anon0:
    call {:si_unique_call 3310} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3311} Tmp_567 := __HAVOC_malloc(4);
    call {:si_unique_call 3312} Tmp_570 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3313} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_562;
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_565;
    assume {:nonnull} Tmp_565 != 0;
    assume Tmp_565 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_563;
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_567;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_567], 1) != 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_569;
    havoc Tmp_561;
    call {:si_unique_call 3314} WPP_SF_q(Tmp_561, 10, Tmp_569, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3315} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_387;
    call {:si_unique_call 3316} status_13 := Sbp2SendRequest#0(PdoExtension_5, vslice_dummy_var_387, 2);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_13 >= 0;
    goto L37;

  L37:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_388;
    call {:si_unique_call 3317} DeAllocateIrpAndIrb(PdoExtension_5, vslice_dummy_var_388);
    Tmp_560 := status_13;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} 0 > status_13;
    call {:si_unique_call 3318} vslice_dummy_var_511 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_570;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_570], 1) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_564;
    havoc Tmp_568;
    call {:si_unique_call 3319} WPP_SF_qD(Tmp_568, 11, Tmp_564, PdoExtension_5, status_13);
    goto L46;

  L46:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 3320} Sbp2StartQueue#1(PdoExtension_5);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    goto L37;

  anon27_Then:
    goto L46;

  anon32_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_570], 1) == 0;
    goto L46;

  anon31_Then:
    goto L46;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    goto L18;

  anon29_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_567], 1) == 0;
    goto L18;

  anon28_Then:
    goto L18;

  anon23_Then:
    Tmp_560 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_560: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:pointer} Tmp_1934: int;
  var {:scalar} Tmp_1935: int;
  var {:pointer} Tmp_1937: int;
  var {:scalar} irql_6: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_1: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_389: int;

  anon0:
    call {:si_unique_call 3321} vslice_dummy_var_512 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_1 := actual_Status_1;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3322} Tmp_1937 := __HAVOC_malloc(4);
    call {:si_unique_call 3323} Tmp_1933 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1933 != 0;
    assume Tmp_1933 > 0;
    Mem_T.INT4[Tmp_1933] := irql_6;
    call {:si_unique_call 3324} sdv_KeAcquireSpinLock(0, Tmp_1933);
    assume {:nonnull} Tmp_1933 != 0;
    assume Tmp_1933 > 0;
    irql_6 := Mem_T.INT4[Tmp_1933];
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3325} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_1, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1932;
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1932)], 32) != 0;
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3326} sdv_KeReleaseSpinLock(0, irql_6);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1937;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1937], 4) != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1934;
    havoc Tmp_1935;
    call {:si_unique_call 3327} WPP_SF_qDD(Tmp_1935, 42, Tmp_1934, PdoExtension_22, flags, Status_1);
    goto L29;

  L29:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3328} vslice_dummy_var_514 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3329} Sbp2StartQueue#0(PdoExtension_22);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3330} IoInvalidateDeviceState(0);
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon20_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_1 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_389;
    call {:si_unique_call 3331} Sbp2CreateRequestErrorLog(vslice_dummy_var_389, 0, ErrorId_1, Status_1);
    goto L38;

  anon22_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L38;

  anon21_Then:
    goto L29;

  anon26_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1937], 4) == 0;
    goto L29;

  anon19_Then:
    goto L29;

  anon25_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3332} vslice_dummy_var_513 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1932)], 32) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:pointer} Tmp_1934: int;
  var {:scalar} Tmp_1935: int;
  var {:pointer} Tmp_1937: int;
  var {:scalar} irql_6: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_1: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_390: int;

  anon0:
    call {:si_unique_call 3333} vslice_dummy_var_515 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_1 := actual_Status_1;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3334} Tmp_1937 := __HAVOC_malloc(4);
    call {:si_unique_call 3335} Tmp_1933 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1933 != 0;
    assume Tmp_1933 > 0;
    Mem_T.INT4[Tmp_1933] := irql_6;
    call {:si_unique_call 3336} sdv_KeAcquireSpinLock(0, Tmp_1933);
    assume {:nonnull} Tmp_1933 != 0;
    assume Tmp_1933 > 0;
    irql_6 := Mem_T.INT4[Tmp_1933];
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3337} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_1, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1932;
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1932)], 32) != 0;
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3338} sdv_KeReleaseSpinLock(0, irql_6);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1937;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1937], 4) != 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1934;
    havoc Tmp_1935;
    call {:si_unique_call 3339} WPP_SF_qDD(Tmp_1935, 42, Tmp_1934, PdoExtension_22, flags, Status_1);
    goto L29;

  L29:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3340} vslice_dummy_var_517 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3341} Sbp2StartQueue#1(PdoExtension_22);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3342} IoInvalidateDeviceState(0);
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon20_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_1 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_390;
    call {:si_unique_call 3343} Sbp2CreateRequestErrorLog(vslice_dummy_var_390, 0, ErrorId_1, Status_1);
    goto L38;

  anon22_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L38;

  anon21_Then:
    goto L29;

  anon26_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_1937], 4) == 0;
    goto L29;

  anon19_Then:
    goto L29;

  anon25_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3344} vslice_dummy_var_516 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(Tmp_1932)], 32) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int)
{
  var {:pointer} Tmp_414: int;
  var {:scalar} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:scalar} sdv_112: int;
  var {:scalar} sdv_115: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_426: int;
  var {:scalar} sdv_118: int;
  var {:scalar} Tmp_427: int;
  var {:pointer} Tmp_428: int;
  var {:scalar} sdv_119: int;
  var {:scalar} Tmp_429: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3345} Tmp_417 := __HAVOC_malloc(4);
    call {:si_unique_call 3346} Tmp_419 := __HAVOC_malloc(4);
    call {:si_unique_call 3347} Tmp_421 := __HAVOC_malloc(4);
    call {:si_unique_call 3348} Tmp_422 := __HAVOC_malloc(4);
    call {:si_unique_call 3349} Tmp_424 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3350} vslice_dummy_var_519 := sdv_KeGetCurrentIrql();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_422;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_422], 2048) != 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 3351} sdv_115 := GET_LUN(PdoExtension_3);
    havoc Tmp_428;
    havoc Tmp_427;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_391;
    call {:si_unique_call 3352} WPP_SF_qdD(Tmp_427, 80, Tmp_428, PdoExtension_3, sdv_115, vslice_dummy_var_391);
    goto L15;

  L15:
    call {:si_unique_call 3353} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_392;
    call {:si_unique_call 3354} sdv_116 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_392, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_116 == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_424;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_424], 2048) != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_423;
    havoc Tmp_429;
    call {:si_unique_call 3355} WPP_SF_q(Tmp_429, 81, Tmp_423, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3356} status_9 := Sbp2InitializeDeviceExtension#0(PdoExtension_3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_9 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_419;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_419], 2048) != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_426;
    havoc Tmp_415;
    call {:si_unique_call 3357} WPP_SF_qD(Tmp_415, 82, Tmp_426, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_413 := status_9;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L105;

  anon65_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_419], 2048) == 0;
    goto L105;

  anon54_Then:
    goto L105;

  anon48_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_414;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3358} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3359} vslice_dummy_var_518 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3360} status_9 := Sbp2AccessRegisterEx#0(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_417;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_417], 2048) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_425;
    havoc Tmp_430;
    call {:si_unique_call 3361} WPP_SF_qD(Tmp_430, 83, Tmp_425, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_9 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_421;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_421], 2048) != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_416;
    havoc Tmp_420;
    call {:si_unique_call 3362} WPP_SF_qD(Tmp_420, 84, Tmp_416, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3363} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3364} Sbp2ReconnectCompletion#0(PdoExtension_3, status_9);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    call {:si_unique_call 3365} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_413 := status_9;
    goto L1;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L91;

  anon63_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_421], 2048) == 0;
    goto L91;

  anon52_Then:
    goto L91;

  anon50_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon51_Then:
    goto L75;

  anon62_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_417], 2048) == 0;
    goto L75;

  anon49_Then:
    goto L75;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L35;

  anon66_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_424], 2048) == 0;
    goto L35;

  anon56_Then:
    goto L35;

  anon47_Then:
    assume {:partition} sdv_116 != 0;
    goto L35;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L15;

  anon58_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_422], 2048) == 0;
    goto L15;

  anon45_Then:
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int)
{
  var {:pointer} Tmp_414: int;
  var {:scalar} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:scalar} sdv_112: int;
  var {:scalar} sdv_115: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_426: int;
  var {:scalar} sdv_118: int;
  var {:scalar} Tmp_427: int;
  var {:pointer} Tmp_428: int;
  var {:scalar} sdv_119: int;
  var {:scalar} Tmp_429: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3366} Tmp_417 := __HAVOC_malloc(4);
    call {:si_unique_call 3367} Tmp_419 := __HAVOC_malloc(4);
    call {:si_unique_call 3368} Tmp_421 := __HAVOC_malloc(4);
    call {:si_unique_call 3369} Tmp_422 := __HAVOC_malloc(4);
    call {:si_unique_call 3370} Tmp_424 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3371} vslice_dummy_var_521 := sdv_KeGetCurrentIrql();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_422;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_422], 2048) != 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 3372} sdv_115 := GET_LUN(PdoExtension_3);
    havoc Tmp_428;
    havoc Tmp_427;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_393;
    call {:si_unique_call 3373} WPP_SF_qdD(Tmp_427, 80, Tmp_428, PdoExtension_3, sdv_115, vslice_dummy_var_393);
    goto L15;

  L15:
    call {:si_unique_call 3374} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_394;
    call {:si_unique_call 3375} sdv_116 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_394, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_116 == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_424;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_424], 2048) != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_423;
    havoc Tmp_429;
    call {:si_unique_call 3376} WPP_SF_q(Tmp_429, 81, Tmp_423, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3377} status_9 := Sbp2InitializeDeviceExtension#1(PdoExtension_3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_9 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_419;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_419], 2048) != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_426;
    havoc Tmp_415;
    call {:si_unique_call 3378} WPP_SF_qD(Tmp_415, 82, Tmp_426, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_413 := status_9;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L105;

  anon65_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_419], 2048) == 0;
    goto L105;

  anon54_Then:
    goto L105;

  anon48_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_414;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3379} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3380} vslice_dummy_var_520 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3381} status_9 := Sbp2AccessRegisterEx#1(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_417;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_417], 2048) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_425;
    havoc Tmp_430;
    call {:si_unique_call 3382} WPP_SF_qD(Tmp_430, 83, Tmp_425, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_9 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_421;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_421], 2048) != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_416;
    havoc Tmp_420;
    call {:si_unique_call 3383} WPP_SF_qD(Tmp_420, 84, Tmp_416, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3384} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3385} Sbp2ReconnectCompletion#1(PdoExtension_3, status_9);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    call {:si_unique_call 3386} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_413 := status_9;
    goto L1;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L91;

  anon63_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_421], 2048) == 0;
    goto L91;

  anon52_Then:
    goto L91;

  anon50_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon51_Then:
    goto L75;

  anon62_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_417], 2048) == 0;
    goto L75;

  anon49_Then:
    goto L75;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L35;

  anon66_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_424], 2048) == 0;
    goto L35;

  anon56_Then:
    goto L35;

  anon47_Then:
    assume {:partition} sdv_116 != 0;
    goto L35;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L15;

  anon58_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_422], 2048) == 0;
    goto L15;

  anon45_Then:
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:scalar} sdv_156: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_558: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;

  anon0:
    call {:si_unique_call 3387} vslice_dummy_var_522 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3388} Tmp_555 := __HAVOC_malloc(4);
    call {:si_unique_call 3389} Tmp_558 := __HAVOC_malloc(4);
    call {:si_unique_call 3390} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    Mem_T.INT4[Tmp_553] := irql_1;
    call {:si_unique_call 3391} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    irql_1 := Mem_T.INT4[Tmp_553];
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 3392} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    havoc Tmp_558;
    assume {:nonnull} Tmp_558 != 0;
    assume Tmp_558 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_558], 2048) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_554;
    havoc Tmp_552;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_395;
    call {:si_unique_call 3393} WPP_SF_qDD(Tmp_552, 78, Tmp_554, PdoExtension_4, NtStatus_1, vslice_dummy_var_395);
    goto L18;

  L18:
    call {:si_unique_call 3394} vslice_dummy_var_523 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_555;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_555], 2048) != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_559;
    havoc Tmp_556;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_396;
    call {:si_unique_call 3395} WPP_SF_qDD(Tmp_556, 79, Tmp_559, PdoExtension_4, NtStatus_1, vslice_dummy_var_396);
    goto L48;

  L48:
    call {:si_unique_call 3396} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3397} sdv_156 := IsDeviceGone#0(PdoExtension_4, NtStatus_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_156 == 0;
    call {:si_unique_call 3398} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    Mem_T.INT4[Tmp_553] := irql_1;
    call {:si_unique_call 3399} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    irql_1 := Mem_T.INT4[Tmp_553];
    call {:si_unique_call 3400} status_12 := Sbp2QueueManagementWorkItem(PdoExtension_4, 2, -1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3401} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3402} vslice_dummy_var_524 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3403} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon30_Then:
    assume {:partition} sdv_156 != 0;
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    goto L48;

  anon35_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_555], 2048) == 0;
    goto L48;

  anon28_Then:
    goto L48;

  anon33_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3404} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3405} Sbp2StartQueue#0(PdoExtension_4);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    goto L18;

  anon32_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_558], 2048) == 0;
    goto L18;

  anon26_Then:
    goto L18;

  anon25_Then:
    call {:si_unique_call 3406} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:scalar} sdv_156: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_558: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;

  anon0:
    call {:si_unique_call 3407} vslice_dummy_var_525 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3408} Tmp_555 := __HAVOC_malloc(4);
    call {:si_unique_call 3409} Tmp_558 := __HAVOC_malloc(4);
    call {:si_unique_call 3410} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    Mem_T.INT4[Tmp_553] := irql_1;
    call {:si_unique_call 3411} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    irql_1 := Mem_T.INT4[Tmp_553];
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 3412} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    havoc Tmp_558;
    assume {:nonnull} Tmp_558 != 0;
    assume Tmp_558 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_558], 2048) != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_554;
    havoc Tmp_552;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_397;
    call {:si_unique_call 3413} WPP_SF_qDD(Tmp_552, 78, Tmp_554, PdoExtension_4, NtStatus_1, vslice_dummy_var_397);
    goto L18;

  L18:
    call {:si_unique_call 3414} vslice_dummy_var_526 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_555;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_555], 2048) != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_559;
    havoc Tmp_556;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_398;
    call {:si_unique_call 3415} WPP_SF_qDD(Tmp_556, 79, Tmp_559, PdoExtension_4, NtStatus_1, vslice_dummy_var_398);
    goto L48;

  L48:
    call {:si_unique_call 3416} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3417} sdv_156 := IsDeviceGone#1(PdoExtension_4, NtStatus_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_156 == 0;
    call {:si_unique_call 3418} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    Mem_T.INT4[Tmp_553] := irql_1;
    call {:si_unique_call 3419} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    irql_1 := Mem_T.INT4[Tmp_553];
    call {:si_unique_call 3420} status_12 := Sbp2QueueManagementWorkItem(PdoExtension_4, 2, -1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3421} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3422} vslice_dummy_var_527 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3423} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon30_Then:
    assume {:partition} sdv_156 != 0;
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    goto L48;

  anon35_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_555], 2048) == 0;
    goto L48;

  anon28_Then:
    goto L48;

  anon33_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3424} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3425} Sbp2StartQueue#1(PdoExtension_4);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    goto L18;

  anon32_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_558], 2048) == 0;
    goto L18;

  anon26_Then:
    goto L18;

  anon25_Then:
    call {:si_unique_call 3426} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_30: int, actual_Irp_18: int, actual_Key_1: int)
{
  var {:pointer} irpStack_11: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_522: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1521: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Irp_18: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;

  anon0:
    call {:si_unique_call 3427} vslice_dummy_var_528 := __HAVOC_malloc(4);
    DeviceObject_30 := actual_DeviceObject_30;
    Irp_18 := actual_Irp_18;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_30);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_18)));
    call {:si_unique_call 3428} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    Mem_T.INT4[Tmp_1521] := oldIrql_4;
    call {:si_unique_call 3429} sdv_KeRaiseIrql(2, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    oldIrql_4 := Mem_T.INT4[Tmp_1521];
    call {:si_unique_call 3430} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    call {:si_unique_call 3431} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3432} nextEntry_2, queueEntry2_1, sdv_522 := Sbp2StartPacket#0_loop_L31(nextEntry_2, queueEntry2_1, sdv_522, Key_1);
    goto L31_last;

  L31_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 3433} sdv_522 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_522;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3434} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3435} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3436} sdv_KeLowerIrql(oldIrql_4);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3437} Sbp2StartIo#0(DeviceObject_30, Irp_18);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L32;

  anon19_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon15_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3438} vslice_dummy_var_529 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon16_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_30: int, actual_Irp_18: int, actual_Key_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_30: int, actual_Irp_18: int, actual_Key_1: int)
{
  var {:pointer} irpStack_11: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_522: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1521: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Irp_18: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;

  anon0:
    call {:si_unique_call 3439} vslice_dummy_var_530 := __HAVOC_malloc(4);
    DeviceObject_30 := actual_DeviceObject_30;
    Irp_18 := actual_Irp_18;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_30);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_18)));
    call {:si_unique_call 3440} Tmp_1521 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    Mem_T.INT4[Tmp_1521] := oldIrql_4;
    call {:si_unique_call 3441} sdv_KeRaiseIrql(2, Tmp_1521);
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    oldIrql_4 := Mem_T.INT4[Tmp_1521];
    call {:si_unique_call 3442} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    call {:si_unique_call 3443} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3444} nextEntry_2, queueEntry2_1, sdv_522 := Sbp2StartPacket#1_loop_L31(nextEntry_2, queueEntry2_1, sdv_522, Key_1);
    goto L31_last;

  L31_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 3445} sdv_522 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_522;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3446} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3447} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3448} sdv_KeLowerIrql(oldIrql_4);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3449} Sbp2StartIo#1(DeviceObject_30, Irp_18);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L32;

  anon19_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon15_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3450} vslice_dummy_var_531 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon16_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_30: int, actual_Irp_18: int, actual_Key_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_115: int)
{
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:scalar} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} sdv_27: int;
  var {:pointer} Tmp_132: int;
  var {:scalar} sdv_28: int;
  var {:scalar} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:scalar} sdv_31: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:scalar} Tmp_145: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3451} Tmp_117 := __HAVOC_malloc(4);
    call {:si_unique_call 3452} vslice_dummy_var_534 := __HAVOC_malloc(352);
    call {:si_unique_call 3453} Tmp_125 := __HAVOC_malloc(4);
    call {:si_unique_call 3454} Tmp_131 := __HAVOC_malloc(352);
    call {:si_unique_call 3455} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3456} Tmp_137 := __HAVOC_malloc(4);
    call {:si_unique_call 3457} Tmp_141 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3458} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_139;
    call {:si_unique_call 3459} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_139);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_124;
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L106;

  L106:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_137], 2048) != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc Tmp_119;
    havoc Tmp_116;
    havoc Tmp_133;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_399;
    call {:si_unique_call 3460} WPP_SF_qdDD(Tmp_133, 112, Tmp_116, pdoExtension_2, Tmp_119, status_3, vslice_dummy_var_399);
    goto L107;

  L107:
    call {:si_unique_call 3461} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3462} vslice_dummy_var_533 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_115 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L107;

  anon69_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_137], 2048) == 0;
    goto L107;

  anon54_Then:
    goto L107;

  anon56_Then:
    call {:si_unique_call 3463} Tmp_138 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    Mem_T.INT4[Tmp_138] := cIrql;
    call {:si_unique_call 3464} sdv_KeAcquireSpinLock(0, Tmp_138);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    cIrql := Mem_T.INT4[Tmp_138];
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3465} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon57_Then:
    call {:si_unique_call 3466} Sbp2ReconnectCompletion#0(pdoExtension_2, status_3);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_125], 2048) != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_143;
    havoc Tmp_127;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_400;
    call {:si_unique_call 3467} WPP_SF_qDD(Tmp_127, 110, Tmp_143, pdoExtension_2, status_3, vslice_dummy_var_400);
    goto L56;

  L56:
    call {:si_unique_call 3468} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_140;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_136;
    assume {:nonnull} Tmp_136 != 0;
    assume Tmp_136 > 0;
    havoc Tmp_141;
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_142;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_130;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_117], 2048) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_122;
    havoc Tmp_145;
    call {:si_unique_call 3469} WPP_SF_q(Tmp_145, 111, Tmp_122, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3470} vslice_dummy_var_532 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon51_Then:
    goto L67;

  anon67_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_117], 2048) == 0;
    goto L67;

  anon66_Then:
    goto L67;

  anon65_Then:
    goto L67;

  anon64_Then:
    goto L67;

  anon50_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon49_Then:
    goto L56;

  anon63_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_125], 2048) == 0;
    goto L56;

  anon48_Then:
    goto L56;

  anon60_Then:
    call {:si_unique_call 3471} Sbp2LoginCompletion#0(pdoExtension_2, status_3);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_134], 2048) != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_126;
    havoc Tmp_144;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_401;
    call {:si_unique_call 3472} WPP_SF_qDD(Tmp_144, 109, Tmp_126, pdoExtension_2, status_3, vslice_dummy_var_401);
    goto L54;

  anon53_Then:
    goto L54;

  anon62_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_134], 2048) == 0;
    goto L54;

  anon52_Then:
    goto L54;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_115 := 6;
    goto L1;

  anon47_Then:
    Tmp_115 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_115: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_115: int)
{
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:scalar} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} sdv_27: int;
  var {:pointer} Tmp_132: int;
  var {:scalar} sdv_28: int;
  var {:scalar} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:scalar} sdv_31: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:scalar} Tmp_145: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3473} Tmp_117 := __HAVOC_malloc(4);
    call {:si_unique_call 3474} vslice_dummy_var_537 := __HAVOC_malloc(352);
    call {:si_unique_call 3475} Tmp_125 := __HAVOC_malloc(4);
    call {:si_unique_call 3476} Tmp_131 := __HAVOC_malloc(352);
    call {:si_unique_call 3477} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3478} Tmp_137 := __HAVOC_malloc(4);
    call {:si_unique_call 3479} Tmp_141 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    havoc pdoExtension_2;
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3480} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_139;
    call {:si_unique_call 3481} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_139);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_124;
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L106;

  L106:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_137], 2048) != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc Tmp_119;
    havoc Tmp_116;
    havoc Tmp_133;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_402;
    call {:si_unique_call 3482} WPP_SF_qdDD(Tmp_133, 112, Tmp_116, pdoExtension_2, Tmp_119, status_3, vslice_dummy_var_402);
    goto L107;

  L107:
    call {:si_unique_call 3483} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3484} vslice_dummy_var_536 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_115 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L107;

  anon69_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_137], 2048) == 0;
    goto L107;

  anon54_Then:
    goto L107;

  anon56_Then:
    call {:si_unique_call 3485} Tmp_138 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    Mem_T.INT4[Tmp_138] := cIrql;
    call {:si_unique_call 3486} sdv_KeAcquireSpinLock(0, Tmp_138);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    cIrql := Mem_T.INT4[Tmp_138];
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3487} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon57_Then:
    call {:si_unique_call 3488} Sbp2ReconnectCompletion#1(pdoExtension_2, status_3);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_125], 2048) != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_143;
    havoc Tmp_127;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_403;
    call {:si_unique_call 3489} WPP_SF_qDD(Tmp_127, 110, Tmp_143, pdoExtension_2, status_3, vslice_dummy_var_403);
    goto L56;

  L56:
    call {:si_unique_call 3490} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_140;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_136;
    assume {:nonnull} Tmp_136 != 0;
    assume Tmp_136 > 0;
    havoc Tmp_141;
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_142;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_130;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_117], 2048) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_122;
    havoc Tmp_145;
    call {:si_unique_call 3491} WPP_SF_q(Tmp_145, 111, Tmp_122, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3492} vslice_dummy_var_535 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon51_Then:
    goto L67;

  anon67_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_117], 2048) == 0;
    goto L67;

  anon66_Then:
    goto L67;

  anon65_Then:
    goto L67;

  anon64_Then:
    goto L67;

  anon50_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon49_Then:
    goto L56;

  anon63_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_125], 2048) == 0;
    goto L56;

  anon48_Then:
    goto L56;

  anon60_Then:
    call {:si_unique_call 3493} Sbp2LoginCompletion#1(pdoExtension_2, status_3);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_134], 2048) != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_126;
    havoc Tmp_144;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_404;
    call {:si_unique_call 3494} WPP_SF_qDD(Tmp_144, 109, Tmp_126, pdoExtension_2, status_3, vslice_dummy_var_404);
    goto L54;

  anon53_Then:
    goto L54;

  anon62_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_134], 2048) == 0;
    goto L54;

  anon52_Then:
    goto L54;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_115 := 6;
    goto L1;

  anon47_Then:
    Tmp_115 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_115: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_146: int;
  var {:scalar} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:scalar} Tmp_159: int;
  var {:scalar} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} sdv_37: int;
  var {:scalar} Tmp_165: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 3495} vslice_dummy_var_538 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3496} Tmp_151 := __HAVOC_malloc(4);
    call {:si_unique_call 3497} Tmp_156 := __HAVOC_malloc(4);
    call {:si_unique_call 3498} Tmp_161 := __HAVOC_malloc(4);
    call {:si_unique_call 3499} Tmp_163 := __HAVOC_malloc(4);
    call {:si_unique_call 3500} Tmp_167 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    Mem_T.INT4[Tmp_167] := irql;
    call {:si_unique_call 3501} sdv_KeAcquireSpinLock(0, Tmp_167);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    irql := Mem_T.INT4[Tmp_167];
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_151], 2048) != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_150;
    havoc Tmp_160;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_405;
    call {:si_unique_call 3502} WPP_SF_qDD(Tmp_160, 64, Tmp_150, PdoExtension, NtStatus, vslice_dummy_var_405);
    goto L107;

  L107:
    call {:si_unique_call 3503} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    goto L107;

  anon66_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_151], 2048) == 0;
    goto L107;

  anon57_Then:
    goto L107;

  anon45_Then:
    call {:si_unique_call 3504} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_161;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_161], 2048) != 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_164;
    havoc Tmp_165;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_406;
    call {:si_unique_call 3505} WPP_SF_qDD(Tmp_165, 65, Tmp_164, PdoExtension, vslice_dummy_var_406, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3506} vslice_dummy_var_539 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} NtStatus == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_154;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3507} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_407;
    call {:si_unique_call 3508} vslice_dummy_var_541 := Sbp2Reset#0(vslice_dummy_var_407, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3509} Sbp2StartQueue#0(PdoExtension);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3510} vslice_dummy_var_540 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_163;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_163], 2048) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_157;
    havoc Tmp_159;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_408;
    call {:si_unique_call 3511} WPP_SF_qDD(Tmp_159, 67, Tmp_157, PdoExtension, vslice_dummy_var_408, NtStatus);
    goto L44;

  L44:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3512} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon54_Then:
    goto L37;

  anon53_Then:
    goto L52;

  L52:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3513} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon52_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon50_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon51_Then:
    goto L44;

  anon61_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_163], 2048) == 0;
    goto L44;

  anon49_Then:
    goto L44;

  anon48_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon55_Then:
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_156], 2048) == 0;
    goto L77;

  anon62_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_156], 2048) != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  anon56_Then:
    havoc Tmp_148;
    havoc Tmp_147;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_409;
    call {:si_unique_call 3514} WPP_SF_qD(Tmp_147, 66, Tmp_148, PdoExtension, vslice_dummy_var_409);
    goto L77;

  anon60_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon47_Then:
    goto L20;

  anon59_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_161], 2048) == 0;
    goto L20;

  anon46_Then:
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_146: int;
  var {:scalar} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:scalar} Tmp_159: int;
  var {:scalar} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} sdv_37: int;
  var {:scalar} Tmp_165: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;

  anon0:
    call {:si_unique_call 3515} vslice_dummy_var_542 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3516} Tmp_151 := __HAVOC_malloc(4);
    call {:si_unique_call 3517} Tmp_156 := __HAVOC_malloc(4);
    call {:si_unique_call 3518} Tmp_161 := __HAVOC_malloc(4);
    call {:si_unique_call 3519} Tmp_163 := __HAVOC_malloc(4);
    call {:si_unique_call 3520} Tmp_167 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    Mem_T.INT4[Tmp_167] := irql;
    call {:si_unique_call 3521} sdv_KeAcquireSpinLock(0, Tmp_167);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    irql := Mem_T.INT4[Tmp_167];
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_151], 2048) != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_150;
    havoc Tmp_160;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_410;
    call {:si_unique_call 3522} WPP_SF_qDD(Tmp_160, 64, Tmp_150, PdoExtension, NtStatus, vslice_dummy_var_410);
    goto L107;

  L107:
    call {:si_unique_call 3523} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    goto L107;

  anon66_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_151], 2048) == 0;
    goto L107;

  anon57_Then:
    goto L107;

  anon45_Then:
    call {:si_unique_call 3524} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_161;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_161], 2048) != 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_164;
    havoc Tmp_165;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_411;
    call {:si_unique_call 3525} WPP_SF_qDD(Tmp_165, 65, Tmp_164, PdoExtension, vslice_dummy_var_411, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3526} vslice_dummy_var_543 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} NtStatus == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_154;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3527} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_412;
    call {:si_unique_call 3528} vslice_dummy_var_545 := Sbp2Reset#1(vslice_dummy_var_412, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3529} Sbp2StartQueue#1(PdoExtension);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3530} vslice_dummy_var_544 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_163;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_163], 2048) != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_157;
    havoc Tmp_159;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_413;
    call {:si_unique_call 3531} WPP_SF_qDD(Tmp_159, 67, Tmp_157, PdoExtension, vslice_dummy_var_413, NtStatus);
    goto L44;

  L44:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3532} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon54_Then:
    goto L37;

  anon53_Then:
    goto L52;

  L52:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3533} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon52_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon50_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon51_Then:
    goto L44;

  anon61_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_163], 2048) == 0;
    goto L44;

  anon49_Then:
    goto L44;

  anon48_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon55_Then:
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_156], 2048) == 0;
    goto L77;

  anon62_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_156], 2048) != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  anon56_Then:
    havoc Tmp_148;
    havoc Tmp_147;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_414;
    call {:si_unique_call 3534} WPP_SF_qD(Tmp_147, 66, Tmp_148, PdoExtension, vslice_dummy_var_414);
    goto L77;

  anon60_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon47_Then:
    goto L20;

  anon59_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_161], 2048) == 0;
    goto L20;

  anon46_Then:
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_431: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} Tmp_435: int;
  var {:scalar} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:scalar} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} sdv_120: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_440: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_123: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:scalar} Tmp_447: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} Tmp_452: int;
  var {:pointer} Tmp_453: int;
  var {:pointer} Tmp_454: int;
  var {:scalar} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} Tmp_457: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} sdv_127: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:scalar} sdv_129: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} sdv_131: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_472: int;
  var {:scalar} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:scalar} Tmp_476: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} sdv_134: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_478: int;
  var {:pointer} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} Tmp_484: int;
  var {:scalar} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:scalar} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} sdv_140: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} sdv_143: int;
  var {:pointer} Tmp_500: int;
  var {:scalar} Tmp_502: int;
  var {:scalar} Tmp_503: int;
  var {:scalar} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;

  anon0:
    call {:si_unique_call 3535} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3536} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3537} Tmp_435 := __HAVOC_malloc(4);
    call {:si_unique_call 3538} Tmp_439 := __HAVOC_malloc(4);
    call {:si_unique_call 3539} Tmp_442 := __HAVOC_malloc(4);
    call {:si_unique_call 3540} Tmp_443 := __HAVOC_malloc(64);
    call {:si_unique_call 3541} Tmp_446 := __HAVOC_malloc(4);
    call {:si_unique_call 3542} Tmp_453 := __HAVOC_malloc(4);
    call {:si_unique_call 3543} Tmp_454 := __HAVOC_malloc(4);
    call {:si_unique_call 3544} Tmp_458 := __HAVOC_malloc(4);
    call {:si_unique_call 3545} Tmp_461 := __HAVOC_malloc(64);
    call {:si_unique_call 3546} Tmp_462 := __HAVOC_malloc(4);
    call {:si_unique_call 3547} Tmp_465 := __HAVOC_malloc(64);
    call {:si_unique_call 3548} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3549} Tmp_477 := __HAVOC_malloc(4);
    call {:si_unique_call 3550} Tmp_480 := __HAVOC_malloc(4);
    call {:si_unique_call 3551} Tmp_491 := __HAVOC_malloc(64);
    call {:si_unique_call 3552} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3553} Tmp_495 := __HAVOC_malloc(64);
    call {:si_unique_call 3554} Tmp_496 := __HAVOC_malloc(4);
    call {:si_unique_call 3555} Tmp_498 := __HAVOC_malloc(4);
    call {:si_unique_call 3556} Tmp_499 := __HAVOC_malloc(4);
    call {:si_unique_call 3557} Tmp_505 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    havoc Tmp_480;
    assume {:nonnull} Tmp_480 != 0;
    assume Tmp_480 > 0;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_480], 1) != 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    havoc Tmp_490;
    havoc Tmp_467;
    call {:si_unique_call 3558} WPP_SF_q(Tmp_467, 92, Tmp_490, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_431 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon238_Then:
    goto L446;

  anon273_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_480], 1) == 0;
    goto L446;

  anon237_Then:
    goto L446;

  anon239_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_472;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc pdoExtension_3;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3559} sdv_140 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_140;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3560} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_439], 1) != 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    havoc Tmp_445;
    havoc Tmp_484;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_415;
    call {:si_unique_call 3561} WPP_SF_qDD(Tmp_484, 93, Tmp_445, pdoExtension_3, status_10, vslice_dummy_var_415);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3562} vslice_dummy_var_555 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon186_Then:
    goto L55;

  anon240_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_439], 1) == 0;
    goto L55;

  anon185_Then:
    goto L55;

  anon183_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    call {:si_unique_call 3563} Sbp2LoginCompletion#0(pdoExtension_3, status_10);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3564} vslice_dummy_var_556 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := rcode;
    goto L1;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} 32768 == src;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_496;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_496], 1) != 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_492;
    havoc Tmp_504;
    call {:si_unique_call 3565} WPP_SF_q(Tmp_504, 94, Tmp_492, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3566} vslice_dummy_var_546 := Sbp2AccessRegister#0(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3567} Sbp2HandleUnsolicited(pdoExtension_3, statusBlock);
    rcode := 0;
    goto L73;

  anon244_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon190_Then:
    goto L83;

  anon243_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_496], 1) == 0;
    goto L83;

  anon189_Then:
    goto L83;

  anon242_Then:
    assume {:partition} 32768 != src;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} 49152 == src;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_505;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_505], 1) != 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_494;
    havoc Tmp_434;
    call {:si_unique_call 3568} WPP_SF_q(Tmp_434, 95, Tmp_494, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon193_Then:
    goto L103;

  anon245_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_505], 1) == 0;
    goto L103;

  anon192_Then:
    goto L103;

  anon188_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_493], 1) != 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    havoc Tmp_474;
    havoc Tmp_440;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_416;
    call {:si_unique_call 3569} WPP_SF_qDD(Tmp_440, 96, Tmp_474, pdoExtension_3, status_10, vslice_dummy_var_416);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3570} vslice_dummy_var_562 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon236_Then:
    goto L434;

  anon272_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_493], 1) == 0;
    goto L434;

  anon235_Then:
    goto L434;

  anon191_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} temp > 384;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto L132;

  L132:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_499], 1) != 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_437;
    havoc Tmp_432;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_417;
    havoc vslice_dummy_var_418;
    havoc vslice_dummy_var_419;
    havoc vslice_dummy_var_420;
    call {:si_unique_call 3571} WPP_SF_qDDDD(Tmp_432, 98, Tmp_437, pdoExtension_3, vslice_dummy_var_417, vslice_dummy_var_418, vslice_dummy_var_419, vslice_dummy_var_420);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_421;
    call {:si_unique_call 3572} Sbp2CreateRequestErrorLog(vslice_dummy_var_421, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon197_Then:
    goto L133;

  anon248_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_499], 1) == 0;
    goto L133;

  anon196_Then:
    goto L133;

  anon194_Then:
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_498], 1) == 0;
    goto L132;

  anon247_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_498], 1) != 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto L132;

  anon195_Then:
    havoc Tmp_444;
    havoc Tmp_452;
    call {:si_unique_call 3573} WPP_SF_qD(Tmp_452, 97, Tmp_444, pdoExtension_3, temp);
    goto L132;

  anon246_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3574} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    havoc Tmp_435;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_435], 1) != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_483;
    havoc Tmp_503;
    call {:si_unique_call 3575} WPP_SF_qq(Tmp_503, 100, Tmp_483, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    call {:si_unique_call 3576} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_453;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_453], 1) != 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    havoc Tmp_433;
    havoc Tmp_487;
    call {:si_unique_call 3577} WPP_SF_qq(Tmp_487, 101, Tmp_433, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon203_Then:
    goto L174;

  anon252_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_453], 1) == 0;
    goto L174;

  anon202_Then:
    goto L174;

  anon200_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_479;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    havoc requestIrp;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3578} vslice_dummy_var_557 := KeCancelTimer(0);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    havoc Tmp_454;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_454], 1) != 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_489;
    havoc Tmp_447;
    call {:si_unique_call 3579} WPP_SF_qq(Tmp_447, 102, Tmp_489, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3580} nextListItem, entry, sdv_134 := Sbp2GlobalStatusCallback#0_loop_L204(nextListItem, entry, sdv_134);
    goto L204_last;

  L204_last:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 3581} sdv_134 := sdv_containing_record(entry, 0);
    nextListItem := sdv_134;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon255_Else_dummy;

  anon255_Else_dummy:
    assume false;
    return;

  anon255_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3582} vslice_dummy_var_558 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3583} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3584} vslice_dummy_var_547 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3585} vslice_dummy_var_559 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3586} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_422;
    havoc vslice_dummy_var_423;
    call {:si_unique_call 3587} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_422, vslice_dummy_var_423);
    call {:si_unique_call 3588} vslice_dummy_var_548 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_424;
    call {:si_unique_call 3589} vslice_dummy_var_550 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_424);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_425;
    call {:si_unique_call 3590} vslice_dummy_var_549 := Sbp2Reset#0(vslice_dummy_var_425, 1);
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3591} sdv_129 := sdv_IsListEmpty(0);
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} sdv_129 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3592} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3593} Tmp_507 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    Mem_T.INT4[Tmp_507] := oldIrql_1;
    call {:si_unique_call 3594} sdv_KeAcquireSpinLock(0, Tmp_507);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    oldIrql_1 := Mem_T.INT4[Tmp_507];
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3595} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3596} Tmp_468 := corral_nondet();
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:partition} Tmp_468 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto L367;

  L367:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    havoc Tmp_458;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_458], 1) != 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    Tmp_486 := Mem_T.INT4[Tmp_491];
    havoc Tmp_469;
    havoc Tmp_441;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_426;
    call {:si_unique_call 3597} WPP_SF_qDD(Tmp_441, 106, Tmp_469, pdoExtension_3, Tmp_486, vslice_dummy_var_426);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3598} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3599} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3600} sdv_143 := sdv_IsListEmpty(0);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} sdv_143 != 0;
    call {:si_unique_call 3601} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3602} vslice_dummy_var_551 := Sbp2RestartPendingPowerIrp#0(pdoExtension_3);
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:partition} yogi_error != 1;
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_478;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3603} vslice_dummy_var_560 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    call {:si_unique_call 3604} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L341;

  L341:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    havoc Tmp_462;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_462], 1) != 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    havoc Tmp_450;
    havoc Tmp_456;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_427;
    call {:si_unique_call 3605} WPP_SF_qd(Tmp_456, 108, Tmp_450, pdoExtension_3, vslice_dummy_var_427);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon221_Then:
    goto L342;

  anon263_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_462], 1) == 0;
    goto L342;

  anon220_Then:
    goto L342;

  anon218_Then:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon219_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_428;
    call {:si_unique_call 3606} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_428);
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} yogi_error != 1;
    goto L341;

  anon262_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    Tmp_478 := 0;
    goto L326;

  anon260_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon217_Then:
    assume {:partition} sdv_143 == 0;
    call {:si_unique_call 3607} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon228_Then:
    goto L291;

  anon259_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_458], 1) == 0;
    goto L291;

  anon227_Then:
    goto L291;

  anon258_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto L367;

  anon211_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    havoc Tmp_446;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_446], 1) != 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    Tmp_473 := Mem_T.INT4[Tmp_461];
    havoc Tmp_488;
    havoc Tmp_448;
    call {:si_unique_call 3608} WPP_SF_qD(Tmp_448, 105, Tmp_488, pdoExtension_3, Tmp_473);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    Tmp_436 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3609} sdv_RtlCopyMemory(0, 0, Tmp_436);
    goto L291;

  anon226_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_436;
    goto L364;

  anon224_Then:
    goto L291;

  anon225_Then:
    goto L352;

  anon266_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_446], 1) == 0;
    goto L352;

  anon223_Then:
    goto L352;

  anon212_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_429;
    call {:si_unique_call 3610} sdv_120 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_429, Tmp_459);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} sdv_120 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_495;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} Mem_T.INT4[Tmp_495] != 0;
    goto L290;

  L290:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    havoc Tmp_477;
    assume {:nonnull} Tmp_477 != 0;
    assume Tmp_477 > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_477], 1) != 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    Tmp_455 := Mem_T.INT4[senseBuffer + 13 * 4];
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    Tmp_466 := Mem_T.INT4[senseBuffer + 12 * 4];
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    Tmp_438 := Mem_T.INT4[senseBuffer + 2 * 4];
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    Tmp_502 := Mem_T.INT4[Tmp_443];
    havoc Tmp_470;
    havoc Tmp_481;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_430;
    havoc vslice_dummy_var_431;
    call {:si_unique_call 3611} WPP_SF_qDDDDDd(Tmp_481, 103, Tmp_470, pdoExtension_3, Tmp_502, Tmp_438, Tmp_466, Tmp_455, vslice_dummy_var_430, vslice_dummy_var_431);
    goto L291;

  anon216_Then:
    goto L291;

  anon265_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_477], 1) == 0;
    goto L291;

  anon215_Then:
    goto L291;

  anon264_Then:
    assume {:partition} Mem_T.INT4[Tmp_495] == 0;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.INT4[senseBuffer + 2 * 4] == 2;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} Mem_T.INT4[senseBuffer + 12 * 4] == 58;
    goto L291;

  anon222_Then:
    assume {:partition} Mem_T.INT4[senseBuffer + 12 * 4] != 58;
    goto L290;

  anon214_Then:
    assume {:partition} Mem_T.INT4[senseBuffer + 2 * 4] != 2;
    goto L290;

  anon213_Then:
    assume {:partition} sdv_120 == 0;
    goto L283;

  anon257_Then:
    assume {:partition} 1 >= Tmp_468;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_460;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} Tmp_460 == 4096;
    goto L381;

  L381:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_471], 1) != 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_485;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    Tmp_475 := Mem_T.INT4[Tmp_465];
    havoc Tmp_463;
    havoc Tmp_451;
    call {:si_unique_call 3612} WPP_SF_qDD(Tmp_451, 107, Tmp_463, pdoExtension_3, Tmp_475, Tmp_485);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon230_Then:
    goto L382;

  anon268_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_471], 1) == 0;
    goto L382;

  anon229_Then:
    goto L382;

  anon267_Then:
    assume {:partition} Tmp_460 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_476;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:partition} Tmp_476 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon269_Then:
    assume {:partition} Tmp_476 == 8192;
    goto L381;

  anon210_Then:
    assume {:partition} sdv_129 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_432;
    call {:si_unique_call 3613} sdv_131 := sdv_containing_record(vslice_dummy_var_432, 0);
    nextListItem := sdv_131;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3614} vslice_dummy_var_561 := Sbp2AccessRegister#0(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:partition} yogi_error != 1;
    goto L252;

  anon270_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon256_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    goto L238;

  anon207_Then:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_433;
    call {:si_unique_call 3615} vslice_dummy_var_553 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_433);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_500;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon271_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon231_Then:
    goto L405;

  anon208_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3616} vslice_dummy_var_552 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_434;
    call {:si_unique_call 3617} vslice_dummy_var_554 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_434);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon232_Then:
    goto L252;

  anon206_Then:
    goto L185;

  anon205_Then:
    goto L196;

  anon254_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_454], 1) == 0;
    goto L196;

  anon204_Then:
    goto L196;

  anon253_Then:
    goto L185;

  anon201_Then:
    goto L158;

  anon251_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_435], 1) == 0;
    goto L158;

  anon199_Then:
    goto L158;

  anon198_Then:
    goto L150;

  L150:
    call {:si_unique_call 3618} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_442], 1) != 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    havoc Tmp_506;
    havoc Tmp_457;
    call {:si_unique_call 3619} WPP_SF_qD(Tmp_457, 99, Tmp_506, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_435;
    call {:si_unique_call 3620} Sbp2CreateRequestErrorLog(vslice_dummy_var_435, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon234_Then:
    goto L421;

  anon250_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_442], 1) == 0;
    goto L421;

  anon233_Then:
    goto L421;

  anon249_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon184_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_431: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_431: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} Tmp_435: int;
  var {:scalar} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:scalar} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} sdv_120: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_440: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_123: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:scalar} Tmp_447: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} Tmp_452: int;
  var {:pointer} Tmp_453: int;
  var {:pointer} Tmp_454: int;
  var {:scalar} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} Tmp_457: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} sdv_127: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:scalar} sdv_129: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} sdv_131: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_472: int;
  var {:scalar} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:scalar} Tmp_476: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} sdv_134: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_478: int;
  var {:pointer} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} Tmp_484: int;
  var {:scalar} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:scalar} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} sdv_140: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} sdv_143: int;
  var {:pointer} Tmp_500: int;
  var {:scalar} Tmp_502: int;
  var {:scalar} Tmp_503: int;
  var {:scalar} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;

  anon0:
    call {:si_unique_call 3621} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3622} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3623} Tmp_435 := __HAVOC_malloc(4);
    call {:si_unique_call 3624} Tmp_439 := __HAVOC_malloc(4);
    call {:si_unique_call 3625} Tmp_442 := __HAVOC_malloc(4);
    call {:si_unique_call 3626} Tmp_443 := __HAVOC_malloc(64);
    call {:si_unique_call 3627} Tmp_446 := __HAVOC_malloc(4);
    call {:si_unique_call 3628} Tmp_453 := __HAVOC_malloc(4);
    call {:si_unique_call 3629} Tmp_454 := __HAVOC_malloc(4);
    call {:si_unique_call 3630} Tmp_458 := __HAVOC_malloc(4);
    call {:si_unique_call 3631} Tmp_461 := __HAVOC_malloc(64);
    call {:si_unique_call 3632} Tmp_462 := __HAVOC_malloc(4);
    call {:si_unique_call 3633} Tmp_465 := __HAVOC_malloc(64);
    call {:si_unique_call 3634} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3635} Tmp_477 := __HAVOC_malloc(4);
    call {:si_unique_call 3636} Tmp_480 := __HAVOC_malloc(4);
    call {:si_unique_call 3637} Tmp_491 := __HAVOC_malloc(64);
    call {:si_unique_call 3638} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3639} Tmp_495 := __HAVOC_malloc(64);
    call {:si_unique_call 3640} Tmp_496 := __HAVOC_malloc(4);
    call {:si_unique_call 3641} Tmp_498 := __HAVOC_malloc(4);
    call {:si_unique_call 3642} Tmp_499 := __HAVOC_malloc(4);
    call {:si_unique_call 3643} Tmp_505 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    havoc Tmp_480;
    assume {:nonnull} Tmp_480 != 0;
    assume Tmp_480 > 0;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_480], 1) != 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    havoc Tmp_490;
    havoc Tmp_467;
    call {:si_unique_call 3644} WPP_SF_q(Tmp_467, 92, Tmp_490, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_431 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon238_Then:
    goto L446;

  anon273_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_480], 1) == 0;
    goto L446;

  anon237_Then:
    goto L446;

  anon239_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_472;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    havoc pdoExtension_3;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3645} sdv_140 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_140;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3646} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_439], 1) != 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    havoc Tmp_445;
    havoc Tmp_484;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_436;
    call {:si_unique_call 3647} WPP_SF_qDD(Tmp_484, 93, Tmp_445, pdoExtension_3, status_10, vslice_dummy_var_436);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3648} vslice_dummy_var_572 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon186_Then:
    goto L55;

  anon240_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_439], 1) == 0;
    goto L55;

  anon185_Then:
    goto L55;

  anon183_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    call {:si_unique_call 3649} Sbp2LoginCompletion#1(pdoExtension_3, status_10);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3650} vslice_dummy_var_573 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := rcode;
    goto L1;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} 32768 == src;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    havoc Tmp_496;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_496], 1) != 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_492;
    havoc Tmp_504;
    call {:si_unique_call 3651} WPP_SF_q(Tmp_504, 94, Tmp_492, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3652} vslice_dummy_var_563 := Sbp2AccessRegister#1(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3653} Sbp2HandleUnsolicited(pdoExtension_3, statusBlock);
    rcode := 0;
    goto L73;

  anon244_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon190_Then:
    goto L83;

  anon243_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_496], 1) == 0;
    goto L83;

  anon189_Then:
    goto L83;

  anon242_Then:
    assume {:partition} 32768 != src;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} 49152 == src;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_505;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_505], 1) != 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    havoc Tmp_494;
    havoc Tmp_434;
    call {:si_unique_call 3654} WPP_SF_q(Tmp_434, 95, Tmp_494, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon193_Then:
    goto L103;

  anon245_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_505], 1) == 0;
    goto L103;

  anon192_Then:
    goto L103;

  anon188_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_493], 1) != 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    havoc Tmp_474;
    havoc Tmp_440;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_437;
    call {:si_unique_call 3655} WPP_SF_qDD(Tmp_440, 96, Tmp_474, pdoExtension_3, status_10, vslice_dummy_var_437);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3656} vslice_dummy_var_579 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon236_Then:
    goto L434;

  anon272_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_493], 1) == 0;
    goto L434;

  anon235_Then:
    goto L434;

  anon191_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} temp > 384;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto L132;

  L132:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_499], 1) != 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_437;
    havoc Tmp_432;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_438;
    havoc vslice_dummy_var_439;
    havoc vslice_dummy_var_440;
    havoc vslice_dummy_var_441;
    call {:si_unique_call 3657} WPP_SF_qDDDD(Tmp_432, 98, Tmp_437, pdoExtension_3, vslice_dummy_var_438, vslice_dummy_var_439, vslice_dummy_var_440, vslice_dummy_var_441);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_442;
    call {:si_unique_call 3658} Sbp2CreateRequestErrorLog(vslice_dummy_var_442, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon197_Then:
    goto L133;

  anon248_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_499], 1) == 0;
    goto L133;

  anon196_Then:
    goto L133;

  anon194_Then:
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_498], 1) == 0;
    goto L132;

  anon247_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_498], 1) != 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto L132;

  anon195_Then:
    havoc Tmp_444;
    havoc Tmp_452;
    call {:si_unique_call 3659} WPP_SF_qD(Tmp_452, 97, Tmp_444, pdoExtension_3, temp);
    goto L132;

  anon246_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3660} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    havoc Tmp_435;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_435], 1) != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_483;
    havoc Tmp_503;
    call {:si_unique_call 3661} WPP_SF_qq(Tmp_503, 100, Tmp_483, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    call {:si_unique_call 3662} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_453;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_453], 1) != 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    havoc Tmp_433;
    havoc Tmp_487;
    call {:si_unique_call 3663} WPP_SF_qq(Tmp_487, 101, Tmp_433, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon203_Then:
    goto L174;

  anon252_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_453], 1) == 0;
    goto L174;

  anon202_Then:
    goto L174;

  anon200_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_479;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    havoc requestIrp;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3664} vslice_dummy_var_574 := KeCancelTimer(0);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    havoc Tmp_454;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_454], 1) != 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_489;
    havoc Tmp_447;
    call {:si_unique_call 3665} WPP_SF_qq(Tmp_447, 102, Tmp_489, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3666} nextListItem, entry, sdv_134 := Sbp2GlobalStatusCallback#1_loop_L204(nextListItem, entry, sdv_134);
    goto L204_last;

  L204_last:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    call {:si_unique_call 3667} sdv_134 := sdv_containing_record(entry, 0);
    nextListItem := sdv_134;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon255_Else_dummy;

  anon255_Else_dummy:
    assume false;
    return;

  anon255_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3668} vslice_dummy_var_575 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3669} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3670} vslice_dummy_var_564 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3671} vslice_dummy_var_576 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3672} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_443;
    havoc vslice_dummy_var_444;
    call {:si_unique_call 3673} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_443, vslice_dummy_var_444);
    call {:si_unique_call 3674} vslice_dummy_var_565 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_445;
    call {:si_unique_call 3675} vslice_dummy_var_567 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_445);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_446;
    call {:si_unique_call 3676} vslice_dummy_var_566 := Sbp2Reset#1(vslice_dummy_var_446, 1);
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3677} sdv_129 := sdv_IsListEmpty(0);
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} sdv_129 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3678} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3679} Tmp_507 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    Mem_T.INT4[Tmp_507] := oldIrql_1;
    call {:si_unique_call 3680} sdv_KeAcquireSpinLock(0, Tmp_507);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    oldIrql_1 := Mem_T.INT4[Tmp_507];
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3681} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3682} Tmp_468 := corral_nondet();
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:partition} Tmp_468 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto L367;

  L367:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    havoc Tmp_458;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_458], 1) != 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    Tmp_486 := Mem_T.INT4[Tmp_491];
    havoc Tmp_469;
    havoc Tmp_441;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_447;
    call {:si_unique_call 3683} WPP_SF_qDD(Tmp_441, 106, Tmp_469, pdoExtension_3, Tmp_486, vslice_dummy_var_447);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3684} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3685} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3686} sdv_143 := sdv_IsListEmpty(0);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} sdv_143 != 0;
    call {:si_unique_call 3687} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3688} vslice_dummy_var_568 := Sbp2RestartPendingPowerIrp#1(pdoExtension_3);
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:partition} yogi_error != 1;
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_478;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3689} vslice_dummy_var_577 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    call {:si_unique_call 3690} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L341;

  L341:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    havoc Tmp_462;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_462], 1) != 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    havoc Tmp_450;
    havoc Tmp_456;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_448;
    call {:si_unique_call 3691} WPP_SF_qd(Tmp_456, 108, Tmp_450, pdoExtension_3, vslice_dummy_var_448);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon221_Then:
    goto L342;

  anon263_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_462], 1) == 0;
    goto L342;

  anon220_Then:
    goto L342;

  anon218_Then:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon219_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_449;
    call {:si_unique_call 3692} Sbp2StartNextPacketByKey#1(deviceObject_2, vslice_dummy_var_449);
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} yogi_error != 1;
    goto L341;

  anon262_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    Tmp_478 := 0;
    goto L326;

  anon260_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon217_Then:
    assume {:partition} sdv_143 == 0;
    call {:si_unique_call 3693} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon228_Then:
    goto L291;

  anon259_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_458], 1) == 0;
    goto L291;

  anon227_Then:
    goto L291;

  anon258_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto L367;

  anon211_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    havoc Tmp_446;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_446], 1) != 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    Tmp_473 := Mem_T.INT4[Tmp_461];
    havoc Tmp_488;
    havoc Tmp_448;
    call {:si_unique_call 3694} WPP_SF_qD(Tmp_448, 105, Tmp_488, pdoExtension_3, Tmp_473);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    Tmp_436 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3695} sdv_RtlCopyMemory(0, 0, Tmp_436);
    goto L291;

  anon226_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_436;
    goto L364;

  anon224_Then:
    goto L291;

  anon225_Then:
    goto L352;

  anon266_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_446], 1) == 0;
    goto L352;

  anon223_Then:
    goto L352;

  anon212_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_450;
    call {:si_unique_call 3696} sdv_120 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_450, Tmp_459);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} sdv_120 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_495;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} Mem_T.INT4[Tmp_495] != 0;
    goto L290;

  L290:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    havoc Tmp_477;
    assume {:nonnull} Tmp_477 != 0;
    assume Tmp_477 > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_477], 1) != 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    Tmp_455 := Mem_T.INT4[senseBuffer + 13 * 4];
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    Tmp_466 := Mem_T.INT4[senseBuffer + 12 * 4];
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    Tmp_438 := Mem_T.INT4[senseBuffer + 2 * 4];
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    Tmp_502 := Mem_T.INT4[Tmp_443];
    havoc Tmp_470;
    havoc Tmp_481;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_451;
    havoc vslice_dummy_var_452;
    call {:si_unique_call 3697} WPP_SF_qDDDDDd(Tmp_481, 103, Tmp_470, pdoExtension_3, Tmp_502, Tmp_438, Tmp_466, Tmp_455, vslice_dummy_var_451, vslice_dummy_var_452);
    goto L291;

  anon216_Then:
    goto L291;

  anon265_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_477], 1) == 0;
    goto L291;

  anon215_Then:
    goto L291;

  anon264_Then:
    assume {:partition} Mem_T.INT4[Tmp_495] == 0;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.INT4[senseBuffer + 2 * 4] == 2;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} Mem_T.INT4[senseBuffer + 12 * 4] == 58;
    goto L291;

  anon222_Then:
    assume {:partition} Mem_T.INT4[senseBuffer + 12 * 4] != 58;
    goto L290;

  anon214_Then:
    assume {:partition} Mem_T.INT4[senseBuffer + 2 * 4] != 2;
    goto L290;

  anon213_Then:
    assume {:partition} sdv_120 == 0;
    goto L283;

  anon257_Then:
    assume {:partition} 1 >= Tmp_468;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_460;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} Tmp_460 == 4096;
    goto L381;

  L381:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_471], 1) != 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_485;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    Tmp_475 := Mem_T.INT4[Tmp_465];
    havoc Tmp_463;
    havoc Tmp_451;
    call {:si_unique_call 3698} WPP_SF_qDD(Tmp_451, 107, Tmp_463, pdoExtension_3, Tmp_475, Tmp_485);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon230_Then:
    goto L382;

  anon268_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_471], 1) == 0;
    goto L382;

  anon229_Then:
    goto L382;

  anon267_Then:
    assume {:partition} Tmp_460 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_476;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:partition} Tmp_476 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon269_Then:
    assume {:partition} Tmp_476 == 8192;
    goto L381;

  anon210_Then:
    assume {:partition} sdv_129 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_453;
    call {:si_unique_call 3699} sdv_131 := sdv_containing_record(vslice_dummy_var_453, 0);
    nextListItem := sdv_131;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3700} vslice_dummy_var_578 := Sbp2AccessRegister#1(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:partition} yogi_error != 1;
    goto L252;

  anon270_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon256_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    goto L238;

  anon207_Then:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_454;
    call {:si_unique_call 3701} vslice_dummy_var_570 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_454);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_500;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon271_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon231_Then:
    goto L405;

  anon208_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3702} vslice_dummy_var_569 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_455;
    call {:si_unique_call 3703} vslice_dummy_var_571 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_455);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon232_Then:
    goto L252;

  anon206_Then:
    goto L185;

  anon205_Then:
    goto L196;

  anon254_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_454], 1) == 0;
    goto L196;

  anon204_Then:
    goto L196;

  anon253_Then:
    goto L185;

  anon201_Then:
    goto L158;

  anon251_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_435], 1) == 0;
    goto L158;

  anon199_Then:
    goto L158;

  anon198_Then:
    goto L150;

  L150:
    call {:si_unique_call 3704} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} BAND(Mem_T.INT4[Tmp_442], 1) != 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    havoc Tmp_506;
    havoc Tmp_457;
    call {:si_unique_call 3705} WPP_SF_qD(Tmp_457, 99, Tmp_506, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_456;
    call {:si_unique_call 3706} Sbp2CreateRequestErrorLog(vslice_dummy_var_456, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon234_Then:
    goto L421;

  anon250_Then:
    assume {:partition} BAND(Mem_T.INT4[Tmp_442], 1) == 0;
    goto L421;

  anon233_Then:
    goto L421;

  anon249_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon184_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_431: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int)
{

  entry:
    out_i, out_Tmp_14, out_Tmp_16, out_Tmp_20, out_Tmp_21, out_Tmp_26, out_Tmp_27, out_uChar := in_i, in_Tmp_14, in_Tmp_16, in_Tmp_20, in_Tmp_21, in_Tmp_26, in_Tmp_27, in_uChar;
    goto L60, exit;

  exit:
    return;

  L60:
    goto anon60_Else;

  anon60_Else:
    assume {:partition} in_dataLength * 4 > out_i;
    out_Tmp_16 := in_pData;
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    out_uChar := Mem_T.INT4[out_Tmp_16];
    goto anon79_Else;

  anon79_Else:
    assume {:partition} out_uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc out_Tmp_20;
    assume {:nonnull} out_Tmp_20 != 0;
    assume out_Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_20], 2) != 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_Tmp_27 := out_uChar;
    havoc out_Tmp_21;
    havoc out_Tmp_26;
    call {:si_unique_call 3707} WPP_SF_D(out_Tmp_26, 124, out_Tmp_21, out_Tmp_27);
    goto L71;

  L71:
    out_Tmp_14 := in_pData;
    assume {:nonnull} out_Tmp_14 != 0;
    assume out_Tmp_14 > 0;
    Mem_T.INT4[out_Tmp_14] := 32;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_i := out_i + 1;
    goto L81;

  L81:
    out_i := out_i + 1;
    goto L81_dummy;

  L81_dummy:
    havoc out_i;
    return;

  anon65_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_20], 2) == 0;
    goto L71;

  anon63_Then:
    goto L71;

  anon61_Then:
    assume {:partition} out_uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= out_uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < out_uChar;
    goto L70;

  anon62_Then:
    assume {:partition} out_uChar < 32;
    goto L70;
}



procedure {:LoopProcedure} Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int);
  modifies Mem_T.INT4, alloc;
  free ensures {:va_keep} out_Tmp_14 == in_Tmp_14 || out_Tmp_14 == in_pData;
  free ensures {:va_keep} out_Tmp_16 == in_pData || out_Tmp_16 == in_Tmp_16;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_253: int, in_Tmp_262: int, in_Tmp_263: int, in_sdv_55: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_Tmp_285: int, in_unitDirEntries: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_61: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_67: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_Tmp_314: int, in_modelIdCount: int, in_Tmp_317: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_329: int, in_devInfo: int, in_sdv_80: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_253: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_unitDirEntries: int, out_Tmp_295: int, out_status_6: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_Tmp_314: int, out_modelIdCount: int, out_Tmp_317: int, out_devListSize: int, out_Tmp_329: int)
{
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;

  entry:
    out_Tmp_253, out_Tmp_262, out_Tmp_263, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, out_status_6, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, out_Tmp_329 := in_Tmp_253, in_Tmp_262, in_Tmp_263, in_Tmp_280, in_Tmp_281, in_j, in_Tmp_284, in_Tmp_285, in_unitDirEntries, in_Tmp_295, in_status_6, in_Tmp_308, in_Tmp_309, in_Tmp_313, in_Tmp_314, in_modelIdCount, in_Tmp_317, in_devListSize, in_Tmp_329;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_262;
    assume {:nonnull} out_Tmp_262 != 0;
    assume out_Tmp_262 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_263;
    assume {:nonnull} out_Tmp_263 != 0;
    assume out_Tmp_263 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_281;
    assume {:nonnull} out_Tmp_281 != 0;
    assume out_Tmp_281 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_329;
    assume {:nonnull} out_Tmp_329 != 0;
    assume out_Tmp_329 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_314;
    assume {:nonnull} out_Tmp_314 != 0;
    assume out_Tmp_314 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_457;
    call {:si_unique_call 3708} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_457, 2);
    goto anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then;

  anon328_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    out_Tmp_253 := BAND(Mem_T.INT4[in_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_Tmp_253 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc out_Tmp_313;
    assume {:nonnull} out_Tmp_313 != 0;
    assume out_Tmp_313 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_313], 2) != 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc out_Tmp_295;
    havoc out_Tmp_284;
    call {:si_unique_call 3710} WPP_SF_q(out_Tmp_284, 47, out_Tmp_295, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3709} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_308 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} BAND(Mem_T.INT4[in_unitDependentDirectory_1], 255) != 56;
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) != 57;
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) != 129;
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon424_Then;

  anon424_Then:
    assume {:partition} out_j <= INTDIV(in_dependentLength, 4);
    goto anon424_Then_dummy;

  anon424_Then_dummy:
    call {:si_unique_call 3715} {:si_old_unique_call 1} out_Tmp_253, out_Tmp_262, out_Tmp_263, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, out_status_6, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength, out_Tmp_253, out_Tmp_262, out_Tmp_263, in_sdv_55, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, in_vendorLeaf_1, out_status_6, in_sdv_61, in_offset, in_unitDependentDirectory_1, in_sdv_67, in_cromOffset, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, in_firstDevInfo, out_Tmp_329, in_devInfo, in_sdv_80, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    return;

  anon386_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) == 129;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    out_Tmp_280 := BAND(Mem_T.INT4[in_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} out_Tmp_280 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} out_Tmp_280 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3713} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    goto anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    havoc out_Tmp_309;
    assume {:nonnull} out_Tmp_309 != 0;
    assume out_Tmp_309 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_309], 2) != 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_285;
    havoc out_Tmp_317;
    call {:si_unique_call 3714} WPP_SF_q(out_Tmp_317, 48, out_Tmp_285, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_458;
    call {:si_unique_call 3711} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_458, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3712} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_309], 2) == 0;
    goto L349;

  anon335_Then:
    goto L349;

  anon334_Then:
    goto L344;

  anon387_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) == 57;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:partition} BAND(Mem_T.INT4[in_unitDependentDirectory_1], 255) == 56;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_313], 2) == 0;
    goto L300;

  anon329_Then:
    goto L300;

  anon420_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} out_Tmp_253 != 20;
    goto L286;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_253: int, in_Tmp_262: int, in_Tmp_263: int, in_sdv_55: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_Tmp_285: int, in_unitDirEntries: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_61: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_67: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_Tmp_314: int, in_modelIdCount: int, in_Tmp_317: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_329: int, in_devInfo: int, in_sdv_80: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_253: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_unitDirEntries: int, out_Tmp_295: int, out_status_6: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_Tmp_314: int, out_modelIdCount: int, out_Tmp_317: int, out_devListSize: int, out_Tmp_329: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_308 == in_Tmp_308 || out_Tmp_308 == in_unitDependentDirectory_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_246: int, in_Tmp_252: int, in_Tmp_258: int, in_Tmp_268: int, in_Tmp_274: int, in_genPacket: int, in_Tmp_289: int, in_currentGeneration: int, in_status_6: int, in_Tmp_306: int, in_Tmp_323: int, in_Tmp_326: int, in_Tmp_342: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_246: int, out_Tmp_252: int, out_Tmp_258: int, out_Tmp_268: int, out_Tmp_274: int, out_Tmp_289: int, out_status_6: int, out_Tmp_306: int, out_Tmp_323: int, out_Tmp_326: int, out_Tmp_342: int, out_retries: int)
{
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;

  entry:
    out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, out_Tmp_289, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries := in_Tmp_246, in_Tmp_252, in_Tmp_258, in_Tmp_268, in_Tmp_274, in_Tmp_289, in_status_6, in_Tmp_306, in_Tmp_323, in_Tmp_326, in_Tmp_342, in_retries;
    goto L214, exit;

  exit:
    return;

  L214:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_274;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_459;
    call {:si_unique_call 3716} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_459, 2);
    goto anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then;

  anon322_Then:
    assume {:partition} 0 > out_status_6;
    goto anon323_Else;

  anon323_Else:
    assume {:partition} out_retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    havoc out_Tmp_252;
    assume {:nonnull} out_Tmp_252 != 0;
    assume out_Tmp_252 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_252], 1) != 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_289;
    havoc out_Tmp_326;
    call {:si_unique_call 3718} WPP_SF_qD(out_Tmp_326, 43, out_Tmp_289, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_323;
    assume {:nonnull} out_Tmp_323 != 0;
    assume out_Tmp_323 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_268;
    assume {:nonnull} out_Tmp_268 != 0;
    assume out_Tmp_268 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc vslice_dummy_var_461;
    call {:si_unique_call 3720} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_461, 2);
    goto anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} out_status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    havoc out_Tmp_246;
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_246], 1) != 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_258;
    havoc out_Tmp_342;
    call {:si_unique_call 3719} WPP_SF_qD(out_Tmp_342, 44, out_Tmp_258, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    havoc vslice_dummy_var_460;
    Mem_T.INT4[in_currentGeneration] := vslice_dummy_var_460;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon431_Then;

  anon431_Then:
    assume {:partition} out_retries != 0;
    goto anon431_Then_dummy;

  anon431_Then_dummy:
    call {:si_unique_call 3721} {:si_old_unique_call 1} out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, out_Tmp_289, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, in_genPacket, out_Tmp_289, in_currentGeneration, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries, in_packet_1, in_FdoExtension_2);
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_246], 1) == 0;
    goto L424;

  anon344_Then:
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon342_Then:
    goto L413;

  anon340_Then:
    call {:si_unique_call 3717} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_252], 1) == 0;
    goto L401;

  anon339_Then:
    goto L401;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_246: int, in_Tmp_252: int, in_Tmp_258: int, in_Tmp_268: int, in_Tmp_274: int, in_genPacket: int, in_Tmp_289: int, in_currentGeneration: int, in_status_6: int, in_Tmp_306: int, in_Tmp_323: int, in_Tmp_326: int, in_Tmp_342: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_246: int, out_Tmp_252: int, out_Tmp_258: int, out_Tmp_268: int, out_Tmp_274: int, out_Tmp_289: int, out_status_6: int, out_Tmp_306: int, out_Tmp_323: int, out_Tmp_326: int, out_Tmp_342: int, out_retries: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_239: int, in_sdv_49: int, in_dependentLength: int, in_Tmp_271: int, in_sdv_56: int, in_Tmp_278: int, in_Tmp_279: int, in_j: int, in_unitDirEntries: int, in_Tmp_290: int, in_Tmp_294: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_68: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_321: int, in_firstDevInfo: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_239: int, out_Tmp_271: int, out_Tmp_278: int, out_Tmp_279: int, out_j: int, out_unitDirEntries: int, out_Tmp_290: int, out_Tmp_294: int, out_status_6: int, out_Tmp_302: int, out_Tmp_304: int, out_Tmp_305: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_321: int, out_Tmp_330: int, out_Tmp_332: int)
{
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;

  entry:
    out_Tmp_239, out_Tmp_271, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, out_status_6, out_Tmp_302, out_Tmp_304, out_Tmp_305, out_modelIdCount, out_devListSize, out_Tmp_321, out_Tmp_330, out_Tmp_332 := in_Tmp_239, in_Tmp_271, in_Tmp_278, in_Tmp_279, in_j, in_unitDirEntries, in_Tmp_290, in_Tmp_294, in_status_6, in_Tmp_302, in_Tmp_304, in_Tmp_305, in_modelIdCount, in_devListSize, in_Tmp_321, in_Tmp_330, in_Tmp_332;
    goto L445, exit;

  exit:
    return;

  L445:
    goto anon348_Else;

  anon348_Else:
    assume {:partition} in_dependentLength > out_j;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    out_Tmp_278 := BAND(Mem_T.INT4[in_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} out_Tmp_278 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc out_Tmp_321;
    assume {:nonnull} out_Tmp_321 != 0;
    assume out_Tmp_321 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_321], 2) != 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc out_Tmp_302;
    havoc out_Tmp_279;
    call {:si_unique_call 3725} WPP_SF_q(out_Tmp_279, 40, out_Tmp_302, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3722} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_294 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} BAND(Mem_T.INT4[in_unitDependentDirectory_1], 255) != 56;
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) != 57;
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) != 129;
    goto L542;

  L542:
    out_j := out_j + 1;
    goto L542_dummy;

  L542_dummy:
    call {:si_unique_call 3730} {:si_old_unique_call 1} out_Tmp_239, out_Tmp_271, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, out_status_6, out_Tmp_302, out_Tmp_304, out_Tmp_305, out_modelIdCount, out_devListSize, out_Tmp_321, out_Tmp_330, out_Tmp_332 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_239, in_sdv_49, in_dependentLength, out_Tmp_271, in_sdv_56, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_302, in_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, in_sdv_68, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_321, in_firstDevInfo, out_Tmp_330, in_ModelLeaf_1, in_sdv_77, out_Tmp_332, in_devInfo, in_dependentLocation, in_FdoExtension_2);
    return;

  anon388_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) == 129;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    out_Tmp_271 := BAND(Mem_T.INT4[in_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} out_Tmp_271 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} out_Tmp_271 == 23;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3727} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    goto anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_463;
    call {:si_unique_call 3728} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_463, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3729} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    havoc out_Tmp_290;
    assume {:nonnull} out_Tmp_290 != 0;
    assume out_Tmp_290 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_290], 2) != 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc out_Tmp_330;
    havoc out_Tmp_305;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_462;
    call {:si_unique_call 3726} WPP_SF_S(out_Tmp_305, 41, out_Tmp_330, vslice_dummy_var_462);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_290], 2) == 0;
    goto L512;

  anon360_Then:
    goto L512;

  anon359_Then:
    goto L512;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) == 57;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:partition} BAND(Mem_T.INT4[in_unitDependentDirectory_1], 255) == 56;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_321], 2) == 0;
    goto L465;

  anon351_Then:
    goto L465;

  anon350_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    havoc out_Tmp_304;
    assume {:nonnull} out_Tmp_304 != 0;
    assume out_Tmp_304 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_304], 2) != 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_239;
    havoc out_Tmp_332;
    call {:si_unique_call 3724} WPP_SF_q(out_Tmp_332, 39, out_Tmp_239, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3723} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(in_devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_304], 2) == 0;
    goto L493;

  anon356_Then:
    goto L493;

  anon349_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} out_Tmp_278 != 20;
    goto L448;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_239: int, in_sdv_49: int, in_dependentLength: int, in_Tmp_271: int, in_sdv_56: int, in_Tmp_278: int, in_Tmp_279: int, in_j: int, in_unitDirEntries: int, in_Tmp_290: int, in_Tmp_294: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_68: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_321: int, in_firstDevInfo: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_239: int, out_Tmp_271: int, out_Tmp_278: int, out_Tmp_279: int, out_j: int, out_unitDirEntries: int, out_Tmp_290: int, out_Tmp_294: int, out_status_6: int, out_Tmp_302: int, out_Tmp_304: int, out_Tmp_305: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_321: int, out_Tmp_330: int, out_Tmp_332: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_294 == in_Tmp_294 || out_Tmp_294 == in_unitDependentDirectory_1;
  free ensures {:va_keep} out_status_6 == -1073741670 || out_status_6 == 0 || out_status_6 == -1073741823 || out_status_6 == in_status_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_237: int, in_Tmp_238: int, in_Tmp_239: int, in_Tmp_243: int, in_Tmp_244: int, in_Tmp_246: int, in_Tmp_247: int, in_sdv_49: int, in_Tmp_250: int, in_Tmp_251: int, in_Tmp_252: int, in_dependentLength: int, in_sdv_51: int, in_Tmp_253: int, in_Tmp_256: int, in_Tmp_258: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_53: int, in_Tmp_262: int, in_Tmp_263: int, in_Tmp_267: int, in_sdv_55: int, in_Tmp_268: int, in_Tmp_269: int, in_Tmp_271: int, in_tmp: int, in_Tmp_273: int, in_Tmp_274: int, in_sdv_56: int, in_i_1: int, in_Tmp_275: int, in_genPacket: int, in_Tmp_276: int, in_Tmp_278: int, in_Tmp_279: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_sdv_57: int, in_Tmp_285: int, in_Tmp_286: int, in_Tmp_287: int, in_unitDirEntries: int, in_Tmp_289: int, in_Tmp_290: int, in_currentGeneration: int, in_Tmp_293: int, in_sdv_59: int, in_Tmp_294: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_Tmp_296: int, in_sdv_60: int, in_status_6: int, in_sdv_61: int, in_Tmp_301: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_sdv_64: int, in_sdv_65: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_67: int, in_Tmp_306: int, in_sdv_68: int, in_Tmp_307: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_directoryLength: int, in_sdv_69: int, in_Tmp_314: int, in_Tmp_315: int, in_Tmp_316: int, in_modelIdCount: int, in_Tmp_317: int, in_dirInfoQuad: int, in_Tmp_318: int, in_devListSize: int, in_firstOne: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_Tmp_321: int, in_Tmp_322: int, in_sdv_72: int, in_Tmp_323: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_326: int, in_Tmp_327: int, in_Tmp_329: int, in_sdv_76: int, in_ModelLeaf: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_Tmp_337: int, in_Tmp_339: int, in_Tmp_342: int, in_Tmp_343: int, in_devInfo: int, in_sdv_80: int, in_sdv_81: int, in_Tmp_345: int, in_Tmp_346: int, in_retries: int, in_dependentLocation: int, in_Tmp_349: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_350: int, in_info: int, in_Tmp_352: int, in_Tmp_353: int, in_Tmp_354: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_237: int, out_Tmp_238: int, out_Tmp_239: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_246: int, out_Tmp_247: int, out_Tmp_250: int, out_Tmp_251: int, out_Tmp_252: int, out_dependentLength: int, out_sdv_51: int, out_Tmp_253: int, out_Tmp_256: int, out_Tmp_258: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_267: int, out_Tmp_268: int, out_Tmp_269: int, out_Tmp_271: int, out_tmp: int, out_Tmp_273: int, out_Tmp_274: int, out_i_1: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_278: int, out_Tmp_279: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_Tmp_286: int, out_Tmp_287: int, out_unitDirEntries: int, out_Tmp_289: int, out_Tmp_290: int, out_Tmp_293: int, out_sdv_59: int, out_Tmp_294: int, out_Tmp_295: int, out_Tmp_296: int, out_status_6: int, out_Tmp_301: int, out_offset: int, out_Tmp_302: int, out_unitDependentDirectory_1: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_307: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_sdv_69: int, out_Tmp_314: int, out_Tmp_315: int, out_Tmp_316: int, out_modelIdCount: int, out_Tmp_317: int, out_dirInfoQuad: int, out_Tmp_318: int, out_devListSize: int, out_firstOne: int, out_Tmp_319: int, out_Tmp_320: int, out_Tmp_321: int, out_Tmp_322: int, out_Tmp_323: int, out_sbp2Device: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_330: int, out_Tmp_332: int, out_Tmp_337: int, out_Tmp_339: int, out_Tmp_342: int, out_Tmp_343: int, out_devInfo: int, out_Tmp_345: int, out_Tmp_346: int, out_retries: int, out_Tmp_349: int, out_Tmp_350: int, out_info: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int)
{
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;

  entry:
    out_Tmp_237, out_Tmp_238, out_Tmp_239, out_Tmp_243, out_Tmp_244, out_Tmp_246, out_Tmp_247, out_Tmp_250, out_Tmp_251, out_Tmp_252, out_dependentLength, out_sdv_51, out_Tmp_253, out_Tmp_256, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_Tmp_262, out_Tmp_263, out_Tmp_267, out_Tmp_268, out_Tmp_269, out_Tmp_271, out_tmp, out_Tmp_273, out_Tmp_274, out_i_1, out_Tmp_275, out_Tmp_276, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287, out_unitDirEntries, out_Tmp_289, out_Tmp_290, out_Tmp_293, out_sdv_59, out_Tmp_294, out_Tmp_295, out_Tmp_296, out_status_6, out_Tmp_301, out_offset, out_Tmp_302, out_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_307, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_sdv_69, out_Tmp_314, out_Tmp_315, out_Tmp_316, out_modelIdCount, out_Tmp_317, out_dirInfoQuad, out_Tmp_318, out_devListSize, out_firstOne, out_Tmp_319, out_Tmp_320, out_Tmp_321, out_Tmp_322, out_Tmp_323, out_sbp2Device, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_330, out_Tmp_332, out_Tmp_337, out_Tmp_339, out_Tmp_342, out_Tmp_343, out_devInfo, out_Tmp_345, out_Tmp_346, out_retries, out_Tmp_349, out_Tmp_350, out_info, out_Tmp_352, out_Tmp_353, out_Tmp_354 := in_Tmp_237, in_Tmp_238, in_Tmp_239, in_Tmp_243, in_Tmp_244, in_Tmp_246, in_Tmp_247, in_Tmp_250, in_Tmp_251, in_Tmp_252, in_dependentLength, in_sdv_51, in_Tmp_253, in_Tmp_256, in_Tmp_258, in_Tmp_259, in_Tmp_260, in_Tmp_262, in_Tmp_263, in_Tmp_267, in_Tmp_268, in_Tmp_269, in_Tmp_271, in_tmp, in_Tmp_273, in_Tmp_274, in_i_1, in_Tmp_275, in_Tmp_276, in_Tmp_278, in_Tmp_279, in_Tmp_280, in_Tmp_281, in_j, in_Tmp_284, in_Tmp_285, in_Tmp_286, in_Tmp_287, in_unitDirEntries, in_Tmp_289, in_Tmp_290, in_Tmp_293, in_sdv_59, in_Tmp_294, in_Tmp_295, in_Tmp_296, in_status_6, in_Tmp_301, in_offset, in_Tmp_302, in_unitDependentDirectory_1, in_Tmp_304, in_Tmp_305, in_Tmp_306, in_Tmp_307, in_Tmp_308, in_Tmp_309, in_Tmp_313, in_sdv_69, in_Tmp_314, in_Tmp_315, in_Tmp_316, in_modelIdCount, in_Tmp_317, in_dirInfoQuad, in_Tmp_318, in_devListSize, in_firstOne, in_Tmp_319, in_Tmp_320, in_Tmp_321, in_Tmp_322, in_Tmp_323, in_sbp2Device, in_Tmp_326, in_Tmp_327, in_Tmp_329, in_Tmp_330, in_Tmp_332, in_Tmp_337, in_Tmp_339, in_Tmp_342, in_Tmp_343, in_devInfo, in_Tmp_345, in_Tmp_346, in_retries, in_Tmp_349, in_Tmp_350, in_info, in_Tmp_352, in_Tmp_353, in_Tmp_354;
    goto L132, exit;

  exit:
    return;

  L132:
    goto anon308_Then;

  anon308_Then:
    assume {:partition} in_Sbp2Req == 0;
    goto anon309_Else;

  anon309_Else:
    assume {:partition} in_directoryLength > out_i_1;
    out_Tmp_346 := out_devListSize;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_259;
    out_devInfo := out_Tmp_259 + out_Tmp_346 * 268;
    out_Tmp_319 := in_unitDirectory_1;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} BAND(Mem_T.INT4[in_unitDirectory_1], 255) != 20;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 56;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 57;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 58;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 60;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 61;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 84;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 129;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) != 212;
    goto L371;

  L371:
    out_i_1 := out_i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 3772} {:si_old_unique_call 1} out_Tmp_237, out_Tmp_238, out_Tmp_239, out_Tmp_243, out_Tmp_244, out_Tmp_246, out_Tmp_247, out_Tmp_250, out_Tmp_251, out_Tmp_252, out_dependentLength, out_sdv_51, out_Tmp_253, out_Tmp_256, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_Tmp_262, out_Tmp_263, out_Tmp_267, out_Tmp_268, out_Tmp_269, out_Tmp_271, out_tmp, out_Tmp_273, out_Tmp_274, out_i_1, out_Tmp_275, out_Tmp_276, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287, out_unitDirEntries, out_Tmp_289, out_Tmp_290, out_Tmp_293, out_sdv_59, out_Tmp_294, out_Tmp_295, out_Tmp_296, out_status_6, out_Tmp_301, out_offset, out_Tmp_302, out_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_307, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_sdv_69, out_Tmp_314, out_Tmp_315, out_Tmp_316, out_modelIdCount, out_Tmp_317, out_dirInfoQuad, out_Tmp_318, out_devListSize, out_firstOne, out_Tmp_319, out_Tmp_320, out_Tmp_321, out_Tmp_322, out_Tmp_323, out_sbp2Device, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_330, out_Tmp_332, out_Tmp_337, out_Tmp_339, out_Tmp_342, out_Tmp_343, out_devInfo, out_Tmp_345, out_Tmp_346, out_retries, out_Tmp_349, out_Tmp_350, out_info, out_Tmp_352, out_Tmp_353, out_Tmp_354 := Sbp2Get1394ConfigInfo_loop_L132(out_Tmp_237, out_Tmp_238, out_Tmp_239, out_Tmp_243, out_Tmp_244, out_Tmp_246, out_Tmp_247, in_sdv_49, out_Tmp_250, out_Tmp_251, out_Tmp_252, out_dependentLength, out_sdv_51, out_Tmp_253, out_Tmp_256, out_Tmp_258, out_Tmp_259, out_Tmp_260, in_sdv_53, out_Tmp_262, out_Tmp_263, out_Tmp_267, in_sdv_55, out_Tmp_268, out_Tmp_269, out_Tmp_271, out_tmp, out_Tmp_273, out_Tmp_274, in_sdv_56, out_i_1, out_Tmp_275, in_genPacket, out_Tmp_276, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, in_sdv_57, out_Tmp_285, out_Tmp_286, out_Tmp_287, out_unitDirEntries, out_Tmp_289, out_Tmp_290, in_currentGeneration, out_Tmp_293, out_sdv_59, out_Tmp_294, out_Tmp_295, in_vendorLeaf_1, out_Tmp_296, in_sdv_60, out_status_6, in_sdv_61, out_Tmp_301, out_offset, in_modelLeaf_1, out_Tmp_302, out_unitDependentDirectory_1, in_sdv_64, in_sdv_65, out_Tmp_304, out_Tmp_305, in_sdv_67, out_Tmp_306, in_sdv_68, out_Tmp_307, in_cromOffset, out_Tmp_308, out_Tmp_309, out_Tmp_313, in_directoryLength, out_sdv_69, out_Tmp_314, out_Tmp_315, out_Tmp_316, out_modelIdCount, out_Tmp_317, out_dirInfoQuad, out_Tmp_318, out_devListSize, out_firstOne, out_Tmp_319, in_sdv_71, out_Tmp_320, out_Tmp_321, out_Tmp_322, in_sdv_72, out_Tmp_323, in_directoryLocation, out_sbp2Device, in_firstDevInfo, out_Tmp_326, out_Tmp_327, out_Tmp_329, in_sdv_76, in_ModelLeaf, out_Tmp_330, in_ModelLeaf_1, in_sdv_77, out_Tmp_332, out_Tmp_337, out_Tmp_339, out_Tmp_342, out_Tmp_343, out_devInfo, in_sdv_80, in_sdv_81, out_Tmp_345, out_Tmp_346, out_retries, in_dependentLocation, out_Tmp_349, in_unitDirectory_1, in_ModelLeaf_2, in_packet_1, out_Tmp_350, out_info, out_Tmp_352, out_Tmp_353, out_Tmp_354, in_FdoExtension_2, in_Sbp2Req);
    return;

  anon378_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 212;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} out_firstOne != 0;
    out_retries := 3;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    havoc out_offset;
    call {:si_unique_call 3765} out_sdv_59 := IoAllocateMdl(0, out_dependentLength, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_286;
    assume {:nonnull} out_Tmp_286 != 0;
    assume out_Tmp_286 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    goto anon412_Then;

  anon412_Then:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_247;
    assume {:nonnull} out_Tmp_247 != 0;
    assume out_Tmp_247 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_250;
    assume {:nonnull} out_Tmp_250 != 0;
    assume out_Tmp_250 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_318;
    assume {:nonnull} out_Tmp_318 != 0;
    assume out_Tmp_318 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_273;
    assume {:nonnull} out_Tmp_273 != 0;
    assume out_Tmp_273 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_238;
    assume {:nonnull} out_Tmp_238 != 0;
    assume out_Tmp_238 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_320;
    assume {:nonnull} out_Tmp_320 != 0;
    assume out_Tmp_320 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_322;
    assume {:nonnull} out_Tmp_322 != 0;
    assume out_Tmp_322 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_237;
    assume {:nonnull} out_Tmp_237 != 0;
    assume out_Tmp_237 > 0;
    goto L214;

  L214:
    call {:si_unique_call 3759} out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, out_Tmp_289, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, in_genPacket, out_Tmp_289, in_currentGeneration, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries, in_packet_1, in_FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_274;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_471;
    call {:si_unique_call 3760} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_471, 2);
    goto anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} out_status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc vslice_dummy_var_470;
    call {:si_unique_call 3758} DeAllocateIrpAndIrb(in_FdoExtension_2, vslice_dummy_var_470);
    goto L223;

  L223:
    goto anon325_Else;

  anon325_Else:
    assume {:partition} out_status_6 >= 0;
    call {:si_unique_call 3756} out_dirInfoQuad := corral_nondet();
    out_dependentLength := out_dirInfoQuad * 4;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3757} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_301;
    assume {:nonnull} out_Tmp_301 != 0;
    assume out_Tmp_301 > 0;
    goto anon414_Then;

  anon414_Then:
    assume {:partition} 256 >= out_dependentLength;
    call {:si_unique_call 3754} sdv_ExFreePool(0);
    out_Tmp_337 := out_dependentLength + 4;
    call {:si_unique_call 3755} out_sdv_51 := ExAllocatePoolWithTag(512, out_Tmp_337, -464166317);
    out_unitDependentDirectory_1 := out_sdv_51;
    goto anon416_Else;

  anon416_Else:
    assume {:partition} out_unitDependentDirectory_1 != 0;
    out_Tmp_256 := out_dependentLength + 4;
    call {:si_unique_call 3753} out_sdv_69 := IoAllocateMdl(0, out_Tmp_256, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_275;
    assume {:nonnull} out_Tmp_275 != 0;
    assume out_Tmp_275 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_251;
    assume {:nonnull} out_Tmp_251 != 0;
    assume out_Tmp_251 > 0;
    goto anon417_Else;

  anon417_Else:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    out_j := 1;
    goto L273;

  L273:
    call {:si_unique_call 3751} out_Tmp_253, out_Tmp_262, out_Tmp_263, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, out_status_6, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L273(out_dependentLength, out_Tmp_253, out_Tmp_262, out_Tmp_263, in_sdv_55, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, in_vendorLeaf_1, out_status_6, in_sdv_61, out_offset, out_unitDependentDirectory_1, in_sdv_67, in_cromOffset, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, in_firstDevInfo, out_Tmp_329, out_devInfo, in_sdv_80, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_262;
    assume {:nonnull} out_Tmp_262 != 0;
    assume out_Tmp_262 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_263;
    assume {:nonnull} out_Tmp_263 != 0;
    assume out_Tmp_263 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_281;
    assume {:nonnull} out_Tmp_281 != 0;
    assume out_Tmp_281 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_329;
    assume {:nonnull} out_Tmp_329 != 0;
    assume out_Tmp_329 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_314;
    assume {:nonnull} out_Tmp_314 != 0;
    assume out_Tmp_314 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_469;
    call {:si_unique_call 3752} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_469, 2);
    goto anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then;

  anon328_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    out_Tmp_253 := BAND(Mem_T.INT4[out_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_Tmp_253 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    havoc out_Tmp_313;
    assume {:nonnull} out_Tmp_313 != 0;
    assume out_Tmp_313 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_313], 2) != 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc out_Tmp_295;
    havoc out_Tmp_284;
    call {:si_unique_call 3767} WPP_SF_q(out_Tmp_284, 47, out_Tmp_295, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3766} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_308 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} BAND(Mem_T.INT4[out_unitDependentDirectory_1], 255) != 56;
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) != 57;
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) != 129;
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} INTDIV(out_dependentLength, 4) < out_j;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3731} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_244;
    assume {:nonnull} out_Tmp_244 != 0;
    assume out_Tmp_244 > 0;
    goto L371;

  anon424_Then:
    assume {:partition} out_j <= INTDIV(out_dependentLength, 4);
    assume false;
    return;

  anon386_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) == 129;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    out_Tmp_280 := BAND(Mem_T.INT4[out_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} out_Tmp_280 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} out_Tmp_280 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3770} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    goto anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    havoc out_Tmp_309;
    assume {:nonnull} out_Tmp_309 != 0;
    assume out_Tmp_309 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_309], 2) != 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_285;
    havoc out_Tmp_317;
    call {:si_unique_call 3771} WPP_SF_q(out_Tmp_317, 48, out_Tmp_285, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_474;
    call {:si_unique_call 3768} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_474, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3769} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_309], 2) == 0;
    goto L349;

  anon335_Then:
    goto L349;

  anon334_Then:
    goto L344;

  anon387_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_308], 255) == 57;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:partition} BAND(Mem_T.INT4[out_unitDependentDirectory_1], 255) == 56;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_313], 2) == 0;
    goto L300;

  anon329_Then:
    goto L300;

  anon420_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} out_Tmp_253 != 20;
    goto L286;

  anon324_Then:
    goto L223;

  anon322_Then:
    assume {:partition} 0 > out_status_6;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} out_retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    havoc out_Tmp_252;
    assume {:nonnull} out_Tmp_252 != 0;
    assume out_Tmp_252 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_252], 1) != 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_289;
    havoc out_Tmp_326;
    call {:si_unique_call 3762} WPP_SF_qD(out_Tmp_326, 43, out_Tmp_289, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_323;
    assume {:nonnull} out_Tmp_323 != 0;
    assume out_Tmp_323 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_268;
    assume {:nonnull} out_Tmp_268 != 0;
    assume out_Tmp_268 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc vslice_dummy_var_473;
    call {:si_unique_call 3764} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_473, 2);
    goto anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} out_status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    havoc out_Tmp_246;
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_246], 1) != 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_258;
    havoc out_Tmp_342;
    call {:si_unique_call 3763} WPP_SF_qD(out_Tmp_342, 44, out_Tmp_258, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    havoc vslice_dummy_var_472;
    Mem_T.INT4[in_currentGeneration] := vslice_dummy_var_472;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} out_retries == 0;
    goto L222;

  anon431_Then:
    assume {:partition} out_retries != 0;
    assume false;
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_246], 1) == 0;
    goto L424;

  anon344_Then:
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon342_Then:
    goto L413;

  anon340_Then:
    call {:si_unique_call 3761} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_252], 1) == 0;
    goto L401;

  anon339_Then:
    goto L401;

  anon323_Then:
    assume {:partition} 1 >= out_retries;
    goto L222;

  anon321_Then:
    assume {:partition} out_firstOne == 0;
    out_firstOne := 1;
    out_j := 0;
    goto L445;

  L445:
    call {:si_unique_call 3742} out_Tmp_239, out_Tmp_271, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, out_status_6, out_Tmp_302, out_Tmp_304, out_Tmp_305, out_modelIdCount, out_devListSize, out_Tmp_321, out_Tmp_330, out_Tmp_332 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_239, in_sdv_49, out_dependentLength, out_Tmp_271, in_sdv_56, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_302, out_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, in_sdv_68, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_321, in_firstDevInfo, out_Tmp_330, in_ModelLeaf_1, in_sdv_77, out_Tmp_332, out_devInfo, in_dependentLocation, in_FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} out_dependentLength > out_j;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    out_Tmp_278 := BAND(Mem_T.INT4[out_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} out_Tmp_278 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc out_Tmp_321;
    assume {:nonnull} out_Tmp_321 != 0;
    assume out_Tmp_321 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_321], 2) != 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc out_Tmp_302;
    havoc out_Tmp_279;
    call {:si_unique_call 3746} WPP_SF_q(out_Tmp_279, 40, out_Tmp_302, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3743} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_294 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} BAND(Mem_T.INT4[out_unitDependentDirectory_1], 255) != 56;
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) != 57;
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) != 129;
    goto L542;

  L542:
    out_j := out_j + 1;
    assume false;
    return;

  anon388_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) == 129;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    out_Tmp_271 := BAND(Mem_T.INT4[out_unitDependentDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} out_Tmp_271 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} out_Tmp_271 == 23;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3748} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    goto anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_468;
    call {:si_unique_call 3749} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_468, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3750} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    havoc out_Tmp_290;
    assume {:nonnull} out_Tmp_290 != 0;
    assume out_Tmp_290 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_290], 2) != 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc out_Tmp_330;
    havoc out_Tmp_305;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_467;
    call {:si_unique_call 3747} WPP_SF_S(out_Tmp_305, 41, out_Tmp_330, vslice_dummy_var_467);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_290], 2) == 0;
    goto L512;

  anon360_Then:
    goto L512;

  anon359_Then:
    goto L512;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_294], 255) == 57;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:partition} BAND(Mem_T.INT4[out_unitDependentDirectory_1], 255) == 56;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_321], 2) == 0;
    goto L465;

  anon351_Then:
    goto L465;

  anon350_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    havoc out_Tmp_304;
    assume {:nonnull} out_Tmp_304 != 0;
    assume out_Tmp_304 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_304], 2) != 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_239;
    havoc out_Tmp_332;
    call {:si_unique_call 3745} WPP_SF_q(out_Tmp_332, 39, out_Tmp_239, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3744} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_304], 2) == 0;
    goto L493;

  anon356_Then:
    goto L493;

  anon349_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} out_Tmp_278 != 20;
    goto L448;

  anon348_Then:
    assume {:partition} out_j >= out_dependentLength;
    goto L371;

  anon379_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 129;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    out_Tmp_293 := BAND(Mem_T.INT4[in_unitDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} out_Tmp_293 == 23;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} out_devListSize >= out_modelIdCount;
    out_Tmp_267 := out_modelIdCount;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_316;
    out_info := out_Tmp_316 + out_Tmp_267 * 268;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3739} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDirectory_1, in_cromOffset, in_ModelLeaf);
    goto anon410_Else;

  anon410_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_466;
    call {:si_unique_call 3740} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_466, uniModelId__DEVICE_INFORMATION(out_info));
    call {:si_unique_call 3741} sdv_ExFreePool(0);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    havoc out_Tmp_296;
    assume {:nonnull} out_Tmp_296 != 0;
    assume out_Tmp_296 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_296], 2) != 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc out_Tmp_260;
    havoc out_Tmp_269;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_465;
    call {:si_unique_call 3738} WPP_SF_S(out_Tmp_269, 38, out_Tmp_260, vslice_dummy_var_465);
    goto L562;

  L562:
    out_modelIdCount := out_modelIdCount + 1;
    goto L371;

  anon365_Then:
    goto L562;

  anon411_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_296], 2) == 0;
    goto L562;

  anon364_Then:
    goto L562;

  anon363_Then:
    goto L562;

  anon409_Then:
    goto L562;

  anon362_Then:
    assume {:partition} out_modelIdCount > out_devListSize;
    goto L371;

  anon408_Then:
    assume {:partition} out_Tmp_293 != 23;
    goto L371;

  anon380_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 84;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_sbp2Device := 1;
    goto L371;

  anon381_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 61;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} in_sdv_64 != 0;
    out_Tmp_345 := 1;
    goto L605;

  L605:
    out_tmp := out_Tmp_345;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} out_tmp != 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L371;

  anon407_Then:
    assume {:partition} out_tmp == 0;
    goto L371;

  anon366_Then:
    assume {:partition} in_sdv_64 == 0;
    out_Tmp_345 := 0;
    goto L605;

  anon382_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 60;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    havoc out_Tmp_315;
    assume {:nonnull} out_Tmp_315 != 0;
    assume out_Tmp_315 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_315], 1) != 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc out_Tmp_343;
    havoc out_Tmp_243;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc vslice_dummy_var_464;
    call {:si_unique_call 3732} WPP_SF_qD(out_Tmp_243, 35, out_Tmp_343, in_FdoExtension_2, vslice_dummy_var_464);
    goto L371;

  anon367_Then:
    goto L371;

  anon406_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_315], 1) == 0;
    goto L371;

  anon405_Then:
    goto L371;

  anon383_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 58;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_354;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} 8 > out_Tmp_354;
    out_Tmp_287 := 8;
    goto L633;

  L633:
    out_tmp := out_Tmp_287;
    out_tmp := out_tmp * 4;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} 16 > out_tmp - 20;
    out_Tmp_352 := out_tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    call {:si_unique_call 3733} out_tmp := corral_nondet();
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon404_Then:
    assume {:partition} out_tmp - 20 >= 16;
    out_Tmp_352 := 16;
    goto L638;

  anon403_Then:
    assume {:partition} out_Tmp_354 >= 8;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_287;
    goto L633;

  anon384_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 57;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon385_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_319], 255) == 56;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon399_Then:
    assume {:partition} BAND(Mem_T.INT4[in_unitDirectory_1], 255) == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} out_devListSize != 0;
    goto L661;

  L661:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    havoc out_Tmp_349;
    assume {:nonnull} out_Tmp_349 != 0;
    assume out_Tmp_349 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_349], 2) != 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc out_Tmp_327;
    havoc out_Tmp_307;
    call {:si_unique_call 3737} WPP_SF_q(out_Tmp_307, 37, out_Tmp_327, in_FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3734} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L678;

  L678:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon371_Then:
    goto L667;

  anon401_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_349], 2) == 0;
    goto L667;

  anon370_Then:
    goto L667;

  anon369_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L678;

  anon400_Then:
    assume {:partition} out_devListSize == 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    havoc out_Tmp_276;
    assume {:nonnull} out_Tmp_276 != 0;
    assume out_Tmp_276 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_276], 2) != 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc out_Tmp_350;
    havoc out_Tmp_339;
    call {:si_unique_call 3736} WPP_SF_q(out_Tmp_339, 36, out_Tmp_350, in_FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3735} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L661;

  anon373_Then:
    goto L693;

  anon402_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_276], 2) == 0;
    goto L693;

  anon372_Then:
    goto L693;

  anon368_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L661;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_237: int, in_Tmp_238: int, in_Tmp_239: int, in_Tmp_243: int, in_Tmp_244: int, in_Tmp_246: int, in_Tmp_247: int, in_sdv_49: int, in_Tmp_250: int, in_Tmp_251: int, in_Tmp_252: int, in_dependentLength: int, in_sdv_51: int, in_Tmp_253: int, in_Tmp_256: int, in_Tmp_258: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_53: int, in_Tmp_262: int, in_Tmp_263: int, in_Tmp_267: int, in_sdv_55: int, in_Tmp_268: int, in_Tmp_269: int, in_Tmp_271: int, in_tmp: int, in_Tmp_273: int, in_Tmp_274: int, in_sdv_56: int, in_i_1: int, in_Tmp_275: int, in_genPacket: int, in_Tmp_276: int, in_Tmp_278: int, in_Tmp_279: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_sdv_57: int, in_Tmp_285: int, in_Tmp_286: int, in_Tmp_287: int, in_unitDirEntries: int, in_Tmp_289: int, in_Tmp_290: int, in_currentGeneration: int, in_Tmp_293: int, in_sdv_59: int, in_Tmp_294: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_Tmp_296: int, in_sdv_60: int, in_status_6: int, in_sdv_61: int, in_Tmp_301: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_sdv_64: int, in_sdv_65: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_67: int, in_Tmp_306: int, in_sdv_68: int, in_Tmp_307: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_directoryLength: int, in_sdv_69: int, in_Tmp_314: int, in_Tmp_315: int, in_Tmp_316: int, in_modelIdCount: int, in_Tmp_317: int, in_dirInfoQuad: int, in_Tmp_318: int, in_devListSize: int, in_firstOne: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_Tmp_321: int, in_Tmp_322: int, in_sdv_72: int, in_Tmp_323: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_326: int, in_Tmp_327: int, in_Tmp_329: int, in_sdv_76: int, in_ModelLeaf: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_Tmp_337: int, in_Tmp_339: int, in_Tmp_342: int, in_Tmp_343: int, in_devInfo: int, in_sdv_80: int, in_sdv_81: int, in_Tmp_345: int, in_Tmp_346: int, in_retries: int, in_dependentLocation: int, in_Tmp_349: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_350: int, in_info: int, in_Tmp_352: int, in_Tmp_353: int, in_Tmp_354: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_237: int, out_Tmp_238: int, out_Tmp_239: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_246: int, out_Tmp_247: int, out_Tmp_250: int, out_Tmp_251: int, out_Tmp_252: int, out_dependentLength: int, out_sdv_51: int, out_Tmp_253: int, out_Tmp_256: int, out_Tmp_258: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_267: int, out_Tmp_268: int, out_Tmp_269: int, out_Tmp_271: int, out_tmp: int, out_Tmp_273: int, out_Tmp_274: int, out_i_1: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_278: int, out_Tmp_279: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_Tmp_286: int, out_Tmp_287: int, out_unitDirEntries: int, out_Tmp_289: int, out_Tmp_290: int, out_Tmp_293: int, out_sdv_59: int, out_Tmp_294: int, out_Tmp_295: int, out_Tmp_296: int, out_status_6: int, out_Tmp_301: int, out_offset: int, out_Tmp_302: int, out_unitDependentDirectory_1: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_307: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_sdv_69: int, out_Tmp_314: int, out_Tmp_315: int, out_Tmp_316: int, out_modelIdCount: int, out_Tmp_317: int, out_dirInfoQuad: int, out_Tmp_318: int, out_devListSize: int, out_firstOne: int, out_Tmp_319: int, out_Tmp_320: int, out_Tmp_321: int, out_Tmp_322: int, out_Tmp_323: int, out_sbp2Device: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_330: int, out_Tmp_332: int, out_Tmp_337: int, out_Tmp_339: int, out_Tmp_342: int, out_Tmp_343: int, out_devInfo: int, out_Tmp_345: int, out_Tmp_346: int, out_retries: int, out_Tmp_349: int, out_Tmp_350: int, out_info: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_firstOne == 1 || out_firstOne == in_firstOne;
  free ensures {:va_keep} out_Tmp_319 == in_Tmp_319 || out_Tmp_319 == in_unitDirectory_1;
  free ensures {:va_keep} out_sbp2Device == 1 || out_sbp2Device == in_sbp2Device;
  free ensures {:va_keep} out_Tmp_345 == 1 || out_Tmp_345 == 0 || out_Tmp_345 == in_Tmp_345;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_241: int, in_i_1: int, in_directoryLength: int, in_Tmp_347: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_241: int, out_i_1: int, out_Tmp_347: int)
{

  entry:
    out_Tmp_241, out_i_1, out_Tmp_347 := in_Tmp_241, in_i_1, in_Tmp_347;
    goto L71, exit;

  exit:
    return;

  L71:
    goto anon299_Else;

  anon299_Else:
    assume {:partition} in_Sbp2Req != 0;
    goto anon300_Else;

  anon300_Else:
    assume {:partition} in_directoryLength > out_i_1;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    out_Tmp_347 := BAND(Mem_T.INT4[in_unitDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} out_Tmp_347 == 129;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    out_Tmp_241 := BAND(Mem_T.INT4[in_unitDirectory_1], BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128));
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon393_Then;

  anon393_Then:
    goto L75;

  L75:
    out_i_1 := out_i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    havoc out_i_1;
    return;

  anon392_Then:
    assume {:partition} out_Tmp_347 != 129;
    goto L75;

  anon301_Then:
    goto L75;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_241: int, in_i_1: int, in_directoryLength: int, in_Tmp_347: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_241: int, out_i_1: int, out_Tmp_347: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_270: int, in_i_1: int, in_Tmp_298: int, in_Tmp_324: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_270: int, out_i_1: int, out_Tmp_298: int, out_Tmp_324: int, out_devInfo: int, out_buffer: int)
{

  entry:
    out_Tmp_270, out_i_1, out_Tmp_298, out_Tmp_324, out_devInfo, out_buffer := in_Tmp_270, in_i_1, in_Tmp_298, in_Tmp_324, in_devInfo, in_buffer;
    goto L705, exit;

  exit:
    return;

  L705:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    goto anon374_Else;

  anon374_Else:
    out_Tmp_270 := out_i_1;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_298;
    out_devInfo := out_Tmp_298 + out_Tmp_270 * 268;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_Tmp_324 := uniModelId__DEVICE_INFORMATION(out_devInfo);
    assume {:nonnull} out_Tmp_324 != 0;
    assume out_Tmp_324 > 0;
    call {:si_unique_call 3774} out_buffer := _InlineInterlockedExchangePointer(Buffer__STRING(out_Tmp_324), 0);
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} out_buffer != 0;
    call {:si_unique_call 3773} sdv_ExFreePool(0);
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L715;

  L715:
    out_i_1 := out_i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    call {:si_unique_call 3775} {:si_old_unique_call 1} out_Tmp_270, out_i_1, out_Tmp_298, out_Tmp_324, out_devInfo, out_buffer := Sbp2Get1394ConfigInfo_loop_L705(out_Tmp_270, out_i_1, out_Tmp_298, out_Tmp_324, out_devInfo, out_buffer, in_FdoExtension_2);
    return;

  anon375_Then:
    assume {:partition} out_buffer == 0;
    goto L715;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_270: int, in_i_1: int, in_Tmp_298: int, in_Tmp_324: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_270: int, out_i_1: int, out_Tmp_298: int, out_Tmp_324: int, out_devInfo: int, out_buffer: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_509: int, in_Tmp_511: int, in_Tmp_514: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_540: int, in_Tmp_542: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_509: int, out_Tmp_511: int, out_Tmp_514: int, out_Tmp_540: int, out_Tmp_542: int, out_status_11: int)
{
  var vslice_dummy_var_475: int;

  entry:
    out_i_2, out_Tmp_509, out_Tmp_511, out_Tmp_514, out_Tmp_540, out_Tmp_542, out_status_11 := in_i_2, in_Tmp_509, in_Tmp_511, in_Tmp_514, in_Tmp_540, in_Tmp_542, in_status_11;
    goto L136, exit;

  exit:
    return;

  L136:
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_511;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_511 != 0;
    assume out_Tmp_511 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_509;
    assume {:nonnull} out_Tmp_509 != 0;
    assume out_Tmp_509 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_540;
    assume {:nonnull} out_Tmp_540 != 0;
    assume out_Tmp_540 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_514;
    assume {:nonnull} out_Tmp_514 != 0;
    assume out_Tmp_514 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_542;
    assume {:nonnull} out_Tmp_542 != 0;
    assume out_Tmp_542 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_475;
    call {:si_unique_call 3776} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, vslice_dummy_var_475, 2);
    goto anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then;

  anon61_Then:
    assume {:partition} 0 <= out_status_11;
    out_i_2 := out_i_2 + 1;
    goto anon71_Then;

  anon71_Then:
    assume {:partition} out_i_2 <= INTDIV(in_leafLength, 4);
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    call {:si_unique_call 3777} {:si_old_unique_call 1} out_i_2, out_Tmp_509, out_Tmp_511, out_Tmp_514, out_Tmp_540, out_Tmp_542, out_status_11 := Sbp2ParseTextLeaf_loop_L136(out_i_2, out_Tmp_509, out_Tmp_511, out_Tmp_514, in_pdoExtension_4, in_leafLength, out_Tmp_540, out_Tmp_542, out_status_11, in_packet_2, in_ModelLeafLocation);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_509: int, in_Tmp_511: int, in_Tmp_514: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_540: int, in_Tmp_542: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_509: int, out_Tmp_511: int, out_Tmp_514: int, out_Tmp_540: int, out_Tmp_542: int, out_status_11: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ParseTextLeaf_loop_L44(in_Tmp_510: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_515: int, in_Tmp_519: int, in_Tmp_524: int, in_Tmp_525: int, in_Tmp_528: int, in_Tmp_531: int, in_Tmp_532: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_534: int, in_Tmp_536: int, in_tModelLeafMdl: int, in_Tmp_537: int, in_Tmp_538: int, in_Tmp_539: int, in_Tmp_545: int, in_status_11: int, in_packet_2: int, in_Tmp_546: int, in_event: int, in_Tmp_550: int, in_ModelLeafLocation: int, in_vslice_dummy_var_16: int) returns (out_Tmp_510: int, out_Tmp_515: int, out_Tmp_519: int, out_Tmp_524: int, out_Tmp_525: int, out_Tmp_528: int, out_Tmp_531: int, out_Tmp_532: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_534: int, out_Tmp_536: int, out_Tmp_537: int, out_Tmp_538: int, out_Tmp_539: int, out_Tmp_545: int, out_status_11: int, out_Tmp_546: int, out_Tmp_550: int, out_vslice_dummy_var_16: int)
{
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;

  entry:
    out_Tmp_510, out_Tmp_515, out_Tmp_519, out_Tmp_524, out_Tmp_525, out_Tmp_528, out_Tmp_531, out_Tmp_532, out_currentGeneration_1, out_retries_1, out_Tmp_534, out_Tmp_536, out_Tmp_537, out_Tmp_538, out_Tmp_539, out_Tmp_545, out_status_11, out_Tmp_546, out_Tmp_550, out_vslice_dummy_var_16 := in_Tmp_510, in_Tmp_515, in_Tmp_519, in_Tmp_524, in_Tmp_525, in_Tmp_528, in_Tmp_531, in_Tmp_532, in_currentGeneration_1, in_retries_1, in_Tmp_534, in_Tmp_536, in_Tmp_537, in_Tmp_538, in_Tmp_539, in_Tmp_545, in_status_11, in_Tmp_546, in_Tmp_550, in_vslice_dummy_var_16;
    goto L44, exit;

  exit:
    return;

  L44:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_retries_1 != 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_536;
    assume {:nonnull} out_Tmp_536 != 0;
    assume out_Tmp_536 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_537;
    assume {:nonnull} out_Tmp_537 != 0;
    assume out_Tmp_537 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_477;
    call {:si_unique_call 3782} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, vslice_dummy_var_477, 2);
    goto anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} out_status_11 < 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc out_Tmp_538;
    assume {:nonnull} out_Tmp_538 != 0;
    assume out_Tmp_538 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_538], 1) != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc out_Tmp_519;
    havoc out_Tmp_528;
    call {:si_unique_call 3781} WPP_SF_qD(out_Tmp_528, 58, out_Tmp_519, in_pdoExtension_4, out_status_11);
    goto L56;

  L56:
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_534;
    assume {:nonnull} out_Tmp_534 != 0;
    assume out_Tmp_534 > 0;
    havoc out_currentGeneration_1;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_515;
    assume {:nonnull} out_Tmp_515 != 0;
    assume out_Tmp_515 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_532;
    assume {:nonnull} out_Tmp_532 != 0;
    assume out_Tmp_532 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_539;
    assume {:nonnull} out_Tmp_539 != 0;
    assume out_Tmp_539 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_531;
    assume {:nonnull} out_Tmp_531 != 0;
    assume out_Tmp_531 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_550;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_550 != 0;
    assume out_Tmp_550 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_545;
    assume {:nonnull} out_Tmp_545 != 0;
    assume out_Tmp_545 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_510;
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_525;
    assume {:nonnull} out_Tmp_525 != 0;
    assume out_Tmp_525 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_524;
    assume {:nonnull} out_Tmp_524 != 0;
    assume out_Tmp_524 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_546;
    assume {:nonnull} out_Tmp_546 != 0;
    assume out_Tmp_546 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_476;
    call {:si_unique_call 3780} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, vslice_dummy_var_476, 2);
    goto anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto anon57_Else;

  anon57_Else:
    assume {:partition} out_status_11 < 0;
    call {:si_unique_call 3778} KeInitializeEvent(in_event, 0, 0);
    assume {:nonnull} in_waitValue_1 != 0;
    assume in_waitValue_1 > 0;
    call {:si_unique_call 3779} out_vslice_dummy_var_16 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_1);
    goto anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    out_retries_1 := out_retries_1 - 1;
    goto anon74_Else_dummy;

  anon74_Else_dummy:
    call {:si_unique_call 3783} {:si_old_unique_call 1} out_Tmp_510, out_Tmp_515, out_Tmp_519, out_Tmp_524, out_Tmp_525, out_Tmp_528, out_Tmp_531, out_Tmp_532, out_currentGeneration_1, out_retries_1, out_Tmp_534, out_Tmp_536, out_Tmp_537, out_Tmp_538, out_Tmp_539, out_Tmp_545, out_status_11, out_Tmp_546, out_Tmp_550, out_vslice_dummy_var_16 := Sbp2ParseTextLeaf_loop_L44(out_Tmp_510, in_waitValue_1, in_pdoExtension_4, out_Tmp_515, out_Tmp_519, out_Tmp_524, out_Tmp_525, out_Tmp_528, out_Tmp_531, out_Tmp_532, out_currentGeneration_1, out_retries_1, out_Tmp_534, out_Tmp_536, in_tModelLeafMdl, out_Tmp_537, out_Tmp_538, out_Tmp_539, out_Tmp_545, out_status_11, in_packet_2, out_Tmp_546, in_event, out_Tmp_550, in_ModelLeafLocation, out_vslice_dummy_var_16);
    return;

  anon59_Then:
    goto L56;

  anon75_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_538], 1) == 0;
    goto L56;

  anon58_Then:
    goto L56;

  anon56_Then:
    assume {:partition} 0 <= out_status_11;
    goto L56;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L44(in_Tmp_510: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_515: int, in_Tmp_519: int, in_Tmp_524: int, in_Tmp_525: int, in_Tmp_528: int, in_Tmp_531: int, in_Tmp_532: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_534: int, in_Tmp_536: int, in_tModelLeafMdl: int, in_Tmp_537: int, in_Tmp_538: int, in_Tmp_539: int, in_Tmp_545: int, in_status_11: int, in_packet_2: int, in_Tmp_546: int, in_event: int, in_Tmp_550: int, in_ModelLeafLocation: int, in_vslice_dummy_var_16: int) returns (out_Tmp_510: int, out_Tmp_515: int, out_Tmp_519: int, out_Tmp_524: int, out_Tmp_525: int, out_Tmp_528: int, out_Tmp_531: int, out_Tmp_532: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_534: int, out_Tmp_536: int, out_Tmp_537: int, out_Tmp_538: int, out_Tmp_539: int, out_Tmp_545: int, out_status_11: int, out_Tmp_546: int, out_Tmp_550: int, out_vslice_dummy_var_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ManagementTransactionWorker_loop_L38(in_pdoExtension_5: int, in_sdv_193: int, in_sdv_195: int, in_entry_1: int) returns (out_sdv_193: int, out_sdv_195: int, out_entry_1: int)
{

  entry:
    out_sdv_193, out_sdv_195, out_entry_1 := in_sdv_193, in_sdv_195, in_entry_1;
    goto L38, exit;

  exit:
    return;

  L38:
    call {:si_unique_call 3784} out_sdv_193 := sdv_IsListEmpty(0);
    goto anon37_Then;

  anon37_Then:
    assume {:partition} out_sdv_193 == 0;
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    call {:si_unique_call 3785} out_sdv_195 := RemoveHeadList(BusResetEntry__DEVICE_EXTENSION(in_pdoExtension_5));
    out_entry_1 := out_sdv_195;
    call {:si_unique_call 3786} sdv_ExFreePool(0);
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 3787} {:si_old_unique_call 1} out_sdv_193, out_sdv_195, out_entry_1 := Sbp2ManagementTransactionWorker_loop_L38(in_pdoExtension_5, out_sdv_193, out_sdv_195, out_entry_1);
    return;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker_loop_L38(in_pdoExtension_5: int, in_sdv_193: int, in_sdv_195: int, in_entry_1: int) returns (out_sdv_193: int, out_sdv_195: int, out_entry_1: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_193 == 1 || out_sdv_193 == 0 || out_sdv_193 == in_sdv_193;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ManagementTransactionWorker_loop_L55(in_Tmp_624: int, in_pdoExtension_5: int, in_Tmp_625: int, in_sdv_190: int, in_Tmp_627: int, in_status_16: int, in_Tmp_628: int, in_entry_1: int, in_irql_2: int, in_vslice_dummy_var_24: int) returns (out_Tmp_624: int, out_Tmp_625: int, out_sdv_190: int, out_Tmp_627: int, out_status_16: int, out_Tmp_628: int, out_entry_1: int, out_irql_2: int, out_vslice_dummy_var_24: int)
{
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;

  entry:
    out_Tmp_624, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_24 := in_Tmp_624, in_Tmp_625, in_sdv_190, in_Tmp_627, in_status_16, in_Tmp_628, in_entry_1, in_irql_2, in_vslice_dummy_var_24;
    goto L55, exit;

  exit:
    return;

  L55:
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    havoc out_entry_1;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc out_Tmp_625;
    assume {:nonnull} out_Tmp_625 != 0;
    assume out_Tmp_625 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_625], 2048) != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc out_Tmp_624;
    havoc out_Tmp_628;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    havoc vslice_dummy_var_478;
    havoc vslice_dummy_var_479;
    havoc vslice_dummy_var_480;
    call {:si_unique_call 3791} WPP_SF_qDddD(out_Tmp_628, 85, out_Tmp_624, in_pdoExtension_5, vslice_dummy_var_478, vslice_dummy_var_479, vslice_dummy_var_480, out_status_16);
    goto L98;

  L98:
    call {:si_unique_call 3789} out_vslice_dummy_var_24 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3790} sdv_ExFreePool(0);
    goto anon40_Else;

  anon40_Else:
    assume {:partition} out_status_16 != -1073741810;
    call {:si_unique_call 3788} out_sdv_190 := sdv_IsListEmpty(0);
    goto anon41_Else;

  anon41_Else:
    assume {:partition} out_sdv_190 == 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    call {:si_unique_call 3802} {:si_old_unique_call 1} out_Tmp_624, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_24 := Sbp2ManagementTransactionWorker_loop_L55(out_Tmp_624, in_pdoExtension_5, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_24);
    return;

  anon39_Then:
    goto L98;

  anon47_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_625], 2048) == 0;
    goto L98;

  anon38_Then:
    goto L98;

  anon42_Then:
    call {:si_unique_call 3800} sdv_KeReleaseSpinLock(0, out_irql_2);
    call {:si_unique_call 3801} out_status_16 := Sbp2Issue1394BusReset#1(in_pdoExtension_5);
    goto anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3792} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    Mem_T.INT4[out_Tmp_627] := out_irql_2;
    call {:si_unique_call 3793} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    out_irql_2 := Mem_T.INT4[out_Tmp_627];
    call {:si_unique_call 3794} Sbp2AddLog(in_pdoExtension_5, 1, -848865486, out_status_16, 0);
    goto L97;

  anon45_Then:
    call {:si_unique_call 3798} sdv_KeReleaseSpinLock(0, out_irql_2);
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    havoc vslice_dummy_var_481;
    call {:si_unique_call 3799} out_status_16 := Sbp2ManagementTransaction#1(in_pdoExtension_5, 0, vslice_dummy_var_481);
    goto anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3795} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    Mem_T.INT4[out_Tmp_627] := out_irql_2;
    call {:si_unique_call 3796} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    out_irql_2 := Mem_T.INT4[out_Tmp_627];
    call {:si_unique_call 3797} Sbp2AddLog(in_pdoExtension_5, 1, -848865487, out_status_16, 0);
    goto L97;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker_loop_L55(in_Tmp_624: int, in_pdoExtension_5: int, in_Tmp_625: int, in_sdv_190: int, in_Tmp_627: int, in_status_16: int, in_Tmp_628: int, in_entry_1: int, in_irql_2: int, in_vslice_dummy_var_24: int) returns (out_Tmp_624: int, out_Tmp_625: int, out_sdv_190: int, out_Tmp_627: int, out_status_16: int, out_Tmp_628: int, out_entry_1: int, out_irql_2: int, out_vslice_dummy_var_24: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_190 == 1 || out_sdv_190 == 0 || out_sdv_190 == in_sdv_190;
  free ensures {:va_keep} out_vslice_dummy_var_24 == 1 || out_vslice_dummy_var_24 == 0 || out_vslice_dummy_var_24 == in_vslice_dummy_var_24;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2ManagementTransactionWorker_loop_L18(in_pdoExtension_5: int, in_Tmp_627: int, in_irql_2: int, in_vslice_dummy_var_23: int) returns (out_Tmp_627: int, out_irql_2: int, out_vslice_dummy_var_23: int)
{

  entry:
    out_Tmp_627, out_irql_2, out_vslice_dummy_var_23 := in_Tmp_627, in_irql_2, in_vslice_dummy_var_23;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    goto anon34_Else;

  anon34_Else:
    call {:si_unique_call 3805} sdv_KeReleaseSpinLock(0, out_irql_2);
    call {:si_unique_call 3806} out_vslice_dummy_var_23 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3803} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    Mem_T.INT4[out_Tmp_627] := out_irql_2;
    call {:si_unique_call 3804} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    out_irql_2 := Mem_T.INT4[out_Tmp_627];
    goto anon44_Else_dummy;

  anon44_Else_dummy:
    call {:si_unique_call 3807} {:si_old_unique_call 1} out_Tmp_627, out_irql_2, out_vslice_dummy_var_23 := Sbp2ManagementTransactionWorker_loop_L18(in_pdoExtension_5, out_Tmp_627, out_irql_2, out_vslice_dummy_var_23);
    return;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker_loop_L18(in_pdoExtension_5: int, in_Tmp_627: int, in_irql_2: int, in_vslice_dummy_var_23: int) returns (out_Tmp_627: int, out_irql_2: int, out_vslice_dummy_var_23: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2BusResetNotificationWorker_loop_L22(in_i_3: int, in_Tmp_721: int, in_Tmp_722: int, in_BusResetItem: int, in_Tmp_723: int, in_pdoExtension_6: int, in_Tmp_724: int, in_Tmp_725: int, in_Tmp_726: int, in_Tmp_727: int, in_Tmp_728: int, in_Tmp_729: int, in_mgmtAction: int, in_Tmp_730: int, in_Tmp_731: int, in_Tmp_732: int, in_Tmp_733: int, in_Tmp_734: int, in_Tmp_735: int, in_Tmp_736: int, in_Tmp_737: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_fdoExtension_1: int, in_Tmp_742: int, in_sdv_228: int, in_Tmp_743: int, in_Tmp_744: int, in_Tmp_745: int, in_Tmp_746: int, in_Tmp_747: int, in_Tmp_748: int, in_Tmp_749: int, in_sdv_230: int, in_status_20: int, in_Tmp_750: int, in_irql_3: int, in_Tmp_751: int, in_Tmp_752: int, in_Tmp_753: int, in_Tmp_754: int, in_vslice_dummy_var_29: int, in_vslice_dummy_var_30: int, in_vslice_dummy_var_32: int, in_vslice_dummy_var_33: int, in_vslice_dummy_var_34: int) returns (out_i_3: int, out_Tmp_721: int, out_Tmp_722: int, out_Tmp_723: int, out_pdoExtension_6: int, out_Tmp_724: int, out_Tmp_725: int, out_Tmp_726: int, out_Tmp_727: int, out_Tmp_728: int, out_Tmp_729: int, out_mgmtAction: int, out_Tmp_730: int, out_Tmp_731: int, out_Tmp_732: int, out_Tmp_733: int, out_Tmp_734: int, out_Tmp_735: int, out_Tmp_736: int, out_Tmp_737: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_sdv_228: int, out_Tmp_743: int, out_Tmp_744: int, out_Tmp_745: int, out_Tmp_746: int, out_Tmp_747: int, out_Tmp_748: int, out_Tmp_749: int, out_sdv_230: int, out_status_20: int, out_Tmp_750: int, out_irql_3: int, out_Tmp_751: int, out_Tmp_752: int, out_Tmp_753: int, out_Tmp_754: int, out_vslice_dummy_var_29: int, out_vslice_dummy_var_30: int, out_vslice_dummy_var_32: int, out_vslice_dummy_var_33: int, out_vslice_dummy_var_34: int)
{
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;

  entry:
    out_i_3, out_Tmp_721, out_Tmp_722, out_Tmp_723, out_pdoExtension_6, out_Tmp_724, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_Tmp_733, out_Tmp_734, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_sdv_228, out_Tmp_743, out_Tmp_744, out_Tmp_745, out_Tmp_746, out_Tmp_747, out_Tmp_748, out_Tmp_749, out_sdv_230, out_status_20, out_Tmp_750, out_irql_3, out_Tmp_751, out_Tmp_752, out_Tmp_753, out_Tmp_754, out_vslice_dummy_var_29, out_vslice_dummy_var_30, out_vslice_dummy_var_32, out_vslice_dummy_var_33, out_vslice_dummy_var_34 := in_i_3, in_Tmp_721, in_Tmp_722, in_Tmp_723, in_pdoExtension_6, in_Tmp_724, in_Tmp_725, in_Tmp_726, in_Tmp_727, in_Tmp_728, in_Tmp_729, in_mgmtAction, in_Tmp_730, in_Tmp_731, in_Tmp_732, in_Tmp_733, in_Tmp_734, in_Tmp_735, in_Tmp_736, in_Tmp_737, in_Tmp_738, in_Tmp_740, in_Tmp_741, in_Tmp_742, in_sdv_228, in_Tmp_743, in_Tmp_744, in_Tmp_745, in_Tmp_746, in_Tmp_747, in_Tmp_748, in_Tmp_749, in_sdv_230, in_status_20, in_Tmp_750, in_irql_3, in_Tmp_751, in_Tmp_752, in_Tmp_753, in_Tmp_754, in_vslice_dummy_var_29, in_vslice_dummy_var_30, in_vslice_dummy_var_32, in_vslice_dummy_var_33, in_vslice_dummy_var_34;
    goto L22, exit;

  exit:
    return;

  L22:
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    goto anon101_Else;

  anon101_Else:
    out_Tmp_746 := out_i_3;
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    havoc out_Tmp_730;
    assume {:nonnull} out_Tmp_730 != 0;
    assume out_Tmp_730 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto L82;

  L82:
    out_i_3 := out_i_3 + 1;
    goto L82_dummy;

  L82_dummy:
    call {:si_unique_call 3839} {:si_old_unique_call 1} out_i_3, out_Tmp_721, out_Tmp_722, out_Tmp_723, out_pdoExtension_6, out_Tmp_724, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_Tmp_733, out_Tmp_734, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_sdv_228, out_Tmp_743, out_Tmp_744, out_Tmp_745, out_Tmp_746, out_Tmp_747, out_Tmp_748, out_Tmp_749, out_sdv_230, out_status_20, out_Tmp_750, out_irql_3, out_Tmp_751, out_Tmp_752, out_Tmp_753, out_Tmp_754, out_vslice_dummy_var_29, out_vslice_dummy_var_30, out_vslice_dummy_var_32, out_vslice_dummy_var_33, out_vslice_dummy_var_34 := Sbp2BusResetNotificationWorker_loop_L22(out_i_3, out_Tmp_721, out_Tmp_722, in_BusResetItem, out_Tmp_723, out_pdoExtension_6, out_Tmp_724, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_Tmp_733, out_Tmp_734, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, in_fdoExtension_1, out_Tmp_742, out_sdv_228, out_Tmp_743, out_Tmp_744, out_Tmp_745, out_Tmp_746, out_Tmp_747, out_Tmp_748, out_Tmp_749, out_sdv_230, out_status_20, out_Tmp_750, out_irql_3, out_Tmp_751, out_Tmp_752, out_Tmp_753, out_Tmp_754, out_vslice_dummy_var_29, out_vslice_dummy_var_30, out_vslice_dummy_var_32, out_vslice_dummy_var_33, out_vslice_dummy_var_34);
    return;

  anon135_Then:
    out_Tmp_733 := out_i_3;
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    havoc out_Tmp_729;
    assume {:nonnull} out_Tmp_729 != 0;
    assume out_Tmp_729 > 0;
    havoc out_Tmp_741;
    assume {:nonnull} out_Tmp_741 != 0;
    assume out_Tmp_741 > 0;
    havoc out_pdoExtension_6;
    call {:si_unique_call 3820} out_status_20 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} out_status_20 < 0;
    goto L82;

  anon102_Then:
    assume {:partition} 0 <= out_status_20;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc out_Tmp_728;
    assume {:nonnull} out_Tmp_728 != 0;
    assume out_Tmp_728 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_728], 2048) != 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    havoc out_Tmp_726;
    havoc out_Tmp_721;
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_483;
    havoc vslice_dummy_var_484;
    call {:si_unique_call 3819} WPP_SF_qDd(out_Tmp_721, 20, out_Tmp_726, out_pdoExtension_6, vslice_dummy_var_483, vslice_dummy_var_484);
    goto L37;

  L37:
    call {:si_unique_call 3816} Sbp2AddLog(out_pdoExtension_6, 1, -764185538, in_fdoExtension_1, out_i_3);
    call {:si_unique_call 3817} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3818} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L54;

  L54:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    call {:si_unique_call 3815} out_vslice_dummy_var_29 := KeCancelTimer(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L56;

  L56:
    call {:si_unique_call 3814} Sbp2AddLog(out_pdoExtension_6, 1, -764185551, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 3811} out_vslice_dummy_var_32 := KeSetEvent(StartEvent__DEVICE_EXTENSION(out_pdoExtension_6), 0, 0);
    goto L72;

  L72:
    call {:si_unique_call 3808} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3809} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 3810} out_vslice_dummy_var_30 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(out_pdoExtension_6), 0);
    out_mgmtAction := 0;
    goto L82;

  anon109_Then:
    out_mgmtAction := 2;
    goto L83;

  L83:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    goto L86;

  L86:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc out_Tmp_738;
    assume {:nonnull} out_Tmp_738 != 0;
    assume out_Tmp_738 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_738], 2048) != 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc out_Tmp_735;
    havoc out_Tmp_723;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_485;
    call {:si_unique_call 3825} WPP_SF_qD(out_Tmp_723, 22, out_Tmp_735, out_pdoExtension_6, vslice_dummy_var_485);
    goto L92;

  L92:
    call {:si_unique_call 3824} Sbp2AddLog(out_pdoExtension_6, 1, -764185550, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    out_mgmtAction := 1;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_727;
    assume {:nonnull} out_Tmp_727 != 0;
    assume out_Tmp_727 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(out_Tmp_727)], 16) != 0;
    out_mgmtAction := 2;
    goto L106;

  L106:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L108;

  L108:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} out_mgmtAction == 1;
    call {:si_unique_call 3829} Sbp2AddLog(out_pdoExtension_6, 1, -764185549, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 3830} sdv_KeReleaseSpinLock(0, out_irql_3);
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    havoc vslice_dummy_var_487;
    call {:si_unique_call 3831} out_status_20 := Sbp2ManagementTransaction#1(out_pdoExtension_6, 3, vslice_dummy_var_487);
    goto anon142_Else;

  anon142_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3827} out_Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_748 != 0;
    assume out_Tmp_748 > 0;
    Mem_T.INT4[out_Tmp_748] := out_irql_3;
    call {:si_unique_call 3828} sdv_KeAcquireSpinLock(0, out_Tmp_748);
    assume {:nonnull} out_Tmp_748 != 0;
    assume out_Tmp_748 > 0;
    out_irql_3 := Mem_T.INT4[out_Tmp_748];
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} out_status_20 < 0;
    call {:si_unique_call 3833} out_sdv_228 := IsDeviceGone#1(out_pdoExtension_6, out_status_20);
    goto anon146_Else;

  anon146_Else:
    assume {:partition} yogi_error != 1;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} out_sdv_228 != 0;
    goto L134;

  L134:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc out_Tmp_745;
    assume {:nonnull} out_Tmp_745 != 0;
    assume out_Tmp_745 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_745], 2048) != 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_724;
    assume {:nonnull} out_Tmp_724 != 0;
    assume out_Tmp_724 > 0;
    havoc out_Tmp_734;
    havoc out_Tmp_743;
    havoc out_Tmp_750;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_488;
    call {:si_unique_call 3832} WPP_SF_qDDd(out_Tmp_750, 24, out_Tmp_743, out_pdoExtension_6, out_status_20, vslice_dummy_var_488, out_Tmp_734);
    goto L135;

  L135:
    call {:si_unique_call 3821} Sbp2AddLog(out_pdoExtension_6, 1, -764185548, out_status_20, 0);
    goto L110;

  L110:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} out_mgmtAction == 2;
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    havoc vslice_dummy_var_489;
    call {:si_unique_call 3834} out_status_20 := Sbp2QueueManagementWorkItem(out_pdoExtension_6, 2, vslice_dummy_var_489);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} out_status_20 < 0;
    call {:si_unique_call 3835} out_sdv_230 := IsDeviceGone#1(out_pdoExtension_6, out_status_20);
    goto anon144_Else;

  anon144_Else:
    assume {:partition} yogi_error != 1;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} out_sdv_230 == 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    havoc out_Tmp_742;
    assume {:nonnull} out_Tmp_742 != 0;
    assume out_Tmp_742 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_742], 2048) != 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    havoc out_Tmp_753;
    havoc out_Tmp_731;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_490;
    call {:si_unique_call 3836} WPP_SF_qDD(out_Tmp_731, 25, out_Tmp_753, out_pdoExtension_6, out_status_20, vslice_dummy_var_490);
    goto L160;

  L160:
    out_mgmtAction := 3;
    goto L146;

  L146:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} out_mgmtAction == 3;
    call {:si_unique_call 3838} Sbp2AddLog(out_pdoExtension_6, 1, -764185547, out_mgmtAction, 0);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc out_Tmp_749;
    assume {:nonnull} out_Tmp_749 != 0;
    assume out_Tmp_749 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_749], 2048) != 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_722;
    assume {:nonnull} out_Tmp_722 != 0;
    assume out_Tmp_722 > 0;
    havoc out_Tmp_740;
    havoc out_Tmp_737;
    havoc out_Tmp_736;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_491;
    call {:si_unique_call 3837} WPP_SF_qDDd(out_Tmp_736, 26, out_Tmp_737, out_pdoExtension_6, out_status_20, vslice_dummy_var_491, out_Tmp_740);
    goto L175;

  L175:
    call {:si_unique_call 3812} Sbp2SetDeferLoginTimer(out_pdoExtension_6);
    goto L72;

  anon124_Then:
    goto L175;

  anon143_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_749], 2048) == 0;
    goto L175;

  anon123_Then:
    goto L175;

  anon118_Then:
    assume {:partition} out_mgmtAction != 3;
    goto L72;

  anon122_Then:
    goto L160;

  anon145_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_742], 2048) == 0;
    goto L160;

  anon121_Then:
    goto L160;

  anon120_Then:
    assume {:partition} out_sdv_230 != 0;
    goto L146;

  anon119_Then:
    assume {:partition} 0 <= out_status_20;
    goto L146;

  anon113_Then:
    assume {:partition} out_mgmtAction != 2;
    goto L146;

  anon117_Then:
    goto L135;

  anon147_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_745], 2048) == 0;
    goto L135;

  anon116_Then:
    goto L135;

  anon115_Then:
    assume {:partition} out_sdv_228 == 0;
    out_mgmtAction := 2;
    goto L134;

  anon114_Then:
    assume {:partition} 0 <= out_status_20;
    goto L110;

  anon141_Then:
    assume {:partition} out_mgmtAction != 1;
    goto L110;

  anon140_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(out_Tmp_727)], 16) == 0;
    goto L106;

  anon111_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_752], 2048) != 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    havoc out_Tmp_725;
    havoc out_Tmp_732;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_486;
    call {:si_unique_call 3826} WPP_SF_qD(out_Tmp_732, 23, out_Tmp_725, out_pdoExtension_6, vslice_dummy_var_486);
    goto L191;

  L191:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 3822} out_vslice_dummy_var_33 := KeCancelTimer(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 3823} out_vslice_dummy_var_34 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_6), 0, 0);
    out_mgmtAction := 2;
    goto L108;

  anon127_Then:
    goto L191;

  anon148_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_752], 2048) == 0;
    goto L191;

  anon126_Then:
    goto L191;

  anon112_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    out_mgmtAction := 2;
    goto L108;

  anon125_Then:
    out_mgmtAction := 2;
    goto L108;

  anon110_Then:
    goto L92;

  anon139_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_738], 2048) == 0;
    goto L92;

  anon138_Then:
    goto L92;

  anon137_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_754;
    assume {:nonnull} out_Tmp_754 != 0;
    assume out_Tmp_754 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(out_Tmp_754)], 32) != 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    goto L92;

  anon130_Then:
    goto L86;

  anon129_Then:
    goto L92;

  anon128_Then:
    goto L92;

  anon149_Then:
    assume {:partition} BAND(Mem_T.INT4[LegacyFlags__DEVICE_INFORMATION(out_Tmp_754)], 32) == 0;
    goto L92;

  anon107_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L216;

  L216:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_751], 2048) != 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc out_Tmp_744;
    havoc out_Tmp_747;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_482;
    call {:si_unique_call 3813} WPP_SF_qD(out_Tmp_747, 21, out_Tmp_744, out_pdoExtension_6, vslice_dummy_var_482);
    goto L72;

  anon133_Then:
    goto L72;

  anon150_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_751], 2048) == 0;
    goto L72;

  anon132_Then:
    goto L72;

  anon108_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L216;

  anon134_Then:
    goto L83;

  anon131_Then:
    goto L216;

  anon106_Then:
    goto L56;

  anon105_Then:
    goto L54;

  anon104_Then:
    goto L37;

  anon136_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_728], 2048) == 0;
    goto L37;

  anon103_Then:
    goto L37;
}



procedure {:LoopProcedure} Sbp2BusResetNotificationWorker_loop_L22(in_i_3: int, in_Tmp_721: int, in_Tmp_722: int, in_BusResetItem: int, in_Tmp_723: int, in_pdoExtension_6: int, in_Tmp_724: int, in_Tmp_725: int, in_Tmp_726: int, in_Tmp_727: int, in_Tmp_728: int, in_Tmp_729: int, in_mgmtAction: int, in_Tmp_730: int, in_Tmp_731: int, in_Tmp_732: int, in_Tmp_733: int, in_Tmp_734: int, in_Tmp_735: int, in_Tmp_736: int, in_Tmp_737: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_fdoExtension_1: int, in_Tmp_742: int, in_sdv_228: int, in_Tmp_743: int, in_Tmp_744: int, in_Tmp_745: int, in_Tmp_746: int, in_Tmp_747: int, in_Tmp_748: int, in_Tmp_749: int, in_sdv_230: int, in_status_20: int, in_Tmp_750: int, in_irql_3: int, in_Tmp_751: int, in_Tmp_752: int, in_Tmp_753: int, in_Tmp_754: int, in_vslice_dummy_var_29: int, in_vslice_dummy_var_30: int, in_vslice_dummy_var_32: int, in_vslice_dummy_var_33: int, in_vslice_dummy_var_34: int) returns (out_i_3: int, out_Tmp_721: int, out_Tmp_722: int, out_Tmp_723: int, out_pdoExtension_6: int, out_Tmp_724: int, out_Tmp_725: int, out_Tmp_726: int, out_Tmp_727: int, out_Tmp_728: int, out_Tmp_729: int, out_mgmtAction: int, out_Tmp_730: int, out_Tmp_731: int, out_Tmp_732: int, out_Tmp_733: int, out_Tmp_734: int, out_Tmp_735: int, out_Tmp_736: int, out_Tmp_737: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_sdv_228: int, out_Tmp_743: int, out_Tmp_744: int, out_Tmp_745: int, out_Tmp_746: int, out_Tmp_747: int, out_Tmp_748: int, out_Tmp_749: int, out_sdv_230: int, out_status_20: int, out_Tmp_750: int, out_irql_3: int, out_Tmp_751: int, out_Tmp_752: int, out_Tmp_753: int, out_Tmp_754: int, out_vslice_dummy_var_29: int, out_vslice_dummy_var_30: int, out_vslice_dummy_var_32: int, out_vslice_dummy_var_33: int, out_vslice_dummy_var_34: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_mgmtAction == 0 || out_mgmtAction == in_mgmtAction;
  free ensures {:va_keep} out_vslice_dummy_var_29 == 1 || out_vslice_dummy_var_29 == 0 || out_vslice_dummy_var_29 == in_vslice_dummy_var_29;
  free ensures {:va_keep} out_vslice_dummy_var_33 == 1 || out_vslice_dummy_var_33 == 0 || out_vslice_dummy_var_33 == in_vslice_dummy_var_33;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_439: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_439: int)
{

  entry:
    out_nextEntry, out_queueEntry, out_sdv_439 := in_nextEntry, in_queueEntry, in_sdv_439;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon13_Else;

  anon13_Else:
    call {:si_unique_call 3840} out_sdv_439 := sdv_containing_record(out_nextEntry, 0);
    out_queueEntry := out_sdv_439;
    assume {:nonnull} out_queueEntry != 0;
    assume out_queueEntry > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} out_nextEntry != 0;
    assume out_nextEntry > 0;
    havoc out_nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 3841} {:si_old_unique_call 1} out_nextEntry, out_queueEntry, out_sdv_439 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(out_nextEntry, out_queueEntry, out_sdv_439, in_SortKey);
    return;
}



procedure {:LoopProcedure} Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_439: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_439: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_456: int, in_sdv_457: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_456: int, out_sdv_457: int)
{
  var vslice_dummy_var_492: int;

  entry:
    out_prevOwner, out_sdv_456, out_sdv_457 := in_prevOwner, in_sdv_456, in_sdv_457;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3842} out_sdv_456 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_456;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_prevOwner == in_currThread_1;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    havoc vslice_dummy_var_492;
    call {:si_unique_call 3843} Sbp2AddLog(in_DeviceExtension_3, 256, 544301889, in_currThread_1, vslice_dummy_var_492);
    goto L22;

  L22:
    goto anon14_Then;

  anon14_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    call {:si_unique_call 3849} {:si_old_unique_call 1} out_prevOwner, out_sdv_456, out_sdv_457 := AcquireOrbListLock_loop_L12(in_currThread_1, out_prevOwner, out_sdv_456, out_sdv_457, in_DeviceExtension_3, in_fFromDpcLevel_1);
    return;

  anon17_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3846} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} out_prevOwner != 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3848} out_sdv_457 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_457;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3844} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3845} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3847} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:LoopProcedure} AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_456: int, in_sdv_457: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_456: int, out_sdv_457: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_496: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_496: int)
{

  entry:
    out_nextEntry_1, out_queueEntry2, out_sdv_496 := in_nextEntry_1, in_queueEntry2, in_sdv_496;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon7_Else;

  anon7_Else:
    call {:si_unique_call 3850} out_sdv_496 := sdv_containing_record(out_nextEntry_1, 0);
    out_queueEntry2 := out_sdv_496;
    assume {:nonnull} out_queueEntry2 != 0;
    assume out_queueEntry2 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:nonnull} out_nextEntry_1 != 0;
    assume out_nextEntry_1 > 0;
    havoc out_nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_nextEntry_1;
    return;
}



procedure {:LoopProcedure} Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_496: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_496: int);
  free ensures {:va_keep} out_queueEntry2 == in_nextEntry_1 || out_queueEntry2 == in_queueEntry2;
  free ensures {:va_keep} out_sdv_496 == in_nextEntry_1 || out_sdv_496 == in_sdv_496;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeOrb_loop_L46(in_i_4: int, in_Tmp_1754: int, in_Tmp_1765: int, in_Tmp_1767: int, in_sdv_566: int, in_sdv_567: int, in_Tmp_1786: int, in_CallbackContext_1: int) returns (out_i_4: int, out_Tmp_1754: int, out_Tmp_1765: int, out_Tmp_1767: int, out_Tmp_1786: int)
{

  entry:
    out_i_4, out_Tmp_1754, out_Tmp_1765, out_Tmp_1767, out_Tmp_1786 := in_i_4, in_Tmp_1754, in_Tmp_1765, in_Tmp_1767, in_Tmp_1786;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1754 := out_i_4;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1786;
    assume {:nonnull} out_Tmp_1786 != 0;
    assume out_Tmp_1786 > 0;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1765 := out_i_4;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1767;
    assume {:nonnull} out_Tmp_1767 != 0;
    assume out_Tmp_1767 > 0;
    out_i_4 := out_i_4 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 3851} {:si_old_unique_call 1} out_i_4, out_Tmp_1754, out_Tmp_1765, out_Tmp_1767, out_Tmp_1786 := Sbp2InitializeOrb_loop_L46(out_i_4, out_Tmp_1754, out_Tmp_1765, out_Tmp_1767, in_sdv_566, in_sdv_567, out_Tmp_1786, in_CallbackContext_1);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeOrb_loop_L46(in_i_4: int, in_Tmp_1754: int, in_Tmp_1765: int, in_Tmp_1767: int, in_sdv_566: int, in_sdv_567: int, in_Tmp_1786: int, in_CallbackContext_1: int) returns (out_i_4: int, out_Tmp_1754: int, out_Tmp_1765: int, out_Tmp_1767: int, out_Tmp_1786: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_5: int, in_DeviceExtension_10: int, in_vslice_dummy_var_173: int) returns (out_i_5: int, out_vslice_dummy_var_173: int)
{

  entry:
    out_i_5, out_vslice_dummy_var_173 := in_i_5, in_vslice_dummy_var_173;
    goto L221, exit;

  exit:
    return;

  L221:
    assume {:CounterLoop 6} {:Counter "i_5"} true;
    goto anon139_Else;

  anon139_Else:
    assume {:partition} 6 > out_i_5;
    call {:si_unique_call 3852} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3853} out_vslice_dummy_var_173 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    goto anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon140_Else;

  anon140_Else:
    out_i_5 := out_i_5 + 1;
    goto anon140_Else_dummy;

  anon140_Else_dummy:
    call {:si_unique_call 3854} {:si_old_unique_call 1} out_i_5, out_vslice_dummy_var_173 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_5, in_DeviceExtension_10, out_vslice_dummy_var_173);
    return;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_5: int, in_DeviceExtension_10: int, in_vslice_dummy_var_173: int) returns (out_i_5: int, out_vslice_dummy_var_173: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2IssueInternalCommand_loop_L63(in_Tmp_1794: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1797: int, in_Tmp_1799: int, in_Tmp_1802: int, in_Tmp_1803: int, in_Tmp_1804: int, in_Tmp_1805: int, in_Tmp_1807: int, in_Tmp_1808: int, in_Tmp_1809: int, in_irp_7: int, in_senseInfoBuffer: int, in_Tmp_1810: int, in_Tmp_1812: int, in_srb_6: int, in_Tmp_1814: int, in_event_1: int, in_Tmp_1817: int, in_Tmp_1818: int, in_i_5: int, in_Tmp_1821: int, in_Tmp_1822: int, in_irpStack_16: int, in_Tmp_1824: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1826: int, in_Tmp_1828: int, in_status_49: int, in_Tmp_1832: int, in_retryCount: int, in_Tmp_1833: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_172: int, in_vslice_dummy_var_173: int) returns (out_Tmp_1794: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1797: int, out_Tmp_1799: int, out_Tmp_1802: int, out_Tmp_1803: int, out_Tmp_1804: int, out_Tmp_1805: int, out_Tmp_1807: int, out_Tmp_1808: int, out_Tmp_1809: int, out_Tmp_1810: int, out_Tmp_1812: int, out_Tmp_1814: int, out_Tmp_1817: int, out_Tmp_1818: int, out_i_5: int, out_Tmp_1821: int, out_Tmp_1822: int, out_irpStack_16: int, out_Tmp_1824: int, out_inquiryMdl: int, out_Tmp_1826: int, out_Tmp_1828: int, out_status_49: int, out_Tmp_1832: int, out_retryCount: int, out_Tmp_1833: int, out_vslice_dummy_var_172: int, out_vslice_dummy_var_173: int)
{
  var vslice_dummy_var_493: int;

  entry:
    out_Tmp_1794, out_cdb_2, out_modeMdl, out_Tmp_1797, out_Tmp_1799, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1807, out_Tmp_1808, out_Tmp_1809, out_Tmp_1810, out_Tmp_1812, out_Tmp_1814, out_Tmp_1817, out_Tmp_1818, out_i_5, out_Tmp_1821, out_Tmp_1822, out_irpStack_16, out_Tmp_1824, out_inquiryMdl, out_Tmp_1826, out_Tmp_1828, out_status_49, out_Tmp_1832, out_retryCount, out_Tmp_1833, out_vslice_dummy_var_172, out_vslice_dummy_var_173 := in_Tmp_1794, in_cdb_2, in_modeMdl, in_Tmp_1797, in_Tmp_1799, in_Tmp_1802, in_Tmp_1803, in_Tmp_1804, in_Tmp_1805, in_Tmp_1807, in_Tmp_1808, in_Tmp_1809, in_Tmp_1810, in_Tmp_1812, in_Tmp_1814, in_Tmp_1817, in_Tmp_1818, in_i_5, in_Tmp_1821, in_Tmp_1822, in_irpStack_16, in_Tmp_1824, in_inquiryMdl, in_Tmp_1826, in_Tmp_1828, in_status_49, in_Tmp_1832, in_retryCount, in_Tmp_1833, in_vslice_dummy_var_172, in_vslice_dummy_var_173;
    goto L63, exit;

  exit:
    return;

  L63:
    call {:si_unique_call 3855} out_irpStack_16 := sdv_IoGetNextIrpStackLocation(in_irp_7);
    assume {:nonnull} out_irpStack_16 != 0;
    assume out_irpStack_16 > 0;
    assume {:nonnull} out_irpStack_16 != 0;
    assume out_irpStack_16 > 0;
    assume {:nonnull} out_irpStack_16 != 0;
    assume out_irpStack_16 > 0;
    call {:si_unique_call 3856} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    out_cdb_2 := Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} in_Scsiop != 18;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} in_Scsiop == 26;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} out_retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} in_irp_7 != 0;
    assume in_irp_7 > 0;
    goto L84;

  L84:
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_context_1 != 0;
    assume in_context_1 > 0;
    call {:si_unique_call 3860} KeInitializeEvent(Event__REQUEST_CONTEXT(in_context_1), 0, 0);
    call {:si_unique_call 3861} sdv_IoSetCompletionRoutine(in_irp_7, li2bplFunctionConstant523, in_context_1, 1, 1, 1);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc out_Tmp_1802;
    assume {:nonnull} out_Tmp_1802 != 0;
    assume out_Tmp_1802 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1802], 1) != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    out_Tmp_1833 := in_Scsiop;
    havoc out_Tmp_1821;
    havoc out_Tmp_1794;
    call {:si_unique_call 3859} WPP_SF_qDq(out_Tmp_1794, 55, out_Tmp_1821, in_DeviceExtension_10, out_Tmp_1833, in_irp_7);
    goto L157;

  L157:
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc vslice_dummy_var_493;
    call {:si_unique_call 3858} out_status_49 := sdv_IoCallDriver(vslice_dummy_var_493, in_irp_7);
    assume {:nonnull} in_irp_7 != 0;
    assume in_irp_7 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    goto L171;

  L171:
    call {:si_unique_call 3857} out_vslice_dummy_var_172 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1832;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} out_Tmp_1832 != 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc out_Tmp_1824;
    assume {:nonnull} out_Tmp_1824 != 0;
    assume out_Tmp_1824 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1824], 1) != 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1804;
    out_Tmp_1805 := in_Scsiop;
    havoc out_Tmp_1822;
    havoc out_Tmp_1818;
    call {:si_unique_call 3865} WPP_SF_qDD(out_Tmp_1818, 57, out_Tmp_1822, in_DeviceExtension_10, out_Tmp_1805, out_Tmp_1804);
    goto L181;

  L181:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1828;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} out_Tmp_1828 == 18;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc out_Tmp_1826;
    assume {:nonnull} out_Tmp_1826 != 0;
    assume out_Tmp_1826 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1826], 1) != 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    havoc out_Tmp_1808;
    havoc out_Tmp_1817;
    call {:si_unique_call 3866} WPP_SF_q(out_Tmp_1817, 58, out_Tmp_1808, in_DeviceExtension_10);
    goto L197;

  L197:
    out_status_49 := 0;
    goto L205;

  L205:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} out_status_49 != 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} 5 > out_retryCount;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc out_Tmp_1812;
    assume {:nonnull} out_Tmp_1812 != 0;
    assume out_Tmp_1812 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1812], 1) != 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    havoc out_Tmp_1797;
    havoc out_Tmp_1814;
    call {:si_unique_call 3870} WPP_SF_q(out_Tmp_1814, 60, out_Tmp_1797, in_DeviceExtension_10);
    goto L213;

  L213:
    out_i_5 := 0;
    goto L221;

  L221:
    call {:si_unique_call 3867} out_i_5, out_vslice_dummy_var_173 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_5, in_DeviceExtension_10, out_vslice_dummy_var_173);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_5"} true;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} 6 > out_i_5;
    call {:si_unique_call 3868} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3869} out_vslice_dummy_var_173 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    goto anon165_Else;

  anon165_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    out_i_5 := out_i_5 + 1;
    assume false;
    return;

  anon140_Then:
    goto L206;

  L206:
    goto anon134_Else;

  anon134_Else:
    assume {:partition} 3 > out_retryCount;
    goto anon141_Then;

  anon141_Then:
    assume {:partition} out_status_49 != 0;
    goto anon141_Then_dummy;

  anon141_Then_dummy:
    call {:si_unique_call 3871} {:si_old_unique_call 1} out_Tmp_1794, out_cdb_2, out_modeMdl, out_Tmp_1797, out_Tmp_1799, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1807, out_Tmp_1808, out_Tmp_1809, out_Tmp_1810, out_Tmp_1812, out_Tmp_1814, out_Tmp_1817, out_Tmp_1818, out_i_5, out_Tmp_1821, out_Tmp_1822, out_irpStack_16, out_Tmp_1824, out_inquiryMdl, out_Tmp_1826, out_Tmp_1828, out_status_49, out_Tmp_1832, out_retryCount, out_Tmp_1833, out_vslice_dummy_var_172, out_vslice_dummy_var_173 := Sbp2IssueInternalCommand_loop_L63(out_Tmp_1794, in_waitValue_3, out_cdb_2, out_modeMdl, out_Tmp_1797, out_Tmp_1799, out_Tmp_1802, out_Tmp_1803, out_Tmp_1804, out_Tmp_1805, out_Tmp_1807, out_Tmp_1808, out_Tmp_1809, in_irp_7, in_senseInfoBuffer, out_Tmp_1810, out_Tmp_1812, in_srb_6, out_Tmp_1814, in_event_1, out_Tmp_1817, out_Tmp_1818, out_i_5, out_Tmp_1821, out_Tmp_1822, out_irpStack_16, out_Tmp_1824, out_inquiryMdl, in_context_1, out_Tmp_1826, out_Tmp_1828, out_status_49, out_Tmp_1832, out_retryCount, out_Tmp_1833, in_DeviceExtension_10, in_Scsiop, out_vslice_dummy_var_172, out_vslice_dummy_var_173);
    return;

  anon139_Then:
    assume {:partition} out_i_5 >= 6;
    goto L206;

  anon138_Then:
    goto L213;

  anon164_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1812], 1) == 0;
    goto L213;

  anon137_Then:
    goto L213;

  anon136_Then:
    assume {:partition} out_retryCount >= 5;
    goto L206;

  anon135_Then:
    goto L206;

  anon133_Then:
    assume {:partition} out_status_49 == 0;
    goto L206;

  anon132_Then:
    goto L197;

  anon163_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1826], 1) == 0;
    goto L197;

  anon131_Then:
    goto L197;

  anon162_Then:
    assume {:partition} out_Tmp_1828 != 18;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} in_senseInfoBuffer != 0;
    assume in_senseInfoBuffer > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    out_status_49 := -1073741808;
    out_retryCount := out_retryCount + 1;
    goto L205;

  anon142_Then:
    goto L233;

  L233:
    out_retryCount := out_retryCount + 1;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    havoc out_Tmp_1810;
    assume {:nonnull} out_Tmp_1810 != 0;
    assume out_Tmp_1810 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1810], 1) != 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    out_Tmp_1809 := in_Scsiop;
    havoc out_Tmp_1807;
    havoc out_Tmp_1803;
    call {:si_unique_call 3864} WPP_SF_qDd(out_Tmp_1803, 59, out_Tmp_1807, in_DeviceExtension_10, out_Tmp_1809, out_retryCount);
    goto L241;

  L241:
    out_status_49 := -1073741823;
    goto L205;

  anon143_Then:
    goto L241;

  anon168_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1810], 1) == 0;
    goto L241;

  anon167_Then:
    goto L241;

  anon130_Then:
    goto L233;

  anon129_Then:
    goto L181;

  anon161_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1824], 1) == 0;
    goto L181;

  anon128_Then:
    goto L181;

  anon160_Then:
    assume {:partition} out_Tmp_1832 == 1;
    out_status_49 := 0;
    goto L206;

  anon126_Then:
    goto anon127_Then;

  anon127_Then:
    assume {:partition} out_status_49 == 259;
    goto L171;

  anon125_Then:
    goto L157;

  anon158_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1802], 1) == 0;
    goto L157;

  anon124_Then:
    goto L157;

  anon171_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3863} out_modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon121_Then;

  anon121_Then:
    assume {:partition} out_modeMdl != 0;
    goto L96;

  anon153_Then:
    assume {:partition} in_Scsiop != 26;
    goto L84;

  anon156_Then:
    assume {:partition} in_Scsiop == 18;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc out_Tmp_1799;
    assume {:nonnull} out_Tmp_1799 != 0;
    assume out_Tmp_1799 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} in_irp_7 != 0;
    assume in_irp_7 > 0;
    goto L84;

  anon157_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3862} out_inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon123_Else;

  anon123_Else:
    assume {:partition} out_inquiryMdl != 0;
    goto L138;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L63(in_Tmp_1794: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1797: int, in_Tmp_1799: int, in_Tmp_1802: int, in_Tmp_1803: int, in_Tmp_1804: int, in_Tmp_1805: int, in_Tmp_1807: int, in_Tmp_1808: int, in_Tmp_1809: int, in_irp_7: int, in_senseInfoBuffer: int, in_Tmp_1810: int, in_Tmp_1812: int, in_srb_6: int, in_Tmp_1814: int, in_event_1: int, in_Tmp_1817: int, in_Tmp_1818: int, in_i_5: int, in_Tmp_1821: int, in_Tmp_1822: int, in_irpStack_16: int, in_Tmp_1824: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1826: int, in_Tmp_1828: int, in_status_49: int, in_Tmp_1832: int, in_retryCount: int, in_Tmp_1833: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_172: int, in_vslice_dummy_var_173: int) returns (out_Tmp_1794: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1797: int, out_Tmp_1799: int, out_Tmp_1802: int, out_Tmp_1803: int, out_Tmp_1804: int, out_Tmp_1805: int, out_Tmp_1807: int, out_Tmp_1808: int, out_Tmp_1809: int, out_Tmp_1810: int, out_Tmp_1812: int, out_Tmp_1814: int, out_Tmp_1817: int, out_Tmp_1818: int, out_i_5: int, out_Tmp_1821: int, out_Tmp_1822: int, out_irpStack_16: int, out_Tmp_1824: int, out_inquiryMdl: int, out_Tmp_1826: int, out_Tmp_1828: int, out_status_49: int, out_Tmp_1832: int, out_retryCount: int, out_Tmp_1833: int, out_vslice_dummy_var_172: int, out_vslice_dummy_var_173: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_cdb_2 == in_cdb_2 || out_cdb_2 == Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
  free ensures {:va_keep} out_Tmp_1805 == in_Tmp_1805 || out_Tmp_1805 == in_Scsiop;
  free ensures {:va_keep} out_Tmp_1809 == in_Tmp_1809 || out_Tmp_1809 == in_Scsiop;
  free ensures {:va_keep} out_status_49 == 0 || out_status_49 == -1073741808 || out_status_49 == -1073741823 || out_status_49 == in_status_49;
  free ensures {:va_keep} out_Tmp_1833 == in_Tmp_1833 || out_Tmp_1833 == in_Scsiop;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2DeviceManagementTimeoutDpc_loop_L78(in_i_6: int, in_Tmp_1988: int, in_bDeviceInitialized: int, in_Tmp_1989: int, in_Tmp_1993: int, in_bDeviceInactive: int, in_pdoExtension_18: int, in_PdoExtension_24: int, in_fdoExtension_10: int, in_Tmp_2016: int, in_Tmp_2017: int, in_status_57: int) returns (out_i_6: int, out_Tmp_1988: int, out_bDeviceInitialized: int, out_Tmp_1989: int, out_Tmp_1993: int, out_bDeviceInactive: int, out_pdoExtension_18: int, out_Tmp_2016: int, out_Tmp_2017: int, out_status_57: int)
{

  entry:
    out_i_6, out_Tmp_1988, out_bDeviceInitialized, out_Tmp_1989, out_Tmp_1993, out_bDeviceInactive, out_pdoExtension_18, out_Tmp_2016, out_Tmp_2017, out_status_57 := in_i_6, in_Tmp_1988, in_bDeviceInitialized, in_Tmp_1989, in_Tmp_1993, in_bDeviceInactive, in_pdoExtension_18, in_Tmp_2016, in_Tmp_2017, in_status_57;
    goto L78, exit;

  exit:
    return;

  L78:
    assume {:nonnull} in_fdoExtension_10 != 0;
    assume in_fdoExtension_10 > 0;
    goto anon123_Else;

  anon123_Else:
    out_Tmp_1988 := out_i_6;
    assume {:nonnull} in_fdoExtension_10 != 0;
    assume in_fdoExtension_10 > 0;
    havoc out_Tmp_2017;
    assume {:nonnull} out_Tmp_2017 != 0;
    assume out_Tmp_2017 > 0;
    havoc out_Tmp_2016;
    assume {:nonnull} out_Tmp_2016 != 0;
    assume out_Tmp_2016 > 0;
    havoc out_pdoExtension_18;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_pdoExtension_18 != 0;
    assume out_pdoExtension_18 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    call {:si_unique_call 3878} out_status_57 := Sbp2QueueManagementWorkItem(out_pdoExtension_18, 2, -1);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_status_57 >= 0;
    goto L94;

  L94:
    out_i_6 := out_i_6 + 1;
    goto L94_dummy;

  L94_dummy:
    call {:si_unique_call 3879} {:si_old_unique_call 1} out_i_6, out_Tmp_1988, out_bDeviceInitialized, out_Tmp_1989, out_Tmp_1993, out_bDeviceInactive, out_pdoExtension_18, out_Tmp_2016, out_Tmp_2017, out_status_57 := Sbp2DeviceManagementTimeoutDpc_loop_L78(out_i_6, out_Tmp_1988, out_bDeviceInitialized, out_Tmp_1989, out_Tmp_1993, out_bDeviceInactive, out_pdoExtension_18, in_PdoExtension_24, in_fdoExtension_10, out_Tmp_2016, out_Tmp_2017, out_status_57);
    return;

  anon124_Then:
    assume {:partition} 0 > out_status_57;
    call {:si_unique_call 3872} Sbp2SetDeferLoginTimer(out_pdoExtension_18);
    goto L94;

  anon152_Then:
    assume {:nonnull} out_pdoExtension_18 != 0;
    assume out_pdoExtension_18 > 0;
    havoc out_Tmp_1989;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} 0 == out_Tmp_1989;
    out_bDeviceInitialized := 0;
    goto L331;

  L331:
    assume {:nonnull} out_pdoExtension_18 != 0;
    assume out_pdoExtension_18 > 0;
    havoc out_Tmp_1993;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} 0 == out_Tmp_1993;
    out_bDeviceInactive := 0;
    goto L335;

  L335:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} out_bDeviceInitialized != 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_bDeviceInactive == 0;
    assume {:nonnull} out_pdoExtension_18 != 0;
    assume out_pdoExtension_18 > 0;
    call {:si_unique_call 3876} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 3877} CleanupOrbList#1(out_pdoExtension_18, -1073741248);
    goto anon156_Else;

  anon156_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3874} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3875} out_status_57 := Sbp2QueueManagementWorkItem(out_pdoExtension_18, 2, -1);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} out_status_57 < 0;
    call {:si_unique_call 3873} Sbp2SetDeferLoginTimer(in_PdoExtension_24);
    goto L94;

  anon126_Then:
    assume {:partition} 0 <= out_status_57;
    goto L94;

  anon125_Then:
    assume {:partition} out_bDeviceInactive != 0;
    goto L94;

  anon155_Then:
    assume {:partition} out_bDeviceInitialized == 0;
    goto L94;

  anon154_Then:
    assume {:partition} 0 != out_Tmp_1993;
    out_bDeviceInactive := 1;
    goto L335;

  anon153_Then:
    assume {:partition} 0 != out_Tmp_1989;
    out_bDeviceInitialized := 1;
    goto L331;
}



procedure {:LoopProcedure} Sbp2DeviceManagementTimeoutDpc_loop_L78(in_i_6: int, in_Tmp_1988: int, in_bDeviceInitialized: int, in_Tmp_1989: int, in_Tmp_1993: int, in_bDeviceInactive: int, in_pdoExtension_18: int, in_PdoExtension_24: int, in_fdoExtension_10: int, in_Tmp_2016: int, in_Tmp_2017: int, in_status_57: int) returns (out_i_6: int, out_Tmp_1988: int, out_bDeviceInitialized: int, out_Tmp_1989: int, out_Tmp_1993: int, out_bDeviceInactive: int, out_pdoExtension_18: int, out_Tmp_2016: int, out_Tmp_2017: int, out_status_57: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_bDeviceInitialized == 0 || out_bDeviceInitialized == 1 || out_bDeviceInitialized == in_bDeviceInitialized;
  free ensures {:va_keep} out_bDeviceInactive == 0 || out_bDeviceInactive == 1 || out_bDeviceInactive == in_bDeviceInactive;
  free ensures {:va_keep} out_status_57 == -1073741823 || out_status_57 == -1073741738 || out_status_57 == 0 || out_status_57 == -1073741670 || out_status_57 == in_status_57;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2RequestTimeoutDpc_loop_L118(in_PdoExtension_25: int, in_current: int, in_sdv_645: int, in_Dpc_4: int) returns (out_current: int, out_sdv_645: int)
{
  var vslice_dummy_var_494: int;

  entry:
    out_current, out_sdv_645 := in_current, in_sdv_645;
    goto L118, exit;

  exit:
    return;

  L118:
    assume {:nonnull} out_current != 0;
    assume out_current > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} TimerDpc__ASYNC_REQUEST_CONTEXT(out_current) == in_Dpc_4;
    assume {:nonnull} out_current != 0;
    assume out_current > 0;
    goto anon121_Then;

  anon121_Then:
    goto L131;

  L131:
    assume {:nonnull} out_current != 0;
    assume out_current > 0;
    havoc out_current;
    assume {:nonnull} in_PdoExtension_25 != 0;
    assume in_PdoExtension_25 > 0;
    havoc vslice_dummy_var_494;
    call {:si_unique_call 3880} out_sdv_645 := sdv_containing_record(vslice_dummy_var_494, 0);
    goto anon130_Then;

  anon130_Then:
    assume {:partition} out_current != out_sdv_645;
    goto anon130_Then_dummy;

  anon130_Then_dummy:
    havoc out_current;
    return;

  anon119_Then:
    assume {:partition} TimerDpc__ASYNC_REQUEST_CONTEXT(out_current) != in_Dpc_4;
    goto L131;
}



procedure {:LoopProcedure} Sbp2RequestTimeoutDpc_loop_L118(in_PdoExtension_25: int, in_current: int, in_sdv_645: int, in_Dpc_4: int) returns (out_current: int, out_sdv_645: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2PnpDeviceControl_loop_L584(in_i_8: int, in_Tmp_2360: int, in_fdoExtension_14: int, in_Tmp_2399: int, in_Tmp_2425: int, in_Tmp_2440: int, in_DeviceObject_48: int) returns (out_i_8: int, out_Tmp_2360: int, out_Tmp_2399: int, out_Tmp_2425: int, out_Tmp_2440: int)
{

  entry:
    out_i_8, out_Tmp_2360, out_Tmp_2399, out_Tmp_2425, out_Tmp_2440 := in_i_8, in_Tmp_2360, in_Tmp_2399, in_Tmp_2425, in_Tmp_2440;
    goto L584, exit;

  exit:
    return;

  L584:
    out_Tmp_2440 := out_i_8;
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    havoc out_Tmp_2360;
    assume {:nonnull} out_Tmp_2360 != 0;
    assume out_Tmp_2360 > 0;
    goto anon416_Else;

  anon416_Else:
    out_Tmp_2425 := out_i_8;
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    havoc out_Tmp_2399;
    assume {:nonnull} out_Tmp_2399 != 0;
    assume out_Tmp_2399 > 0;
    goto anon417_Then;

  anon417_Then:
    out_i_8 := out_i_8 + 1;
    goto anon417_Then_dummy;

  anon417_Then_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L584(in_i_8: int, in_Tmp_2360: int, in_fdoExtension_14: int, in_Tmp_2399: int, in_Tmp_2425: int, in_Tmp_2440: int, in_DeviceObject_48: int) returns (out_i_8: int, out_Tmp_2360: int, out_Tmp_2399: int, out_Tmp_2425: int, out_Tmp_2440: int);
  free ensures {:va_keep} out_Tmp_2425 == in_i_8 || out_Tmp_2425 == in_Tmp_2425;
  free ensures {:va_keep} out_Tmp_2440 == in_i_8 || out_Tmp_2440 == in_Tmp_2440;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2PnpDeviceControl_loop_L517(in_Tmp_2331: int, in_i_8: int, in_Tmp_2367: int, in_fdoExtension_14: int, in_DeviceObject_48: int) returns (out_Tmp_2331: int, out_i_8: int, out_Tmp_2367: int)
{

  entry:
    out_Tmp_2331, out_i_8, out_Tmp_2367 := in_Tmp_2331, in_i_8, in_Tmp_2367;
    goto L517, exit;

  exit:
    return;

  L517:
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    goto anon364_Else;

  anon364_Else:
    out_Tmp_2367 := out_i_8;
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    havoc out_Tmp_2331;
    assume {:nonnull} out_Tmp_2331 != 0;
    assume out_Tmp_2331 > 0;
    goto anon410_Then;

  anon410_Then:
    out_i_8 := out_i_8 + 1;
    goto anon410_Then_dummy;

  anon410_Then_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L517(in_Tmp_2331: int, in_i_8: int, in_Tmp_2367: int, in_fdoExtension_14: int, in_DeviceObject_48: int) returns (out_Tmp_2331: int, out_i_8: int, out_Tmp_2367: int);
  free ensures {:va_keep} out_Tmp_2367 == in_i_8 || out_Tmp_2367 == in_Tmp_2367;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2PreAllocateLists_loop_L120(in_Tmp_2561: int, in_Tmp_2562: int, in_cnt: int, in_Tmp_2563: int, in_context_3: int, in_Tmp_2564: int, in_Tmp_2566: int, in_Tmp_2567: int, in_Tmp_2568: int, in_Tmp_2569: int, in_Tmp_2571: int, in_sdv_836: int, in_Tmp_2573: int, in_Tmp_2574: int, in_Tmp_2575: int, in_Tmp_2576: int, in_Tmp_2577: int, in_packet_15: int, in_status_77: int, in_Tmp_2578: int, in_Tmp_2579: int, in_Tmp_2580: int, in_Tmp_2581: int, in_PdoExtension_26: int, in_vslice_dummy_var_349: int) returns (out_Tmp_2561: int, out_Tmp_2562: int, out_cnt: int, out_Tmp_2563: int, out_context_3: int, out_Tmp_2564: int, out_Tmp_2566: int, out_Tmp_2567: int, out_Tmp_2568: int, out_Tmp_2569: int, out_Tmp_2571: int, out_sdv_836: int, out_Tmp_2573: int, out_Tmp_2574: int, out_Tmp_2575: int, out_Tmp_2576: int, out_Tmp_2577: int, out_status_77: int, out_Tmp_2578: int, out_Tmp_2579: int, out_Tmp_2580: int, out_Tmp_2581: int, out_vslice_dummy_var_349: int)
{
  var vslice_dummy_var_495: int;

  entry:
    out_Tmp_2561, out_Tmp_2562, out_cnt, out_Tmp_2563, out_context_3, out_Tmp_2564, out_Tmp_2566, out_Tmp_2567, out_Tmp_2568, out_Tmp_2569, out_Tmp_2571, out_sdv_836, out_Tmp_2573, out_Tmp_2574, out_Tmp_2575, out_Tmp_2576, out_Tmp_2577, out_status_77, out_Tmp_2578, out_Tmp_2579, out_Tmp_2580, out_Tmp_2581, out_vslice_dummy_var_349 := in_Tmp_2561, in_Tmp_2562, in_cnt, in_Tmp_2563, in_context_3, in_Tmp_2564, in_Tmp_2566, in_Tmp_2567, in_Tmp_2568, in_Tmp_2569, in_Tmp_2571, in_sdv_836, in_Tmp_2573, in_Tmp_2574, in_Tmp_2575, in_Tmp_2576, in_Tmp_2577, in_status_77, in_Tmp_2578, in_Tmp_2579, in_Tmp_2580, in_Tmp_2581, in_vslice_dummy_var_349;
    goto L120, exit;

  exit:
    return;

  L120:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} 8 > out_cnt;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_context_3;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3883} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(out_context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 3884} KeInitializeTimer(0);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2580;
    assume {:nonnull} out_Tmp_2580 != 0;
    assume out_Tmp_2580 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2567;
    assume {:nonnull} out_Tmp_2567 != 0;
    assume out_Tmp_2567 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2573;
    assume {:nonnull} out_Tmp_2573 != 0;
    assume out_Tmp_2573 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2563;
    assume {:nonnull} out_Tmp_2563 != 0;
    assume out_Tmp_2563 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2564;
    assume {:nonnull} out_Tmp_2564 != 0;
    assume out_Tmp_2564 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2575;
    assume {:nonnull} out_Tmp_2575 != 0;
    assume out_Tmp_2575 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2568;
    assume {:nonnull} out_Tmp_2568 != 0;
    assume out_Tmp_2568 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2562;
    assume {:nonnull} out_Tmp_2562 != 0;
    assume out_Tmp_2562 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2566;
    assume {:nonnull} out_Tmp_2566 != 0;
    assume out_Tmp_2566 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2569;
    assume {:nonnull} out_Tmp_2569 != 0;
    assume out_Tmp_2569 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2576;
    assume {:nonnull} out_Tmp_2576 != 0;
    assume out_Tmp_2576 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2574;
    assume {:nonnull} out_Tmp_2574 != 0;
    assume out_Tmp_2574 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2578;
    assume {:nonnull} out_Tmp_2578 != 0;
    assume out_Tmp_2578 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2579;
    assume {:nonnull} out_Tmp_2579 != 0;
    assume out_Tmp_2579 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2571;
    assume {:nonnull} out_Tmp_2571 != 0;
    assume out_Tmp_2571 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2581;
    assume {:nonnull} out_Tmp_2581 != 0;
    assume out_Tmp_2581 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc vslice_dummy_var_495;
    call {:si_unique_call 3885} out_status_77 := Sbp2SendRequest#1(in_PdoExtension_26, vslice_dummy_var_495, 2);
    goto anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_status_77 >= 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2577;
    assume {:nonnull} out_Tmp_2577 != 0;
    assume out_Tmp_2577 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    call {:si_unique_call 3881} out_sdv_836 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2561;
    assume {:nonnull} out_Tmp_2561 != 0;
    assume out_Tmp_2561 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3882} out_vslice_dummy_var_349 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 3886} {:si_old_unique_call 1} out_Tmp_2561, out_Tmp_2562, out_cnt, out_Tmp_2563, out_context_3, out_Tmp_2564, out_Tmp_2566, out_Tmp_2567, out_Tmp_2568, out_Tmp_2569, out_Tmp_2571, out_sdv_836, out_Tmp_2573, out_Tmp_2574, out_Tmp_2575, out_Tmp_2576, out_Tmp_2577, out_status_77, out_Tmp_2578, out_Tmp_2579, out_Tmp_2580, out_Tmp_2581, out_vslice_dummy_var_349 := Sbp2PreAllocateLists_loop_L120(out_Tmp_2561, out_Tmp_2562, out_cnt, out_Tmp_2563, out_context_3, out_Tmp_2564, out_Tmp_2566, out_Tmp_2567, out_Tmp_2568, out_Tmp_2569, out_Tmp_2571, out_sdv_836, out_Tmp_2573, out_Tmp_2574, out_Tmp_2575, out_Tmp_2576, out_Tmp_2577, in_packet_15, out_status_77, out_Tmp_2578, out_Tmp_2579, out_Tmp_2580, out_Tmp_2581, in_PdoExtension_26, out_vslice_dummy_var_349);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L120(in_Tmp_2561: int, in_Tmp_2562: int, in_cnt: int, in_Tmp_2563: int, in_context_3: int, in_Tmp_2564: int, in_Tmp_2566: int, in_Tmp_2567: int, in_Tmp_2568: int, in_Tmp_2569: int, in_Tmp_2571: int, in_sdv_836: int, in_Tmp_2573: int, in_Tmp_2574: int, in_Tmp_2575: int, in_Tmp_2576: int, in_Tmp_2577: int, in_packet_15: int, in_status_77: int, in_Tmp_2578: int, in_Tmp_2579: int, in_Tmp_2580: int, in_Tmp_2581: int, in_PdoExtension_26: int, in_vslice_dummy_var_349: int) returns (out_Tmp_2561: int, out_Tmp_2562: int, out_cnt: int, out_Tmp_2563: int, out_context_3: int, out_Tmp_2564: int, out_Tmp_2566: int, out_Tmp_2567: int, out_Tmp_2568: int, out_Tmp_2569: int, out_Tmp_2571: int, out_sdv_836: int, out_Tmp_2573: int, out_Tmp_2574: int, out_Tmp_2575: int, out_Tmp_2576: int, out_Tmp_2577: int, out_status_77: int, out_Tmp_2578: int, out_Tmp_2579: int, out_Tmp_2580: int, out_Tmp_2581: int, out_vslice_dummy_var_349: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_26: int, in_boogieTmp: int, in_vslice_dummy_var_347: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_347: int)
{

  entry:
    out_cnt, out_statusFifoElement_1, out_boogieTmp, out_vslice_dummy_var_347 := in_cnt, in_statusFifoElement_1, in_boogieTmp, in_vslice_dummy_var_347;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} 15 > out_cnt;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_statusFifoElement_1;
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    call {:si_unique_call 3888} out_boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    goto anon32_Else;

  anon32_Else:
    call {:si_unique_call 3887} out_vslice_dummy_var_347 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    havoc out_cnt;
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_26: int, in_boogieTmp: int, in_vslice_dummy_var_347: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_347: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 8} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_831: int, in_sdv_835: int, in_Tmp_2570: int, in_packet_15: int, in_PdoExtension_26: int, in_boogieTmp: int, in_vslice_dummy_var_346: int) returns (out_cnt: int, out_sdv_831: int, out_sdv_835: int, out_Tmp_2570: int, out_boogieTmp: int, out_vslice_dummy_var_346: int)
{
  var vslice_dummy_var_496: int;

  entry:
    out_cnt, out_sdv_831, out_sdv_835, out_Tmp_2570, out_boogieTmp, out_vslice_dummy_var_346 := in_cnt, in_sdv_831, in_sdv_835, in_Tmp_2570, in_boogieTmp, in_vslice_dummy_var_346;
    goto L41, exit;

  exit:
    return;

  L41:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon29_Else;

  anon29_Else:
    assume {:partition} 8 > out_cnt;
    call {:si_unique_call 3892} out_sdv_831 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon37_Then;

  anon37_Then:
    call {:si_unique_call 3891} out_sdv_835 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon38_Else;

  anon38_Else:
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2570;
    assume {:nonnull} out_Tmp_2570 != 0;
    assume out_Tmp_2570 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc vslice_dummy_var_496;
    call {:si_unique_call 3890} out_boogieTmp := IoAllocateIrp(vslice_dummy_var_496, 0);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon30_Else;

  anon30_Else:
    call {:si_unique_call 3889} out_vslice_dummy_var_346 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    call {:si_unique_call 3893} {:si_old_unique_call 1} out_cnt, out_sdv_831, out_sdv_835, out_Tmp_2570, out_boogieTmp, out_vslice_dummy_var_346 := Sbp2PreAllocateLists_loop_L41(out_cnt, out_sdv_831, out_sdv_835, out_Tmp_2570, in_packet_15, in_PdoExtension_26, out_boogieTmp, out_vslice_dummy_var_346);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_831: int, in_sdv_835: int, in_Tmp_2570: int, in_packet_15: int, in_PdoExtension_26: int, in_boogieTmp: int, in_vslice_dummy_var_346: int) returns (out_cnt: int, out_sdv_831: int, out_sdv_835: int, out_Tmp_2570: int, out_boogieTmp: int, out_vslice_dummy_var_346: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CreateDeviceRelations_loop_L35(in_i_10: int, in_Tmp_2664: int, in_Tmp_2669: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_10: int, out_Tmp_2664: int, out_Tmp_2669: int)
{

  entry:
    out_i_10, out_Tmp_2664, out_Tmp_2669 := in_i_10, in_Tmp_2664, in_Tmp_2669;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon48_Else;

  anon48_Else:
    assume {:partition} in_OrgLUNCount > out_i_10;
    out_Tmp_2664 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2669;
    assume {:nonnull} out_Tmp_2669 != 0;
    assume out_Tmp_2669 > 0;
    goto anon60_Else;

  anon60_Else:
    out_i_10 := out_i_10 + 1;
    goto anon60_Else_dummy;

  anon60_Else_dummy:
    havoc out_i_10;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L35(in_i_10: int, in_Tmp_2664: int, in_Tmp_2669: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_10: int, out_Tmp_2664: int, out_Tmp_2669: int);
  free ensures {:va_keep} out_Tmp_2664 == in_i_10 || out_Tmp_2664 == in_Tmp_2664;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CreateDeviceRelations_loop_L80(in_i_10: int, in_Tmp_2643: int, in_Tmp_2651: int, in_Tmp_2659: int, in_Tmp_2661: int, in_Tmp_2671: int, in_status_79: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2643: int, out_Tmp_2651: int, out_Tmp_2659: int, out_Tmp_2661: int, out_Tmp_2671: int, out_status_79: int, out_instanceNum: int)
{

  entry:
    out_Tmp_2643, out_Tmp_2651, out_Tmp_2659, out_Tmp_2661, out_Tmp_2671, out_status_79, out_instanceNum := in_Tmp_2643, in_Tmp_2651, in_Tmp_2659, in_Tmp_2661, in_Tmp_2671, in_status_79, in_instanceNum;
    goto L80, exit;

  exit:
    return;

  L80:
    out_Tmp_2651 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2661 := out_Tmp_2651;
    out_Tmp_2643 := in_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2659;
    out_Tmp_2671 := out_Tmp_2659 + out_Tmp_2643 * 268;
    call {:si_unique_call 3894} out_status_79 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2671, out_Tmp_2661);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon53_Then;

  anon53_Then:
    assume {:partition} out_status_79 == -1073741771;
    goto anon53_Then_dummy;

  anon53_Then_dummy:
    call {:si_unique_call 3895} {:si_old_unique_call 1} out_Tmp_2643, out_Tmp_2651, out_Tmp_2659, out_Tmp_2661, out_Tmp_2671, out_status_79, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(in_i_10, out_Tmp_2643, out_Tmp_2651, out_Tmp_2659, out_Tmp_2661, out_Tmp_2671, out_status_79, out_instanceNum, in_FdoExtension_8);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L80(in_i_10: int, in_Tmp_2643: int, in_Tmp_2651: int, in_Tmp_2659: int, in_Tmp_2661: int, in_Tmp_2671: int, in_status_79: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2643: int, out_Tmp_2651: int, out_Tmp_2659: int, out_Tmp_2661: int, out_Tmp_2671: int, out_status_79: int, out_instanceNum: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_2643 == in_Tmp_2643 || out_Tmp_2643 == in_i_10;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CreateDeviceRelations_loop_L58(in_i_10: int, in_Tmp_2643: int, in_Tmp_2644: int, in_Tmp_2645: int, in_Tmp_2646: int, in_Tmp_2647: int, in_subStatus: int, in_Tmp_2649: int, in_pdoExtension_25: int, in_Tmp_2651: int, in_Tmp_2652: int, in_Tmp_2654: int, in_Tmp_2655: int, in_Tmp_2656: int, in_Tmp_2657: int, in_Tmp_2659: int, in_Tmp_2660: int, in_Tmp_2661: int, in_Tmp_2663: int, in_Tmp_2665: int, in_Tmp_2666: int, in_Tmp_2667: int, in_Tmp_2671: int, in_Tmp_2672: int, in_Tmp_2673: int, in_Tmp_2674: int, in_status_79: int, in_instanceNum: int, in_Tmp_2675: int, in_Tmp_2677: int, in_Tmp_2678: int, in_Tmp_2679: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_357: int, in_vslice_dummy_var_358: int) returns (out_i_10: int, out_Tmp_2643: int, out_Tmp_2644: int, out_Tmp_2645: int, out_Tmp_2646: int, out_Tmp_2647: int, out_subStatus: int, out_Tmp_2649: int, out_pdoExtension_25: int, out_Tmp_2651: int, out_Tmp_2652: int, out_Tmp_2654: int, out_Tmp_2655: int, out_Tmp_2656: int, out_Tmp_2657: int, out_Tmp_2659: int, out_Tmp_2660: int, out_Tmp_2661: int, out_Tmp_2663: int, out_Tmp_2665: int, out_Tmp_2666: int, out_Tmp_2667: int, out_Tmp_2671: int, out_Tmp_2672: int, out_Tmp_2673: int, out_Tmp_2674: int, out_status_79: int, out_instanceNum: int, out_Tmp_2675: int, out_Tmp_2677: int, out_Tmp_2678: int, out_Tmp_2679: int, out_vslice_dummy_var_357: int, out_vslice_dummy_var_358: int)
{

  entry:
    out_i_10, out_Tmp_2643, out_Tmp_2644, out_Tmp_2645, out_Tmp_2646, out_Tmp_2647, out_subStatus, out_Tmp_2649, out_pdoExtension_25, out_Tmp_2651, out_Tmp_2652, out_Tmp_2654, out_Tmp_2655, out_Tmp_2656, out_Tmp_2657, out_Tmp_2659, out_Tmp_2660, out_Tmp_2661, out_Tmp_2663, out_Tmp_2665, out_Tmp_2666, out_Tmp_2667, out_Tmp_2671, out_Tmp_2672, out_Tmp_2673, out_Tmp_2674, out_status_79, out_instanceNum, out_Tmp_2675, out_Tmp_2677, out_Tmp_2678, out_Tmp_2679, out_vslice_dummy_var_357, out_vslice_dummy_var_358 := in_i_10, in_Tmp_2643, in_Tmp_2644, in_Tmp_2645, in_Tmp_2646, in_Tmp_2647, in_subStatus, in_Tmp_2649, in_pdoExtension_25, in_Tmp_2651, in_Tmp_2652, in_Tmp_2654, in_Tmp_2655, in_Tmp_2656, in_Tmp_2657, in_Tmp_2659, in_Tmp_2660, in_Tmp_2661, in_Tmp_2663, in_Tmp_2665, in_Tmp_2666, in_Tmp_2667, in_Tmp_2671, in_Tmp_2672, in_Tmp_2673, in_Tmp_2674, in_status_79, in_instanceNum, in_Tmp_2675, in_Tmp_2677, in_Tmp_2678, in_Tmp_2679, in_vslice_dummy_var_357, in_vslice_dummy_var_358;
    goto L58, exit;

  exit:
    return;

  L58:
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    goto anon51_Else;

  anon51_Else:
    out_Tmp_2678 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2663;
    assume {:nonnull} out_Tmp_2663 != 0;
    assume out_Tmp_2663 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_subStatus := 0;
    out_Tmp_2647 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2655;
    assume {:nonnull} out_Tmp_2655 != 0;
    assume out_Tmp_2655 > 0;
    havoc out_Tmp_2654;
    assume {:nonnull} out_Tmp_2654 != 0;
    assume out_Tmp_2654 > 0;
    havoc out_pdoExtension_25;
    assume {:nonnull} out_pdoExtension_25 != 0;
    assume out_pdoExtension_25 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    out_Tmp_2665 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2652 := out_Tmp_2665;
    out_Tmp_2673 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2672;
    out_Tmp_2657 := out_Tmp_2672 + out_Tmp_2673 * 268;
    call {:si_unique_call 3900} out_subStatus := Sbp2ReInitializePdo(in_FdoExtension_8, out_Tmp_2657, out_Tmp_2652);
    goto anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_subStatus >= 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2679;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2674;
    out_Tmp_2646 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2667;
    assume {:nonnull} out_Tmp_2667 != 0;
    assume out_Tmp_2667 > 0;
    assume {:nonnull} out_Tmp_2674 != 0;
    assume out_Tmp_2674 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2677 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2644;
    assume {:nonnull} out_Tmp_2644 != 0;
    assume out_Tmp_2644 > 0;
    call {:si_unique_call 3896} out_vslice_dummy_var_357 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    out_i_10 := out_i_10 + 1;
    goto L73_dummy;

  L73_dummy:
    call {:si_unique_call 3901} {:si_old_unique_call 1} out_i_10, out_Tmp_2643, out_Tmp_2644, out_Tmp_2645, out_Tmp_2646, out_Tmp_2647, out_subStatus, out_Tmp_2649, out_pdoExtension_25, out_Tmp_2651, out_Tmp_2652, out_Tmp_2654, out_Tmp_2655, out_Tmp_2656, out_Tmp_2657, out_Tmp_2659, out_Tmp_2660, out_Tmp_2661, out_Tmp_2663, out_Tmp_2665, out_Tmp_2666, out_Tmp_2667, out_Tmp_2671, out_Tmp_2672, out_Tmp_2673, out_Tmp_2674, out_status_79, out_instanceNum, out_Tmp_2675, out_Tmp_2677, out_Tmp_2678, out_Tmp_2679, out_vslice_dummy_var_357, out_vslice_dummy_var_358 := Sbp2CreateDeviceRelations_loop_L58(out_i_10, out_Tmp_2643, out_Tmp_2644, out_Tmp_2645, out_Tmp_2646, out_Tmp_2647, out_subStatus, out_Tmp_2649, out_pdoExtension_25, out_Tmp_2651, out_Tmp_2652, out_Tmp_2654, out_Tmp_2655, out_Tmp_2656, out_Tmp_2657, out_Tmp_2659, out_Tmp_2660, out_Tmp_2661, out_Tmp_2663, out_Tmp_2665, out_Tmp_2666, out_Tmp_2667, out_Tmp_2671, out_Tmp_2672, out_Tmp_2673, out_Tmp_2674, out_status_79, out_instanceNum, out_Tmp_2675, out_Tmp_2677, out_Tmp_2678, out_Tmp_2679, in_FdoExtension_8, in_DeviceRelations, out_vslice_dummy_var_357, out_vslice_dummy_var_358);
    return;

  anon52_Then:
    assume {:partition} 0 > out_subStatus;
    goto L73;

  anon63_Then:
    goto L66;

  anon62_Then:
    out_instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 3898} out_Tmp_2643, out_Tmp_2651, out_Tmp_2659, out_Tmp_2661, out_Tmp_2671, out_status_79, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(out_i_10, out_Tmp_2643, out_Tmp_2651, out_Tmp_2659, out_Tmp_2661, out_Tmp_2671, out_status_79, out_instanceNum, in_FdoExtension_8);
    goto L80_last;

  L80_last:
    out_Tmp_2651 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2661 := out_Tmp_2651;
    out_Tmp_2643 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2659;
    out_Tmp_2671 := out_Tmp_2659 + out_Tmp_2643 * 268;
    call {:si_unique_call 3899} out_status_79 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2671, out_Tmp_2661);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_status_79 != -1073741771;
    goto anon54_Then;

  anon54_Then:
    assume {:partition} 0 <= out_status_79;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2660;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2649;
    out_Tmp_2656 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2675;
    assume {:nonnull} out_Tmp_2649 != 0;
    assume out_Tmp_2649 > 0;
    assume {:nonnull} out_Tmp_2675 != 0;
    assume out_Tmp_2675 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2645 := out_i_10;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2666;
    assume {:nonnull} out_Tmp_2666 != 0;
    assume out_Tmp_2666 > 0;
    call {:si_unique_call 3897} out_vslice_dummy_var_358 := sdv_ObReferenceObject(0);
    goto L73;

  anon53_Then:
    assume {:partition} out_status_79 == -1073741771;
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L58(in_i_10: int, in_Tmp_2643: int, in_Tmp_2644: int, in_Tmp_2645: int, in_Tmp_2646: int, in_Tmp_2647: int, in_subStatus: int, in_Tmp_2649: int, in_pdoExtension_25: int, in_Tmp_2651: int, in_Tmp_2652: int, in_Tmp_2654: int, in_Tmp_2655: int, in_Tmp_2656: int, in_Tmp_2657: int, in_Tmp_2659: int, in_Tmp_2660: int, in_Tmp_2661: int, in_Tmp_2663: int, in_Tmp_2665: int, in_Tmp_2666: int, in_Tmp_2667: int, in_Tmp_2671: int, in_Tmp_2672: int, in_Tmp_2673: int, in_Tmp_2674: int, in_status_79: int, in_instanceNum: int, in_Tmp_2675: int, in_Tmp_2677: int, in_Tmp_2678: int, in_Tmp_2679: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_357: int, in_vslice_dummy_var_358: int) returns (out_i_10: int, out_Tmp_2643: int, out_Tmp_2644: int, out_Tmp_2645: int, out_Tmp_2646: int, out_Tmp_2647: int, out_subStatus: int, out_Tmp_2649: int, out_pdoExtension_25: int, out_Tmp_2651: int, out_Tmp_2652: int, out_Tmp_2654: int, out_Tmp_2655: int, out_Tmp_2656: int, out_Tmp_2657: int, out_Tmp_2659: int, out_Tmp_2660: int, out_Tmp_2661: int, out_Tmp_2663: int, out_Tmp_2665: int, out_Tmp_2666: int, out_Tmp_2667: int, out_Tmp_2671: int, out_Tmp_2672: int, out_Tmp_2673: int, out_Tmp_2674: int, out_status_79: int, out_instanceNum: int, out_Tmp_2675: int, out_Tmp_2677: int, out_Tmp_2678: int, out_Tmp_2679: int, out_vslice_dummy_var_357: int, out_vslice_dummy_var_358: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    call {:si_unique_call 3902} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L142(in_tick, in_s_p_e_c_i_a_l_75);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1419: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1419: int, out_s_p_e_c_i_a_l_75: int)
{

  entry:
    out_Tmp_1419, out_s_p_e_c_i_a_l_75 := in_Tmp_1419, in_s_p_e_c_i_a_l_75;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.INT4[in_pComplete] == 0;
    out_Tmp_1419 := KeTickCount;
    assume {:nonnull} out_Tmp_1419 != 0;
    assume out_Tmp_1419 > 0;
    havoc out_s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 3903} Sbp2SendRequest#0_loop_L142(in_tick, out_s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon75_Then;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    call {:si_unique_call 3904} {:si_old_unique_call 1} out_Tmp_1419, out_s_p_e_c_i_a_l_75 := Sbp2SendRequest#0_loop_L132(in_tick, in_pComplete, out_Tmp_1419, out_s_p_e_c_i_a_l_75, in_delay);
    return;

  anon89_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1419: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1419: int, out_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    call {:si_unique_call 3905} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_74, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    call {:si_unique_call 3906} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L142(in_tick, in_s_p_e_c_i_a_l_75);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1419: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1419: int, out_s_p_e_c_i_a_l_75: int)
{

  entry:
    out_Tmp_1419, out_s_p_e_c_i_a_l_75 := in_Tmp_1419, in_s_p_e_c_i_a_l_75;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.INT4[in_pComplete] == 0;
    out_Tmp_1419 := KeTickCount;
    assume {:nonnull} out_Tmp_1419 != 0;
    assume out_Tmp_1419 > 0;
    havoc out_s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 3907} Sbp2SendRequest#1_loop_L142(in_tick, out_s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon75_Then;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    call {:si_unique_call 3908} {:si_old_unique_call 1} out_Tmp_1419, out_s_p_e_c_i_a_l_75 := Sbp2SendRequest#1_loop_L132(in_tick, in_pComplete, out_Tmp_1419, out_s_p_e_c_i_a_l_75, in_delay);
    return;

  anon89_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1419: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1419: int, out_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    call {:si_unique_call 3909} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_74, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Reset#0_loop_L26(in_Tmp_2108: int, in_Tmp_2109: int, in_Tmp_2110: int, in_transTimeout: int, in_retry: int, in_pdoExtension_20: int, in_Tmp_2111: int, in_Tmp_2112: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2115: int, in_sdv_659: int, in_Tmp_2117: int, in_Tmp_2118: int, in_transType: int, in_sdv_661: int, in_Tmp_2119: int, in_sdv_663: int, in_Tmp_2120: int, in_Tmp_2121: int, in_Tmp_2122: int, in_oldIrql_5: int, in_Tmp_2123: int, in_Tmp_2124: int, in_fdoExtension_11: int, in_sdv_665: int, in_Tmp_2125: int, in_Tmp_2126: int, in_Tmp_2127: int, in_Tmp_2128: int, in_Tmp_2129: int, in_Tmp_2130: int, in_Tmp_2131: int, in_status_64: int, in_Tmp_2132: int, in_Tmp_2133: int, in_Tmp_2134: int, in_Tmp_2135: int, in_ResetLevel: int, in_vslice_dummy_var_388: int, in_vslice_dummy_var_390: int, in_vslice_dummy_var_391: int) returns (out_Tmp_2108: int, out_Tmp_2109: int, out_Tmp_2110: int, out_transTimeout: int, out_retry: int, out_Tmp_2111: int, out_Tmp_2112: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2115: int, out_Tmp_2117: int, out_Tmp_2118: int, out_transType: int, out_sdv_661: int, out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2121: int, out_Tmp_2122: int, out_oldIrql_5: int, out_Tmp_2123: int, out_Tmp_2124: int, out_Tmp_2125: int, out_Tmp_2126: int, out_Tmp_2127: int, out_Tmp_2128: int, out_Tmp_2129: int, out_Tmp_2130: int, out_Tmp_2131: int, out_status_64: int, out_Tmp_2132: int, out_Tmp_2133: int, out_Tmp_2134: int, out_Tmp_2135: int, out_vslice_dummy_var_388: int, out_vslice_dummy_var_390: int, out_vslice_dummy_var_391: int)
{
  var vslice_dummy_var_497: int;

  entry:
    out_Tmp_2108, out_Tmp_2109, out_Tmp_2110, out_transTimeout, out_retry, out_Tmp_2111, out_Tmp_2112, out_Tmp_2113, out_Tmp_2114, out_Tmp_2115, out_Tmp_2117, out_Tmp_2118, out_transType, out_sdv_661, out_Tmp_2119, out_Tmp_2120, out_Tmp_2121, out_Tmp_2122, out_oldIrql_5, out_Tmp_2123, out_Tmp_2124, out_Tmp_2125, out_Tmp_2126, out_Tmp_2127, out_Tmp_2128, out_Tmp_2129, out_Tmp_2130, out_Tmp_2131, out_status_64, out_Tmp_2132, out_Tmp_2133, out_Tmp_2134, out_Tmp_2135, out_vslice_dummy_var_388, out_vslice_dummy_var_390, out_vslice_dummy_var_391 := in_Tmp_2108, in_Tmp_2109, in_Tmp_2110, in_transTimeout, in_retry, in_Tmp_2111, in_Tmp_2112, in_Tmp_2113, in_Tmp_2114, in_Tmp_2115, in_Tmp_2117, in_Tmp_2118, in_transType, in_sdv_661, in_Tmp_2119, in_Tmp_2120, in_Tmp_2121, in_Tmp_2122, in_oldIrql_5, in_Tmp_2123, in_Tmp_2124, in_Tmp_2125, in_Tmp_2126, in_Tmp_2127, in_Tmp_2128, in_Tmp_2129, in_Tmp_2130, in_Tmp_2131, in_status_64, in_Tmp_2132, in_Tmp_2133, in_Tmp_2134, in_Tmp_2135, in_vslice_dummy_var_388, in_vslice_dummy_var_390, in_vslice_dummy_var_391;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon80_Then;

  anon80_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3916} Sbp2AddLog(in_pdoExtension_20, 1, -227314626, in_ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc out_Tmp_2118;
    assume {:nonnull} out_Tmp_2118 != 0;
    assume out_Tmp_2118 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2118], 1) != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc out_Tmp_2123;
    havoc out_Tmp_2131;
    call {:si_unique_call 3934} WPP_SF_q(out_Tmp_2131, 64, out_Tmp_2123, in_pdoExtension_20);
    goto L188;

  L188:
    call {:si_unique_call 3932} out_Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    Mem_T.INT4[out_Tmp_2127] := out_oldIrql_5;
    call {:si_unique_call 3933} sdv_KeAcquireSpinLock(0, out_Tmp_2127);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    out_oldIrql_5 := Mem_T.INT4[out_Tmp_2127];
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_fdoExtension_11 != 0;
    assume in_fdoExtension_11 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3930} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3931} CleanupOrbList#0(in_pdoExtension_20, -1073741248);
    goto anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3914} out_status_64 := Sbp2QueueManagementWorkItem(in_pdoExtension_20, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 3913} Sbp2AddLog(in_pdoExtension_20, 1, -227314639, out_status_64, out_retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} out_status_64 == -1072562032;
    goto L98;

  L98:
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3911} out_vslice_dummy_var_388 := KeCancelTimer(0);
    call {:si_unique_call 3912} out_status_64 := Sbp2UpdateNodeInformation#0(in_pdoExtension_20);
    goto anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc out_Tmp_2134;
    assume {:nonnull} out_Tmp_2134 != 0;
    assume out_Tmp_2134 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2134], 1) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc out_Tmp_2128;
    havoc out_Tmp_2122;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc vslice_dummy_var_497;
    call {:si_unique_call 3910} WPP_SF_qDD(out_Tmp_2122, 65, out_Tmp_2128, in_pdoExtension_20, out_status_64, vslice_dummy_var_497);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 3935} {:si_old_unique_call 1} out_Tmp_2108, out_Tmp_2109, out_Tmp_2110, out_transTimeout, out_retry, out_Tmp_2111, out_Tmp_2112, out_Tmp_2113, out_Tmp_2114, out_Tmp_2115, out_Tmp_2117, out_Tmp_2118, out_transType, out_sdv_661, out_Tmp_2119, out_Tmp_2120, out_Tmp_2121, out_Tmp_2122, out_oldIrql_5, out_Tmp_2123, out_Tmp_2124, out_Tmp_2125, out_Tmp_2126, out_Tmp_2127, out_Tmp_2128, out_Tmp_2129, out_Tmp_2130, out_Tmp_2131, out_status_64, out_Tmp_2132, out_Tmp_2133, out_Tmp_2134, out_Tmp_2135, out_vslice_dummy_var_388, out_vslice_dummy_var_390, out_vslice_dummy_var_391 := Sbp2Reset#0_loop_L26(out_Tmp_2108, out_Tmp_2109, out_Tmp_2110, out_transTimeout, out_retry, in_pdoExtension_20, out_Tmp_2111, out_Tmp_2112, out_Tmp_2113, out_Tmp_2114, out_Tmp_2115, in_sdv_659, out_Tmp_2117, out_Tmp_2118, out_transType, out_sdv_661, out_Tmp_2119, in_sdv_663, out_Tmp_2120, out_Tmp_2121, out_Tmp_2122, out_oldIrql_5, out_Tmp_2123, out_Tmp_2124, in_fdoExtension_11, in_sdv_665, out_Tmp_2125, out_Tmp_2126, out_Tmp_2127, out_Tmp_2128, out_Tmp_2129, out_Tmp_2130, out_Tmp_2131, out_status_64, out_Tmp_2132, out_Tmp_2133, out_Tmp_2134, out_Tmp_2135, in_ResetLevel, out_vslice_dummy_var_388, out_vslice_dummy_var_390, out_vslice_dummy_var_391);
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    goto L_BAF_0;

  anon103_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2134], 1) == 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    goto L_BAF_0;

  anon88_Then:
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    goto L_BAF_0;

  anon84_Then:
    assume {:partition} out_status_64 != -1072562032;
    goto anon85_Then;

  anon85_Then:
    assume {:partition} out_status_64 == -1073741248;
    goto L98;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2118], 1) == 0;
    goto L188;

  anon96_Then:
    goto L188;

  anon98_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc out_Tmp_2119;
    assume {:nonnull} out_Tmp_2119 != 0;
    assume out_Tmp_2119 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2119], 1) != 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc out_Tmp_2126;
    havoc out_Tmp_2120;
    call {:si_unique_call 3929} WPP_SF_q(out_Tmp_2120, 63, out_Tmp_2126, in_pdoExtension_20);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3924} out_Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    Mem_T.INT4[out_Tmp_2127] := out_oldIrql_5;
    call {:si_unique_call 3925} sdv_KeAcquireSpinLock(0, out_Tmp_2127);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    out_oldIrql_5 := Mem_T.INT4[out_Tmp_2127];
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2113;
    assume {:nonnull} out_Tmp_2113 != 0;
    assume out_Tmp_2113 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2112;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2135;
    assume {:nonnull} out_Tmp_2112 != 0;
    assume out_Tmp_2112 > 0;
    assume {:nonnull} out_Tmp_2135 != 0;
    assume out_Tmp_2135 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2132;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2111;
    assume {:nonnull} out_Tmp_2111 != 0;
    assume out_Tmp_2111 > 0;
    assume {:nonnull} out_Tmp_2132 != 0;
    assume out_Tmp_2132 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2109;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2125;
    assume {:nonnull} out_Tmp_2109 != 0;
    assume out_Tmp_2109 > 0;
    assume {:nonnull} out_Tmp_2125 != 0;
    assume out_Tmp_2125 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2130;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2108;
    assume {:nonnull} out_Tmp_2108 != 0;
    assume out_Tmp_2108 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2133;
    assume {:nonnull} out_Tmp_2133 != 0;
    assume out_Tmp_2133 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2121;
    assume {:nonnull} out_Tmp_2121 != 0;
    assume out_Tmp_2121 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3926} Sbp2SetManagementTimer(in_pdoExtension_20, out_transTimeout);
    call {:si_unique_call 3927} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3928} CleanupOrbList#0(in_pdoExtension_20, -1073741248);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3923} out_status_64 := Sbp2AccessRegister#0(in_pdoExtension_20, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_20)), 1024);
    goto anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon83_Then:
    goto L46;

  anon112_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2119], 1) == 0;
    goto L46;

  anon82_Then:
    goto L46;

  anon100_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc out_Tmp_2114;
    assume {:nonnull} out_Tmp_2114 != 0;
    assume out_Tmp_2114 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2114], 1) != 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc out_Tmp_2117;
    havoc out_Tmp_2129;
    call {:si_unique_call 3920} WPP_SF_q(out_Tmp_2129, 62, out_Tmp_2117, in_pdoExtension_20);
    goto L149;

  L149:
    call {:si_unique_call 3919} out_sdv_661 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > out_sdv_661;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(in_pdoExtension_20)] := 15;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3922} out_vslice_dummy_var_390 := Sbp2AccessRegister#0(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 320);
    goto anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3921} out_status_64 := Sbp2AccessRegister#0(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 258);
    goto anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon93_Then:
    assume {:partition} out_sdv_661 >= 2;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(in_pdoExtension_20)] := 15;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3918} out_vslice_dummy_var_391 := Sbp2AccessRegister#0(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 1088);
    goto anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3917} out_status_64 := Sbp2AccessRegister#0(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 1026);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon92_Then:
    goto L149;

  anon107_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2114], 1) == 0;
    goto L149;

  anon91_Then:
    goto L149;

  anon81_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc out_Tmp_2124;
    assume {:nonnull} out_Tmp_2124 != 0;
    assume out_Tmp_2124 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2124], 1) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc out_Tmp_2110;
    havoc out_Tmp_2115;
    call {:si_unique_call 3915} WPP_SF_q(out_Tmp_2115, 61, out_Tmp_2110, in_pdoExtension_20);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2124], 1) == 0;
    goto L178;

  anon94_Then:
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#0_loop_L26(in_Tmp_2108: int, in_Tmp_2109: int, in_Tmp_2110: int, in_transTimeout: int, in_retry: int, in_pdoExtension_20: int, in_Tmp_2111: int, in_Tmp_2112: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2115: int, in_sdv_659: int, in_Tmp_2117: int, in_Tmp_2118: int, in_transType: int, in_sdv_661: int, in_Tmp_2119: int, in_sdv_663: int, in_Tmp_2120: int, in_Tmp_2121: int, in_Tmp_2122: int, in_oldIrql_5: int, in_Tmp_2123: int, in_Tmp_2124: int, in_fdoExtension_11: int, in_sdv_665: int, in_Tmp_2125: int, in_Tmp_2126: int, in_Tmp_2127: int, in_Tmp_2128: int, in_Tmp_2129: int, in_Tmp_2130: int, in_Tmp_2131: int, in_status_64: int, in_Tmp_2132: int, in_Tmp_2133: int, in_Tmp_2134: int, in_Tmp_2135: int, in_ResetLevel: int, in_vslice_dummy_var_388: int, in_vslice_dummy_var_390: int, in_vslice_dummy_var_391: int) returns (out_Tmp_2108: int, out_Tmp_2109: int, out_Tmp_2110: int, out_transTimeout: int, out_retry: int, out_Tmp_2111: int, out_Tmp_2112: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2115: int, out_Tmp_2117: int, out_Tmp_2118: int, out_transType: int, out_sdv_661: int, out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2121: int, out_Tmp_2122: int, out_oldIrql_5: int, out_Tmp_2123: int, out_Tmp_2124: int, out_Tmp_2125: int, out_Tmp_2126: int, out_Tmp_2127: int, out_Tmp_2128: int, out_Tmp_2129: int, out_Tmp_2130: int, out_Tmp_2131: int, out_status_64: int, out_Tmp_2132: int, out_Tmp_2133: int, out_Tmp_2134: int, out_Tmp_2135: int, out_vslice_dummy_var_388: int, out_vslice_dummy_var_390: int, out_vslice_dummy_var_391: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(Mem_T.INT4)[in_oldIrql_5] == Mem_T.INT4[in_oldIrql_5];
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_388 == 1 || out_vslice_dummy_var_388 == 0 || out_vslice_dummy_var_388 == in_vslice_dummy_var_388;
  free ensures {:va_keep} out_vslice_dummy_var_390 == -1073741632 || out_vslice_dummy_var_390 == -1073741670 || out_vslice_dummy_var_390 == in_vslice_dummy_var_390;
  free ensures {:va_keep} out_vslice_dummy_var_391 == -1073741632 || out_vslice_dummy_var_391 == -1073741670 || out_vslice_dummy_var_391 == in_vslice_dummy_var_391;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2Reset#1_loop_L26(in_Tmp_2108: int, in_Tmp_2109: int, in_Tmp_2110: int, in_transTimeout: int, in_retry: int, in_pdoExtension_20: int, in_Tmp_2111: int, in_Tmp_2112: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2115: int, in_sdv_659: int, in_Tmp_2117: int, in_Tmp_2118: int, in_transType: int, in_sdv_661: int, in_Tmp_2119: int, in_sdv_663: int, in_Tmp_2120: int, in_Tmp_2121: int, in_Tmp_2122: int, in_oldIrql_5: int, in_Tmp_2123: int, in_Tmp_2124: int, in_fdoExtension_11: int, in_sdv_665: int, in_Tmp_2125: int, in_Tmp_2126: int, in_Tmp_2127: int, in_Tmp_2128: int, in_Tmp_2129: int, in_Tmp_2130: int, in_Tmp_2131: int, in_status_64: int, in_Tmp_2132: int, in_Tmp_2133: int, in_Tmp_2134: int, in_Tmp_2135: int, in_ResetLevel: int, in_vslice_dummy_var_392: int, in_vslice_dummy_var_394: int, in_vslice_dummy_var_395: int) returns (out_Tmp_2108: int, out_Tmp_2109: int, out_Tmp_2110: int, out_transTimeout: int, out_retry: int, out_Tmp_2111: int, out_Tmp_2112: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2115: int, out_Tmp_2117: int, out_Tmp_2118: int, out_transType: int, out_sdv_661: int, out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2121: int, out_Tmp_2122: int, out_oldIrql_5: int, out_Tmp_2123: int, out_Tmp_2124: int, out_Tmp_2125: int, out_Tmp_2126: int, out_Tmp_2127: int, out_Tmp_2128: int, out_Tmp_2129: int, out_Tmp_2130: int, out_Tmp_2131: int, out_status_64: int, out_Tmp_2132: int, out_Tmp_2133: int, out_Tmp_2134: int, out_Tmp_2135: int, out_vslice_dummy_var_392: int, out_vslice_dummy_var_394: int, out_vslice_dummy_var_395: int)
{
  var vslice_dummy_var_498: int;

  entry:
    out_Tmp_2108, out_Tmp_2109, out_Tmp_2110, out_transTimeout, out_retry, out_Tmp_2111, out_Tmp_2112, out_Tmp_2113, out_Tmp_2114, out_Tmp_2115, out_Tmp_2117, out_Tmp_2118, out_transType, out_sdv_661, out_Tmp_2119, out_Tmp_2120, out_Tmp_2121, out_Tmp_2122, out_oldIrql_5, out_Tmp_2123, out_Tmp_2124, out_Tmp_2125, out_Tmp_2126, out_Tmp_2127, out_Tmp_2128, out_Tmp_2129, out_Tmp_2130, out_Tmp_2131, out_status_64, out_Tmp_2132, out_Tmp_2133, out_Tmp_2134, out_Tmp_2135, out_vslice_dummy_var_392, out_vslice_dummy_var_394, out_vslice_dummy_var_395 := in_Tmp_2108, in_Tmp_2109, in_Tmp_2110, in_transTimeout, in_retry, in_Tmp_2111, in_Tmp_2112, in_Tmp_2113, in_Tmp_2114, in_Tmp_2115, in_Tmp_2117, in_Tmp_2118, in_transType, in_sdv_661, in_Tmp_2119, in_Tmp_2120, in_Tmp_2121, in_Tmp_2122, in_oldIrql_5, in_Tmp_2123, in_Tmp_2124, in_Tmp_2125, in_Tmp_2126, in_Tmp_2127, in_Tmp_2128, in_Tmp_2129, in_Tmp_2130, in_Tmp_2131, in_status_64, in_Tmp_2132, in_Tmp_2133, in_Tmp_2134, in_Tmp_2135, in_vslice_dummy_var_392, in_vslice_dummy_var_394, in_vslice_dummy_var_395;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon80_Then;

  anon80_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3942} Sbp2AddLog(in_pdoExtension_20, 1, -227314626, in_ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc out_Tmp_2118;
    assume {:nonnull} out_Tmp_2118 != 0;
    assume out_Tmp_2118 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2118], 1) != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc out_Tmp_2123;
    havoc out_Tmp_2131;
    call {:si_unique_call 3960} WPP_SF_q(out_Tmp_2131, 64, out_Tmp_2123, in_pdoExtension_20);
    goto L188;

  L188:
    call {:si_unique_call 3958} out_Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    Mem_T.INT4[out_Tmp_2127] := out_oldIrql_5;
    call {:si_unique_call 3959} sdv_KeAcquireSpinLock(0, out_Tmp_2127);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    out_oldIrql_5 := Mem_T.INT4[out_Tmp_2127];
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_fdoExtension_11 != 0;
    assume in_fdoExtension_11 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3956} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3957} CleanupOrbList#1(in_pdoExtension_20, -1073741248);
    goto anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3940} out_status_64 := Sbp2QueueManagementWorkItem(in_pdoExtension_20, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 3939} Sbp2AddLog(in_pdoExtension_20, 1, -227314639, out_status_64, out_retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} out_status_64 == -1072562032;
    goto L98;

  L98:
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3937} out_vslice_dummy_var_392 := KeCancelTimer(0);
    call {:si_unique_call 3938} out_status_64 := Sbp2UpdateNodeInformation#1(in_pdoExtension_20);
    goto anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc out_Tmp_2134;
    assume {:nonnull} out_Tmp_2134 != 0;
    assume out_Tmp_2134 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2134], 1) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc out_Tmp_2128;
    havoc out_Tmp_2122;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc vslice_dummy_var_498;
    call {:si_unique_call 3936} WPP_SF_qDD(out_Tmp_2122, 65, out_Tmp_2128, in_pdoExtension_20, out_status_64, vslice_dummy_var_498);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 3961} {:si_old_unique_call 1} out_Tmp_2108, out_Tmp_2109, out_Tmp_2110, out_transTimeout, out_retry, out_Tmp_2111, out_Tmp_2112, out_Tmp_2113, out_Tmp_2114, out_Tmp_2115, out_Tmp_2117, out_Tmp_2118, out_transType, out_sdv_661, out_Tmp_2119, out_Tmp_2120, out_Tmp_2121, out_Tmp_2122, out_oldIrql_5, out_Tmp_2123, out_Tmp_2124, out_Tmp_2125, out_Tmp_2126, out_Tmp_2127, out_Tmp_2128, out_Tmp_2129, out_Tmp_2130, out_Tmp_2131, out_status_64, out_Tmp_2132, out_Tmp_2133, out_Tmp_2134, out_Tmp_2135, out_vslice_dummy_var_392, out_vslice_dummy_var_394, out_vslice_dummy_var_395 := Sbp2Reset#1_loop_L26(out_Tmp_2108, out_Tmp_2109, out_Tmp_2110, out_transTimeout, out_retry, in_pdoExtension_20, out_Tmp_2111, out_Tmp_2112, out_Tmp_2113, out_Tmp_2114, out_Tmp_2115, in_sdv_659, out_Tmp_2117, out_Tmp_2118, out_transType, out_sdv_661, out_Tmp_2119, in_sdv_663, out_Tmp_2120, out_Tmp_2121, out_Tmp_2122, out_oldIrql_5, out_Tmp_2123, out_Tmp_2124, in_fdoExtension_11, in_sdv_665, out_Tmp_2125, out_Tmp_2126, out_Tmp_2127, out_Tmp_2128, out_Tmp_2129, out_Tmp_2130, out_Tmp_2131, out_status_64, out_Tmp_2132, out_Tmp_2133, out_Tmp_2134, out_Tmp_2135, in_ResetLevel, out_vslice_dummy_var_392, out_vslice_dummy_var_394, out_vslice_dummy_var_395);
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    goto L_BAF_1;

  anon103_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2134], 1) == 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    goto L_BAF_1;

  anon88_Then:
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    goto L_BAF_1;

  anon84_Then:
    assume {:partition} out_status_64 != -1072562032;
    goto anon85_Then;

  anon85_Then:
    assume {:partition} out_status_64 == -1073741248;
    goto L98;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2118], 1) == 0;
    goto L188;

  anon96_Then:
    goto L188;

  anon98_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc out_Tmp_2119;
    assume {:nonnull} out_Tmp_2119 != 0;
    assume out_Tmp_2119 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2119], 1) != 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc out_Tmp_2126;
    havoc out_Tmp_2120;
    call {:si_unique_call 3955} WPP_SF_q(out_Tmp_2120, 63, out_Tmp_2126, in_pdoExtension_20);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3950} out_Tmp_2127 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    Mem_T.INT4[out_Tmp_2127] := out_oldIrql_5;
    call {:si_unique_call 3951} sdv_KeAcquireSpinLock(0, out_Tmp_2127);
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    out_oldIrql_5 := Mem_T.INT4[out_Tmp_2127];
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2113;
    assume {:nonnull} out_Tmp_2113 != 0;
    assume out_Tmp_2113 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2112;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2135;
    assume {:nonnull} out_Tmp_2112 != 0;
    assume out_Tmp_2112 > 0;
    assume {:nonnull} out_Tmp_2135 != 0;
    assume out_Tmp_2135 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2132;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2111;
    assume {:nonnull} out_Tmp_2111 != 0;
    assume out_Tmp_2111 > 0;
    assume {:nonnull} out_Tmp_2132 != 0;
    assume out_Tmp_2132 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2109;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2125;
    assume {:nonnull} out_Tmp_2109 != 0;
    assume out_Tmp_2109 > 0;
    assume {:nonnull} out_Tmp_2125 != 0;
    assume out_Tmp_2125 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2130;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} out_Tmp_2130 != 0;
    assume out_Tmp_2130 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2108;
    assume {:nonnull} out_Tmp_2108 != 0;
    assume out_Tmp_2108 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2133;
    assume {:nonnull} out_Tmp_2133 != 0;
    assume out_Tmp_2133 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_Tmp_2121;
    assume {:nonnull} out_Tmp_2121 != 0;
    assume out_Tmp_2121 > 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3952} Sbp2SetManagementTimer(in_pdoExtension_20, out_transTimeout);
    call {:si_unique_call 3953} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3954} CleanupOrbList#1(in_pdoExtension_20, -1073741248);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3949} out_status_64 := Sbp2AccessRegister#1(in_pdoExtension_20, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_20)), 1024);
    goto anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon83_Then:
    goto L46;

  anon112_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2119], 1) == 0;
    goto L46;

  anon82_Then:
    goto L46;

  anon100_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc out_Tmp_2114;
    assume {:nonnull} out_Tmp_2114 != 0;
    assume out_Tmp_2114 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2114], 1) != 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc out_Tmp_2117;
    havoc out_Tmp_2129;
    call {:si_unique_call 3946} WPP_SF_q(out_Tmp_2129, 62, out_Tmp_2117, in_pdoExtension_20);
    goto L149;

  L149:
    call {:si_unique_call 3945} out_sdv_661 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > out_sdv_661;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(in_pdoExtension_20)] := 15;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3948} out_vslice_dummy_var_394 := Sbp2AccessRegister#1(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 320);
    goto anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3947} out_status_64 := Sbp2AccessRegister#1(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 258);
    goto anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon93_Then:
    assume {:partition} out_sdv_661 >= 2;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    Mem_T.INT4[Reserved__DEVICE_EXTENSION(in_pdoExtension_20)] := 15;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3944} out_vslice_dummy_var_395 := Sbp2AccessRegister#1(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 1088);
    goto anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 3943} out_status_64 := Sbp2AccessRegister#1(in_pdoExtension_20, Reserved__DEVICE_EXTENSION(in_pdoExtension_20), 1026);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon92_Then:
    goto L149;

  anon107_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2114], 1) == 0;
    goto L149;

  anon91_Then:
    goto L149;

  anon81_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc out_Tmp_2124;
    assume {:nonnull} out_Tmp_2124 != 0;
    assume out_Tmp_2124 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2124], 1) != 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc out_Tmp_2110;
    havoc out_Tmp_2115;
    call {:si_unique_call 3941} WPP_SF_q(out_Tmp_2115, 61, out_Tmp_2110, in_pdoExtension_20);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2124], 1) == 0;
    goto L178;

  anon94_Then:
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#1_loop_L26(in_Tmp_2108: int, in_Tmp_2109: int, in_Tmp_2110: int, in_transTimeout: int, in_retry: int, in_pdoExtension_20: int, in_Tmp_2111: int, in_Tmp_2112: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2115: int, in_sdv_659: int, in_Tmp_2117: int, in_Tmp_2118: int, in_transType: int, in_sdv_661: int, in_Tmp_2119: int, in_sdv_663: int, in_Tmp_2120: int, in_Tmp_2121: int, in_Tmp_2122: int, in_oldIrql_5: int, in_Tmp_2123: int, in_Tmp_2124: int, in_fdoExtension_11: int, in_sdv_665: int, in_Tmp_2125: int, in_Tmp_2126: int, in_Tmp_2127: int, in_Tmp_2128: int, in_Tmp_2129: int, in_Tmp_2130: int, in_Tmp_2131: int, in_status_64: int, in_Tmp_2132: int, in_Tmp_2133: int, in_Tmp_2134: int, in_Tmp_2135: int, in_ResetLevel: int, in_vslice_dummy_var_392: int, in_vslice_dummy_var_394: int, in_vslice_dummy_var_395: int) returns (out_Tmp_2108: int, out_Tmp_2109: int, out_Tmp_2110: int, out_transTimeout: int, out_retry: int, out_Tmp_2111: int, out_Tmp_2112: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2115: int, out_Tmp_2117: int, out_Tmp_2118: int, out_transType: int, out_sdv_661: int, out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2121: int, out_Tmp_2122: int, out_oldIrql_5: int, out_Tmp_2123: int, out_Tmp_2124: int, out_Tmp_2125: int, out_Tmp_2126: int, out_Tmp_2127: int, out_Tmp_2128: int, out_Tmp_2129: int, out_Tmp_2130: int, out_Tmp_2131: int, out_status_64: int, out_Tmp_2132: int, out_Tmp_2133: int, out_Tmp_2134: int, out_Tmp_2135: int, out_vslice_dummy_var_392: int, out_vslice_dummy_var_394: int, out_vslice_dummy_var_395: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_392 == 1 || out_vslice_dummy_var_392 == 0 || out_vslice_dummy_var_392 == in_vslice_dummy_var_392;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CleanupOrbList#0_loop_L42(in_Tmp_1359: int, in_Tmp_1361: int, in_Tmp_1362: int, in_pendingOrbListHead: int, in_Tmp_1363: int, in_Tmp_1364: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1366: int, in_Tmp_1367: int, in_Tmp_1368: int, in_requestIrp_1: int, in_Tmp_1369: int, in_Tmp_1370: int, in_sdv_466: int, in_Tmp_1371: int, in_currentListItem_1: int, in_Tmp_1372: int, in_sdv_468: int, in_Tmp_1373: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_400: int, in_vslice_dummy_var_402: int, in_vslice_dummy_var_403: int, in_vslice_dummy_var_404: int, in_vslice_dummy_var_405: int, in_vslice_dummy_var_406: int) returns (out_Tmp_1359: int, out_Tmp_1361: int, out_Tmp_1362: int, out_Tmp_1363: int, out_Tmp_1364: int, out_pEntry: int, out_Tmp_1366: int, out_Tmp_1367: int, out_Tmp_1368: int, out_requestIrp_1: int, out_Tmp_1369: int, out_Tmp_1370: int, out_sdv_466: int, out_Tmp_1371: int, out_currentListItem_1: int, out_Tmp_1372: int, out_sdv_468: int, out_Tmp_1373: int, out_vslice_dummy_var_400: int, out_vslice_dummy_var_402: int, out_vslice_dummy_var_403: int, out_vslice_dummy_var_404: int, out_vslice_dummy_var_405: int, out_vslice_dummy_var_406: int)
{
  var vslice_dummy_var_499: int;

  entry:
    out_Tmp_1359, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_pEntry, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_requestIrp_1, out_Tmp_1369, out_Tmp_1370, out_sdv_466, out_Tmp_1371, out_currentListItem_1, out_Tmp_1372, out_sdv_468, out_Tmp_1373, out_vslice_dummy_var_400, out_vslice_dummy_var_402, out_vslice_dummy_var_403, out_vslice_dummy_var_404, out_vslice_dummy_var_405, out_vslice_dummy_var_406 := in_Tmp_1359, in_Tmp_1361, in_Tmp_1362, in_Tmp_1363, in_Tmp_1364, in_pEntry, in_Tmp_1366, in_Tmp_1367, in_Tmp_1368, in_requestIrp_1, in_Tmp_1369, in_Tmp_1370, in_sdv_466, in_Tmp_1371, in_currentListItem_1, in_Tmp_1372, in_sdv_468, in_Tmp_1373, in_vslice_dummy_var_400, in_vslice_dummy_var_402, in_vslice_dummy_var_403, in_vslice_dummy_var_404, in_vslice_dummy_var_405, in_vslice_dummy_var_406;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 3962} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 3963} InitializeListHead(out_pEntry);
    call {:si_unique_call 3964} out_sdv_466 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_466;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 3966} out_vslice_dummy_var_400 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 3965} out_sdv_468 := sdv_IsListEmpty(0);
    goto anon41_Then;

  anon41_Then:
    assume {:partition} out_sdv_468 == 0;
    goto anon41_Then_dummy;

  anon41_Then_dummy:
    call {:si_unique_call 3979} {:si_old_unique_call 1} out_Tmp_1359, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_pEntry, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_requestIrp_1, out_Tmp_1369, out_Tmp_1370, out_sdv_466, out_Tmp_1371, out_currentListItem_1, out_Tmp_1372, out_sdv_468, out_Tmp_1373, out_vslice_dummy_var_400, out_vslice_dummy_var_402, out_vslice_dummy_var_403, out_vslice_dummy_var_404, out_vslice_dummy_var_405, out_vslice_dummy_var_406 := CleanupOrbList#0_loop_L42(out_Tmp_1359, out_Tmp_1361, out_Tmp_1362, in_pendingOrbListHead, out_Tmp_1363, out_Tmp_1364, in_orbLock_6, out_pEntry, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_requestIrp_1, out_Tmp_1369, out_Tmp_1370, out_sdv_466, out_Tmp_1371, out_currentListItem_1, out_Tmp_1372, out_sdv_468, out_Tmp_1373, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_400, out_vslice_dummy_var_402, out_vslice_dummy_var_403, out_vslice_dummy_var_404, out_vslice_dummy_var_405, out_vslice_dummy_var_406);
    return;

  anon51_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3972} out_vslice_dummy_var_404 := KeCancelTimer(0);
    call {:si_unique_call 3973} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 3974} out_vslice_dummy_var_402 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc out_Tmp_1371;
    assume {:nonnull} out_Tmp_1371 != 0;
    assume out_Tmp_1371 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1371], 128) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc out_Tmp_1367;
    havoc out_Tmp_1364;
    call {:si_unique_call 3971} WPP_SF_q(out_Tmp_1364, 11, out_Tmp_1367, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1372;
    assume {:nonnull} out_Tmp_1372 != 0;
    assume out_Tmp_1372 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1373;
    assume {:nonnull} out_Tmp_1373 != 0;
    assume out_Tmp_1373 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1361;
    assume {:nonnull} out_Tmp_1361 != 0;
    assume out_Tmp_1361 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 3977} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3968} out_vslice_dummy_var_405 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 3967} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon55_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1359;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1359 != 0;
    assume out_Tmp_1359 > 0;
    havoc vslice_dummy_var_499;
    call {:si_unique_call 3978} Sbp2StartPacket#0(vslice_dummy_var_499, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1359));
    goto anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon46_Then:
    goto L105;

  anon45_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3976} out_vslice_dummy_var_406 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc out_Tmp_1362;
    assume {:nonnull} out_Tmp_1362 != 0;
    assume out_Tmp_1362 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1362], 1) != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc out_Tmp_1368;
    havoc out_Tmp_1366;
    call {:si_unique_call 3975} WPP_SF_qq(out_Tmp_1366, 12, out_Tmp_1368, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 3969} out_vslice_dummy_var_403 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    call {:si_unique_call 3970} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon48_Then:
    goto L123;

  anon57_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1362], 1) == 0;
    goto L123;

  anon47_Then:
    goto L123;

  anon44_Then:
    goto L99;

  anon49_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1363;
    assume {:nonnull} out_Tmp_1363 != 0;
    assume out_Tmp_1363 > 0;
    goto L98;

  anon50_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1370;
    assume {:nonnull} out_Tmp_1370 != 0;
    assume out_Tmp_1370 > 0;
    goto L98;

  anon54_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1369;
    assume {:nonnull} out_Tmp_1369 != 0;
    assume out_Tmp_1369 > 0;
    goto L98;

  anon43_Then:
    goto L83;

  anon53_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1371], 128) == 0;
    goto L83;

  anon42_Then:
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#0_loop_L42(in_Tmp_1359: int, in_Tmp_1361: int, in_Tmp_1362: int, in_pendingOrbListHead: int, in_Tmp_1363: int, in_Tmp_1364: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1366: int, in_Tmp_1367: int, in_Tmp_1368: int, in_requestIrp_1: int, in_Tmp_1369: int, in_Tmp_1370: int, in_sdv_466: int, in_Tmp_1371: int, in_currentListItem_1: int, in_Tmp_1372: int, in_sdv_468: int, in_Tmp_1373: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_400: int, in_vslice_dummy_var_402: int, in_vslice_dummy_var_403: int, in_vslice_dummy_var_404: int, in_vslice_dummy_var_405: int, in_vslice_dummy_var_406: int) returns (out_Tmp_1359: int, out_Tmp_1361: int, out_Tmp_1362: int, out_Tmp_1363: int, out_Tmp_1364: int, out_pEntry: int, out_Tmp_1366: int, out_Tmp_1367: int, out_Tmp_1368: int, out_requestIrp_1: int, out_Tmp_1369: int, out_Tmp_1370: int, out_sdv_466: int, out_Tmp_1371: int, out_currentListItem_1: int, out_Tmp_1372: int, out_sdv_468: int, out_Tmp_1373: int, out_vslice_dummy_var_400: int, out_vslice_dummy_var_402: int, out_vslice_dummy_var_403: int, out_vslice_dummy_var_404: int, out_vslice_dummy_var_405: int, out_vslice_dummy_var_406: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} out_sdv_468 == 1 || out_sdv_468 == 0 || out_sdv_468 == in_sdv_468;
  free ensures {:va_keep} out_vslice_dummy_var_402 == -1073741670 || out_vslice_dummy_var_402 == -1073741823 || out_vslice_dummy_var_402 == 259 || out_vslice_dummy_var_402 == 0 || out_vslice_dummy_var_402 == in_vslice_dummy_var_402;
  free ensures {:va_keep} out_vslice_dummy_var_404 == 1 || out_vslice_dummy_var_404 == 0 || out_vslice_dummy_var_404 == in_vslice_dummy_var_404;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CleanupOrbList#1_loop_L42(in_Tmp_1359: int, in_Tmp_1361: int, in_Tmp_1362: int, in_pendingOrbListHead: int, in_Tmp_1363: int, in_Tmp_1364: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1366: int, in_Tmp_1367: int, in_Tmp_1368: int, in_requestIrp_1: int, in_Tmp_1369: int, in_Tmp_1370: int, in_sdv_466: int, in_Tmp_1371: int, in_currentListItem_1: int, in_Tmp_1372: int, in_sdv_468: int, in_Tmp_1373: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_411: int, in_vslice_dummy_var_413: int, in_vslice_dummy_var_414: int, in_vslice_dummy_var_415: int, in_vslice_dummy_var_416: int, in_vslice_dummy_var_417: int) returns (out_Tmp_1359: int, out_Tmp_1361: int, out_Tmp_1362: int, out_Tmp_1363: int, out_Tmp_1364: int, out_pEntry: int, out_Tmp_1366: int, out_Tmp_1367: int, out_Tmp_1368: int, out_requestIrp_1: int, out_Tmp_1369: int, out_Tmp_1370: int, out_sdv_466: int, out_Tmp_1371: int, out_currentListItem_1: int, out_Tmp_1372: int, out_sdv_468: int, out_Tmp_1373: int, out_vslice_dummy_var_411: int, out_vslice_dummy_var_413: int, out_vslice_dummy_var_414: int, out_vslice_dummy_var_415: int, out_vslice_dummy_var_416: int, out_vslice_dummy_var_417: int)
{
  var vslice_dummy_var_500: int;

  entry:
    out_Tmp_1359, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_pEntry, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_requestIrp_1, out_Tmp_1369, out_Tmp_1370, out_sdv_466, out_Tmp_1371, out_currentListItem_1, out_Tmp_1372, out_sdv_468, out_Tmp_1373, out_vslice_dummy_var_411, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415, out_vslice_dummy_var_416, out_vslice_dummy_var_417 := in_Tmp_1359, in_Tmp_1361, in_Tmp_1362, in_Tmp_1363, in_Tmp_1364, in_pEntry, in_Tmp_1366, in_Tmp_1367, in_Tmp_1368, in_requestIrp_1, in_Tmp_1369, in_Tmp_1370, in_sdv_466, in_Tmp_1371, in_currentListItem_1, in_Tmp_1372, in_sdv_468, in_Tmp_1373, in_vslice_dummy_var_411, in_vslice_dummy_var_413, in_vslice_dummy_var_414, in_vslice_dummy_var_415, in_vslice_dummy_var_416, in_vslice_dummy_var_417;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 3980} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 3981} InitializeListHead(out_pEntry);
    call {:si_unique_call 3982} out_sdv_466 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_466;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 3984} out_vslice_dummy_var_411 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 3983} out_sdv_468 := sdv_IsListEmpty(0);
    goto anon41_Then;

  anon41_Then:
    assume {:partition} out_sdv_468 == 0;
    goto anon41_Then_dummy;

  anon41_Then_dummy:
    call {:si_unique_call 3997} {:si_old_unique_call 1} out_Tmp_1359, out_Tmp_1361, out_Tmp_1362, out_Tmp_1363, out_Tmp_1364, out_pEntry, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_requestIrp_1, out_Tmp_1369, out_Tmp_1370, out_sdv_466, out_Tmp_1371, out_currentListItem_1, out_Tmp_1372, out_sdv_468, out_Tmp_1373, out_vslice_dummy_var_411, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415, out_vslice_dummy_var_416, out_vslice_dummy_var_417 := CleanupOrbList#1_loop_L42(out_Tmp_1359, out_Tmp_1361, out_Tmp_1362, in_pendingOrbListHead, out_Tmp_1363, out_Tmp_1364, in_orbLock_6, out_pEntry, out_Tmp_1366, out_Tmp_1367, out_Tmp_1368, out_requestIrp_1, out_Tmp_1369, out_Tmp_1370, out_sdv_466, out_Tmp_1371, out_currentListItem_1, out_Tmp_1372, out_sdv_468, out_Tmp_1373, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_411, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415, out_vslice_dummy_var_416, out_vslice_dummy_var_417);
    return;

  anon51_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3990} out_vslice_dummy_var_415 := KeCancelTimer(0);
    call {:si_unique_call 3991} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 3992} out_vslice_dummy_var_413 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc out_Tmp_1371;
    assume {:nonnull} out_Tmp_1371 != 0;
    assume out_Tmp_1371 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1371], 128) != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc out_Tmp_1367;
    havoc out_Tmp_1364;
    call {:si_unique_call 3989} WPP_SF_q(out_Tmp_1364, 11, out_Tmp_1367, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1372;
    assume {:nonnull} out_Tmp_1372 != 0;
    assume out_Tmp_1372 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1373;
    assume {:nonnull} out_Tmp_1373 != 0;
    assume out_Tmp_1373 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1361;
    assume {:nonnull} out_Tmp_1361 != 0;
    assume out_Tmp_1361 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 3995} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3986} out_vslice_dummy_var_416 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 3985} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon55_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1359;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1359 != 0;
    assume out_Tmp_1359 > 0;
    havoc vslice_dummy_var_500;
    call {:si_unique_call 3996} Sbp2StartPacket#1(vslice_dummy_var_500, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1359));
    goto anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon46_Then:
    goto L105;

  anon45_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3994} out_vslice_dummy_var_417 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc out_Tmp_1362;
    assume {:nonnull} out_Tmp_1362 != 0;
    assume out_Tmp_1362 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1362], 1) != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    havoc out_Tmp_1368;
    havoc out_Tmp_1366;
    call {:si_unique_call 3993} WPP_SF_qq(out_Tmp_1366, 12, out_Tmp_1368, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 3987} out_vslice_dummy_var_414 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    call {:si_unique_call 3988} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon48_Then:
    goto L123;

  anon57_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1362], 1) == 0;
    goto L123;

  anon47_Then:
    goto L123;

  anon44_Then:
    goto L99;

  anon49_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1363;
    assume {:nonnull} out_Tmp_1363 != 0;
    assume out_Tmp_1363 > 0;
    goto L98;

  anon50_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1370;
    assume {:nonnull} out_Tmp_1370 != 0;
    assume out_Tmp_1370 > 0;
    goto L98;

  anon54_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1369;
    assume {:nonnull} out_Tmp_1369 != 0;
    assume out_Tmp_1369 > 0;
    goto L98;

  anon43_Then:
    goto L83;

  anon53_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_1371], 128) == 0;
    goto L83;

  anon42_Then:
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#1_loop_L42(in_Tmp_1359: int, in_Tmp_1361: int, in_Tmp_1362: int, in_pendingOrbListHead: int, in_Tmp_1363: int, in_Tmp_1364: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1366: int, in_Tmp_1367: int, in_Tmp_1368: int, in_requestIrp_1: int, in_Tmp_1369: int, in_Tmp_1370: int, in_sdv_466: int, in_Tmp_1371: int, in_currentListItem_1: int, in_Tmp_1372: int, in_sdv_468: int, in_Tmp_1373: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_411: int, in_vslice_dummy_var_413: int, in_vslice_dummy_var_414: int, in_vslice_dummy_var_415: int, in_vslice_dummy_var_416: int, in_vslice_dummy_var_417: int) returns (out_Tmp_1359: int, out_Tmp_1361: int, out_Tmp_1362: int, out_Tmp_1363: int, out_Tmp_1364: int, out_pEntry: int, out_Tmp_1366: int, out_Tmp_1367: int, out_Tmp_1368: int, out_requestIrp_1: int, out_Tmp_1369: int, out_Tmp_1370: int, out_sdv_466: int, out_Tmp_1371: int, out_currentListItem_1: int, out_Tmp_1372: int, out_sdv_468: int, out_Tmp_1373: int, out_vslice_dummy_var_411: int, out_vslice_dummy_var_413: int, out_vslice_dummy_var_414: int, out_vslice_dummy_var_415: int, out_vslice_dummy_var_416: int, out_vslice_dummy_var_417: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_468 == 1 || out_sdv_468 == 0 || out_sdv_468 == in_sdv_468;
  free ensures {:va_keep} out_vslice_dummy_var_413 == -1073741670 || out_vslice_dummy_var_413 == -1073741823 || out_vslice_dummy_var_413 == 259 || out_vslice_dummy_var_413 == 0 || out_vslice_dummy_var_413 == in_vslice_dummy_var_413;
  free ensures {:va_keep} out_vslice_dummy_var_415 == 1 || out_vslice_dummy_var_415 == 0 || out_vslice_dummy_var_415 == in_vslice_dummy_var_415;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 8} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_21: int, in_i_7: int, in_context_2: int) returns (out_i_7: int, out_context_2: int)
{

  entry:
    out_i_7, out_context_2 := in_i_7, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} 8 > out_i_7;
    assume {:nonnull} in_pdoExtension_21 != 0;
    assume in_pdoExtension_21 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 3998} FreeAddressRange#0(in_pdoExtension_21, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    out_i_7 := out_i_7 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 3999} {:si_old_unique_call 1} out_i_7, out_context_2 := Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_21, out_i_7, out_context_2);
    return;

  anon218_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_21: int, in_i_7: int, in_context_2: int) returns (out_i_7: int, out_context_2: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2203: int, in_pdoExtension_21: int, in_sdv_734: int, in_statusFifoElement: int, in_Tmp_2268: int, in_Tmp_2308: int) returns (out_Tmp_2203: int, out_sdv_734: int, out_statusFifoElement: int, out_Tmp_2268: int, out_Tmp_2308: int)
{
  var vslice_dummy_var_501: int;

  entry:
    out_Tmp_2203, out_sdv_734, out_statusFifoElement, out_Tmp_2268, out_Tmp_2308 := in_Tmp_2203, in_sdv_734, in_statusFifoElement, in_Tmp_2268, in_Tmp_2308;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon178_Else;

  anon178_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc out_Tmp_2268;
    assume {:nonnull} out_Tmp_2268 != 0;
    assume out_Tmp_2268 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2268], 1) != 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc out_Tmp_2308;
    havoc out_Tmp_2203;
    assume {:nonnull} in_pdoExtension_21 != 0;
    assume in_pdoExtension_21 > 0;
    havoc vslice_dummy_var_501;
    call {:si_unique_call 4002} WPP_SF_qqq(out_Tmp_2203, 35, out_Tmp_2308, in_pdoExtension_21, out_statusFifoElement, vslice_dummy_var_501);
    goto L175;

  L175:
    call {:si_unique_call 4000} IoFreeMdl(0);
    call {:si_unique_call 4001} out_sdv_734 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_734;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 4003} {:si_old_unique_call 1} out_Tmp_2203, out_sdv_734, out_statusFifoElement, out_Tmp_2268, out_Tmp_2308 := Sbp2CleanDeviceExtension#0_loop_L167(out_Tmp_2203, in_pdoExtension_21, out_sdv_734, out_statusFifoElement, out_Tmp_2268, out_Tmp_2308);
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2268], 1) == 0;
    goto L175;

  anon179_Then:
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2203: int, in_pdoExtension_21: int, in_sdv_734: int, in_statusFifoElement: int, in_Tmp_2268: int, in_Tmp_2308: int) returns (out_Tmp_2203: int, out_sdv_734: int, out_statusFifoElement: int, out_Tmp_2268: int, out_Tmp_2308: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_733: int, in_Tmp_2302: int, in_packet_13: int) returns (out_sdv_733: int, out_Tmp_2302: int, out_packet_13: int)
{

  entry:
    out_sdv_733, out_Tmp_2302, out_packet_13 := in_sdv_733, in_Tmp_2302, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 4007} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    havoc out_Tmp_2302;
    assume {:nonnull} out_Tmp_2302 != 0;
    assume out_Tmp_2302 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 4006} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 4004} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 4005} out_sdv_733 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_733;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 4008} {:si_old_unique_call 1} out_sdv_733, out_Tmp_2302, out_packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(out_sdv_733, out_Tmp_2302, out_packet_13);
    return;

  anon221_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_733: int, in_Tmp_2302: int, in_packet_13: int) returns (out_sdv_733: int, out_Tmp_2302: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2211: int, in_i_7: int, in_Tmp_2282: int, in_Tmp_2292: int, in_Tmp_2297: int, in_fdoExtension_13: int, in_DeviceObject_47: int) returns (out_Tmp_2211: int, out_i_7: int, out_Tmp_2282: int, out_Tmp_2292: int, out_Tmp_2297: int)
{

  entry:
    out_Tmp_2211, out_i_7, out_Tmp_2282, out_Tmp_2292, out_Tmp_2297 := in_Tmp_2211, in_i_7, in_Tmp_2282, in_Tmp_2292, in_Tmp_2297;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2282 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2297;
    assume {:nonnull} out_Tmp_2297 != 0;
    assume out_Tmp_2297 > 0;
    goto anon204_Else;

  anon204_Else:
    out_Tmp_2211 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2292;
    assume {:nonnull} out_Tmp_2292 != 0;
    assume out_Tmp_2292 > 0;
    goto anon205_Then;

  anon205_Then:
    out_i_7 := out_i_7 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2211: int, in_i_7: int, in_Tmp_2282: int, in_Tmp_2292: int, in_Tmp_2297: int, in_fdoExtension_13: int, in_DeviceObject_47: int) returns (out_Tmp_2211: int, out_i_7: int, out_Tmp_2282: int, out_Tmp_2292: int, out_Tmp_2297: int);
  free ensures {:va_keep} out_Tmp_2211 == in_i_7 || out_Tmp_2211 == in_Tmp_2211;
  free ensures {:va_keep} out_Tmp_2282 == in_i_7 || out_Tmp_2282 == in_Tmp_2282;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2199: int, in_Tmp_2200: int, in_Tmp_2202: int, in_Tmp_2206: int, in_pdoExtension_21: int, in_Tmp_2212: int, in_Tmp_2214: int, in_Tmp_2215: int, in_Tmp_2216: int, in_Tmp_2217: int, in_Tmp_2218: int, in_Tmp_2219: int, in_Tmp_2221: int, in_Tmp_2222: int, in_Tmp_2223: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2228: int, in_Tmp_2229: int, in_Tmp_2231: int, in_Tmp_2233: int, in_Tmp_2235: int, in_Tmp_2236: int, in_Tmp_2237: int, in_Tmp_2240: int, in_Tmp_2243: int, in_Tmp_2244: int, in_Tmp_2246: int, in_Tmp_2247: int, in_Tmp_2248: int, in_Tmp_2249: int, in_Tmp_2254: int, in_Tmp_2256: int, in_Tmp_2257: int, in_Tmp_2259: int, in_Tmp_2260: int, in_Tmp_2261: int, in_i_7: int, in_Tmp_2264: int, in_Tmp_2266: int, in_Tmp_2267: int, in_Tmp_2272: int, in_Tmp_2274: int, in_Tmp_2276: int, in_Tmp_2280: int, in_Tmp_2281: int, in_Tmp_2283: int, in_Tmp_2284: int, in_Tmp_2286: int, in_Tmp_2287: int, in_Tmp_2289: int, in_Tmp_2295: int, in_Tmp_2296: int, in_fdoExtension_13: int, in_Tmp_2301: int, in_Tmp_2304: int, in_Tmp_2306: int, in_Tmp_2307: int, in_Tmp_2309: int, in_cIrql_11: int, in_Tmp_2310: int, in_Tmp_2314: int, in_Tmp_2315: int, in_Tmp_2320: int, in_Tmp_2322: int, in_DeviceObject_47: int) returns (out_Tmp_2199: int, out_Tmp_2200: int, out_Tmp_2202: int, out_Tmp_2206: int, out_pdoExtension_21: int, out_Tmp_2212: int, out_Tmp_2214: int, out_Tmp_2215: int, out_Tmp_2216: int, out_Tmp_2217: int, out_Tmp_2218: int, out_Tmp_2219: int, out_Tmp_2221: int, out_Tmp_2222: int, out_Tmp_2223: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2228: int, out_Tmp_2229: int, out_Tmp_2231: int, out_Tmp_2233: int, out_Tmp_2235: int, out_Tmp_2236: int, out_Tmp_2237: int, out_Tmp_2240: int, out_Tmp_2243: int, out_Tmp_2244: int, out_Tmp_2246: int, out_Tmp_2247: int, out_Tmp_2248: int, out_Tmp_2249: int, out_Tmp_2254: int, out_Tmp_2256: int, out_Tmp_2257: int, out_Tmp_2259: int, out_Tmp_2260: int, out_Tmp_2261: int, out_i_7: int, out_Tmp_2264: int, out_Tmp_2266: int, out_Tmp_2267: int, out_Tmp_2272: int, out_Tmp_2274: int, out_Tmp_2276: int, out_Tmp_2280: int, out_Tmp_2281: int, out_Tmp_2283: int, out_Tmp_2284: int, out_Tmp_2286: int, out_Tmp_2287: int, out_Tmp_2289: int, out_Tmp_2295: int, out_Tmp_2296: int, out_Tmp_2301: int, out_Tmp_2304: int, out_Tmp_2306: int, out_Tmp_2307: int, out_Tmp_2309: int, out_cIrql_11: int, out_Tmp_2310: int, out_Tmp_2314: int, out_Tmp_2315: int, out_Tmp_2320: int, out_Tmp_2322: int, out_DeviceObject_47: int)
{

  entry:
    out_Tmp_2199, out_Tmp_2200, out_Tmp_2202, out_Tmp_2206, out_pdoExtension_21, out_Tmp_2212, out_Tmp_2214, out_Tmp_2215, out_Tmp_2216, out_Tmp_2217, out_Tmp_2218, out_Tmp_2219, out_Tmp_2221, out_Tmp_2222, out_Tmp_2223, out_Tmp_2226, out_Tmp_2227, out_Tmp_2228, out_Tmp_2229, out_Tmp_2231, out_Tmp_2233, out_Tmp_2235, out_Tmp_2236, out_Tmp_2237, out_Tmp_2240, out_Tmp_2243, out_Tmp_2244, out_Tmp_2246, out_Tmp_2247, out_Tmp_2248, out_Tmp_2249, out_Tmp_2254, out_Tmp_2256, out_Tmp_2257, out_Tmp_2259, out_Tmp_2260, out_Tmp_2261, out_i_7, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, out_Tmp_2272, out_Tmp_2274, out_Tmp_2276, out_Tmp_2280, out_Tmp_2281, out_Tmp_2283, out_Tmp_2284, out_Tmp_2286, out_Tmp_2287, out_Tmp_2289, out_Tmp_2295, out_Tmp_2296, out_Tmp_2301, out_Tmp_2304, out_Tmp_2306, out_Tmp_2307, out_Tmp_2309, out_cIrql_11, out_Tmp_2310, out_Tmp_2314, out_Tmp_2315, out_Tmp_2320, out_Tmp_2322, out_DeviceObject_47 := in_Tmp_2199, in_Tmp_2200, in_Tmp_2202, in_Tmp_2206, in_pdoExtension_21, in_Tmp_2212, in_Tmp_2214, in_Tmp_2215, in_Tmp_2216, in_Tmp_2217, in_Tmp_2218, in_Tmp_2219, in_Tmp_2221, in_Tmp_2222, in_Tmp_2223, in_Tmp_2226, in_Tmp_2227, in_Tmp_2228, in_Tmp_2229, in_Tmp_2231, in_Tmp_2233, in_Tmp_2235, in_Tmp_2236, in_Tmp_2237, in_Tmp_2240, in_Tmp_2243, in_Tmp_2244, in_Tmp_2246, in_Tmp_2247, in_Tmp_2248, in_Tmp_2249, in_Tmp_2254, in_Tmp_2256, in_Tmp_2257, in_Tmp_2259, in_Tmp_2260, in_Tmp_2261, in_i_7, in_Tmp_2264, in_Tmp_2266, in_Tmp_2267, in_Tmp_2272, in_Tmp_2274, in_Tmp_2276, in_Tmp_2280, in_Tmp_2281, in_Tmp_2283, in_Tmp_2284, in_Tmp_2286, in_Tmp_2287, in_Tmp_2289, in_Tmp_2295, in_Tmp_2296, in_Tmp_2301, in_Tmp_2304, in_Tmp_2306, in_Tmp_2307, in_Tmp_2309, in_cIrql_11, in_Tmp_2310, in_Tmp_2314, in_Tmp_2315, in_Tmp_2320, in_Tmp_2322, in_DeviceObject_47;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto anon189_Else;

  anon189_Else:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_i_7;
    out_Tmp_2246 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2215;
    assume {:nonnull} out_Tmp_2215 != 0;
    assume out_Tmp_2215 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    out_Tmp_2199 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2231;
    assume {:nonnull} out_Tmp_2231 != 0;
    assume out_Tmp_2231 > 0;
    havoc out_Tmp_2222;
    assume {:nonnull} out_Tmp_2222 != 0;
    assume out_Tmp_2222 > 0;
    havoc out_pdoExtension_21;
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    goto anon230_Else;

  anon230_Else:
    out_Tmp_2281 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2264;
    assume {:nonnull} out_Tmp_2264 != 0;
    assume out_Tmp_2264 > 0;
    havoc out_DeviceObject_47;
    out_Tmp_2272 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2310;
    assume {:nonnull} out_Tmp_2310 != 0;
    assume out_Tmp_2310 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    out_Tmp_2261 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2295;
    assume {:nonnull} out_Tmp_2295 != 0;
    assume out_Tmp_2295 > 0;
    call {:si_unique_call 4020} sdv_ExFreePool(0);
    out_Tmp_2256 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2274;
    assume {:nonnull} out_Tmp_2274 != 0;
    assume out_Tmp_2274 > 0;
    out_Tmp_2200 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2320;
    assume {:nonnull} out_Tmp_2320 != 0;
    assume out_Tmp_2320 > 0;
    goto L283;

  L283:
    out_Tmp_2280 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2237;
    assume {:nonnull} out_Tmp_2237 != 0;
    assume out_Tmp_2237 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    out_Tmp_2228 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2322;
    assume {:nonnull} out_Tmp_2322 != 0;
    assume out_Tmp_2322 > 0;
    call {:si_unique_call 4019} sdv_ExFreePool(0);
    out_Tmp_2307 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2276;
    assume {:nonnull} out_Tmp_2276 != 0;
    assume out_Tmp_2276 > 0;
    out_Tmp_2286 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2315;
    assume {:nonnull} out_Tmp_2315 != 0;
    assume out_Tmp_2315 > 0;
    goto L290;

  L290:
    out_Tmp_2223 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2233;
    assume {:nonnull} out_Tmp_2233 != 0;
    assume out_Tmp_2233 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    out_Tmp_2296 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2247;
    assume {:nonnull} out_Tmp_2247 != 0;
    assume out_Tmp_2247 > 0;
    call {:si_unique_call 4018} sdv_ExFreePool(0);
    out_Tmp_2259 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2218;
    assume {:nonnull} out_Tmp_2218 != 0;
    assume out_Tmp_2218 > 0;
    out_Tmp_2283 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2206;
    assume {:nonnull} out_Tmp_2206 != 0;
    assume out_Tmp_2206 > 0;
    goto L297;

  L297:
    out_Tmp_2266 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2221;
    assume {:nonnull} out_Tmp_2221 != 0;
    assume out_Tmp_2221 > 0;
    call {:si_unique_call 4015} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4016} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 4017} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc out_Tmp_2240;
    assume {:nonnull} out_Tmp_2240 != 0;
    assume out_Tmp_2240 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2240], 1) != 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc out_Tmp_2249;
    havoc out_Tmp_2235;
    call {:si_unique_call 4014} WPP_SF_q(out_Tmp_2235, 37, out_Tmp_2249, out_pdoExtension_21);
    goto L317;

  L317:
    call {:si_unique_call 4009} out_Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    Mem_T.INT4[out_Tmp_2260] := out_cIrql_11;
    call {:si_unique_call 4010} sdv_KeAcquireSpinLock(0, out_Tmp_2260);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_cIrql_11 := Mem_T.INT4[out_Tmp_2260];
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 4021} {:si_old_unique_call 1} out_Tmp_2199, out_Tmp_2200, out_Tmp_2202, out_Tmp_2206, out_pdoExtension_21, out_Tmp_2212, out_Tmp_2214, out_Tmp_2215, out_Tmp_2216, out_Tmp_2217, out_Tmp_2218, out_Tmp_2219, out_Tmp_2221, out_Tmp_2222, out_Tmp_2223, out_Tmp_2226, out_Tmp_2227, out_Tmp_2228, out_Tmp_2229, out_Tmp_2231, out_Tmp_2233, out_Tmp_2235, out_Tmp_2236, out_Tmp_2237, out_Tmp_2240, out_Tmp_2243, out_Tmp_2244, out_Tmp_2246, out_Tmp_2247, out_Tmp_2248, out_Tmp_2249, out_Tmp_2254, out_Tmp_2256, out_Tmp_2257, out_Tmp_2259, out_Tmp_2260, out_Tmp_2261, out_i_7, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, out_Tmp_2272, out_Tmp_2274, out_Tmp_2276, out_Tmp_2280, out_Tmp_2281, out_Tmp_2283, out_Tmp_2284, out_Tmp_2286, out_Tmp_2287, out_Tmp_2289, out_Tmp_2295, out_Tmp_2296, out_Tmp_2301, out_Tmp_2304, out_Tmp_2306, out_Tmp_2307, out_Tmp_2309, out_cIrql_11, out_Tmp_2310, out_Tmp_2314, out_Tmp_2315, out_Tmp_2320, out_Tmp_2322, out_DeviceObject_47 := Sbp2CleanDeviceExtension#0_loop_L273(out_Tmp_2199, out_Tmp_2200, out_Tmp_2202, out_Tmp_2206, out_pdoExtension_21, out_Tmp_2212, out_Tmp_2214, out_Tmp_2215, out_Tmp_2216, out_Tmp_2217, out_Tmp_2218, out_Tmp_2219, out_Tmp_2221, out_Tmp_2222, out_Tmp_2223, out_Tmp_2226, out_Tmp_2227, out_Tmp_2228, out_Tmp_2229, out_Tmp_2231, out_Tmp_2233, out_Tmp_2235, out_Tmp_2236, out_Tmp_2237, out_Tmp_2240, out_Tmp_2243, out_Tmp_2244, out_Tmp_2246, out_Tmp_2247, out_Tmp_2248, out_Tmp_2249, out_Tmp_2254, out_Tmp_2256, out_Tmp_2257, out_Tmp_2259, out_Tmp_2260, out_Tmp_2261, out_i_7, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, out_Tmp_2272, out_Tmp_2274, out_Tmp_2276, out_Tmp_2280, out_Tmp_2281, out_Tmp_2283, out_Tmp_2284, out_Tmp_2286, out_Tmp_2287, out_Tmp_2289, out_Tmp_2295, out_Tmp_2296, in_fdoExtension_13, out_Tmp_2301, out_Tmp_2304, out_Tmp_2306, out_Tmp_2307, out_Tmp_2309, out_cIrql_11, out_Tmp_2310, out_Tmp_2314, out_Tmp_2315, out_Tmp_2320, out_Tmp_2322, out_DeviceObject_47);
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2240], 1) == 0;
    goto L317;

  anon191_Then:
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon229_Then:
    goto L277;

  L277:
    out_Tmp_2244 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2217;
    assume {:nonnull} out_Tmp_2217 != 0;
    assume out_Tmp_2217 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    out_Tmp_2267 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2243;
    assume {:nonnull} out_Tmp_2243 != 0;
    assume out_Tmp_2243 > 0;
    call {:si_unique_call 4013} sdv_ExFreePool(0);
    out_Tmp_2212 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2219;
    assume {:nonnull} out_Tmp_2219 != 0;
    assume out_Tmp_2219 > 0;
    out_Tmp_2254 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2301;
    assume {:nonnull} out_Tmp_2301 != 0;
    assume out_Tmp_2301 > 0;
    goto L423;

  L423:
    out_Tmp_2314 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2248;
    assume {:nonnull} out_Tmp_2248 != 0;
    assume out_Tmp_2248 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    out_Tmp_2229 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2304;
    assume {:nonnull} out_Tmp_2304 != 0;
    assume out_Tmp_2304 > 0;
    call {:si_unique_call 4012} sdv_ExFreePool(0);
    out_Tmp_2227 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2257;
    assume {:nonnull} out_Tmp_2257 != 0;
    assume out_Tmp_2257 > 0;
    out_Tmp_2284 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2236;
    assume {:nonnull} out_Tmp_2236 != 0;
    assume out_Tmp_2236 > 0;
    goto L430;

  L430:
    out_Tmp_2289 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2226;
    assume {:nonnull} out_Tmp_2226 != 0;
    assume out_Tmp_2226 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    out_Tmp_2216 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2287;
    assume {:nonnull} out_Tmp_2287 != 0;
    assume out_Tmp_2287 > 0;
    call {:si_unique_call 4011} sdv_ExFreePool(0);
    out_Tmp_2306 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2214;
    assume {:nonnull} out_Tmp_2214 != 0;
    assume out_Tmp_2214 > 0;
    out_Tmp_2309 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2202;
    assume {:nonnull} out_Tmp_2202 != 0;
    assume out_Tmp_2202 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2199: int, in_Tmp_2200: int, in_Tmp_2202: int, in_Tmp_2206: int, in_pdoExtension_21: int, in_Tmp_2212: int, in_Tmp_2214: int, in_Tmp_2215: int, in_Tmp_2216: int, in_Tmp_2217: int, in_Tmp_2218: int, in_Tmp_2219: int, in_Tmp_2221: int, in_Tmp_2222: int, in_Tmp_2223: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2228: int, in_Tmp_2229: int, in_Tmp_2231: int, in_Tmp_2233: int, in_Tmp_2235: int, in_Tmp_2236: int, in_Tmp_2237: int, in_Tmp_2240: int, in_Tmp_2243: int, in_Tmp_2244: int, in_Tmp_2246: int, in_Tmp_2247: int, in_Tmp_2248: int, in_Tmp_2249: int, in_Tmp_2254: int, in_Tmp_2256: int, in_Tmp_2257: int, in_Tmp_2259: int, in_Tmp_2260: int, in_Tmp_2261: int, in_i_7: int, in_Tmp_2264: int, in_Tmp_2266: int, in_Tmp_2267: int, in_Tmp_2272: int, in_Tmp_2274: int, in_Tmp_2276: int, in_Tmp_2280: int, in_Tmp_2281: int, in_Tmp_2283: int, in_Tmp_2284: int, in_Tmp_2286: int, in_Tmp_2287: int, in_Tmp_2289: int, in_Tmp_2295: int, in_Tmp_2296: int, in_fdoExtension_13: int, in_Tmp_2301: int, in_Tmp_2304: int, in_Tmp_2306: int, in_Tmp_2307: int, in_Tmp_2309: int, in_cIrql_11: int, in_Tmp_2310: int, in_Tmp_2314: int, in_Tmp_2315: int, in_Tmp_2320: int, in_Tmp_2322: int, in_DeviceObject_47: int) returns (out_Tmp_2199: int, out_Tmp_2200: int, out_Tmp_2202: int, out_Tmp_2206: int, out_pdoExtension_21: int, out_Tmp_2212: int, out_Tmp_2214: int, out_Tmp_2215: int, out_Tmp_2216: int, out_Tmp_2217: int, out_Tmp_2218: int, out_Tmp_2219: int, out_Tmp_2221: int, out_Tmp_2222: int, out_Tmp_2223: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2228: int, out_Tmp_2229: int, out_Tmp_2231: int, out_Tmp_2233: int, out_Tmp_2235: int, out_Tmp_2236: int, out_Tmp_2237: int, out_Tmp_2240: int, out_Tmp_2243: int, out_Tmp_2244: int, out_Tmp_2246: int, out_Tmp_2247: int, out_Tmp_2248: int, out_Tmp_2249: int, out_Tmp_2254: int, out_Tmp_2256: int, out_Tmp_2257: int, out_Tmp_2259: int, out_Tmp_2260: int, out_Tmp_2261: int, out_i_7: int, out_Tmp_2264: int, out_Tmp_2266: int, out_Tmp_2267: int, out_Tmp_2272: int, out_Tmp_2274: int, out_Tmp_2276: int, out_Tmp_2280: int, out_Tmp_2281: int, out_Tmp_2283: int, out_Tmp_2284: int, out_Tmp_2286: int, out_Tmp_2287: int, out_Tmp_2289: int, out_Tmp_2295: int, out_Tmp_2296: int, out_Tmp_2301: int, out_Tmp_2304: int, out_Tmp_2306: int, out_Tmp_2307: int, out_Tmp_2309: int, out_cIrql_11: int, out_Tmp_2310: int, out_Tmp_2314: int, out_Tmp_2315: int, out_Tmp_2320: int, out_Tmp_2322: int, out_DeviceObject_47: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 9} Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_21: int, in_i_7: int, in_context_2: int) returns (out_i_7: int, out_context_2: int)
{

  entry:
    out_i_7, out_context_2 := in_i_7, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} 8 > out_i_7;
    assume {:nonnull} in_pdoExtension_21 != 0;
    assume in_pdoExtension_21 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 4022} FreeAddressRange#1(in_pdoExtension_21, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    out_i_7 := out_i_7 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 4023} {:si_old_unique_call 1} out_i_7, out_context_2 := Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_21, out_i_7, out_context_2);
    return;

  anon218_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_21: int, in_i_7: int, in_context_2: int) returns (out_i_7: int, out_context_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2203: int, in_pdoExtension_21: int, in_sdv_734: int, in_statusFifoElement: int, in_Tmp_2268: int, in_Tmp_2308: int) returns (out_Tmp_2203: int, out_sdv_734: int, out_statusFifoElement: int, out_Tmp_2268: int, out_Tmp_2308: int)
{
  var vslice_dummy_var_502: int;

  entry:
    out_Tmp_2203, out_sdv_734, out_statusFifoElement, out_Tmp_2268, out_Tmp_2308 := in_Tmp_2203, in_sdv_734, in_statusFifoElement, in_Tmp_2268, in_Tmp_2308;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon178_Else;

  anon178_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    havoc out_Tmp_2268;
    assume {:nonnull} out_Tmp_2268 != 0;
    assume out_Tmp_2268 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2268], 1) != 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc out_Tmp_2308;
    havoc out_Tmp_2203;
    assume {:nonnull} in_pdoExtension_21 != 0;
    assume in_pdoExtension_21 > 0;
    havoc vslice_dummy_var_502;
    call {:si_unique_call 4026} WPP_SF_qqq(out_Tmp_2203, 35, out_Tmp_2308, in_pdoExtension_21, out_statusFifoElement, vslice_dummy_var_502);
    goto L175;

  L175:
    call {:si_unique_call 4024} IoFreeMdl(0);
    call {:si_unique_call 4025} out_sdv_734 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_734;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 4027} {:si_old_unique_call 1} out_Tmp_2203, out_sdv_734, out_statusFifoElement, out_Tmp_2268, out_Tmp_2308 := Sbp2CleanDeviceExtension#1_loop_L167(out_Tmp_2203, in_pdoExtension_21, out_sdv_734, out_statusFifoElement, out_Tmp_2268, out_Tmp_2308);
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2268], 1) == 0;
    goto L175;

  anon179_Then:
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2203: int, in_pdoExtension_21: int, in_sdv_734: int, in_statusFifoElement: int, in_Tmp_2268: int, in_Tmp_2308: int) returns (out_Tmp_2203: int, out_sdv_734: int, out_statusFifoElement: int, out_Tmp_2268: int, out_Tmp_2308: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_733: int, in_Tmp_2302: int, in_packet_13: int) returns (out_sdv_733: int, out_Tmp_2302: int, out_packet_13: int)
{

  entry:
    out_sdv_733, out_Tmp_2302, out_packet_13 := in_sdv_733, in_Tmp_2302, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 4031} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    havoc out_Tmp_2302;
    assume {:nonnull} out_Tmp_2302 != 0;
    assume out_Tmp_2302 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 4030} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 4028} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 4029} out_sdv_733 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_733;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 4032} {:si_old_unique_call 1} out_sdv_733, out_Tmp_2302, out_packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(out_sdv_733, out_Tmp_2302, out_packet_13);
    return;

  anon221_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_733: int, in_Tmp_2302: int, in_packet_13: int) returns (out_sdv_733: int, out_Tmp_2302: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2211: int, in_i_7: int, in_Tmp_2282: int, in_Tmp_2292: int, in_Tmp_2297: int, in_fdoExtension_13: int, in_DeviceObject_47: int) returns (out_Tmp_2211: int, out_i_7: int, out_Tmp_2282: int, out_Tmp_2292: int, out_Tmp_2297: int)
{

  entry:
    out_Tmp_2211, out_i_7, out_Tmp_2282, out_Tmp_2292, out_Tmp_2297 := in_Tmp_2211, in_i_7, in_Tmp_2282, in_Tmp_2292, in_Tmp_2297;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2282 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2297;
    assume {:nonnull} out_Tmp_2297 != 0;
    assume out_Tmp_2297 > 0;
    goto anon204_Else;

  anon204_Else:
    out_Tmp_2211 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2292;
    assume {:nonnull} out_Tmp_2292 != 0;
    assume out_Tmp_2292 > 0;
    goto anon205_Then;

  anon205_Then:
    out_i_7 := out_i_7 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2211: int, in_i_7: int, in_Tmp_2282: int, in_Tmp_2292: int, in_Tmp_2297: int, in_fdoExtension_13: int, in_DeviceObject_47: int) returns (out_Tmp_2211: int, out_i_7: int, out_Tmp_2282: int, out_Tmp_2292: int, out_Tmp_2297: int);
  free ensures {:va_keep} out_Tmp_2211 == in_i_7 || out_Tmp_2211 == in_Tmp_2211;
  free ensures {:va_keep} out_Tmp_2282 == in_i_7 || out_Tmp_2282 == in_Tmp_2282;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_21: int, in_sdv_738: int, in_vslice_dummy_var_448: int) returns (out_sdv_738: int, out_vslice_dummy_var_448: int)
{

  entry:
    out_sdv_738, out_vslice_dummy_var_448 := in_sdv_738, in_vslice_dummy_var_448;
    goto L379, exit;

  exit:
    return;

  L379:
    call {:si_unique_call 4033} out_sdv_738 := sdv_IsListEmpty(0);
    goto anon197_Else;

  anon197_Else:
    assume {:partition} out_sdv_738 == 0;
    assume {:nonnull} in_pdoExtension_21 != 0;
    assume in_pdoExtension_21 > 0;
    call {:si_unique_call 4034} out_vslice_dummy_var_448 := sdv_RemoveEntryList(0);
    call {:si_unique_call 4035} sdv_ExFreePool(0);
    goto anon197_Else_dummy;

  anon197_Else_dummy:
    call {:si_unique_call 4036} {:si_old_unique_call 1} out_sdv_738, out_vslice_dummy_var_448 := Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_21, out_sdv_738, out_vslice_dummy_var_448);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_21: int, in_sdv_738: int, in_vslice_dummy_var_448: int) returns (out_sdv_738: int, out_vslice_dummy_var_448: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_738 == 1 || out_sdv_738 == 0 || out_sdv_738 == in_sdv_738;
  free ensures {:va_keep} out_vslice_dummy_var_448 == 1 || out_vslice_dummy_var_448 == 0 || out_vslice_dummy_var_448 == in_vslice_dummy_var_448;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2199: int, in_Tmp_2200: int, in_Tmp_2202: int, in_Tmp_2204: int, in_Tmp_2206: int, in_Tmp_2207: int, in_pdoExtension_21: int, in_Tmp_2212: int, in_Tmp_2214: int, in_Tmp_2215: int, in_Tmp_2216: int, in_Tmp_2217: int, in_Tmp_2218: int, in_Tmp_2219: int, in_Tmp_2221: int, in_Tmp_2222: int, in_Tmp_2223: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2228: int, in_Tmp_2229: int, in_Tmp_2231: int, in_Tmp_2233: int, in_Tmp_2235: int, in_Tmp_2236: int, in_Tmp_2237: int, in_Tmp_2238: int, in_Tmp_2240: int, in_sdv_738: int, in_Tmp_2242: int, in_Tmp_2243: int, in_Tmp_2244: int, in_Tmp_2246: int, in_Tmp_2247: int, in_Tmp_2248: int, in_Tmp_2249: int, in_status_68: int, in_Tmp_2254: int, in_Tmp_2255: int, in_Tmp_2256: int, in_Tmp_2257: int, in_Tmp_2259: int, in_Tmp_2260: int, in_Tmp_2261: int, in_i_7: int, in_Tmp_2262: int, in_Tmp_2264: int, in_Tmp_2266: int, in_Tmp_2267: int, in_Tmp_2269: int, in_Tmp_2272: int, in_Tmp_2274: int, in_Tmp_2275: int, in_Tmp_2276: int, in_Tmp_2277: int, in_Tmp_2280: int, in_Tmp_2281: int, in_Tmp_2283: int, in_Tmp_2284: int, in_Tmp_2286: int, in_Tmp_2287: int, in_Tmp_2289: int, in_Tmp_2290: int, in_Tmp_2295: int, in_Tmp_2296: int, in_sdv_743: int, in_fdoExtension_13: int, in_Tmp_2299: int, in_Tmp_2301: int, in_Tmp_2304: int, in_Tmp_2306: int, in_Tmp_2307: int, in_Tmp_2309: int, in_cIrql_11: int, in_Tmp_2310: int, in_Tmp_2314: int, in_Tmp_2315: int, in_Tmp_2316: int, in_Tmp_2319: int, in_Tmp_2320: int, in_Tmp_2322: int, in_DeviceObject_47: int, in_vslice_dummy_var_443: int, in_vslice_dummy_var_447: int, in_vslice_dummy_var_448: int) returns (out_Tmp_2199: int, out_Tmp_2200: int, out_Tmp_2202: int, out_Tmp_2204: int, out_Tmp_2206: int, out_Tmp_2207: int, out_pdoExtension_21: int, out_Tmp_2212: int, out_Tmp_2214: int, out_Tmp_2215: int, out_Tmp_2216: int, out_Tmp_2217: int, out_Tmp_2218: int, out_Tmp_2219: int, out_Tmp_2221: int, out_Tmp_2222: int, out_Tmp_2223: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2228: int, out_Tmp_2229: int, out_Tmp_2231: int, out_Tmp_2233: int, out_Tmp_2235: int, out_Tmp_2236: int, out_Tmp_2237: int, out_Tmp_2238: int, out_Tmp_2240: int, out_sdv_738: int, out_Tmp_2242: int, out_Tmp_2243: int, out_Tmp_2244: int, out_Tmp_2246: int, out_Tmp_2247: int, out_Tmp_2248: int, out_Tmp_2249: int, out_status_68: int, out_Tmp_2254: int, out_Tmp_2255: int, out_Tmp_2256: int, out_Tmp_2257: int, out_Tmp_2259: int, out_Tmp_2260: int, out_Tmp_2261: int, out_i_7: int, out_Tmp_2262: int, out_Tmp_2264: int, out_Tmp_2266: int, out_Tmp_2267: int, out_Tmp_2269: int, out_Tmp_2272: int, out_Tmp_2274: int, out_Tmp_2275: int, out_Tmp_2276: int, out_Tmp_2277: int, out_Tmp_2280: int, out_Tmp_2281: int, out_Tmp_2283: int, out_Tmp_2284: int, out_Tmp_2286: int, out_Tmp_2287: int, out_Tmp_2289: int, out_Tmp_2290: int, out_Tmp_2295: int, out_Tmp_2296: int, out_sdv_743: int, out_Tmp_2299: int, out_Tmp_2301: int, out_Tmp_2304: int, out_Tmp_2306: int, out_Tmp_2307: int, out_Tmp_2309: int, out_cIrql_11: int, out_Tmp_2310: int, out_Tmp_2314: int, out_Tmp_2315: int, out_Tmp_2316: int, out_Tmp_2319: int, out_Tmp_2320: int, out_Tmp_2322: int, out_DeviceObject_47: int, out_vslice_dummy_var_443: int, out_vslice_dummy_var_447: int, out_vslice_dummy_var_448: int)
{

  entry:
    out_Tmp_2199, out_Tmp_2200, out_Tmp_2202, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_pdoExtension_21, out_Tmp_2212, out_Tmp_2214, out_Tmp_2215, out_Tmp_2216, out_Tmp_2217, out_Tmp_2218, out_Tmp_2219, out_Tmp_2221, out_Tmp_2222, out_Tmp_2223, out_Tmp_2226, out_Tmp_2227, out_Tmp_2228, out_Tmp_2229, out_Tmp_2231, out_Tmp_2233, out_Tmp_2235, out_Tmp_2236, out_Tmp_2237, out_Tmp_2238, out_Tmp_2240, out_sdv_738, out_Tmp_2242, out_Tmp_2243, out_Tmp_2244, out_Tmp_2246, out_Tmp_2247, out_Tmp_2248, out_Tmp_2249, out_status_68, out_Tmp_2254, out_Tmp_2255, out_Tmp_2256, out_Tmp_2257, out_Tmp_2259, out_Tmp_2260, out_Tmp_2261, out_i_7, out_Tmp_2262, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, out_Tmp_2269, out_Tmp_2272, out_Tmp_2274, out_Tmp_2275, out_Tmp_2276, out_Tmp_2277, out_Tmp_2280, out_Tmp_2281, out_Tmp_2283, out_Tmp_2284, out_Tmp_2286, out_Tmp_2287, out_Tmp_2289, out_Tmp_2290, out_Tmp_2295, out_Tmp_2296, out_sdv_743, out_Tmp_2299, out_Tmp_2301, out_Tmp_2304, out_Tmp_2306, out_Tmp_2307, out_Tmp_2309, out_cIrql_11, out_Tmp_2310, out_Tmp_2314, out_Tmp_2315, out_Tmp_2316, out_Tmp_2319, out_Tmp_2320, out_Tmp_2322, out_DeviceObject_47, out_vslice_dummy_var_443, out_vslice_dummy_var_447, out_vslice_dummy_var_448 := in_Tmp_2199, in_Tmp_2200, in_Tmp_2202, in_Tmp_2204, in_Tmp_2206, in_Tmp_2207, in_pdoExtension_21, in_Tmp_2212, in_Tmp_2214, in_Tmp_2215, in_Tmp_2216, in_Tmp_2217, in_Tmp_2218, in_Tmp_2219, in_Tmp_2221, in_Tmp_2222, in_Tmp_2223, in_Tmp_2226, in_Tmp_2227, in_Tmp_2228, in_Tmp_2229, in_Tmp_2231, in_Tmp_2233, in_Tmp_2235, in_Tmp_2236, in_Tmp_2237, in_Tmp_2238, in_Tmp_2240, in_sdv_738, in_Tmp_2242, in_Tmp_2243, in_Tmp_2244, in_Tmp_2246, in_Tmp_2247, in_Tmp_2248, in_Tmp_2249, in_status_68, in_Tmp_2254, in_Tmp_2255, in_Tmp_2256, in_Tmp_2257, in_Tmp_2259, in_Tmp_2260, in_Tmp_2261, in_i_7, in_Tmp_2262, in_Tmp_2264, in_Tmp_2266, in_Tmp_2267, in_Tmp_2269, in_Tmp_2272, in_Tmp_2274, in_Tmp_2275, in_Tmp_2276, in_Tmp_2277, in_Tmp_2280, in_Tmp_2281, in_Tmp_2283, in_Tmp_2284, in_Tmp_2286, in_Tmp_2287, in_Tmp_2289, in_Tmp_2290, in_Tmp_2295, in_Tmp_2296, in_sdv_743, in_Tmp_2299, in_Tmp_2301, in_Tmp_2304, in_Tmp_2306, in_Tmp_2307, in_Tmp_2309, in_cIrql_11, in_Tmp_2310, in_Tmp_2314, in_Tmp_2315, in_Tmp_2316, in_Tmp_2319, in_Tmp_2320, in_Tmp_2322, in_DeviceObject_47, in_vslice_dummy_var_443, in_vslice_dummy_var_447, in_vslice_dummy_var_448;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto anon189_Else;

  anon189_Else:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_i_7;
    out_Tmp_2246 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2215;
    assume {:nonnull} out_Tmp_2215 != 0;
    assume out_Tmp_2215 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    out_Tmp_2199 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2231;
    assume {:nonnull} out_Tmp_2231 != 0;
    assume out_Tmp_2231 > 0;
    havoc out_Tmp_2222;
    assume {:nonnull} out_Tmp_2222 != 0;
    assume out_Tmp_2222 > 0;
    havoc out_pdoExtension_21;
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    out_Tmp_2281 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2264;
    assume {:nonnull} out_Tmp_2264 != 0;
    assume out_Tmp_2264 > 0;
    havoc out_DeviceObject_47;
    out_Tmp_2272 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2310;
    assume {:nonnull} out_Tmp_2310 != 0;
    assume out_Tmp_2310 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    out_Tmp_2261 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2295;
    assume {:nonnull} out_Tmp_2295 != 0;
    assume out_Tmp_2295 > 0;
    call {:si_unique_call 4073} sdv_ExFreePool(0);
    out_Tmp_2256 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2274;
    assume {:nonnull} out_Tmp_2274 != 0;
    assume out_Tmp_2274 > 0;
    out_Tmp_2200 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2320;
    assume {:nonnull} out_Tmp_2320 != 0;
    assume out_Tmp_2320 > 0;
    goto L283;

  L283:
    out_Tmp_2280 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2237;
    assume {:nonnull} out_Tmp_2237 != 0;
    assume out_Tmp_2237 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    out_Tmp_2228 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2322;
    assume {:nonnull} out_Tmp_2322 != 0;
    assume out_Tmp_2322 > 0;
    call {:si_unique_call 4072} sdv_ExFreePool(0);
    out_Tmp_2307 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2276;
    assume {:nonnull} out_Tmp_2276 != 0;
    assume out_Tmp_2276 > 0;
    out_Tmp_2286 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2315;
    assume {:nonnull} out_Tmp_2315 != 0;
    assume out_Tmp_2315 > 0;
    goto L290;

  L290:
    out_Tmp_2223 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2233;
    assume {:nonnull} out_Tmp_2233 != 0;
    assume out_Tmp_2233 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    out_Tmp_2296 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2247;
    assume {:nonnull} out_Tmp_2247 != 0;
    assume out_Tmp_2247 > 0;
    call {:si_unique_call 4071} sdv_ExFreePool(0);
    out_Tmp_2259 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2218;
    assume {:nonnull} out_Tmp_2218 != 0;
    assume out_Tmp_2218 > 0;
    out_Tmp_2283 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2206;
    assume {:nonnull} out_Tmp_2206 != 0;
    assume out_Tmp_2206 > 0;
    goto L297;

  L297:
    out_Tmp_2266 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2221;
    assume {:nonnull} out_Tmp_2221 != 0;
    assume out_Tmp_2221 > 0;
    call {:si_unique_call 4068} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4069} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 4070} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc out_Tmp_2240;
    assume {:nonnull} out_Tmp_2240 != 0;
    assume out_Tmp_2240 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2240], 1) != 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc out_Tmp_2249;
    havoc out_Tmp_2235;
    call {:si_unique_call 4067} WPP_SF_q(out_Tmp_2235, 37, out_Tmp_2249, out_pdoExtension_21);
    goto L317;

  L317:
    call {:si_unique_call 4037} out_Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    Mem_T.INT4[out_Tmp_2260] := out_cIrql_11;
    call {:si_unique_call 4038} sdv_KeAcquireSpinLock(0, out_Tmp_2260);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_cIrql_11 := Mem_T.INT4[out_Tmp_2260];
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 4074} {:si_old_unique_call 1} out_Tmp_2199, out_Tmp_2200, out_Tmp_2202, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_pdoExtension_21, out_Tmp_2212, out_Tmp_2214, out_Tmp_2215, out_Tmp_2216, out_Tmp_2217, out_Tmp_2218, out_Tmp_2219, out_Tmp_2221, out_Tmp_2222, out_Tmp_2223, out_Tmp_2226, out_Tmp_2227, out_Tmp_2228, out_Tmp_2229, out_Tmp_2231, out_Tmp_2233, out_Tmp_2235, out_Tmp_2236, out_Tmp_2237, out_Tmp_2238, out_Tmp_2240, out_sdv_738, out_Tmp_2242, out_Tmp_2243, out_Tmp_2244, out_Tmp_2246, out_Tmp_2247, out_Tmp_2248, out_Tmp_2249, out_status_68, out_Tmp_2254, out_Tmp_2255, out_Tmp_2256, out_Tmp_2257, out_Tmp_2259, out_Tmp_2260, out_Tmp_2261, out_i_7, out_Tmp_2262, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, out_Tmp_2269, out_Tmp_2272, out_Tmp_2274, out_Tmp_2275, out_Tmp_2276, out_Tmp_2277, out_Tmp_2280, out_Tmp_2281, out_Tmp_2283, out_Tmp_2284, out_Tmp_2286, out_Tmp_2287, out_Tmp_2289, out_Tmp_2290, out_Tmp_2295, out_Tmp_2296, out_sdv_743, out_Tmp_2299, out_Tmp_2301, out_Tmp_2304, out_Tmp_2306, out_Tmp_2307, out_Tmp_2309, out_cIrql_11, out_Tmp_2310, out_Tmp_2314, out_Tmp_2315, out_Tmp_2316, out_Tmp_2319, out_Tmp_2320, out_Tmp_2322, out_DeviceObject_47, out_vslice_dummy_var_443, out_vslice_dummy_var_447, out_vslice_dummy_var_448 := Sbp2CleanDeviceExtension#1_loop_L273(out_Tmp_2199, out_Tmp_2200, out_Tmp_2202, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_pdoExtension_21, out_Tmp_2212, out_Tmp_2214, out_Tmp_2215, out_Tmp_2216, out_Tmp_2217, out_Tmp_2218, out_Tmp_2219, out_Tmp_2221, out_Tmp_2222, out_Tmp_2223, out_Tmp_2226, out_Tmp_2227, out_Tmp_2228, out_Tmp_2229, out_Tmp_2231, out_Tmp_2233, out_Tmp_2235, out_Tmp_2236, out_Tmp_2237, out_Tmp_2238, out_Tmp_2240, out_sdv_738, out_Tmp_2242, out_Tmp_2243, out_Tmp_2244, out_Tmp_2246, out_Tmp_2247, out_Tmp_2248, out_Tmp_2249, out_status_68, out_Tmp_2254, out_Tmp_2255, out_Tmp_2256, out_Tmp_2257, out_Tmp_2259, out_Tmp_2260, out_Tmp_2261, out_i_7, out_Tmp_2262, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, out_Tmp_2269, out_Tmp_2272, out_Tmp_2274, out_Tmp_2275, out_Tmp_2276, out_Tmp_2277, out_Tmp_2280, out_Tmp_2281, out_Tmp_2283, out_Tmp_2284, out_Tmp_2286, out_Tmp_2287, out_Tmp_2289, out_Tmp_2290, out_Tmp_2295, out_Tmp_2296, out_sdv_743, in_fdoExtension_13, out_Tmp_2299, out_Tmp_2301, out_Tmp_2304, out_Tmp_2306, out_Tmp_2307, out_Tmp_2309, out_cIrql_11, out_Tmp_2310, out_Tmp_2314, out_Tmp_2315, out_Tmp_2316, out_Tmp_2319, out_Tmp_2320, out_Tmp_2322, out_DeviceObject_47, out_vslice_dummy_var_443, out_vslice_dummy_var_447, out_vslice_dummy_var_448);
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2240], 1) == 0;
    goto L317;

  anon191_Then:
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon230_Then:
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    out_Tmp_2207 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2255;
    assume {:nonnull} out_Tmp_2255 != 0;
    assume out_Tmp_2255 > 0;
    havoc out_DeviceObject_47;
    call {:si_unique_call 4046} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4047} out_sdv_743 := Sbp2CleanDeviceExtension#0(out_DeviceObject_47, 1, 0);
    goto anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_sdv_743 != 0;
    call {:si_unique_call 4066} out_status_68 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_status_68 < 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    havoc out_Tmp_2290;
    assume {:nonnull} out_Tmp_2290 != 0;
    assume out_Tmp_2290 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2290], 1) != 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc out_Tmp_2275;
    havoc out_Tmp_2316;
    call {:si_unique_call 4065} WPP_SF_qD(out_Tmp_2316, 38, out_Tmp_2275, out_DeviceObject_47, out_status_68);
    goto L348;

  L348:
    call {:si_unique_call 4062} out_Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    Mem_T.INT4[out_Tmp_2260] := out_cIrql_11;
    call {:si_unique_call 4063} sdv_KeRaiseIrql(2, out_Tmp_2260);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_cIrql_11 := Mem_T.INT4[out_Tmp_2260];
    call {:si_unique_call 4064} Sbp2StartNextPacketByKey#1(out_DeviceObject_47, 0);
    goto anon236_Else;

  anon236_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4061} sdv_KeLowerIrql(out_cIrql_11);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    havoc out_Tmp_2262;
    assume {:nonnull} out_Tmp_2262 != 0;
    assume out_Tmp_2262 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2262], 1) != 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc out_Tmp_2242;
    havoc out_Tmp_2204;
    call {:si_unique_call 4060} WPP_SF_qq(out_Tmp_2204, 39, out_Tmp_2242, out_pdoExtension_21, out_DeviceObject_47);
    goto L361;

  L361:
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    call {:si_unique_call 4055} out_vslice_dummy_var_447 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_21), 0, 0);
    call {:si_unique_call 4056} out_vslice_dummy_var_443 := KeCancelTimer(0);
    call {:si_unique_call 4057} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto L379;

  L379:
    call {:si_unique_call 4053} out_sdv_738, out_vslice_dummy_var_448 := Sbp2CleanDeviceExtension#1_loop_L379(out_pdoExtension_21, out_sdv_738, out_vslice_dummy_var_448);
    goto L379_last;

  L379_last:
    call {:si_unique_call 4054} out_sdv_738 := sdv_IsListEmpty(0);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} out_sdv_738 == 0;
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    call {:si_unique_call 4058} out_vslice_dummy_var_448 := sdv_RemoveEntryList(0);
    call {:si_unique_call 4059} sdv_ExFreePool(0);
    assume false;
    return;

  anon197_Then:
    assume {:partition} out_sdv_738 != 0;
    call {:si_unique_call 4049} out_Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    Mem_T.INT4[out_Tmp_2260] := out_cIrql_11;
    call {:si_unique_call 4050} sdv_KeAcquireSpinLock(0, out_Tmp_2260);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_cIrql_11 := Mem_T.INT4[out_Tmp_2260];
    out_Tmp_2269 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2299;
    assume {:nonnull} out_Tmp_2299 != 0;
    assume out_Tmp_2299 > 0;
    call {:si_unique_call 4051} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4052} IoDeleteDevice(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    havoc out_Tmp_2319;
    assume {:nonnull} out_Tmp_2319 != 0;
    assume out_Tmp_2319 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2319], 1) != 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    havoc out_Tmp_2238;
    havoc out_Tmp_2277;
    call {:si_unique_call 4048} WPP_SF_q(out_Tmp_2277, 40, out_Tmp_2238, out_pdoExtension_21);
    goto L398;

  L398:
    call {:si_unique_call 4042} out_Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    Mem_T.INT4[out_Tmp_2260] := out_cIrql_11;
    call {:si_unique_call 4043} sdv_KeAcquireSpinLock(0, out_Tmp_2260);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_cIrql_11 := Mem_T.INT4[out_Tmp_2260];
    goto L277;

  L277:
    out_Tmp_2244 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2217;
    assume {:nonnull} out_Tmp_2217 != 0;
    assume out_Tmp_2217 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    out_Tmp_2267 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2243;
    assume {:nonnull} out_Tmp_2243 != 0;
    assume out_Tmp_2243 > 0;
    call {:si_unique_call 4041} sdv_ExFreePool(0);
    out_Tmp_2212 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2219;
    assume {:nonnull} out_Tmp_2219 != 0;
    assume out_Tmp_2219 > 0;
    out_Tmp_2254 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2301;
    assume {:nonnull} out_Tmp_2301 != 0;
    assume out_Tmp_2301 > 0;
    goto L423;

  L423:
    out_Tmp_2314 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2248;
    assume {:nonnull} out_Tmp_2248 != 0;
    assume out_Tmp_2248 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    out_Tmp_2229 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2304;
    assume {:nonnull} out_Tmp_2304 != 0;
    assume out_Tmp_2304 > 0;
    call {:si_unique_call 4040} sdv_ExFreePool(0);
    out_Tmp_2227 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2257;
    assume {:nonnull} out_Tmp_2257 != 0;
    assume out_Tmp_2257 > 0;
    out_Tmp_2284 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2236;
    assume {:nonnull} out_Tmp_2236 != 0;
    assume out_Tmp_2236 > 0;
    goto L430;

  L430:
    out_Tmp_2289 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2226;
    assume {:nonnull} out_Tmp_2226 != 0;
    assume out_Tmp_2226 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    out_Tmp_2216 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2287;
    assume {:nonnull} out_Tmp_2287 != 0;
    assume out_Tmp_2287 > 0;
    call {:si_unique_call 4039} sdv_ExFreePool(0);
    out_Tmp_2306 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2214;
    assume {:nonnull} out_Tmp_2214 != 0;
    assume out_Tmp_2214 > 0;
    out_Tmp_2309 := out_i_7;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2202;
    assume {:nonnull} out_Tmp_2202 != 0;
    assume out_Tmp_2202 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;

  anon199_Then:
    goto L398;

  anon238_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2319], 1) == 0;
    goto L398;

  anon198_Then:
    goto L398;

  anon196_Then:
    goto L361;

  anon237_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2262], 1) == 0;
    goto L361;

  anon195_Then:
    goto L361;

  anon201_Then:
    goto L348;

  anon242_Then:
    assume {:partition} BAND(Mem_T.INT4[out_Tmp_2290], 1) == 0;
    goto L348;

  anon200_Then:
    goto L348;

  anon194_Then:
    assume {:partition} 0 <= out_status_68;
    goto L348;

  anon193_Then:
    assume {:partition} out_sdv_743 == 0;
    call {:si_unique_call 4044} out_Tmp_2260 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    Mem_T.INT4[out_Tmp_2260] := out_cIrql_11;
    call {:si_unique_call 4045} sdv_KeAcquireSpinLock(0, out_Tmp_2260);
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_cIrql_11 := Mem_T.INT4[out_Tmp_2260];
    goto L277;

  anon229_Then:
    goto L277;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2199: int, in_Tmp_2200: int, in_Tmp_2202: int, in_Tmp_2204: int, in_Tmp_2206: int, in_Tmp_2207: int, in_pdoExtension_21: int, in_Tmp_2212: int, in_Tmp_2214: int, in_Tmp_2215: int, in_Tmp_2216: int, in_Tmp_2217: int, in_Tmp_2218: int, in_Tmp_2219: int, in_Tmp_2221: int, in_Tmp_2222: int, in_Tmp_2223: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2228: int, in_Tmp_2229: int, in_Tmp_2231: int, in_Tmp_2233: int, in_Tmp_2235: int, in_Tmp_2236: int, in_Tmp_2237: int, in_Tmp_2238: int, in_Tmp_2240: int, in_sdv_738: int, in_Tmp_2242: int, in_Tmp_2243: int, in_Tmp_2244: int, in_Tmp_2246: int, in_Tmp_2247: int, in_Tmp_2248: int, in_Tmp_2249: int, in_status_68: int, in_Tmp_2254: int, in_Tmp_2255: int, in_Tmp_2256: int, in_Tmp_2257: int, in_Tmp_2259: int, in_Tmp_2260: int, in_Tmp_2261: int, in_i_7: int, in_Tmp_2262: int, in_Tmp_2264: int, in_Tmp_2266: int, in_Tmp_2267: int, in_Tmp_2269: int, in_Tmp_2272: int, in_Tmp_2274: int, in_Tmp_2275: int, in_Tmp_2276: int, in_Tmp_2277: int, in_Tmp_2280: int, in_Tmp_2281: int, in_Tmp_2283: int, in_Tmp_2284: int, in_Tmp_2286: int, in_Tmp_2287: int, in_Tmp_2289: int, in_Tmp_2290: int, in_Tmp_2295: int, in_Tmp_2296: int, in_sdv_743: int, in_fdoExtension_13: int, in_Tmp_2299: int, in_Tmp_2301: int, in_Tmp_2304: int, in_Tmp_2306: int, in_Tmp_2307: int, in_Tmp_2309: int, in_cIrql_11: int, in_Tmp_2310: int, in_Tmp_2314: int, in_Tmp_2315: int, in_Tmp_2316: int, in_Tmp_2319: int, in_Tmp_2320: int, in_Tmp_2322: int, in_DeviceObject_47: int, in_vslice_dummy_var_443: int, in_vslice_dummy_var_447: int, in_vslice_dummy_var_448: int) returns (out_Tmp_2199: int, out_Tmp_2200: int, out_Tmp_2202: int, out_Tmp_2204: int, out_Tmp_2206: int, out_Tmp_2207: int, out_pdoExtension_21: int, out_Tmp_2212: int, out_Tmp_2214: int, out_Tmp_2215: int, out_Tmp_2216: int, out_Tmp_2217: int, out_Tmp_2218: int, out_Tmp_2219: int, out_Tmp_2221: int, out_Tmp_2222: int, out_Tmp_2223: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2228: int, out_Tmp_2229: int, out_Tmp_2231: int, out_Tmp_2233: int, out_Tmp_2235: int, out_Tmp_2236: int, out_Tmp_2237: int, out_Tmp_2238: int, out_Tmp_2240: int, out_sdv_738: int, out_Tmp_2242: int, out_Tmp_2243: int, out_Tmp_2244: int, out_Tmp_2246: int, out_Tmp_2247: int, out_Tmp_2248: int, out_Tmp_2249: int, out_status_68: int, out_Tmp_2254: int, out_Tmp_2255: int, out_Tmp_2256: int, out_Tmp_2257: int, out_Tmp_2259: int, out_Tmp_2260: int, out_Tmp_2261: int, out_i_7: int, out_Tmp_2262: int, out_Tmp_2264: int, out_Tmp_2266: int, out_Tmp_2267: int, out_Tmp_2269: int, out_Tmp_2272: int, out_Tmp_2274: int, out_Tmp_2275: int, out_Tmp_2276: int, out_Tmp_2277: int, out_Tmp_2280: int, out_Tmp_2281: int, out_Tmp_2283: int, out_Tmp_2284: int, out_Tmp_2286: int, out_Tmp_2287: int, out_Tmp_2289: int, out_Tmp_2290: int, out_Tmp_2295: int, out_Tmp_2296: int, out_sdv_743: int, out_Tmp_2299: int, out_Tmp_2301: int, out_Tmp_2304: int, out_Tmp_2306: int, out_Tmp_2307: int, out_Tmp_2309: int, out_cIrql_11: int, out_Tmp_2310: int, out_Tmp_2314: int, out_Tmp_2315: int, out_Tmp_2316: int, out_Tmp_2319: int, out_Tmp_2320: int, out_Tmp_2322: int, out_DeviceObject_47: int, out_vslice_dummy_var_443: int, out_vslice_dummy_var_447: int, out_vslice_dummy_var_448: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_738 == 1 || out_sdv_738 == 0 || out_sdv_738 == in_sdv_738;
  free ensures {:va_keep} out_status_68 == -1073741823 || out_status_68 == -1073741738 || out_status_68 == 0 || out_status_68 == in_status_68;
  free ensures {:va_keep} out_vslice_dummy_var_443 == 1 || out_vslice_dummy_var_443 == 0 || out_vslice_dummy_var_443 == in_vslice_dummy_var_443;
  free ensures {:va_keep} out_vslice_dummy_var_448 == 1 || out_vslice_dummy_var_448 == 0 || out_vslice_dummy_var_448 == in_vslice_dummy_var_448;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1293: int, in_sdv_435: int, in_sdv_436: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_25: int, in_Key: int) returns (out_Tmp_1293: int, out_sdv_435: int, out_sdv_436: int, out_irp_3: int, out_packet_7: int)
{
  var vslice_dummy_var_503: int;

  entry:
    out_Tmp_1293, out_sdv_435, out_sdv_436, out_irp_3, out_packet_7 := in_Tmp_1293, in_sdv_435, in_sdv_436, in_irp_3, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_25 != 0;
    assume in_DeviceObject_25 > 0;
    call {:si_unique_call 4075} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_25), in_Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 4078} out_sdv_436 := sdv_containing_record(out_packet_7, 64);
    out_irp_3 := out_sdv_436;
    call {:si_unique_call 4079} Sbp2StartIo#0(in_DeviceObject_25, out_irp_3);
    goto anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 4076} out_Tmp_1293 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1293 != 0;
    assume out_Tmp_1293 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    havoc vslice_dummy_var_503;
    Mem_T.INT4[out_Tmp_1293] := vslice_dummy_var_503;
    call {:si_unique_call 4077} out_sdv_435 := sdv_InterlockedDecrement(out_Tmp_1293);
    assume {:nonnull} out_Tmp_1293 != 0;
    assume out_Tmp_1293 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_435 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 4080} {:si_old_unique_call 1} out_Tmp_1293, out_sdv_435, out_sdv_436, out_irp_3, out_packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(out_Tmp_1293, out_sdv_435, out_sdv_436, out_irp_3, out_packet_7, in_deviceExtension, in_DeviceObject_25, in_Key);
    return;

  anon10_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1293: int, in_sdv_435: int, in_sdv_436: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_25: int, in_Key: int) returns (out_Tmp_1293: int, out_sdv_435: int, out_sdv_436: int, out_irp_3: int, out_packet_7: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_5 == 2 || sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_2) || sdv_irql_previous_5 == old(sdv_irql_previous) || sdv_irql_previous_5 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_2 == 2 || sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous_3) || sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_current) || sdv_irql_previous_2 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current) || sdv_irql_current == old(sdv_irql_previous_3) || sdv_irql_current == old(sdv_irql_previous_2) || sdv_irql_current == old(sdv_irql_previous) || sdv_irql_current == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous == 2 || sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_previous_2) || sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous_4) || sdv_irql_previous == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_4 == 2 || sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_2) || sdv_irql_previous_4 == old(sdv_irql_previous) || sdv_irql_previous_4 == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_3 == 2 || sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_4) || sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous) || sdv_irql_previous_3 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1293: int, in_sdv_435: int, in_sdv_436: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_25: int, in_Key: int) returns (out_Tmp_1293: int, out_sdv_435: int, out_sdv_436: int, out_irp_3: int, out_packet_7: int)
{
  var vslice_dummy_var_504: int;

  entry:
    out_Tmp_1293, out_sdv_435, out_sdv_436, out_irp_3, out_packet_7 := in_Tmp_1293, in_sdv_435, in_sdv_436, in_irp_3, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_25 != 0;
    assume in_DeviceObject_25 > 0;
    call {:si_unique_call 4081} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_25), in_Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 4084} out_sdv_436 := sdv_containing_record(out_packet_7, 64);
    out_irp_3 := out_sdv_436;
    call {:si_unique_call 4085} Sbp2StartIo#1(in_DeviceObject_25, out_irp_3);
    goto anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 4082} out_Tmp_1293 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1293 != 0;
    assume out_Tmp_1293 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    havoc vslice_dummy_var_504;
    Mem_T.INT4[out_Tmp_1293] := vslice_dummy_var_504;
    call {:si_unique_call 4083} out_sdv_435 := sdv_InterlockedDecrement(out_Tmp_1293);
    assume {:nonnull} out_Tmp_1293 != 0;
    assume out_Tmp_1293 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_435 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 4086} {:si_old_unique_call 1} out_Tmp_1293, out_sdv_435, out_sdv_436, out_irp_3, out_packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(out_Tmp_1293, out_sdv_435, out_sdv_436, out_irp_3, out_packet_7, in_deviceExtension, in_DeviceObject_25, in_Key);
    return;

  anon10_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1293: int, in_sdv_435: int, in_sdv_436: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_25: int, in_Key: int) returns (out_Tmp_1293: int, out_sdv_435: int, out_sdv_436: int, out_irp_3: int, out_packet_7: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_555: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_555: int, out_entry_3: int)
{

  entry:
    out_qIrp, out_sdv_555, out_entry_3 := in_qIrp, in_sdv_555, in_entry_3;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon184_Else;

  anon184_Else:
    call {:si_unique_call 4087} out_sdv_555 := sdv_containing_record(out_entry_3, 64);
    out_qIrp := out_sdv_555;
    goto anon224_Then;

  anon224_Then:
    assume {:partition} out_qIrp != in_Irp_20;
    assume {:nonnull} out_entry_3 != 0;
    assume out_entry_3 > 0;
    havoc out_entry_3;
    goto anon224_Then_dummy;

  anon224_Then_dummy:
    call {:si_unique_call 4088} {:si_old_unique_call 1} out_qIrp, out_sdv_555, out_entry_3 := Sbp2StartIo#0_loop_L166(out_qIrp, out_sdv_555, out_entry_3, in_Irp_20);
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_555: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_555: int, out_entry_3: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_555: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_555: int, out_entry_3: int)
{

  entry:
    out_qIrp, out_sdv_555, out_entry_3 := in_qIrp, in_sdv_555, in_entry_3;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon184_Else;

  anon184_Else:
    call {:si_unique_call 4089} out_sdv_555 := sdv_containing_record(out_entry_3, 64);
    out_qIrp := out_sdv_555;
    goto anon224_Then;

  anon224_Then:
    assume {:partition} out_qIrp != in_Irp_20;
    assume {:nonnull} out_entry_3 != 0;
    assume out_entry_3 > 0;
    havoc out_entry_3;
    goto anon224_Then_dummy;

  anon224_Then_dummy:
    call {:si_unique_call 4090} {:si_old_unique_call 1} out_qIrp, out_sdv_555, out_entry_3 := Sbp2StartIo#1_loop_L166(out_qIrp, out_sdv_555, out_entry_3, in_Irp_20);
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_555: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_555: int, out_entry_3: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeDeviceExtension#1_loop_L56(in_i_9: int, in_context_4: int, in_PdoExtension_28: int) returns (out_i_9: int, out_context_4: int)
{

  entry:
    out_i_9, out_context_4 := in_i_9, in_context_4;
    goto L56, exit;

  exit:
    return;

  L56:
    assume {:CounterLoop 8} {:Counter "i_9"} true;
    goto anon67_Else;

  anon67_Else:
    assume {:partition} 8 > out_i_9;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    havoc out_context_4;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_9 := out_i_9 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    havoc out_i_9;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L56(in_i_9: int, in_context_4: int, in_PdoExtension_28: int) returns (out_i_9: int, out_context_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_504: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_504: int)
{

  entry:
    out_context_4, out_oldContext, out_vslice_dummy_var_504 := in_context_4, in_oldContext, in_vslice_dummy_var_504;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon73_Else;

  anon73_Else:
    assume {:partition} out_context_4 != 0;
    out_oldContext := out_context_4;
    call {:si_unique_call 4091} out_vslice_dummy_var_504 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    havoc out_context_4;
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    call {:si_unique_call 4092} {:si_old_unique_call 1} out_context_4, out_oldContext, out_vslice_dummy_var_504 := Sbp2InitializeDeviceExtension#1_loop_L106(out_context_4, out_oldContext, out_vslice_dummy_var_504);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_504: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_504: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 8} Sbp2InitializeDeviceExtension#1_loop_L105(in_i_9: int, in_Tmp_2608: int, in_Tmp_2610: int, in_Tmp_2612: int, in_context_4: int, in_Tmp_2615: int, in_oldContext: int, in_sdv_851: int, in_sdv_852: int, in_Tmp_2620: int, in_Tmp_2621: int, in_PdoExtension_28: int) returns (out_i_9: int, out_Tmp_2608: int, out_Tmp_2610: int, out_Tmp_2612: int, out_context_4: int, out_Tmp_2615: int, out_oldContext: int, out_sdv_851: int, out_sdv_852: int, out_Tmp_2620: int, out_Tmp_2621: int)
{

  entry:
    out_i_9, out_Tmp_2608, out_Tmp_2610, out_Tmp_2612, out_context_4, out_Tmp_2615, out_oldContext, out_sdv_851, out_sdv_852, out_Tmp_2620, out_Tmp_2621 := in_i_9, in_Tmp_2608, in_Tmp_2610, in_Tmp_2612, in_context_4, in_Tmp_2615, in_oldContext, in_sdv_851, in_sdv_852, in_Tmp_2620, in_Tmp_2621;
    goto L105, exit;

  exit:
    return;

  L105:
    assume {:CounterLoop 8} {:Counter "i_9"} true;
    goto anon72_Else;

  anon72_Else:
    assume {:partition} 8 > out_i_9;
    out_oldContext := out_context_4;
    call {:si_unique_call 4094} out_sdv_852 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_context_4 := out_sdv_852;
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_context_4 != 0;
    call {:si_unique_call 4093} out_sdv_851 := sdv_containing_record(out_context_4, 8);
    out_context_4 := out_sdv_851;
    goto anon87_Else;

  anon87_Else:
    assume {:partition} out_context_4 != 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2615 := out_i_9;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    havoc out_Tmp_2621;
    assume {:nonnull} out_Tmp_2621 != 0;
    assume out_Tmp_2621 > 0;
    havoc out_Tmp_2620;
    assume {:nonnull} out_Tmp_2620 != 0;
    assume out_Tmp_2620 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2612 := out_i_9;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    havoc out_Tmp_2608;
    assume {:nonnull} out_Tmp_2608 != 0;
    assume out_Tmp_2608 > 0;
    havoc out_Tmp_2610;
    assume {:nonnull} out_Tmp_2610 != 0;
    assume out_Tmp_2610 > 0;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_28 != 0;
    assume in_PdoExtension_28 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_9 := out_i_9 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    call {:si_unique_call 4095} {:si_old_unique_call 1} out_i_9, out_Tmp_2608, out_Tmp_2610, out_Tmp_2612, out_context_4, out_Tmp_2615, out_oldContext, out_sdv_851, out_sdv_852, out_Tmp_2620, out_Tmp_2621 := Sbp2InitializeDeviceExtension#1_loop_L105(out_i_9, out_Tmp_2608, out_Tmp_2610, out_Tmp_2612, out_context_4, out_Tmp_2615, out_oldContext, out_sdv_851, out_sdv_852, out_Tmp_2620, out_Tmp_2621, in_PdoExtension_28);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L105(in_i_9: int, in_Tmp_2608: int, in_Tmp_2610: int, in_Tmp_2612: int, in_context_4: int, in_Tmp_2615: int, in_oldContext: int, in_sdv_851: int, in_sdv_852: int, in_Tmp_2620: int, in_Tmp_2621: int, in_PdoExtension_28: int) returns (out_i_9: int, out_Tmp_2608: int, out_Tmp_2610: int, out_Tmp_2612: int, out_context_4: int, out_Tmp_2615: int, out_oldContext: int, out_sdv_851: int, out_sdv_852: int, out_Tmp_2620: int, out_Tmp_2621: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_643: int, in_sdv_201: int, in_sdv_202: int, in_sdv_203: int, in_sdv_207: int, in_currentListItem: int, in_Tmp_650: int, in_sdv_208: int, in_Tmp_651: int, in_Tmp_652: int, in_Tmp_654: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_643: int, out_sdv_202: int, out_currentListItem: int, out_Tmp_650: int, out_Tmp_651: int, out_Tmp_652: int, out_Tmp_654: int)
{
  var vslice_dummy_var_505: int;

  entry:
    out_nextListItem_1, out_Tmp_643, out_sdv_202, out_currentListItem, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_654 := in_nextListItem_1, in_Tmp_643, in_sdv_202, in_currentListItem, in_Tmp_650, in_Tmp_651, in_Tmp_652, in_Tmp_654;
    goto L62, exit;

  exit:
    return;

  L62:
    out_currentListItem := out_nextListItem_1;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_651;
    assume {:nonnull} out_Tmp_651 != 0;
    assume out_Tmp_651 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_643;
    assume {:nonnull} out_Tmp_643 != 0;
    assume out_Tmp_643 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_650;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_650 != 0;
    assume out_Tmp_650 > 0;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_650 != 0;
    assume out_Tmp_650 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_654;
    assume {:nonnull} out_Tmp_654 != 0;
    assume out_Tmp_654 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_652;
    assume {:nonnull} out_Tmp_652 != 0;
    assume out_Tmp_652 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_nextListItem_1;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    havoc vslice_dummy_var_505;
    call {:si_unique_call 4096} out_sdv_202 := sdv_containing_record(vslice_dummy_var_505, 0);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_currentListItem != out_sdv_202;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 4097} {:si_old_unique_call 1} out_nextListItem_1, out_Tmp_643, out_sdv_202, out_currentListItem, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_654 := Sbp2UpdateNodeInformation#1_loop_L62(out_nextListItem_1, out_Tmp_643, in_sdv_201, out_sdv_202, in_sdv_203, in_sdv_207, out_currentListItem, out_Tmp_650, in_sdv_208, out_Tmp_651, out_Tmp_652, out_Tmp_654, in_PdoExtension_10);
    return;
}



procedure {:LoopProcedure} Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_643: int, in_sdv_201: int, in_sdv_202: int, in_sdv_203: int, in_sdv_207: int, in_currentListItem: int, in_Tmp_650: int, in_sdv_208: int, in_Tmp_651: int, in_Tmp_652: int, in_Tmp_654: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_643: int, out_sdv_202: int, out_currentListItem: int, out_Tmp_650: int, out_Tmp_651: int, out_Tmp_652: int, out_Tmp_654: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_522: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_522: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_522 := in_nextEntry_2, in_queueEntry2_1, in_sdv_522;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 4098} out_sdv_522 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_522;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_522: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_522: int);
  free ensures {:va_keep} out_queueEntry2_1 == in_nextEntry_2 || out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_522 == in_nextEntry_2 || out_sdv_522 == in_sdv_522;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_522: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_522: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_522 := in_nextEntry_2, in_queueEntry2_1, in_sdv_522;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 4099} out_sdv_522 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_522;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_522: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_522: int);
  free ensures {:va_keep} out_queueEntry2_1 == in_nextEntry_2 || out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_522 == in_nextEntry_2 || out_sdv_522 == in_sdv_522;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_134 := in_nextListItem, in_entry, in_sdv_134;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon206_Else;

  anon206_Else:
    call {:si_unique_call 4100} out_sdv_134 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_134;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon255_Else;

  anon255_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon255_Else_dummy;

  anon255_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int);
  free ensures {:va_keep} out_nextListItem == in_entry || out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_sdv_134 == in_entry || out_sdv_134 == in_sdv_134;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_134 := in_nextListItem, in_entry, in_sdv_134;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon206_Else;

  anon206_Else:
    call {:si_unique_call 4101} out_sdv_134 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_134;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon255_Else;

  anon255_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon255_Else_dummy;

  anon255_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int);
  free ensures {:va_keep} out_nextListItem == in_entry || out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_sdv_134 == in_entry || out_sdv_134 == in_sdv_134;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_973: int, dup_assertVar: bool);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_973: int, dup_assertVar: bool)
{

  start:
    call Tmp_973, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


